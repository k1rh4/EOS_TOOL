(data (i32.const 4) "\a0f\00\00")
(data (i32.const 16) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 80) "cannot pass end iterator to modify\00")
(data (i32.const 128) "cannot create objects in table of another contract\00")
(data (i32.const 192) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 256) "invalid symbol name\00")
(data (i32.const 288) "write\00")
(data (i32.const 304) "object passed to modify is not in multi_index\00")
(data (i32.const 352) "cannot modify objects in table of another contract\00")
(data (i32.const 416) "updater cannot change primary key when modifying an object\00")
(data (i32.const 480) "error reading iterator\00")
(data (i32.const 512) "read\00")
(data (i32.const 528) "cannot pass end iterator to erase\00")
(data (i32.const 576) "cannot increment end iterator\00")
(data (i32.const 608) "object passed to erase is not in multi_index\00")
(data (i32.const 656) "cannot erase objects in table of another contract\00")
(data (i32.const 720) "attempt to remove object that was not in multi_index\00")
(data (i32.const 784) "validator is not in validators list\00")
(data (i32.const 832) "singleton does not exist\00")
(data (i32.const 864) "user is not an account\00")
(data (i32.const 896) "attempt to add asset with different symbol\00")
(data (i32.const 944) "addition underflow\00")
(data (i32.const 976) "addition overflow\00")
(data (i32.const 1008) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 1072) "exceed max delegated eos\00")
(data (i32.const 1104) "exceed max stake times\00")
(data (i32.const 1136) "active\00")
(data (i32.const 1152) "eosio\00")
(data (i32.const 1168) "deposit\00")
(data (i32.const 1184) "rentcpu\00")
(data (i32.const 1200) "rentnet\00")
(data (i32.const 1216) "can\'t unstake in 3 days\00")
(data (i32.const 1248) "refund\00")
(data (i32.const 1264) "undelegatebw\00")
(data (i32.const 1280) "no available record\00")
(data (i32.const 1312) "onerror\00")
(data (i32.const 1328) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 9792) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$6 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$7 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$8 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$9 (param i32)))
(import "env" "db_idx64_upperbound" (func $fimport$10 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$13 (param i32)))
(import "env" "db_store_i64" (func $fimport$14 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$15 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$16 (param i32 i32)))
(import "env" "is_account" (func $fimport$17 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$19 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$20 (param i64)))
(import "env" "require_auth2" (func $fimport$21 (param i64 i64)))
(import "env" "send_inline" (func $fimport$22 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN8eosstake9eos_stake9setconfigEttmN5eosio5assetE" (func $5))
(export "_ZN8eosstake9eos_stake9delconfigEv" (func $14))
(export "_ZN8eosstake9eos_stake5stakeEyyN5eosio5assetES2_" (func $16))
(export "_ZN8eosstake9eos_stake7unstakeEm" (func $26))
(export "_ZN8eosstake9eos_stake12addvalidatorEy" (func $44))
(export "_ZN8eosstake9eos_stake11rmvalidatorEy" (func $45))
(export "apply" (func $47))
(export "malloc" (func $56))
(export "free" (func $59))
(export "memcmp" (func $63))
(table $0 7 7 anyfunc)
(elem (i32.const 0) $64 $16 $14 $45 $5 $26 $44)



int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [480])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $60([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [512])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [512])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	CALL eosio_assert(((int_32)($4 & [-2]) != (int_32)[12]), [512])
	CALL memcpy(($6 + [12]), ($7 + [12]), [2])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $19(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $61($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $62 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $60(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $62($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $61($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $61($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [512])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $29 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [16])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3102536759398591488, (int_64)-3102536759398591488)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $28($0, $3)
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [16])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [80])
	CALL $41($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $42($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [480])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $60([20])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[3]), [512])
	CALL memcpy($5, $6, [4])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[4]), [512])
	CALL memcpy(($5 + [4]), ($6 + [4]), [4])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-3102536759398591488
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-3102536759398591488
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $43(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $61($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $20($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [288])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [288])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $24(CALL $23($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $60($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $62($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $61($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [288])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [288])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [288])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [288])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [288])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [288])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [288])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [288])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [288])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $60(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $62($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $61($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $61($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [288])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [288])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_upperbound(*($8), *($8 + [8]), (int_64)-3020371202648571904, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [16])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $34($4, CALL $fimport$4(*($4), *($4 + [8]), (int_64)-3020371202648571904, $5))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [16])
	
.LABEL $label$4
	*(($2 + [64])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN8eosstake9eos_stake7unstakeEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	int_32 $23
	$23 = (*([0] + [4]) - [304])
	*([0] + [4]) = $23
	*((($23 + [232]) + [32])) = [0]
	*($23 + [248]) = (int_64)-1
	*($23 + [256]) = (int_64)0
	$17 = *($0)
	*($23 + [232]) = $17
	*($23 + [240]) = $17
	$15 = [0]
	$9 = CALL db_find_i64($17, $17, (int_64)4982871454518345728, (int_64)4982871454518345728)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$15 = CALL $7(($23 + [232]), $9)
	CALL eosio_assert(((int_32)*($15 + [24]) == (int_32)($23 + [232])), [16])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [832])
	$2 = *($15 + [2])
	$15 = *($15 + [4])
	*((($23 + [192]) + [32])) = [0]
	*($23 + [208]) = (int_64)-1
	*($23 + [216]) = (int_64)0
	$17 = *($0)
	*($23 + [192]) = $17
	*($23 + [200]) = $17
	*($23 + [228]) = [0]
	*($23 + [184]) = ($23 + [192])
	*($23) = (CASTING uint_64)(uint_32 ((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) - $15))
	CALL $27(($23 + [176]), ($23 + [184]), $23)
	*((($23 + [136]) + [32])) = [0]
	*($23 + [152]) = (int_64)-1
	*($23 + [160]) = (int_64)0
	$17 = *($0)
	*($23 + [136]) = $17
	*($23 + [144]) = $17
	$15 = CALL db_find_i64($17, $17, (int_64)-3102536759398591488, (int_64)-3102536759398591488)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*(CALL $28(($23 + [136]), $15) + [8]) == (int_32)($23 + [136])), [16])
	goto $label$2 
	
.LABEL $label$3
	*($23) = (int_64)0
	CALL $29(($23 + [136]), $23, *($0))
	
.LABEL $label$2
	$15 = *(($23 + [164]))
	if ( ((int_32)$15 == (int_32)*(($23 + [160]))) ){ goto $label$5 }
	$15 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [8]) == (int_32)($23 + [136])), [16])
	goto $label$4 
	
.LABEL $label$5
	$15 = [0]
	$9 = CALL db_find_i64(*($23 + [136]), *(($23 + [144])), (int_64)-3102536759398591488, (int_64)-3102536759398591488)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$4 }
	$15 = CALL $28(($23 + [136]), $9)
	CALL eosio_assert(((int_32)*($15 + [8]) == (int_32)($23 + [136])), [16])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [832])
	$17 = *($15)
	$3 = (CASTING uint_32)(uint_64 $17)
	CALL eosio_assert(($3 <= ((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)) + [-259200])), [1216])
	$4 = (CASTING uint_32)(uint_64 (uint_64)$17 >> (uint_64)(int_64)32))
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [1152]
	$18 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$17 > (uint_64)(int_64)4) ){ goto $label$11 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$9 = ($9 + [165])
	goto $label$9 
	
.LABEL $label$11
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$7
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$6 }
	*(($23 + [128])) = [0]
	*($23 + [112]) = (int_64)-1
	*($23 + [120]) = (int_64)0
	$17 = *($0)
	*($23 + [104]) = $17
	*($23 + [96]) = $18
	$15 = CALL db_find_i64($18, $17, (int_64)-5001342326447013888, $17)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$12 }
	$15 = CALL $30(($23 + [96]), $15)
	CALL eosio_assert(((int_32)*($15 + [48]) == (int_32)($23 + [96])), [16])
	if ( ((uint_32)(*($15 + [8]) + [259200]) > (uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$12 }
	$8 = *($0)
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [1136]
	$18 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$18 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$9 = ($9 + [165])
	goto $label$16 
	
.LABEL $label$18
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$14
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$13 }
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [1152]
	$20 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$17 > (uint_64)(int_64)4) ){ goto $label$24 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$9 = ($9 + [165])
	goto $label$22 
	
.LABEL $label$24
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$20
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$19 }
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [1248]
	$21 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$30 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$9 = ($9 + [165])
	goto $label$28 
	
.LABEL $label$30
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$26
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$21 = ((int_64)$19 | (int_64)$21)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$25 }
	*(($9 = ($23 + [24]))) = [0]
	*($23 + [288]) = $8
	*($23 + [8]) = $21
	*($23 + [16]) = (int_64)0
	*($23) = $20
	*(($15 = CALL $60([16]))) = $8
	*($15 + [8]) = $18
	*(($14 = ($23 + [32]))) = [0]
	$7 = ($15 + [16])
	*($9) = $7
	*(($23 + [20])) = $7
	*($23 + [16]) = $15
	*($23 + [28]) = [0]
	*(($23 + [36])) = [0]
	CALL $20(($23 + [28]), [8])
	$15 = *($23 + [28])
	CALL eosio_assert(((int_32)(*($14) - $15) > (int_32)[7]), [288])
	CALL memcpy($15, ($23 + [288]), [8])
	CALL $21(($23 + [48]), $23)
	$15 = *($23 + [48])
	CALL send_inline($15, (*($23 + [52]) - $15))
	$15 = *($23 + [48])
	if ( ($15 == 0) ){ goto $label$31 }
	*($23 + [52]) = $15
	CALL $61($15)
	
.LABEL $label$31
	$15 = *($23 + [28])
	if ( ($15 == 0) ){ goto $label$32 }
	*(($23 + [32])) = $15
	CALL $61($15)
	
.LABEL $label$32
	$15 = *($23 + [16])
	if ( ($15 == 0) ){ goto $label$12 }
	*(($23 + [20])) = $15
	CALL $61($15)
	
.LABEL $label$12
	*($23) = (int_64)0
	CALL $31(($23 + [88]), ($23 + [184]), $23)
	$22 = $2
	$9 = *($23 + [180])
	$14 = *($23 + [92])
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$35 }
	$7 = (($23 + [48]) + [28])
	$6 = ($23 + [32])
	$5 = ($23 + [16])
	$10 = ($5 + [12])
	$11 = ($5 + [4])
	$12 = ($23 + [68])
	$13 = ($23 + [72])
	$15 = $2
	
.LOOP $label$37:
	$22 = ($15 + [-1])
	if ( (($15 & [65535]) == 0) ){ goto $label$36 }
	$8 = *($0)
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [1136]
	$18 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$43 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$9 = ($9 + [165])
	goto $label$41 
	
.LABEL $label$43
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$39
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$38 }
	$17 = (int_64)0
	$16 = (int_64)59
	$15 = [1152]
	$20 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$17 > (uint_64)(int_64)4) ){ goto $label$49 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$9 = ($9 + [165])
	goto $label$47 
	
.LABEL $label$49
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$45
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$44 }
	$17 = (int_64)0
	$19 = (int_64)59
	$15 = [1264]
	$21 = (int_64)0
	
.LOOP $label$50:
	$16 = (int_64)0
	if ( ((uint_64)$17 > (uint_64)(int_64)11) ){ goto $label$51 }
	$9 = *($15)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$9 = ($9 + [165])
	goto $label$52 
	
.LABEL $label$53
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$51
	$15 = ($15 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$21 = ((int_64)$16 | (int_64)$21)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$50 }
	*(($23 + [8])) = *($14 + [8])
	*($5) = *($14 + [24])
	*($10) = *(($14 + [36]))
	*(($5 + [8])) = *(($14 + [32]))
	*($11) = *(($14 + [28]))
	*($23) = $8
	*($6) = *($14 + [40])
	*(($6 + [8])) = *(($14 + [48]))
	*($23 + [48]) = $20
	*((($23 + [48]) + [8])) = $21
	*(($9 = (($23 + [48]) + [16]))) = [0]
	*($12) = [0]
	*($13) = [0]
	$15 = CALL $60([16])
	*($9) = $15
	*($15) = $8
	*($15 + [8]) = $18
	*($7) = [0]
	*(($14 = (($23 + [48]) + [32]))) = [0]
	$15 = ($15 + [16])
	*($13) = $15
	*($12) = $15
	*((($23 + [48]) + [36])) = [0]
	CALL $20($7, [48])
	$15 = *($7)
	*((($23 + [288]) + [8])) = *($14)
	*($23 + [292]) = $15
	*($23 + [288]) = $15
	*($23 + [272]) = ($23 + [288])
	*($23 + [280]) = $23
	CALL $22(($23 + [280]), ($23 + [272]))
	CALL $21(($23 + [288]), ($23 + [48]))
	$15 = *($23 + [288])
	CALL send_inline($15, (*($23 + [292]) - $15))
	$15 = *($23 + [288])
	if ( ($15 == 0) ){ goto $label$54 }
	*($23 + [292]) = $15
	CALL $61($15)
	
.LABEL $label$54
	$15 = *($7)
	if ( ($15 == 0) ){ goto $label$55 }
	*($14) = $15
	CALL $61($15)
	
.LABEL $label$55
	$15 = *($9)
	if ( ($15 == 0) ){ goto $label$56 }
	*($12) = $15
	CALL $61($15)
	
.LABEL $label$56
	$17 = *($23 + [88])
	*($23) = $17
	$15 = (CASTING uint_32)(uint_64 (uint_64)$17 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$15) != (int_32)[0]), [528])
	CALL $32($23)
	CALL $33(*($23 + [184]), $15)
	$17 = *($23)
	*($23 + [88]) = $17
	$15 = $22
	$9 = *($23 + [180])
	$14 = (CASTING uint_32)(uint_64 (uint_64)$17 >> (uint_64)(int_64)32)
	if ( ((int_32)$14) != (int_32)$9) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	if ( ((int_32)$14 == (int_32)$9) ){ goto $label$35 }
	*($23) = $3
	*($23 + [4]) = ($4 + [1])
	CALL $29(($23 + [136]), $23, *($0))
	$14 = *($23 + [120])
	if ( $14 ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$35
	CALL eosio_assert(((int_32)($22 & [65535]) != (int_32)($2 & [65535])), [1280])
	$17 = CALL current_time()
	*($23 + [4]) = [0]
	*($23) = ((uint_64)$17 / (uint_64)(int_64)1000000)
	CALL $29(($23 + [136]), $23, *($0))
	$14 = *($23 + [120])
	if ( ($14 == 0) ){ goto $label$33 }
	
.LABEL $label$34
	$7 = ($23 + [124])
	$15 = *($7)
	if ( ((int_32)$15 == (int_32)$14) ){ goto $label$58 }
	
.LOOP $label$59:
	$15 = ($15 + [-24])
	$9 = *($15)
	*($15) = [0]
	if ( ($9 == 0) ){ goto $label$60 }
	CALL $61($9)
	
.LABEL $label$60
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$59 }
	$15 = *(($23 + [120]))
	goto $label$57 
	
.LABEL $label$58
	$15 = $14
	
.LABEL $label$57
	*($7) = $14
	CALL $61($15)
	
.LABEL $label$33
	$14 = *($23 + [160])
	if ( ($14 == 0) ){ goto $label$61 }
	$7 = ($23 + [164])
	$15 = *($7)
	if ( ((int_32)$15 == (int_32)$14) ){ goto $label$63 }
	
.LOOP $label$64:
	$15 = ($15 + [-24])
	$9 = *($15)
	*($15) = [0]
	if ( ($9 == 0) ){ goto $label$65 }
	CALL $61($9)
	
.LABEL $label$65
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$64 }
	$15 = *(($23 + [160]))
	goto $label$62 
	
.LABEL $label$63
	$15 = $14
	
.LABEL $label$62
	*($7) = $14
	CALL $61($15)
	
.LABEL $label$61
	$14 = *($23 + [216])
	if ( ($14 == 0) ){ goto $label$66 }
	$7 = ($23 + [220])
	$15 = *($7)
	if ( ((int_32)$15 == (int_32)$14) ){ goto $label$68 }
	
.LOOP $label$69:
	$15 = ($15 + [-24])
	$9 = *($15)
	*($15) = [0]
	if ( ($9 == 0) ){ goto $label$70 }
	CALL $61($9)
	
.LABEL $label$70
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$69 }
	$15 = *(($23 + [216]))
	goto $label$67 
	
.LABEL $label$68
	$15 = $14
	
.LABEL $label$67
	*($7) = $14
	CALL $61($15)
	
.LABEL $label$66
	$14 = *($23 + [256])
	if ( ($14 == 0) ){ goto $label$71 }
	$7 = ($23 + [260])
	$15 = *($7)
	if ( ((int_32)$15 == (int_32)$14) ){ goto $label$73 }
	
.LOOP $label$74:
	$15 = ($15 + [-24])
	$9 = *($15)
	*($15) = [0]
	if ( ($9 == 0) ){ goto $label$75 }
	CALL $61($9)
	
.LABEL $label$75
	if ( ((int_32)$14 != (int_32)$15) ){ goto $label$74 }
	$15 = *(($23 + [256]))
	goto $label$72 
	
.LABEL $label$73
	$15 = $14
	
.LABEL $label$72
	*($7) = $14
	CALL $61($15)
	
.LABEL $label$71
	*([0] + [4]) = ($23 + [304])
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [96])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = [0]
	$4 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $3)
	
.LABEL $label$1
	*(($8 + [40])) = (int_64)1398362884
	*($8 + [32]) = (int_64)0
	*($8 + [24]) = (int_64)0
	CALL eosio_assert([1], [192])
	$5 = (int_64)5462355
	
.LOOP $label$5:
	$6 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$6 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($6, [256])
	*($8 + [84]) = $4
	*($8 + [80]) = $4
	*($8 + [88]) = ($4 + $3)
	*($8 + [48]) = ($8 + [80])
	*($8 + [64]) = ($8 + [24])
	CALL $55(($8 + [64]), ($8 + [48]))
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($4)
	
.LABEL $label$8
	*((($8 + [48]) + [12])) = *(($8 + [44]))
	*(($1 = (($8 + [48]) + [8]))) = *(($8 + [40]))
	$6 = *($8 + [24])
	*($8 + [48]) = *($8 + [32])
	*($8 + [52]) = *((($8 + [24]) + [12]))
	$4 = *($8 + [28])
	$3 = *($8 + [26])
	*((($8 + [64]) + [8])) = *($1)
	*($8 + [64]) = *($8 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$7 = *((*($1) + $7))
	
.LABEL $label$9
	$5 = *((($8 + [64]) + [8]))
	*((($8 + [80]) + [8])) = $5
	*((($8 + [8]) + [8])) = $5
	$5 = *($8 + [64])
	*($8 + [80]) = $5
	*($8 + [8]) = $5
	CALL void $1((int_32 ($6 & [65535])), (int_32 ($3 & [65535])), (int_32 $4), (int_32 ($8 + [8])), (int_32 $7))
	*([0] + [4]) = ($8 + [96])
	return [1]
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $60(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $62($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $61($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $61($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $42 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [128])
	*(($4 = CALL $60([20])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [288])
	CALL memcpy(($7 + [16]), $4, [4])
	CALL eosio_assert([1], [288])
	CALL memcpy((($7 + [16]) | [4]), ($4 + [4]), [4])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-3102536759398591488, $2, (int_64)-3102536759398591488, ($7 + [16]), [8])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-3102536759398591488) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-3102536759398591487
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)-3102536759398591488
	$5 = *($4 + [12])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-3102536759398591488
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $43(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $61($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $41 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [304])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [352])
	*($1) = *(*($3))
	CALL eosio_assert([1], [416])
	CALL eosio_assert([1], [288])
	CALL memcpy($4, $1, [4])
	CALL eosio_assert([1], [288])
	CALL memcpy(($4 | [4]), ($1 + [4]), [4])
	CALL db_update_i64(*(($1 + [12])), $2, $4, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-3102536759398591488) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-3102536759398591487
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $60(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $62($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $61($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $61($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1312]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1152]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [1328])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1312]
	$7 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$21 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$17
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*($9 + [104]) = $0
	if ( ((int_64)$2 > (int_64)-3102536759825661953) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)-4848572804388540928) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-4417316219328135168) ){ goto $label$24 }
	if ( ((int_64)$2 != (int_64)-4157661383434960896) ){ goto $label$14 }
	*($9 + [84]) = [0]
	*($9 + [80]) = [1]
	*($9 + [24 align=4]) = *($9 + [80])
	CALL $50(($9 + [104]), ($9 + [24]))
	goto $label$14 
	
.LABEL $label$26
	if ( ((int_64)$2 == (int_64)-3102536759825661952) ){ goto $label$23 }
	if ( ((int_64)$2 == (int_64)3626439237273282928) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)5378012970202693632) ){ goto $label$14 }
	*($9 + [92]) = [0]
	*($9 + [88]) = [2]
	*($9 + [16 align=4]) = *($9 + [88])
	CALL $49(($9 + [104]), ($9 + [16]))
	goto $label$14 
	
.LABEL $label$25
	*($9 + [60]) = [0]
	*($9 + [56]) = [3]
	*($9 + [48 align=4]) = *($9 + [56])
	CALL $52(($9 + [104]), ($9 + [48]))
	goto $label$14 
	
.LABEL $label$24
	*($9 + [100]) = [0]
	*($9 + [96]) = [4]
	*($9 + [8 align=4]) = *($9 + [96])
	CALL $48(($9 + [104]), ($9 + [8]))
	goto $label$14 
	
.LABEL $label$23
	*($9 + [76]) = [0]
	*($9 + [72]) = [5]
	*($9 + [32 align=4]) = *($9 + [72])
	CALL $51(($9 + [104]), ($9 + [32]))
	goto $label$14 
	
.LABEL $label$22
	*($9 + [68]) = [0]
	*($9 + [64]) = [6]
	*($9 + [40 align=4]) = *($9 + [64])
	CALL $52(($9 + [104]), ($9 + [40]))
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [112])
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $61($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $61($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC _ZN8eosstake9eos_stake11rmvalidatorEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	$2 = *($0)
	*($6) = $2
	*($6 + [8]) = $2
	*($6 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)-4157660946114805760, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $18($6, $0)
	$4 = [500]
	
.LOOP $label$2:
	$5 = [0]
	$3 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($3, [528])
	CALL eosio_assert($3, [576])
	$3 = CALL db_next_i64(*($0 + [20]), ($6 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $18($6, $3)
	
.LABEL $label$3
	CALL $46($6, $0)
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ($4 << [16])
	$4 = ($4 + [-1])
	$0 = $5
	if ( ((int_32)int_32($3 >> [16]) > (int_32)[1]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = *($6 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$3 = ($6 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $61($5)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($6 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($3) = $4
	CALL $61($0)
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [48])
}

void .FUNC _ZN8eosstake9eos_stake12addvalidatorEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [80])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	CALL eosio_assert(CALL $fimport$17($1), [864])
	*(($4 = ($7 + [40]))) = [0]
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = (int_64)0
	$5 = *($0)
	*($7 + [8]) = $5
	*($7 + [16]) = $5
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$2()), [128])
	*(($0 = CALL $60([24])) + [8]) = ($7 + [8])
	*($0) = $1
	CALL eosio_assert([1], [288])
	CALL memcpy(($7 + [64]), $0, [8])
	$1 = *($0)
	$2 = CALL db_store_i64(*($7 + [16]), (int_64)-2764395865996525568, $5, $1, ($7 + [64]), [8])
	*($0 + [12]) = $2
	if ( (uint_64)($1 <= *($7 + [24])) ){ goto $label$1 }
	*(($7 + [24])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($7 + [56]) = $0
	$5 = *($0)
	*($7 + [64]) = $5
	*($7 + [52]) = $2
	$6 = ($7 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*($4)) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $2
	*($7 + [56]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $25(($7 + [32]), ($7 + [56]), ($7 + [64]), ($7 + [52]))
	
.LABEL $label$2
	$0 = *($7 + [56])
	*($7 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL $61($0)
	
.LABEL $label$4
	$2 = *($7 + [32])
	if ( ($2 == 0) ){ goto $label$5 }
	$4 = ($7 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	CALL $61($3)
	
.LABEL $label$9
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($7 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $2
	
.LABEL $label$6
	*($4) = $2
	CALL $61($0)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [80])
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [512])
	CALL memcpy(($5 + [8]), $3, [4])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

int_32 .FUNC $60 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [9884])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $8 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [304])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [352])
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	CALL eosio_assert([1], [416])
	*($4 + [40]) = ($4 + [24])
	*($4 + [36]) = $4
	*($4 + [32]) = $4
	CALL $12(($4 + [32]), $1)
	CALL db_update_i64(*(($1 + [28])), $2, $4, [24])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)4982871454518345728) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)4982871454518345729
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [48])
}

void .FUNC $9 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [128])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $60([40])
	CALL $10($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)4982871454518345728
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)4982871454518345728
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $11(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $61($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $6 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [16])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)4982871454518345728, (int_64)4982871454518345728)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $7($0, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [16])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [80])
	CALL $8($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $9($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [480])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $60([40])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [192])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [256])
	*($4 + [24]) = $0
	CALL $13(($8 + [32]), $4)
	*($4 + [28]) = $1
	*($8 + [24]) = $4
	*($8 + [16]) = (int_64)4982871454518345728
	$6 = *($4 + [28])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = (int_64)4982871454518345728
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $11($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $61($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN8eosstake9eos_stake9setconfigEttmN5eosio5assetE (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [56])) = [0]
	*($6 + [40]) = (int_64)-1
	*($6 + [48]) = (int_64)0
	$5 = *($0)
	*($6 + [24]) = $5
	*($6 + [32]) = $5
	*(($6 + [20])) = *(($4 + [12]))
	*(($6 + [16])) = *(($4 + [8]))
	*(($6 + [12])) = *(($4 + [4]))
	*($6 + [2]) = $2
	*($6) = $1
	*($6 + [4]) = $3
	*($6 + [8]) = *($4)
	CALL $6(($6 + [24]), $6, $5)
	$3 = *($6 + [48])
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($6 + [52])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $61($0)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($6 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$2
	*($1) = $3
	CALL $61($4)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [64])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN8eosstake9eos_stake9delconfigEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	*($5 + [24]) = (int_64)0
	$3 = *($0)
	*($5) = $3
	*($5 + [8]) = $3
	$0 = CALL db_find_i64($3, $3, (int_64)4982871454518345728, (int_64)4982871454518345728)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $7($5, $0)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$5), [16])
	CALL eosio_assert([1], [528])
	CALL eosio_assert([1], [576])
	$2 = CALL db_next_i64(*($0 + [28]), ($5 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $7($5, $2)
	
.LABEL $label$2
	CALL $15($5, $0)
	
.LABEL $label$1
	$1 = *($5 + [24])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($5 + [28])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $61($2)
	
.LABEL $label$7
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($5 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $1
	
.LABEL $label$4
	*($4) = $1
	CALL $61($0)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [656])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [720])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $61($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $61($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*(($1 + [28])))
}

void .FUNC _ZN8eosstake9eos_stake5stakeEyyN5eosio5assetES2_ (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [240])
	*([0] + [4]) = $15
	CALL require_auth($1)
	$9 = [0]
	*((($15 + [168]) + [32])) = [0]
	*($15 + [184]) = (int_64)-1
	*($15 + [192]) = (int_64)0
	$11 = *($0)
	*($15 + [168]) = $11
	*($15 + [176]) = $11
	$8 = [0]
	$6 = CALL db_find_i64($11, $11, (int_64)-2764395865996525568, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $17(($15 + [168]), $6)
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)($15 + [168])), [16])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [784])
	*((($15 + [128]) + [32])) = [0]
	*($15 + [144]) = (int_64)-1
	*($15 + [152]) = (int_64)0
	$11 = *($0)
	*($15 + [128]) = $11
	*($15 + [136]) = $11
	$8 = CALL db_find_i64($11, $11, (int_64)4982871454518345728, (int_64)4982871454518345728)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$9 = CALL $7(($15 + [128]), $8)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)($15 + [128])), [16])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [832])
	$1 = *(($9 + [16]))
	$8 = *($9)
	$10 = *($9 + [8])
	CALL eosio_assert(CALL $fimport$17($2), [864])
	$11 = *($3)
	$12 = *($3 + [8])
	CALL eosio_assert(((int_64)*($4 + [8]) == (int_64)$12), [896])
	$11 = ((int_64)$11 + (int_64)*($4))
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [944])
	CALL eosio_assert(((int_64)$11 < (int_64)4611686018427387904), [976])
	CALL eosio_assert(((int_64)$1 == (int_64)$12), [1008])
	CALL eosio_assert(((int_64)$10 >= (int_64)$11), [1072])
	*((($15 + [88]) + [32])) = [0]
	*($15 + [104]) = (int_64)-1
	*($15 + [112]) = (int_64)0
	$11 = *($0)
	*($15 + [88]) = $11
	*($15 + [96]) = $11
	$9 = CALL db_find_i64($11, $11, (int_64)-4157660946114805760, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $18(($15 + [88]), $9)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($15 + [88])), [16])
	if ( ((uint_32)*($9 + [8]) <= (uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) + [-86400])) ){ goto $label$6 }
	CALL eosio_assert((*($9 + [12]) <= ($8 & [65535])), [1104])
	CALL eosio_assert([1], [80])
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($15 + [88])), [304])
	CALL eosio_assert(((int_64)*($15 + [88]) == (int_64)CALL $fimport$2()), [352])
	*($9 + [12]) = (*($9 + [12]) + [1])
	$11 = *($9)
	CALL eosio_assert([1], [416])
	CALL eosio_assert([1], [288])
	CALL memcpy($15, $9, [8])
	CALL eosio_assert([1], [288])
	CALL memcpy(($15 | [8]), ($9 + [8]), [4])
	CALL eosio_assert([1], [288])
	CALL memcpy(($15 | [12]), ($9 + [12]), [2])
	CALL db_update_i64(*($9 + [20]), (int_64)0, $15, [14])
	$9 = ($15 + [104])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$3 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$7
	CALL eosio_assert(((int_32)($8 & [65535]) != (int_32)[0]), [1104])
	$1 = *($0)
	CALL eosio_assert(((int_64)*($15 + [88]) == (int_64)CALL $fimport$2()), [128])
	*(($9 = CALL $60([32])) + [16]) = ($15 + [88])
	*($9) = $2
	$11 = CALL current_time()
	*($9 + [12]) = [1]
	*($9 + [8]) = ((uint_64)$11 / (uint_64)(int_64)1000000)
	CALL eosio_assert([1], [288])
	CALL memcpy($15, $9, [8])
	CALL eosio_assert([1], [288])
	CALL memcpy(($15 | [8]), ($9 + [8]), [4])
	CALL eosio_assert([1], [288])
	CALL memcpy(($15 | [12]), ($9 + [12]), [2])
	$11 = *($9)
	$4 = CALL db_store_i64(*((($15 + [88]) + [8])), (int_64)-4157660946114805760, $1, $11, $15, [14])
	*($9 + [20]) = $4
	if ( (uint_64)($11 <= *((($15 + [88]) + [16]))) ){ goto $label$8 }
	*(($15 + [104])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($15 + [48]) = $9
	$11 = *($9)
	*($15) = $11
	*($15 + [224]) = $4
	$8 = ($15 + [116])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($15 + [120]))) ){ goto $label$5 }
	*($3 + [8]) = $11
	*($3 + [16]) = $4
	*($15 + [48]) = [0]
	*($3) = $9
	*($8) = ($3 + [24])
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert(((int_32)($8 & [65535]) != (int_32)[0]), [1104])
	CALL eosio_assert([1], [80])
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($15 + [88])), [304])
	CALL eosio_assert(((int_64)*($15 + [88]) == (int_64)CALL $fimport$2()), [352])
	$11 = *($9)
	$1 = CALL current_time()
	*($9 + [12]) = [1]
	*($9 + [8]) = ((uint_64)$1 / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$11 == (int_64)*($9)), [416])
	CALL eosio_assert([1], [288])
	CALL memcpy($15, $9, [8])
	CALL eosio_assert([1], [288])
	CALL memcpy(($15 | [8]), ($9 + [8]), [4])
	CALL eosio_assert([1], [288])
	CALL memcpy(($15 | [12]), ($9 + [12]), [2])
	CALL db_update_i64(*($9 + [20]), (int_64)0, $15, [14])
	$9 = ($15 + [104])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$3 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$5
	CALL $19(($15 + [112]), ($15 + [48]), $15, ($15 + [224]))
	
.LABEL $label$4
	$9 = *($15 + [48])
	*($15 + [48]) = [0]
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $61($9)
	
.LABEL $label$3
	$5 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1136]
	$12 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$14 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$3 = ($3 + [165])
	goto $label$12 
	
.LABEL $label$14
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$10
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$1 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$9 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1152]
	$13 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$11 > (uint_64)(int_64)4) ){ goto $label$20 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$3 = ($3 + [165])
	goto $label$18 
	
.LABEL $label$20
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$16
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$15 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1168]
	$14 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$11 > (uint_64)(int_64)6) ){ goto $label$26 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$3 = ($3 + [165])
	goto $label$24 
	
.LABEL $label$26
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$22
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$1 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$21 }
	CALL eosio_assert([1], [192])
	$11 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$3 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	$3 = [0]
	
.LABEL $label$27
	CALL eosio_assert($3, [256])
	*(($4 = (($15 + [48]) + [16]))) = (int_64)1397703940
	*($15 + [56]) = (int_64)35
	*($15 + [48]) = *($0)
	*($15 + [16]) = [0]
	*($15 + [8]) = $14
	*($15) = $13
	*(($3 = ($15 + [20]))) = [0]
	*(($8 = ($15 + [24]))) = [0]
	*(($9 = CALL $60([16]))) = $5
	*($9 + [8]) = $12
	*(($6 = ($15 + [32]))) = [0]
	$7 = ($9 + [16])
	*($8) = $7
	*($3) = $7
	*($15 + [16]) = $9
	*($15 + [28]) = [0]
	*(($15 + [36])) = [0]
	CALL $20(($15 + [28]), [24])
	$9 = *($15 + [28])
	$3 = (*($6) - $9)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [288])
	CALL memcpy($9, ($15 + [48]), [8])
	CALL eosio_assert(((int_32)($3 + [-8]) > (int_32)[7]), [288])
	CALL memcpy(($9 + [8]), (($15 + [48]) + [8]), [8])
	CALL eosio_assert(((int_32)($3 + [-16]) > (int_32)[7]), [288])
	CALL memcpy(($9 + [16]), $4, [8])
	CALL $21(($15 + [224]), $15)
	$9 = *($15 + [224])
	CALL send_inline($9, (*($15 + [228]) - $9))
	$9 = *($15 + [224])
	if ( ($9 == 0) ){ goto $label$32 }
	*($15 + [228]) = $9
	CALL $61($9)
	
.LABEL $label$32
	$9 = *($15 + [28])
	if ( ($9 == 0) ){ goto $label$33 }
	*(($15 + [32])) = $9
	CALL $61($9)
	
.LABEL $label$33
	$9 = *($15 + [16])
	if ( ($9 == 0) ){ goto $label$34 }
	*(($15 + [20])) = $9
	CALL $61($9)
	
.LABEL $label$34
	$5 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1136]
	$12 = (int_64)0
	
.LOOP $label$35:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$40 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$3 = ($3 + [165])
	goto $label$38 
	
.LABEL $label$40
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$39
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$37
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$36
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$1 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$35 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1152]
	$13 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$11 > (uint_64)(int_64)4) ){ goto $label$46 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$3 = ($3 + [165])
	goto $label$44 
	
.LABEL $label$46
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$42
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$41 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1184]
	$14 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$11 > (uint_64)(int_64)6) ){ goto $label$52 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$3 = ($3 + [165])
	goto $label$50 
	
.LABEL $label$52
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$48
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$1 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$47 }
	CALL eosio_assert([1], [192])
	$11 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$55:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$54 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$56 }
	
.LOOP $label$57:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$57 }
	
.LABEL $label$56
	$3 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$55 }
	goto $label$53 
	
.LABEL $label$54
	$3 = [0]
	
.LABEL $label$53
	CALL eosio_assert($3, [256])
	CALL eosio_assert([1], [192])
	$11 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$60:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$59 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$61 }
	
.LOOP $label$62:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$59 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$62 }
	
.LABEL $label$61
	$3 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$60 }
	goto $label$58 
	
.LABEL $label$59
	$3 = [0]
	
.LABEL $label$58
	CALL eosio_assert($3, [256])
	*($15) = *($0)
	*($15 + [8]) = $2
	*($15 + [16]) = (int_64)33
	*(($15 + [24])) = (int_64)1397703940
	*(($15 + [40])) = (int_64)1397703940
	*($15 + [64]) = [0]
	*($15 + [56]) = $14
	*($15 + [48]) = $13
	*($15 + [32]) = (int_64)0
	*(($3 = ($15 + [68]))) = [0]
	*(($4 = (($15 + [48]) + [24]))) = [0]
	*(($9 = CALL $60([16]))) = $5
	*($9 + [8]) = $12
	*(($8 = ($15 + [80]))) = [0]
	$6 = ($9 + [16])
	*($4) = $6
	*($3) = $6
	*($15 + [64]) = $9
	*($15 + [76]) = [0]
	*(($15 + [84])) = [0]
	CALL $20(($15 + [76]), [48])
	$9 = *($8)
	$3 = *($15 + [76])
	*($15 + [228]) = $3
	*($15 + [224]) = $3
	*($15 + [232]) = $9
	*($15 + [208]) = ($15 + [224])
	*($15 + [216]) = $15
	CALL $22(($15 + [216]), ($15 + [208]))
	CALL $21(($15 + [224]), ($15 + [48]))
	$9 = *($15 + [224])
	CALL send_inline($9, (*($15 + [228]) - $9))
	$9 = *($15 + [224])
	if ( ($9 == 0) ){ goto $label$63 }
	*($15 + [228]) = $9
	CALL $61($9)
	
.LABEL $label$63
	$9 = *($15 + [76])
	if ( ($9 == 0) ){ goto $label$64 }
	*(($15 + [80])) = $9
	CALL $61($9)
	
.LABEL $label$64
	$9 = *($15 + [64])
	if ( ($9 == 0) ){ goto $label$65 }
	*(($15 + [68])) = $9
	CALL $61($9)
	
.LABEL $label$65
	$5 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1136]
	$12 = (int_64)0
	
.LOOP $label$66:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$71 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$70 }
	$3 = ($3 + [165])
	goto $label$69 
	
.LABEL $label$71
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$68 }
	goto $label$67 
	
.LABEL $label$70
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$69
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$68
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$67
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$1 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$66 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1152]
	$13 = (int_64)0
	
.LOOP $label$72:
	if ( ((uint_64)$11 > (uint_64)(int_64)4) ){ goto $label$77 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$3 = ($3 + [165])
	goto $label$75 
	
.LABEL $label$77
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$76
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$74
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$73
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$13 = ((int_64)$1 | (int_64)$13)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$72 }
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1200]
	$14 = (int_64)0
	
.LOOP $label$78:
	if ( ((uint_64)$11 > (uint_64)(int_64)6) ){ goto $label$83 }
	$3 = *($9)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$82 }
	$3 = ($3 + [165])
	goto $label$81 
	
.LABEL $label$83
	$1 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$82
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$81
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$80
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$79
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$1 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$78 }
	CALL eosio_assert([1], [192])
	$11 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$86:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$85 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$87 }
	
.LOOP $label$88:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$88 }
	
.LABEL $label$87
	$3 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$86 }
	goto $label$84 
	
.LABEL $label$85
	$3 = [0]
	
.LABEL $label$84
	CALL eosio_assert($3, [256])
	CALL eosio_assert([1], [192])
	$11 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$91:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$90 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$92 }
	
.LOOP $label$93:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$90 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$93 }
	
.LABEL $label$92
	$3 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$91 }
	goto $label$89 
	
.LABEL $label$90
	$3 = [0]
	
.LABEL $label$89
	CALL eosio_assert($3, [256])
	*(($15 + [24])) = (int_64)1397703940
	*(($15 + [40])) = (int_64)1397703940
	*($15 + [8]) = $2
	*($15) = *($0)
	*($15 + [16]) = (int_64)2
	*($15 + [56]) = $14
	*($15 + [48]) = $13
	*($15 + [32]) = (int_64)0
	*(($9 = CALL $60([16]))) = $5
	*($9 + [8]) = $12
	*(($3 = ($15 + [80]))) = [0]
	$0 = ($9 + [16])
	*((($15 + [48]) + [24])) = $0
	*(($15 + [68])) = $0
	*($15 + [64]) = $9
	*($15 + [76]) = [0]
	*(($15 + [84])) = [0]
	CALL $20(($15 + [76]), [48])
	$9 = *($3)
	$3 = *($15 + [76])
	*($15 + [228]) = $3
	*($15 + [224]) = $3
	*($15 + [232]) = $9
	*($15 + [208]) = ($15 + [224])
	*($15 + [216]) = $15
	CALL $22(($15 + [216]), ($15 + [208]))
	CALL $21(($15 + [224]), ($15 + [48]))
	$9 = *($15 + [224])
	CALL send_inline($9, (*($15 + [228]) - $9))
	$9 = *($15 + [224])
	if ( ($9 == 0) ){ goto $label$94 }
	*($15 + [228]) = $9
	CALL $61($9)
	
.LABEL $label$94
	$9 = *($15 + [76])
	if ( ($9 == 0) ){ goto $label$95 }
	*(($15 + [80])) = $9
	CALL $61($9)
	
.LABEL $label$95
	$9 = *($15 + [64])
	if ( ($9 == 0) ){ goto $label$96 }
	*(($15 + [68])) = $9
	CALL $61($9)
	
.LABEL $label$96
	$0 = *($15 + [112])
	if ( ($0 == 0) ){ goto $label$97 }
	$4 = ($15 + [116])
	$9 = *($4)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$99 }
	
.LOOP $label$100:
	$9 = ($9 + [-24])
	$3 = *($9)
	*($9) = [0]
	if ( ($3 == 0) ){ goto $label$101 }
	CALL $61($3)
	
.LABEL $label$101
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$100 }
	$9 = *(($15 + [112]))
	goto $label$98 
	
.LABEL $label$99
	$9 = $0
	
.LABEL $label$98
	*($4) = $0
	CALL $61($9)
	
.LABEL $label$97
	$0 = *($15 + [152])
	if ( ($0 == 0) ){ goto $label$102 }
	$4 = ($15 + [156])
	$9 = *($4)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$104 }
	
.LOOP $label$105:
	$9 = ($9 + [-24])
	$3 = *($9)
	*($9) = [0]
	if ( ($3 == 0) ){ goto $label$106 }
	CALL $61($3)
	
.LABEL $label$106
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$105 }
	$9 = *(($15 + [152]))
	goto $label$103 
	
.LABEL $label$104
	$9 = $0
	
.LABEL $label$103
	*($4) = $0
	CALL $61($9)
	
.LABEL $label$102
	$0 = *($15 + [192])
	if ( ($0 == 0) ){ goto $label$107 }
	$4 = ($15 + [196])
	$9 = *($4)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$109 }
	
.LOOP $label$110:
	$9 = ($9 + [-24])
	$3 = *($9)
	*($9) = [0]
	if ( ($3 == 0) ){ goto $label$111 }
	CALL $61($3)
	
.LABEL $label$111
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$110 }
	$9 = *(($15 + [192]))
	goto $label$108 
	
.LABEL $label$109
	$9 = $0
	
.LABEL $label$108
	*($4) = $0
	CALL $61($9)
	
.LABEL $label$107
	*([0] + [4]) = ($15 + [240])
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [480])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $60([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [512])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $25(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $61($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $10 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [192])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [256])
	*($0 + [24]) = $1
	$4 = *($2)
	$5 = *(*($2 + [4]))
	*($0) = *($5)
	*(($0 + [16])) = *(($5 + [16]))
	*(($0 + [8])) = *(($5 + [8]))
	*($6 + [40]) = ($6 + [24])
	*($6 + [36]) = $6
	*($6 + [32]) = $6
	CALL $12(($6 + [32]), $0)
	*($0 + [28]) = CALL db_store_i64(*($4 + [8]), (int_64)4982871454518345728, *(*($2 + [8])), (int_64)4982871454518345728, $6, [24])
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)4982871454518345728) ){ goto $label$6 }
	*(($4 + [16])) = (int_64)4982871454518345729
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [48])
	return $0
}

void .FUNC $11 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $60(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $62($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $61($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $61($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[1]), [288])
	CALL memcpy(*($0 + [4]), $1, [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [288])
	CALL memcpy(*($0 + [4]), ($1 + [2]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [288])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [288])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [288])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [512])
	CALL memcpy($1, *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [512])
	CALL memcpy(($1 + [2]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [512])
	CALL memcpy(($1 + [4]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [512])
	CALL memcpy(($1 + [16]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $60(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $62($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $61($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $61($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [480])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $60([72])
	$4 = CALL $35($6)
	*($6 + [56]) = $0
	CALL $36(($8 + [32]), $4)
	*($6 + [64]) = [-1]
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $37(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $61($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $35 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [24]) = (int_64)0
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [192])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [256])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [192])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [256])
	return $0
}

int_32 .FUNC $32 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [576])
	$6 = *($0 + [4])
	$7 = *($6 + [64])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-3020371202648571904, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [64]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)$2), [16])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $34($2, CALL $fimport$4(*($2), *($2 + [8]), (int_64)-3020371202648571904, $3))
	CALL eosio_assert(((int_32)*($7 + [56]) == (int_32)$2), [16])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [64])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $61($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $61($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$7 = *(($1 + [64]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020371202648571904, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [480])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $60([64])
	$4 = CALL $38($6)
	*($6 + [48]) = $0
	CALL $39(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $40(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $61($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3020371202648571904, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [16])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $34($4, CALL $fimport$4(*($4), *($4 + [8]), (int_64)-3020371202648571904, $5))
	CALL eosio_assert(((int_32)*($2 + [56]) == (int_32)$4), [16])
	
.LABEL $label$4
	*(($2 + [64])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $58 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [9878]) == 0) ){ goto $label$2 }
	$7 = *([0] + [9880])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [9878]) = [1]
	$7 = ($7 << [16])
	*([0] + [9880]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [9880])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [9880]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [9878]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [9878]) = [1]
	$3 = ($3 << [16])
	*([0] + [9880]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [9880])
	
.LABEL $label$8
	*([0] + [9880]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [9776])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [9584]
	$1 = (((int_32)$2 * (int_32)[12]) + [9584])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC $61 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $64 ()
{
	(unreachable)
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [176])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	CALL $53(($7 + [32]), $5, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	$4 = *($7 + [40])
	*(($7 + [108])) = *(($7 + [60]))
	*(($1 = (($7 + [96]) + [8]))) = *(($7 + [56]))
	*($7 + [100]) = *(($7 + [52]))
	$3 = *($7 + [32])
	*($7 + [96]) = *($7 + [48])
	*(($5 = (($7 + [80]) + [8]))) = *(($7 + [72]))
	*($7 + [80]) = *($7 + [64])
	*((($7 + [128]) + [8])) = *($5)
	*((($7 + [112]) + [8])) = *($1)
	*($7 + [128]) = *($7 + [80])
	*($7 + [112]) = *($7 + [96])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	*(($5 = (($7 + [160]) + [8]))) = *((($7 + [112]) + [8]))
	*(($2 = (($7 + [144]) + [8]))) = *((($7 + [128]) + [8]))
	*($7 + [160]) = *($7 + [112])
	*($7 + [144]) = *($7 + [128])
	*((($7 + [16]) + [8])) = *($5)
	*($7 + [16]) = *($7 + [160])
	*(($7 + [8])) = *($2)
	*($7) = *($7 + [144])
	CALL void $1((int_32 $3), (int_64 $4), (int_64 ($7 + [16])), (int_32 $7), (int_32 $6))
	*([0] + [4]) = ($7 + [176])
	return [1]
}

int_32 .FUNC $38 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [192])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [256])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [192])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [256])
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [512])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [192])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [256])
	*(($0 + [40])) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [192])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [256])
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $54(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [512])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [512])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [512])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [512])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [512])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $1) > (uint_32)[7]), [512])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [512])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [512])
	CALL memcpy(($2 + [2]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [512])
	CALL memcpy(($2 + [4]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [512])
	CALL memcpy(($2 + [8]), *($1 + [4]), [8])
	$0 = (*($1 + [4]) + [8])
	*($1 + [4]) = $0
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]), [512])
	CALL memcpy(($2 + [16]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $57([1392], $0)
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $58($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [9792])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}