(data (i32.const 16940) "EOS\00")
(data (i32.const 16944) "ROB\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 17034) "eosio.token\00")
(data (i32.const 17046) "zlkgrobtoken\00")
(data (i32.const 17059) "offerbet\00")
(data (i32.const 17068) "recharge artificial notification\00")
(data (i32.const 17101) "invalid quantity\00")
(data (i32.const 17118) "must deposit positive quantity\00")
(data (i32.const 17149) "in the settlement\00")
(data (i32.const 17167) "ruse init faild\00")
(data (i32.const 17183) "ruseGameRuse init faild\00")
(data (i32.const 17207) "zlkgrobthrow\00")
(data (i32.const 17221) "delalldb error\00")
(data (i32.const 17236) "initgame\00")
(data (i32.const 17245) "now = % todayTime = % delaySec = %\00")
(data (i32.const 17280) "startgame\00")
(data (i32.const 17290) "next jackpot faild\00")
(data (i32.const 17309) "settlement error\00")
(data (i32.const 17326) "slot faild\00")
(data (i32.const 17337) "zlkgroballoc\00")
(data (i32.const 17350) "transaction settlement\00")
(data (i32.const 17373) "string is too long to be a valid symbol_code\00")
(data (i32.const 17418) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 17471) "string is too long to be a valid name\00")
(data (i32.const 17509) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 17576) "character is not in allowed character set for names\00")
(data (i32.const 17628) "write\00")
(data (i32.const 17634) "cannot create objects in table of another contract\00")
(data (i32.const 17685) "error reading iterator\00")
(data (i32.const 17708) "read\00")
(data (i32.const 17713) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 17764) "cannot pass end iterator to modify\00")
(data (i32.const 17799) "object passed to modify is not in multi_index\00")
(data (i32.const 17845) "cannot modify objects in table of another contract\00")
(data (i32.const 17896) "updater cannot change primary key when modifying an object\00")
(data (i32.const 17955) "next primary key in table is at autoincrement limit\00")
(data (i32.const 18007) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 18061) "cannot decrement iterator at beginning of table\00")
(data (i32.const 18109) "cannot pass end iterator to erase\00")
(data (i32.const 18143) "cannot increment end iterator\00")
(data (i32.const 18173) "object passed to erase is not in multi_index\00")
(data (i32.const 18218) "cannot erase objects in table of another contract\00")
(data (i32.const 18268) "attempt to remove object that was not in multi_index\00")
(data (i32.const 18321) "get\00")
(import "env" "prints" (func $fimport$0 (param i32)))
(import "env" "require_auth" (func $fimport$1 (param i64)))
(import "env" "eosio_assert" (func $fimport$2 (param i32 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$3 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$4 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$5 (result i64)))
(import "env" "db_update_i64" (func $fimport$6 (param i32 i64 i32 i32)))
(import "env" "memcpy" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$8 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "current_time" (func $fimport$9 (result i64)))
(import "env" "db_idx64_find_primary" (func $fimport$10 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$11 (param i32 i64 i32)))
(import "env" "send_inline" (func $fimport$12 (param i32 i32)))
(import "env" "db_next_i64" (func $fimport$13 (param i32 i32) (result i32)))
(import "env" "prints_l" (func $fimport$14 (param i32 i32)))
(import "env" "printui" (func $fimport$15 (param i64)))
(import "env" "cancel_deferred" (func $fimport$16 (param i32) (result i32)))
(import "env" "send_deferred" (func $fimport$17 (param i32 i64 i32 i32 i32)))
(import "env" "action_data_size" (func $fimport$18 (result i32)))
(import "env" "read_action_data" (func $fimport$19 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$21 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$23 (param i64 i64 i64) (result i32)))
(import "env" "db_remove_i64" (func $fimport$24 (param i32)))
(import "env" "abort" (func $fimport$25))
(import "env" "memset" (func $fimport$26 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$27 (param i32 i32 i32) (result i32)))
(import "env" "__unordtf2" (func $fimport$28 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$29 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$30 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$31 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$32 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$33 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$34 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$35 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$36 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$37 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$38 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$39 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$40 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$41 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$42 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$43 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$44 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$45 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$46 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $46))
(export "_ZdlPv" (func $84))
(export "_Znwj" (func $82))
(export "_Znaj" (func $83))
(export "_ZdaPv" (func $85))
(export "_ZnwjSt11align_val_t" (func $86))
(export "_ZnajSt11align_val_t" (func $87))
(export "_ZdlPvSt11align_val_t" (func $88))
(export "_ZdaPvSt11align_val_t" (func $89))
(table $0 7 7 anyfunc)
(elem (i32.const 1) $38 $25 $40 $30 $1 $2)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 18325))
(global $global$2 i32 (i32.const 18325))


int_32 .FUNC $98 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	
.LOOP $label$1:
	$1 = *($0)
	$2 = ($1 + [-9])
	$3 = ($0 + [1])
	$0 = $3
	if ( ((int_32)$1 == (int_32)[32]) ){ goto $label$1 }
	$0 = $3
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$4 = [1]
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	$1 = *($3)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($3 + [-1])
	$4 = [0]
	
.LABEL $label$2
	$2 = [0]
	$1 = ($1 + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($3 + [1])
	$2 = [0]
	
.LOOP $label$7:
	$2 = (((int_32)$2 * (int_32)[10]) - $1)
	$1 = *($0)
	$0 = ($0 + [1])
	$1 = ($1 + [-48])
	if ( ($1 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $2 ? ([0] - $2) : $4 )
}

int_32 .FUNC $99 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $94 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $95 ()
{
	return [8252]
}

void .FUNC $96 (int_32 $0)
{
}

int_32 .FUNC $97 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	CALL $101([8260])
	$3 = *([0] + [8268])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *([0] + [8272])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$3 = [8276]
	*([0] + [8268]) = [8276]
	$4 = *([0] + [8272])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = CALL $108([260], [1])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = [0]
	*($3) = *([0] + [8268])
	*([0] + [8268]) = $3
	*([0] + [8272]) = [0]
	
.LABEL $label$2
	*([0] + [8272]) = ($4 + [1])
	*((($3 = ($3 + ($4 << [2]))) + [132])) = $1
	*(($3 + [4])) = $0
	CALL $102([8260])
	return [0]
	
.LABEL $label$1
	CALL $102([8260])
	return [-1]
}

void .FUNC $90 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $92($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $92 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $38 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	$1 = ($global$0 - [112])
	$global$0 = $1
	CALL require_auth(*($0))
	CALL prints([17280])
	$2 = ($0 + [32])
	$3 = [0]
	$4 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)7235159550062657536, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $4($2, $4)
	
.LABEL $label$1
	*($1 + [12]) = $3
	*($1 + [8]) = $2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [17764])
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$2), [17799])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$5()), [17845])
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = ((int_64)*($3 + [8]) + (int_64)1)
	$5 = *($3)
	*($3 + [32]) = CALL current_time()
	CALL eosio_assert(((int_64)$5 == (int_64)*($3)), [17896])
	*($1 + [72]) = (($1 + [16]) + [48])
	*($1 + [68]) = ($1 + [16])
	*($1 + [64]) = ($1 + [16])
	*($1 + [80]) = ($1 + [64])
	*($1 + [92]) = ($3 + [8])
	*($1 + [88]) = $3
	*($1 + [96]) = ($3 + [16])
	*($1 + [100]) = ($3 + [24])
	*($1 + [104]) = ($3 + [32])
	*($1 + [108]) = ($3 + [40])
	CALL $6(($1 + [88]), ($1 + [80]))
	CALL db_update_i64(*($3 + [52]), (int_64)0, ($1 + [16]), [48])
	$3 = ($0 + [48])
	if ( (uint_64)($5 <= *($3)) ){ goto $label$2 }
	*($3) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($1 + [80]) = [0]
	$2 = *([0] + [8192])
	if ( (( *([0] + [8196]) ? uint_32($2 >> [1]) : ($2 & [1]) ) == 0) ){ goto $label$6 }
	$6 = ($0 + [72])
	$7 = ($0 + [100])
	$8 = ($0 + [96])
	$9 = ($0 + [80])
	$10 = ($1 + [32])
	$11 = ($1 + [40])
	$12 = ($1 + [48])
	$13 = ($1 + [44])
	$3 = [0]
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$14 = [27]
	goto $label$3 
	
.LABEL $label$5
	$14 = [36]
	goto $label$3 
	
.LABEL $label$4
	$14 = [34]
	
.LABEL $label$3
	
.LOOP $label$7:
	goto $label$84 
	
.LABEL $label$86
	if ( (*((((int_32)$3 * (int_32)[12]) + [8192])) & [1]) ){ goto $label$39 }
	$14 = [36]
	goto $label$7 
	
.LABEL $label$85
	$15 = (((int_32)$3 * (int_32)[12]) + [8193])
	$3 = CALL $100($15)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$35 }
	$14 = [0]
	goto $label$7 
	
.LABEL $label$84
	if ( $3 ){ goto $label$36 }
	$14 = [46]
	goto $label$7 
	
.LABEL $label$83
	$5 = (int_64)0
	goto $label$37 
	
.LABEL $label$82
	$15 = *((((int_32)$3 * (int_32)[12]) + [8200]))
	$3 = CALL $100($15)
	if ( ($3 <= [8]) ){ goto $label$38 }
	$14 = [35]
	goto $label$7 
	
.LABEL $label$81
	CALL eosio_assert([0], [17373])
	$14 = [1]
	goto $label$7 
	
.LABEL $label$80
	$5 = (int_64)0
	$14 = [2]
	goto $label$7 
	
.LABEL $label$79
	$4 = (($15 + $3) + [-1])
	$2 = *($4)
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$33 }
	$14 = [45]
	goto $label$7 
	
.LABEL $label$78
	CALL eosio_assert([0], [17418])
	$2 = *($4)
	$14 = [3]
	goto $label$7 
	
.LABEL $label$77
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$34 }
	$14 = [4]
	goto $label$7 
	
.LABEL $label$76
	$5 = ((int_64)$5 << (int_64)8)
	$14 = [5]
	goto $label$7 
	
.LABEL $label$75
	$5 = ((int_64)$5 | (int_64)4)
	$2 = *($7)
	$15 = *($8)
	if ( ((int_32)$15 == (int_32)$2) ){ goto $label$30 }
	$14 = [6]
	goto $label$7 
	
.LABEL $label$74
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4 + [8]) == (int_64)$5) ){ goto $label$29 }
	$14 = [7]
	goto $label$7 
	
.LABEL $label$73
	$2 = $3
	if ( ((int_32)$15 != (int_32)$3) ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$72
	if ( ((int_32)$15 == (int_32)$2) ){ goto $label$28 }
	$14 = [44]
	goto $label$7 
	
.LABEL $label$71
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$6), [17713])
	goto $label$25 
	
.LABEL $label$70
	$3 = CALL db_find_i64(*($6), *($9), (int_64)-7297072087558180352, $5)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$27 }
	$14 = [9]
	goto $label$7 
	
.LABEL $label$69
	$4 = CALL $33($6, $3)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$6), [17713])
	goto $label$26 
	
.LABEL $label$68
	$4 = [0]
	$14 = [10]
	goto $label$7 
	
.LABEL $label$67
	*($1 + [68]) = $4
	*($1 + [64]) = $6
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [17290])
	$16 = *($0)
	$3 = ((int_32)*($1 + [80]) * (int_32)[12])
	$2 = ($3 + [8192])
	if ( (*($2) & [1]) ){ goto $label$24 }
	$14 = [41]
	goto $label$7 
	
.LABEL $label$66
	$15 = ($2 + [1])
	$3 = CALL $100($15)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$22 }
	$14 = [12]
	goto $label$7 
	
.LABEL $label$65
	if ( $3 ){ goto $label$21 }
	$14 = [39]
	goto $label$7 
	
.LABEL $label$64
	$5 = (int_64)0
	goto $label$18 
	
.LABEL $label$63
	$15 = *(($3 + [8200]))
	$3 = CALL $100($15)
	if ( ($3 <= [8]) ){ goto $label$23 }
	$14 = [40]
	goto $label$7 
	
.LABEL $label$62
	CALL eosio_assert([0], [17373])
	$14 = [13]
	goto $label$7 
	
.LABEL $label$61
	$5 = (int_64)0
	$14 = [14]
	goto $label$7 
	
.LABEL $label$60
	$4 = (($15 + $3) + [-1])
	$2 = *($4)
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$19 }
	$14 = [38]
	goto $label$7 
	
.LABEL $label$59
	CALL eosio_assert([0], [17418])
	$2 = *($4)
	$14 = [15]
	goto $label$7 
	
.LABEL $label$58
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$20 }
	$14 = [16]
	goto $label$7 
	
.LABEL $label$57
	$5 = ((int_64)$5 << (int_64)8)
	$14 = [17]
	goto $label$7 
	
.LABEL $label$56
	$5 = ((int_64)$5 | (int_64)4)
	*((($1 + [16]) + [8])) = $5
	*($10) = (int_64)-1
	*($11) = (int_64)0
	$3 = [0]
	*($12) = [0]
	*($1 + [16]) = $16
	$2 = CALL db_lowerbound_i64($16, $5, (int_64)7035937543832993792, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$17 }
	$14 = [18]
	goto $label$7 
	
.LABEL $label$55
	$3 = CALL $8(($1 + [16]), $2)
	$14 = [19]
	goto $label$7 
	
.LABEL $label$54
	*((($1 + [88]) + [8])) = $0
	*((($1 + [88]) + [12])) = ($1 + [64])
	*($1 + [92]) = ($1 + [80])
	*($1 + [88]) = ($1 + [8])
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [17764])
	CALL $39(($1 + [16]), $3, (int_64)0, ($1 + [88]))
	$4 = *($11)
	if ( ($4 == 0) ){ goto $label$16 }
	$14 = [20]
	goto $label$7 
	
.LABEL $label$53
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$14 }
	$14 = [21]
	goto $label$7 
	
.LABEL $label$52
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	$14 = [22]
	goto $label$7 
	
.LABEL $label$51
	CALL _ZdlPv($2)
	$14 = [23]
	goto $label$7 
	
.LABEL $label$50
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$15 }
	$14 = [24]
	goto $label$7 
	
.LABEL $label$49
	$3 = *($11)
	goto $label$12 
	
.LABEL $label$48
	$3 = $4
	$14 = [25]
	goto $label$7 
	
.LABEL $label$47
	*($13) = $4
	CALL _ZdlPv($3)
	$14 = [26]
	goto $label$7 
	
.LABEL $label$46
	$3 = (*($1 + [80]) + [1])
	*($1 + [80]) = $3
	$2 = *([0] + [8192])
	if ( ($3 <= ( *([0] + [8196]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$11 }
	$14 = [27]
	goto $label$7 
	
.LABEL $label$45
	*($1 + [24]) = (int_64)3617214756542218240
	$5 = *($0)
	*($1 + [16]) = $5
	*($1 + [88]) = (int_64)-4417018952356577280
	$2 = ($0 + [112])
	$4 = ($0 + [152])
	$3 = *($4)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [156]))) ){ goto $label$10 }
	$14 = [32]
	goto $label$7 
	
.LABEL $label$44
	*($3 + [8]) = (int_64)-4417018952356577280
	*($3) = $5
	*($3 + [16 align=4]) = (int_64)0
	*(($6 = ($3 + [24]))) = [0]
	$15 = CALL _Znwj([16])
	*($3 + [16]) = $15
	$11 = ($15 + [16])
	*($6) = $11
	*(($15 + [8])) = *((($1 + [16]) + [8]))
	*($15) = *($1 + [16])
	*(($3 + [20])) = $11
	*($3 + [28 align=4]) = (int_64)0
	*(($3 + [36])) = [0]
	*($4) = (*($4) + [40])
	goto $label$9 
	
.LABEL $label$43
	CALL $36(($0 + [148]), ($1 + [16]), $0, ($1 + [88]), ($1 + [64]))
	$14 = [29]
	goto $label$7 
	
.LABEL $label$42
	*(($0 + [132])) = [14400]
	*($1 + [24]) = (int_64)0
	$5 = *($0)
	*($1 + [16]) = $5
	CALL $37(($1 + [88]), $2)
	$3 = *($1 + [88])
	CALL send_deferred(($1 + [16]), $5, $3, (*($1 + [92]) - $3), [1])
	$3 = *($1 + [88])
	if ( ($3 == 0) ){ goto $label$8 }
	$14 = [30]
	goto $label$7 
	
.LABEL $label$41
	*($1 + [92]) = $3
	CALL _ZdlPv($3)
	$14 = [31]
	goto $label$7 
	
.LABEL $label$40
	$global$0 = ($1 + [112])
	return 
	
.LABEL $label$39
	$14 = [34]
	goto $label$7 
	
.LABEL $label$38
	$14 = [0]
	goto $label$7 
	
.LABEL $label$37
	$14 = [5]
	goto $label$7 
	
.LABEL $label$36
	$14 = [1]
	goto $label$7 
	
.LABEL $label$35
	$14 = [35]
	goto $label$7 
	
.LABEL $label$34
	$14 = [2]
	goto $label$7 
	
.LABEL $label$33
	$14 = [3]
	goto $label$7 
	
.LABEL $label$32
	$14 = [8]
	goto $label$7 
	
.LABEL $label$31
	$14 = [6]
	goto $label$7 
	
.LABEL $label$30
	$14 = [8]
	goto $label$7 
	
.LABEL $label$29
	$14 = [43]
	goto $label$7 
	
.LABEL $label$28
	$14 = [8]
	goto $label$7 
	
.LABEL $label$27
	$14 = [42]
	goto $label$7 
	
.LABEL $label$26
	$14 = [10]
	goto $label$7 
	
.LABEL $label$25
	$14 = [10]
	goto $label$7 
	
.LABEL $label$24
	$14 = [11]
	goto $label$7 
	
.LABEL $label$23
	$14 = [12]
	goto $label$7 
	
.LABEL $label$22
	$14 = [40]
	goto $label$7 
	
.LABEL $label$21
	$14 = [13]
	goto $label$7 
	
.LABEL $label$20
	$14 = [14]
	goto $label$7 
	
.LABEL $label$19
	$14 = [15]
	goto $label$7 
	
.LABEL $label$18
	$14 = [17]
	goto $label$7 
	
.LABEL $label$17
	$14 = [19]
	goto $label$7 
	
.LABEL $label$16
	$14 = [26]
	goto $label$7 
	
.LABEL $label$15
	$14 = [21]
	goto $label$7 
	
.LABEL $label$14
	$14 = [37]
	goto $label$7 
	
.LABEL $label$13
	$14 = [23]
	goto $label$7 
	
.LABEL $label$12
	$14 = [25]
	goto $label$7 
	
.LABEL $label$11
	$14 = [33]
	goto $label$7 
	
.LABEL $label$10
	$14 = [28]
	goto $label$7 
	
.LABEL $label$9
	$14 = [29]
	goto $label$7 
	
.LABEL $label$8
	$14 = [31]
	goto $label$7 
	$14
}

int_32 .FUNC $49 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $48 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [48])
	$global$0 = $4
	*(($5 = (($4 + [16]) + [8]))) = *(($3 + [8]))
	*($4 + [16]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [32]) + [8])) = $3
	$2 = *($4 + [16])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [32]) = $2
	*(($3 = ($0 + [40]))) = $1
	*($0 + [32]) = $1
	*(($0 + [48])) = (int_64)-1
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [72]) = $1
	*(($0 + [80])) = $1
	*(($0 + [88])) = (int_64)-1
	*(($0 + [96])) = (int_64)0
	*(($0 + [104])) = [0]
	$1 = CALL current_time()
	*(($0 + [124])) = [0]
	*(($0 + [128])) = [0]
	*(($0 + [132])) = (int_64)0
	*(($0 + [140])) = (int_64)0
	*(($0 + [148])) = (int_64)0
	*(($0 + [156])) = (int_64)0
	*(($0 + [164])) = (int_64)0
	*($0 + [112]) = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) + [60])
	$5 = ($0 + [32])
	$3 = CALL db_lowerbound_i64(*($0 + [32]), *($3), (int_64)7235159550062657536, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $4($5, $3)
	goto $label$1 
	
.LABEL $label$2
	CALL $53(($4 + [32]), $5, *($0), ($4 + [8]))
	
.LABEL $label$1
	*($4 + [8]) = [0]
	$5 = *([0] + [8192])
	if ( (( *([0] + [8196]) ? uint_32($5 >> [1]) : ($5 & [1]) ) == 0) ){ goto $label$6 }
	$6 = ($0 + [72])
	$7 = ($0 + [100])
	$8 = ($0 + [96])
	$9 = ($0 + [80])
	$10 = ($0 + [72])
	$3 = [0]
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$11 = [11]
	goto $label$3 
	
.LABEL $label$5
	$11 = [15]
	goto $label$3 
	
.LABEL $label$4
	$11 = [13]
	
.LABEL $label$3
	
.LOOP $label$7:
	goto $label$43 
	
.LABEL $label$45
	if ( (*((((int_32)$3 * (int_32)[12]) + [8192])) & [1]) ){ goto $label$24 }
	$11 = [15]
	goto $label$7 
	
.LABEL $label$44
	$12 = (((int_32)$3 * (int_32)[12]) + [8193])
	$3 = CALL $100($12)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$20 }
	$11 = [0]
	goto $label$7 
	
.LABEL $label$43
	if ( $3 ){ goto $label$21 }
	$11 = [20]
	goto $label$7 
	
.LABEL $label$42
	$1 = (int_64)0
	goto $label$22 
	
.LABEL $label$41
	$12 = *((((int_32)$3 * (int_32)[12]) + [8200]))
	$3 = CALL $100($12)
	if ( ($3 <= [8]) ){ goto $label$23 }
	$11 = [14]
	goto $label$7 
	
.LABEL $label$40
	CALL eosio_assert([0], [17373])
	$11 = [1]
	goto $label$7 
	
.LABEL $label$39
	$1 = (int_64)0
	$11 = [2]
	goto $label$7 
	
.LABEL $label$38
	$13 = (($12 + $3) + [-1])
	$5 = *($13)
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	$11 = [19]
	goto $label$7 
	
.LABEL $label$37
	CALL eosio_assert([0], [17418])
	$5 = *($13)
	$11 = [3]
	goto $label$7 
	
.LABEL $label$36
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$19 }
	$11 = [4]
	goto $label$7 
	
.LABEL $label$35
	$1 = ((int_64)$1 << (int_64)8)
	$11 = [5]
	goto $label$7 
	
.LABEL $label$34
	$1 = ((int_64)$1 | (int_64)4)
	$5 = *($7)
	$13 = *($8)
	if ( ((int_32)$13 == (int_32)$5) ){ goto $label$15 }
	$11 = [6]
	goto $label$7 
	
.LABEL $label$33
	$3 = ($5 + [-24])
	$12 = *($3)
	if ( ((int_64)*($12 + [8]) == (int_64)$1) ){ goto $label$14 }
	$11 = [7]
	goto $label$7 
	
.LABEL $label$32
	$5 = $3
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$31
	if ( ((int_32)$13 == (int_32)$5) ){ goto $label$13 }
	$11 = [18]
	goto $label$7 
	
.LABEL $label$30
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$6), [17713])
	if ( $12 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$29
	$3 = CALL db_find_i64(*($10), *($9), (int_64)-7297072087558180352, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$12 }
	$11 = [9]
	goto $label$7 
	
.LABEL $label$28
	CALL eosio_assert(((int_32)*(CALL $33($6, $3) + [16]) == (int_32)$6), [17713])
	goto $label$9 
	
.LABEL $label$27
	$1 = *($0)
	*($4) = ($4 + [8])
	CALL $54(($4 + [32]), $6, $1, $4)
	$11 = [10]
	goto $label$7 
	
.LABEL $label$26
	$3 = (*($4 + [8]) + [1])
	*($4 + [8]) = $3
	$5 = *([0] + [8192])
	if ( ($3 <= ( *([0] + [8196]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$8 }
	$11 = [11]
	goto $label$7 
	
.LABEL $label$25
	$global$0 = ($4 + [48])
	return $0
	
.LABEL $label$24
	$11 = [13]
	goto $label$7 
	
.LABEL $label$23
	$11 = [0]
	goto $label$7 
	
.LABEL $label$22
	$11 = [5]
	goto $label$7 
	
.LABEL $label$21
	$11 = [1]
	goto $label$7 
	
.LABEL $label$20
	$11 = [14]
	goto $label$7 
	
.LABEL $label$19
	$11 = [2]
	goto $label$7 
	
.LABEL $label$18
	$11 = [3]
	goto $label$7 
	
.LABEL $label$17
	$11 = [8]
	goto $label$7 
	
.LABEL $label$16
	$11 = [6]
	goto $label$7 
	
.LABEL $label$15
	$11 = [8]
	goto $label$7 
	
.LABEL $label$14
	$11 = [17]
	goto $label$7 
	
.LABEL $label$13
	$11 = [8]
	goto $label$7 
	
.LABEL $label$12
	$11 = [16]
	goto $label$7 
	
.LABEL $label$11
	$11 = [16]
	goto $label$7 
	
.LABEL $label$10
	$11 = [10]
	goto $label$7 
	
.LABEL $label$9
	$11 = [10]
	goto $label$7 
	
.LABEL $label$8
	$11 = [12]
	goto $label$7 
	return $11
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-6030912130159137136, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $75($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $76(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [17955])
	*($1) = *(($6 + [16]))
	*($1 + [8]) = *(*(*($5 + [4]) + [4]) + [8])
	*($1 + [16]) = CALL current_time()
	$6 = *(*($5 + [8]) + [4])
	*($1 + [24]) = *($6)
	*(($1 + [40])) = *(($6 + [24]))
	*($1 + [32]) = *($6 + [16])
	*(($1 + [56])) = *(($6 + [40]))
	*($1 + [48]) = *($6 + [32])
	*(($1 + [72])) = *(($6 + [56]))
	*($1 + [64]) = *($6 + [48])
	*(($1 + [88])) = *(($6 + [72]))
	*($1 + [80]) = *($6 + [64])
	*(($1 + [104])) = *(($6 + [88]))
	*($1 + [96]) = *($6 + [80])
	$6 = *($5 + [12])
	*(($1 + [120])) = *($6 + [8])
	*($1 + [112]) = *($6)
	$5 = $2
	$6 = ($5 + [-128])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = $5
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [48])
	*($3 + [48]) = ($1 + [64])
	*($3 + [52]) = ($1 + [80])
	*($3 + [56]) = ($1 + [96])
	*($3 + [60]) = ($1 + [112])
	CALL $77(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [132]) = CALL db_store_i64(*($4 + [8]), (int_64)-6030912130159137136, *(*($0 + [8])), $7, $6, [128])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$3 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($3 + [64])
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	*($2 + [8]) = *(*($0))
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), ($2 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	$5 = (*($3 + [4]) + [8])
	*($3 + [4]) = $5
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($3 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), ($2 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [20])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	$5 = (*($3 + [4]) + [8])
	*($3 + [4]) = $5
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($3 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), ($2 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [24])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	$5 = (*($3 + [4]) + [8])
	*($3 + [4]) = $5
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($3 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), ($2 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [28])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	$5 = (*($3 + [4]) + [8])
	*($3 + [4]) = $5
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($3 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), ($2 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [32])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	$5 = (*($3 + [4]) + [8])
	*($3 + [4]) = $5
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($3 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), ($2 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$4 = *($0 + [36])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $4, [8])
	$5 = (*($3 + [4]) + [8])
	*($3 + [4]) = $5
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($3 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), ($2 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [40])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), $3, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $40 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_64 $39
	int_64 $40
	int_64 $41
	int_64 $42
	float_64 $43
	int_32 $44
	float_64 $45
	float_32 $46
	int_32 $47
	int_32 $48
	$1 = ($global$0 - [512])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = ($0 + [32])
	$3 = [0]
	$4 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)7235159550062657536, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $4($2, $4)
	
.LABEL $label$1
	*($1 + [300]) = $3
	*($1 + [296]) = $2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [17764])
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$2), [17799])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$5()), [17845])
	*($3 + [24]) = (int_64)1
	$5 = *($3)
	*($3 + [40]) = CALL current_time()
	CALL eosio_assert(((int_64)$5 == (int_64)*($3)), [17896])
	*($1 + [480]) = (($1 + [304]) + [48])
	*($1 + [476]) = ($1 + [304])
	*($1 + [472]) = ($1 + [304])
	*($1 + [256]) = ($1 + [472])
	*($1 + [148]) = ($3 + [8])
	*($1 + [144]) = $3
	*($1 + [152]) = ($3 + [16])
	*($1 + [156]) = ($3 + [24])
	*($1 + [160]) = ($3 + [32])
	*($1 + [164]) = ($3 + [40])
	CALL $6(($1 + [144]), ($1 + [256]))
	CALL db_update_i64(*($3 + [52]), (int_64)0, ($1 + [304]), [48])
	$3 = ($0 + [48])
	if ( (uint_64)($5 <= *($3)) ){ goto $label$2 }
	*($3) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$3 = *([0] + [8192])
	if ( (( *([0] + [8196]) ? uint_32($3 >> [1]) : ($3 & [1]) ) == 0) ){ goto $label$6 }
	$6 = (($1 + [304]) + [144])
	$7 = (($1 + [472]) + [16])
	$8 = (($1 + [472]) + [24])
	$9 = (($1 + [472]) + [32])
	$10 = ($1 + [164])
	$11 = (($1 + [144]) + [28])
	$12 = ($1 + [180])
	$13 = ($1 + [184])
	$14 = [0]
	$15 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$17 = [148]
	goto $label$3 
	
.LABEL $label$5
	$17 = [254]
	goto $label$3 
	
.LABEL $label$4
	$17 = [252]
	
.LABEL $label$3
	
.LOOP $label$7:
	goto $label$457 
	
.LABEL $label$462
	$5 = (int_64)0
	goto $label$202 
	
.LABEL $label$461
	$16 = *((((int_32)$14 * (int_32)[12]) + [8200]))
	$3 = CALL $100($16)
	if ( ($3 <= [8]) ){ goto $label$203 }
	$17 = [253]
	goto $label$7 
	
.LABEL $label$460
	CALL eosio_assert([0], [17373])
	goto $label$199 
	
.LABEL $label$459
	$15 = *($0)
	if ( (*((((int_32)$14 * (int_32)[12]) + [8192])) & [1]) ){ goto $label$204 }
	$17 = [254]
	goto $label$7 
	
.LABEL $label$458
	$16 = (((int_32)$14 * (int_32)[12]) + [8193])
	$3 = CALL $100($16)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$200 }
	$17 = [0]
	goto $label$7 
	
.LABEL $label$457
	if ( ($3 == 0) ){ goto $label$201 }
	$17 = [1]
	goto $label$7 
	
.LABEL $label$456
	$5 = (int_64)0
	$17 = [2]
	goto $label$7 
	
.LABEL $label$455
	$4 = (($16 + $3) + [-1])
	$2 = *($4)
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$197 }
	$17 = [256]
	goto $label$7 
	
.LABEL $label$454
	CALL eosio_assert([0], [17418])
	$2 = *($4)
	$17 = [3]
	goto $label$7 
	
.LABEL $label$453
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$198 }
	$17 = [4]
	goto $label$7 
	
.LABEL $label$452
	$5 = ((int_64)$5 << (int_64)8)
	$17 = [5]
	goto $label$7 
	
.LABEL $label$451
	$5 = ((int_64)$5 | (int_64)4)
	*((($1 + [472]) + [8])) = $5
	*($7) = (int_64)-1
	*($8) = (int_64)0
	$3 = [0]
	*($9) = [0]
	*($1 + [472]) = $15
	$2 = CALL db_lowerbound_i64($15, $5, (int_64)7035937543832993792, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$196 }
	$17 = [6]
	goto $label$7 
	
.LABEL $label$450
	$3 = CALL $8(($1 + [472]), $2)
	$17 = [7]
	goto $label$7 
	
.LABEL $label$449
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [17764])
	CALL eosio_assert(((int_32)*($3 + [144]) == (int_32)($1 + [472])), [17799])
	CALL eosio_assert(((int_64)*($1 + [472]) == (int_64)CALL $fimport$5()), [17845])
	*($3 + [16]) = (int_64)1
	$5 = *($3)
	CALL eosio_assert([1], [17896])
	*((($1 + [256]) + [8])) = $6
	*($1 + [260]) = ($1 + [304])
	*($1 + [256]) = ($1 + [304])
	*($1 + [216]) = ($1 + [256])
	*((($1 + [144]) + [8])) = ($3 + [16])
	*((($1 + [144]) + [12])) = ($3 + [24])
	*((($1 + [144]) + [16])) = ($3 + [32])
	*($10) = ($3 + [48])
	*((($1 + [144]) + [24])) = ($3 + [64])
	*($11) = ($3 + [80])
	*((($1 + [144]) + [32])) = ($3 + [96])
	*($12) = ($3 + [112])
	*($13) = ($3 + [128])
	*($1 + [148]) = ($3 + [8])
	*($1 + [144]) = $3
	CALL $41(($1 + [144]), ($1 + [216]))
	CALL db_update_i64(*($3 + [148]), (int_64)0, ($1 + [304]), [144])
	if ( (uint_64)($5 <= *($7)) ){ goto $label$195 }
	$17 = [8]
	goto $label$7 
	
.LABEL $label$448
	*($7) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$17 = [9]
	goto $label$7 
	
.LABEL $label$447
	$4 = *($8)
	if ( ($4 == 0) ){ goto $label$194 }
	$17 = [10]
	goto $label$7 
	
.LABEL $label$446
	$16 = (($1 + [472]) + [28])
	$3 = *($16)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$192 }
	$17 = [11]
	goto $label$7 
	
.LABEL $label$445
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$191 }
	$17 = [12]
	goto $label$7 
	
.LABEL $label$444
	CALL _ZdlPv($2)
	$17 = [13]
	goto $label$7 
	
.LABEL $label$443
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$193 }
	$17 = [14]
	goto $label$7 
	
.LABEL $label$442
	$3 = *($8)
	goto $label$190 
	
.LABEL $label$441
	$3 = $4
	$17 = [15]
	goto $label$7 
	
.LABEL $label$440
	*($16) = $4
	CALL _ZdlPv($3)
	$17 = [16]
	goto $label$7 
	
.LABEL $label$439
	$3 = *([0] + [8192])
	$3 = ( *([0] + [8196]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$14 = ($14 + [1])
	if ( ($14 <= $3) ){ goto $label$189 }
	$17 = [17]
	goto $label$7 
	
.LABEL $label$438
	if ( ($3 == 0) ){ goto $label$188 }
	$17 = [18]
	goto $label$7 
	
.LABEL $label$437
	$18 = ($0 + [72])
	$19 = (($1 + [304]) | [8])
	$16 = (($1 + [304]) + [32])
	$20 = (($1 + [88]) | [1])
	$9 = (($1 + [304]) + [16])
	$21 = (($1 + [88]) | [1])
	$7 = (($1 + [304]) + [24])
	$22 = (($1 + [200]) | [1])
	$23 = (($1 + [48]) + [24])
	$24 = (($1 + [304]) + [136])
	$25 = (($1 + [144]) | [1])
	$26 = (($1 + [304]) | [1])
	$27 = (($1 + [144]) | [1])
	$28 = (($1 + [304]) | [1])
	$29 = (($1 + [144]) + [40])
	$30 = ($1 + [492])
	$12 = (($1 + [472]) + [28])
	$31 = ($1 + [508])
	$32 = ($0 + [100])
	$33 = ($0 + [96])
	$34 = ($0 + [80])
	$35 = [0]
	$17 = [19]
	goto $label$7 
	
.LABEL $label$436
	$15 = *($0)
	$6 = ((int_32)$35 * (int_32)[12])
	$8 = ($6 + [8192])
	if ( (*($8) & [1]) ){ goto $label$186 }
	$17 = [250]
	goto $label$7 
	
.LABEL $label$435
	$14 = ($8 + [1])
	$3 = CALL $100($14)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$184 }
	$17 = [21]
	goto $label$7 
	
.LABEL $label$434
	if ( $3 ){ goto $label$183 }
	$17 = [248]
	goto $label$7 
	
.LABEL $label$433
	$5 = (int_64)0
	goto $label$180 
	
.LABEL $label$432
	$14 = *(($6 + [8200]))
	$3 = CALL $100($14)
	if ( ($3 <= [8]) ){ goto $label$185 }
	$17 = [249]
	goto $label$7 
	
.LABEL $label$431
	CALL eosio_assert([0], [17373])
	$17 = [22]
	goto $label$7 
	
.LABEL $label$430
	$5 = (int_64)0
	$17 = [23]
	goto $label$7 
	
.LABEL $label$429
	$4 = (($14 + $3) + [-1])
	$2 = *($4)
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$181 }
	$17 = [247]
	goto $label$7 
	
.LABEL $label$428
	CALL eosio_assert([0], [17418])
	$2 = *($4)
	$17 = [24]
	goto $label$7 
	
.LABEL $label$427
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$182 }
	$17 = [25]
	goto $label$7 
	
.LABEL $label$426
	$5 = ((int_64)$5 << (int_64)8)
	$17 = [26]
	goto $label$7 
	
.LABEL $label$425
	*(($10 = (($1 + [256]) + [8]))) = ((int_64)$5 | (int_64)4)
	*((($1 + [256]) + [16])) = (int_64)-1
	*(($36 = (($1 + [256]) + [24]))) = (int_64)0
	*((($1 + [256]) + [32])) = [0]
	*($1 + [256]) = $15
	$15 = *($0)
	if ( (*($8) & [1]) ){ goto $label$179 }
	$17 = [246]
	goto $label$7 
	
.LABEL $label$424
	$14 = ($8 + [1])
	$3 = CALL $100($14)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$177 }
	$17 = [28]
	goto $label$7 
	
.LABEL $label$423
	if ( $3 ){ goto $label$176 }
	$17 = [244]
	goto $label$7 
	
.LABEL $label$422
	$5 = (int_64)0
	goto $label$173 
	
.LABEL $label$421
	$14 = *(($6 + [8200]))
	$3 = CALL $100($14)
	if ( ($3 <= [8]) ){ goto $label$178 }
	$17 = [245]
	goto $label$7 
	
.LABEL $label$420
	CALL eosio_assert([0], [17373])
	$17 = [29]
	goto $label$7 
	
.LABEL $label$419
	$5 = (int_64)0
	$17 = [30]
	goto $label$7 
	
.LABEL $label$418
	$4 = (($14 + $3) + [-1])
	$2 = *($4)
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$174 }
	$17 = [243]
	goto $label$7 
	
.LABEL $label$417
	CALL eosio_assert([0], [17418])
	$2 = *($4)
	$17 = [31]
	goto $label$7 
	
.LABEL $label$416
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$175 }
	$17 = [32]
	goto $label$7 
	
.LABEL $label$415
	$5 = ((int_64)$5 << (int_64)8)
	$17 = [33]
	goto $label$7 
	
.LABEL $label$414
	*(($37 = (($1 + [216]) + [8]))) = ((int_64)$5 | (int_64)4)
	*((($1 + [216]) + [16])) = (int_64)-1
	*(($38 = (($1 + [216]) + [24]))) = (int_64)0
	$14 = [0]
	*((($1 + [216]) + [32])) = [0]
	*($1 + [216]) = $15
	$3 = CALL db_lowerbound_i64(*($1 + [256]), *($10), (int_64)7035937543832993792, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$172 }
	$17 = [34]
	goto $label$7 
	
.LABEL $label$413
	$14 = CALL $8(($1 + [256]), $3)
	$17 = [35]
	goto $label$7 
	
.LABEL $label$412
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [17309])
	*(($11 = (($1 + [200]) + [8]))) = [0]
	*($1 + [200]) = (int_64)0
	$5 = (uint_64)*($14) >> (uint_64)(int_64)8
	if ( (int_64)($5) == 0) ){ goto $label$171 }
	$17 = [36]
	goto $label$7 
	
.LABEL $label$411
	$2 = [0]
	$17 = [37]
	goto $label$7 
	
.LABEL $label$410
	*((($1 + [144]) + ($3 = $2))) = $5
	$2 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[5]) ){ goto $label$169 }
	$17 = [38]
	goto $label$7 
	
.LABEL $label$409
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$170 }
	$17 = [39]
	goto $label$7 
	
.LABEL $label$408
	*(($8 = (($1 + [304]) + [8]))) = [0]
	*($1 + [304]) = (int_64)0
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$168 }
	$17 = [241]
	goto $label$7 
	
.LABEL $label$407
	*($1 + [304]) = ($2 << [1])
	$4 = $28
	goto $label$167 
	
.LABEL $label$406
	*((($1 + [304]) + [8])) = [0]
	*($1 + [304]) = (int_64)0
	*($1 + [304]) = [0]
	$3 = $28
	goto $label$165 
	
.LABEL $label$405
	$6 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($6)
	*($8) = $4
	*($1 + [304]) = ($6 | [1])
	*($1 + [308]) = $2
	$17 = [41]
	goto $label$7 
	
.LABEL $label$404
	$8 = ($3 + [1])
	$3 = [0]
	$17 = [42]
	goto $label$7 
	
.LABEL $label$403
	*(($4 + $3)) = *((($1 + [144]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$166 }
	$17 = [43]
	goto $label$7 
	
.LABEL $label$402
	$3 = ($4 + $2)
	$17 = [44]
	goto $label$7 
	
.LABEL $label$401
	*($3) = [0]
	*(($6 = (($1 + [144]) + [8]))) = [0]
	*($1 + [144]) = (int_64)0
	$3 = CALL $100([16940])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$164 }
	$17 = [45]
	goto $label$7 
	
.LABEL $label$400
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$163 }
	$17 = [239]
	goto $label$7 
	
.LABEL $label$399
	*($1 + [144]) = ($3 << [1])
	$2 = $27
	if ( $3 ){ goto $label$161 }
	goto $label$162 
	
.LABEL $label$398
	$4 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($4)
	*($6) = $2
	*($1 + [144]) = ($4 | [1])
	*($1 + [148]) = $3
	$17 = [47]
	goto $label$7 
	
.LABEL $label$397
	CALL memcpy($2, [16940], $3)
	$17 = [48]
	goto $label$7 
	
.LABEL $label$396
	$8 = [0]
	*(($2 + $3)) = [0]
	$10 = ($3 & [1])
	$3 = *($1 + [144])
	$4 = ($3 & [1])
	$3 = *($1 + [304])
	$13 = uint_32($3 >> [1])
	$2 = ( *($1 + [308]) ? $13 : $4 )
	if ( ((int_32)$2 != (int_32)( *($1 + [148]) ? uint_32($3 >> [1]) : $10 )) ){ goto $label$160 }
	$17 = [231]
	goto $label$7 
	
.LABEL $label$395
	$3 = ( *($6) ? $27 : $10 )
	if ( $4 ){ goto $label$12 }
	$17 = [235]
	goto $label$7 
	
.LABEL $label$394
	if ( ($2 == 0) ){ goto $label$8 }
	$17 = [236]
	goto $label$7 
	
.LABEL $label$393
	$4 = ([0] - $13)
	$2 = $28
	$17 = [237]
	goto $label$7 
	
.LABEL $label$392
	if ( ((int_32)*($2) != (int_32)*($3)) ){ goto $label$159 }
	$17 = [238]
	goto $label$7 
	
.LABEL $label$391
	$3 = ($3 + [1])
	$2 = ($2 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$390
	if ( ($2 == 0) ){ goto $label$11 }
	$17 = [233]
	goto $label$7 
	
.LABEL $label$389
	$8 = (CALL $99(( *((($1 + [304]) + [8])) ? $28 : $4 ), $3, $2) == 0)
	if ( (*($1 + [144]) & [1]) ){ goto $label$156 }
	goto $label$157 
	
.LABEL $label$388
	$8 = [1]
	$17 = [49]
	goto $label$7 
	
.LABEL $label$387
	if ( ($10 == 0) ){ goto $label$158 }
	$17 = [50]
	goto $label$7 
	
.LABEL $label$386
	CALL _ZdlPv(*($6))
	$17 = [51]
	goto $label$7 
	
.LABEL $label$385
	if ( ((*($1 + [304]) & [1]) == 0) ){ goto $label$155 }
	$17 = [52]
	goto $label$7 
	
.LABEL $label$384
	CALL _ZdlPv(*((($1 + [304]) + [8])))
	$17 = [53]
	goto $label$7 
	
.LABEL $label$383
	if ( ($8 == 0) ){ goto $label$154 }
	$17 = [230]
	goto $label$7 
	
.LABEL $label$382
	CALL $91(($1 + [200]), [8224])
	goto $label$135 
	
.LABEL $label$381
	$5 = (uint_64)*($14) >> (uint_64)(int_64)8
	if ( (int_64)($5) == 0) ){ goto $label$153 }
	$17 = [55]
	goto $label$7 
	
.LABEL $label$380
	$2 = [0]
	$17 = [56]
	goto $label$7 
	
.LABEL $label$379
	*((($1 + [144]) + ($3 = $2))) = $5
	$2 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[5]) ){ goto $label$151 }
	$17 = [57]
	goto $label$7 
	
.LABEL $label$378
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$152 }
	$17 = [58]
	goto $label$7 
	
.LABEL $label$377
	*(($8 = (($1 + [304]) + [8]))) = [0]
	*($1 + [304]) = (int_64)0
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$150 }
	$17 = [228]
	goto $label$7 
	
.LABEL $label$376
	*($1 + [304]) = ($2 << [1])
	$4 = $26
	goto $label$149 
	
.LABEL $label$375
	*((($1 + [304]) + [8])) = [0]
	*($1 + [304]) = (int_64)0
	*($1 + [304]) = [0]
	$3 = $26
	goto $label$147 
	
.LABEL $label$374
	$10 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($10)
	*($8) = $4
	*($1 + [304]) = ($10 | [1])
	*($1 + [308]) = $2
	$17 = [60]
	goto $label$7 
	
.LABEL $label$373
	$8 = ($3 + [1])
	$3 = [0]
	$17 = [61]
	goto $label$7 
	
.LABEL $label$372
	*(($4 + $3)) = *((($1 + [144]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$148 }
	$17 = [62]
	goto $label$7 
	
.LABEL $label$371
	$3 = ($4 + $2)
	$17 = [63]
	goto $label$7 
	
.LABEL $label$370
	*($3) = [0]
	*($6) = [0]
	*($1 + [144]) = (int_64)0
	$3 = CALL $100([16944])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$146 }
	$17 = [64]
	goto $label$7 
	
.LABEL $label$369
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$145 }
	$17 = [226]
	goto $label$7 
	
.LABEL $label$368
	*($1 + [144]) = ($3 << [1])
	$2 = $25
	if ( $3 ){ goto $label$143 }
	goto $label$144 
	
.LABEL $label$367
	$4 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($4)
	*($6) = $2
	*($1 + [144]) = ($4 | [1])
	*($1 + [148]) = $3
	$17 = [66]
	goto $label$7 
	
.LABEL $label$366
	CALL memcpy($2, [16944], $3)
	$17 = [67]
	goto $label$7 
	
.LABEL $label$365
	$8 = [0]
	*(($2 + $3)) = [0]
	$10 = ($3 & [1])
	$3 = *($1 + [144])
	$4 = ($3 & [1])
	$3 = *($1 + [304])
	$13 = uint_32($3 >> [1])
	$2 = ( *($1 + [308]) ? $13 : $4 )
	if ( ((int_32)$2 != (int_32)( *($1 + [148]) ? uint_32($3 >> [1]) : $10 )) ){ goto $label$142 }
	$17 = [218]
	goto $label$7 
	
.LABEL $label$364
	$3 = ( *($6) ? $25 : $10 )
	if ( $4 ){ goto $label$17 }
	$17 = [222]
	goto $label$7 
	
.LABEL $label$363
	if ( ($2 == 0) ){ goto $label$13 }
	$17 = [223]
	goto $label$7 
	
.LABEL $label$362
	$4 = ([0] - $13)
	$2 = $26
	$17 = [224]
	goto $label$7 
	
.LABEL $label$361
	if ( ((int_32)*($2) != (int_32)*($3)) ){ goto $label$141 }
	$17 = [225]
	goto $label$7 
	
.LABEL $label$360
	$3 = ($3 + [1])
	$2 = ($2 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$359
	if ( ($2 == 0) ){ goto $label$16 }
	$17 = [220]
	goto $label$7 
	
.LABEL $label$358
	$8 = (CALL $99(( *((($1 + [304]) + [8])) ? $26 : $4 ), $3, $2) == 0)
	if ( (*($1 + [144]) & [1]) ){ goto $label$138 }
	goto $label$139 
	
.LABEL $label$357
	$8 = [1]
	$17 = [68]
	goto $label$7 
	
.LABEL $label$356
	if ( ($10 == 0) ){ goto $label$140 }
	$17 = [69]
	goto $label$7 
	
.LABEL $label$355
	CALL _ZdlPv(*($6))
	$17 = [70]
	goto $label$7 
	
.LABEL $label$354
	if ( ((*($1 + [304]) & [1]) == 0) ){ goto $label$137 }
	$17 = [71]
	goto $label$7 
	
.LABEL $label$353
	CALL _ZdlPv(*((($1 + [304]) + [8])))
	$17 = [72]
	goto $label$7 
	
.LABEL $label$352
	if ( ($8 == 0) ){ goto $label$136 }
	$17 = [217]
	goto $label$7 
	
.LABEL $label$351
	CALL $91(($1 + [200]), [8236])
	$17 = [73]
	goto $label$7 
	
.LABEL $label$350
	$39 = *($14 + [48])
	$5 = *($14 + [80])
	*((($1 + [144]) + [16])) = $5
	$15 = *($14 + [96])
	*((($1 + [144]) + [24])) = $15
	$40 = *($14 + [112])
	*((($1 + [144]) + [32])) = $40
	$41 = *($14 + [128])
	*($29) = $41
	*($1 + [144]) = (int_64)0
	$42 = *($14 + [64])
	*($1 + [152]) = $42
	$3 = ((int_64)$5 > (int_64)$42)
	$2 = [2]
	$43 = ((float_64)(CASTING float_64)(int_64 $39) * (float_64)(float_64)0.95)
	if ( ((float_64)(float_64)|$43| < (float_64)(float_64)9223372036854775808) ){ goto $label$134 }
	$17 = [216]
	goto $label$7 
	
.LABEL $label$349
	$39 = (int_64)-9223372036854775808
	$3 = ( [2] ? [1] : $3 )
	if ( ((int_64)($42 == 0) == 0) ){ goto $label$131 }
	goto $label$132 
	
.LABEL $label$348
	$39 = (Rounds 0)($43)
	$3 = ( [2] ? [1] : $3 )
	if ( (int_64)($42 == 0) ){ goto $label$133 }
	$17 = [75]
	goto $label$7 
	
.LABEL $label$347
	$2 = ( ( [2] ? [1] : ((int_64)$5 < (int_64)$42) ) ? [1] : ((int_64)$5 != (int_64)0) )
	$5 = *((($1 + [144]) + ($2 << [3])))
	$17 = [76]
	goto $label$7 
	
.LABEL $label$346
	$4 = [3]
	$3 = ( [3] ? $3 : ((int_64)$15 > (int_64)*((($1 + [144]) + ($3 << [3])))) )
	if ( (int_64)($5 == 0) ){ goto $label$130 }
	$17 = [77]
	goto $label$7 
	
.LABEL $label$345
	$4 = ( ( [3] ? $2 : ((int_64)$15 < (int_64)$5) ) ? $2 : ((int_64)$15 != (int_64)0) )
	$15 = *((($1 + [144]) + ($4 << [3])))
	$17 = [78]
	goto $label$7 
	
.LABEL $label$344
	$8 = [4]
	$2 = ( [4] ? $3 : ((int_64)$40 > (int_64)*((($1 + [144]) + ($3 << [3])))) )
	if ( (int_64)($15 == 0) ){ goto $label$129 }
	$17 = [79]
	goto $label$7 
	
.LABEL $label$343
	$8 = ( ( [4] ? $4 : ((int_64)$40 < (int_64)$15) ) ? $4 : ((int_64)$40 != (int_64)0) )
	$40 = *((($1 + [144]) + ($8 << [3])))
	$17 = [80]
	goto $label$7 
	
.LABEL $label$342
	$3 = [5]
	$4 = ((int_64)$41 > (int_64)*((($1 + [144]) + ($2 << [3]))))
	$6 = ( [5] ? $2 : $4 )
	if ( (int_64)($40 == 0) ){ goto $label$128 }
	$17 = [81]
	goto $label$7 
	
.LABEL $label$341
	$3 = ( ( [5] ? $8 : ((int_64)$41 < (int_64)$40) ) ? $8 : ((int_64)$41 != (int_64)0) )
	$17 = [82]
	goto $label$7 
	
.LABEL $label$340
	$2 = (($1 + [144]) + ($6 << [3]))
	$40 = *($2)
	if ( ((int_64)$40 == (int_64)0) ){ goto $label$127 }
	$17 = [83]
	goto $label$7 
	
.LABEL $label$339
	$10 = [0]
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$125 }
	$17 = [212]
	goto $label$7 
	
.LABEL $label$338
	if ( $4 ){ goto $label$18 }
	$17 = [213]
	goto $label$7 
	
.LABEL $label$337
	if ( ((int_64)*(($2 + [-8])) != (int_64)0) ){ goto $label$126 }
	$17 = [214]
	goto $label$7 
	
.LABEL $label$336
	$10 = [1]
	$17 = [84]
	goto $label$7 
	
.LABEL $label$335
	*(($13 = (($1 + [48]) + [8]))) = *(($14 + [40]))
	*($1 + [48]) = (int_64)0
	$2 = CALL db_lowerbound_i64(*($1 + [216]), *($37), (int_64)-6030912129882488832, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$124 }
	$17 = [85]
	goto $label$7 
	
.LABEL $label$334
	$44 = ($3 + ((int_32)$6 == (int_32)$3))
	$3 = CALL $9(($1 + [216]), $2)
	*($1 + [140]) = $3
	*($1 + [136]) = ($1 + [216])
	$45 = (CASTING float_64)(int_64 $39)
	$17 = [86]
	goto $label$7 
	
.LABEL $label$333
	$2 = (($6 & [7]) + [-1])
	if ( ((uint_32)$2 > (uint_32)[4]) ){ goto $label$121 }
	$17 = [87]
	goto $label$7 
	
.LABEL $label$332
	goto $label$463 
	
.LABEL $label$463
	$17 = [209]
	goto $label$7 
	
.LABEL $label$331
	$46 = ((float_32)(CASTING float_32)(int_64 *($3 + [16])) / (float_32)(CASTING float_32)(int_64 *(($14 + [64]))))
	if ( $10 ){ goto $label$106 }
	$17 = [89]
	goto $label$7 
	
.LABEL $label$330
	$3 = ($44 + [-1])
	if ( ((uint_32)$3 > (uint_32)[4]) ){ goto $label$105 }
	$17 = [90]
	goto $label$7 
	
.LABEL $label$329
	goto $label$464 
	
.LABEL $label$464
	$17 = [204]
	goto $label$7 
	
.LABEL $label$328
	$46 = ((float_32)$46 + (float_32)((float_32)(CASTING float_32)(int_64 *(*($1 + [140]) + [16])) / (float_32)(CASTING float_32)(int_64 *(($14 + [64])))))
	goto $label$96 
	
.LABEL $label$327
	$46 = ((float_32)(CASTING float_32)(int_64 *($3 + [80])) / (float_32)(CASTING float_32)(int_64 *(($14 + [128]))))
	if ( ($10 == 0) ){ goto $label$115 }
	goto $label$116 
	
.LABEL $label$326
	$46 = ((float_32)(CASTING float_32)(int_64 *($3 + [48])) / (float_32)(CASTING float_32)(int_64 *(($14 + [96]))))
	if ( ($10 == 0) ){ goto $label$111 }
	goto $label$112 
	
.LABEL $label$325
	$46 = ((float_32)(CASTING float_32)(int_64 *($3 + [64])) / (float_32)(CASTING float_32)(int_64 *(($14 + [112]))))
	if ( ($10 == 0) ){ goto $label$113 }
	goto $label$114 
	
.LABEL $label$324
	$46 = ((float_32)(CASTING float_32)(int_64 *($3 + [32])) / (float_32)(CASTING float_32)(int_64 *(($14 + [80]))))
	if ( ($10 == 0) ){ goto $label$109 }
	goto $label$110 
	
.LABEL $label$323
	CALL eosio_assert([0], [17326])
	$46 = (float_32)0
	if ( ($10 == 0) ){ goto $label$107 }
	goto $label$108 
	
.LABEL $label$322
	$46 = ((float_32)$46 + (float_32)((float_32)(CASTING float_32)(int_64 *(*($1 + [140]) + [80])) / (float_32)(CASTING float_32)(int_64 *(($14 + [128])))))
	goto $label$100 
	
.LABEL $label$321
	$46 = ((float_32)$46 + (float_32)((float_32)(CASTING float_32)(int_64 *(*($1 + [140]) + [48])) / (float_32)(CASTING float_32)(int_64 *(($14 + [96])))))
	goto $label$98 
	
.LABEL $label$320
	$46 = ((float_32)$46 + (float_32)((float_32)(CASTING float_32)(int_64 *(*($1 + [140]) + [64])) / (float_32)(CASTING float_32)(int_64 *(($14 + [112])))))
	goto $label$99 
	
.LABEL $label$319
	$46 = ((float_32)$46 + (float_32)((float_32)(CASTING float_32)(int_64 *(*($1 + [140]) + [32])) / (float_32)(CASTING float_32)(int_64 *(($14 + [80])))))
	goto $label$97 
	
.LABEL $label$318
	CALL eosio_assert([0], [17326])
	$17 = [92]
	goto $label$7 
	
.LABEL $label$317
	$43 = ((float_64)((float_64)(PROMOTE float_64)(float_32 $46) * (float_64)(float_64)0.5) * (float_64)$45)
	if ( ((float_64)(float_64)|$43| < (float_64)(float_64)9223372036854775808) ){ goto $label$95 }
	$17 = [200]
	goto $label$7 
	
.LABEL $label$316
	*($1 + [48]) = (int_64)-9223372036854775808
	if ( ((int_64)-9223372036854775808 >= (int_64)1) ){ goto $label$92 }
	goto $label$91 
	
.LABEL $label$315
	$5 = (Rounds 0)($43)
	*($1 + [48]) = $5
	if ( ((int_64)$5 < (int_64)1) ){ goto $label$93 }
	$17 = [184]
	goto $label$7 
	
.LABEL $label$314
	*((($1 + [120]) + [8])) = (int_64)3617214756542218240
	*($1 + [120]) = *($0)
	$3 = ( *($11) ? $22 : (*($1 + [200]) & [1]) )
	*($1 + [104]) = $3
	*($1 + [108]) = CALL $100($3)
	*($1 + [16]) = *($1 + [104])
	CALL $20(($1 + [112]), ($1 + [16]))
	$8 = *($1 + [140])
	*(($2 = (($1 + [88]) + [8]))) = [0]
	*($1 + [88]) = (int_64)0
	$3 = CALL $100([17220])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$26 }
	$17 = [185]
	goto $label$7 
	
.LABEL $label$313
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$25 }
	$17 = [198]
	goto $label$7 
	
.LABEL $label$312
	*($1 + [88]) = ($3 << [1])
	$4 = $21
	if ( $3 ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$311
	$37 = (($3 + [16]) & [-16])
	$4 = CALL _Znwj($37)
	*($2) = $4
	*($1 + [88]) = ($37 | [1])
	*($1 + [92]) = $3
	$17 = [187]
	goto $label$7 
	
.LABEL $label$310
	CALL memcpy($4, [17220], $3)
	$17 = [188]
	goto $label$7 
	
.LABEL $label$309
	*(($4 + $3)) = [0]
	$5 = *($8)
	*($9) = *($1 + [48])
	*(($9 + [8])) = *($13)
	*($16) = *($1 + [88])
	*(($16 + [8])) = *($2)
	*((($1 + [304]) + [8])) = $5
	*($2) = [0]
	*($1 + [304]) = *($0)
	*($1 + [88]) = (int_64)0
	CALL $22(($1 + [456]), CALL $21(($1 + [472]), ($1 + [120]), *($1 + [112]), (int_64)-3617168760277827584, ($1 + [304])))
	$3 = *($1 + [456])
	CALL send_inline($3, (*($1 + [460]) - $3))
	$3 = *($1 + [456])
	if ( ($3 == 0) ){ goto $label$22 }
	$17 = [189]
	goto $label$7 
	
.LABEL $label$308
	*($1 + [460]) = $3
	CALL _ZdlPv($3)
	$17 = [190]
	goto $label$7 
	
.LABEL $label$307
	$3 = *($12)
	if ( ($3 == 0) ){ goto $label$21 }
	$17 = [191]
	goto $label$7 
	
.LABEL $label$306
	*((($1 + [472]) + [32])) = $3
	CALL _ZdlPv($3)
	$17 = [192]
	goto $label$7 
	
.LABEL $label$305
	$3 = *((($1 + [472]) + [16]))
	if ( ($3 == 0) ){ goto $label$20 }
	$17 = [193]
	goto $label$7 
	
.LABEL $label$304
	*($30) = $3
	CALL _ZdlPv($3)
	$17 = [194]
	goto $label$7 
	
.LABEL $label$303
	if ( ((*($16) & [1]) == 0) ){ goto $label$19 }
	$17 = [195]
	goto $label$7 
	
.LABEL $label$302
	CALL _ZdlPv(*((($1 + [304]) + [40])))
	$17 = [196]
	goto $label$7 
	
.LABEL $label$301
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$94 }
	$17 = [197]
	goto $label$7 
	
.LABEL $label$300
	CALL _ZdlPv(*($2))
	$17 = [94]
	goto $label$7 
	
.LABEL $label$299
	*($9) = (int_64)-1
	*($7) = (int_64)0
	*($16) = [0]
	*((($1 + [304]) + [8])) = *(*($1 + [140]))
	$5 = *($0)
	*($1 + [304]) = $5
	*((($1 + [472]) + [8])) = ($1 + [136])
	*((($1 + [472]) + [12])) = ($1 + [48])
	*($1 + [476]) = ($1 + [296])
	*($1 + [472]) = ($1 + [304])
	*($1 + [456]) = $5
	CALL eosio_assert(((int_64)$5 == (int_64)CALL $fimport$5()), [17634])
	*((($1 + [120]) + [8])) = ($1 + [456])
	*($1 + [124]) = ($1 + [472])
	*($1 + [120]) = ($1 + [304])
	*(($3 = CALL _Znwj([144])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [72]) = (int_64)0
	*($3 + [80]) = (int_64)0
	*($3 + [88]) = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [104]) = (int_64)0
	*($3 + [112]) = (int_64)0
	*($3 + [120]) = (int_64)0
	*($3 + [128]) = ($1 + [304])
	CALL $42(($1 + [120]), $3)
	*($1 + [88]) = $3
	$5 = *($3)
	*($1 + [120]) = $5
	$4 = *($3 + [132])
	*($1 + [468]) = $4
	$8 = (($1 + [304]) + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*($16)) ){ goto $label$90 }
	$17 = [183]
	goto $label$7 
	
.LABEL $label$298
	*($2 + [8]) = $5
	*($2 + [16]) = $4
	*($1 + [88]) = [0]
	*($2) = $3
	*($8) = ($2 + [24])
	$3 = *($1 + [88])
	*($1 + [88]) = [0]
	if ( $3 ){ goto $label$87 }
	goto $label$88 
	
.LABEL $label$297
	CALL $43($7, ($1 + [88]), ($1 + [120]), ($1 + [468]))
	$3 = *($1 + [88])
	*($1 + [88]) = [0]
	if ( ($3 == 0) ){ goto $label$89 }
	$17 = [96]
	goto $label$7 
	
.LABEL $label$296
	CALL _ZdlPv($3)
	$17 = [97]
	goto $label$7 
	
.LABEL $label$295
	$3 = [0]
	$5 = *($1 + [136])
	$2 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	$4 = ((int_32)$2) != (int_32)[0]
	CALL eosio_assert($4), [18109])
	CALL eosio_assert($4, [18143])
	$4 = CALL db_next_i64(*($2 + [100]), ($1 + [472]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$86 }
	$17 = [98]
	goto $label$7 
	
.LABEL $label$294
	$3 = CALL $9((CASTING uint_32)(uint_64 $5), $4)
	$17 = [99]
	goto $label$7 
	
.LABEL $label$293
	CALL $27(($1 + [216]), $2)
	*($1 + [136]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)32) | (int_64)((int_64)$5 & (int_64)4294967295))
	$4 = *($7)
	if ( ($4 == 0) ){ goto $label$85 }
	$17 = [100]
	goto $label$7 
	
.LABEL $label$292
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$83 }
	$17 = [101]
	goto $label$7 
	
.LABEL $label$291
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$82 }
	$17 = [102]
	goto $label$7 
	
.LABEL $label$290
	CALL _ZdlPv($2)
	$17 = [103]
	goto $label$7 
	
.LABEL $label$289
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$84 }
	$17 = [104]
	goto $label$7 
	
.LABEL $label$288
	$3 = *($7)
	goto $label$81 
	
.LABEL $label$287
	$3 = $4
	$17 = [105]
	goto $label$7 
	
.LABEL $label$286
	*($8) = $4
	CALL _ZdlPv($3)
	$3 = *($1 + [140])
	$17 = [106]
	goto $label$7 
	
.LABEL $label$285
	if ( $3 ){ goto $label$122 }
	goto $label$123 
	
.LABEL $label$284
	$10 = [0]
	goto $label$80 
	
.LABEL $label$283
	*($1 + [140]) = [0]
	*($1 + [136]) = ($1 + [216])
	$17 = [107]
	goto $label$7 
	
.LABEL $label$282
	*(($4 = (($1 + [48]) + [16]))) = (int_64)-1
	*($23) = (int_64)0
	*(($37 = (($1 + [48]) + [32]))) = [0]
	$6 = ($14 + [40])
	*(($8 = (($1 + [48]) + [8]))) = *($6)
	$15 = *($0)
	*($1 + [48]) = $15
	CALL eosio_assert(((int_64)$15 == (int_64)CALL $fimport$5()), [17634])
	*(($3 = CALL _Znwj([152])) + [32]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [72]) = (int_64)0
	*($3 + [80]) = (int_64)0
	*($3 + [88]) = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [104]) = (int_64)0
	*($3 + [112]) = (int_64)0
	*($3 + [120]) = (int_64)0
	*($3 + [128]) = (int_64)0
	*($3 + [136]) = ($1 + [48])
	$2 = *($1 + [300])
	*($3 + [16]) = *($2 + [40])
	*($3 + [8]) = *($2 + [32])
	*($3) = *($2 + [8])
	*($3 + [32]) = *($6)
	*($3 + [24]) = *($14 + [32])
	$6 = ($14 + [56])
	*($3 + [48]) = *($6)
	$13 = ($14 + [48])
	*($3 + [40]) = *($13)
	*($3 + [64]) = *(($14 + [72]))
	*($3 + [56]) = *($14 + [64])
	*($3 + [80]) = *(($14 + [88]))
	*($3 + [72]) = *($14 + [80])
	*($3 + [96]) = *(($14 + [104]))
	*($3 + [88]) = *($14 + [96])
	*($3 + [112]) = *(($14 + [120]))
	*($3 + [104]) = *($14 + [112])
	*($3 + [128]) = *(($14 + [136]))
	*($3 + [120]) = *($14 + [128])
	*(($44 = (($1 + [120]) + [8]))) = $24
	*($1 + [124]) = ($1 + [304])
	*($1 + [120]) = ($1 + [304])
	*($1 + [456]) = ($1 + [120])
	*((($1 + [472]) + [8])) = ($3 + [16])
	*((($1 + [472]) + [12])) = ($3 + [24])
	*(($47 = (($1 + [472]) + [16]))) = ($3 + [40])
	*($30) = ($3 + [56])
	*((($1 + [472]) + [24])) = ($3 + [72])
	*($12) = ($3 + [88])
	*(($48 = (($1 + [472]) + [32]))) = ($3 + [104])
	*($31) = ($3 + [120])
	*($1 + [476]) = ($3 + [8])
	*($1 + [472]) = $3
	CALL $44(($1 + [472]), ($1 + [456]))
	$5 = *($3)
	$14 = CALL db_store_i64(*($8), (int_64)-4706072867916595200, $15, $5, ($1 + [304]), [136])
	*($3 + [140]) = $14
	if ( (uint_64)($5 <= *($4)) ){ goto $label$79 }
	$17 = [108]
	goto $label$7 
	
.LABEL $label$281
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$17 = [109]
	goto $label$7 
	
.LABEL $label$280
	*($1 + [472]) = $3
	$5 = *($3)
	*($1 + [304]) = $5
	*($1 + [120]) = $14
	$8 = (($1 + [48]) + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*($37)) ){ goto $label$78 }
	$17 = [181]
	goto $label$7 
	
.LABEL $label$279
	*($2 + [8]) = $5
	*($2 + [16]) = $14
	*($1 + [472]) = [0]
	*($2) = $3
	*($8) = ($2 + [24])
	$3 = *($1 + [472])
	*($1 + [472]) = [0]
	if ( $3 ){ goto $label$75 }
	goto $label$76 
	
.LABEL $label$278
	CALL $45($23, ($1 + [472]), ($1 + [304]), ($1 + [120]))
	$3 = *($1 + [472])
	*($1 + [472]) = [0]
	if ( ($3 == 0) ){ goto $label$77 }
	$17 = [111]
	goto $label$7 
	
.LABEL $label$277
	CALL _ZdlPv($3)
	$17 = [112]
	goto $label$7 
	
.LABEL $label$276
	if ( (int_64)($40 == 0) ){ goto $label$74 }
	$17 = [113]
	goto $label$7 
	
.LABEL $label$275
	$43 = (CASTING float_64)(int_64 *($13))
	$45 = ((float_64)$43 * (float_64)(float_64)0.015)
	if ( ((float_64)(float_64)|$45| < (float_64)(float_64)9223372036854775808) ){ goto $label$73 }
	$17 = [180]
	goto $label$7 
	
.LABEL $label$274
	$15 = (int_64)-9223372036854775808
	$5 = *($6)
	if ( ((int_64)-9223372036854775808 >= (int_64)1) ){ goto $label$71 }
	goto $label$70 
	
.LABEL $label$273
	$5 = *($6)
	$15 = (Rounds 0)($45)
	if ( ((int_64)$15 < (int_64)1) ){ goto $label$72 }
	$17 = [163]
	goto $label$7 
	
.LABEL $label$272
	*($44) = (int_64)3617214756542218240
	*($1 + [120]) = *($0)
	$3 = ( *($11) ? $22 : (*($1 + [200]) & [1]) )
	*($1 + [32]) = $3
	*($1 + [36]) = CALL $100($3)
	*($1 + [8]) = *($1 + [32])
	CALL $20(($1 + [40]), ($1 + [8]))
	*($1 + [24]) = [17337]
	*($1 + [28]) = CALL $100([17337])
	*($1) = *($1 + [24])
	CALL $20(($1 + [136]), $1)
	*(($2 = (($1 + [88]) + [8]))) = [0]
	*($1 + [88]) = (int_64)0
	$3 = CALL $100([17220])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$35 }
	$17 = [164]
	goto $label$7 
	
.LABEL $label$271
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$34 }
	$17 = [178]
	goto $label$7 
	
.LABEL $label$270
	*($1 + [88]) = ($3 << [1])
	$4 = $20
	if ( $3 ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$269
	$14 = (($3 + [16]) & [-16])
	$4 = CALL _Znwj($14)
	*($2) = $4
	*($1 + [88]) = ($14 | [1])
	*($1 + [92]) = $3
	$17 = [166]
	goto $label$7 
	
.LABEL $label$268
	CALL memcpy($4, [17220], $3)
	$17 = [167]
	goto $label$7 
	
.LABEL $label$267
	*(($4 + $3)) = [0]
	*((($1 + [304]) + [8])) = *($1 + [136])
	*($9) = $15
	*($7) = $5
	*($16) = *($1 + [88])
	*(($16 + [8])) = *($2)
	*($2) = [0]
	*($1 + [304]) = *($0)
	*($1 + [88]) = (int_64)0
	CALL $22(($1 + [456]), CALL $21(($1 + [472]), ($1 + [120]), *($1 + [40]), (int_64)-3617168760277827584, ($1 + [304])))
	$3 = *($1 + [456])
	CALL send_inline($3, (*($1 + [460]) - $3))
	$3 = *($1 + [456])
	if ( ($3 == 0) ){ goto $label$31 }
	$17 = [168]
	goto $label$7 
	
.LABEL $label$266
	*($1 + [460]) = $3
	CALL _ZdlPv($3)
	$17 = [169]
	goto $label$7 
	
.LABEL $label$265
	$3 = *($12)
	if ( ($3 == 0) ){ goto $label$30 }
	$17 = [170]
	goto $label$7 
	
.LABEL $label$264
	*($48) = $3
	CALL _ZdlPv($3)
	$17 = [171]
	goto $label$7 
	
.LABEL $label$263
	$3 = *($47)
	if ( ($3 == 0) ){ goto $label$29 }
	$17 = [172]
	goto $label$7 
	
.LABEL $label$262
	*($30) = $3
	CALL _ZdlPv($3)
	$17 = [173]
	goto $label$7 
	
.LABEL $label$261
	if ( ((*($16) & [1]) == 0) ){ goto $label$28 }
	$17 = [174]
	goto $label$7 
	
.LABEL $label$260
	CALL _ZdlPv(*((($1 + [304]) + [40])))
	$17 = [175]
	goto $label$7 
	
.LABEL $label$259
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$27 }
	$17 = [176]
	goto $label$7 
	
.LABEL $label$258
	CALL _ZdlPv(*($2))
	$17 = [177]
	goto $label$7 
	
.LABEL $label$257
	$5 = *($6)
	$43 = (CASTING float_64)(int_64 *($13))
	$17 = [115]
	goto $label$7 
	
.LABEL $label$256
	$45 = ((float_64)$43 * (float_64)(float_64)0.035)
	if ( ((float_64)(float_64)|$45| < (float_64)(float_64)9223372036854775808) ){ goto $label$69 }
	$17 = [162]
	goto $label$7 
	
.LABEL $label$255
	$15 = (int_64)-9223372036854775808
	if ( $10 ){ goto $label$67 }
	$17 = [117]
	goto $label$7 
	
.LABEL $label$254
	$2 = *($32)
	$14 = *($33)
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$64 }
	$17 = [118]
	goto $label$7 
	
.LABEL $label$253
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4 + [8]) == (int_64)$5) ){ goto $label$60 }
	$17 = [119]
	goto $label$7 
	
.LABEL $label$252
	$2 = $3
	if ( ((int_32)$14 != (int_32)$3) ){ goto $label$65 }
	goto $label$66 
	
.LABEL $label$251
	$15 = (Rounds 0)($45)
	if ( ($10 == 0) ){ goto $label$68 }
	$17 = [159]
	goto $label$7 
	
.LABEL $label$250
	$43 = ((float_64)((float_64)$43 * (float_64)(float_64)0.475) + (float_64)(CASTING float_64)(int_64 $15))
	if ( ((float_64)(float_64)|$43| < (float_64)(float_64)9223372036854775808) ){ goto $label$36 }
	$17 = [161]
	goto $label$7 
	
.LABEL $label$249
	$15 = (int_64)-9223372036854775808
	$2 = *($32)
	$14 = *($33)
	if ( ((int_32)$14 != (int_32)$2) ){ goto $label$61 }
	goto $label$62 
	
.LABEL $label$248
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$59 }
	$17 = [158]
	goto $label$7 
	
.LABEL $label$247
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$18), [17713])
	goto $label$57 
	
.LABEL $label$246
	$15 = (Rounds 0)($43)
	$2 = *($32)
	$14 = *($33)
	if ( ((int_32)$14 != (int_32)$2) ){ goto $label$63 }
	$17 = [120]
	goto $label$7 
	
.LABEL $label$245
	$4 = [0]
	$3 = CALL db_find_i64(*($18), *($34), (int_64)-7297072087558180352, $5)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$58 }
	$17 = [121]
	goto $label$7 
	
.LABEL $label$244
	$4 = CALL $33($18, $3)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$18), [17713])
	$17 = [122]
	goto $label$7 
	
.LABEL $label$243
	$3 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($3, [17290])
	CALL eosio_assert($3, [17764])
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$18), [17799])
	CALL eosio_assert(((int_64)*($18) == (int_64)CALL $fimport$5()), [17845])
	*($4) = $15
	$5 = *($4 + [8])
	CALL eosio_assert([1], [17896])
	CALL eosio_assert([1], [17628])
	CALL memcpy(($1 + [304]), $4, [8])
	*($1 + [472]) = *($4 + [8])
	CALL eosio_assert([1], [17628])
	CALL memcpy($19, ($1 + [472]), [8])
	CALL db_update_i64(*($4 + [20]), (int_64)0, ($1 + [304]), [16])
	$3 = ($0 + [88])
	if ( (uint_64)($5 <= *($3)) ){ goto $label$56 }
	$17 = [123]
	goto $label$7 
	
.LABEL $label$242
	*($3) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$17 = [124]
	goto $label$7 
	
.LABEL $label$241
	$4 = *($23)
	if ( ($4 == 0) ){ goto $label$55 }
	$17 = [125]
	goto $label$7 
	
.LABEL $label$240
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$53 }
	$17 = [126]
	goto $label$7 
	
.LABEL $label$239
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$52 }
	$17 = [127]
	goto $label$7 
	
.LABEL $label$238
	CALL _ZdlPv($2)
	$17 = [128]
	goto $label$7 
	
.LABEL $label$237
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$54 }
	$17 = [129]
	goto $label$7 
	
.LABEL $label$236
	$3 = *($23)
	goto $label$51 
	
.LABEL $label$235
	$3 = $4
	$17 = [130]
	goto $label$7 
	
.LABEL $label$234
	*($8) = $4
	CALL _ZdlPv($3)
	$17 = [131]
	goto $label$7 
	
.LABEL $label$233
	if ( ((*($1 + [200]) & [1]) == 0) ){ goto $label$50 }
	$17 = [132]
	goto $label$7 
	
.LABEL $label$232
	CALL _ZdlPv(*($11))
	$17 = [133]
	goto $label$7 
	
.LABEL $label$231
	$4 = *($38)
	if ( ($4 == 0) ){ goto $label$49 }
	$17 = [134]
	goto $label$7 
	
.LABEL $label$230
	$14 = (($1 + [216]) + [28])
	$3 = *($14)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$47 }
	$17 = [135]
	goto $label$7 
	
.LABEL $label$229
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$46 }
	$17 = [136]
	goto $label$7 
	
.LABEL $label$228
	CALL _ZdlPv($2)
	$17 = [137]
	goto $label$7 
	
.LABEL $label$227
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$48 }
	$17 = [138]
	goto $label$7 
	
.LABEL $label$226
	$3 = *($38)
	goto $label$45 
	
.LABEL $label$225
	$3 = $4
	$17 = [139]
	goto $label$7 
	
.LABEL $label$224
	*($14) = $4
	CALL _ZdlPv($3)
	$17 = [140]
	goto $label$7 
	
.LABEL $label$223
	$4 = *($36)
	if ( ($4 == 0) ){ goto $label$44 }
	$17 = [141]
	goto $label$7 
	
.LABEL $label$222
	$14 = (($1 + [256]) + [28])
	$3 = *($14)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$42 }
	$17 = [142]
	goto $label$7 
	
.LABEL $label$221
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$41 }
	$17 = [143]
	goto $label$7 
	
.LABEL $label$220
	CALL _ZdlPv($2)
	$17 = [144]
	goto $label$7 
	
.LABEL $label$219
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$43 }
	$17 = [145]
	goto $label$7 
	
.LABEL $label$218
	$3 = *($36)
	goto $label$40 
	
.LABEL $label$217
	$3 = $4
	$17 = [146]
	goto $label$7 
	
.LABEL $label$216
	*($14) = $4
	CALL _ZdlPv($3)
	$17 = [147]
	goto $label$7 
	
.LABEL $label$215
	$3 = *([0] + [8192])
	$35 = ($35 + [1])
	if ( ($35 <= ( *([0] + [8196]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$187 }
	$17 = [148]
	goto $label$7 
	
.LABEL $label$214
	*($1 + [312]) = (int_64)3617214756542218240
	$5 = *($0)
	*($1 + [304]) = $5
	*($1 + [144]) = (int_64)-4157529782108553216
	$2 = ($0 + [112])
	$4 = ($0 + [152])
	$3 = *($4)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [156]))) ){ goto $label$39 }
	$17 = [153]
	goto $label$7 
	
.LABEL $label$213
	*($3 + [8]) = (int_64)-4157529782108553216
	*($3) = $5
	*($3 + [16 align=4]) = (int_64)0
	*(($14 = ($3 + [24]))) = [0]
	$16 = CALL _Znwj([16])
	*($3 + [16]) = $16
	$7 = ($16 + [16])
	*($14) = $7
	*(($16 + [8])) = *((($1 + [304]) + [8]))
	*($16) = *($1 + [304])
	*(($3 + [20])) = $7
	*($3 + [28 align=4]) = (int_64)0
	*(($3 + [36])) = [0]
	*($4) = (*($4) + [40])
	goto $label$38 
	
.LABEL $label$212
	CALL $36(($0 + [148]), ($1 + [304]), $0, ($1 + [144]), ($1 + [472]))
	$17 = [150]
	goto $label$7 
	
.LABEL $label$211
	*(($0 + [132])) = [28800]
	*($1 + [312]) = (int_64)0
	$5 = *($0)
	*($1 + [304]) = $5
	CALL $37(($1 + [144]), $2)
	$3 = *($1 + [144])
	CALL send_deferred(($1 + [304]), $5, $3, (*($1 + [148]) - $3), [1])
	$3 = *($1 + [144])
	if ( ($3 == 0) ){ goto $label$37 }
	$17 = [151]
	goto $label$7 
	
.LABEL $label$210
	*($1 + [148]) = $3
	CALL _ZdlPv($3)
	$17 = [152]
	goto $label$7 
	
.LABEL $label$209
	CALL prints([17350])
	$global$0 = ($1 + [512])
	return (unreachable)
	
.LABEL $label$208
	CALL $90(($1 + [88]))
	
.LABEL $label$207
	CALL $90(($1 + [144]))
	
.LABEL $label$206
	CALL $90(($1 + [144]))
	
.LABEL $label$205
	CALL $90(($1 + [88]))
	
.LABEL $label$204
	$17 = [252]
	goto $label$7 
	
.LABEL $label$203
	$17 = [0]
	goto $label$7 
	
.LABEL $label$202
	$17 = [5]
	goto $label$7 
	
.LABEL $label$201
	$17 = [257]
	goto $label$7 
	
.LABEL $label$200
	$17 = [253]
	goto $label$7 
	
.LABEL $label$199
	$17 = [1]
	goto $label$7 
	
.LABEL $label$198
	$17 = [2]
	goto $label$7 
	
.LABEL $label$197
	$17 = [3]
	goto $label$7 
	
.LABEL $label$196
	$17 = [7]
	goto $label$7 
	
.LABEL $label$195
	$17 = [9]
	goto $label$7 
	
.LABEL $label$194
	$17 = [16]
	goto $label$7 
	
.LABEL $label$193
	$17 = [11]
	goto $label$7 
	
.LABEL $label$192
	$17 = [255]
	goto $label$7 
	
.LABEL $label$191
	$17 = [13]
	goto $label$7 
	
.LABEL $label$190
	$17 = [15]
	goto $label$7 
	
.LABEL $label$189
	$17 = [251]
	goto $label$7 
	
.LABEL $label$188
	$17 = [148]
	goto $label$7 
	
.LABEL $label$187
	$17 = [19]
	goto $label$7 
	
.LABEL $label$186
	$17 = [20]
	goto $label$7 
	
.LABEL $label$185
	$17 = [21]
	goto $label$7 
	
.LABEL $label$184
	$17 = [249]
	goto $label$7 
	
.LABEL $label$183
	$17 = [22]
	goto $label$7 
	
.LABEL $label$182
	$17 = [23]
	goto $label$7 
	
.LABEL $label$181
	$17 = [24]
	goto $label$7 
	
.LABEL $label$180
	$17 = [26]
	goto $label$7 
	
.LABEL $label$179
	$17 = [27]
	goto $label$7 
	
.LABEL $label$178
	$17 = [28]
	goto $label$7 
	
.LABEL $label$177
	$17 = [245]
	goto $label$7 
	
.LABEL $label$176
	$17 = [29]
	goto $label$7 
	
.LABEL $label$175
	$17 = [30]
	goto $label$7 
	
.LABEL $label$174
	$17 = [31]
	goto $label$7 
	
.LABEL $label$173
	$17 = [33]
	goto $label$7 
	
.LABEL $label$172
	$17 = [35]
	goto $label$7 
	
.LABEL $label$171
	$17 = [242]
	goto $label$7 
	
.LABEL $label$170
	$17 = [37]
	goto $label$7 
	
.LABEL $label$169
	$17 = [39]
	goto $label$7 
	
.LABEL $label$168
	$17 = [40]
	goto $label$7 
	
.LABEL $label$167
	$17 = [41]
	goto $label$7 
	
.LABEL $label$166
	$17 = [42]
	goto $label$7 
	
.LABEL $label$165
	$17 = [44]
	goto $label$7 
	
.LABEL $label$164
	$17 = [240]
	goto $label$7 
	
.LABEL $label$163
	$17 = [46]
	goto $label$7 
	
.LABEL $label$162
	$17 = [48]
	goto $label$7 
	
.LABEL $label$161
	$17 = [47]
	goto $label$7 
	
.LABEL $label$160
	$17 = [49]
	goto $label$7 
	
.LABEL $label$159
	$17 = [49]
	goto $label$7 
	
.LABEL $label$158
	$17 = [51]
	goto $label$7 
	
.LABEL $label$157
	$17 = [51]
	goto $label$7 
	
.LABEL $label$156
	$17 = [50]
	goto $label$7 
	
.LABEL $label$155
	$17 = [53]
	goto $label$7 
	
.LABEL $label$154
	$17 = [54]
	goto $label$7 
	
.LABEL $label$153
	$17 = [229]
	goto $label$7 
	
.LABEL $label$152
	$17 = [56]
	goto $label$7 
	
.LABEL $label$151
	$17 = [58]
	goto $label$7 
	
.LABEL $label$150
	$17 = [59]
	goto $label$7 
	
.LABEL $label$149
	$17 = [60]
	goto $label$7 
	
.LABEL $label$148
	$17 = [61]
	goto $label$7 
	
.LABEL $label$147
	$17 = [63]
	goto $label$7 
	
.LABEL $label$146
	$17 = [227]
	goto $label$7 
	
.LABEL $label$145
	$17 = [65]
	goto $label$7 
	
.LABEL $label$144
	$17 = [67]
	goto $label$7 
	
.LABEL $label$143
	$17 = [66]
	goto $label$7 
	
.LABEL $label$142
	$17 = [68]
	goto $label$7 
	
.LABEL $label$141
	$17 = [68]
	goto $label$7 
	
.LABEL $label$140
	$17 = [70]
	goto $label$7 
	
.LABEL $label$139
	$17 = [70]
	goto $label$7 
	
.LABEL $label$138
	$17 = [69]
	goto $label$7 
	
.LABEL $label$137
	$17 = [72]
	goto $label$7 
	
.LABEL $label$136
	$17 = [73]
	goto $label$7 
	
.LABEL $label$135
	$17 = [73]
	goto $label$7 
	
.LABEL $label$134
	$17 = [74]
	goto $label$7 
	
.LABEL $label$133
	$17 = [76]
	goto $label$7 
	
.LABEL $label$132
	$17 = [76]
	goto $label$7 
	
.LABEL $label$131
	$17 = [75]
	goto $label$7 
	
.LABEL $label$130
	$17 = [78]
	goto $label$7 
	
.LABEL $label$129
	$17 = [80]
	goto $label$7 
	
.LABEL $label$128
	$17 = [82]
	goto $label$7 
	
.LABEL $label$127
	$17 = [215]
	goto $label$7 
	
.LABEL $label$126
	$17 = [84]
	goto $label$7 
	
.LABEL $label$125
	$17 = [84]
	goto $label$7 
	
.LABEL $label$124
	$17 = [211]
	goto $label$7 
	
.LABEL $label$123
	$17 = [107]
	goto $label$7 
	
.LABEL $label$122
	$17 = [86]
	goto $label$7 
	
.LABEL $label$121
	$17 = [210]
	goto $label$7 
	
.LABEL $label$120
	$17 = [208]
	goto $label$7 
	
.LABEL $label$119
	$17 = [207]
	goto $label$7 
	
.LABEL $label$118
	$17 = [206]
	goto $label$7 
	
.LABEL $label$117
	$17 = [88]
	goto $label$7 
	
.LABEL $label$116
	$17 = [92]
	goto $label$7 
	
.LABEL $label$115
	$17 = [89]
	goto $label$7 
	
.LABEL $label$114
	$17 = [92]
	goto $label$7 
	
.LABEL $label$113
	$17 = [89]
	goto $label$7 
	
.LABEL $label$112
	$17 = [92]
	goto $label$7 
	
.LABEL $label$111
	$17 = [89]
	goto $label$7 
	
.LABEL $label$110
	$17 = [92]
	goto $label$7 
	
.LABEL $label$109
	$17 = [89]
	goto $label$7 
	
.LABEL $label$108
	$17 = [92]
	goto $label$7 
	
.LABEL $label$107
	$17 = [89]
	goto $label$7 
	
.LABEL $label$106
	$17 = [92]
	goto $label$7 
	
.LABEL $label$105
	$17 = [205]
	goto $label$7 
	
.LABEL $label$104
	$17 = [203]
	goto $label$7 
	
.LABEL $label$103
	$17 = [202]
	goto $label$7 
	
.LABEL $label$102
	$17 = [201]
	goto $label$7 
	
.LABEL $label$101
	$17 = [91]
	goto $label$7 
	
.LABEL $label$100
	$17 = [92]
	goto $label$7 
	
.LABEL $label$99
	$17 = [92]
	goto $label$7 
	
.LABEL $label$98
	$17 = [92]
	goto $label$7 
	
.LABEL $label$97
	$17 = [92]
	goto $label$7 
	
.LABEL $label$96
	$17 = [92]
	goto $label$7 
	
.LABEL $label$95
	$17 = [93]
	goto $label$7 
	
.LABEL $label$94
	$17 = [94]
	goto $label$7 
	
.LABEL $label$93
	$17 = [94]
	goto $label$7 
	
.LABEL $label$92
	$17 = [184]
	goto $label$7 
	
.LABEL $label$91
	$17 = [94]
	goto $label$7 
	
.LABEL $label$90
	$17 = [95]
	goto $label$7 
	
.LABEL $label$89
	$17 = [97]
	goto $label$7 
	
.LABEL $label$88
	$17 = [97]
	goto $label$7 
	
.LABEL $label$87
	$17 = [96]
	goto $label$7 
	
.LABEL $label$86
	$17 = [99]
	goto $label$7 
	
.LABEL $label$85
	$17 = [106]
	goto $label$7 
	
.LABEL $label$84
	$17 = [101]
	goto $label$7 
	
.LABEL $label$83
	$17 = [182]
	goto $label$7 
	
.LABEL $label$82
	$17 = [103]
	goto $label$7 
	
.LABEL $label$81
	$17 = [105]
	goto $label$7 
	
.LABEL $label$80
	$17 = [107]
	goto $label$7 
	
.LABEL $label$79
	$17 = [109]
	goto $label$7 
	
.LABEL $label$78
	$17 = [110]
	goto $label$7 
	
.LABEL $label$77
	$17 = [112]
	goto $label$7 
	
.LABEL $label$76
	$17 = [112]
	goto $label$7 
	
.LABEL $label$75
	$17 = [111]
	goto $label$7 
	
.LABEL $label$74
	$17 = [124]
	goto $label$7 
	
.LABEL $label$73
	$17 = [114]
	goto $label$7 
	
.LABEL $label$72
	$17 = [115]
	goto $label$7 
	
.LABEL $label$71
	$17 = [163]
	goto $label$7 
	
.LABEL $label$70
	$17 = [115]
	goto $label$7 
	
.LABEL $label$69
	$17 = [116]
	goto $label$7 
	
.LABEL $label$68
	$17 = [117]
	goto $label$7 
	
.LABEL $label$67
	$17 = [159]
	goto $label$7 
	
.LABEL $label$66
	$17 = [120]
	goto $label$7 
	
.LABEL $label$65
	$17 = [118]
	goto $label$7 
	
.LABEL $label$64
	$17 = [120]
	goto $label$7 
	
.LABEL $label$63
	$17 = [118]
	goto $label$7 
	
.LABEL $label$62
	$17 = [120]
	goto $label$7 
	
.LABEL $label$61
	$17 = [118]
	goto $label$7 
	
.LABEL $label$60
	$17 = [157]
	goto $label$7 
	
.LABEL $label$59
	$17 = [120]
	goto $label$7 
	
.LABEL $label$58
	$17 = [122]
	goto $label$7 
	
.LABEL $label$57
	$17 = [122]
	goto $label$7 
	
.LABEL $label$56
	$17 = [124]
	goto $label$7 
	
.LABEL $label$55
	$17 = [131]
	goto $label$7 
	
.LABEL $label$54
	$17 = [126]
	goto $label$7 
	
.LABEL $label$53
	$17 = [156]
	goto $label$7 
	
.LABEL $label$52
	$17 = [128]
	goto $label$7 
	
.LABEL $label$51
	$17 = [130]
	goto $label$7 
	
.LABEL $label$50
	$17 = [133]
	goto $label$7 
	
.LABEL $label$49
	$17 = [140]
	goto $label$7 
	
.LABEL $label$48
	$17 = [135]
	goto $label$7 
	
.LABEL $label$47
	$17 = [155]
	goto $label$7 
	
.LABEL $label$46
	$17 = [137]
	goto $label$7 
	
.LABEL $label$45
	$17 = [139]
	goto $label$7 
	
.LABEL $label$44
	$17 = [147]
	goto $label$7 
	
.LABEL $label$43
	$17 = [142]
	goto $label$7 
	
.LABEL $label$42
	$17 = [154]
	goto $label$7 
	
.LABEL $label$41
	$17 = [144]
	goto $label$7 
	
.LABEL $label$40
	$17 = [146]
	goto $label$7 
	
.LABEL $label$39
	$17 = [149]
	goto $label$7 
	
.LABEL $label$38
	$17 = [150]
	goto $label$7 
	
.LABEL $label$37
	$17 = [152]
	goto $label$7 
	
.LABEL $label$36
	$17 = [160]
	goto $label$7 
	
.LABEL $label$35
	$17 = [179]
	goto $label$7 
	
.LABEL $label$34
	$17 = [165]
	goto $label$7 
	
.LABEL $label$33
	$17 = [167]
	goto $label$7 
	
.LABEL $label$32
	$17 = [166]
	goto $label$7 
	
.LABEL $label$31
	$17 = [169]
	goto $label$7 
	
.LABEL $label$30
	$17 = [171]
	goto $label$7 
	
.LABEL $label$29
	$17 = [173]
	goto $label$7 
	
.LABEL $label$28
	$17 = [175]
	goto $label$7 
	
.LABEL $label$27
	$17 = [177]
	goto $label$7 
	
.LABEL $label$26
	$17 = [199]
	goto $label$7 
	
.LABEL $label$25
	$17 = [186]
	goto $label$7 
	
.LABEL $label$24
	$17 = [188]
	goto $label$7 
	
.LABEL $label$23
	$17 = [187]
	goto $label$7 
	
.LABEL $label$22
	$17 = [190]
	goto $label$7 
	
.LABEL $label$21
	$17 = [192]
	goto $label$7 
	
.LABEL $label$20
	$17 = [194]
	goto $label$7 
	
.LABEL $label$19
	$17 = [196]
	goto $label$7 
	
.LABEL $label$18
	$17 = [214]
	goto $label$7 
	
.LABEL $label$17
	$17 = [219]
	goto $label$7 
	
.LABEL $label$16
	$17 = [221]
	goto $label$7 
	
.LABEL $label$15
	$17 = [221]
	goto $label$7 
	
.LABEL $label$14
	$17 = [224]
	goto $label$7 
	
.LABEL $label$13
	$17 = [221]
	goto $label$7 
	
.LABEL $label$12
	$17 = [232]
	goto $label$7 
	
.LABEL $label$11
	$17 = [234]
	goto $label$7 
	
.LABEL $label$10
	$17 = [234]
	goto $label$7 
	
.LABEL $label$9
	$17 = [237]
	goto $label$7 
	
.LABEL $label$8
	$17 = [234]
	goto $label$7 
	$17
	$2
	$3
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $47 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $105($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [12]) = $1
	*($2 + [8]) = $1
	*($2 + [16]) = ($1 + $3)
	*($2 + [24]) = ($2 + [8])
	*($2 + [36]) = ($0 + [8])
	*($2 + [32]) = $0
	*($2 + [40]) = ($0 + [16])
	*($2 + [44]) = ($0 + [32])
	CALL $52(($2 + [32]), ($2 + [24]))
	$global$0 = ($2 + [48])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [320])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$1 }
	CALL $47(($3 + [272]))
	if ( ((int_64)*($3 + [272]) != (int_64)$0) ){ goto $label$3 }
	if ( (*(($3 + [304])) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*(($3 + [40])) = [0]
	*($3 + [88]) = [0]
	*($3 + [32]) = (int_64)0
	*($3 + [80]) = (int_64)0
	$5 = ($3 + [304])
	$4 = CALL $48(($3 + [96]), $0, $1, ($3 + [32]))
	CALL $3($4, *($3 + [272]), *($3 + [280]), ($3 + [288]), $5)
	CALL $49(($4 + [112]))
	$6 = *(($4 + [96]))
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($4 + [100])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$8 }
	CALL _ZdlPv($9)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	$8 = *(($4 + [96]))
	goto $label$5 
	
.LABEL $label$6
	$8 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL _ZdlPv($8)
	
.LABEL $label$4
	$6 = *(($4 + [56]))
	if ( ($6 == 0) ){ goto $label$9 }
	$7 = ($4 + [60])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$13 }
	CALL _ZdlPv($9)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$12 }
	$8 = *(($4 + [56]))
	goto $label$10 
	
.LABEL $label$11
	$8 = $6
	
.LABEL $label$10
	*($7) = $6
	CALL _ZdlPv($8)
	
.LABEL $label$9
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*(($3 + [312])))
	
.LABEL $label$1
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$14 }
	if ( ((int_64)$2 > (int_64)5377976101005950975) ){ goto $label$17 }
	if ( ((int_64)$2 == (int_64)-4417018952356577280) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)-4157529782108553216) ){ goto $label$14 }
	*($3 + [60]) = [0]
	*($3 + [56]) = [1]
	*($3 + [16]) = *($3 + [56])
	CALL $50($0, $0, ($3 + [16]))
	goto $label$14 
	
.LABEL $label$17
	if ( ((int_64)$2 == (int_64)8421051917907525632) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)5377976101005950976) ){ goto $label$14 }
	*($3 + [76]) = [0]
	*($3 + [72]) = [2]
	*($3) = *($3 + [72])
	CALL $51($0, $0, $3)
	goto $label$14 
	
.LABEL $label$16
	*($3 + [52]) = [0]
	*($3 + [48]) = [3]
	*($3 + [24]) = *($3 + [48])
	CALL $50($0, $0, ($3 + [24]))
	goto $label$14 
	
.LABEL $label$15
	*($3 + [68]) = [0]
	*($3 + [64]) = [4]
	*($3 + [8]) = *($3 + [64])
	CALL $50($0, $0, ($3 + [8]))
	
.LABEL $label$14
	CALL $96([0])
	$global$0 = ($3 + [320])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [28])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [32])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [36])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), $4, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*(($5 = CALL _Znwj([160])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = (int_64)0
	*($5 + [144]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [48])
	*($3 + [56]) = ($5 + [64])
	*($3 + [60]) = ($5 + [80])
	*($3 + [64]) = ($5 + [96])
	*($3 + [68]) = ($5 + [112])
	*($3 + [72]) = ($5 + [128])
	CALL $64(($3 + [32]), ($3 + [24]))
	*($5 + [148]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [32]) = $6
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $32(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*(($5 = CALL _Znwj([112])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [64])
	*($3 + [56]) = ($5 + [80])
	CALL $65(($3 + [32]), ($3 + [24]))
	*($5 + [100]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [32]) = $6
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $13(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), $3, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $7 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $4 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([64])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	CALL $63(($3 + [40]), ($3 + [32]))
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $61(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	*($5) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [17708])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [17708])
	CALL memcpy(($5 + [8]), ($2 + [8]), [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [24]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $7(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $2 (int_32 $0)
{
	if ( (*([0] + [8236]) & [1]) ){ goto $label$3 }
	if ( (*([0] + [8224]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL _ZdlPv(*([0] + [8244]))
	if ( ((*([0] + [8224]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*([0] + [8232]))
	return 
	
.LABEL $label$1
}

void .FUNC $3 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	float_64 $12
	$5 = ($global$0 - [448])
	$global$0 = $5
	*($5 + [360]) = $1
	CALL prints([17059])
	CALL require_auth($1)
	CALL eosio_assert(((int_64)*($0) == (int_64)$2), [17068])
	$6 = [0]
	$7 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $9
	$7 = [1]
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$10 = ($8 + [1])
	$8 = $10
	if ( $7 ){ goto $label$5 }
	$7 = [1]
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [17101])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [17118])
	*($5 + [352]) = (CASTING int_64)(int_32 CALL $98(( *($4 + [8]) ? ($4 + [1]) : (*($4) & [1]) )))
	$8 = ($0 + [32])
	$7 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)7235159550062657536, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $4($8, $7)
	
.LABEL $label$6
	CALL eosio_assert(((int_64)*($6 + [24]) != (int_64)1), [17149])
	*((($5 + [312]) + [32])) = [0]
	*($5 + [328]) = (int_64)-1
	*($5 + [336]) = (int_64)0
	$2 = *($0)
	*($5 + [312]) = $2
	*($5 + [320]) = $2
	$7 = CALL db_find_i64($2, $2, (int_64)7035927880338305920, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert(((int_32)*(CALL $5(($5 + [312]), $7) + [16]) == (int_32)($5 + [312])), [17713])
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [17764])
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)$8), [17799])
	CALL eosio_assert(((int_64)*(($0 + [32])) == (int_64)CALL $fimport$5()), [17845])
	*($6 + [16]) = ((int_64)*($6 + [16]) + (int_64)1)
	$2 = *($6)
	CALL eosio_assert([1], [17896])
	*($5 + [232]) = (($5 + [368]) + [48])
	*($5 + [228]) = ($5 + [368])
	*($5 + [224]) = ($5 + [368])
	*($5 + [184]) = ($5 + [224])
	*($5 + [268]) = ($6 + [8])
	*($5 + [264]) = $6
	$10 = ($6 + [16])
	*($5 + [272]) = $10
	*($5 + [276]) = ($6 + [24])
	*($5 + [280]) = ($6 + [32])
	*($5 + [284]) = ($6 + [40])
	CALL $6(($5 + [264]), ($5 + [184]))
	CALL db_update_i64(*($6 + [52]), (int_64)0, ($5 + [368]), [48])
	$7 = ($0 + [48])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$9 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$9 = *($0)
	CALL eosio_assert(((int_64)*($5 + [312]) == (int_64)CALL $fimport$5()), [17634])
	*(($7 = CALL _Znwj([32])) + [16]) = ($5 + [312])
	*($7) = *($5 + [360])
	*($7 + [8]) = *($10)
	CALL eosio_assert([1], [17628])
	CALL memcpy(($5 + [368]), $7, [8])
	CALL eosio_assert([1], [17628])
	CALL memcpy((($5 + [368]) | [8]), ($7 + [8]), [8])
	$2 = *($7)
	$6 = CALL db_store_i64(*((($5 + [312]) + [8])), (int_64)7035927880338305920, $9, $2, ($5 + [368]), [16])
	*($7 + [20]) = $6
	if ( (uint_64)($2 <= *((($5 + [312]) + [16]))) ){ goto $label$10 }
	*(($5 + [328])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($5 + [264]) = $7
	$2 = *($7)
	*($5 + [368]) = $2
	*($5 + [224]) = $6
	$4 = ($5 + [340])
	$10 = *($4)
	if ( ((uint_32)$10 >= (uint_32)*(($5 + [344]))) ){ goto $label$12 }
	*($10 + [8]) = $2
	*($10 + [16]) = $6
	*($5 + [264]) = [0]
	*($10) = $7
	*($4) = ($10 + [24])
	$7 = *($5 + [264])
	*($5 + [264]) = [0]
	if ( $7 ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$12
	CALL $7(($5 + [336]), ($5 + [264]), ($5 + [368]), ($5 + [224]))
	$7 = *($5 + [264])
	*($5 + [264]) = [0]
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$11
	CALL _ZdlPv($7)
	
.LABEL $label$7
	$4 = [0]
	$7 = [0]
	$10 = CALL db_lowerbound_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7235159550062657536, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$13 }
	$7 = CALL $4($8, $10)
	
.LABEL $label$13
	*($5 + [304]) = $8
	*($5 + [308]) = $7
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [17167])
	*((($5 + [264]) + [32])) = [0]
	*($5 + [280]) = (int_64)-1
	*($5 + [288]) = (int_64)0
	$2 = *($0)
	*($5 + [264]) = $2
	$9 = *($3 + [8])
	*($5 + [272]) = $9
	*((($5 + [224]) + [32])) = [0]
	*($5 + [232]) = $9
	*($5 + [224]) = $2
	*($5 + [240]) = (int_64)-1
	*($5 + [248]) = (int_64)0
	$8 = CALL db_lowerbound_i64($2, $9, (int_64)7035937543832993792, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$14 }
	$4 = CALL $8(($5 + [264]), $8)
	
.LABEL $label$14
	$2 = *($5 + [360])
	$7 = *(($5 + [252]))
	$6 = *(($5 + [248]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$18:
	$8 = ($7 + [-24])
	$10 = *($8)
	if ( ((int_64)*($10) == (int_64)$2) ){ goto $label$17 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$16 }
	CALL eosio_assert(((int_32)*($10 + [96]) == (int_32)($5 + [224])), [17713])
	goto $label$15 
	
.LABEL $label$16
	$10 = [0]
	$8 = CALL db_find_i64(*($5 + [224]), *(($5 + [232])), (int_64)-6030912129882488832, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$15 }
	$10 = CALL $9(($5 + [224]), $8)
	CALL eosio_assert(((int_32)*($10 + [96]) == (int_32)($5 + [224])), [17713])
	
.LABEL $label$15
	$8 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($8, [17183])
	*($5 + [368]) = $3
	*($5 + [372]) = ($5 + [352])
	CALL eosio_assert($8, [17764])
	CALL $10(($5 + [264]), $4, (int_64)0, ($5 + [368]))
	if ( ($10 == 0) ){ goto $label$20 }
	*($5 + [372]) = $3
	*($5 + [368]) = ($5 + [352])
	CALL eosio_assert([1], [17764])
	CALL $11(($5 + [224]), $10, (int_64)0, ($5 + [368]))
	goto $label$19 
	
.LABEL $label$20
	$2 = *($0)
	*($5 + [376]) = $3
	*($5 + [372]) = ($5 + [304])
	*($5 + [368]) = ($5 + [360])
	*($5 + [380]) = ($5 + [352])
	*($5 + [144]) = $2
	CALL eosio_assert(((int_64)*($5 + [224]) == (int_64)CALL $fimport$5()), [17634])
	*($5 + [188]) = ($5 + [368])
	*($5 + [184]) = ($5 + [224])
	*($5 + [192]) = ($5 + [144])
	*(($8 = CALL _Znwj([112])) + [8]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [16]) = (int_64)0
	*($8 + [24]) = (int_64)0
	*($8 + [32]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [56]) = (int_64)0
	*($8 + [64]) = (int_64)0
	*($8 + [72]) = (int_64)0
	*($8 + [80]) = (int_64)0
	*($8 + [88]) = (int_64)0
	*($8 + [96]) = ($5 + [224])
	CALL $12(($5 + [184]), $8)
	*($5 + [104]) = $8
	$2 = *($8)
	*($5 + [184]) = $2
	$10 = *($8 + [100])
	*($5 + [88]) = $10
	$6 = ($5 + [252])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($5 + [256]))) ){ goto $label$22 }
	*($7 + [8]) = $2
	*($7 + [16]) = $10
	*($5 + [104]) = [0]
	*($7) = $8
	*($6) = ($7 + [24])
	$8 = *($5 + [104])
	*($5 + [104]) = [0]
	if ( $8 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	CALL $13(($5 + [248]), ($5 + [104]), ($5 + [184]), ($5 + [88]))
	$8 = *($5 + [104])
	*($5 + [104]) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	
.LABEL $label$21
	CALL _ZdlPv($8)
	
.LABEL $label$19
	*(($10 = ($5 + [216]))) = [0]
	*(($5 + [222])) = [0]
	*($5 + [200]) = (int_64)-1
	*($5 + [208]) = (int_64)0
	*($5 + [220]) = [0]
	$2 = *($0)
	*($5 + [184]) = $2
	*($5 + [192]) = $2
	*($5 + [384]) = $3
	*($5 + [372]) = ($5 + [360])
	*($5 + [368]) = ($5 + [184])
	*($5 + [376]) = ($5 + [304])
	*($5 + [380]) = ($5 + [352])
	*($5 + [104]) = $2
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$5()), [17634])
	*($5 + [148]) = ($5 + [368])
	*($5 + [144]) = ($5 + [184])
	*($5 + [152]) = ($5 + [104])
	*(($8 = CALL _Znwj([80])) + [24]) = (int_64)0
	*($8 + [16]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [56]) = ($5 + [184])
	CALL $14(($5 + [144]), $8)
	*($5 + [88]) = $8
	$2 = *($8)
	*($5 + [144]) = $2
	$6 = *($8 + [60])
	*($5 + [432]) = $6
	$4 = ($5 + [212])
	$7 = *($4)
	if ( ((uint_32)$7 >= (uint_32)*($10)) ){ goto $label$25 }
	*($7 + [8]) = $2
	*($7 + [16]) = $6
	*($5 + [88]) = [0]
	*($7) = $8
	*($4) = ($7 + [24])
	$7 = *($5 + [88])
	$8 = [0]
	*($5 + [88]) = [0]
	if ( $7 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $15(($5 + [208]), ($5 + [88]), ($5 + [144]), ($5 + [432]))
	$7 = *($5 + [88])
	$8 = [0]
	*($5 + [88]) = [0]
	if ( ($7 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL _ZdlPv($7)
	
.LABEL $label$23
	*(($7 = (($5 + [144]) + [32]))) = $8
	*($5 + [160]) = (int_64)-1
	*($5 + [180]) = $8
	$2 = *($0)
	*($5 + [144]) = $2
	$9 = *($5 + [360])
	*($5 + [152]) = $9
	*($5 + [168]) = (int_64)0
	$8 = CALL db_lowerbound_i64($2, $9, (int_64)-3020380795877316464, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$27 }
	$8 = CALL $16(($5 + [144]), $8)
	$9 = *($0)
	CALL eosio_assert([1], [17764])
	CALL eosio_assert(((int_32)*($8 + [56]) == (int_32)($5 + [144])), [17799])
	CALL eosio_assert(((int_64)*($5 + [144]) == (int_64)CALL $fimport$5()), [17845])
	$7 = ($8 + [24])
	*($5 + [24]) = *($7)
	$2 = *($8)
	$1 = CALL current_time()
	*($8 + [16]) = *($5 + [360])
	*($7) = *(*($5 + [308]) + [8])
	*($8 + [8]) = $1
	*($8 + [32]) = *($5 + [352])
	*(($8 + [48])) = *(($3 + [8]))
	*($8 + [40]) = *($3)
	CALL eosio_assert(((int_64)$2 == (int_64)*($8)), [17896])
	*($5 + [96]) = (($5 + [368]) + [56])
	*($5 + [92]) = ($5 + [368])
	*($5 + [88]) = ($5 + [368])
	*($5 + [432]) = ($5 + [88])
	*($5 + [108]) = ($8 + [8])
	*($5 + [104]) = $8
	*($5 + [112]) = ($8 + [16])
	*($5 + [116]) = $7
	*($5 + [120]) = ($8 + [32])
	*($5 + [124]) = ($8 + [40])
	CALL $17(($5 + [104]), ($5 + [432]))
	CALL db_update_i64(*($8 + [60]), $9, ($5 + [368]), [56])
	$0 = (($5 + [144]) + [16])
	if ( (uint_64)($2 <= *($0)) ){ goto $label$28 }
	*($0) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$28
	*($5 + [104]) = *($7)
	if ( (CALL $99(($5 + [24]), ($5 + [104]), [8]) == 0) ){ goto $label$26 }
	$7 = ($8 + [64])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$29 }
	$8 = CALL db_idx64_find_primary(*($5 + [144]), *(($5 + [152])), (int_64)-3020380795877316464, ($5 + [432]), $2)
	*($7) = $8
	
.LABEL $label$29
	CALL db_idx64_update($8, $9, ($5 + [104]))
	goto $label$26 
	
.LABEL $label$27
	$2 = *($0)
	*($5 + [384]) = $3
	*($5 + [372]) = ($5 + [360])
	*($5 + [368]) = ($5 + [144])
	*($5 + [376]) = ($5 + [304])
	*($5 + [380]) = ($5 + [352])
	*($5 + [88]) = $2
	CALL eosio_assert(((int_64)*($5 + [144]) == (int_64)CALL $fimport$5()), [17634])
	*($5 + [108]) = ($5 + [368])
	*($5 + [104]) = ($5 + [144])
	*($5 + [112]) = ($5 + [88])
	*(($8 = CALL _Znwj([72])) + [24]) = (int_64)0
	*($8 + [16]) = (int_64)0
	*($8 + [40]) = (int_64)0
	*($8 + [48]) = (int_64)0
	*($8 + [56]) = ($5 + [144])
	CALL $18(($5 + [104]), $8)
	*($5 + [432]) = $8
	$2 = *($8)
	*($5 + [104]) = $2
	$10 = *($8 + [60])
	*($5 + [24]) = $10
	$6 = ($5 + [172])
	$0 = *($6)
	if ( ((uint_32)$0 >= (uint_32)*($7)) ){ goto $label$31 }
	*($0 + [8]) = $2
	*($0 + [16]) = $10
	*($5 + [432]) = [0]
	*($0) = $8
	*($6) = ($0 + [24])
	$8 = *($5 + [432])
	*($5 + [432]) = [0]
	if ( $8 ){ goto $label$30 }
	goto $label$26 
	
.LABEL $label$31
	CALL $19(($5 + [168]), ($5 + [432]), ($5 + [104]), ($5 + [24]))
	$8 = *($5 + [432])
	*($5 + [432]) = [0]
	if ( ($8 == 0) ){ goto $label$26 }
	
.LABEL $label$30
	CALL _ZdlPv($8)
	
.LABEL $label$26
	$2 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8
	if ( (int_64)($2) == 0) ){ goto $label$35 }
	$7 = [0]
	
.LOOP $label$37:
	*((($5 + [104]) + ($8 = $7))) = $2
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[5]) ){ goto $label$36 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$37 }
	
.LABEL $label$36
	*(($5 + [376])) = [0]
	*($5 + [368]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$34 }
	*($5 + [368]) = ($7 << [1])
	$0 = (($5 + [368]) | [1])
	goto $label$33 
	
.LABEL $label$35
	*((($5 + [368]) + [8])) = [0]
	*($5 + [368]) = (int_64)0
	*($5 + [368]) = [0]
	$8 = (($5 + [368]) | [1])
	goto $label$32 
	
.LABEL $label$34
	$10 = (($7 + [16]) & [-16])
	$0 = CALL _Znwj($10)
	*($5 + [368]) = ($10 | [1])
	*($5 + [376]) = $0
	*($5 + [372]) = $7
	
.LABEL $label$33
	$10 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$38:
	*(($0 + $8)) = *((($5 + [104]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$38 }
	$8 = ($0 + $7)
	
.LABEL $label$32
	*($8) = [0]
	*(($5 + [112])) = [0]
	*($5 + [104]) = (int_64)0
	$8 = CALL $100([16940])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$47 }
	*($5 + [104]) = ($8 << [1])
	$7 = (($5 + [104]) | [1])
	if ( $8 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$0 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($0)
	*($5 + [104]) = ($0 | [1])
	*($5 + [112]) = $7
	*($5 + [108]) = $8
	
.LABEL $label$46
	CALL memcpy($7, [16940], $8)
	
.LABEL $label$45
	$10 = [0]
	*(($7 + $8)) = [0]
	$6 = ($8 & [1])
	$8 = *($5 + [104])
	$0 = ($8 & [1])
	$8 = *($5 + [368])
	$11 = uint_32($8 >> [1])
	$4 = ( *($5 + [372]) ? $11 : $0 )
	if ( ((int_32)$4 != (int_32)( *($5 + [108]) ? uint_32($8 >> [1]) : $6 )) ){ goto $label$50 }
	$8 = ( *($5 + [112]) ? (($5 + [104]) | [1]) : $6 )
	$7 = (($5 + [368]) | [1])
	if ( $0 ){ goto $label$52 }
	if ( ($4 == 0) ){ goto $label$51 }
	$10 = [0]
	$0 = ([0] - $11)
	
.LOOP $label$53:
	if ( ((int_32)*($7) != (int_32)*($8)) ){ goto $label$50 }
	$8 = ($8 + [1])
	$7 = ($7 + [1])
	$0 = ($0 + [1])
	if ( $0 ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	if ( ($4 == 0) ){ goto $label$51 }
	$10 = (CALL $99(( *($5 + [376]) ? $7 : $0 ), $8, $4) == 0)
	if ( (*($5 + [104]) & [1]) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$10 = [1]
	
.LABEL $label$50
	if ( ($6 == 0) ){ goto $label$48 }
	
.LABEL $label$49
	CALL _ZdlPv(*($5 + [112]))
	
.LABEL $label$48
	if ( ((*($5 + [368]) & [1]) == 0) ){ goto $label$54 }
	CALL _ZdlPv(*($5 + [376]))
	
.LABEL $label$54
	if ( ($10 == 0) ){ goto $label$40 }
	*(($5 + [376])) = [0]
	*($5 + [368]) = (int_64)0
	$8 = CALL $100([16944])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$43 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$57 }
	*($5 + [368]) = ($8 << [1])
	$0 = (($5 + [368]) | [1])
	$7 = $0
	if ( $8 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	$0 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($0)
	*($5 + [368]) = ($0 | [1])
	*($5 + [376]) = $7
	*($5 + [372]) = $8
	$0 = (($5 + [368]) | [1])
	
.LABEL $label$56
	CALL memcpy($7, [16944], $8)
	
.LABEL $label$55
	*(($7 + $8)) = [0]
	$10 = ( *($5 + [376]) ? $0 : (*($5 + [368]) & [1]) )
	$8 = CALL $100($10)
	if ( ($8 <= [8]) ){ goto $label$60 }
	CALL eosio_assert([0], [17373])
	goto $label$59 
	
.LABEL $label$60
	if ( ($8 == 0) ){ goto $label$58 }
	
.LABEL $label$59
	$2 = (int_64)0
	
.LOOP $label$61:
	$0 = (($10 + $8) + [-1])
	$7 = *($0)
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$62 }
	CALL eosio_assert([0], [17418])
	$7 = *($0)
	
.LABEL $label$62
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$61 }
	$2 = ((int_64)$2 << (int_64)8)
	if ( ((*($5 + [368]) & [1]) == 0) ){ goto $label$41 }
	goto $label$42 
	
.LABEL $label$58
	$2 = (int_64)0
	if ( (*($5 + [368]) & [1]) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	CALL $90(($5 + [104]))
	
.LABEL $label$43
	CALL $90(($5 + [368]))
	
.LABEL $label$42
	CALL _ZdlPv(*(($5 + [376])))
	
.LABEL $label$41
	$9 = *($3)
	*($5 + [72]) = [17207]
	*($5 + [76]) = CALL $100([17207])
	*($5 + [16]) = *($5 + [72])
	$8 = CALL $20(($5 + [80]), ($5 + [16]))
	*($5 + [96]) = (int_64)3617214756542218240
	*($5 + [88]) = *($8)
	*($5 + [56]) = [17046]
	*($5 + [60]) = CALL $100([17046])
	*($5 + [8]) = *($5 + [56])
	$0 = CALL $20(($5 + [64]), ($5 + [8]))
	*($5 + [40]) = [17207]
	*($5 + [44]) = CALL $100([17207])
	*($5) = *($5 + [40])
	$10 = CALL $20(($5 + [48]), $5)
	*(($5 + [32])) = [0]
	*($5 + [24]) = (int_64)0
	$8 = CALL $100([17220])
	$7 = ($8 <= [-16])
	$12 = ((float_64)(CASTING float_64)(int_64 $9) * (float_64)(float_64)0.2)
	if ( ((float_64)(float_64)|$12| < (float_64)(float_64)9223372036854775808) ){ goto $label$64 }
	$9 = (int_64)-9223372036854775808
	if ( $7 ){ goto $label$63 }
	goto $label$39 
	
.LABEL $label$64
	$9 = (Rounds 0)($12)
	if ( ($7 == 0) ){ goto $label$39 }
	
.LABEL $label$63
	$2 = ((int_64)$2 | (int_64)4)
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$67 }
	*($5 + [24]) = ($8 << [1])
	$7 = (($5 + [24]) | [1])
	if ( $8 ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$67
	$6 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($6)
	*($5 + [24]) = ($6 | [1])
	*($5 + [32]) = $7
	*($5 + [28]) = $8
	
.LABEL $label$66
	CALL memcpy($7, [17220], $8)
	
.LABEL $label$65
	*(($7 + $8)) = [0]
	*(($5 + [392])) = $2
	$8 = ($5 + [32])
	*(($5 + [408])) = *($8)
	*($8) = [0]
	*($5 + [384]) = $9
	*($5 + [368]) = *($10)
	*($5 + [376]) = *($5 + [360])
	*($5 + [400]) = *($5 + [24])
	*($5 + [24]) = (int_64)0
	$8 = CALL $21(($5 + [104]), ($5 + [88]), *($0), (int_64)-3617168760277827584, ($5 + [368]))
	CALL $22(($5 + [432]), $8)
	$7 = *($5 + [432])
	CALL send_inline($7, (*($5 + [436]) - $7))
	$7 = *($5 + [432])
	if ( ($7 == 0) ){ goto $label$68 }
	*($5 + [436]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$68
	$7 = *($8 + [28])
	if ( ($7 == 0) ){ goto $label$69 }
	*(($8 + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$69
	$7 = *($8 + [16])
	if ( ($7 == 0) ){ goto $label$70 }
	*(($8 + [20])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$70
	if ( ((*(($5 + [400])) & [1]) == 0) ){ goto $label$71 }
	CALL _ZdlPv(*(($5 + [408])))
	
.LABEL $label$71
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$40 }
	CALL _ZdlPv(*(($5 + [32])))
	
.LABEL $label$40
	$0 = *($5 + [168])
	if ( ($0 == 0) ){ goto $label$72 }
	$10 = ($5 + [172])
	$8 = *($10)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$74 }
	
.LOOP $label$75:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$76 }
	CALL _ZdlPv($7)
	
.LABEL $label$76
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$75 }
	$8 = *(($5 + [168]))
	goto $label$73 
	
.LABEL $label$74
	$8 = $0
	
.LABEL $label$73
	*($10) = $0
	CALL _ZdlPv($8)
	
.LABEL $label$72
	$0 = *($5 + [208])
	if ( ($0 == 0) ){ goto $label$77 }
	$10 = ($5 + [212])
	$8 = *($10)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$79 }
	
.LOOP $label$80:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$81 }
	CALL _ZdlPv($7)
	
.LABEL $label$81
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$80 }
	$8 = *(($5 + [208]))
	goto $label$78 
	
.LABEL $label$79
	$8 = $0
	
.LABEL $label$78
	*($10) = $0
	CALL _ZdlPv($8)
	
.LABEL $label$77
	$0 = *($5 + [248])
	if ( ($0 == 0) ){ goto $label$82 }
	$10 = ($5 + [252])
	$8 = *($10)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$84 }
	
.LOOP $label$85:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$86 }
	CALL _ZdlPv($7)
	
.LABEL $label$86
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$85 }
	$8 = *(($5 + [248]))
	goto $label$83 
	
.LABEL $label$84
	$8 = $0
	
.LABEL $label$83
	*($10) = $0
	CALL _ZdlPv($8)
	
.LABEL $label$82
	$0 = *($5 + [288])
	if ( ($0 == 0) ){ goto $label$87 }
	$10 = ($5 + [292])
	$8 = *($10)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$89 }
	
.LOOP $label$90:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$91 }
	CALL _ZdlPv($7)
	
.LABEL $label$91
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$90 }
	$8 = *(($5 + [288]))
	goto $label$88 
	
.LABEL $label$89
	$8 = $0
	
.LABEL $label$88
	*($10) = $0
	CALL _ZdlPv($8)
	
.LABEL $label$87
	$0 = *($5 + [336])
	if ( ($0 == 0) ){ goto $label$92 }
	$10 = ($5 + [340])
	$8 = *($10)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$94 }
	
.LOOP $label$95:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$96 }
	CALL _ZdlPv($7)
	
.LABEL $label$96
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$95 }
	$8 = *(($5 + [336]))
	goto $label$93 
	
.LABEL $label$94
	$8 = $0
	
.LABEL $label$93
	*($10) = $0
	CALL _ZdlPv($8)
	
.LABEL $label$92
	$global$0 = ($5 + [448])
	return (unreachable)
	
.LABEL $label$39
	CALL $90(($5 + [24]))
	(unreachable)
	(unreachable)
}

void .FUNC memory ()
{
	CALL $81()
}

void .FUNC $1 (int_32 $0)
{
	if ( (*([0] + [8204]) & [1]) ){ goto $label$3 }
	if ( (*([0] + [8192]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL _ZdlPv(*([0] + [8212]))
	if ( ((*([0] + [8192]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*([0] + [8200]))
	return 
	
.LABEL $label$1
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)4229853266458443776, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $67($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $68(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [17955])
	*($1) = *(($6 + [16]))
	*($1 + [8]) = CALL current_time()
	*($1 + [16]) = *(*($5 + [4]))
	*($1 + [24]) = *(*(*($5 + [8]) + [4]) + [8])
	*($1 + [32]) = *(*($5 + [12]))
	$5 = *($5 + [16])
	*(($1 + [48])) = *($5 + [8])
	*($1 + [40]) = *($5)
	$6 = $2
	$5 = ($6 + [-64])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($6 + [-8])
	*($3 + [16]) = $3
	$6 = ($1 + [8])
	*($3 + [28]) = $6
	*($3 + [24]) = $1
	$2 = ($1 + [16])
	*($3 + [32]) = $2
	$8 = ($1 + [24])
	*($3 + [36]) = $8
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [40])
	CALL $69(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)4229853266458443776, *(*($0 + [8])), $7, $5, [56])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$3 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$5 = ($4 + [8])
	$7 = *($5)
	$0 = *(($0 + [8]))
	$9 = *($0)
	$10 = *($1)
	*($3 + [24]) = *($2)
	*($1 + [64]) = CALL db_idx64_store($7, (int_64)4229853266458443776, $9, $10, ($3 + [24]))
	$7 = *($0)
	$9 = *($5)
	$10 = *($1)
	*($3 + [24]) = *($8)
	*(($1 + [68])) = CALL db_idx64_store($9, (int_64)4229853266458443777, $7, $10, ($3 + [24]))
	$7 = *($0)
	$9 = *($5)
	$10 = *($1)
	*($3 + [24]) = *($6)
	*(($1 + [72])) = CALL db_idx64_store($9, (int_64)4229853266458443778, $7, $10, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $15 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([72])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	CALL $71(($3 + [40]), ($3 + [32]))
	*($5 + [64]) = [-1]
	*($5 + [60]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $19(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), $4, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $10 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [17799])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$5()), [17845])
	$6 = *($3)
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)*($6))
	$7 = *($1)
	$8 = ((int_64)*(*(($3 + [4]))) + (int_64)-1)
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$8
	*($1 + [64]) = ((int_64)*($1 + [64]) + (int_64)*($6))
	goto $label$2 
	
.LABEL $label$7
	CALL eosio_assert([0], [17326])
	$8 = *($1)
	goto $label$1 
	
.LABEL $label$6
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)*($6))
	goto $label$2 
	
.LABEL $label$5
	*($1 + [96]) = ((int_64)*($1 + [96]) + (int_64)*($6))
	goto $label$2 
	
.LABEL $label$4
	*($1 + [112]) = ((int_64)*($1 + [112]) + (int_64)*($6))
	goto $label$2 
	
.LABEL $label$3
	*($1 + [128]) = ((int_64)*($1 + [128]) + (int_64)*($6))
	
.LABEL $label$2
	$8 = $7
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$7 == (int_64)$8), [17896])
	$4 = $4
	$3 = ($4 + [-144])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = $4
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [96])
	*($5 + [68]) = ($1 + [112])
	*($5 + [72]) = ($1 + [128])
	CALL $41(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [148]), $2, $3, [144])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [80])
	(CASTING uint_32)(uint_64 $8)
}

void .FUNC $11 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [17799])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$5()), [17845])
	$6 = *($1)
	$7 = ((int_64)*(*($3)) + (int_64)-1)
	if ( ((uint_64)$7 > (uint_64)(int_64)4) ){ goto $label$7 }
	$3 = *(($3 + [4]))
	goto $label$8 
	
.LABEL $label$8
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*($3))
	goto $label$2 
	
.LABEL $label$7
	CALL eosio_assert([0], [17326])
	$7 = *($1)
	goto $label$1 
	
.LABEL $label$6
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)*($3))
	goto $label$2 
	
.LABEL $label$5
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)*($3))
	goto $label$2 
	
.LABEL $label$4
	*($1 + [64]) = ((int_64)*($1 + [64]) + (int_64)*($3))
	goto $label$2 
	
.LABEL $label$3
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)*($3))
	
.LABEL $label$2
	$7 = $6
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$6 == (int_64)$7), [17896])
	$3 = $4
	$4 = ($3 + [-96])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [80])
	CALL $66(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [100]), $2, $4, [96])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [64])
	(CASTING uint_32)(uint_64 $7)
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*(*($4 + [4]) + [4]) + [8])
	$5 = *($4 + [8])
	*(($1 + [24])) = *($5 + [8])
	*(($1 + [40])) = *($5 + [8])
	*(($1 + [56])) = *($5 + [8])
	*(($1 + [72])) = *($5 + [8])
	*(($1 + [88])) = *($5 + [8])
	$6 = *($0)
	$7 = ($1 + [8])
	$8 = ((int_64)*(*($4 + [12])) + (int_64)-1)
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$7
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*($5))
	goto $label$1 
	
.LABEL $label$6
	CALL eosio_assert([0], [17326])
	goto $label$1 
	
.LABEL $label$5
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)*($5))
	goto $label$1 
	
.LABEL $label$4
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)*($5))
	goto $label$1 
	
.LABEL $label$3
	*($1 + [64]) = ((int_64)*($1 + [64]) + (int_64)*($5))
	goto $label$1 
	
.LABEL $label$2
	*($1 + [80]) = ((int_64)*($1 + [80]) + (int_64)*($5))
	
.LABEL $label$1
	$4 = $2
	$5 = ($4 + [-96])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $4
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $7
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [32])
	*($3 + [48]) = ($1 + [48])
	*($3 + [52]) = ($1 + [64])
	*($3 + [56]) = ($1 + [80])
	CALL $66(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [100]) = CALL db_store_i64(*($6 + [8]), (int_64)-6030912129882488832, *(*($0 + [8])), $8, $5, [96])
	if ( (uint_64)($8 <= *($6 + [16])) ){ goto $label$8 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$global$0 = ($3 + [64])
	(CASTING uint_32)(uint_64 $8)
}

void .FUNC $13 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([144])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [48])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [80])
	*($3 + [72]) = ($5 + [96])
	*($3 + [76]) = ($5 + [112])
	CALL $78(($3 + [40]), ($3 + [32]))
	*($5 + [132]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $43(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-3020380795877316464, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $16($6, $8)
	*($3 + [28]) = [0]
	*($3 + [24]) = $6
	$7 = *(*(CALL $72(($3 + [24])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [17955])
	*($1) = *(($6 + [16]))
	*($1 + [8]) = CALL current_time()
	*($1 + [16]) = *(*($5 + [4]))
	*($1 + [24]) = *(*(*($5 + [8]) + [4]) + [8])
	*($1 + [32]) = *(*($5 + [12]))
	$5 = *($5 + [16])
	*(($1 + [48])) = *($5 + [8])
	*($1 + [40]) = *($5)
	$6 = $2
	$5 = ($6 + [-64])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($6 + [-8])
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	$6 = ($1 + [24])
	*($3 + [36]) = $6
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [40])
	CALL $17(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020380795877316464, *(*($0 + [8])), $7, $5, [56])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$3 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$7 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($3 + [24]) = *($6)
	*($1 + [64]) = CALL db_idx64_store($7, (int_64)-3020380795877316464, $9, $10, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [17628])
	CALL memcpy(*($0 + [4]), $1, [4])
	$3 = (*($0 + [4]) + [4])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[1]), [17628])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$3 = (*($0 + [4]) + [2])
	*($0 + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - $3) > (int_32)[3]), [17628])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$5 = *($1 + [12])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$6 = ((int_64)$5) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) > (int_32)[0]), [17628])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($2 + [14]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	if ( $6 ){ goto $label$1 }
	$7 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($7) - $4) > (int_32)[0]), [17628])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($1 + [16]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$5 = *($1 + [20])
	
.LOOP $label$2:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$1 = ((int_64)$5) != (int_64)0
	*($2 + [15]) = (($1) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($7) - $4) > (int_32)[0]), [17628])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$4 = (*($3) + [1])
	*($3) = $4
	if ( $1 ){ goto $label$2 }
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [17628])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$8 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($8) - $4) > (int_32)[7]), [17628])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($8) - $4) > (int_32)[7]), [17628])
	CALL memcpy(*($6), ($7 + [8]), [8])
	*($6) = (*($6) + [8])
	CALL $56(CALL $55($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$2 }
	$4 = *($6)
	goto $label$3 
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $50 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [208])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [8])) = $3
	*($4 + [20]) = $2
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$3 = CALL $48(($4 + [32]), $0, $1, $4)
	$8 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	CALL void $8((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $109($2)
	
.LABEL $label$6
	CALL $49(($3 + [112]))
	$5 = *(($3 + [96]))
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($3 + [100])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	CALL _ZdlPv($7)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($3 + [96]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$7
	$5 = *(($3 + [56]))
	if ( ($5 == 0) ){ goto $label$12 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$16 }
	CALL _ZdlPv($7)
	
.LABEL $label$16
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($3 + [56]))
	goto $label$13 
	
.LABEL $label$14
	$2 = $5
	
.LABEL $label$13
	*($6) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($4 + [208])
	return [1]
}

int_32 .FUNC $51 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [224])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $105($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [216]) = (int_64)0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [17708])
	CALL memcpy(($4 + [216]), $2, [8])
	$3 = ($2 + $7)
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$3 = CALL $48(($4 + [40]), $0, $1, ($4 + [8]))
	$8 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *($4 + [216])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	CALL void $8((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $109($2)
	
.LABEL $label$6
	CALL $49(($3 + [112]))
	$5 = *(($3 + [96]))
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($3 + [100])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	CALL _ZdlPv($7)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($3 + [96]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$7
	$5 = *(($3 + [56]))
	if ( ($5 == 0) ){ goto $label$12 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$16 }
	CALL _ZdlPv($7)
	
.LABEL $label$16
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($3 + [56]))
	goto $label$13 
	
.LABEL $label$14
	$2 = $5
	
.LABEL $label$13
	*($6) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($4 + [224])
	return [1]
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $79(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

void .FUNC $53 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$5()), [17634])
	*(($5 = CALL _Znwj([64])) + [48]) = $1
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5) = (int_64)3
	*($5 + [24]) = (int_64)1
	*($4 + [56]) = ($4 + [48])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($5 + [8])
	*($4 + [72]) = $5
	*($4 + [80]) = ($5 + [16])
	*($4 + [84]) = ($5 + [24])
	*($4 + [88]) = ($5 + [32])
	*($4 + [92]) = ($5 + [40])
	CALL $6(($4 + [72]), ($4 + [64]))
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)7235159550062657536, $2, $6, $4, [48])
	*($5 + [52]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($4 + [72]) = $5
	$6 = *($5)
	*($4) = $6
	*($4 + [48]) = $7
	$8 = ($1 + [28])
	$9 = *($8)
	if ( ((uint_32)$9 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($9 + [8]) = $6
	*($9 + [16]) = $7
	*($4 + [72]) = [0]
	*($9) = $5
	*($8) = ($9 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $61(($1 + [24]), ($4 + [72]), $4, ($4 + [48]))
	
.LABEL $label$2
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($5 == 0) ){ goto $label$4 }
	CALL _ZdlPv($5)
	
.LABEL $label$4
	$global$0 = ($4 + [96])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$5()), [17634])
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [16]) = $1
	CALL $62(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3 + [8])
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $35(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = ((int_32)*(*(*($0 + [4]))) * (int_32)[12])
	$6 = ($5 + [8192])
	if ( (*($6) & [1]) ){ goto $label$5 }
	$7 = ($6 + [1])
	$5 = CALL $100($7)
	if ( ((uint_32)$5 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = *(($5 + [8200]))
	$5 = CALL $100($7)
	if ( ($5 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [17373])
	goto $label$2 
	
.LABEL $label$3
	if ( $5 ){ goto $label$2 }
	$8 = (int_64)4
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)0
	
.LOOP $label$6:
	$9 = (($7 + $5) + [-1])
	$6 = *($9)
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [17418])
	$6 = *($9)
	
.LABEL $label$7
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$6 }
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	
.LABEL $label$1
	*($1) = (int_64)0
	*($1 + [8]) = $8
	$6 = $2
	$5 = ($6 + [-16])
	$global$0 = $5
	CALL eosio_assert([1], [17628])
	CALL memcpy($5, $1, [8])
	*($3 + [8]) = *($1 + [8])
	CALL eosio_assert([1], [17628])
	CALL memcpy(($6 + [-8]), ($3 + [8]), [8])
	$8 = *($1 + [8])
	*($1 + [20]) = CALL db_store_i64(*($4 + [8]), (int_64)-7297072087558180352, *(*($0 + [8])), $8, $5, [16])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$8 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$global$0 = ($3 + [16])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [17628])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) >= (int_32)$6), [17628])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, $6)
	*($4) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [136]) == (int_32)$0), [18173])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$5()), [18218])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [18268])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [140]))
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([152])) + [24]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [72])
	*($3 + [68]) = ($5 + [88])
	*($3 + [72]) = ($5 + [104])
	*($3 + [76]) = ($5 + [120])
	CALL $74(($3 + [40]), ($3 + [32]))
	*($5 + [140]) = $1
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $45(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [17628])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [17628])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [17628])
	CALL memcpy(*($6), ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $107 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [8536]) == 0) ){ goto $label$2 }
	$2 = *([0] + [8540])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [8536]) = [1]
	$2 = ($2 << [16])
	*([0] + [8540]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [8540])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [8540]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [8536]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [8536]) = [1]
	$3 = ($3 << [16])
	*([0] + [8540]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [8540])
	
.LABEL $label$10
	*([0] + [8540]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $107($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($9)), [16948])
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$10:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$12 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$13 }
	
.LABEL $label$12
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$14 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$10 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $23($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $24(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$4 }
	CALL eosio_assert([0], [17471])
	$3 = [12]
	goto $label$3 
	
.LABEL $label$4
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$5:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$7 }
	$7 = [0]
	goto $label$6 
	
.LABEL $label$7
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$8 }
	$7 = ($7 + [-48])
	goto $label$6 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$7 = ($7 + [-91])
	goto $label$6 
	
.LABEL $label$9
	$7 = [0]
	CALL eosio_assert([0], [17576])
	$4 = *($0)
	
.LABEL $label$6
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$1
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$10 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [17509])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [17576])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$10
	return $0
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $94($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [16]
	$4 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(($1 + [20]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-16]) + $3)
	
.LABEL $label$2
	$6 = *(($1 + [32]))
	$5 = *($1 + [28])
	$3 = (($5 - $3) - $6)
	$7 = ($1 + [28])
	$8 = (CASTING uint_64)(uint_32 ($6 - $5))
	
.LOOP $label$3:
	$3 = ($3 + [-1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $23($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	*($2) = $3
	*($2 + [8]) = $5
	$0 = ($5 - $3)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [17628])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [17628])
	CALL memcpy(($3 + [8]), ($1 + [8]), [8])
	*($2 + [4]) = ($3 + [16])
	CALL $56(CALL $55($2, $4), $7)
	$global$0 = ($2 + [16])
}

void .FUNC $25 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	$2 = ($global$0 - [144])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)7235159550062657536, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	$4 = ($0 + [32])
	$3 = CALL $4($4, $3)
	CALL eosio_assert([1], [17221])
	CALL eosio_assert([1], [17764])
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$4), [17799])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$5()), [17845])
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)1
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$5 = *($3)
	*($3) = (int_64)3
	CALL eosio_assert(((int_64)$5 == (int_64)3), [17896])
	*($2 + [8]) = (($2 + [80]) + [48])
	*($2 + [4]) = ($2 + [80])
	*($2) = ($2 + [80])
	*($2 + [136]) = $2
	*($2 + [44]) = ($3 + [8])
	*($2 + [40]) = $3
	*($2 + [48]) = ($3 + [16])
	*($2 + [52]) = ($3 + [24])
	*($2 + [56]) = ($3 + [32])
	*($2 + [60]) = ($3 + [40])
	CALL $6(($2 + [40]), ($2 + [136]))
	CALL db_update_i64(*($3 + [52]), (int_64)0, ($2 + [80]), [48])
	$3 = ($0 + [48])
	if ( (uint_64)($5 <= *($3)) ){ goto $label$1 }
	*($3) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [17221])
	
.LABEL $label$1
	*(($2 + [112])) = [0]
	*($2 + [96]) = (int_64)-1
	$5 = *($0)
	*($2 + [80]) = $5
	*($2 + [88]) = $5
	*($2 + [104]) = (int_64)0
	$3 = CALL db_lowerbound_i64($5, $5, (int_64)7035927880338305920, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $5(($2 + [80]), $3)
	
.LOOP $label$4:
	CALL eosio_assert([1], [18109])
	CALL eosio_assert([1], [18143])
	$3 = [0]
	$6 = CALL db_next_i64(*($4 + [20]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$3 = CALL $5(($2 + [80]), $6)
	
.LABEL $label$5
	CALL $26(($2 + [80]), $4)
	$4 = $3
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$3
	$3 = *([0] + [8192])
	if ( (( *([0] + [8196]) ? uint_32($3 >> [1]) : ($3 & [1]) ) == 0) ){ goto $label$9 }
	$7 = (($2 + [40]) + [16])
	$8 = (($2 + [40]) + [24])
	$9 = (($2 + [40]) + [32])
	$10 = (($2 + [40]) + [28])
	$11 = [0]
	$12 = ((int_32)[0] * (int_32)[12])
	$13 = ($12 + [8192])
	if ( (($3 & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$14 = [42]
	goto $label$6 
	
.LABEL $label$8
	$14 = [55]
	goto $label$6 
	
.LABEL $label$7
	$14 = [53]
	
.LABEL $label$6
	
.LOOP $label$10:
	goto $label$118 
	
.LABEL $label$120
	$12 = ((int_32)$11 * (int_32)[12])
	$13 = ($12 + [8192])
	if ( (*((((int_32)$11 * (int_32)[12]) + [8192])) & [1]) ){ goto $label$53 }
	$14 = [55]
	goto $label$10 
	
.LABEL $label$119
	$4 = ($13 + [1])
	$3 = CALL $100($4)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$50 }
	$14 = [0]
	goto $label$10 
	
.LABEL $label$118
	if ( $3 ){ goto $label$51 }
	$14 = [3]
	goto $label$10 
	
.LABEL $label$117
	$15 = *($0)
	if ( (*($13) & [1]) ){ goto $label$46 }
	$14 = [65]
	goto $label$10 
	
.LABEL $label$116
	$16 = ($13 + [1])
	$3 = CALL $100($16)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$44 }
	$14 = [5]
	goto $label$10 
	
.LABEL $label$115
	if ( $3 ){ goto $label$43 }
	$14 = [63]
	goto $label$10 
	
.LABEL $label$114
	$5 = (int_64)0
	goto $label$40 
	
.LABEL $label$113
	$4 = *(($12 + [8200]))
	$3 = CALL $100($4)
	if ( ($3 <= [8]) ){ goto $label$52 }
	$14 = [54]
	goto $label$10 
	
.LABEL $label$112
	CALL eosio_assert([0], [17373])
	$14 = [1]
	goto $label$10 
	
.LABEL $label$111
	if ( (((*((($4 + $3) + [-1])) + [-65]) & [255]) <= [26]) ){ goto $label$47 }
	$14 = [66]
	goto $label$10 
	
.LABEL $label$110
	CALL eosio_assert([0], [17418])
	$14 = [2]
	goto $label$10 
	
.LABEL $label$109
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$108
	$16 = *(($12 + [8200]))
	$3 = CALL $100($16)
	if ( ($3 <= [8]) ){ goto $label$45 }
	$14 = [64]
	goto $label$10 
	
.LABEL $label$107
	CALL eosio_assert([0], [17373])
	$14 = [6]
	goto $label$10 
	
.LABEL $label$106
	$5 = (int_64)0
	$14 = [7]
	goto $label$10 
	
.LABEL $label$105
	$6 = (($16 + $3) + [-1])
	$4 = *($6)
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$41 }
	$14 = [62]
	goto $label$10 
	
.LABEL $label$104
	CALL eosio_assert([0], [17418])
	$4 = *($6)
	$14 = [8]
	goto $label$10 
	
.LABEL $label$103
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$42 }
	$14 = [9]
	goto $label$10 
	
.LABEL $label$102
	$5 = ((int_64)$5 << (int_64)8)
	$14 = [10]
	goto $label$10 
	
.LABEL $label$101
	*(($17 = (($2 + [40]) + [8]))) = ((int_64)$5 | (int_64)4)
	*($7) = (int_64)-1
	*($8) = (int_64)0
	*($9) = [0]
	*($2 + [40]) = $15
	$15 = *($0)
	if ( (*($13) & [1]) ){ goto $label$39 }
	$14 = [61]
	goto $label$10 
	
.LABEL $label$100
	$16 = ($13 + [1])
	$3 = CALL $100($16)
	if ( ((uint_32)$3 >= (uint_32)[8]) ){ goto $label$37 }
	$14 = [12]
	goto $label$10 
	
.LABEL $label$99
	if ( $3 ){ goto $label$36 }
	$14 = [59]
	goto $label$10 
	
.LABEL $label$98
	$5 = (int_64)0
	goto $label$33 
	
.LABEL $label$97
	$16 = *(($12 + [8200]))
	$3 = CALL $100($16)
	if ( ($3 <= [8]) ){ goto $label$38 }
	$14 = [60]
	goto $label$10 
	
.LABEL $label$96
	CALL eosio_assert([0], [17373])
	$14 = [13]
	goto $label$10 
	
.LABEL $label$95
	$5 = (int_64)0
	$14 = [14]
	goto $label$10 
	
.LABEL $label$94
	$6 = (($16 + $3) + [-1])
	$4 = *($6)
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$34 }
	$14 = [58]
	goto $label$10 
	
.LABEL $label$93
	CALL eosio_assert([0], [17418])
	$4 = *($6)
	$14 = [15]
	goto $label$10 
	
.LABEL $label$92
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$35 }
	$14 = [16]
	goto $label$10 
	
.LABEL $label$91
	$5 = ((int_64)$5 << (int_64)8)
	$14 = [17]
	goto $label$10 
	
.LABEL $label$90
	*(($13 = ($2 + [8]))) = ((int_64)$5 | (int_64)4)
	*(($2 + [16])) = (int_64)-1
	*(($16 = ($2 + [24]))) = (int_64)0
	*(($2 + [32])) = [0]
	*($2) = $15
	$3 = CALL db_lowerbound_i64(*($2 + [40]), *($17), (int_64)-6030912129882488832, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$32 }
	$14 = [18]
	goto $label$10 
	
.LABEL $label$89
	$4 = CALL $9(($2 + [40]), $3)
	$14 = [19]
	goto $label$10 
	
.LABEL $label$88
	CALL eosio_assert([1], [18109])
	CALL eosio_assert([1], [18143])
	$3 = [0]
	$6 = CALL db_next_i64(*($4 + [100]), ($2 + [136]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$30 }
	$14 = [20]
	goto $label$10 
	
.LABEL $label$87
	$3 = CALL $9(($2 + [40]), $6)
	$14 = [21]
	goto $label$10 
	
.LABEL $label$86
	CALL $27(($2 + [40]), $4)
	$4 = $3
	if ( $3 ){ goto $label$31 }
	$14 = [22]
	goto $label$10 
	
.LABEL $label$85
	$3 = CALL db_lowerbound_i64(*($2), *($13), (int_64)-4706072867916595200, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$29 }
	$14 = [23]
	goto $label$10 
	
.LABEL $label$84
	$4 = CALL $28($2, $3)
	$14 = [24]
	goto $label$10 
	
.LABEL $label$83
	CALL eosio_assert([1], [18109])
	CALL eosio_assert([1], [18143])
	$3 = [0]
	$6 = CALL db_next_i64(*($4 + [140]), ($2 + [136]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$27 }
	$14 = [25]
	goto $label$10 
	
.LABEL $label$82
	$3 = CALL $28($2, $6)
	$14 = [26]
	goto $label$10 
	
.LABEL $label$81
	CALL $29($2, $4)
	$4 = $3
	if ( $3 ){ goto $label$28 }
	$14 = [27]
	goto $label$10 
	
.LABEL $label$80
	$6 = *($16)
	if ( ($6 == 0) ){ goto $label$26 }
	$14 = [28]
	goto $label$10 
	
.LABEL $label$79
	$13 = ($2 + [28])
	$3 = *($13)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$24 }
	$14 = [29]
	goto $label$10 
	
.LABEL $label$78
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$23 }
	$14 = [30]
	goto $label$10 
	
.LABEL $label$77
	CALL _ZdlPv($4)
	$14 = [31]
	goto $label$10 
	
.LABEL $label$76
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$25 }
	$14 = [32]
	goto $label$10 
	
.LABEL $label$75
	$3 = *($16)
	goto $label$22 
	
.LABEL $label$74
	$3 = $6
	$14 = [33]
	goto $label$10 
	
.LABEL $label$73
	*($13) = $6
	CALL _ZdlPv($3)
	$14 = [34]
	goto $label$10 
	
.LABEL $label$72
	$6 = *($8)
	if ( ($6 == 0) ){ goto $label$21 }
	$14 = [35]
	goto $label$10 
	
.LABEL $label$71
	$3 = *($10)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$19 }
	$14 = [36]
	goto $label$10 
	
.LABEL $label$70
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$18 }
	$14 = [37]
	goto $label$10 
	
.LABEL $label$69
	CALL _ZdlPv($4)
	$14 = [38]
	goto $label$10 
	
.LABEL $label$68
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$20 }
	$14 = [39]
	goto $label$10 
	
.LABEL $label$67
	$3 = *($8)
	goto $label$17 
	
.LABEL $label$66
	$3 = $6
	$14 = [40]
	goto $label$10 
	
.LABEL $label$65
	*($10) = $6
	CALL _ZdlPv($3)
	$14 = [41]
	goto $label$10 
	
.LABEL $label$64
	$3 = *([0] + [8192])
	$11 = ($11 + [1])
	if ( ($11 <= ( *([0] + [8196]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$16 }
	$14 = [42]
	goto $label$10 
	
.LABEL $label$63
	$6 = *($2 + [104])
	if ( ($6 == 0) ){ goto $label$15 }
	$14 = [43]
	goto $label$10 
	
.LABEL $label$62
	$16 = ($2 + [108])
	$3 = *($16)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$14 }
	$14 = [44]
	goto $label$10 
	
.LABEL $label$61
	$14 = [45]
	goto $label$10 
	
.LABEL $label$60
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	$14 = [46]
	goto $label$10 
	
.LABEL $label$59
	CALL _ZdlPv($4)
	$14 = [47]
	goto $label$10 
	
.LABEL $label$58
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$13 }
	$14 = [48]
	goto $label$10 
	
.LABEL $label$57
	$3 = *(($2 + [104]))
	goto $label$11 
	
.LABEL $label$56
	$3 = $6
	$14 = [49]
	goto $label$10 
	
.LABEL $label$55
	*($16) = $6
	CALL _ZdlPv($3)
	$14 = [50]
	goto $label$10 
	
.LABEL $label$54
	$global$0 = ($2 + [144])
	return 
	
.LABEL $label$53
	$14 = [53]
	goto $label$10 
	
.LABEL $label$52
	$14 = [0]
	goto $label$10 
	
.LABEL $label$51
	$14 = [1]
	goto $label$10 
	
.LABEL $label$50
	$14 = [54]
	goto $label$10 
	
.LABEL $label$49
	$14 = [3]
	goto $label$10 
	
.LABEL $label$48
	$14 = [1]
	goto $label$10 
	
.LABEL $label$47
	$14 = [2]
	goto $label$10 
	
.LABEL $label$46
	$14 = [4]
	goto $label$10 
	
.LABEL $label$45
	$14 = [5]
	goto $label$10 
	
.LABEL $label$44
	$14 = [64]
	goto $label$10 
	
.LABEL $label$43
	$14 = [6]
	goto $label$10 
	
.LABEL $label$42
	$14 = [7]
	goto $label$10 
	
.LABEL $label$41
	$14 = [8]
	goto $label$10 
	
.LABEL $label$40
	$14 = [10]
	goto $label$10 
	
.LABEL $label$39
	$14 = [11]
	goto $label$10 
	
.LABEL $label$38
	$14 = [12]
	goto $label$10 
	
.LABEL $label$37
	$14 = [60]
	goto $label$10 
	
.LABEL $label$36
	$14 = [13]
	goto $label$10 
	
.LABEL $label$35
	$14 = [14]
	goto $label$10 
	
.LABEL $label$34
	$14 = [15]
	goto $label$10 
	
.LABEL $label$33
	$14 = [17]
	goto $label$10 
	
.LABEL $label$32
	$14 = [22]
	goto $label$10 
	
.LABEL $label$31
	$14 = [19]
	goto $label$10 
	
.LABEL $label$30
	$14 = [21]
	goto $label$10 
	
.LABEL $label$29
	$14 = [27]
	goto $label$10 
	
.LABEL $label$28
	$14 = [24]
	goto $label$10 
	
.LABEL $label$27
	$14 = [26]
	goto $label$10 
	
.LABEL $label$26
	$14 = [34]
	goto $label$10 
	
.LABEL $label$25
	$14 = [29]
	goto $label$10 
	
.LABEL $label$24
	$14 = [57]
	goto $label$10 
	
.LABEL $label$23
	$14 = [31]
	goto $label$10 
	
.LABEL $label$22
	$14 = [33]
	goto $label$10 
	
.LABEL $label$21
	$14 = [41]
	goto $label$10 
	
.LABEL $label$20
	$14 = [36]
	goto $label$10 
	
.LABEL $label$19
	$14 = [56]
	goto $label$10 
	
.LABEL $label$18
	$14 = [38]
	goto $label$10 
	
.LABEL $label$17
	$14 = [40]
	goto $label$10 
	
.LABEL $label$16
	$14 = [52]
	goto $label$10 
	
.LABEL $label$15
	$14 = [50]
	goto $label$10 
	
.LABEL $label$14
	$14 = [51]
	goto $label$10 
	
.LABEL $label$13
	$14 = [45]
	goto $label$10 
	
.LABEL $label$12
	$14 = [47]
	goto $label$10 
	
.LABEL $label$11
	$14 = [49]
	goto $label$10 
	$14
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($0 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($0 + [16]), [8])
	$3 = (*($4 + [4]) + [8])
	*($4 + [4]) = $3
	*($2 + [8]) = *(($0 + [24]))
	CALL eosio_assert(((int_32)(*($4 + [8]) - $3) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	CALL $73(*($1), ($0 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [96]) == (int_32)$0), [18173])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$5()), [18218])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [18268])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [100]))
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [18173])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$5()), [18218])
	$2 = *($0 + [24])
	$3 = $2
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$1 }
	$6 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) != (int_64)$6) ){ goto $label$2 }
	$3 = $5
	goto $label$1 
	
.LABEL $label$2
	$7 = ($2 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($5 + [-48])
	$3 = ($5 + [-24])
	$5 = $3
	if ( ((int_64)*(*($8)) != (int_64)$6) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$3 = $2
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)$2), [18268])
	$2 = *($4)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$7 }
	$5 = $3
	
.LOOP $label$8:
	$8 = *($5)
	*($5) = [0]
	$7 = ($5 + [-24])
	$3 = *($7)
	*($7) = $8
	if ( ($3 == 0) ){ goto $label$9 }
	CALL _ZdlPv($3)
	
.LABEL $label$9
	*(($5 + [-8])) = *(($5 + [16]))
	*(($5 + [-16])) = *(($5 + [8]))
	$5 = ($5 + [24])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$8 }
	$8 = ($5 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = ($3 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL _ZdlPv($5)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $109 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [16928])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [16736]
	$3 = (((int_32)$1 * (int_32)[12]) + [16736])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), $4, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $68 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [60]), ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [18061])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4229853266458443776)
	CALL eosio_assert(((int_32)$2 != (int_32)[-1]), [18007])
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [18007])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $67(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $108 (int_32 $0, int_32 $1)
{
	$1 = ((int_32)$1 * (int_32)$0)
	$0 = CALL $106([8544], $1)
	CALL memset($0, [0], $1)
	return $0
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($0, *($4 + [4]), [8])
	$1 = (*($4 + [4]) + [8])
	*($4 + [4]) = $1
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($0 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [28])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [32])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [36])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [40])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($0, *($1 + [4]), [8])
	$4 = (*($1 + [4]) + [8])
	*($1 + [4]) = $4
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($1 + [4]), [8])
	*($0 + [8]) = *($2 + [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*($3 + [20]) = $2
	*($3 + [16]) = $2
	*($3 + [24]) = ($2 + $4)
	*(($5 = CALL _Znwj([80])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	CALL $70(($3 + [40]), ($3 + [32]))
	*($5 + [60]) = $1
	*($5 + [64 align=4]) = (int_64)-1
	*($5 + [72]) = [-1]
	*($3 + [32]) = $5
	$6 = *($5)
	*($3 + [40]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [32]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $15(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$0 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $0, [8])
	$1 = (*($4 + [4]) + [8])
	*($4 + [4]) = $1
	*($2 + [8]) = *($0 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $1) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [17628])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$7 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	$5 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[1]), [17628])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $6, [2])
	*($4) = (*($4) + [2])
	CALL $56($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	$4 = *($4)
	goto $label$3 
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [16])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = ((int_32)*(*(*($0 + [4]))) * (int_32)[12])
	$6 = ($5 + [8192])
	if ( (*($6) & [1]) ){ goto $label$5 }
	$7 = ($6 + [1])
	$5 = CALL $100($7)
	if ( ((uint_32)$5 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = *(($5 + [8200]))
	$5 = CALL $100($7)
	if ( ($5 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [17373])
	goto $label$2 
	
.LABEL $label$3
	if ( $5 ){ goto $label$2 }
	$8 = (int_64)4
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)0
	
.LOOP $label$6:
	$9 = (($7 + $5) + [-1])
	$6 = *($9)
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [17418])
	$6 = *($9)
	
.LABEL $label$7
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$6 }
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	
.LABEL $label$1
	*($1) = (int_64)0
	*($1 + [8]) = $8
	$6 = $2
	$5 = ($6 + [-16])
	$global$0 = $5
	CALL eosio_assert([1], [17628])
	CALL memcpy($5, $1, [8])
	*($3 + [8]) = *($1 + [8])
	CALL eosio_assert([1], [17628])
	CALL memcpy(($6 + [-8]), ($3 + [8]), [8])
	$8 = *($1 + [8])
	*($1 + [20]) = CALL db_store_i64(*($4 + [8]), (int_64)-7297072087558180352, *(*($0 + [8])), $8, $5, [16])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$8 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$global$0 = ($3 + [16])
}

void .FUNC $101 (int_32 $0)
{
	*($0) = [1]
}

int_32 .FUNC $100 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $103 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $95())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $104($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $102 (int_32 $0)
{
	*($0) = [0]
}

int_32 .FUNC $105 (int_32 $0)
{
	return CALL $106([8544], $0)
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $105($1)
	
.LABEL $label$2
	*(CALL $95()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $105(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $109($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $109($0)
	
.LABEL $label$1
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $103(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8248])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $103(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $109($0)
	
.LABEL $label$1
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $105($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8248])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $105($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $81 ()
{
	int_32 $0
	int_32 $1
	int_32 $2
	*([0] + [8192]) = (int_64)0
	*([0] + [8200]) = [0]
	$0 = CALL $100([16940])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$7 }
	*([0] + [8192]) = ($0 << [1])
	$1 = [8193]
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = (($0 + [16]) & [-16])
	$1 = CALL _Znwj($2)
	*([0] + [8192]) = ($2 | [1])
	*([0] + [8200]) = $1
	*([0] + [8196]) = $0
	
.LABEL $label$6
	CALL memcpy($1, [16940], $0)
	
.LABEL $label$5
	*(($1 + $0)) = [0]
	*([0] + [8204 align=4]) = (int_64)0
	*([0] + [8212]) = [0]
	$0 = CALL $100([16944])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$10 }
	*([0] + [8204]) = ($0 << [1])
	$1 = [8205]
	if ( $0 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$2 = (($0 + [16]) & [-16])
	$1 = CALL _Znwj($2)
	*([0] + [8204]) = ($2 | [1])
	*([0] + [8212]) = $1
	*([0] + [8208]) = $0
	
.LABEL $label$9
	CALL memcpy($1, [16944], $0)
	
.LABEL $label$8
	*(($1 + $0)) = [0]
	CALL $97([5], [0], [8192])
	*([0] + [8224]) = (int_64)0
	*([0] + [8232]) = [0]
	$0 = CALL $100([17034])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$13 }
	*([0] + [8224]) = ($0 << [1])
	$1 = [8225]
	if ( $0 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$2 = (($0 + [16]) & [-16])
	$1 = CALL _Znwj($2)
	*([0] + [8224]) = ($2 | [1])
	*([0] + [8232]) = $1
	*([0] + [8228]) = $0
	
.LABEL $label$12
	CALL memcpy($1, [17034], $0)
	
.LABEL $label$11
	*(($1 + $0)) = [0]
	*([0] + [8236 align=4]) = (int_64)0
	*([0] + [8244]) = [0]
	$0 = CALL $100([17046])
	if ( ((uint_32)$0 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$0 >= (uint_32)[11]) ){ goto $label$16 }
	*([0] + [8236]) = ($0 << [1])
	$1 = [8237]
	if ( $0 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$2 = (($0 + [16]) & [-16])
	$1 = CALL _Znwj($2)
	*([0] + [8236]) = ($2 | [1])
	*([0] + [8244]) = $1
	*([0] + [8240]) = $0
	
.LABEL $label$15
	CALL memcpy($1, [17046], $0)
	
.LABEL $label$14
	*(($1 + $0)) = [0]
	CALL $97([6], [0], [8192])
	return (unreachable)
	
.LABEL $label$4
	CALL $90([8192])
	
.LABEL $label$3
	CALL $90([8204])
	
.LABEL $label$2
	CALL $90([8224])
	
.LABEL $label$1
	CALL $90([8236])
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = [0]
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($2 <= *($5)), [18321])
	$2 = *($6)
	$7 = *($2)
	$2 = ($2 + [1])
	*($6) = $2
	$3 = ($3 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $3)))
	$3 = ($3 + [7])
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $4)
	$7 = *($1)
	$3 = *($1 + [4])
	$5 = ($3 - $7)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$3 }
	CALL $23($1, ($6 - $5))
	$2 = *(($0 + [4]))
	$3 = *(($1 + [4]))
	$7 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$2 }
	$3 = ($7 + $6)
	*(($1 + [4])) = $3
	
.LABEL $label$2
	$2 = ($3 - $7)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $2) >= (uint_32)$2), [17708])
	$3 = ($0 + [4])
	CALL memcpy($7, *($3), $2)
	*($3) = (*($3) + $2)
	return $0
}

int_32 .FUNC $72 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [60]), ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [18061])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3020380795877316464)
	CALL eosio_assert(((int_32)$2 != (int_32)[-1]), [18007])
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [18007])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $16(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[0]), [17628])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $8 ){ goto $label$1 }
	$7 = ($3 & [1])
	$3 = *($1)
	$3 = ( *(($1 + [4])) ? uint_32($3 >> [1]) : $7 )
	if ( ($3 == 0) ){ goto $label$2 }
	$8 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) >= (int_32)$3), [17628])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ( $8 ? ($1 + [1]) : $7 ), $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($4, *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($4 + [8]) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [20])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($4, *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($4 + [8]) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $76 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [132]), ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [18061])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-6030912130159137136)
	CALL eosio_assert(((int_32)$2 != (int_32)[-1]), [18007])
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [18007])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $75(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [28])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [32])
	$4 = *($1)
	CALL eosio_assert(((int_32)(*($4 + [8]) - *($4 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), $3, [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = *($3 + [8])
	CALL eosio_assert(((int_32)(*($4 + [8]) - $5) > (int_32)[7]), [17628])
	CALL memcpy(*($4 + [4]), ($2 + [8]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [36])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), $4, [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = *($4 + [8])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $1) > (int_32)[7]), [17628])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [28])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [32])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [36])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($4, *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($4 + [8]) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $39 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	$4 = ($global$0 - [80])
	$5 = $4
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [17799])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$5()), [17845])
	*($1 + [16]) = (int_64)0
	$6 = *(*($3) + [4])
	*($1 + [8]) = *($6 + [8])
	*($1 + [24]) = *($6 + [32])
	$7 = *($3 + [8])
	$8 = *($1)
	$6 = ((int_32)*(*($3 + [4])) * (int_32)[12])
	$9 = ($6 + [8192])
	if ( (*($9) & [1]) ){ goto $label$2 }
	$10 = ($9 + [1])
	goto $label$1 
	
.LABEL $label$2
	$10 = *(($6 + [8200]))
	
.LABEL $label$1
	$6 = CALL $100($10)
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [17373])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$11 = (int_64)0
	
.LOOP $label$7:
	$12 = (($10 + $6) + [-1])
	$9 = *($12)
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [17418])
	$9 = *($12)
	
.LABEL $label$8
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)4)
	goto $label$3 
	
.LABEL $label$4
	$11 = (int_64)4
	
.LABEL $label$3
	$13 = ($1 + [24])
	$14 = ($1 + [16])
	$15 = ($1 + [8])
	*($1) = $11
	*(($1 + [16])) = (int_64)1
	$16 = ($7 + [72])
	$9 = *(($7 + [100]))
	$10 = *(($7 + [96]))
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$10 }
	
.LOOP $label$12:
	$6 = ($9 + [-24])
	$12 = *($6)
	if ( ((int_64)*($12 + [8]) == (int_64)$11) ){ goto $label$11 }
	$9 = $6
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$10 }
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$16), [17713])
	goto $label$9 
	
.LABEL $label$10
	$12 = [0]
	$6 = CALL db_find_i64(*($16), *(($7 + [80])), (int_64)-7297072087558180352, $11)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$12 = CALL $33($16, $6)
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$16), [17713])
	
.LABEL $label$9
	$11 = *($1)
	*(($1 + [40])) = $11
	$17 = *($12)
	*(($1 + [56])) = $11
	*($1 + [64]) = (int_64)0
	*($1 + [80]) = (int_64)0
	*($1 + [96]) = (int_64)0
	*($1 + [112]) = (int_64)0
	*($1 + [32]) = $17
	$17 = *(*(*($3 + [12]) + [4]))
	*(($1 + [72])) = $11
	*(($1 + [88])) = $11
	*(($1 + [104])) = $11
	*(($1 + [120])) = $11
	*(($1 + [136])) = $11
	*($1 + [48]) = $17
	*($1 + [128]) = (int_64)0
	CALL eosio_assert(((int_64)$8 == (int_64)$11), [17896])
	$9 = $4
	$6 = ($9 + [-144])
	$global$0 = $6
	*($5 + [12]) = $6
	*($5 + [8]) = $6
	*($5 + [16]) = $9
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $15
	*($5 + [32]) = $1
	*($5 + [40]) = $14
	*($5 + [44]) = $13
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [48])
	*($5 + [56]) = ($1 + [64])
	*($5 + [60]) = ($1 + [80])
	*($5 + [64]) = ($1 + [96])
	*($5 + [68]) = ($1 + [112])
	*($5 + [72]) = ($1 + [128])
	CALL $41(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [148]), $2, $6, [144])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$global$0 = ($5 + [80])
}

void .FUNC $36 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	*(($7 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL _Znwj([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$6 = ($2 + [16])
	*($3) = $6
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $6
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$10 = ($7 + [40])
	$2 = *($0)
	$11 = *(($0 + [4]))
	if ( ((int_32)$11 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $11)
	$1 = [0]
	
.LOOP $label$7:
	$8 = ($11 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$6 = ($8 + [-24])
	*($5) = *($6)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($6) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$10
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($2) = [0]
	CALL $57($2, $1)
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$2 }
	CALL $23($0, $4)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($2 + [4]) = $0
	*($2) = $0
	*($2 + [8]) = $3
	CALL $58($2, $1)
	CALL $60(CALL $59(CALL $59($2, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	$global$0 = ($2 + [16])
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [4])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [8])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [12])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [16])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [20])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [24])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [28])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$3 = *($0 + [32])
	$4 = *($1)
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($3, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($4 + [4]), [8])
	*($3 + [8]) = *($2 + [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	$4 = *($0 + [36])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [17708])
	CALL memcpy($4, *($0 + [4]), [8])
	$1 = (*($0 + [4]) + [8])
	*($0 + [4]) = $1
	*($2 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]), [17708])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($4 + [8]) = *($2 + [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $80($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $93($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $93($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $90($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $94($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [17685])
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $105($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [17708])
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [17708])
	CALL memcpy(($3 + [24]), ($2 + [8]), [8])
	$6 = *($3 + [24])
	*($5 + [8]) = $6
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	*($3 + [24]) = $6
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($8 + [8]) = $6
	*($8 + [16]) = $1
	*($3 + [16]) = [0]
	*($8) = $5
	*($7) = ($8 + [24])
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $35(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($4 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $109($2)
	
.LABEL $label$6
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $30 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_64 $18
	$1 = ($global$0 - [112])
	$global$0 = $1
	CALL require_auth(*($0))
	CALL prints([17236])
	*($1 + [8]) = [0]
	$2 = *([0] + [8192])
	if ( (( *([0] + [8196]) ? uint_32($2 >> [1]) : ($2 & [1]) ) == 0) ){ goto $label$4 }
	$3 = ($0 + [96])
	$4 = ($0 + [72])
	$5 = (($1 + [16]) + [24])
	$6 = ($1 + [32])
	$7 = (($1 + [16]) + [32])
	$8 = ($1 + [44])
	$9 = ($0 + [80])
	$10 = ($0 + [104])
	$11 = ($0 + [100])
	$12 = [0]
	$13 = *($0)
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$14 = [16]
	goto $label$1 
	
.LABEL $label$3
	$14 = [39]
	goto $label$1 
	
.LABEL $label$2
	$14 = [37]
	
.LABEL $label$1
	
.LOOP $label$5:
	goto $label$98 
	
.LABEL $label$100
	$13 = *($0)
	if ( (*((((int_32)$12 * (int_32)[12]) + [8192])) & [1]) ){ goto $label$48 }
	$14 = [39]
	goto $label$5 
	
.LABEL $label$99
	$15 = (((int_32)$12 * (int_32)[12]) + [8193])
	$12 = CALL $100($15)
	if ( ((uint_32)$12 >= (uint_32)[8]) ){ goto $label$44 }
	$14 = [0]
	goto $label$5 
	
.LABEL $label$98
	if ( $12 ){ goto $label$45 }
	$14 = [51]
	goto $label$5 
	
.LABEL $label$97
	$16 = (int_64)0
	goto $label$46 
	
.LABEL $label$96
	$15 = *((((int_32)$12 * (int_32)[12]) + [8200]))
	$12 = CALL $100($15)
	if ( ($12 <= [8]) ){ goto $label$47 }
	$14 = [38]
	goto $label$5 
	
.LABEL $label$95
	CALL eosio_assert([0], [17373])
	$14 = [1]
	goto $label$5 
	
.LABEL $label$94
	$16 = (int_64)0
	$14 = [2]
	goto $label$5 
	
.LABEL $label$93
	$17 = (($15 + $12) + [-1])
	$2 = *($17)
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$42 }
	$14 = [50]
	goto $label$5 
	
.LABEL $label$92
	CALL eosio_assert([0], [17418])
	$2 = *($17)
	$14 = [3]
	goto $label$5 
	
.LABEL $label$91
	$16 = ((int_64)((int_64)$16 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$43 }
	$14 = [4]
	goto $label$5 
	
.LABEL $label$90
	$16 = ((int_64)$16 << (int_64)8)
	$14 = [5]
	goto $label$5 
	
.LABEL $label$89
	$16 = ((int_64)$16 | (int_64)4)
	*((($1 + [16]) + [8])) = $16
	*($6) = (int_64)-1
	*($5) = (int_64)0
	*($7) = [0]
	*($1 + [16]) = $13
	$12 = CALL db_lowerbound_i64($13, $16, (int_64)7035937543832993792, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$41 }
	$14 = [6]
	goto $label$5 
	
.LABEL $label$88
	CALL $8(($1 + [16]), $12)
	goto $label$40 
	
.LABEL $label$87
	$16 = *($0)
	*($1) = ($1 + [8])
	*($1 + [64]) = $16
	CALL eosio_assert(((int_64)*($1 + [16]) == (int_64)CALL $fimport$5()), [17634])
	*((($1 + [88]) + [8])) = ($1 + [64])
	*($1 + [92]) = $1
	*($1 + [88]) = ($1 + [16])
	*(($12 = CALL _Znwj([160])) + [8]) = (int_64)0
	*($12) = (int_64)0
	*($12 + [32]) = (int_64)0
	*($12 + [40]) = (int_64)0
	*($12 + [48]) = (int_64)0
	*($12 + [56]) = (int_64)0
	*($12 + [64]) = (int_64)0
	*($12 + [72]) = (int_64)0
	*($12 + [80]) = (int_64)0
	*($12 + [88]) = (int_64)0
	*($12 + [96]) = (int_64)0
	*($12 + [104]) = (int_64)0
	*($12 + [112]) = (int_64)0
	*($12 + [120]) = (int_64)0
	*($12 + [128]) = (int_64)0
	*($12 + [136]) = (int_64)0
	*($12 + [144]) = ($1 + [16])
	CALL $31(($1 + [88]), $12)
	*($1 + [80]) = $12
	$16 = *($12)
	*($1 + [88]) = $16
	$17 = *($12 + [148])
	*($1 + [12]) = $17
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*($7)) ){ goto $label$6 }
	$14 = [49]
	goto $label$5 
	
.LABEL $label$86
	*($2 + [8]) = $16
	*($2 + [16]) = $17
	*($1 + [80]) = [0]
	*($2) = $12
	*($8) = ($2 + [24])
	$12 = *($1 + [80])
	*($1 + [80]) = [0]
	if ( $12 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$85
	CALL $32($5, ($1 + [80]), ($1 + [88]), ($1 + [12]))
	$12 = *($1 + [80])
	*($1 + [80]) = [0]
	if ( ($12 == 0) ){ goto $label$39 }
	$14 = [48]
	goto $label$5 
	
.LABEL $label$84
	CALL _ZdlPv($12)
	$14 = [7]
	goto $label$5 
	
.LABEL $label$83
	$12 = CALL db_lowerbound_i64(*($4), *($9), (int_64)-7297072087558180352, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$36 }
	$14 = [8]
	goto $label$5 
	
.LABEL $label$82
	CALL $33($4, $12)
	$17 = *($5)
	if ( $17 ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$81
	$16 = *($0)
	*($1) = ($1 + [8])
	*($1 + [64]) = $16
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$5()), [17634])
	*($1 + [88]) = $4
	*((($1 + [88]) + [8])) = ($1 + [64])
	*($1 + [92]) = $1
	*(($12 = CALL _Znwj([32])) + [8]) = (int_64)0
	*($12) = (int_64)0
	*($12 + [16]) = $4
	CALL $34(($1 + [88]), $12)
	*($1 + [80]) = $12
	$16 = *($12 + [8])
	*($1 + [88]) = $16
	$17 = *($12 + [20])
	*($1 + [12]) = $17
	$2 = *($11)
	if ( ((uint_32)$2 >= (uint_32)*($10)) ){ goto $label$10 }
	$14 = [45]
	goto $label$5 
	
.LABEL $label$80
	*($2 + [8]) = $16
	*($2 + [16]) = $17
	*($1 + [80]) = [0]
	*($2) = $12
	*($11) = ($2 + [24])
	$12 = *($1 + [80])
	*($1 + [80]) = [0]
	if ( $12 ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$79
	CALL $35($3, ($1 + [80]), ($1 + [88]), ($1 + [12]))
	$12 = *($1 + [80])
	*($1 + [80]) = [0]
	if ( ($12 == 0) ){ goto $label$9 }
	$14 = [43]
	goto $label$5 
	
.LABEL $label$78
	CALL _ZdlPv($12)
	$14 = [44]
	goto $label$5 
	
.LABEL $label$77
	$17 = *($5)
	if ( ($17 == 0) ){ goto $label$35 }
	$14 = [9]
	goto $label$5 
	
.LABEL $label$76
	$12 = *($8)
	if ( ((int_32)$12 == (int_32)$17) ){ goto $label$31 }
	$14 = [10]
	goto $label$5 
	
.LABEL $label$75
	$12 = ($12 + [-24])
	$2 = *($12)
	*($12) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	$14 = [11]
	goto $label$5 
	
.LABEL $label$74
	CALL _ZdlPv($2)
	$14 = [12]
	goto $label$5 
	
.LABEL $label$73
	if ( ((int_32)$17 != (int_32)$12) ){ goto $label$32 }
	$14 = [13]
	goto $label$5 
	
.LABEL $label$72
	$12 = *($5)
	goto $label$29 
	
.LABEL $label$71
	$12 = $17
	$14 = [14]
	goto $label$5 
	
.LABEL $label$70
	*($8) = $17
	CALL _ZdlPv($12)
	$14 = [15]
	goto $label$5 
	
.LABEL $label$69
	$12 = (*($1 + [8]) + [1])
	*($1 + [8]) = $12
	$2 = *([0] + [8192])
	if ( ($12 <= ( *([0] + [8196]) ? uint_32($2 >> [1]) : ($2 & [1]) )) ){ goto $label$28 }
	$14 = [16]
	goto $label$5 
	
.LABEL $label$68
	$18 = (CASTING uint_64)(uint_32 $12)
	$12 = (((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) % (uint_32)[86400]) + [28800])
	$13 = (int_64))(( (int_64)72000 ? (int_64)115200 : ($12 <= [72000]) ) - $18)
	$16 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = [17245]
	$2 = *([17245])
	if ( $2 ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$67
	CALL prints_l($12, [1])
	$12 = ($12 + [1])
	$2 = *($12)
	if ( ($2 == 0) ){ goto $label$25 }
	$14 = [17]
	goto $label$5 
	
.LABEL $label$66
	if ( ((int_32)$2 != (int_32)[37]) ){ goto $label$24 }
	$14 = [29]
	goto $label$5 
	
.LABEL $label$65
	CALL printui(((int_64)$16 & (int_64)4294967295))
	$12 = ($12 + [1])
	$2 = *($12)
	if ( $2 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$64
	CALL prints_l($12, [1])
	$12 = ($12 + [1])
	$2 = *($12)
	if ( ($2 == 0) ){ goto $label$18 }
	$14 = [30]
	goto $label$5 
	
.LABEL $label$63
	if ( ((int_32)$2 != (int_32)[37]) ){ goto $label$12 }
	$14 = [32]
	goto $label$5 
	
.LABEL $label$62
	CALL printui($18)
	$12 = ($12 + [1])
	$2 = *($12)
	if ( $2 ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$61
	CALL prints_l($12, [1])
	$12 = ($12 + [1])
	$2 = *($12)
	if ( ($2 == 0) ){ goto $label$21 }
	$14 = [33]
	goto $label$5 
	
.LABEL $label$60
	if ( ((int_32)$2 != (int_32)[37]) ){ goto $label$11 }
	$14 = [35]
	goto $label$5 
	
.LABEL $label$59
	CALL printui($13)
	CALL prints(($12 + [1]))
	$14 = [19]
	goto $label$5 
	
.LABEL $label$58
	$2 = ($0 + [32])
	$12 = [0]
	$17 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)7235159550062657536, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$17 }
	$14 = [20]
	goto $label$5 
	
.LABEL $label$57
	$12 = CALL $4($2, $17)
	$14 = [21]
	goto $label$5 
	
.LABEL $label$56
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [17764])
	CALL eosio_assert(((int_32)*($12 + [48]) == (int_32)$2), [17799])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$5()), [17845])
	$16 = *($12)
	*($12 + [32]) = ((int_64)CALL current_time() + (int_64)((int_64)$13 * (int_64)1000000))
	CALL eosio_assert(((int_64)$16 == (int_64)*($12)), [17896])
	*($1 + [72]) = (($1 + [16]) + [48])
	*($1 + [68]) = ($1 + [16])
	*($1 + [64]) = ($1 + [16])
	*($1 + [80]) = ($1 + [64])
	*($1 + [92]) = ($12 + [8])
	*($1 + [88]) = $12
	*($1 + [96]) = ($12 + [16])
	*($1 + [100]) = ($12 + [24])
	*($1 + [104]) = ($12 + [32])
	*($1 + [108]) = ($12 + [40])
	CALL $6(($1 + [88]), ($1 + [80]))
	CALL db_update_i64(*($12 + [52]), (int_64)0, ($1 + [16]), [48])
	$12 = ($0 + [48])
	if ( (uint_64)($16 <= *($12)) ){ goto $label$16 }
	$14 = [22]
	goto $label$5 
	
.LABEL $label$55
	*($12) = ( (int_64)-2 ? ((int_64)$16 + (int_64)1) : ((uint_64)$16 > (uint_64)(int_64)-3) )
	$14 = [23]
	goto $label$5 
	
.LABEL $label$54
	*($1 + [24]) = (int_64)0
	*($1 + [16]) = *($0)
	CALL cancel_deferred(($1 + [16]))
	*($1 + [24]) = (int_64)3617214756542218240
	$16 = *($0)
	*($1 + [16]) = $16
	*($1 + [88]) = (int_64)-4157529782108553216
	$2 = ($0 + [112])
	$17 = ($0 + [152])
	$12 = *($17)
	if ( ((uint_32)$12 >= (uint_32)*(($0 + [156]))) ){ goto $label$15 }
	$14 = [28]
	goto $label$5 
	
.LABEL $label$53
	*($12 + [8]) = (int_64)-4157529782108553216
	*($12) = $16
	*($12 + [16 align=4]) = (int_64)0
	*(($5 = ($12 + [24]))) = [0]
	$15 = CALL _Znwj([16])
	*($12 + [16]) = $15
	$4 = ($15 + [16])
	*($5) = $4
	*(($15 + [8])) = *((($1 + [16]) + [8]))
	*($15) = *($1 + [16])
	*(($12 + [20])) = $4
	*($12 + [28 align=4]) = (int_64)0
	*(($12 + [36])) = [0]
	*($17) = (*($17) + [40])
	goto $label$14 
	
.LABEL $label$52
	CALL $36(($0 + [148]), ($1 + [16]), $0, ($1 + [88]), ($1 + [64]))
	$14 = [25]
	goto $label$5 
	
.LABEL $label$51
	*(($0 + [132])) = $13
	*($1 + [24]) = (int_64)0
	$16 = *($0)
	*($1 + [16]) = $16
	CALL $37(($1 + [88]), $2)
	$12 = *($1 + [88])
	CALL send_deferred(($1 + [16]), $16, $12, (*($1 + [92]) - $12), [1])
	$12 = *($1 + [88])
	if ( ($12 == 0) ){ goto $label$13 }
	$14 = [26]
	goto $label$5 
	
.LABEL $label$50
	*($1 + [92]) = $12
	CALL _ZdlPv($12)
	$14 = [27]
	goto $label$5 
	
.LABEL $label$49
	$global$0 = ($1 + [112])
	return 
	
.LABEL $label$48
	$14 = [37]
	goto $label$5 
	
.LABEL $label$47
	$14 = [0]
	goto $label$5 
	
.LABEL $label$46
	$14 = [5]
	goto $label$5 
	
.LABEL $label$45
	$14 = [1]
	goto $label$5 
	
.LABEL $label$44
	$14 = [38]
	goto $label$5 
	
.LABEL $label$43
	$14 = [2]
	goto $label$5 
	
.LABEL $label$42
	$14 = [3]
	goto $label$5 
	
.LABEL $label$41
	$14 = [46]
	goto $label$5 
	
.LABEL $label$40
	$14 = [7]
	goto $label$5 
	
.LABEL $label$39
	$14 = [7]
	goto $label$5 
	
.LABEL $label$38
	$14 = [7]
	goto $label$5 
	
.LABEL $label$37
	$14 = [48]
	goto $label$5 
	
.LABEL $label$36
	$14 = [41]
	goto $label$5 
	
.LABEL $label$35
	$14 = [15]
	goto $label$5 
	
.LABEL $label$34
	$14 = [15]
	goto $label$5 
	
.LABEL $label$33
	$14 = [9]
	goto $label$5 
	
.LABEL $label$32
	$14 = [10]
	goto $label$5 
	
.LABEL $label$31
	$14 = [40]
	goto $label$5 
	
.LABEL $label$30
	$14 = [12]
	goto $label$5 
	
.LABEL $label$29
	$14 = [14]
	goto $label$5 
	
.LABEL $label$28
	$14 = [36]
	goto $label$5 
	
.LABEL $label$27
	$14 = [19]
	goto $label$5 
	
.LABEL $label$26
	$14 = [17]
	goto $label$5 
	
.LABEL $label$25
	$14 = [19]
	goto $label$5 
	
.LABEL $label$24
	$14 = [18]
	goto $label$5 
	
.LABEL $label$23
	$14 = [19]
	goto $label$5 
	
.LABEL $label$22
	$14 = [33]
	goto $label$5 
	
.LABEL $label$21
	$14 = [19]
	goto $label$5 
	
.LABEL $label$20
	$14 = [19]
	goto $label$5 
	
.LABEL $label$19
	$14 = [30]
	goto $label$5 
	
.LABEL $label$18
	$14 = [19]
	goto $label$5 
	
.LABEL $label$17
	$14 = [21]
	goto $label$5 
	
.LABEL $label$16
	$14 = [23]
	goto $label$5 
	
.LABEL $label$15
	$14 = [24]
	goto $label$5 
	
.LABEL $label$14
	$14 = [25]
	goto $label$5 
	
.LABEL $label$13
	$14 = [27]
	goto $label$5 
	
.LABEL $label$12
	$14 = [31]
	goto $label$5 
	
.LABEL $label$11
	$14 = [34]
	goto $label$5 
	
.LABEL $label$10
	$14 = [42]
	goto $label$5 
	
.LABEL $label$9
	$14 = [44]
	goto $label$5 
	
.LABEL $label$8
	$14 = [44]
	goto $label$5 
	
.LABEL $label$7
	$14 = [43]
	goto $label$5 
	
.LABEL $label$6
	$14 = [47]
	goto $label$5 
	$14
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = ((int_32)*(*(*($0 + [4]))) * (int_32)[12])
	$6 = ($5 + [8192])
	if ( (*($6) & [1]) ){ goto $label$5 }
	$7 = ($6 + [1])
	$5 = CALL $100($7)
	if ( ((uint_32)$5 >= (uint_32)[8]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = *(($5 + [8200]))
	$5 = CALL $100($7)
	if ( ($5 <= [8]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [17373])
	goto $label$2 
	
.LABEL $label$3
	if ( $5 ){ goto $label$2 }
	$8 = (int_64)4
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)0
	
.LOOP $label$6:
	$9 = (($7 + $5) + [-1])
	$6 = *($9)
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [17418])
	$6 = *($9)
	
.LABEL $label$7
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$6 }
	$8 = ((int_64)((int_64)$8 << (int_64)8) | (int_64)4)
	
.LABEL $label$1
	*($1 + [16]) = (int_64)1
	*($1) = $8
	*($1 + [32]) = (int_64)0
	*($1 + [48]) = (int_64)0
	*($1 + [64]) = (int_64)0
	*(($1 + [40])) = $8
	*(($1 + [56])) = $8
	*(($1 + [72])) = $8
	*(($1 + [88])) = $8
	*(($1 + [104])) = $8
	*(($1 + [120])) = $8
	*(($1 + [136])) = $8
	$6 = $2
	$5 = ($6 + [-144])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [8])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	*($3 + [48]) = ($1 + [32])
	*($3 + [52]) = ($1 + [48])
	*($3 + [56]) = ($1 + [64])
	*($3 + [60]) = ($1 + [80])
	*($3 + [64]) = ($1 + [96])
	*($3 + [68]) = ($1 + [112])
	*($3 + [72]) = ($1 + [128])
	CALL $41(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [148]) = CALL db_store_i64(*($4 + [8]), (int_64)7035937543832993792, *(*($0 + [8])), $8, $5, [144])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$8 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$global$0 = ($3 + [80])
}