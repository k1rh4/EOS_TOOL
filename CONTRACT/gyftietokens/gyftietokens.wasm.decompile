(data (i32.const 8497) "failed to allocate pages\00EOS\00")
(data (i32.const 8528) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8608) "%d\00Challenger is not a GFT token holder.\00")
(data (i32.const 8649) "%u\00Challenged account is not a GFT token holder.\00")
(data (i32.const 8698) "%llu\00Account does not have an active challenge.\00")
(data (i32.const 8752) "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz\00")
(data (i32.const 8811) "PUB_R1_\00")
(data (i32.const 8819) "unrecognized public key format\00")
(data (i32.const 8850) "Permission denied.\00")
(data (i32.const 8872) "\08\00\00\00")
(data (i32.const 8876) "Permission denied. Cannot create badge: \00")
(data (i32.const 8920) "\0c\00\00\00")
(data (i32.const 8924) "\n\00\00\00")
(data (i32.const 8928) " \n Adding a lock \n\00")
(data (i32.const 8947) "Active challenge for account does not exist.\00")
(data (i32.const 8992) "\03\00\00\00")
(data (i32.const 8996) "Account cannot challenge itself.\00")
(data (i32.const 9029) "Contract is paused.\00")
(data (i32.const 9049) "no GFT balance object found\00")
(data (i32.const 9077) "Account has already been challenged.\00")
(data (i32.const 9120) "\04\00\00\00")
(data (i32.const 9124) "Validator is not a GFT token holder.\00")
(data (i32.const 9161) "ID hash provided does not match records. Account not validated.\00")
(data (i32.const 9225) "GFT-reward to the Validator. See \'How Gyftie Works\' document - ask us for link.\00")
(data (i32.const 9305) "GFT-reward to the Challenged-then-Validated Account. See \'How Gyftie Works\' document - ask us for link.\00")
(data (i32.const 9409) "Seized asset redistribution. See \'How Gyftie Works\' document - ask us for link.\00")
(data (i32.const 9489) "transaction expired\00")
(data (i32.const 9512) "\0b\00\00\00")
(data (i32.const 9516) "Successfully verified SMS\00")
(data (i32.const 9542) "Permission denied. Cannot accelerate unstake.\00")
(data (i32.const 9588) "Permission denied. Cannot prepare to remove profile.\00")
(data (i32.const 9641) "Transfer tokens to Gyftie for destruction\00")
(data (i32.const 9683) "Destruct tokens from destroyed profile\00")
(data (i32.const 9722) "Gyftie profile not found in table 1: \00")
(data (i32.const 9760) " \nAdding hash : \00")
(data (i32.const 9777) "\n\n\00")
(data (i32.const 9780) "\01\00\00\00")
(data (i32.const 9784) "ID verified by \00")
(data (i32.const 9800) "invalid symbol name\00")
(data (i32.const 9820) "token with symbol already exists\00")
(data (i32.const 9853) "memo has more than 256 bytes\00")
(data (i32.const 9882) "token with symbol does not exist, create token before issue\00")
(data (i32.const 9942) "issue requires authority of issuer or token contract.\00")
(data (i32.const 9996) "invalid quantity\00")
(data (i32.const 10013) "must issue positive quantity\00")
(data (i32.const 10042) "symbol precision mismatch\00")
(data (i32.const 10068) "cannot transfer to self\00")
(data (i32.const 10092) "Permission denied - cannot transfer.\00")
(data (i32.const 10129) "unable to find key\00")
(data (i32.const 10148) "must transfer positive quantity\00")
(data (i32.const 10180) "Permission denied. Insufficent authority to issue \00")
(data (i32.const 10231) " to stake.\00")
(data (i32.const 10242) "Staking requires authority of account or token contract.\00")
(data (i32.const 10299) "Requested unstake quantity must be greater than zero.\00")
(data (i32.const 10353) "Cannot request unstake. User must upgrade profile to version 2 to unstake.\00")
(data (i32.const 10428) "Account profile not found.\00")
(data (i32.const 10455) "Requested unstake quantity exceeds staked balance.\00")
(data (i32.const 10506) "Requested unstake quantity exceeds staked balance when accounting for your active challenges.\00")
(data (i32.const 10600) "write\00")
(data (i32.const 10606) "Voting account does not have a profile: \00")
(data (i32.const 10647) "Acount to promote does not have a profile: \00")
(data (i32.const 10691) "cannot pass end iterator to modify\00")
(data (i32.const 10726) "object passed to modify is not in multi_index\00")
(data (i32.const 10772) "cannot modify objects in table of another contract\00")
(data (i32.const 10823) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10882) "Profile to promote is not found.\00")
(data (i32.const 10915) "User rank is at highest level; cannot be promoted.\00")
(data (i32.const 10966) "There are no votes to promote this user.\00")
(data (i32.const 11007) " Promoting user: \00")
(data (i32.const 11025) "\n\00")
(data (i32.const 11027) " Current rank: \00")
(data (i32.const 11043) "  Rank Profile Count: \00")
(data (i32.const 11066) ".......\00")
(data (i32.const 11074) "  Votes from Rank: \00")
(data (i32.const 11094) "---- Best eligible rank \00")
(data (i32.const 11119) "\n\n *** Promoting user: \00")
(data (i32.const 11143) "User does not have the votes to be promoted.\00")
(data (i32.const 11188) "Profiles with rank not found.\00")
(data (i32.const 11218) "cannot increment end iterator\00")
(data (i32.const 11248) "Account to un-promote does not have a profile: \00")
(data (i32.const 11296) "\t\00\00\00")
(data (i32.const 11300) "cannot create objects in table of another contract\00")
(data (i32.const 11351) "next primary key in table is at autoincrement limit\00")
(data (i32.const 11403) "error reading iterator\00")
(data (i32.const 11426) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 11480) "cannot decrement iterator at beginning of table\00")
(data (i32.const 11528) "Comment ID not found: \00")
(data (i32.const 11551) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 11602) "This comment has been deleted\00")
(data (i32.const 11632) "Account is not an valid EOS account.\00")
(data (i32.const 11669) "Receiver is not a valid EOS account.\00")
(data (i32.const 11706) "Account \00")
(data (i32.const 11715) " must upgrade profile.\00")
(data (i32.const 11738) " does not have a profile.\00")
(data (i32.const 11764) "Receiver account \00")
(data (i32.const 11782) "Account is locked from performing activity.\00")
(data (i32.const 11826) " has an active challenge.\00")
(data (i32.const 11852) "Receiver \00")
(data (i32.const 11862) "get\00")
(data (i32.const 11866) "Validator cannot validate an account they gyfted.\00")
(data (i32.const 11916) "Validator cannot validate their gyfter.\00")
(data (i32.const 11956) "read\00")
(data (i32.const 11961) " \n Signatory Activity \n\00")
(data (i32.const 11985) " Signed by signatory: \00")
(data (i32.const 12008) "Transaction requires the approval of a signatory.\00")
(data (i32.const 12058) "\n Lock Activity \n\00")
(data (i32.const 12076) " \nAfter require auth\n\00")
(data (i32.const 12098) "Account is not a valid EOS account.\00")
(data (i32.const 12134) "Account does not have a V2 Gyftie profile.\00")
(data (i32.const 12177) "Account is not a valid EOS account: \00")
(data (i32.const 12214) "Gyftie oracle is not set.\00")
(data (i32.const 12240) "Transaction requires the approval of the Gyftie account or a signatory.\00")
(data (i32.const 12312) " must be verified (with badge) to sell GFT.\00")
(data (i32.const 12356) "Account has already been referred: \00")
(data (i32.const 12392) "Verifier has already verified user. Verifier: \00")
(data (i32.const 12439) "; Account being verfied: \00")
(data (i32.const 12468) "\b80\00\00")
(data (i32.const 12472) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 12505) "Upgrade failed. Profile for \00")
(data (i32.const 12534) " not found in profile - table 1.\00")
(data (i32.const 12567) "cannot pass end iterator to erase\00")
(data (i32.const 12601) "object passed to erase is not in multi_index\00")
(data (i32.const 12646) "cannot erase objects in table of another contract\00")
(data (i32.const 12696) "attempt to remove object that was not in multi_index\00")
(data (i32.const 12749) "Badge ID does not exist.\00")
(data (i32.const 12774) "Permission denied. Badge reward must be approved by badge creator.\00")
(data (i32.const 12841) "Recipient has already received this badge. Recipient: \00")
(data (i32.const 12896) "; Badge ID: \00")
(data (i32.const 12909) "Bonus from referred account: \00")
(data (i32.const 12939) "multiplication overflow\00")
(data (i32.const 12963) "multiplication underflow\00")
(data (i32.const 12988) "Completed all 5 Gyftie core identity badges\00")
(data (i32.const 13032) "Verified ID in Gyftie 1.0\00")
(data (i32.const 13058) "Permission denied. Must have approval from contract or issuer: \00")
(data (i32.const 13122) "Account is not locked.\00")
(data (i32.const 13145) "Account is already locked.\00")
(data (i32.const 13172) "Account is already a signatory.\00")
(data (i32.const 13204) "Signatory not found.\00")
(data (i32.const 13225) "GFT Order Book Account\00")
(data (i32.const 13248) "NO EXPIRATION\00")
(data (i32.const 13262) "Gyftie Limited Account\00")
(data (i32.const 13285) "Gyftie Token Account\00")
(data (i32.const 13306) " already has a Gyftie profile - table 1.\00")
(data (i32.const 13347) " already has a Gyftie profile - table 2.\00")
(data (i32.const 13388) " cannot sell. Selling amount must be less than net purchases. Net purchases: \00")
(data (i32.const 13466) "; Attempted selling amount: \00")
(data (i32.const 13495) "Buying GFT for the first time: \00")
(data (i32.const 13527) "Cannot check idhash. Profile \00")
(data (i32.const 13557) " does not exist in either profile 1 or 2.\00")
(data (i32.const 13599) "Account to rank does not have a Gyftie profile.\00")
(data (i32.const 13647) "proposal not found\00")
(data (i32.const 13666) "Proposal must have 80% positive votes to pass. Votes for: \00")
(data (i32.const 13725) "; Votes against: \00")
(data (i32.const 13743) " Rank zero count: \00")
(data (i32.const 13762) "Rank zero voter margin must be greater than 60% to pass. Rank zero votes for: \00")
(data (i32.const 13841) "; Rank zero voters: \00")
(data (i32.const 13862) " Executing transaction for proposal  : \00")
(data (i32.const 13902) "Proposal ID is not found: \00")
(data (i32.const 13932) "\07\00\00\00")
(data (i32.const 13936) "\05\00\00\00")
(data (i32.const 13940) "Proposal ID does not exist: \00")
(data (i32.const 13969) "User has already voted (for).\00")
(data (i32.const 13999) "User has already voted (against).\00")
(data (i32.const 14033) " User \00")
(data (i32.const 14040) " not found in profile table 2.\00")
(data (i32.const 14071) "Cannot accelunstake. Profile \00")
(data (i32.const 14101) "token with symbol does not exist\00")
(data (i32.const 14134) "must retire positive quantity\00")
(data (i32.const 14164) "Cannot set idhash. Profile \00")
(data (i32.const 14192) "Cannot add to balance. Account \00")
(data (i32.const 14224) " must upgrade profile to version 2.\00")
(data (i32.const 14260) " profile not found.\00")
(data (i32.const 14280) "no balance object found\00")
(data (i32.const 14304) "overdrawn balance\00")
(data (i32.const 14322) "Cannot subtract from balance. Account \00")
(data (i32.const 14361) "overdrawn balance - GFT is staked\00")
(data (i32.const 14395) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 14454) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 14503) "%lld%s%s %s\00")
(data (i32.const 14515) ".\00")
(data (i32.const 14518) "Unstaking balance is less than requested.\00")
(data (i32.const 14560) "Cannot unstake. Profile \00")
(data (i32.const 14585) "Liquid balance is less than quantity unstaking.\00")
(data (i32.const 14633) "Cannot stake. Profile \00")
(data (i32.const 14656) "attempt to add asset with different symbol\00")
(data (i32.const 14699) "addition underflow\00")
(data (i32.const 14718) "addition overflow\00")
(data (i32.const 14736) "attempt to subtract asset with different symbol\00")
(data (i32.const 14784) "subtraction underflow\00")
(data (i32.const 14806) "subtraction overflow\00")
(data (i32.const 14827) "invalid base-58 value\00")
(data (i32.const 14849) "base-58 value is out of range\00")
(data (i32.const 0) " :\00\00")
(import "env" "memcpy" (func $fimport$0 (param i32 i32 i32) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "has_auth" (func $fimport$2 (param i64) (result i32)))
(import "env" "abort" (func $fimport$3))
(import "env" "memset" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$6 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$7 (param i32 i32)))
(import "env" "__multf3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$9 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$12 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$16 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$17 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$19 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$20 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$23 (param i64 i64) (result i32)))
(import "env" "send_inline" (func $fimport$24 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "require_auth" (func $fimport$26 (param i64)))
(import "env" "db_next_i64" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$28 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$29 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$30 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$31 (result i64)))
(import "env" "get_active_producers" (func $fimport$32 (param i32 i32) (result i32)))
(import "env" "prints" (func $fimport$33 (param i32)))
(import "env" "db_lowerbound_i64" (func $fimport$34 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$35 (result i64)))
(import "env" "send_deferred" (func $fimport$36 (param i32 i64 i32 i32 i32)))
(import "env" "db_store_i64" (func $fimport$37 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$38 (param i32 i64 i32 i32)))
(import "env" "require_recipient" (func $fimport$39 (param i64)))
(import "env" "action_data_size" (func $fimport$40 (result i32)))
(import "env" "read_action_data" (func $fimport$41 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$42 (param i32 i64)))
(import "env" "printn" (func $fimport$43 (param i64)))
(import "env" "printui" (func $fimport$44 (param i64)))
(import "env" "printi" (func $fimport$45 (param i64)))
(import "env" "db_idx64_find_primary" (func $fimport$46 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$47 (param i32 i64 i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$48 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$49 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$50 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$51 (param i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$52 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$53 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "is_account" (func $fimport$54 (param i64) (result i32)))
(import "env" "db_remove_i64" (func $fimport$55 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$56 (param i32)))
(export "apply" (func $1))
(table $0 3 3 anyfunc)
(elem (i32.const 1) $19 $21)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 14879))
(global $global$2 i32 (i32.const 14879))


int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$2 = CALL $4($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $10([24])) + [8]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $331(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $5($2)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $12($1)
	
.LABEL $label$11
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($1))
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$4 = *($1)
	*($3 + [8]) = $4
	*($3 + [16]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-4352391049156317184, *($2))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $121(($3 + [8]), $5) + [8]) == (int_32)($3 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	CALL eosio_assert([0], [13172])
	
.LABEL $label$1
	$4 = *($1)
	*($3) = $2
	CALL $122($0, ($3 + [8]), $4, $3)
	$0 = *($3 + [32])
	if ( ($0 == 0) ){ goto $label$3 }
	$5 = ($3 + [36])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$5 }
	
.LOOP $label$6:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $12($2)
	
.LABEL $label$7
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$6 }
	$1 = *(($3 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$1 = $0
	
.LABEL $label$4
	*($5) = $0
	CALL $12($1)
	
.LABEL $label$3
	$global$0 = ($3 + [48])
}

void .FUNC $364 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *(($3 + [80]))
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = ($3 + [64])
	$6 = CALL db_lowerbound_i64(*($5), *(($3 + [72])), (int_64)4148594918074220544, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $137($5, $6)
	*($2 + [12]) = [0]
	*($2 + [8]) = $5
	$4 = *(*(CALL $366(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [80])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11351])
	$4 = *(($3 + [80]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [80])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	*($1 + [8]) = *(*($0 + [4]))
	*($1 + [16]) = *(*($0 + [8]))
	CALL $25(($1 + [24]), *($0 + [12]))
	$0 = *(*($0 + [16]) + [4])
	*($1 + [40]) = *($0 + [32])
	*(($1 + [48])) = *(($0 + [40]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$5 = CALL $4($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [20]) = $5
	*($3 + [16]) = $5
	*($3 + [24]) = ($5 + $4)
	*(($4 = CALL $10([64])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16 align=4]) = (int_64)0
	*($4 + [24]) = [0]
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [52]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($4 + [8])
	*($3 + [40]) = $4
	*($3 + [48]) = ($4 + [16])
	*($3 + [52]) = ($4 + [32])
	*($3 + [56]) = ($4 + [48])
	CALL $429(($3 + [40]), ($3 + [32]))
	*($4 + [60]) = [-1]
	*($4 + [56]) = $1
	*($3 + [32]) = $4
	$7 = *($4)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $4
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $149(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($5)
	
.LABEL $label$7
	$2 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$0 = *($2 + [16])
	if ( ($0 == 0) ){ goto $label$11 }
	$6 = ($2 + [20])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($1 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$15 }
	CALL $12(*(($1 + [-4])))
	
.LABEL $label$15
	$1 = $5
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($2 + [16]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $12($5)
	
.LABEL $label$11
	CALL $12($2)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $4
}

void .FUNC $189 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = [0]
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$7 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9800])
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($2 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [9853])
	
.LABEL $label$1
	$2 = [0]
	*(($3 + [72])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$6 = *($0)
	*($3 + [40]) = $6
	*($3 + [48]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	$2 = CALL $191(($3 + [40]), $4)
	if ( ((int_32)*($2 + [32]) == (int_32)($3 + [40])) ){ goto $label$8 }
	CALL eosio_assert([0], [11551])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [14101])
	
.LABEL $label$8
	CALL require_auth(*($2 + [24]))
	$5 = *($1)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$6 = $7
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$14 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9996])
	$5 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [14134])
	
.LABEL $label$15
	$4 = ($1 + [8])
	if ( ((int_64)*($4) == (int_64)*($2 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [10042])
	
.LABEL $label$16
	*($3 + [32]) = $1
	CALL $192(($3 + [40]), $2, (int_64)0, ($3 + [32]))
	$6 = *(($2 + [24]))
	*(($8 = (($3 + [16]) + [8]))) = *($4)
	$7 = *($1)
	*(($3 + [8])) = *($8)
	*($3 + [16]) = $7
	*($3) = *($3 + [16])
	CALL $193($0, $6, $3)
	$9 = *($3 + [64])
	if ( ($9 == 0) ){ goto $label$17 }
	$1 = ($3 + [68])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL $12($8)
	
.LABEL $label$21
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [64]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $9
	
.LABEL $label$18
	*($1) = $9
	CALL $12($4)
	
.LABEL $label$17
	$global$0 = ($3 + [80])
}

void .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [176])
	$global$0 = $2
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	CALL eosio_assert([0], [9588])
	
.LABEL $label$1
	*(($2 + [72])) = [0]
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	*($2 + [40]) = *($0)
	*($2 + [48]) = *($1)
	$3 = CALL $146(($2 + [40]), (int_64)5523015, [9049])
	if ( ((int_64)*($3) < (int_64)1) ){ goto $label$4 }
	*(($2 + [32])) = [0]
	*($2 + [24]) = (int_64)0
	$4 = CALL $2([9641])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$7 }
	*($2 + [24]) = ($4 << [1])
	$5 = (($2 + [24]) | [1])
	if ( $4 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $10($6)
	*($2 + [24]) = ($6 | [1])
	*($2 + [32]) = $5
	*($2 + [28]) = $4
	
.LABEL $label$6
	CALL memcpy($5, [9641], $4)
	
.LABEL $label$5
	*(($5 + $4)) = [0]
	*($2 + [16]) = (int_64)-6402241254016417792
	$7 = *($0)
	*($2 + [8]) = $7
	*($2 + [136]) = $7
	*($2 + [128]) = *($1)
	*(($2 + [152])) = *(($3 + [8]))
	*($2 + [144]) = *($3)
	CALL $24((($2 + [128]) + [32]), ($2 + [24]))
	$4 = CALL $156(($2 + [80]), ($2 + [8]), $7, (int_64)-3617168760277827584, ($2 + [128]))
	CALL $53($4)
	$5 = *($4 + [28])
	if ( ($5 == 0) ){ goto $label$8 }
	*(($4 + [32])) = $5
	CALL $12($5)
	
.LABEL $label$8
	$5 = *($4 + [16])
	if ( ($5 == 0) ){ goto $label$9 }
	*(($4 + [20])) = $5
	CALL $12($5)
	
.LABEL $label$9
	if ( ((*($2 + [160]) & [1]) == 0) ){ goto $label$10 }
	CALL $12(*(($2 + [168])))
	
.LABEL $label$10
	*(($2 + [136])) = [0]
	*($2 + [128]) = (int_64)0
	$4 = CALL $2([9683])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$13 }
	*($2 + [128]) = ($4 << [1])
	$5 = (($2 + [128]) | [1])
	if ( $4 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $10($6)
	*($2 + [128]) = ($6 | [1])
	*($2 + [136]) = $5
	*($2 + [132]) = $4
	
.LABEL $label$12
	CALL memcpy($5, [9683], $4)
	
.LABEL $label$11
	*(($5 + $4)) = [0]
	CALL $189($0, $3, ($2 + [128]))
	if ( ((*($2 + [128]) & [1]) == 0) ){ goto $label$14 }
	CALL $12(*($2 + [136]))
	
.LABEL $label$14
	if ( ((*($2 + [24]) & [1]) == 0) ){ goto $label$4 }
	CALL $12(*($2 + [32]))
	
.LABEL $label$4
	$7 = *($0 + [304])
	*(($2 + [120])) = (int_64)0
	*($2 + [104]) = (int_64)0
	*($2 + [112]) = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = (int_64)0
	*($2 + [96]) = (int_64)0
	*($2 + [108]) = [0]
	*($2 + [112]) = [0]
	$4 = ($0 + [312])
	CALL $72(($2 + [128]), $4, $7, ($2 + [80]))
	*($2 + [156]) = (*($2 + [156]) + [-1])
	CALL $73($4, ($2 + [128]), *($0 + [304]))
	CALL $190(($0 + [776]), $1)
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$15 }
	$3 = ($2 + [68])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$17 }
	
.LOOP $label$18:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$19 }
	CALL $12($4)
	
.LABEL $label$19
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$18 }
	$0 = *(($2 + [64]))
	goto $label$16 
	
.LABEL $label$17
	$0 = $1
	
.LABEL $label$16
	*($3) = $1
	CALL $12($0)
	
.LABEL $label$15
	$global$0 = ($2 + [176])
	return (unreachable)
	
.LABEL $label$3
	CALL $23(($2 + [24]))
	
.LABEL $label$2
	CALL $23(($2 + [128]))
	(unreachable)
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [8])) = (int_64)0
	*($0 + [4]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [8])) - *($1 + [4]))
	$3 = ((int_32)$2 / (int_32)[44])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[97612894]) ){ goto $label$3 }
	$2 = CALL $10($2)
	*(($0 + [4])) = $2
	*(($0 + [12])) = ($2 + ((int_32)$3 * (int_32)[44]))
	*(($3 = ($0 + [8]))) = $2
	$4 = *(($1 + [4]))
	$5 = (*(($1 + [8])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[44]) * (int_32)[44]))
	
.LABEL $label$4
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$2 = (*(($1 + [20])) - *($1 + [16]))
	$3 = ((int_32)$2 / (int_32)[24])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$2 }
	$2 = CALL $10($2)
	*(($0 + [16])) = $2
	*(($0 + [24])) = ($2 + ((int_32)$3 * (int_32)[24]))
	*(($3 = ($0 + [20]))) = $2
	$4 = *(($1 + [16]))
	$5 = (*(($1 + [20])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[24]) * (int_32)[24]))
	
.LABEL $label$5
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$2 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL $10($2)
	*(($0 + [28])) = $2
	*(($0 + [36])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [32]))) = $2
	$5 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $5, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL $38(($0 + [4]))
	
.LABEL $label$2
	CALL $38(($0 + [16]))
	
.LABEL $label$1
	CALL $38(($0 + [28]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$3 = ($global$0 - [192])
	$global$0 = $3
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8850])
	
.LABEL $label$1
	$2 = CALL $24(($3 + [104]), $2)
	CALL $44(($3 + [120]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$2 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$2
	*($3 + [48]) = (int_64)3617214756542218240
	*($3 + [56]) = (int_64)-6402241254016417792
	*($3 + [40]) = *($1)
	$0 = CALL $49((($3 + [40]) + [24]), ($3 + [120]))
	*($3) = (int_64)6138663577826885632
	*($3 + [8]) = (int_64)-3075276123059568640
	$4 = *($1)
	*(($1 = CALL $10([16]))) = $4
	*($1 + [8]) = (int_64)3617214756542218240
	$2 = [0]
	*(($3 + [36])) = [0]
	$5 = ($1 + [16])
	*(($3 + [24])) = $5
	*(($3 + [20])) = $5
	*($3 + [16]) = $1
	*($3 + [28 align=4]) = (int_64)0
	*($3 + [160]) = [24]
	*($3 + [168]) = ($3 + [160])
	*($3 + [180]) = (($3 + [40]) + [28])
	*($3 + [176]) = $0
	*($3 + [184]) = ($3 + [80])
	*($3 + [188]) = ($3 + [92])
	CALL $50(($3 + [176]), ($3 + [168]))
	$1 = *($3 + [160])
	if ( ($1 == 0) ){ goto $label$4 }
	$0 = ($3 + [28])
	CALL $51($0, $1)
	$2 = *(($3 + [32]))
	$1 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	
.LABEL $label$3
	*($3 + [180]) = $1
	*($3 + [176]) = $1
	*($3 + [184]) = $2
	*($3 + [160]) = ($3 + [176])
	*($3 + [168]) = ($3 + [40])
	CALL $52(($3 + [168]), ($3 + [160]))
	CALL $53($3)
	$1 = *($3 + [28])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [32])) = $1
	CALL $12($1)
	
.LABEL $label$5
	$1 = *($3 + [16])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($3 + [20])) = $1
	CALL $12($1)
	
.LABEL $label$6
	$1 = *(($3 + [92]))
	if ( ($1 == 0) ){ goto $label$7 }
	*(($3 + [96])) = $1
	CALL $12($1)
	
.LABEL $label$7
	$1 = *(($3 + [80]))
	if ( ($1 == 0) ){ goto $label$8 }
	*(($3 + [84])) = $1
	CALL $12($1)
	
.LABEL $label$8
	$1 = *(($3 + [68]))
	if ( ($1 == 0) ){ goto $label$9 }
	*(($3 + [72])) = $1
	CALL $12($1)
	
.LABEL $label$9
	$1 = *($3 + [148])
	if ( ($1 == 0) ){ goto $label$10 }
	*(($3 + [152])) = $1
	CALL $12($1)
	
.LABEL $label$10
	$1 = *($3 + [136])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($3 + [140])) = $1
	CALL $12($1)
	
.LABEL $label$11
	$1 = *($3 + [124])
	if ( ($1 == 0) ){ goto $label$12 }
	*(($3 + [128])) = $1
	CALL $12($1)
	
.LABEL $label$12
	$global$0 = ($3 + [192])
}

void .FUNC $264 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1376])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	*($3 + [1344]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	$0 = *($3 + [1352])
	*($3 + [1360]) = *($3 + [1344])
	*($3 + [1368]) = $0
	CALL $61(($3 + [40]), ($3 + [1368]), ($3 + [1360]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1376])
}

void .FUNC $265 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1352]), $2, [8])
	*($3 + [1344]) = (int_64)0
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [1336]), $5, [8])
	*($3) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*((($3 + [1336]) + [8])) = *($3)
	*(($3 + [24])) = $4
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($2 = ($3 + [312]))) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	*((($3 + [1408]) + [40])) = (int_64)0
	*($3 + [1432]) = (int_64)0
	*($3 + [1440]) = (int_64)0
	*($3 + [1408]) = (int_64)0
	*($3 + [1416]) = (int_64)0
	*($3 + [1424]) = (int_64)0
	*($3 + [1436]) = [0]
	*($3 + [1440]) = [0]
	CALL $72(($3 + [1360]), $2, $0, ($3 + [1408]))
	CALL require_auth(*($3 + [1360]))
	CALL $138(($3 + [32]), ($3 + [1352]), ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1456])
}

void .FUNC $266 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1352]), $2, [8])
	*($3 + [1344]) = (int_64)0
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [1336]), $5, [8])
	*($3) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*((($3 + [1336]) + [8])) = *($3)
	*(($3 + [24])) = $4
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($2 = ($3 + [312]))) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	*((($3 + [1408]) + [40])) = (int_64)0
	*($3 + [1432]) = (int_64)0
	*($3 + [1440]) = (int_64)0
	*($3 + [1408]) = (int_64)0
	*($3 + [1416]) = (int_64)0
	*($3 + [1424]) = (int_64)0
	*($3 + [1436]) = [0]
	*($3 + [1440]) = [0]
	CALL $72(($3 + [1360]), $2, $0, ($3 + [1408]))
	CALL require_auth(*($3 + [1360]))
	CALL $141(($3 + [32]), ($3 + [1352]), ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1456])
}

void .FUNC $267 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1336]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	if ( CALL has_auth($0) ){ goto $label$6 }
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$6 }
	CALL eosio_assert([0], [9542])
	
.LABEL $label$6
	CALL $185(($3 + [32]), ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1344])
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	$2 = ($global$0 - [256])
	$global$0 = $2
	*($0) = (int_64)0
	*(($3 = ($0 + [29]))) = (int_64)0
	*(($4 = ($0 + [24]))) = (int_64)0
	*(($5 = ($0 + [16]))) = (int_64)0
	*(($6 = ($0 + [8]))) = (int_64)0
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = *($1)
	$9 = ($8 + $7)
	$7 = ($0 + [2])
	$10 = ($0 + [3])
	$11 = ($0 + [4])
	$12 = ($0 + [5])
	$13 = ($0 + [6])
	$14 = ($0 + [7])
	$15 = ($0 + [9])
	$16 = ($0 + [10])
	$17 = ($0 + [11])
	$18 = ($0 + [12])
	$19 = ($0 + [13])
	$20 = ($0 + [14])
	$21 = ($0 + [15])
	$22 = ($0 + [17])
	$23 = ($0 + [18])
	$24 = ($0 + [19])
	$25 = ($0 + [20])
	$26 = ($0 + [21])
	$27 = ($0 + [22])
	$28 = ($0 + [23])
	$29 = ($0 + [25])
	$30 = ($0 + [26])
	$31 = ($0 + [27])
	$32 = ($0 + [28])
	$33 = ($0 + [30])
	$34 = ($0 + [31])
	$35 = ($0 + [32])
	$36 = ($0 + [33])
	$37 = ($0 + [34])
	$38 = ($0 + [35])
	$39 = ($0 + [36])
	
.LOOP $label$2:
	if ( *([0] + [8240]) ){ goto $label$3 }
	$1 = [-256]
	
.LOOP $label$4:
	*(($1 + [8497])) = [255]
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$4 }
	$1 = [0]
	
.LOOP $label$5:
	*((*(($1 + [8752])) + [8241])) = $1
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[59]) ){ goto $label$5 }
	*([0] + [8240]) = [1]
	
.LABEL $label$3
	$1 = *((CALL memcpy($2, [8241], [256]) + *($8)))
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$6 }
	CALL eosio_assert([0], [14827])
	
.LABEL $label$6
	$1 = (((int_32)*($0) * (int_32)[58]) + $1)
	*($0) = $1
	$1 = (((int_32)*($40) * (int_32)[58]) + int_32($1 >> [8]))
	*(($40 = ($0 + [1]))) = $1
	$1 = (((int_32)*($7) * (int_32)[58]) + int_32($1 >> [8]))
	*($7) = $1
	$1 = (((int_32)*($10) * (int_32)[58]) + int_32($1 >> [8]))
	*($10) = $1
	$1 = (((int_32)*($11) * (int_32)[58]) + int_32($1 >> [8]))
	*($11) = $1
	$1 = (((int_32)*($12) * (int_32)[58]) + int_32($1 >> [8]))
	*($12) = $1
	$1 = (((int_32)*($13) * (int_32)[58]) + int_32($1 >> [8]))
	*($13) = $1
	$1 = (((int_32)*($14) * (int_32)[58]) + int_32($1 >> [8]))
	*($14) = $1
	$1 = (((int_32)*($6) * (int_32)[58]) + int_32($1 >> [8]))
	*($6) = $1
	$1 = (((int_32)*($15) * (int_32)[58]) + int_32($1 >> [8]))
	*($15) = $1
	$1 = (((int_32)*($16) * (int_32)[58]) + int_32($1 >> [8]))
	*($16) = $1
	$1 = (((int_32)*($17) * (int_32)[58]) + int_32($1 >> [8]))
	*($17) = $1
	$1 = (((int_32)*($18) * (int_32)[58]) + int_32($1 >> [8]))
	*($18) = $1
	$1 = (((int_32)*($19) * (int_32)[58]) + int_32($1 >> [8]))
	*($19) = $1
	$1 = (((int_32)*($20) * (int_32)[58]) + int_32($1 >> [8]))
	*($20) = $1
	$1 = (((int_32)*($21) * (int_32)[58]) + int_32($1 >> [8]))
	*($21) = $1
	$1 = (((int_32)*($5) * (int_32)[58]) + int_32($1 >> [8]))
	*($5) = $1
	$1 = (((int_32)*($22) * (int_32)[58]) + int_32($1 >> [8]))
	*($22) = $1
	$1 = (((int_32)*($23) * (int_32)[58]) + int_32($1 >> [8]))
	*($23) = $1
	$1 = (((int_32)*($24) * (int_32)[58]) + int_32($1 >> [8]))
	*($24) = $1
	$1 = (((int_32)*($25) * (int_32)[58]) + int_32($1 >> [8]))
	*($25) = $1
	$1 = (((int_32)*($26) * (int_32)[58]) + int_32($1 >> [8]))
	*($26) = $1
	$1 = (((int_32)*($27) * (int_32)[58]) + int_32($1 >> [8]))
	*($27) = $1
	$1 = (((int_32)*($28) * (int_32)[58]) + int_32($1 >> [8]))
	*($28) = $1
	$1 = (((int_32)*($4) * (int_32)[58]) + int_32($1 >> [8]))
	*($4) = $1
	$1 = (((int_32)*($29) * (int_32)[58]) + int_32($1 >> [8]))
	*($29) = $1
	$1 = (((int_32)*($30) * (int_32)[58]) + int_32($1 >> [8]))
	*($30) = $1
	$1 = (((int_32)*($31) * (int_32)[58]) + int_32($1 >> [8]))
	*($31) = $1
	$1 = (((int_32)*($32) * (int_32)[58]) + int_32($1 >> [8]))
	*($32) = $1
	$1 = (((int_32)*($3) * (int_32)[58]) + int_32($1 >> [8]))
	*($3) = $1
	$1 = (((int_32)*($33) * (int_32)[58]) + int_32($1 >> [8]))
	*($33) = $1
	$1 = (((int_32)*($34) * (int_32)[58]) + int_32($1 >> [8]))
	*($34) = $1
	$1 = (((int_32)*($35) * (int_32)[58]) + int_32($1 >> [8]))
	*($35) = $1
	$1 = (((int_32)*($36) * (int_32)[58]) + int_32($1 >> [8]))
	*($36) = $1
	$1 = (((int_32)*($37) * (int_32)[58]) + int_32($1 >> [8]))
	*($37) = $1
	$1 = (((int_32)*($38) * (int_32)[58]) + int_32($1 >> [8]))
	*($38) = $1
	$1 = (((int_32)*($39) * (int_32)[58]) + int_32($1 >> [8]))
	*($39) = $1
	if ( ($1 <= [256]) ){ goto $label$7 }
	CALL eosio_assert([0], [14849])
	
.LABEL $label$7
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [36])
	
.LOOP $label$8:
	$8 = *($0)
	*($0) = *($1)
	*($1) = $8
	$1 = ($1 + [-1])
	$0 = ($0 + [1])
	if ( ($0 <= $1) ){ goto $label$8 }
	$global$0 = ($2 + [256])
}

void .FUNC $42 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($1 + [4])
	if ( ($3 <= [3]) ){ goto $label$3 }
	$1 = *($1)
	if ( ((int_32)CALL $2([8522]) != (int_32)[3]) ){ goto $label$4 }
	if ( (CALL $3($1, [8522], [3]) == 0) ){ goto $label$2 }
	
.LABEL $label$4
	if ( ($3 <= [7]) ){ goto $label$3 }
	if ( ((int_32)CALL $2([8811]) != (int_32)[7]) ){ goto $label$3 }
	if ( (CALL $3($1, [8811], [7]) == 0) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [8819])
	*(($0 + [33])) = [0]
	*(($0 + [25])) = (int_64)0
	*(($0 + [17])) = (int_64)0
	*(($0 + [9])) = (int_64)0
	*($0 + [1 align=1]) = (int_64)0
	*($0) = [0]
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$2
	*($2 + [28]) = ($3 + [-3])
	*($2 + [24]) = ($1 + [3])
	*($2 + [8]) = *($2 + [24])
	CALL $43(($2 + [40]), ($2 + [8]))
	*(($0 + [33])) = [0]
	*(($0 + [25])) = (int_64)0
	*(($0 + [17])) = (int_64)0
	*(($0 + [9])) = (int_64)0
	*($0 + [1 align=1]) = (int_64)0
	*($0) = [0]
	CALL memcpy(($0 + [1]), ($2 + [40]), [33])
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	*($2 + [36]) = ($3 + [-7])
	*($2 + [32]) = ($1 + [7])
	*($2 + [16]) = *($2 + [32])
	CALL $43(($2 + [40]), ($2 + [16]))
	*(($0 + [33])) = [0]
	*(($0 + [25])) = (int_64)0
	*(($0 + [17])) = (int_64)0
	*(($0 + [9])) = (int_64)0
	*($0 + [1 align=1]) = (int_64)0
	*($0) = [1]
	CALL memcpy(($0 + [1]), ($2 + [40]), [33])
	$global$0 = ($2 + [80])
}

void .FUNC $41 (int_32 $0)
{
}

int_32 .FUNC $40 ()
{
	int_64 $0
	int_32 $1
	if ( (*([0] + [8221]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	if ( (*([0] + [8220]) == 0) ){ goto $label$3 }
	$0 = *([0] + [8232])
	goto $label$2 
	
.LABEL $label$3
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8232]) = $0
	
.LABEL $label$2
	*([0] + [8221]) = [1]
	$1 = (CASTING uint_32)(uint_64 ((int_64)((int_64)((int_64)$0 / (int_64)1000) + (int_64)-946684800000) / (int_64)500))
	*([0] + [8224]) = $1
	return $1
}

void .FUNC $47 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [3])
	if ( ((uint_32)$3 <= (uint_32)int_32(($4 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $12($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($4 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $3
	$4 = int_32($4 >> [2])
	if ( ($4 <= $3) ){ goto $label$6 }
	$5 = $4
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$5 = ($5 << [3])
	$4 = CALL $10($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	$4 = (*($0) + [8])
	*($0) = $4
	$1 = ($1 + [8])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$7 = int_32($6 >> [3])
	$6 = (*($0 + [4]) - $5)
	$4 = ($1 + $6)
	$8 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$7) )
	$6 = ($8 - $1)
	if ( ($6 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$3 }
	$1 = ($0 + [4])
	$0 = *($1)
	
.LOOP $label$9:
	*($0) = *($4)
	$0 = (*($1) + [8])
	*($1) = $0
	$4 = ($4 + [8])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + (int_32($6 >> [3]) << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $38($0)
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ((int_32)($2 - $1) / (int_32)[24])
	if ( ((uint_32)$3 <= (uint_32)((int_32)($4 - $5) / (int_32)[24])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $12($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$1 }
	$5 = [178956970]
	$4 = ((int_32)$4 / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$6 }
	$4 = ($4 << [1])
	$5 = ( $3 ? $4 : ($4 <= $3) )
	
.LABEL $label$6
	$5 = ((int_32)$5 * (int_32)[24])
	$4 = CALL $10($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$4 = (*($0) + [24])
	*($0) = $4
	$1 = ($1 + [24])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$4 = ($1 + ((int_32)$6 * (int_32)[24]))
	$7 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$6) )
	$8 = ($7 - $1)
	$9 = ((int_32)$8 / (int_32)[24])
	if ( ($8 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$9:
	*($1) = *($4)
	*(($1 + [16])) = *(($4 + [16]))
	*(($1 + [8])) = *(($4 + [8]))
	$1 = (*($0) + [24])
	*($0) = $1
	$4 = ($4 + [24])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$9 * (int_32)[24]))
	return (unreachable)
	
.LABEL $label$1
	CALL $38($0)
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ((int_32)($2 - $1) / (int_32)[44])
	if ( ((uint_32)$3 <= (uint_32)((int_32)($4 - $5) / (int_32)[44])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $12($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[97612894]) ){ goto $label$1 }
	$5 = [97612893]
	$4 = ((int_32)$4 / (int_32)[44])
	if ( ((uint_32)$4 > (uint_32)[48806445]) ){ goto $label$6 }
	$4 = ($4 << [1])
	$5 = ( $3 ? $4 : ($4 <= $3) )
	
.LABEL $label$6
	$5 = ((int_32)$5 * (int_32)[44])
	$4 = CALL $10($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	*(($4 + [40])) = *(($1 + [40]))
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$4 = (*($0) + [44])
	*($0) = $4
	$1 = ($1 + [44])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[44])
	$4 = ($1 + ((int_32)$6 * (int_32)[44]))
	$7 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$6) )
	$8 = ($7 - $1)
	$9 = ((int_32)$8 / (int_32)[44])
	if ( ($8 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$9:
	*($1) = *($4)
	*(($1 + [40])) = *(($4 + [40]))
	*(($1 + [32])) = *(($4 + [32]))
	*(($1 + [24])) = *(($4 + [24]))
	*(($1 + [16])) = *(($4 + [16]))
	*(($1 + [8])) = *(($4 + [8]))
	$1 = (*($0) + [44])
	*($0) = $1
	$4 = ($4 + [44])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$9 * (int_32)[44]))
	return (unreachable)
	
.LABEL $label$1
	CALL $38($0)
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [192])
	$global$0 = $2
	$3 = *($1)
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = uint_32($3 >> [1])
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($1 + [4])
	$1 = *($1 + [8])
	
.LABEL $label$1
	*($2 + [148]) = $3
	*($2 + [144]) = $1
	*($2 + [8]) = *($2 + [144])
	CALL $42(($2 + [152]), ($2 + [8]))
	*($0 + [4 align=4]) = (int_64)0
	*(($0 + [12])) = (int_64)0
	*(($0 + [20])) = (int_64)0
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	*($2 + [104]) = *($2 + [153 align=1])
	*($2 + [106]) = *($2 + [155])
	*($2 + [107 align=1]) = *($2 + [156])
	*($2 + [109 align=1]) = *($2 + [158 align=2])
	*($2 + [117 align=1]) = *(($2 + [166]))
	*($2 + [125 align=1]) = *(($2 + [174]))
	*($2 + [129 align=1]) = *(($2 + [178]))
	*($2 + [131]) = *((($2 + [152]) + [28]))
	*($2 + [132]) = *(($2 + [181]))
	*($2 + [133 align=1]) = *(($2 + [182]))
	*($0) = [1]
	*(($1 = ($2 + [96]))) = *($2 + [136])
	*(($3 = ($2 + [88]))) = *($2 + [128])
	*(($4 = (($2 + [64]) + [16]))) = *($2 + [120])
	*(($5 = ($2 + [72]))) = *($2 + [112])
	*($2 + [64]) = *($2 + [104])
	*((($2 + [16]) + [12])) = *($5)
	*((($2 + [16]) + [20])) = *($4)
	*((($2 + [16]) + [28])) = *($3)
	*((($2 + [16]) + [36])) = *($1)
	*(($2 + [55])) = *(($2 + [63]))
	*($2 + [16]) = [0]
	*($2 + [56]) = [1]
	*($2 + [20 align=4]) = *($2 + [64])
	*($2 + [53 align=1]) = *($2 + [61 align=1])
	CALL $45(($0 + [4]), ($2 + [16]), ($2 + [60]))
	CALL $46(($0 + [16]), [0], [0])
	CALL $47(($0 + [28]), [0], [0])
	$global$0 = ($2 + [192])
}

void .FUNC $363 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $165(*($1), *($0 + [4]))
	CALL $165(*($1), *($0 + [8]))
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $165(*($1), *($0 + [16]))
	CALL $165(*($1), *($0 + [20]))
	CALL $165(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $362 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	CALL $364(*($0 + [4]), $1)
	$5 = *($1 + [24])
	$6 = ( *(($1 + [28])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [44])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [24])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $4($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $5)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = $6
	*($3 + [40]) = ($1 + [40])
	*($3 + [44]) = ($1 + [56])
	CALL $365(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($4 + [8]), (int_64)4148594918074220544, *(*($0 + [8])), $7, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $5($2)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$5 = ($4 + [8])
	$7 = *($5)
	$2 = *(($0 + [8]))
	$8 = *($2)
	$9 = *($1)
	*($3 + [24]) = *($1 + [16])
	*($1 + [68]) = CALL db_idx64_store($7, (int_64)4148594918074220544, $8, $9, ($3 + [24]))
	$7 = *($2)
	$8 = *($5)
	$9 = *($1)
	*($3 + [24]) = *(($1 + [56]))
	*(($1 + [72])) = CALL db_idx64_store($8, (int_64)4148594918074220545, $7, $9, ($3 + [24]))
	$global$0 = ($3 + [48])
}

void .FUNC $167 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $10([136])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [48 align=4]) = (int_64)0
	*($3 + [56 align=4]) = (int_64)0
	*($3 + [68 align=4]) = (int_64)0
	*($3 + [76]) = [0]
	*($3 + [84 align=4]) = (int_64)0
	*($3 + [92 align=4]) = (int_64)0
	*($3 + [100]) = ((int_64)CALL $39() / (int_64)1000000)
	$2 = CALL $39()
	*($3 + [108]) = $1
	*($3 + [104]) = ((int_64)$2 / (int_64)1000000)
	CALL $383(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [112])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $384(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [84])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [88])) = $1
	CALL $12($1)
	
.LABEL $label$5
	$1 = *($3 + [68])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($3 + [72])) = $1
	CALL $12($1)
	
.LABEL $label$6
	$1 = *($3 + [52])
	if ( ($1 == 0) ){ goto $label$7 }
	*(($3 + [56])) = $1
	CALL $12($1)
	
.LABEL $label$7
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*(($3 + [48])))
	
.LABEL $label$8
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($3 + [16])))
	
.LABEL $label$9
	CALL $12($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [4])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [2])
	$3 = (*($2) + [2])
	*($2) = $3
	$2 = ($1 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [4])
	$2 = (*($6) + [4])
	*(($6 = ($0 + [4]))) = $2
	$7 = (int_64)0
	$8 = ($0 + [8])
	$5 = [0]
	
.LOOP $label$4:
	if ( ($2 <= *($8)) ){ goto $label$5 }
	CALL eosio_assert([0], [11862])
	$2 = *($6)
	
.LABEL $label$5
	$3 = *($2)
	$4 = ($2 + [1])
	*($6) = $4
	$2 = ($5 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $2)))
	$5 = ($2 + [7])
	$2 = $4
	if ( ($3 & [128]) ){ goto $label$4 }
	*($1 + [12]) = $7
	$2 = ($1 + [16])
	$6 = ($0 + [8])
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$4 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	$2 = (*($5) + [1])
	*(($5 = ($0 + [4]))) = $2
	$7 = (int_64)0
	$4 = [0]
	
.LOOP $label$7:
	if ( ($2 <= *($6)) ){ goto $label$8 }
	CALL eosio_assert([0], [11862])
	$2 = *($5)
	
.LABEL $label$8
	$3 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$4 = ($4 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $4)))
	$4 = ($4 + [7])
	$2 = $2
	if ( ($3 & [128]) ){ goto $label$7 }
	*($1 + [20]) = $7
	return $0
}

int_32 .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $168($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $10($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $27($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $27($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $23($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $12($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $164 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [128])
	$global$0 = $1
	*($1 + [88]) = (int_64)0
	*($1 + [80]) = [0]
	*($1 + [72]) = (int_64)0
	*($1 + [64]) = [0]
	*($1 + [56]) = (int_64)0
	$2 = CALL $39()
	*($1 + [44]) = [0]
	*($1 + [48]) = [0]
	*($1 + [52]) = [0]
	*($1 + [32]) = ((CASTING uint_32)(uint_64 ((int_64)$2 / (int_64)1000000)) + [60])
	$3 = ($0 + [16])
	$5 = ($0 + [20])
	$6 = *($5)
	$4 = ($0 + [24])
	if ( ((uint_32)(*($4) - $6) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$6 = *($5)
	
.LABEL $label$1
	CALL memcpy(($1 + [88]), $6, [8])
	*($5) = (*($5) + [8])
	CALL $165(CALL $165($3, ($1 + [72])), ($1 + [56]))
	$4 = *($4)
	$6 = *($5)
	CALL $166($3, ($1 + [32]))
	CALL require_auth(*($1 + [88]))
	$5 = ($4 - $6)
	$2 = CALL $39()
	if ( ((uint_32)*($1 + [32]) >= (uint_32)(CASTING uint_32)(uint_64 ((int_64)$2 / (int_64)1000000))) ){ goto $label$2 }
	CALL eosio_assert([0], [9489])
	
.LABEL $label$2
	*($1 + [24]) = [0]
	*($1 + [16]) = (int_64)0
	$3 = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $51(($1 + [16]), $5)
	$3 = *($1 + [16])
	
.LABEL $label$3
	CALL memcpy($3, $6, $5)
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$5 = (*($1 + [20]) - *($1 + [16]))
	if ( ($5 == 0) ){ goto $label$6 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL $10($5)
	*(($1 + [8])) = ($3 + $5)
	*($1) = $3
	*($1 + [4]) = $3
	$6 = *($1 + [16])
	$5 = (*($1 + [20]) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($3, $6, $5)
	*($1 + [4]) = (*($1 + [4]) + $5)
	
.LABEL $label$6
	*($1 + [104]) = (int_64)0
	$5 = ($0 + [544])
	CALL $65($5, ($1 + [88]), ($1 + [104]), [11296])
	$2 = *($1 + [88])
	*($1 + [104]) = $5
	*($1 + [108]) = ($1 + [88])
	*($1 + [112]) = ($1 + [56])
	*($1 + [116]) = ($1 + [72])
	*($1 + [120]) = $1
	CALL $167(($1 + [96]), ($0 + [552]), $2, ($1 + [104]))
	$0 = *($1)
	if ( ($0 == 0) ){ goto $label$7 }
	*($1 + [4]) = $0
	CALL $12($0)
	
.LABEL $label$7
	$0 = *($1 + [16])
	if ( ($0 == 0) ){ goto $label$8 }
	*($1 + [20]) = $0
	CALL $12($0)
	
.LABEL $label$8
	if ( (*($1 + [56]) & [1]) ){ goto $label$10 }
	if ( (*($1 + [72]) & [1]) ){ goto $label$9 }
	goto $label$4 
	
.LABEL $label$10
	CALL $12(*(($1 + [64])))
	if ( ((*($1 + [72]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$9
	CALL $12(*(($1 + [80])))
	$global$0 = ($1 + [128])
	return (unreachable)
	
.LABEL $label$5
	CALL $38($1)
	
.LABEL $label$4
	$global$0 = ($1 + [128])
}

void .FUNC $163 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$2 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $2
	*($5 + [56]) = $2
	*($5 + [24]) = *($1)
	*($1 + [136]) = *(*($3))
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	$6 = ($1 + [8])
	*($5 + [92]) = $6
	*($5 + [88]) = $1
	$7 = ($1 + [20])
	*($5 + [96]) = $7
	$8 = ($1 + [32])
	*($5 + [100]) = $8
	$9 = ($1 + [48])
	*($5 + [104]) = $9
	$10 = ($1 + [64])
	*($5 + [108]) = $10
	$11 = ($1 + [80])
	*($5 + [112]) = $11
	$12 = ($1 + [96])
	*($5 + [116]) = $12
	$13 = ($1 + [112])
	*($5 + [120]) = $13
	$14 = ($1 + [124])
	*($5 + [124]) = $14
	$15 = ($1 + [136])
	*($5 + [128]) = $15
	$16 = ($1 + [144])
	*($5 + [132]) = $16
	$17 = ($1 + [160])
	*($5 + [136]) = $17
	$18 = ($1 + [168])
	*($5 + [140]) = $18
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$4 = CALL $4($3)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$3
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $6
	*($5 + [96]) = $7
	*($5 + [100]) = $8
	*($5 + [104]) = $9
	*($5 + [108]) = $10
	*($5 + [112]) = $11
	*($5 + [116]) = $12
	*($5 + [120]) = $13
	*($5 + [124]) = $14
	*($5 + [128]) = $15
	*($5 + [132]) = $16
	*($5 + [136]) = $17
	*($5 + [140]) = $18
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), *($5 + [72]), $4, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL $5($4)
	
.LABEL $label$5
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $382(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $162 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [8850])
	
.LABEL $label$1
	CALL $56($0, $1)
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$8:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$7 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	$5 = *($0)
	*($3 + [8]) = $2
	if ( $8 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$6
	$8 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$8 = CALL $57($4, $1)
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$5
	$5 = *($0)
	*($3 + [8]) = $2
	if ( $8 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [13599])
	$5 = *($0)
	*($3 + [8]) = $2
	if ( [0] ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10691])
	
.LABEL $label$2
	CALL $163($4, $8, $5, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $301(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $160 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$4 = ($global$0 - [128])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = ($1 + [136])
	*($5 + [24]) = *($6)
	*($5 + [56]) = *(($1 + [96]))
	$7 = ($1 + [80])
	$8 = *($7)
	*($5 + [32]) = ((int_64)((int_64)*(($1 + [64])) + (int_64)*(($1 + [48]))) + (int_64)$8)
	$9 = ((int_64)((int_64)*(($1 + [160])) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [40]) = $9
	*($5 + [48]) = $9
	$9 = *($1)
	$10 = *($3)
	if ( ((int_64)*($10 + [8]) == (int_64)*(($1 + [88]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14656])
	$8 = *($7)
	
.LABEL $label$3
	$8 = ((int_64)$8 + (int_64)*($10))
	*($7) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14699])
	$8 = *(($1 + [80]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14718])
	
.LABEL $label$5
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [72]))) ){ goto $label$6 }
	CALL eosio_assert([0], [14736])
	
.LABEL $label$6
	$8 = (int_64)
	*(($3 = ($1 + [64]))) = $8(*($3) - *($7)))
	if ( ((int_64)$8 <= (int_64)-4611686018427387904) ){ goto $label$11 }
	if ( ((int_64)$8 >= (int_64)4611686018427387904) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert([0], [14784])
	if ( ((int_64)*($3) < (int_64)4611686018427387904) ){ goto $label$9 }
	
.LABEL $label$10
	CALL eosio_assert([0], [14806])
	if ( ((int_64)$9 != (int_64)*($1)) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$9 == (int_64)*($1)) ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [10823])
	
.LABEL $label$7
	*($5 + [64]) = [0]
	*($5 + [8]) = ($5 + [64])
	*($5 + [112]) = $6
	*($5 + [72]) = $1
	$10 = ($1 + [8])
	*($5 + [76]) = $10
	$11 = ($1 + [20])
	*($5 + [80]) = $11
	$12 = ($1 + [32])
	*($5 + [84]) = $12
	$13 = ($1 + [48])
	*($5 + [88]) = $13
	$14 = ($1 + [64])
	*($5 + [92]) = $14
	$15 = ($1 + [80])
	*($5 + [96]) = $15
	$16 = ($1 + [96])
	*($5 + [100]) = $16
	$17 = ($1 + [112])
	*($5 + [104]) = $17
	$18 = ($1 + [124])
	*($5 + [108]) = $18
	$19 = ($1 + [144])
	*($5 + [116]) = $19
	$20 = ($1 + [160])
	*($5 + [120]) = $20
	$21 = ($1 + [168])
	*($5 + [124]) = $21
	CALL $298(($5 + [72]), ($5 + [8]))
	$7 = *($5 + [64])
	if ( ($7 <= [513]) ){ goto $label$13 }
	$3 = CALL $4($7)
	goto $label$12 
	
.LABEL $label$13
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$12
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $7)
	*($5 + [64]) = ($5 + [8])
	*($5 + [76]) = $10
	*($5 + [80]) = $11
	*($5 + [84]) = $12
	*($5 + [88]) = $13
	*($5 + [92]) = $14
	*($5 + [96]) = $15
	*($5 + [100]) = $16
	*($5 + [104]) = $17
	*($5 + [108]) = $18
	*($5 + [112]) = $6
	*($5 + [116]) = $19
	*($5 + [120]) = $20
	*($5 + [124]) = $21
	*($5 + [72]) = $1
	CALL $299(($5 + [72]), ($5 + [64]))
	CALL db_update_i64(*($1 + [180]), $2, $3, $7)
	if ( ($7 <= [513]) ){ goto $label$14 }
	CALL $5($3)
	
.LABEL $label$14
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$3 = ($5 + [32])
	*($5 + [72]) = *($6)
	if ( (CALL $3(($5 + [24]), ($5 + [72]), [8]) == 0) ){ goto $label$16 }
	$6 = ($1 + [184])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$17 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5915276602093076480, ($5 + [64]), $9)
	*($6) = $7
	
.LABEL $label$17
	CALL db_idx64_update($7, $2, ($5 + [72]))
	
.LABEL $label$16
	$7 = ($5 + [40])
	*($5 + [72]) = ((int_64)((int_64)*(($1 + [64])) + (int_64)*(($1 + [48]))) + (int_64)*(($1 + [80])))
	if ( (CALL $3($3, ($5 + [72]), [8]) == 0) ){ goto $label$18 }
	$6 = ($1 + [188])
	$3 = *($6)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$19 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5915276602093076479, ($5 + [64]), $9)
	*($6) = $3
	
.LABEL $label$19
	CALL db_idx64_update($3, $2, ($5 + [72]))
	
.LABEL $label$18
	$3 = ($5 + [48])
	$6 = ($1 + [160])
	*($5 + [72]) = ((int_64)((int_64)*($6) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3($7, ($5 + [72]), [8]) == 0) ){ goto $label$20 }
	$4 = ($1 + [192])
	$7 = *($4)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$21 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5915276602093076478, ($5 + [64]), $9)
	*($4) = $7
	
.LABEL $label$21
	CALL db_idx64_update($7, $2, ($5 + [72]))
	
.LABEL $label$20
	$7 = ($5 + [56])
	*($5 + [72]) = ((int_64)((int_64)*($6) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3($3, ($5 + [72]), [8]) == 0) ){ goto $label$22 }
	$6 = ($1 + [196])
	$3 = *($6)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$23 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5915276602093076477, ($5 + [64]), $9)
	*($6) = $3
	
.LABEL $label$23
	CALL db_idx64_update($3, $2, ($5 + [72]))
	
.LABEL $label$22
	*($5 + [72]) = *(($1 + [96]))
	if ( (CALL $3($7, ($5 + [72]), [8]) == 0) ){ goto $label$24 }
	$3 = ($1 + [200])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$25 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5915276602093076476, ($5 + [64]), $9)
	*($3) = $1
	
.LABEL $label$25
	CALL db_idx64_update($1, $2, ($5 + [72]))
	
.LABEL $label$24
	$global$0 = ($5 + [128])
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [80])
	$global$0 = $2
	*(($2 + [64])) = (int_64)0
	*(($2 + [74])) = [0]
	*(($2 + [72])) = [0]
	*($2 + [48]) = (int_64)-1
	*($2 + [56]) = (int_64)0
	$3 = *($0)
	*($2 + [32]) = $3
	*($2 + [40]) = $3
	$4 = [0]
	$5 = CALL db_find_i64($3, $3, (int_64)4982429584927490048, *($1))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $68(($2 + [32]), $5)
	if ( ((int_32)*($4 + [68]) == (int_32)($2 + [32])) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$1
	CALL $37($2, *($1))
	$1 = CALL $34($2, [0], [11528])
	$5 = ($1 + [8])
	*((($2 + [16]) + [8])) = *($5)
	*($2 + [16]) = *($1)
	*($1) = (int_64)0
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$6 }
	$1 = [1]
	if ( (*($2 + [16]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], ( *($2 + [24]) ? (($2 + [16]) | [1]) : (*($2 + [16]) & [1]) ))
	$1 = [1]
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $12(*($2 + [24]))
	if ( (*($2) & $1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((*($2) & $1) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $12(*($2 + [8]))
	
.LABEL $label$2
	*($2 + [16]) = (int_64)0
	CALL $65($0, ($4 + [32]), ($2 + [16]), [11296])
	$3 = *($0)
	if ( $4 ){ goto $label$7 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$7
	CALL $69(($2 + [32]), $4, $3, ($2 + [16]))
	$1 = *($2 + [56])
	if ( ($1 == 0) ){ goto $label$8 }
	$5 = ($2 + [60])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	if ( ((*($0 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL $12(*(($0 + [56])))
	
.LABEL $label$13
	CALL $12($0)
	
.LABEL $label$12
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$11 }
	$4 = *(($2 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $1
	
.LABEL $label$9
	*($5) = $1
	CALL $12($4)
	
.LABEL $label$8
	$global$0 = ($2 + [80])
}

void .FUNC $169 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [112])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	CALL $65($0, $2, ($3 + [24]), [11296])
	$4 = ($0 + [8])
	$5 = *($1)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$3 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($8 + [108]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [16])), (int_64)-5915097263692054528, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $170($4, $1)
	if ( ((int_32)*($8 + [108]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert([0], [13647])
	
.LABEL $label$1
	$7 = *($8 + [80])
	$6 = *($8 + [64])
	CALL $36(($3 + [80]), $6)
	$1 = CALL $34(($3 + [80]), [0], [13666])
	$9 = ($1 + [8])
	*((($3 + [96]) + [8])) = *($9)
	*($3 + [96]) = *($1)
	*($1) = (int_64)0
	*($9) = [0]
	$1 = CALL $31(($3 + [96]), [13725])
	$9 = ($1 + [8])
	*(($3 + [8])) = *($9)
	*($3) = *($1)
	*($1) = (int_64)0
	*($9) = [0]
	CALL $36(($3 + [64]), *($8 + [80]))
	$1 = *($3 + [64])
	$9 = ($1 & [1])
	$1 = CALL $32($3, ( *($3 + [72]) ? (($3 + [64]) | [1]) : $9 ), ( *($3 + [68]) ? uint_32($1 >> [1]) : $9 ))
	$9 = ($1 + [8])
	*((($3 + [24]) + [8])) = *($9)
	*($3 + [24]) = *($1)
	*($1) = (int_64)0
	*($9) = [0]
	if ( ((uint_32)($7 << [2]) > (uint_32)$6) ){ goto $label$16 }
	if ( (*($3 + [24]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL eosio_assert([0], ( *($3 + [32]) ? (($3 + [24]) | [1]) : (*($3 + [24]) & [1]) ))
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $12(*($3 + [32]))
	$1 = [1]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$1 = [1]
	if ( (*($3 + [64]) & [1]) ){ goto $label$12 }
	
.LABEL $label$13
	if ( (*($3) & $1) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $12(*(($3 + [72])))
	if ( ((*($3) & $1) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $12(*($3 + [8]))
	$1 = [1]
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$1 = [1]
	if ( (*($3 + [96]) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((*($3 + [80]) & $1) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	CALL $12(*($3 + [104]))
	if ( ((*($3 + [80]) & $1) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $12(*($3 + [88]))
	
.LABEL $label$6
	*($3 + [104]) = [0]
	$10 = (int_64)0
	*($3 + [96]) = (int_64)0
	$1 = (*(($8 + [56])) - *($8 + [52]))
	if ( ($1 == 0) ){ goto $label$28 }
	$7 = int_32($1 >> [3])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$26 }
	$1 = CALL $10($1)
	*(($3 + [104])) = ($1 + ($7 << [3]))
	*($3 + [96]) = $1
	*($3 + [100]) = $1
	$6 = *(($8 + [52]))
	$7 = (*(($8 + [56])) - $6)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$28 }
	CALL memcpy($1, $6, $7)
	$6 = (*($3 + [100]) + $7)
	*($3 + [100]) = $6
	$1 = *($3 + [96])
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$28 }
	$7 = ($0 + [104])
	$10 = (int_64)0
	
.LOOP $label$29:
	$10 = ((int_64)$10 + (int_64)(CASTING uint_64)(uint_32 (int_64)(*(CALL $171($7, *($1), [10129]) + [136]) == 0)))
	$1 = ($1 + [8])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	$7 = ($0 + [104])
	
.LABEL $label$27
	$5 = (int_64)0
	*($3) = (int_64)0
	*($3 + [80]) = $7
	CALL $172(($3 + [24]), ($3 + [80]), $3)
	$1 = *($3 + [28])
	if ( $1 ){ goto $label$32 }
	CALL eosio_assert([0], [11188])
	$1 = *($3 + [28])
	if ( ($1 == 0) ){ goto $label$31 }
	
.LABEL $label$32
	
.LOOP $label$33:
	if ( ((int_64)*($1 + [136]) != (int_64)*($3)) ){ goto $label$30 }
	$5 = ((int_64)$5 + (int_64)1)
	CALL $173(($3 + [24]))
	$1 = *($3 + [28])
	if ( $1 ){ goto $label$33 }
	goto $label$30 
	
.LABEL $label$31
	$5 = (int_64)0
	
.LABEL $label$30
	CALL $37(($3 + [24]), $5)
	CALL prints([13743])
	$1 = *($3 + [24])
	$7 = ($1 & [1])
	CALL prints_l(( *($3 + [32]) ? (($3 + [24]) | [1]) : $7 ), ( *($3 + [28]) ? uint_32($1 >> [1]) : $7 ))
	CALL prints([11025])
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$34 }
	CALL $12(*(($3 + [32])))
	
.LABEL $label$34
	CALL $37(($3 + [64]), $10)
	$1 = CALL $34(($3 + [64]), [0], [13762])
	$7 = ($1 + [8])
	*((($3 + [80]) + [8])) = *($7)
	*($3 + [80]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	$1 = CALL $31(($3 + [80]), [13841])
	$7 = ($1 + [8])
	*(($3 + [8])) = *($7)
	*($3) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	CALL $37(($3 + [48]), $5)
	$1 = *($3 + [48])
	$7 = ($1 & [1])
	$1 = CALL $32($3, ( *($3 + [56]) ? (($3 + [48]) | [1]) : $7 ), ( *($3 + [52]) ? uint_32($1 >> [1]) : $7 ))
	$7 = ($1 + [8])
	*((($3 + [24]) + [8])) = *($7)
	*($3 + [24]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	if ( (((float_64)(PROMOTE float_64)(float_32 ((float_32)(CASTING float_32)(uint_64 $10) / (float_32)(CASTING float_32)(uint_64 $5))) >= (float_64)(float_64)0.6) == 0) ){ goto $label$36 }
	$1 = [1]
	if ( (*($3 + [24]) & [1]) ){ goto $label$35 }
	goto $label$25 
	
.LABEL $label$36
	CALL eosio_assert([0], ( *($3 + [32]) ? (($3 + [24]) | [1]) : (*($3 + [24]) & [1]) ))
	$1 = [1]
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$25 }
	
.LABEL $label$35
	CALL $12(*($3 + [32]))
	if ( ((*($3 + [48]) & $1) == 0) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	CALL $38(($3 + [96]))
	
.LABEL $label$25
	if ( (*($3 + [48]) & $1) ){ goto $label$23 }
	
.LABEL $label$24
	$1 = [1]
	if ( (*($3) & [1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $12(*(($3 + [56])))
	$1 = [1]
	if ( ((*($3) & [1]) == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL $12(*($3 + [8]))
	if ( ((*($3 + [80]) & $1) == 0) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	if ( (*($3 + [80]) & $1) ){ goto $label$19 }
	
.LABEL $label$20
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$19
	CALL $12(*($3 + [88]))
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $12(*($3 + [72]))
	
.LABEL $label$17
	$5 = CALL $39()
	*($3 + [36]) = [0]
	*($3 + [40]) = [0]
	*($3 + [44]) = [0]
	*($3 + [24]) = ((CASTING uint_32)(uint_64 ((int_64)$5 / (int_64)1000000)) + [60])
	$1 = *($8 + [84])
	*($3 + [80]) = $1
	*($3 + [84]) = $1
	$1 = ($8 + [88])
	*($3 + [88]) = *($1)
	CALL $166(($3 + [80]), ($3 + [24]))
	$5 = CALL $39()
	if ( ((uint_32)*($3 + [24]) >= (uint_32)(CASTING uint_32)(uint_64 ((int_64)$5 / (int_64)1000000))) ){ goto $label$37 }
	CALL eosio_assert([0], [9489])
	
.LABEL $label$37
	CALL prints([13862])
	$7 = *($8 + [8])
	$6 = ($7 & [1])
	CALL prints_l(( *(($8 + [16])) ? ($8 + [9]) : $6 ), ( *(($8 + [12])) ? uint_32($7 >> [1]) : $6 ))
	CALL prints([11025])
	$7 = CALL $40()
	*($3 + [8]) = (int_64)0
	*($3) = ((int_64)((int_64)((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)*($8))
	$7 = *(($8 + [84]))
	CALL send_deferred($3, *($2), $7, (*($1) - $7), [0])
	CALL $174($4, $8)
	$1 = *($3 + [96])
	if ( ($1 == 0) ){ goto $label$38 }
	*($3 + [100]) = $1
	CALL $12($1)
	
.LABEL $label$38
	$global$0 = ($3 + [112])
	(unreachable)
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [11862])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $51($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $10([104])) + [24]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [48 align=4]) = (int_64)0
	*($3 + [56]) = [0]
	*($3 + [60]) = ((int_64)CALL $39() / (int_64)1000000)
	$2 = CALL $39()
	*($3 + [68]) = $1
	*($3 + [64]) = ((int_64)$2 / (int_64)1000000)
	CALL $309(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [72])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $310(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$5 }
	CALL $12(*(($3 + [56])))
	
.LABEL $label$5
	CALL $12($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $56($0, $1)
	CALL $56($0, $2)
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	$10 = (int_64)0
	$5 = *($1)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $57($4, $8)
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$6
	$10 = (int_64)0
	$5 = *($1)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$11:
	*((($3 + [16]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$10 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)$10) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$3 }
	*($3) = ($7 << [1])
	$6 = ($3 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($3 + [8])) = [0]
	*($3) = $10
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$1 
	
.LABEL $label$3
	$1 = (($7 + [16]) & [-16])
	$6 = CALL $10($1)
	*($3) = ($1 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $7
	
.LABEL $label$2
	$1 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$12:
	*(($6 + $8)) = *((($3 + [16]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$12 }
	$8 = ($6 + $7)
	
.LABEL $label$1
	*($8) = [0]
	$8 = CALL $34($3, [0], [10606])
	$7 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($7)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$17 }
	$8 = [1]
	if ( (*($3 + [16]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL eosio_assert([0], ( *($3 + [24]) ? (($3 + [16]) | [1]) : (*($3 + [16]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $12(*($3 + [24]))
	if ( (*($3) & $8) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($3) & $8) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $12(*($3 + [8]))
	
.LABEL $label$13
	$5 = *($2)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$24 }
	
.LOOP $label$26:
	$8 = ($7 + [-24])
	$11 = *($8)
	if ( ((int_64)*($11) == (int_64)$5) ){ goto $label$25 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$24 }
	if ( ((int_32)*($11 + [176]) == (int_32)$4) ){ goto $label$23 }
	CALL eosio_assert([0], [11551])
	$10 = (int_64)0
	$5 = *($2)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$11 = [0]
	$8 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$23 }
	$11 = CALL $57($4, $8)
	if ( ((int_32)*($11 + [176]) == (int_32)$4) ){ goto $label$23 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$23
	$10 = (int_64)0
	$5 = *($2)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$21 }
	
.LABEL $label$22
	$7 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$28:
	*((($3 + [16]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$27 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)$10) ){ goto $label$28 }
	
.LABEL $label$27
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$20 }
	*($3) = ($7 << [1])
	$6 = ($3 | [1])
	goto $label$19 
	
.LABEL $label$21
	*(($3 + [8])) = [0]
	*($3) = $10
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$18 
	
.LABEL $label$20
	$1 = (($7 + [16]) & [-16])
	$6 = CALL $10($1)
	*($3) = ($1 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $7
	
.LABEL $label$19
	$1 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$29:
	*(($6 + $8)) = *((($3 + [16]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$29 }
	$8 = ($6 + $7)
	
.LABEL $label$18
	*($8) = [0]
	$8 = CALL $34($3, [0], [11248])
	$7 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($7)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ($11 == 0) ){ goto $label$36 }
	$8 = [1]
	if ( (*($3 + [16]) & [1]) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL eosio_assert([0], ( *($3 + [24]) ? (($3 + [16]) | [1]) : (*($3 + [16]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL $12(*($3 + [24]))
	if ( ((*($3) & $8) == 0) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	if ( (*($3) & $8) ){ goto $label$32 }
	
.LABEL $label$33
	$5 = *($0)
	*($3 + [16]) = $2
	if ( ($9 == 0) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $12(*($3 + [8]))
	$5 = *($0)
	*($3 + [16]) = $2
	if ( $9 ){ goto $label$30 }
	
.LABEL $label$31
	CALL eosio_assert([0], [10691])
	
.LABEL $label$30
	CALL $62($4, $9, $5, ($3 + [16]))
	$5 = *($0)
	*($3 + [16]) = $2
	if ( $11 ){ goto $label$37 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$37
	CALL $63($4, $11, $5, ($3 + [16]))
	$global$0 = ($3 + [32])
}

void .FUNC $60 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$2 = ($global$0 - [48])
	$global$0 = $2
	*($2 + [32]) = $1
	$3 = ($0 + [48])
	$5 = *(($0 + [76]))
	$4 = *(($0 + [72]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$6 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	if ( ((int_32)*($7 + [176]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	if ( ((int_64)*($7 + [136]) == (int_64)1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [56])), (int_64)-5915276602093076480, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $57($3, $6)
	if ( ((int_32)*($7 + [176]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	if ( ((int_64)*($7 + [136]) != (int_64)1) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10882])
	if ( ((int_64)*([0] + [136]) != (int_64)1) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10915])
	
.LABEL $label$1
	if ( ((int_32)*(($7 + [116])) != (int_32)*($7 + [112])) ){ goto $label$8 }
	CALL eosio_assert([0], [10966])
	
.LABEL $label$8
	CALL prints([11007])
	CALL printn($1)
	CALL prints([11025])
	CALL prints([11027])
	$8 = ($7 + [136])
	CALL printui(*($8))
	CALL prints([11025])
	CALL $293(($2 + [16]), $0, ($2 + [32]))
	*($2 + [12]) = [0]
	$6 = (($2 + [16]) | [4])
	if ( ((int_32)$6 == (int_32)*($2 + [16])) ){ goto $label$9 }
	$9 = ($2 | [1])
	$10 = ($2 + [8])
	
.LOOP $label$10:
	$11 = $6
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$12 }
	
.LOOP $label$13:
	$5 = $4
	$4 = *($5 + [4])
	if ( $4 ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	
.LOOP $label$14:
	$5 = *($11 + [8])
	$4 = ((int_32)*($5) == (int_32)$11)
	$11 = $5
	if ( $4 ){ goto $label$14 }
	
.LABEL $label$11
	*($2 + [40]) = $3
	$4 = ($5 + [16])
	CALL $172($2, ($2 + [40]), $4)
	$5 = *($2 + [4])
	if ( $5 ){ goto $label$19 }
	CALL eosio_assert([0], [11188])
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	$1 = (int_64)0
	
.LOOP $label$21:
	if ( ((int_64)*($5 + [136]) != (int_64)*($4)) ){ goto $label$20 }
	$1 = ((int_64)$1 + (int_64)1)
	CALL $173($2)
	$5 = *($2 + [4])
	if ( $5 ){ goto $label$21 }
	
.LABEL $label$20
	$11 = $6
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$1 = (int_64)0
	$11 = $6
	$4 = *($6)
	if ( $4 ){ goto $label$16 }
	
.LABEL $label$17
	
.LOOP $label$22:
	$5 = *($11 + [8])
	$4 = ((int_32)*($5) == (int_32)$11)
	$11 = $5
	if ( $4 ){ goto $label$22 }
	goto $label$15 
	
.LABEL $label$16
	
.LOOP $label$23:
	$5 = $4
	$4 = *($5 + [4])
	if ( $4 ){ goto $label$23 }
	
.LABEL $label$15
	CALL prints([11043])
	CALL printui(*($5 + [16]))
	CALL prints([11066])
	$12 = (int_64)((int_64)$1 << (int_64)32) >> (int_64)32
	CALL printi($12))
	CALL prints([11025])
	$11 = $6
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$25 }
	
.LOOP $label$26:
	$5 = $4
	$4 = *($5 + [4])
	if ( $4 ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	
.LOOP $label$27:
	$5 = *($11 + [8])
	$4 = ((int_32)*($5) == (int_32)$11)
	$11 = $5
	if ( $4 ){ goto $label$27 }
	
.LABEL $label$24
	$13 = CALL $294($0, ($2 + [32]), ($5 + [16]))
	$11 = $6
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$29 }
	
.LOOP $label$30:
	$5 = $4
	$4 = *($5 + [4])
	if ( $4 ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	
.LOOP $label$31:
	$5 = *($11 + [8])
	$4 = ((int_32)*($5) == (int_32)$11)
	$11 = $5
	if ( $4 ){ goto $label$31 }
	
.LABEL $label$28
	CALL prints([11074])
	CALL printui(*($5 + [16]))
	CALL prints([11066])
	$14 = (int_64)((int_64)$13 << (int_64)32) >> (int_64)32
	CALL printi($14))
	CALL prints([11025])
	$5 = *($2 + [12])
	if ( ($5 == 0) ){ goto $label$33 }
	$1 = (CASTING int_64)(int_32 $5)
	$11 = $6
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$35 }
	
.LOOP $label$36:
	$5 = $4
	$4 = *($5 + [4])
	if ( $4 ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	
.LOOP $label$37:
	$5 = *($11 + [8])
	$4 = ((int_32)*($5) == (int_32)$11)
	$11 = $5
	if ( $4 ){ goto $label$37 }
	
.LABEL $label$34
	$13 = ((int_64))($12 - $14) + (int_64)*($5 + [16])
	$5 = (CASTING uint_32)(uint_64 ( $13) ? $1 : (uint_64)($13 <= $1) ))
	goto $label$32 
	
.LABEL $label$33
	$15 = (CASTING uint_32)(uint_64 $1)
	$16 = (CASTING uint_32)(uint_64 $13)
	$11 = $6
	$4 = *($6)
	if ( ($4 == 0) ){ goto $label$39 }
	
.LOOP $label$40:
	$5 = $4
	$4 = *($5 + [4])
	if ( $4 ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	
.LOOP $label$41:
	$5 = *($11 + [8])
	$4 = ((int_32)*($5) == (int_32)$11)
	$11 = $5
	if ( $4 ){ goto $label$41 }
	
.LABEL $label$38
	$5 = (($15 - $16) + *($5 + [16]))
	
.LABEL $label$32
	*($2 + [12]) = $5
	CALL $35($2, $5)
	CALL prints([11094])
	$5 = *($2)
	$4 = ($5 & [1])
	CALL prints_l(( *($10) ? $9 : $4 ), ( *($2 + [4]) ? uint_32($5 >> [1]) : $4 ))
	CALL prints([11025])
	if ( ((*($2) & [1]) == 0) ){ goto $label$42 }
	CALL $12(*($10))
	
.LABEL $label$42
	$5 = *($6)
	if ( ($5 == 0) ){ goto $label$43 }
	
.LOOP $label$44:
	$6 = $5
	$5 = *($6 + [4])
	if ( $5 ){ goto $label$44 }
	if ( ((int_32)$6 != (int_32)*($2 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$43
	
.LOOP $label$45:
	$5 = *($6 + [8])
	$4 = ((int_32)*($5) == (int_32)$6)
	$6 = $5
	if ( $4 ){ goto $label$45 }
	$6 = $5
	if ( ((int_32)$6 != (int_32)*($2 + [16])) ){ goto $label$10 }
	
.LABEL $label$9
	$1 = *($2 + [12])
	if ( ((uint_64)((int_64)*($8) + (int_64)-1) >= (uint_64)$1) ){ goto $label$47 }
	CALL eosio_assert([0], [11143])
	goto $label$46 
	
.LABEL $label$47
	CALL prints([11119])
	CALL printi($1)
	CALL prints([9777])
	$1 = *($0)
	*($2) = ($2 + [12])
	if ( $7 ){ goto $label$48 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$48
	CALL $295($3, $7, $1, $2)
	
.LABEL $label$46
	CALL $296(($2 + [16]), *($2 + [20]))
	$global$0 = ($2 + [48])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$2 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $2
	*($5 + [56]) = $2
	*($5 + [24]) = *($1)
	$6 = *($3)
	$7 = *(($1 + [116]))
	$3 = *($1 + [112])
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$4 }
	$2 = *($6)
	
.LOOP $label$5:
	if ( ((int_64)*($3) == (int_64)$2) ){ goto $label$4 }
	$3 = ($3 + [8])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$3 }
	$8 = ($3 + [8])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = *($8)
	if ( ((int_64)$2 == (int_64)*($6)) ){ goto $label$8 }
	*($3) = $2
	$3 = ($3 + [8])
	
.LABEL $label$8
	$8 = ($8 + [8])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$3 }
	*(($1 + [116])) = $3
	
.LABEL $label$3
	$7 = ($1 + [136])
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	if ( ((int_64)*($5 + [24]) == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$9
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $7
	*($5 + [88]) = $1
	$6 = ($1 + [8])
	*($5 + [92]) = $6
	$9 = ($1 + [20])
	*($5 + [96]) = $9
	$10 = ($1 + [32])
	*($5 + [100]) = $10
	$11 = ($1 + [48])
	*($5 + [104]) = $11
	$12 = ($1 + [64])
	*($5 + [108]) = $12
	$13 = ($1 + [80])
	*($5 + [112]) = $13
	$14 = ($1 + [96])
	*($5 + [116]) = $14
	$15 = ($1 + [112])
	*($5 + [120]) = $15
	$16 = ($1 + [124])
	*($5 + [124]) = $16
	$17 = ($1 + [144])
	*($5 + [132]) = $17
	$18 = ($1 + [160])
	*($5 + [136]) = $18
	$19 = ($1 + [168])
	*($5 + [140]) = $19
	CALL $298(($5 + [88]), ($5 + [8]))
	$8 = *($5 + [80])
	if ( ($8 <= [513]) ){ goto $label$11 }
	$3 = CALL $4($8)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$10
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $6
	*($5 + [96]) = $9
	*($5 + [100]) = $10
	*($5 + [104]) = $11
	*($5 + [108]) = $12
	*($5 + [112]) = $13
	*($5 + [116]) = $14
	*($5 + [120]) = $15
	*($5 + [124]) = $16
	*($5 + [128]) = $7
	*($5 + [132]) = $17
	*($5 + [136]) = $18
	*($5 + [140]) = $19
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), *($5 + [72]), $3, $8)
	if ( ($8 <= [513]) ){ goto $label$12 }
	CALL $5($3)
	
.LABEL $label$12
	$3 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $308(($5 + [80]), $3, ($3 + [1]), ($3 + [2]), ($3 + [3]), ($3 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $416 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = *($1)
	CALL $419($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	$3 = *($1 + [16])
	$7 = ( *(($1 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [62])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [16])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	$9 = *($1 + [28])
	$9 = ( *(($1 + [32])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$3 = ($9 + $3)
	$8 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [28])
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $4($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $7
	*($5 + [48]) = $9
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [12])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [56])
	*($5 + [60]) = ($1 + [72])
	CALL $407(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [92]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $5($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [64])
}

void .FUNC $241 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1392])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1360]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1360]), $2, [8])
	*($3 + [1352]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $5, [8])
	*($3 + [1344]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	CALL memcpy(($3 + [1344]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	$0 = *($3 + [1344])
	$1 = *($3 + [1360])
	*($3 + [1376]) = *($3 + [1352])
	*($3 + [1384]) = $1
	*($3 + [1368]) = $0
	CALL $128(($3 + [312]), ($3 + [1384]), ($3 + [1376]), ($3 + [1368]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1392])
}

void .FUNC $398 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [32])
	$8 = CALL db_idx64_store($11, (int_64)-5915097263692054528, $10, $9, ($6 + [8]))
	*(*($7 + [4]) + [116]) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [24])
	$8 = CALL db_idx64_store($11, (int_64)-5915097263692054527, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [120])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [100])
	$8 = CALL db_idx64_store($11, (int_64)-5915097263692054526, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [124])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [104])
	$8 = CALL db_idx64_store($11, (int_64)-5915097263692054525, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [128])) = $8
	$0 = *($0)
	$7 = *($0 + [12])
	$9 = *($7)
	$10 = *(*($0 + [8]))
	$11 = *(*($0) + [8])
	*($6 + [8]) = *($7 + [96])
	$7 = CALL db_idx64_store($11, (int_64)-5915097263692054524, $10, $9, ($6 + [8]))
	*((*($0 + [4]) + [132])) = $7
	$global$0 = ($6 + [16])
}

void .FUNC $399 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [32])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [116])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915097263692054528, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [116]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [24])
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [120]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915097263692054527, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [120])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [100])
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [124]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915097263692054526, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [124])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [104])
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [128]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915097263692054525, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [128])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [132]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915097263692054524, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [132])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $390 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 <= (uint_32)($4 - $5)) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $12($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$2 = [2147483647]
	if ( ((uint_32)$4 > (uint_32)[1073741822]) ){ goto $label$6 }
	$5 = ($4 << [1])
	$2 = ( $3 ? $5 : ($5 <= $3) )
	
.LABEL $label$6
	$5 = CALL $10($2)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $2)
	CALL memcpy($5, $1, $3)
	$1 = ($0 + [4])
	$0 = (*($0 + [4]) + $3)
	goto $label$3 
	
.LABEL $label$4
	$4 = (*($0 + [4]) - $5)
	$6 = ( ($1 + $4) ? $2 : ((uint_32)$3 > (uint_32)$4) )
	$7 = ($6 - $1)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $7)
	
.LABEL $label$7
	$1 = ($0 + [4])
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$8 }
	$0 = ($2 - $6)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy(*($1), $6, $0)
	$0 = (*($1) + $0)
	goto $label$3 
	
.LABEL $label$8
	$0 = ($5 + $7)
	
.LABEL $label$3
	*($1) = $0
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $38($0)
}

void .FUNC $391 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $165(*($1), *($0 + [4]))
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $165(*($1), *($0 + [16]))
	CALL $392(*($1), *($0 + [20]))
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $392(*($1), *($0 + [28]))
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $168(*($1), *($0 + [36]))
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [44])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [48])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

int_32 .FUNC $392 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [11862])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $393($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $393 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $10(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $38($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $12($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $394 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = *($1 + [84])
	if ( ($4 == 0) ){ goto $label$4 }
	*(($1 + [88])) = $4
	CALL $12($4)
	
.LABEL $label$4
	$4 = *($1 + [68])
	if ( ($4 == 0) ){ goto $label$5 }
	*(($1 + [72])) = $4
	CALL $12($4)
	
.LABEL $label$5
	$4 = *($1 + [52])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($1 + [56])) = $4
	CALL $12($4)
	
.LABEL $label$6
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($1 + [48])))
	
.LABEL $label$7
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*(($1 + [16])))
	
.LABEL $label$8
	CALL $12($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $12($1)
	
.LABEL $label$9
	return $0
}

void .FUNC $395 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *($8 + [116])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915097263692054528, ($6 + [8]), *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($9)
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [120]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915097263692054527, ($6 + [8]), *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($9)
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [124]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915097263692054526, ($6 + [8]), *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($9)
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [128]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915097263692054525, ($6 + [8]), *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($9)
	
.LABEL $label$7
	$9 = *($0)
	$7 = *($9 + [4])
	$0 = *(($7 + [132]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$10 }
	$0 = *($9)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5915097263692054524, ($6 + [8]), *($7))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($0)
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $396 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0)
	CALL $397(*($0 + [4]), $1)
	*(($4 = $2) + [16]) = [0]
	*($4) = ($4 + [16])
	$5 = ($1 + [8])
	*($4 + [28]) = $5
	*($4 + [24]) = $1
	$6 = ($1 + [24])
	*($4 + [32]) = $6
	$7 = ($1 + [32])
	*($4 + [36]) = $7
	$8 = ($1 + [40])
	*($4 + [40]) = $8
	$9 = ($1 + [52])
	*($4 + [44]) = $9
	$10 = ($1 + [64])
	*($4 + [48]) = $10
	$11 = ($1 + [68])
	*($4 + [52]) = $11
	$12 = ($1 + [80])
	*($4 + [56]) = $12
	$13 = ($1 + [84])
	*($4 + [60]) = $13
	$14 = ($1 + [96])
	*($4 + [64]) = $14
	$15 = ($1 + [100])
	*($4 + [68]) = $15
	$16 = ($1 + [104])
	*($4 + [72]) = $16
	CALL $386(($4 + [24]), $4)
	$17 = *($4 + [16])
	if ( ($17 <= [513]) ){ goto $label$2 }
	$2 = CALL $4($17)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($17 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($2 + $17)
	*($4 + [16]) = $4
	*($4 + [28]) = $5
	*($4 + [24]) = $1
	*($4 + [32]) = $6
	*($4 + [36]) = $7
	*($4 + [40]) = $8
	*($4 + [44]) = $9
	*($4 + [48]) = $10
	*($4 + [52]) = $11
	*($4 + [56]) = $12
	*($4 + [60]) = $13
	*($4 + [64]) = $14
	*($4 + [68]) = $15
	*($4 + [72]) = $16
	CALL $387(($4 + [24]), ($4 + [16]))
	$18 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($3 + [8]), (int_64)-5915097263692054528, *(*($0 + [8])), $18, $2, $17)
	if ( ($17 <= [513]) ){ goto $label$3 }
	CALL $5($2)
	
.LABEL $label$3
	if ( (uint_64)($18 <= *($3 + [16])) ){ goto $label$4 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($4 + [28]) = $1
	*($4 + [36]) = $1
	*($4 + [32]) = *(($0 + [8]))
	*($4 + [24]) = $3
	*($4 + [16]) = ($4 + [24])
	CALL $398(($4 + [16]), ($3 + [36]), ($3 + [37]), ($3 + [38]), ($3 + [39]), ($3 + [40]))
	$global$0 = ($4 + [80])
}

void .FUNC $397 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *(($3 + [24]))
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = ($3 + [8])
	$6 = CALL db_lowerbound_i64(*($5), *(($3 + [16])), (int_64)-5915097263692054528, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $170($5, $6)
	*($2 + [12]) = [0]
	*($2 + [8]) = $5
	$4 = *(*(CALL $389(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [24])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11351])
	$4 = *(($3 + [24]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [24])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	*($1 + [24]) = *(*($0 + [4]))
	CALL $25(($1 + [8]), *($0 + [8]))
	CALL $25(($1 + [40]), *($0 + [12]))
	*($1 + [64]) = [1]
	$3 = *($0 + [4])
	$5 = ($1 + [56])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)*(($1 + [60]))) ){ goto $label$6 }
	*($5) = ($0 + [8])
	*($0) = *($3)
	goto $label$5 
	
.LABEL $label$6
	CALL $297(($1 + [52]), $3)
	
.LABEL $label$5
	*($1 + [80]) = [0]
	$global$0 = ($2 + [16])
}

void .FUNC $365 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $301(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($1, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $10([48])) + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [28]) = $1
	CALL $343(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [32])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $344(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $12($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $367 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[12])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL $10(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$5 * (int_32)[12]))
	$1 = CALL $24(($2 + ((int_32)$3 * (int_32)[12])), $1)
	$6 = ($1 + [12])
	$2 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = ($5 + [-4])
	*(($1 + [-4])) = *($3)
	$5 = ($5 + [-12])
	*(($1 = ($1 + [-12]))) = *($5)
	*($5) = (int_64)0
	*($3) = [0]
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($2 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $12(*(($2 + [-4])))
	
.LABEL $label$10
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $12($3)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $366 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [64]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11480])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4148594918074220544)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $137(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $69 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [88]) = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [8])
	*($5 + [40]) = *($1 + [32])
	*($5 + [48]) = *($1 + [40])
	*($5 + [56]) = *($1 + [16])
	*($5 + [64]) = *($1 + [24])
	*($5 + [72]) = *($1 + [60])
	*($5 + [80]) = *($1 + [64])
	$6 = *($1)
	*($5 + [24]) = $6
	$7 = ($1 + [48])
	CALL $28($7, [11602])
	*($1 + [64]) = ((int_64)CALL $39() / (int_64)1000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	$8 = ($1 + [16])
	$9 = ($1 + [40])
	$10 = ($0 + [36])
	$11 = *($7)
	$12 = ( *(($1 + [52])) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$11 = ($12 + [56])
	$13 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$4:
	$11 = ($11 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$4 }
	if ( ($11 <= [513]) ){ goto $label$6 }
	$4 = CALL $4($11)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($11 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $11)
	*($5 + [96]) = ($5 + [8])
	*($5 + [112]) = $8
	*($5 + [124]) = $9
	*($5 + [128]) = $7
	*($5 + [104]) = $1
	*($5 + [108]) = ($1 + [8])
	*($5 + [116]) = ($1 + [24])
	*($5 + [120]) = ($1 + [32])
	*($5 + [132]) = ($1 + [60])
	*($5 + [136]) = ($1 + [64])
	CALL $312(($5 + [104]), ($5 + [96]))
	CALL db_update_i64(*($1 + [72]), $2, $4, $11)
	if ( ($11 <= [513]) ){ goto $label$7 }
	CALL $5($4)
	$6 = *($5 + [24])
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [108]) = $1
	*($5 + [104]) = $0
	*($5 + [116]) = $1
	*($5 + [112]) = ($5 + [32])
	*($5 + [120]) = ($5 + [24])
	*($5 + [124]) = ($5 + [88])
	*($5 + [96]) = ($5 + [104])
	CALL $316(($5 + [96]), $10, ($10 + [1]), ($10 + [2]), ($10 + [3]), ($10 + [4]), ($10 + [5]), ($10 + [6]))
	$global$0 = ($5 + [144])
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $10([104])) + [24]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [60]) = ((int_64)CALL $39() / (int_64)1000000)
	$7 = CALL $39()
	*($5 + [68]) = $0
	*($5 + [64]) = ((int_64)$7 / (int_64)1000000)
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	*($3 + [60]) = ($5 + [40])
	*($3 + [64]) = ($5 + [48])
	*($3 + [68]) = ($5 + [60])
	*($3 + [72]) = ($5 + [64])
	CALL $315(($3 + [40]), ($3 + [32]))
	*($5 + [72]) = $1
	*($5 + [76 align=4]) = (int_64)-1
	*($5 + [84 align=4]) = (int_64)-1
	*($5 + [92 align=4]) = (int_64)-1
	*($5 + [100]) = [-1]
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $310(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($1 + [56])))
	
.LABEL $label$11
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $248 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $4($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL $209(($3 + [8]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1344])
}

void .FUNC $249 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1488])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1444]) = $2
	*($3 + [1440]) = $2
	$5 = ($2 + $4)
	*($3 + [1448]) = $5
	*($3 + [1432]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1448]))
	$2 = *($3 + [1444])
	
.LABEL $label$5
	CALL memcpy(($3 + [1432]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1444]) = $2
	*($3 + [1424]) = (int_64)0
	*($3 + [1416]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *((($3 + [1440]) + [8]))
	$2 = *($3 + [1444])
	
.LABEL $label$6
	CALL memcpy(($3 + [1416]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1444]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1444])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [1416]) + [8]))) = *($3 + [64])
	*($3 + [1444]) = ($2 + [8])
	*($3 + [1408]) = [0]
	*($3 + [1400]) = (int_64)0
	CALL $165(($3 + [1440]), ($3 + [1400]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [1440]) + [8]))
	*($3 + [48]) = *($3 + [1440])
	*(($5 = (($3 + [1456]) + [8]))) = *($2)
	*($3 + [1456]) = *($3 + [48])
	$2 = *($5)
	*((($3 + [1472]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [1456])
	*($3 + [80]) = $1
	*($3 + [1472]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*($3 + [96]) = $0
	*(($3 + [232])) = $0
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [318])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*($3 + [272]) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [336])) = $0
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*($3 + [368]) = $0
	*($3 + [416]) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [480])) = $0
	*(($3 + [496])) = (int_64)0
	*(($3 + [504])) = [0]
	*(($3 + [510])) = [0]
	*(($3 + [508])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = (int_64)-1
	*(($3 + [544])) = [0]
	*(($3 + [548])) = [0]
	*(($3 + [552])) = [0]
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*($3 + [608]) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = (int_64)-1
	*(($3 + [696])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [712])) = $0
	*(($3 + [720])) = $0
	*(($3 + [728])) = (int_64)-1
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [760])) = $0
	*(($3 + [768])) = $0
	*(($3 + [776])) = (int_64)-1
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*($3 + [840]) = $0
	*(($3 + [848])) = [1]
	*(($3 + [856])) = (int_64)8238557860461690880
	*(($3 + [864])) = $0
	*(($3 + [872])) = $0
	*(($3 + [880])) = (int_64)-1
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = (int_64)-1
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = (int_64)-1
	*(($3 + [976])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [992])) = $0
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = (int_64)-1
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = (int_64)-1
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = (int_64)-1
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*($3 + [1120]) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = (int_64)-1
	*(($3 + [1152])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = (int_64)-1
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = (int_64)-1
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = (int_64)-1
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = (int_64)-1
	*(($3 + [1328])) = [0]
	*(($3 + [1332])) = [0]
	*(($3 + [1336])) = [0]
	*(($3 + [1344])) = $0
	*(($3 + [1352])) = $0
	*(($3 + [1360])) = $0
	*(($3 + [1368])) = (int_64)-1
	*(($3 + [1376])) = [0]
	*(($3 + [1380])) = [0]
	*(($3 + [1384])) = [0]
	*($3 + [1392]) = $0
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [1416])
	$0 = *($3 + [1432])
	$2 = CALL $24(($3 + [16]), ($3 + [1400]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $212(($3 + [64]), $0, $3, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$8
	CALL $230(($3 + [64]))
	if ( ((*($3 + [1400]) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($3 + [1408])))
	
.LABEL $label$9
	$global$0 = ($3 + [1488])
}

void .FUNC $246 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $4($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL $132(($3 + [8]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1344])
}

void .FUNC $247 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1336]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	CALL $184($3, ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1344])
}

void .FUNC $244 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1488])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1444]) = $2
	*($3 + [1440]) = $2
	$5 = ($2 + $4)
	*($3 + [1448]) = $5
	*($3 + [1432]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1448]))
	$2 = *($3 + [1444])
	
.LABEL $label$5
	CALL memcpy(($3 + [1432]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1444]) = $2
	*($3 + [1424]) = (int_64)0
	*($3 + [1416]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *((($3 + [1440]) + [8]))
	$2 = *($3 + [1444])
	
.LABEL $label$6
	CALL memcpy(($3 + [1416]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1444]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1444])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [1416]) + [8]))) = *($3 + [64])
	*($3 + [1444]) = ($2 + [8])
	*($3 + [1408]) = [0]
	*($3 + [1400]) = (int_64)0
	CALL $165(($3 + [1440]), ($3 + [1400]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [1440]) + [8]))
	*($3 + [48]) = *($3 + [1440])
	*(($5 = (($3 + [1456]) + [8]))) = *($2)
	*($3 + [1456]) = *($3 + [48])
	$2 = *($5)
	*((($3 + [1472]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [1456])
	*($3 + [80]) = $1
	*($3 + [1472]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*($3 + [96]) = $0
	*(($3 + [232])) = $0
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [318])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*($3 + [272]) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [336])) = $0
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*($3 + [368]) = $0
	*($3 + [416]) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [480])) = $0
	*(($3 + [496])) = (int_64)0
	*(($3 + [504])) = [0]
	*(($3 + [510])) = [0]
	*(($3 + [508])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = (int_64)-1
	*(($3 + [544])) = [0]
	*(($3 + [548])) = [0]
	*(($3 + [552])) = [0]
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*($3 + [608]) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = (int_64)-1
	*(($3 + [696])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [712])) = $0
	*(($3 + [720])) = $0
	*(($3 + [728])) = (int_64)-1
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [760])) = $0
	*(($3 + [768])) = $0
	*(($3 + [776])) = (int_64)-1
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*($3 + [840]) = $0
	*(($3 + [848])) = [1]
	*(($3 + [856])) = (int_64)8238557860461690880
	*(($3 + [864])) = $0
	*(($3 + [872])) = $0
	*(($3 + [880])) = (int_64)-1
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = (int_64)-1
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = (int_64)-1
	*(($3 + [976])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [992])) = $0
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = (int_64)-1
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = (int_64)-1
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = (int_64)-1
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*($3 + [1120]) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = (int_64)-1
	*(($3 + [1152])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = (int_64)-1
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = (int_64)-1
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = (int_64)-1
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = (int_64)-1
	*(($3 + [1328])) = [0]
	*(($3 + [1332])) = [0]
	*(($3 + [1336])) = [0]
	*(($3 + [1344])) = $0
	*(($3 + [1352])) = $0
	*(($3 + [1360])) = $0
	*(($3 + [1368])) = (int_64)-1
	*(($3 + [1376])) = [0]
	*(($3 + [1380])) = [0]
	*(($3 + [1384])) = [0]
	*($3 + [1392]) = $0
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [1416])
	$0 = *($3 + [1432])
	$2 = CALL $24(($3 + [16]), ($3 + [1400]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $224(($3 + [64]), $0, $3, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$8
	CALL $230(($3 + [64]))
	if ( ((*($3 + [1400]) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($3 + [1408])))
	
.LABEL $label$9
	$global$0 = ($3 + [1488])
}

void .FUNC $245 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1360])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1336]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	*($3 + [1352]) = $0
	*($3 + [1344]) = (int_64)0
	CALL $65(($3 + [1352]), ($3 + [1336]), ($3 + [1344]), [8920])
	CALL $56(($3 + [32]), ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1360])
}

void .FUNC $242 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1440])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $4($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1340])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1340])
	if ( ((uint_32)$4 > (uint_32)[3]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11956])
	
.LABEL $label$1
	CALL memcpy($5, $2, [4])
	*(($3 + [20])) = ($2 + [4])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($2 = ($3 + [312]))) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	$4 = *($3 + [1340])
	*((($3 + [1344]) + [40])) = (int_64)0
	*($3 + [1368]) = (int_64)0
	*($3 + [1376]) = (int_64)0
	*($3 + [1344]) = (int_64)0
	*($3 + [1352]) = (int_64)0
	*($3 + [1360]) = (int_64)0
	*($3 + [1372]) = [0]
	*($3 + [1376]) = [0]
	CALL $72(($3 + [1392]), $2, $0, ($3 + [1344]))
	*($3 + [1420]) = $4
	CALL $73($2, ($3 + [1392]), *($3 + [304]))
	CALL $230($3)
	$global$0 = ($3 + [1440])
}

void .FUNC $243 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1440])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1396]) = $2
	*($3 + [1392]) = $2
	*($3 + [1400]) = ($2 + $4)
	*($3 + [1384]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1396])
	
.LABEL $label$5
	CALL memcpy(($3 + [1384]), $2, [8])
	*($3 + [1396]) = ($2 + [8])
	*($3 + [1376]) = [0]
	*($3 + [1368]) = (int_64)0
	CALL $165(($3 + [1392]), ($3 + [1368]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [1392]) + [8]))
	*($3 + [16]) = *($3 + [1392])
	*(($4 = (($3 + [1408]) + [8]))) = *($2)
	*($3 + [1408]) = *($3 + [16])
	$2 = *($4)
	*((($3 + [1424]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$1 = *($3 + [1408])
	*($3 + [48]) = $1
	*($3 + [1424]) = $1
	*(($3 + [72])) = $0
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [64]) = $0
	*(($3 + [200])) = $0
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [286])) = [0]
	*(($3 + [284])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = $0
	*($3 + [240]) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [304])) = $0
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [344])) = $0
	*(($3 + [352])) = $0
	*(($3 + [360])) = (int_64)-1
	*(($3 + [368])) = (int_64)0
	*(($3 + [376])) = [0]
	*(($3 + [392])) = $0
	*(($3 + [400])) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [432])) = $0
	*(($3 + [440])) = $0
	*($3 + [336]) = $0
	*($3 + [384]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [478])) = [0]
	*(($3 + [476])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = (int_64)-1
	*(($3 + [512])) = [0]
	*(($3 + [516])) = [0]
	*(($3 + [520])) = [0]
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = (int_64)-1
	*(($3 + [560])) = [0]
	*(($3 + [564])) = [0]
	*(($3 + [568])) = [0]
	*($3 + [576]) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = (int_64)-1
	*(($3 + [608])) = [0]
	*(($3 + [612])) = [0]
	*(($3 + [616])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [632])) = $0
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = (int_64)-1
	*(($3 + [664])) = [0]
	*(($3 + [668])) = [0]
	*(($3 + [672])) = [0]
	*(($3 + [680])) = $0
	*(($3 + [688])) = $0
	*(($3 + [696])) = (int_64)-1
	*(($3 + [704])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [728])) = $0
	*(($3 + [736])) = $0
	*(($3 + [744])) = (int_64)-1
	*(($3 + [752])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = $0
	*(($3 + [776])) = $0
	*(($3 + [784])) = (int_64)-1
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*($3 + [808]) = $0
	*(($3 + [816])) = [1]
	*(($3 + [824])) = (int_64)8238557860461690880
	*(($3 + [832])) = $0
	*(($3 + [840])) = $0
	*(($3 + [848])) = (int_64)-1
	*(($3 + [856])) = [0]
	*(($3 + [860])) = [0]
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = $0
	*(($3 + [880])) = $0
	*(($3 + [888])) = (int_64)-1
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = (int_64)-1
	*(($3 + [944])) = [0]
	*(($3 + [948])) = [0]
	*(($3 + [952])) = [0]
	*(($3 + [960])) = $0
	*(($3 + [968])) = $0
	*(($3 + [976])) = (int_64)-1
	*(($3 + [984])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = (int_64)-1
	*(($3 + [1032])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = (int_64)-1
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*($3 + [1088]) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = (int_64)-1
	*(($3 + [1120])) = [0]
	*(($3 + [1124])) = [0]
	*(($3 + [1128])) = [0]
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = (int_64)-1
	*(($3 + [1160])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = (int_64)-1
	*(($3 + [1208])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = (int_64)-1
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = (int_64)-1
	*(($3 + [1296])) = [0]
	*(($3 + [1300])) = [0]
	*(($3 + [1304])) = [0]
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = (int_64)-1
	*(($3 + [1344])) = [0]
	*(($3 + [1348])) = [0]
	*(($3 + [1352])) = [0]
	*($3 + [1360]) = $0
	$0 = *($3 + [1384])
	$2 = CALL $24($3, ($3 + [1368]))
	CALL require_auth($0)
	if ( ((*($2) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$6
	CALL $230(($3 + [32]))
	if ( ((*($3 + [1368]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($3 + [1376])))
	
.LABEL $label$7
	$global$0 = ($3 + [1440])
}

void .FUNC $240 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $4($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1348])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1348])
	if ( ((uint_32)$4 > (uint_32)[3]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11956])
	
.LABEL $label$1
	CALL memcpy($5, $2, [4])
	*(($3 + [28])) = ($2 + [4])
	*(($3 + [32])) = $6
	*((($3 + [8]) + [40])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($2 = ($3 + [320]))) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	$4 = *($3 + [1348])
	*($3 + [1408]) = $0
	*($3 + [1360]) = (int_64)0
	*($3 + [1352]) = (int_64)0
	CALL $65(($3 + [1408]), ($3 + [1360]), ($3 + [1352]), [8872])
	$0 = *($3 + [312])
	*((($3 + [1360]) + [40])) = (int_64)0
	*($3 + [1384]) = (int_64)0
	*($3 + [1392]) = (int_64)0
	*($3 + [1360]) = (int_64)0
	*($3 + [1368]) = (int_64)0
	*($3 + [1376]) = (int_64)0
	*($3 + [1388]) = [0]
	*($3 + [1392]) = [0]
	CALL $72(($3 + [1408]), $2, $0, ($3 + [1360]))
	*($3 + [1440]) = $4
	CALL $73($2, ($3 + [1408]), *($3 + [312]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1456])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$2 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $2
	*($5 + [56]) = $2
	*($5 + [24]) = *($1)
	$6 = *($3)
	$7 = *(($1 + [128]))
	$3 = *($1 + [124])
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$4 }
	$2 = *($6)
	
.LOOP $label$5:
	if ( ((int_64)*($3) == (int_64)$2) ){ goto $label$4 }
	$3 = ($3 + [8])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$3 }
	$8 = ($3 + [8])
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = *($8)
	if ( ((int_64)$2 == (int_64)*($6)) ){ goto $label$8 }
	*($3) = $2
	$3 = ($3 + [8])
	
.LABEL $label$8
	$8 = ($8 + [8])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$3 }
	*(($1 + [128])) = $3
	
.LABEL $label$3
	$7 = ($1 + [136])
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	if ( ((int_64)*($5 + [24]) == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$9
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $7
	*($5 + [88]) = $1
	$6 = ($1 + [8])
	*($5 + [92]) = $6
	$9 = ($1 + [20])
	*($5 + [96]) = $9
	$10 = ($1 + [32])
	*($5 + [100]) = $10
	$11 = ($1 + [48])
	*($5 + [104]) = $11
	$12 = ($1 + [64])
	*($5 + [108]) = $12
	$13 = ($1 + [80])
	*($5 + [112]) = $13
	$14 = ($1 + [96])
	*($5 + [116]) = $14
	$15 = ($1 + [112])
	*($5 + [120]) = $15
	$16 = ($1 + [124])
	*($5 + [124]) = $16
	$17 = ($1 + [144])
	*($5 + [132]) = $17
	$18 = ($1 + [160])
	*($5 + [136]) = $18
	$19 = ($1 + [168])
	*($5 + [140]) = $19
	CALL $298(($5 + [88]), ($5 + [8]))
	$8 = *($5 + [80])
	if ( ($8 <= [513]) ){ goto $label$11 }
	$3 = CALL $4($8)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$10
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $6
	*($5 + [96]) = $9
	*($5 + [100]) = $10
	*($5 + [104]) = $11
	*($5 + [108]) = $12
	*($5 + [112]) = $13
	*($5 + [116]) = $14
	*($5 + [120]) = $15
	*($5 + [124]) = $16
	*($5 + [128]) = $7
	*($5 + [132]) = $17
	*($5 + [136]) = $18
	*($5 + [140]) = $19
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), *($5 + [72]), $3, $8)
	if ( ($8 <= [513]) ){ goto $label$12 }
	CALL $5($3)
	
.LABEL $label$12
	$3 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $307(($5 + [80]), $3, ($3 + [1]), ($3 + [2]), ($3 + [3]), ($3 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$3 = ($global$0 - [112])
	$global$0 = $3
	$4 = ($0 + [96])
	*($3 + [88]) = $4
	CALL $85(($3 + [96]), ($3 + [88]), $1)
	$5 = *($3 + [100])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($1) != (int_64)*($5 + [8])) ){ goto $label$2 }
	$6 = *($3 + [96])
	*($3 + [80]) = $6
	$5 = (CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$1 }
	$7 = (($3 + [64]) | [1])
	$8 = ($3 | [1])
	$9 = (($3 + [16]) | [1])
	$10 = (($3 + [16]) + [8])
	
.LOOP $label$3:
	$6 = *($1)
	if ( ((int_64)$6 != (int_64)*($5 + [8])) ){ goto $label$1 }
	$11 = *($2)
	$12 = *($5 + [16])
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$7 }
	$13 = [0]
	$14 = *([0] + [12468])
	
.LOOP $label$9:
	*((($3 + [96]) + ($5 = $13))) = *(($14 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$5 == (int_32)[12]) )))))
	$13 = ($5 + [1])
	if ( ((uint_32)$5 > (uint_32)[11]) ){ goto $label$8 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$9 }
	
.LABEL $label$8
	*($10) = [0]
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$6 }
	*($3 + [16]) = ($13 << [1])
	$14 = $9
	goto $label$5 
	
.LABEL $label$7
	*($10) = [0]
	*($3 + [16]) = (int_64)0
	*($3 + [16]) = [0]
	$5 = $9
	goto $label$4 
	
.LABEL $label$6
	$15 = (($13 + [16]) & [-16])
	$14 = CALL $10($15)
	*($10) = $14
	*($3 + [16]) = ($15 | [1])
	*($3 + [20]) = $13
	
.LABEL $label$5
	$15 = ($5 + [1])
	$5 = [0]
	
.LOOP $label$10:
	*(($14 + $5)) = *((($3 + [96]) + $5))
	$5 = ($5 + [1])
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$10 }
	$5 = ($14 + $13)
	
.LABEL $label$4
	*($5) = [0]
	$5 = CALL $34(($3 + [16]), [0], [12392])
	$13 = ($5 + [8])
	*(($16 = (($3 + [32]) + [8]))) = *($13)
	*($3 + [32]) = *($5)
	*($5) = (int_64)0
	*($13) = [0]
	$5 = CALL $31(($3 + [32]), [12439])
	$13 = ($5 + [8])
	*(($17 = (($3 + [48]) + [8]))) = *($13)
	*($3 + [48]) = *($5)
	*($5) = (int_64)0
	*($13) = [0]
	$6 = *($2)
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$14 }
	$13 = [0]
	$14 = *([0] + [12468])
	
.LOOP $label$16:
	*((($3 + [96]) + ($5 = $13))) = *(($14 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$5 == (int_32)[12]) )))))
	$13 = ($5 + [1])
	if ( ((uint_32)$5 > (uint_32)[11]) ){ goto $label$15 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$15
	*(($15 = ($3 + [8]))) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$13 }
	*($3) = ($13 << [1])
	$14 = $8
	goto $label$12 
	
.LABEL $label$14
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$5 = $8
	goto $label$11 
	
.LABEL $label$13
	$18 = (($13 + [16]) & [-16])
	$14 = CALL $10($18)
	*($15) = $14
	*($3) = ($18 | [1])
	*($3 + [4]) = $13
	
.LABEL $label$12
	$15 = ($5 + [1])
	$5 = [0]
	
.LOOP $label$17:
	*(($14 + $5)) = *((($3 + [96]) + $5))
	$5 = ($5 + [1])
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$17 }
	$5 = ($14 + $13)
	
.LABEL $label$11
	*($5) = [0]
	$5 = *($3)
	$13 = ($5 & [1])
	$15 = ($3 + [8])
	$5 = CALL $32(($3 + [48]), ( *($15) ? $8 : $13 ), ( *($3 + [4]) ? uint_32($5 >> [1]) : $13 ))
	$13 = ($5 + [8])
	*(($14 = (($3 + [64]) + [8]))) = *($13)
	*($3 + [64]) = *($5)
	*($5) = (int_64)0
	*($13) = [0]
	if ( ((int_64)$12 == (int_64)$11) ){ goto $label$28 }
	if ( (*($3 + [64]) & [1]) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL eosio_assert([0], ( *($14) ? $7 : (*($3 + [64]) & [1]) ))
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $12(*($14))
	if ( ((*($3) & [1]) == 0) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	if ( (*($3) & [1]) ){ goto $label$24 }
	
.LABEL $label$25
	if ( (*($3 + [48]) & [1]) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $12(*($15))
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $12(*($17))
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( (*($3 + [32]) & [1]) ){ goto $label$20 }
	
.LABEL $label$21
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$20
	CALL $12(*($16))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $12(*($10))
	
.LABEL $label$18
	CALL $86(($3 + [80]))
	$5 = *($3 + [84])
	if ( $5 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($3 + [84]) = [0]
	*($3 + [80]) = ($3 + [88])
	
.LABEL $label$1
	$6 = *($0)
	*($3 + [100]) = $1
	*($3 + [96]) = $0
	*($3 + [104]) = $2
	CALL $87(($3 + [64]), $4, $6, ($3 + [96]))
	$global$0 = ($3 + [112])
}

void .FUNC $199 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-2688959343285501951, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $345($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-2688959343285501952, $6))
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*(($4 + [40])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $10([32])
	CALL $341($3, $1, ($4 + [16]))
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [20])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $342(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $12($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$2 = CALL $4($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $10([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [24]) = [-1]
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $342(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $5($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $12($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $149 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($5 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$6 = ($4 + ((int_32)$7 * (int_32)[24]))
	$8 = ($1 + [24])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$1 = (($4 + $5) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$4 = *($3 + [16])
	if ( ($4 == 0) ){ goto $label$11 }
	$0 = ($3 + [20])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($7 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL $12(*(($7 + [-4])))
	
.LABEL $label$15
	$7 = $1
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$14 }
	$1 = *(($3 + [16]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $4
	
.LABEL $label$12
	*($0) = $4
	CALL $12($1)
	
.LABEL $label$11
	CALL $12($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $12($5)
	
.LABEL $label$16
	(unreachable)
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = ($0 + [136])
	$5 = *($2)
	$7 = *(($0 + [164]))
	$6 = *(($0 + [160]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($9 + [16]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	$10 = (int_64)0
	$5 = *($2)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [144])), (int_64)-5001621371248181248, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $82($4, $8)
	if ( ((int_32)*($9 + [16]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$6
	$10 = (int_64)0
	$5 = *($2)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$11:
	*((($3 + [16]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$10 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)$10) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$3 }
	*($3) = ($7 << [1])
	$6 = ($3 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($3 + [8])) = [0]
	*($3) = $10
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$1 
	
.LABEL $label$3
	$11 = (($7 + [16]) & [-16])
	$6 = CALL $10($11)
	*($3) = ($11 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $7
	
.LABEL $label$2
	$11 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$12:
	*(($6 + $8)) = *((($3 + [16]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$12 }
	$8 = ($6 + $7)
	
.LABEL $label$1
	*($8) = [0]
	$8 = CALL $34($3, [0], [12356])
	$7 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($7)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$13 }
	CALL eosio_assert([0], ( *($3 + [24]) ? (($3 + [16]) | [1]) : (*($3 + [16]) & [1]) ))
	
.LABEL $label$13
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$14 }
	CALL $12(*($3 + [24]))
	
.LABEL $label$14
	if ( ((*($3) & [1]) == 0) ){ goto $label$15 }
	CALL $12(*($3 + [8]))
	
.LABEL $label$15
	$5 = *($0)
	*($3 + [20]) = $1
	*($3 + [16]) = $2
	CALL $83($3, $4, $5, ($3 + [16]))
	$global$0 = ($3 + [32])
}

void .FUNC $419 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	$0 = *(*($0) + [4])
	$2 = *($0 + [72])
	$3 = *(($0 + [80]))
	if ( ((int_64)*(($0 + [64])) == (int_64)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$1
	$2 = ((int_64)*($0 + [56]) + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$3 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [14718])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [14699])
	
.LABEL $label$2
	if ( ((int_64)$3 == (int_64)*(($1 + [48]))) ){ goto $label$4 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$4
	$2 = ((int_64)*($1 + [40]) + (int_64)$2)
	*($1 + [40]) = $2
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$7 }
	if ( ((int_64)$2 >= (int_64)4611686018427387904) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [14699])
	if ( ((int_64)*(($1 + [40])) < (int_64)4611686018427387904) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [14718])
	*($1 + [56]) = (int_64)0
	*($1 + [72]) = (int_64)0
	return 
	
.LABEL $label$5
	*($1 + [56]) = (int_64)0
	*($1 + [72]) = (int_64)0
}

void .FUNC $418 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

int_32 .FUNC $145 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = [0]
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $1
	$0 = CALL db_find_i64($4, $1, (int_64)3607749779137757184, (int_64)5523015)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $150(($2 + [8]), $0)
	if ( ((int_32)*($3 + [16]) == (int_32)($2 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	$1 = (int_64)5523015
	$0 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$4 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$1 = $4
	$5 = $0
	$0 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$1 = $4
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = ((int_32)$0 < (int_32)[6])
	$6 = ($0 + [1])
	$0 = $6
	if ( $5 ){ goto $label$7 }
	$0 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [9800])
	
.LABEL $label$3
	if ( ((int_64)*($3 + [8]) == (int_64)1413891848) ){ goto $label$8 }
	CALL eosio_assert([0], [14395])
	
.LABEL $label$8
	$3 = ((int_64)*($3) > (int_64)0)
	$6 = *($2 + [32])
	if ( ($6 == 0) ){ goto $label$1 }
	$7 = ($2 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $12($5)
	
.LABEL $label$12
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($2 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $6
	
.LABEL $label$9
	*($7) = $6
	CALL $12($0)
	
.LABEL $label$1
	$global$0 = ($2 + [48])
	return $3
}

void .FUNC $64 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_64 $8
	$7 = ($global$0 - [96])
	$global$0 = $7
	*($7 + [48]) = (int_64)0
	CALL $65($0, $1, ($7 + [48]), [11296])
	*(($7 + [80])) = (int_64)0
	*(($7 + [90])) = [0]
	*(($7 + [88])) = [0]
	*($7 + [64]) = (int_64)-1
	*($7 + [72]) = (int_64)0
	$8 = *($0)
	*($7 + [48]) = $8
	*($7 + [56]) = $8
	*($7 + [20]) = $2
	*($7 + [24]) = $3
	*($7 + [28]) = $4
	*($7 + [32]) = $1
	*($7 + [36]) = $5
	*($7 + [40]) = $6
	*($7 + [16]) = ($7 + [48])
	CALL $66(($7 + [8]), ($7 + [48]), $8, ($7 + [16]))
	$6 = *($7 + [72])
	if ( ($6 == 0) ){ goto $label$1 }
	$5 = ($7 + [76])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*(($1 + [56])))
	
.LABEL $label$6
	CALL $12($1)
	
.LABEL $label$5
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$4 }
	$0 = *(($7 + [72]))
	goto $label$2 
	
.LABEL $label$3
	$0 = $6
	
.LABEL $label$2
	*($5) = $6
	CALL $12($0)
	
.LABEL $label$1
	$global$0 = ($7 + [96])
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$global$0 = $3
	if ( (CALL $129($0, $1) == 0) ){ goto $label$17 }
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$15 }
	
.LOOP $label$18:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$16 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$18 }
	goto $label$15 
	
.LABEL $label$17
	if ( (CALL $90($0, $1) == 0) ){ goto $label$19 }
	$4 = ($0 + [8])
	$5 = *($1)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$20:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$12 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$20 }
	goto $label$11 
	
.LABEL $label$19
	$5 = *($1)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$13 }
	$7 = [0]
	$8 = *([0] + [12468])
	
.LOOP $label$22:
	*((($3 + [32]) + ($1 = $7))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$7 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$21 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$22 }
	
.LABEL $label$21
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$9 }
	*($3) = ($7 << [1])
	$8 = ($3 | [1])
	goto $label$8 
	
.LABEL $label$16
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$15 }
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$14 }
	CALL eosio_assert([0], [11551])
	goto $label$14 
	
.LABEL $label$15
	$8 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$14 }
	$8 = CALL $57($4, $1)
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$14 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$14
	if ( ((int_64)*(($8 + [56])) != (int_64)*($2 + [8])) ){ goto $label$24 }
	if ( ((int_64)*($8 + [48]) < (int_64)*($2)) ){ goto $label$23 }
	goto $label$3 
	
.LABEL $label$24
	CALL eosio_assert([0], [14395])
	if ( ((int_64)*($8 + [48]) >= (int_64)*($2)) ){ goto $label$3 }
	
.LABEL $label$23
	CALL eosio_assert([0], [14585])
	$5 = *($0)
	*($3 + [32]) = $2
	if ( $8 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$13
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$1 = ($3 | [1])
	goto $label$7 
	
.LABEL $label$12
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	if ( ((int_32)*($8 + [88]) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [11551])
	goto $label$10 
	
.LABEL $label$11
	$8 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [16])), (int_64)-5915276602094125056, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $91($4, $1)
	if ( ((int_32)*($8 + [88]) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$10
	if ( ((int_64)*(($8 + [48])) != (int_64)*($2 + [8])) ){ goto $label$26 }
	if ( ((int_64)*($8 + [40]) < (int_64)*($2)) ){ goto $label$25 }
	goto $label$6 
	
.LABEL $label$26
	CALL eosio_assert([0], [14395])
	if ( ((int_64)*($8 + [40]) >= (int_64)*($2)) ){ goto $label$6 }
	
.LABEL $label$25
	CALL eosio_assert([0], [14585])
	$5 = *($0)
	*($3 + [32]) = $2
	if ( $8 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$9
	$0 = (($7 + [16]) & [-16])
	$8 = CALL $10($0)
	*($3) = ($0 | [1])
	*($3 + [8]) = $8
	*($3 + [4]) = $7
	
.LABEL $label$8
	$0 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$27:
	*(($8 + $1)) = *((($3 + [32]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$27 }
	$1 = ($8 + $7)
	
.LABEL $label$7
	*($1) = [0]
	$1 = CALL $34($3, [0], [14633])
	$7 = ($1 + [8])
	*((($3 + [16]) + [8])) = *($7)
	*($3 + [16]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	$1 = CALL $31(($3 + [16]), [13557])
	$8 = ($1 + [8])
	*(($7 = (($3 + [32]) + [8]))) = *($8)
	*($3 + [32]) = *($1)
	*($1) = (int_64)0
	*($8) = [0]
	CALL eosio_assert([0], ( *($7) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	if ( (*($3 + [32]) & [1]) ){ goto $label$32 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $12(*($7))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL $12(*($3 + [24]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	if ( (*($3) & [1]) ){ goto $label$28 }
	
.LABEL $label$29
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$28
	CALL $12(*($3 + [8]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$6
	$5 = *($0)
	*($3 + [32]) = $2
	if ( $8 ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10691])
	
.LABEL $label$4
	CALL $227($4, $8, $5, ($3 + [32]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$3
	$5 = *($0)
	*($3 + [32]) = $2
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10691])
	
.LABEL $label$1
	CALL $228($4, $8, $5, ($3 + [32]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $146 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $150($0, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [128])
	$global$0 = $3
	if ( (CALL $129($0, $1) == 0) ){ goto $label$1 }
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	$5 = *($0)
	*($3 + [40]) = $2
	if ( $9 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$5
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $57($4, $8)
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	$5 = *($0)
	*($3 + [40]) = $2
	if ( $9 ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10691])
	
.LABEL $label$2
	CALL $142($4, $9, $5, ($3 + [40]))
	
.LABEL $label$1
	CALL $139(($3 + [40]), $2)
	$8 = CALL $34(($3 + [40]), [0], [13495])
	$7 = ($8 + [8])
	*((($3 + [80]) + [8])) = *($7)
	*($3 + [80]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*($3 + [48]))
	
.LABEL $label$8
	$5 = *($0)
	*($3 + [16]) = (int_64)4520705709016350720
	*($3 + [8]) = *($1)
	$7 = CALL $24((($3 + [8]) + [16]), ($3 + [80]))
	*($3 + [48]) = (int_64)8516770035280461824
	*($3 + [40]) = $5
	*(($8 = CALL $10([16]))) = $5
	*($8 + [8]) = (int_64)-6402241254016417792
	*(($3 + [76])) = [0]
	$9 = ($8 + [16])
	*(($3 + [64])) = $9
	*((($3 + [40]) + [20])) = $9
	*($3 + [56]) = $8
	*($3 + [68 align=4]) = (int_64)0
	$8 = *($7)
	$7 = ( *((($3 + [8]) + [20])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($7 + [16])
	$5 = (CASTING uint_64)(uint_32 $7)
	$7 = ($3 + [68])
	
.LOOP $label$9:
	$8 = ($8 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	if ( ($8 == 0) ){ goto $label$11 }
	CALL $51($7, $8)
	$7 = *(($3 + [72]))
	$8 = *(($3 + [68]))
	goto $label$10 
	
.LABEL $label$11
	$7 = [0]
	$8 = [0]
	
.LABEL $label$10
	*($3 + [100]) = $8
	*($3 + [96]) = $8
	*($3 + [104]) = $7
	*($3 + [112]) = ($3 + [96])
	*($3 + [120]) = ($3 + [8])
	CALL $143(($3 + [120]), ($3 + [112]))
	CALL $53(($3 + [40]))
	$8 = *($3 + [68])
	if ( ($8 == 0) ){ goto $label$12 }
	*(($3 + [72])) = $8
	CALL $12($8)
	
.LABEL $label$12
	$8 = *($3 + [56])
	if ( ($8 == 0) ){ goto $label$13 }
	*(($3 + [60])) = $8
	CALL $12($8)
	
.LABEL $label$13
	if ( (*($3 + [24]) & [1]) ){ goto $label$16 }
	if ( (*($3 + [80]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $12(*(($3 + [32])))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $12(*($3 + [88]))
	$global$0 = ($3 + [128])
	return 
	
.LABEL $label$14
	$global$0 = ($3 + [128])
}

void .FUNC $140 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	$6 = *($1 + [96])
	*($5 + [64]) = $6
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$7 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $7
	*($5 + [56]) = $7
	$7 = *($1)
	*($5 + [24]) = $7
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [104]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14736])
	$6 = *(($1 + [96]))
	
.LABEL $label$3
	$6 = (int_64)
	*(($8 = ($1 + [96]))) = $6($6 - *($3)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14784])
	$6 = *($8)
	
.LABEL $label$4
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14806])
	
.LABEL $label$5
	$8 = ($1 + [136])
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$6
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $8
	*($5 + [88]) = $1
	$9 = ($1 + [8])
	*($5 + [92]) = $9
	$10 = ($1 + [20])
	*($5 + [96]) = $10
	$11 = ($1 + [32])
	*($5 + [100]) = $11
	$12 = ($1 + [48])
	*($5 + [104]) = $12
	$13 = ($1 + [64])
	*($5 + [108]) = $13
	$14 = ($1 + [80])
	*($5 + [112]) = $14
	$15 = ($1 + [96])
	*($5 + [116]) = $15
	$16 = ($1 + [112])
	*($5 + [120]) = $16
	$17 = ($1 + [124])
	*($5 + [124]) = $17
	$18 = ($1 + [144])
	*($5 + [132]) = $18
	$19 = ($1 + [160])
	*($5 + [136]) = $19
	$20 = ($1 + [168])
	*($5 + [140]) = $20
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$8 }
	$4 = CALL $4($3)
	$2 = *($5 + [72])
	goto $label$7 
	
.LABEL $label$8
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$7
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $9
	*($5 + [96]) = $10
	*($5 + [100]) = $11
	*($5 + [104]) = $12
	*($5 + [108]) = $13
	*($5 + [112]) = $14
	*($5 + [116]) = $15
	*($5 + [120]) = $16
	*($5 + [124]) = $17
	*($5 + [128]) = $8
	*($5 + [132]) = $18
	*($5 + [136]) = $19
	*($5 + [140]) = $20
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL $5($4)
	
.LABEL $label$9
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $379(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $301(*($1), ($4 + [16]))
}

void .FUNC $142 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	$6 = *($1 + [96])
	*($5 + [64]) = $6
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$7 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $7
	*($5 + [56]) = $7
	$7 = *($1)
	*($5 + [24]) = $7
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [104]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14656])
	$6 = *(($1 + [96]))
	
.LABEL $label$3
	$6 = ((int_64)$6 + (int_64)*($3))
	*(($8 = ($1 + [96]))) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14699])
	$6 = *($8)
	
.LABEL $label$4
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14718])
	
.LABEL $label$5
	$8 = ($1 + [136])
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$6
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $8
	*($5 + [88]) = $1
	$9 = ($1 + [8])
	*($5 + [92]) = $9
	$10 = ($1 + [20])
	*($5 + [96]) = $10
	$11 = ($1 + [32])
	*($5 + [100]) = $11
	$12 = ($1 + [48])
	*($5 + [104]) = $12
	$13 = ($1 + [64])
	*($5 + [108]) = $13
	$14 = ($1 + [80])
	*($5 + [112]) = $14
	$15 = ($1 + [96])
	*($5 + [116]) = $15
	$16 = ($1 + [112])
	*($5 + [120]) = $16
	$17 = ($1 + [124])
	*($5 + [124]) = $17
	$18 = ($1 + [144])
	*($5 + [132]) = $18
	$19 = ($1 + [160])
	*($5 + [136]) = $19
	$20 = ($1 + [168])
	*($5 + [140]) = $20
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$8 }
	$4 = CALL $4($3)
	$2 = *($5 + [72])
	goto $label$7 
	
.LABEL $label$8
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$7
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $9
	*($5 + [96]) = $10
	*($5 + [100]) = $11
	*($5 + [104]) = $12
	*($5 + [108]) = $13
	*($5 + [112]) = $14
	*($5 + [116]) = $15
	*($5 + [120]) = $16
	*($5 + [124]) = $17
	*($5 + [128]) = $8
	*($5 + [132]) = $18
	*($5 + [136]) = $19
	*($5 + [140]) = $20
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL $5($4)
	
.LABEL $label$9
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $380(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $278 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1440])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1396]) = $2
	*($3 + [1392]) = $2
	*($3 + [1400]) = ($2 + $4)
	*($3 + [1384]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1396])
	
.LABEL $label$5
	CALL memcpy(($3 + [1384]), $2, [8])
	*($3 + [1396]) = ($2 + [8])
	*($3 + [1376]) = [0]
	*($3 + [1368]) = (int_64)0
	CALL $165(($3 + [1392]), ($3 + [1368]))
	*(($2 = (($3 + [16]) + [8]))) = *((($3 + [1392]) + [8]))
	*($3 + [16]) = *($3 + [1392])
	*(($4 = (($3 + [1408]) + [8]))) = *($2)
	*($3 + [1408]) = *($3 + [16])
	$2 = *($4)
	*((($3 + [1424]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$1 = *($3 + [1408])
	*($3 + [48]) = $1
	*($3 + [1424]) = $1
	*(($3 + [72])) = $0
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*($3 + [64]) = $0
	*(($3 + [200])) = $0
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [286])) = [0]
	*(($3 + [284])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = $0
	*($3 + [240]) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [304])) = $0
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [344])) = $0
	*(($3 + [352])) = $0
	*(($3 + [360])) = (int_64)-1
	*(($3 + [368])) = (int_64)0
	*(($3 + [376])) = [0]
	*(($3 + [392])) = $0
	*(($3 + [400])) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [432])) = $0
	*(($3 + [440])) = $0
	*($3 + [336]) = $0
	*($3 + [384]) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [448])) = $0
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [478])) = [0]
	*(($3 + [476])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = (int_64)-1
	*(($3 + [512])) = [0]
	*(($3 + [516])) = [0]
	*(($3 + [520])) = [0]
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = (int_64)-1
	*(($3 + [560])) = [0]
	*(($3 + [564])) = [0]
	*(($3 + [568])) = [0]
	*($3 + [576]) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = (int_64)-1
	*(($3 + [608])) = [0]
	*(($3 + [612])) = [0]
	*(($3 + [616])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [632])) = $0
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = (int_64)-1
	*(($3 + [664])) = [0]
	*(($3 + [668])) = [0]
	*(($3 + [672])) = [0]
	*(($3 + [680])) = $0
	*(($3 + [688])) = $0
	*(($3 + [696])) = (int_64)-1
	*(($3 + [704])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [728])) = $0
	*(($3 + [736])) = $0
	*(($3 + [744])) = (int_64)-1
	*(($3 + [752])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = $0
	*(($3 + [776])) = $0
	*(($3 + [784])) = (int_64)-1
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*($3 + [808]) = $0
	*(($3 + [816])) = [1]
	*(($3 + [824])) = (int_64)8238557860461690880
	*(($3 + [832])) = $0
	*(($3 + [840])) = $0
	*(($3 + [848])) = (int_64)-1
	*(($3 + [856])) = [0]
	*(($3 + [860])) = [0]
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = $0
	*(($3 + [880])) = $0
	*(($3 + [888])) = (int_64)-1
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = (int_64)-1
	*(($3 + [944])) = [0]
	*(($3 + [948])) = [0]
	*(($3 + [952])) = [0]
	*(($3 + [960])) = $0
	*(($3 + [968])) = $0
	*(($3 + [976])) = (int_64)-1
	*(($3 + [984])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = (int_64)-1
	*(($3 + [1032])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = (int_64)-1
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*($3 + [1088]) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = (int_64)-1
	*(($3 + [1120])) = [0]
	*(($3 + [1124])) = [0]
	*(($3 + [1128])) = [0]
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = (int_64)-1
	*(($3 + [1160])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = (int_64)-1
	*(($3 + [1208])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = (int_64)-1
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = (int_64)-1
	*(($3 + [1296])) = [0]
	*(($3 + [1300])) = [0]
	*(($3 + [1304])) = [0]
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = (int_64)-1
	*(($3 + [1344])) = [0]
	*(($3 + [1348])) = [0]
	*(($3 + [1352])) = [0]
	*($3 + [1360]) = $0
	$2 = CALL $24($3, ($3 + [1368]))
	CALL $104(($3 + [32]), *($3 + [1384]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$6
	CALL $230(($3 + [32]))
	if ( ((*($3 + [1368]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($3 + [1376])))
	
.LABEL $label$7
	$global$0 = ($3 + [1440])
}

void .FUNC $412 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = *($0)
	*($1 + [48]) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	$6 = *($4 + [8])
	$7 = ($1 + [20])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)*(($1 + [24]))) ){ goto $label$2 }
	CALL $24($8, $6)
	$8 = (*($7) + [12])
	*($7) = $8
	$9 = ($1 + [16])
	goto $label$1 
	
.LABEL $label$2
	$9 = ($1 + [16])
	CALL $367($9, $6)
	$8 = *($7)
	
.LABEL $label$1
	$10 = ($1 + [48])
	$4 = *($4 + [12])
	*($1 + [32]) = *($4)
	*(($1 + [40])) = *(($4 + [8]))
	$11 = ($1 + [32])
	$7 = *($9)
	$12 = (CASTING uint_64)(uint_32 ((int_32)($8 - $7) / (int_32)[12]))
	$4 = [16]
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = *($7)
	$6 = ( *($7 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$4 = ($6 + $4)
	$12 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$6:
	$4 = ($4 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$6 }
	$7 = ($7 + [12])
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = ($4 + [20])
	if ( ($7 <= [513]) ){ goto $label$8 }
	$4 = CALL $4($7)
	goto $label$7 
	
.LABEL $label$8
	$4 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$7
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $7)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = $9
	*($3 + [36]) = $11
	*($3 + [40]) = $10
	CALL $430(($3 + [24]), ($3 + [16]))
	$12 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($5 + [8]), (int_64)4849559493988974592, *(*($0 + [8])), $12, $4, $7)
	if ( ($7 <= [513]) ){ goto $label$9 }
	CALL $5($4)
	
.LABEL $label$9
	if ( (uint_64)($12 <= *($5 + [16])) ){ goto $label$10 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$12 = *(($5 + [8]))
	$13 = *(*(($0 + [8])))
	$14 = *($1)
	*($3 + [24]) = *(($1 + [8]))
	*($1 + [60]) = CALL db_idx64_store($12, (int_64)4849559493988974592, $13, $14, ($3 + [24]))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $98 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [68])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [11218])
	$2 = *(($0 + [4]))
	$3 = *($2 + [68])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4148594918074220544, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [68]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [60]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $137($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)4148594918074220544, $6))
	if ( ((int_32)*($4 + [60]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$5
	*($4 + [68]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $99 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($5 = CALL $10([80])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	$3 = [0]
	*($5 + [32]) = [0]
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)1413891848
	$2 = (int_64)5523015
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$2 = $6
	$7 = $3
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$5
	$2 = $6
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$7 = ((int_32)$3 < (int_32)[6])
	$8 = ($3 + [1])
	$3 = $8
	if ( $7 ){ goto $label$6 }
	$3 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9800])
	
.LABEL $label$2
	$3 = CALL $40()
	*($5 + [60]) = $1
	*($5 + [56]) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $3) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	CALL $362(($4 + [16]), $5)
	*($4 + [32]) = $5
	$2 = *($5)
	*($4 + [16]) = $2
	$7 = *($5 + [64])
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$8 }
	*($3 + [8]) = $2
	*($3 + [16]) = $7
	*($4 + [32]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $333(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$7
	*($0 + [4]) = $5
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$10 }
	CALL $12(*(($3 + [32])))
	
.LABEL $label$10
	CALL $12($3)
	
.LABEL $label$9
	$global$0 = ($4 + [48])
}

void .FUNC $239 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1440])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $4($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*((($3 + [8]) + [40])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($4 = ($3 + [320]))) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$4 }
	if ( CALL has_auth(*(($3 + [312]))) ){ goto $label$4 }
	CALL eosio_assert([0], [8850])
	
.LABEL $label$4
	$0 = *($3 + [312])
	*((($3 + [1344]) + [40])) = (int_64)0
	*($3 + [1368]) = (int_64)0
	*($3 + [1376]) = (int_64)0
	*($3 + [1344]) = (int_64)0
	*($3 + [1352]) = (int_64)0
	*($3 + [1360]) = (int_64)0
	*($3 + [1372]) = [0]
	*($3 + [1376]) = [0]
	CALL $72(($3 + [1392]), $4, $0, ($3 + [1344]))
	*($3 + [1416]) = [0]
	CALL $73($4, ($3 + [1392]), *($3 + [312]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1440])
}

void .FUNC $238 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1440])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $4($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*((($3 + [8]) + [40])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($4 = ($3 + [320]))) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$4 }
	if ( CALL has_auth(*(($3 + [312]))) ){ goto $label$4 }
	CALL eosio_assert([0], [8850])
	
.LABEL $label$4
	$0 = *($3 + [312])
	*((($3 + [1344]) + [40])) = (int_64)0
	*($3 + [1368]) = (int_64)0
	*($3 + [1376]) = (int_64)0
	*($3 + [1344]) = (int_64)0
	*($3 + [1352]) = (int_64)0
	*($3 + [1360]) = (int_64)0
	*($3 + [1372]) = [0]
	*($3 + [1376]) = [0]
	CALL $72(($3 + [1392]), $4, $0, ($3 + [1344]))
	*($3 + [1416]) = [1]
	CALL $73($4, ($3 + [1392]), *($3 + [312]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1440])
}

void .FUNC $94 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$4 = ($global$0 - [176])
	$global$0 = $4
	$5 = ($0 + [24])
	$6 = *($2)
	$8 = *(($0 + [52]))
	$7 = *(($0 + [48]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$6 }
	
.LOOP $label$8:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$7 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$6 }
	if ( ((int_32)*(($10 + [100])) == (int_32)$5) ){ goto $label$9 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$9
	*($4 + [172]) = $10
	*($4 + [168]) = $5
	$11 = (($4 + [168]) | [4])
	if ( $10 ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$9 = CALL db_find_i64(*($5), *(($0 + [32])), (int_64)4148595222869180416, $6)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$4 }
	$10 = CALL $96($5, $9)
	if ( ((int_32)*($10 + [100]) == (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$10
	*($4 + [172]) = $10
	*($4 + [168]) = $5
	$11 = (($4 + [168]) | [4])
	
.LABEL $label$5
	if ( CALL has_auth(*($10 + [88])) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$10 = [0]
	*($4 + [172]) = [0]
	*($4 + [168]) = $5
	$11 = (($4 + [168]) | [4])
	
.LABEL $label$3
	CALL eosio_assert([0], [12749])
	if ( CALL has_auth(*($10 + [88])) ){ goto $label$1 }
	
.LABEL $label$2
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	CALL eosio_assert([0], [12774])
	
.LABEL $label$1
	$12 = ($0 + [64])
	*($4 + [160]) = $12
	CALL $97(($4 + [152]), ($4 + [160]), $1)
	$9 = *($4 + [156])
	if ( ($9 == 0) ){ goto $label$11 }
	$6 = *($9 + [16])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$11 }
	$13 = (($4 + [8]) | [1])
	$14 = (($4 + [88]) | [1])
	$15 = (($4 + [104]) | [1])
	$5 = (($4 + [104]) + [8])
	
.LOOP $label$12:
	$18 = *($2)
	$19 = *($9 + [8])
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$16 }
	$8 = [0]
	$10 = *([0] + [12468])
	
.LOOP $label$18:
	*((($4 + [48]) + ($9 = $8))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$9 == (int_32)[12]) )))))
	$8 = ($9 + [1])
	if ( ((uint_32)$9 > (uint_32)[11]) ){ goto $label$17 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$18 }
	
.LABEL $label$17
	*($5) = [0]
	*($4 + [104]) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$15 }
	*($4 + [104]) = ($8 << [1])
	$10 = $15
	goto $label$14 
	
.LABEL $label$16
	*($5) = [0]
	*($4 + [104]) = (int_64)0
	*($4 + [104]) = [0]
	$9 = $15
	goto $label$13 
	
.LABEL $label$15
	$7 = (($8 + [16]) & [-16])
	$10 = CALL $10($7)
	*($5) = $10
	*($4 + [104]) = ($7 | [1])
	*($4 + [108]) = $8
	
.LABEL $label$14
	$7 = ($9 + [1])
	$9 = [0]
	
.LOOP $label$19:
	*(($10 + $9)) = *((($4 + [48]) + $9))
	$9 = ($9 + [1])
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$19 }
	$9 = ($10 + $8)
	
.LABEL $label$13
	*($9) = [0]
	$9 = CALL $34(($4 + [104]), [0], [12841])
	$8 = ($9 + [8])
	*(($17 = (($4 + [120]) + [8]))) = *($8)
	*($4 + [120]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	$9 = CALL $31(($4 + [120]), [12896])
	$8 = ($9 + [8])
	*(($16 = (($4 + [136]) + [8]))) = *($8)
	*($4 + [136]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	$6 = *($2)
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$23 }
	$8 = [0]
	$10 = *([0] + [12468])
	
.LOOP $label$25:
	*((($4 + [48]) + ($9 = $8))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$9 == (int_32)[12]) )))))
	$8 = ($9 + [1])
	if ( ((uint_32)$9 > (uint_32)[11]) ){ goto $label$24 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$25 }
	
.LABEL $label$24
	*(($7 = (($4 + [88]) + [8]))) = [0]
	*($4 + [88]) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$22 }
	*($4 + [88]) = ($8 << [1])
	$10 = $14
	goto $label$21 
	
.LABEL $label$23
	*((($4 + [88]) + [8])) = [0]
	*($4 + [88]) = (int_64)0
	*($4 + [88]) = [0]
	$9 = $14
	goto $label$20 
	
.LABEL $label$22
	$20 = (($8 + [16]) & [-16])
	$10 = CALL $10($20)
	*($7) = $10
	*($4 + [88]) = ($20 | [1])
	*($4 + [92]) = $8
	
.LABEL $label$21
	$7 = ($9 + [1])
	$9 = [0]
	
.LOOP $label$26:
	*(($10 + $9)) = *((($4 + [48]) + $9))
	$9 = ($9 + [1])
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$26 }
	$9 = ($10 + $8)
	
.LABEL $label$20
	*($9) = [0]
	$9 = *($4 + [88])
	$10 = ($9 & [1])
	$7 = (($4 + [88]) + [8])
	$9 = CALL $32(($4 + [136]), ( *($7) ? $14 : $10 ), ( *($4 + [92]) ? uint_32($9 >> [1]) : $10 ))
	$10 = ($9 + [8])
	*(($8 = (($4 + [8]) + [8]))) = *($10)
	*($4 + [8]) = *($9)
	*($9) = (int_64)0
	*($10) = [0]
	if ( ((int_64)$19 != (int_64)$18) ){ goto $label$37 }
	CALL eosio_assert([0], ( *($8) ? $13 : (*($4 + [8]) & [1]) ))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$37
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$35 }
	
.LABEL $label$36
	CALL $12(*($8))
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$33 }
	
.LABEL $label$34
	CALL $12(*($7))
	if ( ((*($4 + [136]) & [1]) == 0) ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$33
	if ( ((*($4 + [136]) & [1]) == 0) ){ goto $label$31 }
	
.LABEL $label$32
	CALL $12(*($16))
	if ( ((*($4 + [120]) & [1]) == 0) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$31
	if ( ((*($4 + [120]) & [1]) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	CALL $12(*($17))
	if ( (*($4 + [104]) & [1]) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	if ( ((*($4 + [104]) & [1]) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $12(*($5))
	
.LABEL $label$27
	CALL $98(($4 + [152]))
	$9 = *($4 + [156])
	if ( ($9 == 0) ){ goto $label$11 }
	$6 = *($9 + [16])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = *($0)
	*($4 + [52]) = $2
	*($4 + [48]) = $0
	*($4 + [56]) = $1
	*($4 + [60]) = $3
	*($4 + [64]) = ($4 + [168])
	CALL $99(($4 + [8]), $12, $6, ($4 + [48]))
	$9 = *($11)
	if ( ((int_64)*($9 + [32]) < (int_64)1) ){ goto $label$38 }
	$6 = *($0)
	*((($4 + [8]) + [16])) = *(($9 + [40]))
	*($4 + [8]) = *($1)
	*($4 + [16]) = *($9 + [32])
	CALL $24((($4 + [8]) + [24]), $3)
	*(($8 = (($4 + [48]) + [24]))) = [0]
	*($4 + [56]) = (int_64)8516770230402916512
	*($4 + [48]) = $6
	*($4 + [64]) = (int_64)0
	*(($9 = CALL $10([16]))) = $6
	*($9 + [8]) = (int_64)-6402241254016417792
	$10 = ($9 + [16])
	*($8) = $10
	*(($4 + [68])) = $10
	*($4 + [64]) = $9
	CALL $100(($4 + [76]), ($4 + [8]))
	CALL $53(($4 + [48]))
	$9 = *($4 + [76])
	if ( ($9 == 0) ){ goto $label$39 }
	*(($4 + [80])) = $9
	CALL $12($9)
	
.LABEL $label$39
	$9 = *($4 + [64])
	if ( ($9 == 0) ){ goto $label$40 }
	*(($4 + [68])) = $9
	CALL $12($9)
	
.LABEL $label$40
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$41 }
	CALL $12(*(($4 + [40])))
	
.LABEL $label$41
	if ( ((int_32)*(*($11) + [96]) != (int_32)*($0 + [8])) ){ goto $label$38 }
	$2 = ($0 + [240])
	$6 = *($1)
	$8 = *(($0 + [268]))
	$7 = *(($0 + [264]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$49 }
	
.LOOP $label$51:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$50 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$49 }
	if ( ((int_32)*($10 + [16]) == (int_32)$2) ){ goto $label$48 }
	CALL eosio_assert([0], [11551])
	$6 = *($10 + [8])
	*($4 + [120]) = $6
	if ( ((int_64)($6 == 0) == 0) ){ goto $label$47 }
	goto $label$38 
	
.LABEL $label$49
	$9 = CALL db_find_i64(*($2), *(($0 + [248])), (int_64)-5001621371248181248, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$46 }
	$10 = CALL $82($2, $9)
	if ( ((int_32)*($10 + [16]) == (int_32)$2) ){ goto $label$48 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$48
	$6 = *($10 + [8])
	*($4 + [120]) = $6
	if ( (int_64)($6 == 0) ){ goto $label$38 }
	
.LABEL $label$47
	$6 = *($1)
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$45 }
	$8 = [0]
	$10 = *([0] + [12468])
	
.LOOP $label$53:
	*((($4 + [48]) + ($9 = $8))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$9 == (int_32)[12]) )))))
	$8 = ($9 + [1])
	if ( ((uint_32)$9 > (uint_32)[11]) ){ goto $label$52 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$53 }
	
.LABEL $label$52
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$44 }
	*($4 + [8]) = ($8 << [1])
	$10 = (($4 + [8]) | [1])
	goto $label$43 
	
.LABEL $label$46
	*($4 + [120]) = (int_64)0
	$global$0 = ($4 + [176])
	return 
	
.LABEL $label$45
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	*($4 + [8]) = [0]
	$9 = (($4 + [8]) | [1])
	goto $label$42 
	
.LABEL $label$44
	$7 = (($8 + [16]) & [-16])
	$10 = CALL $10($7)
	*($4 + [8]) = ($7 | [1])
	*($4 + [16]) = $10
	*($4 + [12]) = $8
	
.LABEL $label$43
	$7 = ($9 + [1])
	$9 = [0]
	
.LOOP $label$54:
	*(($10 + $9)) = *((($4 + [48]) + $9))
	$9 = ($9 + [1])
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$54 }
	$9 = ($10 + $8)
	
.LABEL $label$42
	*($9) = [0]
	$9 = CALL $34(($4 + [8]), [0], [12909])
	$8 = ($9 + [8])
	*((($4 + [136]) + [8])) = *($8)
	*($4 + [136]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$55 }
	CALL $12(*($4 + [16]))
	
.LABEL $label$55
	*($4 + [8]) = $12
	CALL $97(($4 + [48]), ($4 + [8]), ($4 + [120]))
	$9 = *($4 + [52])
	if ( ($9 == 0) ){ goto $label$58 }
	if ( ((int_64)*($9 + [16]) != (int_64)*($4 + [120])) ){ goto $label$58 }
	$8 = ($0 + [16])
	
.LOOP $label$59:
	if ( ((int_64)*($9 + [8]) == (int_64)*($8)) ){ goto $label$57 }
	CALL $98(($4 + [48]))
	$9 = *($4 + [52])
	if ( ($9 == 0) ){ goto $label$58 }
	if ( ((int_64)*($9 + [16]) == (int_64)*($4 + [120])) ){ goto $label$59 }
	
.LABEL $label$58
	$9 = *($11)
	$18 = *(($9 + [40]))
	$19 = *($9 + [32])
	goto $label$56 
	
.LABEL $label$57
	$9 = *($11)
	$6 = *($9 + [32])
	$19 = ((int_64)$6 << (int_64)1)
	$18 = *(($9 + [40]))
	if ( ((int_64)$6 >= (int_64)2305843009213693952) ){ goto $label$60 }
	if ( ((int_64)$6 > (int_64)-2305843009213693952) ){ goto $label$56 }
	CALL eosio_assert([0], [12963])
	goto $label$56 
	
.LABEL $label$60
	CALL eosio_assert([0], [12939])
	
.LABEL $label$56
	$6 = *($0)
	*((($4 + [8]) + [16])) = $18
	*($4 + [16]) = $19
	*($4 + [8]) = *($4 + [120])
	CALL $24((($4 + [8]) + [24]), ($4 + [136]))
	*($4 + [56]) = (int_64)8516770230402916512
	*($4 + [48]) = $6
	*(($9 = CALL $10([16]))) = $6
	*($9 + [8]) = (int_64)-6402241254016417792
	$8 = ($9 + [16])
	*((($4 + [48]) + [24])) = $8
	*(($4 + [68])) = $8
	*($4 + [64]) = $9
	CALL $100(($4 + [76]), ($4 + [8]))
	CALL $53(($4 + [48]))
	$9 = *($4 + [76])
	if ( ($9 == 0) ){ goto $label$61 }
	*(($4 + [80])) = $9
	CALL $12($9)
	
.LABEL $label$61
	$9 = *($4 + [64])
	if ( ($9 == 0) ){ goto $label$62 }
	*(($4 + [68])) = $9
	CALL $12($9)
	
.LABEL $label$62
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$63 }
	CALL $12(*(($4 + [40])))
	
.LABEL $label$63
	if ( ((*($4 + [136]) & [1]) == 0) ){ goto $label$38 }
	CALL $12(*($4 + [144]))
	
.LABEL $label$38
	$global$0 = ($4 + [176])
}

void .FUNC $236 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1376])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1344]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1344]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	*($3 + [1368]) = *($3 + [1344])
	*($3 + [1360]) = $0
	CALL $120(($3 + [1352]), ($3 + [1360]), ($3 + [1368]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1376])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$5 = CALL $10([112])
	CALL $350($5)
	*($5 + [100]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [20])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [60])
	*($3 + [64]) = ($5 + [72])
	*($3 + [68]) = ($5 + [88])
	*($3 + [72]) = ($5 + [96])
	CALL $363(($3 + [40]), ($3 + [32]))
	*($5 + [108]) = [-1]
	*($5 + [104]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $352(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( (*($1 + [72]) & [1]) ){ goto $label$19 }
	if ( (*($1 + [60]) & [1]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $12(*(($1 + [80])))
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $12(*(($1 + [68])))
	$4 = [1]
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$4 = [1]
	if ( (*($1 + [48]) & [1]) ){ goto $label$15 }
	
.LABEL $label$16
	if ( (*($1 + [20]) & $4) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $12(*(($1 + [56])))
	if ( ((*($1 + [20]) & $4) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $12(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $12(*(($1 + [16])))
	
.LABEL $label$11
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $234 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [8])
	if ( ($4 == 0) ){ goto $label$6 }
	$5 = ($3 + [12])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($6 + [-12])
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $12(*(($6 + [-4])))
	
.LABEL $label$10
	$6 = $7
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	$7 = *(($3 + [8]))
	goto $label$7 
	
.LABEL $label$8
	$7 = $4
	
.LABEL $label$7
	*($5) = $4
	CALL $12($7)
	
.LABEL $label$6
	CALL $12($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$4 }
	$7 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$7 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $12($7)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $233 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [84])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [88])) = $4
	CALL $12($4)
	
.LABEL $label$6
	$4 = *($3 + [68])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($3 + [72])) = $4
	CALL $12($4)
	
.LABEL $label$7
	$4 = *($3 + [52])
	if ( ($4 == 0) ){ goto $label$8 }
	*(($3 + [56])) = $4
	CALL $12($4)
	
.LABEL $label$8
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($3 + [48])))
	
.LABEL $label$9
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $12(*(($3 + [16])))
	
.LABEL $label$10
	CALL $12($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $12($3)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $10([104]))) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [12])
	*($3 + [44]) = ($5 + [16])
	*($3 + [48]) = ($5 + [28])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [56])
	*($3 + [60]) = ($5 + [72])
	CALL $360(($3 + [32]), ($3 + [24]))
	*($5 + [92]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $361(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [28]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($1 + [36])))
	
.LABEL $label$11
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL $12(*(($1 + [24])))
	
.LABEL $label$12
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $10([208])
	CALL $356($3)
	*($3 + [176]) = $1
	CALL $357(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [180])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $358(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $327(($1 + [144]), *(($1 + [148])))
	$3 = *($1 + [124])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($1 + [128])) = $3
	CALL $12($3)
	
.LABEL $label$5
	$3 = *($1 + [112])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($1 + [116])) = $3
	CALL $12($3)
	
.LABEL $label$6
	if ( (*($1 + [32]) & [1]) ){ goto $label$11 }
	if ( (*($1 + [20]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $12(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $12(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*(($1 + [16])))
	
.LABEL $label$7
	CALL $12($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $230 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $231(($0 + [1056]))
	CALL $131(($0 + [880]))
	$1 = *(($0 + [864]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [868])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*(($4 + [32])))
	
.LABEL $label$6
	CALL $12($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [864]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$1
	CALL $232(($0 + [824]))
	CALL $131(($0 + [600]))
	CALL $233(($0 + [576]))
	$1 = *(($0 + [528]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [532])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $12($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [528]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$7
	CALL $115(($0 + [400]))
	CALL $234(($0 + [384]))
	$1 = *(($0 + [336]))
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [340])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $12($4)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$15 }
	$3 = *(($0 + [336]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$12
	CALL $115(($0 + [208]))
	CALL $131(($0 + [32]))
	return $0
}

void .FUNC $411 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *($8 + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076480, ($6 + [8]), *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($9)
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076479, ($6 + [8]), *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($9)
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076478, ($6 + [8]), *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($9)
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076477, ($6 + [8]), *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($9)
	
.LABEL $label$7
	$9 = *($0)
	$7 = *($9 + [4])
	$0 = *(($7 + [200]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$10 }
	$0 = *($9)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5915276602093076476, ($6 + [8]), *($7))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($0)
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $417 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	$0 = *(*($0) + [4])
	$2 = *($0 + [80])
	$3 = *(($0 + [88]))
	if ( ((int_64)*(($0 + [72])) == (int_64)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$1
	$2 = ((int_64)*($0 + [64]) + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$3 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [14718])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [14699])
	
.LABEL $label$2
	if ( ((int_64)$3 == (int_64)*(($1 + [56]))) ){ goto $label$4 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$4
	$2 = ((int_64)*($1 + [48]) + (int_64)$2)
	*($1 + [48]) = $2
	if ( ((int_64)$2 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14699])
	$2 = *(($1 + [48]))
	
.LABEL $label$5
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [14718])
	
.LABEL $label$6
	*($1 + [64]) = (int_64)0
	*($1 + [80]) = (int_64)0
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
}

void .FUNC $144 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	float_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [240])
	$global$0 = $4
	*($4 + [104]) = $2
	*($4 + [112]) = $1
	CALL require_auth($1)
	*($4 + [168]) = *($0)
	CALL $65(($4 + [168]), ($4 + [112]), ($4 + [104]), [8992])
	$1 = *($4 + [112])
	if ( ((int_64)$1 == (int_64)*($4 + [104])) ){ goto $label$5 }
	if ( (CALL $145($0, $1) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [8996])
	if ( CALL $145($0, *($4 + [112])) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8611])
	if ( (CALL $145($0, *($4 + [104])) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( CALL $145($0, *($4 + [104])) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8652])
	
.LABEL $label$1
	$1 = *($0 + [304])
	*(($4 + [208])) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [168]) = (int_64)0
	*($4 + [176]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [196]) = [0]
	*($4 + [200]) = [0]
	CALL $72(($4 + [120]), ($0 + [312]), $1, ($4 + [168]))
	if ( ((int_32)*($4 + [144]) != (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$6
	*(($4 + [200])) = [0]
	*($4 + [184]) = (int_64)-1
	*($4 + [192]) = (int_64)0
	*($4 + [168]) = *($0)
	*($4 + [176]) = *($4 + [104])
	$5 = CALL $146(($4 + [168]), (int_64)5523015, [9049])
	$1 = *($5)
	$2 = *($5 + [8])
	*($4 + [96]) = $2
	$6 = ((float_32)(CASTING float_32)(int_64 $1) * (float_32)(float_32)0.10000000149011612)
	if ( ((float_32)(float_32)|$6| < (float_32)(float_32)9223372036854775808) ){ goto $label$8 }
	$1 = (int_64)-9223372036854775808
	goto $label$7 
	
.LABEL $label$8
	$1 = (Rounds 0)($6)
	
.LABEL $label$7
	*($4 + [88]) = $1
	if ( (uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$9 }
	CALL eosio_assert([0], [14454])
	
.LABEL $label$9
	$1 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$1 = $2
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$1 = $2
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $7 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9800])
	
.LABEL $label$10
	*(($5 = (($4 + [72]) + [8]))) = *((($4 + [88]) + [8]))
	*($4 + [72]) = *($4 + [88])
	$1 = *($4 + [112])
	*((($4 + [120]) + [8])) = *($5)
	*($4 + [32]) = $1
	*($4 + [120]) = *($4 + [72])
	if ( CALL has_auth($1) ){ goto $label$15 }
	if ( CALL has_auth(*($0)) ){ goto $label$15 }
	CALL eosio_assert([0], [10242])
	
.LABEL $label$15
	CALL $147(($0 + [32]), ($4 + [32]), ($4 + [120]))
	*((($4 + [120]) + [32])) = [0]
	*($4 + [136]) = (int_64)-1
	*($4 + [144]) = (int_64)0
	*($4 + [156]) = [0]
	$1 = *($0)
	*($4 + [120]) = $1
	*($4 + [128]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)4849559493988974592, *($4 + [104]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$16 }
	if ( ((int_32)*(CALL $126(($4 + [120]), $5) + [52]) == (int_32)($4 + [120])) ){ goto $label$17 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$17
	CALL eosio_assert([0], [9077])
	
.LABEL $label$16
	$1 = *($0)
	*($4 + [40]) = $3
	*($4 + [36]) = ($4 + [112])
	*($4 + [32]) = ($4 + [104])
	*($4 + [44]) = ($4 + [88])
	*($4 + [232]) = $1
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [120])) ){ goto $label$18 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$18
	*($4 + [12]) = ($4 + [32])
	*($4 + [8]) = ($4 + [120])
	*($4 + [16]) = ($4 + [232])
	*(($5 = CALL $10([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [52]) = ($4 + [120])
	CALL $148(($4 + [8]), $5)
	*($4 + [224]) = $5
	$1 = *($5)
	*($4 + [8]) = $1
	$8 = *($5 + [56])
	*($4 + [220]) = $8
	$9 = ($4 + [148])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)*(($4 + [152]))) ){ goto $label$21 }
	*($7 + [8]) = $1
	*($7 + [16]) = $8
	*($4 + [224]) = [0]
	*($7) = $5
	*($9) = ($7 + [24])
	$9 = *($4 + [224])
	*($4 + [224]) = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	CALL $149(($4 + [144]), ($4 + [224]), ($4 + [8]), ($4 + [220]))
	$9 = *($4 + [224])
	*($4 + [224]) = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	$8 = *($9 + [16])
	if ( ($8 == 0) ){ goto $label$22 }
	$10 = ($9 + [20])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$24 }
	
.LOOP $label$25:
	$5 = ($7 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$26 }
	CALL $12(*(($7 + [-4])))
	
.LABEL $label$26
	$7 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$25 }
	$5 = *(($9 + [16]))
	goto $label$23 
	
.LABEL $label$24
	$5 = $8
	
.LABEL $label$23
	*($10) = $8
	CALL $12($5)
	
.LABEL $label$22
	CALL $12($9)
	
.LABEL $label$19
	$1 = *($0)
	*($4 + [8]) = *($4 + [104])
	CALL $24(($4 + [16]), $3)
	*($4 + [40]) = (int_64)3626270858294591488
	*($4 + [32]) = $1
	*(($5 = CALL $10([16]))) = $1
	*($5 + [8]) = (int_64)-6402241254016417792
	$7 = ($5 + [16])
	*(($4 + [56])) = $7
	*(($4 + [52])) = $7
	*($4 + [48]) = $5
	CALL $110(($4 + [60]), ($4 + [8]))
	CALL $53(($4 + [32]))
	$5 = *($4 + [60])
	if ( ($5 == 0) ){ goto $label$27 }
	*(($4 + [64])) = $5
	CALL $12($5)
	
.LABEL $label$27
	$5 = *($4 + [48])
	if ( ($5 == 0) ){ goto $label$28 }
	*(($4 + [52])) = $5
	CALL $12($5)
	
.LABEL $label$28
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$29 }
	CALL $12(*(($4 + [24])))
	
.LABEL $label$29
	$3 = *($4 + [144])
	if ( ($3 == 0) ){ goto $label$30 }
	$11 = ($4 + [148])
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$32 }
	
.LOOP $label$33:
	$0 = ($0 + [-24])
	$9 = *($0)
	*($0) = [0]
	if ( ($9 == 0) ){ goto $label$34 }
	$8 = *($9 + [16])
	if ( ($8 == 0) ){ goto $label$35 }
	$10 = ($9 + [20])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$37 }
	
.LOOP $label$38:
	$5 = ($7 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$39 }
	CALL $12(*(($7 + [-4])))
	
.LABEL $label$39
	$7 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$38 }
	$5 = *(($9 + [16]))
	goto $label$36 
	
.LABEL $label$37
	$5 = $8
	
.LABEL $label$36
	*($10) = $8
	CALL $12($5)
	
.LABEL $label$35
	CALL $12($9)
	
.LABEL $label$34
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$33 }
	$5 = *(($4 + [144]))
	goto $label$31 
	
.LABEL $label$32
	$5 = $3
	
.LABEL $label$31
	*($11) = $3
	CALL $12($5)
	
.LABEL $label$30
	$8 = *($4 + [192])
	if ( ($8 == 0) ){ goto $label$40 }
	$0 = ($4 + [196])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$42 }
	
.LOOP $label$43:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$44 }
	CALL $12($7)
	
.LABEL $label$44
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$43 }
	$5 = *(($4 + [192]))
	goto $label$41 
	
.LABEL $label$42
	$5 = $8
	
.LABEL $label$41
	*($0) = $8
	CALL $12($5)
	
.LABEL $label$40
	$global$0 = ($4 + [240])
}

int_32 .FUNC $409 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL $327($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [11862])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$12 = [0]
	
.LOOP $label$4:
	*($2 + [24]) = (int_64)0
	*(($6 = (($2 + [8]) + [8]))) = [0]
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $9) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [24]), $9, [8])
	*(($7 = ($0 + [4]))) = (*($7) + [8])
	CALL $165($0, ($2 + [8]))
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = $11
	$13 = *($5 + [16])
	$4 = *($2 + [24])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$5 = $3
	$9 = $3
	$14 = [3]
	goto $label$6 
	
.LABEL $label$8
	$14 = [12]
	goto $label$6 
	
.LABEL $label$7
	$14 = [2]
	
.LABEL $label$6
	
.LOOP $label$11:
	goto $label$33 
	
.LABEL $label$37
	$9 = $5
	$5 = $8
	$13 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$24 }
	$14 = [12]
	goto $label$11 
	
.LABEL $label$36
	$8 = *($5)
	if ( $8 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$35
	if ( ((uint_64)$13 >= (uint_64)$4) ){ goto $label$19 }
	$14 = [11]
	goto $label$11 
	
.LABEL $label$34
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$22 }
	$14 = [0]
	goto $label$11 
	
.LABEL $label$33
	$5 = $9
	goto $label$23 
	
.LABEL $label$32
	if ( (*($9) == 0) ){ goto $label$18 }
	$14 = [4]
	goto $label$11 
	
.LABEL $label$31
	if ( (*($2 + [8]) & [1]) ){ goto $label$16 }
	$14 = [7]
	goto $label$11 
	
.LABEL $label$30
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$29
	$9 = $5
	if ( *($9) ){ goto $label$17 }
	$14 = [8]
	goto $label$11 
	
.LABEL $label$28
	*(($8 = CALL $10([40]))) = (int_64)0
	*($8 + [8]) = $5
	*($8 + [24 align=4]) = *($2 + [8])
	*(($8 + [32])) = *($6)
	*($9) = $8
	*($8 + [16]) = *($2 + [24])
	*($6) = [0]
	*($2 + [8]) = (int_64)0
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$12 }
	$14 = [9]
	goto $label$11 
	
.LABEL $label$27
	*($1) = $5
	$8 = *($9)
	$14 = [10]
	goto $label$11 
	
.LABEL $label$26
	CALL $305(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$15 }
	$14 = [5]
	goto $label$11 
	
.LABEL $label$25
	CALL $12(*($6))
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$13 }
	goto $label$3 
	
.LABEL $label$24
	$14 = [2]
	goto $label$11 
	
.LABEL $label$23
	$14 = [1]
	goto $label$11 
	
.LABEL $label$22
	$14 = [3]
	goto $label$11 
	
.LABEL $label$21
	$14 = [13]
	goto $label$11 
	
.LABEL $label$20
	$14 = [1]
	goto $label$11 
	
.LABEL $label$19
	$14 = [3]
	goto $label$11 
	
.LABEL $label$18
	$14 = [8]
	goto $label$11 
	
.LABEL $label$17
	$14 = [4]
	goto $label$11 
	
.LABEL $label$16
	$14 = [5]
	goto $label$11 
	
.LABEL $label$15
	$14 = [7]
	goto $label$11 
	
.LABEL $label$14
	$14 = [6]
	goto $label$11 
	
.LABEL $label$13
	$14 = [6]
	goto $label$11 
	
.LABEL $label$12
	$14 = [10]
	goto $label$11 
	
.LABEL $label$10
	$9 = *($7)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	$14
	return $0
}

void .FUNC $415 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$6 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $6
	*($5 + [56]) = $6
	$6 = *($1)
	*($5 + [24]) = $6
	CALL $417($3, $1)
	$7 = ($1 + [136])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $7
	*($5 + [88]) = $1
	$8 = ($1 + [8])
	*($5 + [92]) = $8
	$9 = ($1 + [20])
	*($5 + [96]) = $9
	$10 = ($1 + [32])
	*($5 + [100]) = $10
	$11 = ($1 + [48])
	*($5 + [104]) = $11
	$12 = ($1 + [64])
	*($5 + [108]) = $12
	$13 = ($1 + [80])
	*($5 + [112]) = $13
	$14 = ($1 + [96])
	*($5 + [116]) = $14
	$15 = ($1 + [112])
	*($5 + [120]) = $15
	$16 = ($1 + [124])
	*($5 + [124]) = $16
	$17 = ($1 + [144])
	*($5 + [132]) = $17
	$18 = ($1 + [160])
	*($5 + [136]) = $18
	$19 = ($1 + [168])
	*($5 + [140]) = $19
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $4($3)
	$2 = *($5 + [72])
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $8
	*($5 + [96]) = $9
	*($5 + [100]) = $10
	*($5 + [104]) = $11
	*($5 + [108]) = $12
	*($5 + [112]) = $13
	*($5 + [116]) = $14
	*($5 + [120]) = $15
	*($5 + [124]) = $16
	*($5 + [128]) = $7
	*($5 + [132]) = $17
	*($5 + [136]) = $18
	*($5 + [140]) = $19
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL $5($4)
	
.LABEL $label$6
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $418(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $192 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14736])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14784])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14806])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = $3
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	CALL $210(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [36]), $2, $4, [32])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [48])
}

void .FUNC $260 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1488])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1444]) = $2
	*($3 + [1440]) = $2
	$5 = ($2 + $4)
	*($3 + [1448]) = $5
	*($3 + [1432]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1448]))
	$2 = *($3 + [1444])
	
.LABEL $label$5
	CALL memcpy(($3 + [1432]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1444]) = $2
	*($3 + [1424]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1444])
	
.LABEL $label$6
	CALL memcpy(($3 + [1424]), $2, [8])
	*($3 + [1444]) = ($2 + [8])
	*($3 + [1416]) = [0]
	*($3 + [1408]) = (int_64)0
	CALL $165(($3 + [1440]), ($3 + [1408]))
	*($3 + [1400]) = [0]
	*($3 + [1392]) = (int_64)0
	CALL $165(($3 + [1440]), ($3 + [1392]))
	*(($2 = (($3 + [40]) + [8]))) = *((($3 + [1440]) + [8]))
	*($3 + [40]) = *($3 + [1440])
	*(($4 = (($3 + [1456]) + [8]))) = *($2)
	*($3 + [1456]) = *($3 + [40])
	$2 = *($4)
	*((($3 + [1472]) + [8])) = $2
	*(($3 + [80])) = $2
	*($3 + [56]) = $0
	*($3 + [64]) = $1
	$1 = *($3 + [1456])
	*($3 + [72]) = $1
	*($3 + [1472]) = $1
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [136])) = $0
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*($3 + [88]) = $0
	*(($3 + [224])) = $0
	*(($3 + [220])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [310])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*($3 + [264]) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [328])) = $0
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*($3 + [360]) = $0
	*($3 + [408]) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [472])) = $0
	*(($3 + [488])) = (int_64)0
	*(($3 + [496])) = [0]
	*(($3 + [502])) = [0]
	*(($3 + [500])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*($3 + [600]) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = (int_64)-1
	*(($3 + [688])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [752])) = $0
	*(($3 + [760])) = $0
	*(($3 + [768])) = (int_64)-1
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = $0
	*(($3 + [800])) = $0
	*(($3 + [808])) = (int_64)-1
	*(($3 + [816])) = [0]
	*(($3 + [820])) = [0]
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*($3 + [832]) = $0
	*(($3 + [840])) = [1]
	*(($3 + [848])) = (int_64)8238557860461690880
	*(($3 + [856])) = $0
	*(($3 + [864])) = $0
	*(($3 + [872])) = (int_64)-1
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = (int_64)-1
	*(($3 + [968])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = (int_64)-1
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*($3 + [1112]) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = (int_64)-1
	*(($3 + [1144])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = (int_64)-1
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*(($3 + [1336])) = $0
	*(($3 + [1344])) = $0
	*(($3 + [1352])) = $0
	*(($3 + [1360])) = (int_64)-1
	*(($3 + [1368])) = [0]
	*(($3 + [1372])) = [0]
	*(($3 + [1376])) = [0]
	*($3 + [1384]) = $0
	$4 = CALL $24(($3 + [8]), ($3 + [1392]))
	$2 = CALL $24(($3 + [24]), ($3 + [1408]))
	CALL $205(($3 + [56]), *($3 + [1432]), *($3 + [1424]), $2, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*($4 + [8]))
	
.LABEL $label$7
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$8
	CALL $230(($3 + [56]))
	if ( (*($3 + [1392]) & [1]) ){ goto $label$11 }
	if ( (*($3 + [1408]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $12(*(($3 + [1400])))
	if ( ((*($3 + [1408]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $12(*(($3 + [1416])))
	$global$0 = ($3 + [1488])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [1488])
}

void .FUNC $414 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $261 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1360])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1336]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	*($3 + [1352]) = $0
	*($3 + [1344]) = $0
	CALL $65(($3 + [1352]), ($3 + [1344]), ($3 + [1336]), [9512])
	CALL $182(($3 + [32]), ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1360])
}

void .FUNC $413 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $262 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1376])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	$0 = *($3 + [1352])
	*($3 + [1360]) = *($3 + [1344])
	*($3 + [1368]) = $0
	CALL $162(($3 + [40]), ($3 + [1368]), ($3 + [1360]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1376])
}

int_32 .FUNC $410 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($1)
	*($1) = [0]
	$3 = *($0)
	*($0) = $2
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $327(($3 + [144]), *(($3 + [148])))
	$2 = *($3 + [124])
	if ( ($2 == 0) ){ goto $label$2 }
	*(($3 + [128])) = $2
	CALL $12($2)
	
.LABEL $label$2
	$2 = *($3 + [112])
	if ( ($2 == 0) ){ goto $label$3 }
	*(($3 + [116])) = $2
	CALL $12($2)
	
.LABEL $label$3
	if ( (*($3 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($3 + [20]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $12(*(($3 + [40])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $12(*(($3 + [28])))
	if ( (*($3 + [8]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $12(*(($3 + [16])))
	
.LABEL $label$4
	CALL $12($3)
	
.LABEL $label$1
	*($0 + [8]) = *($1 + [8])
	*(($0 + [16])) = *(($1 + [16]))
	return $0
}

void .FUNC $386 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (*($2) + [8])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [4])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$1 = ($1 + [16])
	*($2) = $1
	$4 = *($3)
	$3 = *($0 + [16])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$3 = *($3)
	$3 = *($0 + [20])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	$1 = (($6 & [-8]) + $1)
	
.LABEL $label$6
	$1 = ($1 + [4])
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [28])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = (($6 & [-8]) + $1)
	
.LABEL $label$8
	*($2) = ($1 + [4])
	$0 = *($0)
	$0 = *($0 + [36])
	$3 = *($0 + [4])
	$1 = ((($1 + $3) + [16]) - $0)
	$5 = (CASTING uint_64)(uint_32 ($3 - $0))
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	*($2) = $1
}

int_32 .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$5 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$1 = ($0 + [8])
	$8 = ($0 + [4])
	
.LOOP $label$4:
	$6 = ($7 + [16])
	if ( ((int_32)(*($1) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$3 = *($8)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	*($8) = (*($8) + [8])
	CALL $301($0, ($7 + [24]))
	$3 = *($7 + [4])
	if ( ($3 == 0) ){ goto $label$7 }
	
.LOOP $label$8:
	$6 = $3
	$3 = *($6)
	if ( $3 ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$6 }
	$7 = ($7 + [8])
	
.LOOP $label$9:
	$3 = *($7)
	$7 = ($3 + [8])
	$6 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($6)) ){ goto $label$9 }
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	$3 = *($8)
	$7 = $6
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $263 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1376])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	*($3 + [1344]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	$0 = *($3 + [1352])
	*($3 + [1360]) = *($3 + [1344])
	*($3 + [1368]) = $0
	CALL $55(($3 + [40]), ($3 + [1368]), ($3 + [1360]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1376])
}

void .FUNC $307 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $306 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $305 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $304 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	CALL $311(*($0 + [4]), $1)
	$5 = *($1 + [48])
	$6 = ( *(($1 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [56])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [48])
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $4($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $5)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [24])
	*($3 + [40]) = ($1 + [32])
	*($3 + [44]) = ($1 + [40])
	*($3 + [48]) = $6
	*($3 + [52]) = ($1 + [60])
	*($3 + [56]) = ($1 + [64])
	CALL $312(($3 + [24]), ($3 + [16]))
	$7 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($4 + [8]), (int_64)4982429584927490048, *(*($0 + [8])), $7, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $5($2)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($3 + [28]) = $1
	*($3 + [36]) = $1
	*($3 + [32]) = *(($0 + [8]))
	*($3 + [24]) = $4
	*($3 + [16]) = ($3 + [24])
	CALL $313(($3 + [16]), ($4 + [36]), ($4 + [37]), ($4 + [38]), ($4 + [39]), ($4 + [40]), ($4 + [41]), ($4 + [42]))
	$global$0 = ($3 + [64])
}

void .FUNC $308 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $423 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$4 = *($1)
	*($2 + [8]) = (int_64)0
	$5 = *($4 + [4])
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($6) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $430 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$7 = (CASTING uint_64)(uint_32 ((int_32)(*($6 + [4]) - *($6)) / (int_32)[12]))
	$5 = *($1)
	$4 = *($5 + [4])
	
.LOOP $label$3:
	$3 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$8 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($3 & [127]))
	if ( ((int_32)(*(($5 + [8])) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$4 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($5 + [4]))) = $4
	if ( $8 ){ goto $label$3 }
	$3 = *(($6 + [4]))
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $301($5, $4)
	$4 = ($4 + [12])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$5
	$8 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $8, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2) = *($8 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10600])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy($3, $2, [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $282 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $4($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL $164(($3 + [8]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1344])
}

void .FUNC $268 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1336]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	CALL $188($3, ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1344])
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = ($0 + [48])
	$4 = *($1)
	$6 = *(($0 + [76]))
	$5 = *(($0 + [72]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$6 = [1]
	if ( ((int_32)*($8 + [176]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	$global$0 = ($2 + [48])
	return [1]
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($3), *(($0 + [56])), (int_64)-5915276602093076480, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = [1]
	if ( ((int_32)*(CALL $57($3, $7) + [176]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return $6
	
.LABEL $label$1
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$9 }
	$6 = [0]
	$5 = *([0] + [12468])
	
.LOOP $label$11:
	*((($2 + [32]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$10 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$8 }
	*($2) = ($6 << [1])
	$5 = ($2 | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	*($2) = [0]
	$7 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	$8 = (($6 + [16]) & [-16])
	$5 = CALL $10($8)
	*($2) = ($8 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $6
	
.LABEL $label$7
	$8 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$12:
	*(($5 + $7)) = *((($2 + [32]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$12 }
	$7 = ($5 + $6)
	
.LABEL $label$6
	*($7) = [0]
	$7 = CALL $34($2, [0], [14033])
	$6 = ($7 + [8])
	*((($2 + [16]) + [8])) = *($6)
	*($2 + [16]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	$7 = CALL $31(($2 + [16]), [14040])
	$5 = ($7 + [8])
	*(($6 = (($2 + [32]) + [8]))) = *($5)
	*($2 + [32]) = *($7)
	*($7) = (int_64)0
	*($5) = [0]
	$7 = *($2 + [32])
	$5 = ($7 & [1])
	CALL prints_l(( *($6) ? (($2 + [32]) | [1]) : $5 ), ( *($2 + [36]) ? uint_32($7 >> [1]) : $5 ))
	if ( (*($2 + [32]) & [1]) ){ goto $label$17 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $12(*($6))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $12(*($2 + [24]))
	if ( (*($2) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($2) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $12(*($2 + [8]))
	
.LABEL $label$13
	$global$0 = ($2 + [48])
	return [0]
}

void .FUNC $128 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [256])
	$global$0 = $4
	CALL require_auth(*($0))
	$5 = *($0)
	*(($6 = ($4 + [72]))) = (int_64)0
	*($4 + [56]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [48]) = (int_64)0
	*($4 + [60]) = [0]
	*($4 + [64]) = [0]
	$7 = ($0 + [8])
	CALL $72(($4 + [208]), $7, $5, ($4 + [32]))
	*($4 + [208]) = *($1)
	*($4 + [216]) = *($2)
	*($4 + [224]) = *($3)
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*($6) = [0]
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = [0]
	$5 = *($0)
	*(($4 + [48])) = $5
	*(($4 + [88])) = $5
	*(($4 + [136])) = $5
	*($4 + [32]) = $5
	*($4 + [40]) = $5
	*($4 + [80]) = $5
	*($4 + [128]) = $5
	*(($4 + [164])) = [0]
	*(($4 + [156])) = (int_64)0
	*(($4 + [176])) = $5
	*(($4 + [184])) = (int_64)-1
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [204])) = [0]
	*($4 + [168]) = $5
	if ( CALL $129(($4 + [32]), $1) ){ goto $label$5 }
	*((($4 + [16]) + [8])) = [0]
	*($4 + [16]) = (int_64)0
	$3 = CALL $2([13225])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$8 }
	*($4 + [16]) = ($3 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $3 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$8 = (($3 + [16]) & [-16])
	$6 = CALL $10($8)
	*($4 + [16]) = ($8 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $3
	
.LABEL $label$7
	CALL memcpy($6, [13225], $3)
	
.LABEL $label$6
	*(($6 + $3)) = [0]
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$3 = CALL $2([13248])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$11 }
	*($4) = ($3 << [1])
	$6 = ($4 | [1])
	if ( $3 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$8 = (($3 + [16]) & [-16])
	$6 = CALL $10($8)
	*($4) = ($8 | [1])
	*($4 + [8]) = $6
	*($4 + [4]) = $3
	
.LABEL $label$10
	CALL memcpy($6, [13248], $3)
	
.LABEL $label$9
	*(($6 + $3)) = [0]
	CALL $130(($4 + [32]), $1, ($4 + [16]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$12 }
	CALL $12(*($4 + [8]))
	
.LABEL $label$12
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $12(*($4 + [24]))
	
.LABEL $label$5
	if ( CALL $129(($4 + [32]), $2) ){ goto $label$13 }
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$1 = CALL $2([13262])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$16 }
	*($4 + [16]) = ($1 << [1])
	$3 = (($4 + [16]) | [1])
	if ( $1 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$6 = (($1 + [16]) & [-16])
	$3 = CALL $10($6)
	*($4 + [16]) = ($6 | [1])
	*($4 + [24]) = $3
	*($4 + [20]) = $1
	
.LABEL $label$15
	CALL memcpy($3, [13262], $1)
	
.LABEL $label$14
	*(($3 + $1)) = [0]
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$1 = CALL $2([13248])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$19 }
	*($4) = ($1 << [1])
	$3 = ($4 | [1])
	if ( $1 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$6 = (($1 + [16]) & [-16])
	$3 = CALL $10($6)
	*($4) = ($6 | [1])
	*($4 + [8]) = $3
	*($4 + [4]) = $1
	
.LABEL $label$18
	CALL memcpy($3, [13248], $1)
	
.LABEL $label$17
	*(($3 + $1)) = [0]
	CALL $130(($4 + [32]), $2, ($4 + [16]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$20 }
	CALL $12(*($4 + [8]))
	
.LABEL $label$20
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$13 }
	CALL $12(*($4 + [24]))
	
.LABEL $label$13
	if ( CALL $129(($4 + [32]), $0) ){ goto $label$21 }
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$2 = CALL $2([13285])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$24 }
	*($4 + [16]) = ($2 << [1])
	$1 = (($4 + [16]) | [1])
	if ( $2 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $10($3)
	*($4 + [16]) = ($3 | [1])
	*($4 + [24]) = $1
	*($4 + [20]) = $2
	
.LABEL $label$23
	CALL memcpy($1, [13285], $2)
	
.LABEL $label$22
	*(($1 + $2)) = [0]
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$2 = CALL $2([13248])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$27 }
	*($4) = ($2 << [1])
	$1 = ($4 | [1])
	if ( $2 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $10($3)
	*($4) = ($3 | [1])
	*($4 + [8]) = $1
	*($4 + [4]) = $2
	
.LABEL $label$26
	CALL memcpy($1, [13248], $2)
	
.LABEL $label$25
	*(($1 + $2)) = [0]
	CALL $130(($4 + [32]), $0, ($4 + [16]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$28 }
	CALL $12(*($4 + [8]))
	
.LABEL $label$28
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$21 }
	CALL $12(*($4 + [24]))
	
.LABEL $label$21
	CALL $73($7, ($4 + [208]), *($0))
	CALL $131(($4 + [32]))
	$global$0 = ($4 + [256])
	return (unreachable)
	
.LABEL $label$4
	CALL $23($4)
	
.LABEL $label$3
	CALL $23(($4 + [16]))
	
.LABEL $label$2
	CALL $23(($4 + [16]))
	
.LABEL $label$1
	CALL $23(($4 + [16]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $286 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1360])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1360])
}

void .FUNC $287 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1360])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $4($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1344])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1344])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11956])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	*($3 + [1352]) = *($3 + [1344])
	CALL $175(($3 + [552]), ($3 + [1352]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1360])
}

void .FUNC $284 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1376])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	$0 = *($3 + [1352])
	*($3 + [1360]) = *($3 + [1344])
	*($3 + [1368]) = $0
	CALL $177(($3 + [552]), ($3 + [1368]), ($3 + [1360]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1376])
}

void .FUNC $285 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1376])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	$0 = *($3 + [1352])
	*($3 + [1360]) = *($3 + [1344])
	*($3 + [1368]) = $0
	CALL $180(($3 + [552]), ($3 + [1368]), ($3 + [1360]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1376])
}

void .FUNC $123 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($1))
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$5 = *($1)
	*($3) = $5
	*($3 + [8]) = $5
	$1 = CALL db_find_i64($5, $5, (int_64)-4352391049156317184, *($2))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	$4 = CALL $121($3, $1)
	if ( ((int_32)*($4 + [8]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [13204])
	CALL eosio_assert([0], [12567])
	CALL eosio_assert([0], [11218])
	
.LABEL $label$1
	$1 = [0]
	$2 = CALL db_next_i64(*($4 + [12]), ($3 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $121($3, $2)
	
.LABEL $label$3
	CALL $124($3, $4)
	*($0 + [4]) = $1
	*($0) = $3
	$1 = *($3 + [24])
	if ( ($1 == 0) ){ goto $label$4 }
	$2 = ($3 + [28])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $12($0)
	
.LABEL $label$8
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$7 }
	$4 = *(($3 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $1
	
.LABEL $label$5
	*($2) = $1
	CALL $12($4)
	
.LABEL $label$4
	$global$0 = ($3 + [48])
}

void .FUNC $122 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*(($5 = CALL $10([24])) + [8]) = $1
	*($5) = (int_64)0
	*($5) = *(*($3))
	CALL memcpy(($4 + [16]), $5, [8])
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-4352391049156317184, $2, $6, ($4 + [16]), [8])
	*($5 + [12]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [8]) = $5
	$6 = *($5)
	*($4 + [16]) = $6
	*($4 + [4]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [8]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $331(($1 + [24]), ($4 + [8]), ($4 + [16]), ($4 + [4]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [8])
	*($4 + [8]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $12($5)
	
.LABEL $label$5
	$global$0 = ($4 + [32])
}

void .FUNC $288 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1412]) = $2
	*($3 + [1408]) = $2
	$5 = ($2 + $4)
	*($3 + [1416]) = $5
	*($3 + [1400]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1416]))
	$2 = *($3 + [1412])
	
.LABEL $label$5
	CALL memcpy(($3 + [1400]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1412]) = $2
	*($3 + [1392]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *((($3 + [1408]) + [8]))
	$2 = *($3 + [1412])
	
.LABEL $label$6
	CALL memcpy(($3 + [1392]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1412]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1416]))
	$2 = *($3 + [1412])
	
.LABEL $label$7
	CALL memcpy(($3 + [1384]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1412]) = $2
	*($3 + [1376]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$5 = *((($3 + [1408]) + [8]))
	$2 = *($3 + [1412])
	
.LABEL $label$8
	CALL memcpy(($3 + [1376]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1412]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1412])
	
.LABEL $label$9
	CALL memcpy(($3 + [1368]), $2, [8])
	*($3 + [1412]) = ($2 + [8])
	*($3 + [1360]) = [0]
	*($3 + [1352]) = (int_64)0
	CALL $165(($3 + [1408]), ($3 + [1352]))
	*(($2 = ($3 + [8]))) = *((($3 + [1408]) + [8]))
	*($3) = *($3 + [1408])
	*(($5 = (($3 + [1424]) + [8]))) = *($2)
	*($3 + [1424]) = *($3)
	$2 = *($5)
	*((($3 + [1440]) + [8])) = $2
	*(($3 + [40])) = $2
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$1 = *($3 + [1424])
	*($3 + [32]) = $1
	*($3 + [1440]) = $1
	*(($3 + [56])) = $0
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*($3 + [48]) = $0
	*(($3 + [184])) = $0
	*(($3 + [180])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [220])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [270])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*($3 + [224]) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [288])) = $0
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*($3 + [320]) = $0
	*($3 + [368]) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [432])) = $0
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [462])) = [0]
	*(($3 + [460])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = [0]
	*(($3 + [500])) = [0]
	*(($3 + [504])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = (int_64)-1
	*(($3 + [544])) = [0]
	*(($3 + [548])) = [0]
	*(($3 + [552])) = [0]
	*($3 + [560]) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = (int_64)-1
	*(($3 + [648])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = (int_64)-1
	*(($3 + [688])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [712])) = $0
	*(($3 + [720])) = $0
	*(($3 + [728])) = (int_64)-1
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = $0
	*(($3 + [760])) = $0
	*(($3 + [768])) = (int_64)-1
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*($3 + [792]) = $0
	*(($3 + [800])) = [1]
	*(($3 + [808])) = (int_64)8238557860461690880
	*(($3 + [816])) = $0
	*(($3 + [824])) = $0
	*(($3 + [832])) = (int_64)-1
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = $0
	*(($3 + [864])) = $0
	*(($3 + [872])) = (int_64)-1
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = (int_64)-1
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = [0]
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = (int_64)-1
	*(($3 + [968])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [992])) = $0
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = (int_64)-1
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = (int_64)-1
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*($3 + [1072]) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = (int_64)-1
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*(($3 + [1112])) = [0]
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = (int_64)-1
	*(($3 + [1144])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = (int_64)-1
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = (int_64)-1
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = (int_64)-1
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = [0]
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = (int_64)-1
	*(($3 + [1328])) = [0]
	*(($3 + [1332])) = [0]
	*(($3 + [1336])) = [0]
	*($3 + [1344]) = $0
	CALL $64(($3 + [1344]), ($3 + [1400]), ($3 + [1392]), ($3 + [1384]), ($3 + [1376]), ($3 + [1368]), ($3 + [1352]))
	CALL $230(($3 + [16]))
	if ( ((*($3 + [1352]) & [1]) == 0) ){ goto $label$10 }
	CALL $12(*((($3 + [1352]) + [8])))
	
.LABEL $label$10
	$global$0 = ($3 + [1456])
}

void .FUNC $289 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $4($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1336])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1336])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11956])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	CALL $67(($3 + [1328]), ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1344])
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$7 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$8 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$9:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$7 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$6 }
	$11 = [-24]
	$3 = ($6 + [-24])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$6 = $3
	
.LABEL $label$6
	CALL eosio_assert([0], [12696])
	$11 = [-24]
	$3 = ($6 + [-24])
	$5 = *($4)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$10:
	$9 = *($6)
	*($6) = [0]
	$4 = *($3)
	*($3) = $9
	if ( ($4 == 0) ){ goto $label$11 }
	$8 = *($4 + [16])
	if ( ($8 == 0) ){ goto $label$12 }
	$12 = ($4 + [20])
	$10 = *($12)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = ($10 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$16 }
	CALL $12(*(($10 + [-4])))
	
.LABEL $label$16
	$10 = $9
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$15 }
	$9 = *(($4 + [16]))
	goto $label$13 
	
.LABEL $label$14
	$9 = $8
	
.LABEL $label$13
	*($12) = $8
	CALL $12($9)
	
.LABEL $label$12
	CALL $12($4)
	
.LABEL $label$11
	*($3 + [8]) = *($6 + [8])
	*(($3 + [16])) = *(($6 + [16]))
	$3 = ($3 + [24])
	$6 = ($6 + [24])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$10 }
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$17:
	$6 = ($6 + $11)
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$18 }
	$8 = *($4 + [16])
	if ( ($8 == 0) ){ goto $label$19 }
	$5 = ($4 + [20])
	$10 = *($5)
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$22:
	$9 = ($10 + [-12])
	if ( ((*($9) & [1]) == 0) ){ goto $label$23 }
	CALL $12(*(($10 + [-4])))
	
.LABEL $label$23
	$10 = $9
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$22 }
	$9 = *(($4 + [16]))
	goto $label$20 
	
.LABEL $label$21
	$9 = $8
	
.LABEL $label$20
	*($5) = $8
	CALL $12($9)
	
.LABEL $label$19
	CALL $12($4)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$17 }
	
.LABEL $label$3
	*(($0 + [28])) = $3
	CALL db_remove_i64(*($1 + [56]))
	$9 = *($1 + [60])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$25 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4849559493988974592, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$24 }
	
.LABEL $label$25
	CALL db_idx64_remove($9)
	
.LABEL $label$24
	$global$0 = ($2 + [16])
}

void .FUNC $183 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $10([208])
	CALL $356($3)
	*($3 + [176]) = $1
	CALL $401(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [180])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $358(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $327(($1 + [144]), *(($1 + [148])))
	$3 = *($1 + [124])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($1 + [128])) = $3
	CALL $12($3)
	
.LABEL $label$5
	$3 = *($1 + [112])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($1 + [116])) = $3
	CALL $12($3)
	
.LABEL $label$6
	if ( (*($1 + [32]) & [1]) ){ goto $label$11 }
	if ( (*($1 + [20]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $12(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $12(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*(($1 + [16])))
	
.LABEL $label$7
	CALL $12($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $125 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	*($2 + [36]) = [0]
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)4849559493988974592, $1)
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $126($2, $0)
	if ( ((int_32)*($3 + [52]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8947])
	CALL eosio_assert([0], [12567])
	CALL eosio_assert([0], [11218])
	
.LABEL $label$1
	$0 = CALL db_next_i64(*($3 + [56]), ($2 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	CALL $126($2, $0)
	
.LABEL $label$3
	CALL $127($2, $3)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$8 }
	$9 = *($8 + [16])
	if ( ($9 == 0) ){ goto $label$9 }
	$10 = ($8 + [20])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$11 }
	
.LOOP $label$12:
	$3 = ($0 + [-12])
	if ( ((*($3) & [1]) == 0) ){ goto $label$13 }
	CALL $12(*(($0 + [-4])))
	
.LABEL $label$13
	$0 = $3
	if ( ((int_32)$9 != (int_32)$3) ){ goto $label$12 }
	$3 = *(($8 + [16]))
	goto $label$10 
	
.LABEL $label$11
	$3 = $9
	
.LABEL $label$10
	*($10) = $9
	CALL $12($3)
	
.LABEL $label$9
	CALL $12($8)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$7 }
	$3 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$3 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $12($3)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12696])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $12($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $12($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = ($0 + [8])
	$4 = *($1)
	$6 = *(($0 + [36]))
	$5 = *(($0 + [32]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$9:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$8 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	if ( ((int_32)*($8 + [88]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	$9 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [16])), (int_64)-5915276602094125056, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $91($3, $7)
	if ( ((int_32)*($8 + [88]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$6
	$9 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	$6 = [0]
	$5 = *([0] + [12468])
	
.LOOP $label$11:
	*((($2 + [32]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$10 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)$9) ){ goto $label$11 }
	
.LABEL $label$10
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$3 }
	*($2) = ($6 << [1])
	$5 = ($2 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($2 + [8])) = [0]
	*($2) = $9
	*($2) = [0]
	$7 = ($2 | [1])
	goto $label$1 
	
.LABEL $label$3
	$3 = (($6 + [16]) & [-16])
	$5 = CALL $10($3)
	*($2) = ($3 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $6
	
.LABEL $label$2
	$3 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$12:
	*(($5 + $7)) = *((($2 + [32]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$12 }
	$7 = ($5 + $6)
	
.LABEL $label$1
	*($7) = [0]
	$7 = CALL $34($2, [0], [11706])
	$6 = ($7 + [8])
	*((($2 + [16]) + [8])) = *($6)
	*($2 + [16]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	$7 = CALL $31(($2 + [16]), [13306])
	$6 = ($7 + [8])
	*((($2 + [32]) + [8])) = *($6)
	*($2 + [32]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$13 }
	CALL eosio_assert([0], ( *($2 + [40]) ? (($2 + [32]) | [1]) : (*($2 + [32]) & [1]) ))
	
.LABEL $label$13
	if ( (*($2 + [32]) & [1]) ){ goto $label$18 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $12(*($2 + [40]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $12(*($2 + [24]))
	if ( (*($2) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((*($2) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $12(*($2 + [8]))
	
.LABEL $label$14
	$10 = ($0 + [48])
	$4 = *($1)
	$6 = *(($0 + [76]))
	$5 = *(($0 + [72]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$25 }
	
.LOOP $label$27:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$26 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$25 }
	if ( ((int_32)*($8 + [176]) == (int_32)$10) ){ goto $label$24 }
	CALL eosio_assert([0], [11551])
	$9 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$8 = [0]
	$7 = CALL db_find_i64(*($10), *(($0 + [56])), (int_64)-5915276602093076480, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$24 }
	$8 = CALL $57($10, $7)
	if ( ((int_32)*($8 + [176]) == (int_32)$10) ){ goto $label$24 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$24
	$9 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$22 }
	
.LABEL $label$23
	$6 = [0]
	$5 = *([0] + [12468])
	
.LOOP $label$29:
	*((($2 + [32]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$28 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)$9) ){ goto $label$29 }
	
.LABEL $label$28
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$21 }
	*($2) = ($6 << [1])
	$5 = ($2 | [1])
	goto $label$20 
	
.LABEL $label$22
	*(($2 + [8])) = [0]
	*($2) = $9
	*($2) = [0]
	$7 = ($2 | [1])
	goto $label$19 
	
.LABEL $label$21
	$3 = (($6 + [16]) & [-16])
	$5 = CALL $10($3)
	*($2) = ($3 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $6
	
.LABEL $label$20
	$3 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$30:
	*(($5 + $7)) = *((($2 + [32]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$30 }
	$7 = ($5 + $6)
	
.LABEL $label$19
	*($7) = [0]
	$7 = CALL $34($2, [0], [11706])
	$6 = ($7 + [8])
	*((($2 + [16]) + [8])) = *($6)
	*($2 + [16]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	$7 = CALL $31(($2 + [16]), [13347])
	$6 = ($7 + [8])
	*((($2 + [32]) + [8])) = *($6)
	*($2 + [32]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$31 }
	CALL eosio_assert([0], ( *($2 + [40]) ? (($2 + [32]) | [1]) : (*($2 + [32]) & [1]) ))
	
.LABEL $label$31
	if ( (*($2 + [32]) & [1]) ){ goto $label$36 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL $12(*($2 + [40]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL $12(*($2 + [24]))
	if ( (*($2) & [1]) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	if ( ((*($2) & [1]) == 0) ){ goto $label$32 }
	
.LABEL $label$33
	CALL $12(*($2 + [8]))
	
.LABEL $label$32
	$4 = *($0)
	*($2 + [16]) = $1
	CALL $183(($2 + [32]), $10, $4, ($2 + [16]))
	$global$0 = ($2 + [48])
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	if ( (CALL $129($0, $1) == 0) ){ goto $label$15 }
	$3 = ($0 + [48])
	$4 = *($1)
	$6 = *(($0 + [76]))
	$5 = *(($0 + [72]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$13 }
	
.LOOP $label$16:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$4) ){ goto $label$14 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$15
	if ( (CALL $90($0, $1) == 0) ){ goto $label$17 }
	$3 = ($0 + [8])
	$4 = *($1)
	$6 = *(($0 + [36]))
	$5 = *(($0 + [32]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	
.LOOP $label$18:
	$1 = ($6 + [-24])
	$7 = *($1)
	if ( ((int_64)*($7) == (int_64)$4) ){ goto $label$10 }
	$6 = $1
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$18 }
	goto $label$9 
	
.LABEL $label$17
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$11 }
	$6 = [0]
	$0 = *([0] + [12468])
	
.LOOP $label$20:
	*((($2 + [32]) + ($1 = $6))) = *(($0 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$6 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$19 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$20 }
	
.LABEL $label$19
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$8 }
	*($2) = ($6 << [1])
	$0 = ($2 | [1])
	goto $label$7 
	
.LABEL $label$14
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$13 }
	if ( ((int_32)*($7 + [176]) == (int_32)$3) ){ goto $label$21 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$21
	*($2 + [36]) = $7
	goto $label$12 
	
.LABEL $label$13
	$1 = CALL db_find_i64(*($3), *(($0 + [56])), (int_64)-5915276602093076480, $4)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$22 }
	$1 = CALL $57($3, $1)
	if ( ((int_32)*($1 + [176]) == (int_32)$3) ){ goto $label$23 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$23
	*($2 + [36]) = $1
	goto $label$12 
	
.LABEL $label$22
	*($2 + [36]) = [0]
	
.LABEL $label$12
	*($2 + [32]) = $3
	$4 = *($0)
	$1 = *($2 + [36])
	*($2 + [16]) = ($2 + [32])
	if ( $1 ){ goto $label$24 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$24
	CALL $186($3, $1, $4, ($2 + [16]))
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$11
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	*($2) = [0]
	$1 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$10
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$9 }
	if ( ((int_32)*($7 + [88]) == (int_32)$3) ){ goto $label$25 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$25
	*($2 + [36]) = $7
	goto $label$4 
	
.LABEL $label$9
	$1 = CALL db_find_i64(*($3), *(($0 + [16])), (int_64)-5915276602094125056, $4)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL $91($3, $1)
	if ( ((int_32)*($1 + [88]) == (int_32)$3) ){ goto $label$26 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$26
	*($2 + [36]) = $1
	goto $label$4 
	
.LABEL $label$8
	$5 = (($6 + [16]) & [-16])
	$0 = CALL $10($5)
	*($2) = ($5 | [1])
	*($2 + [8]) = $0
	*($2 + [4]) = $6
	
.LABEL $label$7
	$5 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$27:
	*(($0 + $1)) = *((($2 + [32]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$5 != (int_32)$1) ){ goto $label$27 }
	$1 = ($0 + $6)
	
.LABEL $label$6
	*($1) = [0]
	$1 = CALL $34($2, [0], [14071])
	$6 = ($1 + [8])
	*((($2 + [16]) + [8])) = *($6)
	*($2 + [16]) = *($1)
	*($1) = (int_64)0
	*($6) = [0]
	$1 = CALL $31(($2 + [16]), [13557])
	$0 = ($1 + [8])
	*(($6 = (($2 + [32]) + [8]))) = *($0)
	*($2 + [32]) = *($1)
	*($1) = (int_64)0
	*($0) = [0]
	CALL eosio_assert([0], ( *($6) ? (($2 + [32]) | [1]) : (*($2 + [32]) & [1]) ))
	if ( (*($2 + [32]) & [1]) ){ goto $label$29 }
	if ( (*($2 + [16]) & [1]) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$29
	CALL $12(*($6))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$28
	CALL $12(*($2 + [24]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	*($2 + [36]) = [0]
	
.LABEL $label$4
	*($2 + [32]) = $3
	$4 = *($0)
	$1 = *($2 + [36])
	*($2 + [16]) = ($2 + [32])
	if ( $1 ){ goto $label$30 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$30
	CALL $187($3, $1, $4, ($2 + [16]))
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$3
	if ( (*($2) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	CALL $12(*($2 + [8]))
	$global$0 = ($2 + [48])
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [24]) = $3
	CALL $65(($2 + [8]), ($2 + [24]), $1, [9512])
	$4 = ($0 + [32])
	if ( (CALL $129($4, $1) == 0) ){ goto $label$14 }
	*($2 + [24]) = (int_64)-2688959060979482624
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$4 = CALL $2([9516])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	$5 = ($0 + [776])
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$13 }
	*($2 + [8]) = ($4 << [1])
	$0 = (($2 + [8]) | [1])
	if ( $4 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	if ( (CALL $90($4, $1) == 0) ){ goto $label$15 }
	CALL $56($4, $1)
	*($2 + [24]) = (int_64)-2688959060979482624
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$4 = CALL $2([9516])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	$5 = ($0 + [776])
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$10 }
	*($2 + [8]) = ($4 << [1])
	$0 = (($2 + [8]) | [1])
	if ( $4 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$15
	CALL $182($4, $1)
	*($2 + [24]) = (int_64)-2688959060979482624
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	$4 = CALL $2([9516])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = ($0 + [776])
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$7 }
	*($2 + [8]) = ($4 << [1])
	$0 = (($2 + [8]) | [1])
	if ( $4 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$13
	$6 = (($4 + [16]) & [-16])
	$0 = CALL $10($6)
	*($2 + [8]) = ($6 | [1])
	*($2 + [16]) = $0
	*($2 + [12]) = $4
	
.LABEL $label$12
	CALL memcpy($0, [9516], $4)
	
.LABEL $label$11
	*(($0 + $4)) = [0]
	CALL $94($5, $1, ($2 + [24]), ($2 + [8]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$4 }
	CALL $12(*($2 + [16]))
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$10
	$6 = (($4 + [16]) & [-16])
	$0 = CALL $10($6)
	*($2 + [8]) = ($6 | [1])
	*($2 + [16]) = $0
	*($2 + [12]) = $4
	
.LABEL $label$9
	CALL memcpy($0, [9516], $4)
	
.LABEL $label$8
	*(($0 + $4)) = [0]
	CALL $94($5, $1, ($2 + [24]), ($2 + [8]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$4 }
	CALL $12(*($2 + [16]))
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$0 = CALL $10($6)
	*($2 + [8]) = ($6 | [1])
	*($2 + [16]) = $0
	*($2 + [12]) = $4
	
.LABEL $label$6
	CALL memcpy($0, [9516], $4)
	
.LABEL $label$5
	*(($0 + $4)) = [0]
	CALL $94($5, $1, ($2 + [24]), ($2 + [8]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$4 }
	CALL $12(*($2 + [16]))
	
.LABEL $label$4
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$3
	CALL $23(($2 + [8]))
	
.LABEL $label$2
	CALL $23(($2 + [8]))
	
.LABEL $label$1
	CALL $23(($2 + [8]))
}

void .FUNC $187 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = *($1)
	CALL $406($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	$3 = *($1 + [16])
	$7 = ( *(($1 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [62])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [16])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	$9 = *($1 + [28])
	$9 = ( *(($1 + [32])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$3 = ($9 + $3)
	$8 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [28])
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $4($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $7
	*($5 + [48]) = $9
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [12])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [56])
	*($5 + [60]) = ($1 + [72])
	CALL $407(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [92]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $5($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [64])
}

void .FUNC $186 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$6 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $6
	*($5 + [56]) = $6
	$6 = *($1)
	*($5 + [24]) = $6
	CALL $404($3, $1)
	$7 = ($1 + [136])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $7
	*($5 + [88]) = $1
	$8 = ($1 + [8])
	*($5 + [92]) = $8
	$9 = ($1 + [20])
	*($5 + [96]) = $9
	$10 = ($1 + [32])
	*($5 + [100]) = $10
	$11 = ($1 + [48])
	*($5 + [104]) = $11
	$12 = ($1 + [64])
	*($5 + [108]) = $12
	$13 = ($1 + [80])
	*($5 + [112]) = $13
	$14 = ($1 + [96])
	*($5 + [116]) = $14
	$15 = ($1 + [112])
	*($5 + [120]) = $15
	$16 = ($1 + [124])
	*($5 + [124]) = $16
	$17 = ($1 + [144])
	*($5 + [132]) = $17
	$18 = ($1 + [160])
	*($5 + [136]) = $18
	$19 = ($1 + [168])
	*($5 + [140]) = $19
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $4($3)
	$2 = *($5 + [72])
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $8
	*($5 + [96]) = $9
	*($5 + [100]) = $10
	*($5 + [104]) = $11
	*($5 + [108]) = $12
	*($5 + [112]) = $13
	*($5 + [116]) = $14
	*($5 + [120]) = $15
	*($5 + [124]) = $16
	*($5 + [128]) = $7
	*($5 + [132]) = $17
	*($5 + [136]) = $18
	*($5 + [140]) = $19
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL $5($4)
	
.LABEL $label$6
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $405(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $358 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$3 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$2 = *($4)
	*($4) = [0]
	*($1) = $2
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$3 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $3
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = ($3 + [-24])
	
.LOOP $label$9:
	$7 = CALL $321($1)
	$1 = ($1 + [-24])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $12($4)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $359 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [136])
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076480, $10, $9, ($6 + [8]))
	*(*($7 + [4]) + [184]) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [64]) + (int_64)*($8 + [48])) + (int_64)*($8 + [80]))
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076479, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [188])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [160]) / (int_64)1000000) & (int_64)4294967295)
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076478, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [192])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [160]) / (int_64)1000000) & (int_64)4294967295)
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076477, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [196])) = $8
	$0 = *($0)
	$7 = *($0 + [12])
	$9 = *($7)
	$10 = *(*($0 + [8]))
	$11 = *(*($0) + [8])
	*($6 + [8]) = *($7 + [96])
	$7 = CALL db_idx64_store($11, (int_64)-5915276602093076476, $10, $9, ($6 + [8]))
	*((*($0 + [4]) + [200])) = $7
	$global$0 = ($6 + [16])
}

void .FUNC $354 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $301(*($1), *($0 + [4]))
	CALL $301(*($1), *($0 + [8]))
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $301(*($1), *($0 + [16]))
	CALL $301(*($1), *($0 + [20]))
	CALL $301(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $355 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [72]) & [1]) == 0) ){ goto $label$12 }
	CALL $12(*(($1 + [80])))
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $12(*(($1 + [68])))
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $12(*(($1 + [56])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $12(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $12(*(($1 + [16])))
	
.LABEL $label$4
	CALL $12($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $12($1)
	
.LABEL $label$13
	return $0
}

int_32 .FUNC $356 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	*($0) = (int_64)0
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*($0 + [48]) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	$1 = [0]
	*(($0 + [40])) = [0]
	*(($0 + [56])) = (int_64)1413891848
	$2 = (int_64)5523015
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$5 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9800])
	
.LABEL $label$1
	*($0 + [64]) = (int_64)0
	*(($0 + [72])) = (int_64)1413891848
	$2 = (int_64)5523015
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$10 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9800])
	
.LABEL $label$6
	*($0 + [80]) = (int_64)0
	*(($0 + [88])) = (int_64)1413891848
	$2 = (int_64)5523015
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$15 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9800])
	
.LABEL $label$11
	*($0 + [96]) = (int_64)0
	*(($0 + [104])) = (int_64)1413891848
	$2 = (int_64)5523015
	$1 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$2 = $3
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$2 = $3
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$20 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [9800])
	
.LABEL $label$16
	*($0 + [112 align=4]) = (int_64)0
	*($0 + [136]) = (int_64)50
	*(($0 + [120])) = (int_64)0
	*(($0 + [128])) = (int_64)0
	*(($1 = ($0 + [148]))) = (int_64)0
	*($0 + [144]) = $1
	*($0 + [160]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	*($0 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	return $0
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($0)
	$5 = ($1 + [8])
	CALL $25($5, (*(*($3 + [4]) + [4]) + [16]))
	$6 = ($1 + [20])
	CALL $25($6, (*(*($3 + [4]) + [4]) + [28]))
	$7 = *(*($3 + [4]) + [4])
	*($1 + [48]) = *($7 + [40])
	*(($1 + [56])) = *(($7 + [48]))
	$7 = *(*($3 + [4]) + [4])
	*($1 + [80]) = *($7 + [72])
	*(($1 + [88])) = *(($7 + [80]))
	$3 = *(*($3 + [4]) + [4])
	*($1 + [64]) = *($3 + [56])
	*(($1 + [72])) = *(($3 + [64]))
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	*(($3 = $2) + [72]) = [0]
	*($3) = ($3 + [72])
	*($3 + [20]) = $5
	*($3 + [16]) = $1
	*($3 + [24]) = $6
	$8 = ($1 + [32])
	*($3 + [28]) = $8
	$9 = ($1 + [48])
	*($3 + [32]) = $9
	$10 = ($1 + [64])
	*($3 + [36]) = $10
	$11 = ($1 + [80])
	*($3 + [40]) = $11
	$12 = ($1 + [96])
	*($3 + [44]) = $12
	$13 = ($1 + [112])
	*($3 + [48]) = $13
	$14 = ($1 + [124])
	*($3 + [52]) = $14
	$15 = ($1 + [136])
	*($3 + [56]) = $15
	$16 = ($1 + [144])
	*($3 + [60]) = $16
	$17 = ($1 + [160])
	*($3 + [64]) = $17
	$18 = ($1 + [168])
	*($3 + [68]) = $18
	CALL $298(($3 + [16]), $3)
	$7 = *($3 + [72])
	if ( ($7 <= [513]) ){ goto $label$2 }
	$2 = CALL $4($7)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $7)
	*($3 + [72]) = $3
	*($3 + [20]) = $5
	*($3 + [16]) = $1
	*($3 + [24]) = $6
	*($3 + [28]) = $8
	*($3 + [32]) = $9
	*($3 + [36]) = $10
	*($3 + [40]) = $11
	*($3 + [44]) = $12
	*($3 + [48]) = $13
	*($3 + [52]) = $14
	*($3 + [56]) = $15
	*($3 + [60]) = $16
	*($3 + [64]) = $17
	*($3 + [68]) = $18
	CALL $299(($3 + [16]), ($3 + [72]))
	$19 = *($1)
	*($1 + [180]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915276602093076480, *(*($0 + [8])), $19, $2, $7)
	if ( ($7 <= [513]) ){ goto $label$3 }
	CALL $5($2)
	
.LABEL $label$3
	if ( (uint_64)($19 <= *($4 + [16])) ){ goto $label$4 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$19 + (int_64)1) : ((uint_64)$19 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($3 + [20]) = $1
	*($3 + [28]) = $1
	*($3 + [24]) = *(($0 + [8]))
	*($3 + [16]) = $4
	*($3 + [72]) = ($3 + [16])
	CALL $359(($3 + [72]), ($4 + [36]), ($4 + [37]), ($4 + [38]), ($4 + [39]), ($4 + [40]))
	$global$0 = ($3 + [80])
}

int_32 .FUNC $350 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	*($0) = (int_64)0
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [20 align=4]) = (int_64)0
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$2 = CALL $2([0])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($1) = ($2 << [1])
	$3 = ($1 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$1 = (($2 + [16]) & [-16])
	$3 = CALL $10($1)
	*($0 + [20]) = ($1 | [1])
	*(($0 + [28])) = $3
	*(($0 + [24])) = $2
	
.LABEL $label$3
	CALL memcpy($3, [0], $2)
	
.LABEL $label$2
	$1 = [0]
	*(($3 + $2)) = [0]
	*(($0 + [40])) = (int_64)1413891848
	*($0 + [32]) = (int_64)0
	$4 = (int_64)5523015
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$4 = $5
	$2 = $1
	$1 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$4 = $5
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$6 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$2 = ((int_32)$1 < (int_32)[6])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$9 }
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [9800])
	
.LABEL $label$5
	*($0 + [48 align=4]) = (int_64)0
	*($0 + [72 align=4]) = (int_64)0
	*($0 + [88]) = (int_64)0
	*($0 + [96]) = [0]
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = (int_64)0
	*(($0 + [80])) = [0]
	return $0
	
.LABEL $label$1
	CALL $23($1)
	return (unreachable)
}

void .FUNC $351 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$4 = *($0)
	$5 = ($1 + [8])
	CALL $25($5, *($3 + [4]))
	$6 = ($1 + [20])
	CALL $25($6, *($3 + [8]))
	$7 = *($3 + [12])
	*($1 + [32]) = *($7)
	*(($1 + [40])) = *(($7 + [8]))
	$8 = ($1 + [60])
	CALL $25($8, *($3 + [16]))
	$9 = ($1 + [72])
	CALL $25($9, *($3 + [20]))
	*($1 + [88]) = *(*($3 + [24]))
	*($1 + [96]) = *(*($3 + [28]))
	*(($3 = $2) + [16]) = [0]
	*($3) = ($3 + [16])
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	*($3 + [32]) = $6
	$10 = ($1 + [32])
	*($3 + [36]) = $10
	$11 = ($1 + [48])
	*($3 + [40]) = $11
	*($3 + [44]) = $8
	*($3 + [48]) = $9
	$12 = ($1 + [88])
	*($3 + [52]) = $12
	$13 = ($1 + [96])
	*($3 + [56]) = $13
	CALL $353(($3 + [24]), $3)
	$7 = *($3 + [16])
	if ( ($7 <= [513]) ){ goto $label$2 }
	$2 = CALL $4($7)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $7)
	*($3 + [16]) = $3
	*($3 + [28]) = $5
	*($3 + [24]) = $1
	*($3 + [32]) = $6
	*($3 + [36]) = $10
	*($3 + [40]) = $11
	*($3 + [44]) = $8
	*($3 + [48]) = $9
	*($3 + [52]) = $12
	*($3 + [56]) = $13
	CALL $354(($3 + [24]), ($3 + [16]))
	$14 = *($1)
	*($1 + [104]) = CALL db_store_i64(*($4 + [8]), (int_64)4148595222869180416, *(*($0 + [8])), $14, $2, $7)
	if ( ($7 <= [513]) ){ goto $label$3 }
	CALL $5($2)
	
.LABEL $label$3
	if ( (uint_64)($14 <= *($4 + [16])) ){ goto $label$4 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$14 = *(($4 + [8]))
	$15 = *(*(($0 + [8])))
	$16 = *($1)
	*($3 + [24]) = *($1 + [32])
	*($1 + [108]) = CALL db_idx64_store($14, (int_64)4148595222869180416, $15, $16, ($3 + [24]))
	$global$0 = ($3 + [64])
}

void .FUNC $352 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $10(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $355(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $353 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = (*($2) + [8])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [4])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [8])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$1 = ($1 + [16])
	*($2) = $1
	$4 = *($3)
	$3 = *($0 + [16])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$6
	$4 = *($3)
	$3 = *($0 + [20])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$8 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$8
	$3 = *($0)
	$0 = *($0 + [24])
	$5 = (CASTING uint_64)(uint_32 ( *($0 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	*($2) = $1
	$0 = *($0)
	$0 = ( *(($0 + [4])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$10 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$10
	*($2) = ($1 + [9])
}

void .FUNC $29 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $30($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $310 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($1 + [56])))
	
.LABEL $label$11
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $12($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $311 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *($3 + [16])
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($3), *($3 + [8]), (int_64)4982429584927490048, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $68($3, $5)
	*($2 + [12]) = [0]
	*($2 + [8]) = $3
	$4 = *(*(CALL $314(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [16])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11351])
	$4 = *(($3 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [16])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	*($1 + [8]) = *(*($0 + [4]))
	*($1 + [16]) = *(*($0 + [8]))
	*($1 + [24]) = *(*($0 + [12]))
	*($1 + [32]) = *(*($0 + [16]))
	*($1 + [40]) = *(*($0 + [20]))
	CALL $25(($1 + [48]), *($0 + [24]))
	$global$0 = ($2 + [16])
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $23 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $18([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $26($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $10($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $10(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $12($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $10($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $12($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $329 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $165(*($1), *($0 + [20]))
	CALL $165(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[1]) ){ goto $label$9 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, $1, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $328 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $10([112])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56 align=4]) = (int_64)0
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [72 align=4]) = (int_64)0
	*($5 + [88]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [68])
	*($3 + [68]) = ($5 + [80])
	*($3 + [72]) = ($5 + [84])
	CALL $329(($3 + [40]), ($3 + [32]))
	*($5 + [92]) = $1
	*($5 + [96 align=4]) = (int_64)-1
	*($5 + [104]) = [-1]
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $330(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [68]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($1 + [76])))
	
.LABEL $label$11
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$12 }
	CALL $12(*(($1 + [64])))
	
.LABEL $label$12
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $193 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [120]) = $1
	*((($3 + [80]) + [32])) = [0]
	*($3 + [88]) = $1
	*($3 + [96]) = (int_64)-1
	*($3 + [104]) = (int_64)0
	*($3 + [80]) = *($0)
	$1 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$4 = CALL $146(($3 + [80]), $1), [14280]
	if ( ((int_64)*($4)) >= (int_64)*($2)) ){ goto $label$1 }
	CALL eosio_assert([0], [14304])
	$1 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	
.LABEL $label$1
	*((($3 + [40]) + [32])) = [0]
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	$5 = *($0)
	*($3 + [40]) = $5
	*($3 + [48]) = $1
	$6 = CALL db_find_i64($5, $1, (int_64)-4157508551318700032, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $191(($3 + [40]), $6) + [32]) == (int_32)($3 + [40])) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9882])
	
.LABEL $label$2
	$1 = *($0)
	*($3 + [128]) = $2
	CALL $220(($3 + [80]), $4, $1, ($3 + [128]))
	$7 = CALL $129(($0 + [32]), ($3 + [120]))
	$1 = *($3 + [120])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$6 = [0]
	$8 = *([0] + [12468])
	
.LOOP $label$9:
	*((($3 + [128]) + ($4 = $6))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$6 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$8 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$9 }
	
.LABEL $label$8
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$6 }
	*($3 + [8]) = ($6 << [1])
	$8 = (($3 + [8]) | [1])
	goto $label$5 
	
.LABEL $label$7
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [8]) = [0]
	$4 = (($3 + [8]) | [1])
	goto $label$4 
	
.LABEL $label$6
	$9 = (($6 + [16]) & [-16])
	$8 = CALL $10($9)
	*($3 + [8]) = ($9 | [1])
	*($3 + [16]) = $8
	*($3 + [12]) = $6
	
.LABEL $label$5
	$9 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$10:
	*(($8 + $4)) = *((($3 + [128]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	$4 = ($8 + $6)
	
.LABEL $label$4
	*($4) = [0]
	$4 = CALL $34(($3 + [8]), [0], [14322])
	$6 = ($4 + [8])
	*((($3 + [24]) + [8])) = *($6)
	*($3 + [24]) = *($4)
	*($4) = (int_64)0
	*($6) = [0]
	$4 = CALL $31(($3 + [24]), [14224])
	$6 = ($4 + [8])
	*((($3 + [128]) + [8])) = *($6)
	*($3 + [128]) = *($4)
	*($4) = (int_64)0
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$17 }
	$4 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$4 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $12(*($3 + [136]))
	if ( ((*($3 + [24]) & $4) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( (*($3 + [24]) & $4) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	CALL $12(*($3 + [32]))
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $12(*($3 + [16]))
	
.LABEL $label$11
	$10 = ($0 + [80])
	$1 = *($3 + [120])
	$6 = *(($0 + [108]))
	$8 = *(($0 + [104]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$24 }
	
.LOOP $label$26:
	$4 = ($6 + [-24])
	$7 = *($4)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$25 }
	$6 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$24 }
	if ( ((int_32)*($7 + [176]) == (int_32)$10) ){ goto $label$23 }
	CALL eosio_assert([0], [11551])
	$5 = (int_64)0
	$1 = *($3 + [120])
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$7 = [0]
	$4 = CALL db_find_i64(*($10), *(($0 + [88])), (int_64)-5915276602093076480, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$23 }
	$7 = CALL $57($10, $4)
	if ( ((int_32)*($7 + [176]) == (int_32)$10) ){ goto $label$23 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$23
	$5 = (int_64)0
	$1 = *($3 + [120])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$21 }
	
.LABEL $label$22
	$6 = [0]
	$8 = *([0] + [12468])
	
.LOOP $label$28:
	*((($3 + [128]) + ($4 = $6))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$6 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$27 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)$5) ){ goto $label$28 }
	
.LABEL $label$27
	*(($3 + [16])) = [0]
	*($3 + [8]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$20 }
	*($3 + [8]) = ($6 << [1])
	$8 = (($3 + [8]) | [1])
	goto $label$19 
	
.LABEL $label$21
	*(($3 + [16])) = [0]
	*($3 + [8]) = $5
	*($3 + [8]) = [0]
	$4 = (($3 + [8]) | [1])
	goto $label$18 
	
.LABEL $label$20
	$9 = (($6 + [16]) & [-16])
	$8 = CALL $10($9)
	*($3 + [8]) = ($9 | [1])
	*($3 + [16]) = $8
	*($3 + [12]) = $6
	
.LABEL $label$19
	$9 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$29:
	*(($8 + $4)) = *((($3 + [128]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$29 }
	$4 = ($8 + $6)
	
.LABEL $label$18
	*($4) = [0]
	$4 = CALL $34(($3 + [8]), [0], [14322])
	$6 = ($4 + [8])
	*((($3 + [24]) + [8])) = *($6)
	*($3 + [24]) = *($4)
	*($4) = (int_64)0
	*($6) = [0]
	$4 = CALL $31(($3 + [24]), [14260])
	$6 = ($4 + [8])
	*((($3 + [128]) + [8])) = *($6)
	*($3 + [128]) = *($4)
	*($4) = (int_64)0
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$36 }
	$4 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$4 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL $12(*($3 + [136]))
	if ( ((*($3 + [24]) & $4) == 0) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	if ( (*($3 + [24]) & $4) ){ goto $label$32 }
	
.LABEL $label$33
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$30 }
	goto $label$31 
	
.LABEL $label$32
	CALL $12(*($3 + [32]))
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL $12(*($3 + [16]))
	
.LABEL $label$30
	if ( ((int_64)*(($7 + [56])) != (int_64)*(($2 + [8]))) ){ goto $label$41 }
	if ( ((int_64)*($7 + [48]) < (int_64)*($2)) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	CALL eosio_assert([0], [14395])
	if ( ((int_64)*($7 + [48]) >= (int_64)*($2)) ){ goto $label$39 }
	
.LABEL $label$40
	CALL eosio_assert([0], [14361])
	$1 = *($0)
	*($3 + [128]) = $2
	if ( $7 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$39
	$1 = *($0)
	*($3 + [128]) = $2
	if ( $7 ){ goto $label$37 }
	
.LABEL $label$38
	CALL eosio_assert([0], [10691])
	
.LABEL $label$37
	CALL $221($10, $7, $1, ($3 + [128]))
	$8 = *($3 + [64])
	if ( ($8 == 0) ){ goto $label$42 }
	$9 = ($3 + [68])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$44 }
	
.LOOP $label$45:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$46 }
	CALL $12($6)
	
.LABEL $label$46
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$45 }
	$4 = *(($3 + [64]))
	goto $label$43 
	
.LABEL $label$44
	$4 = $8
	
.LABEL $label$43
	*($9) = $8
	CALL $12($4)
	
.LABEL $label$42
	$8 = *($3 + [104])
	if ( ($8 == 0) ){ goto $label$47 }
	$9 = ($3 + [108])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$49 }
	
.LOOP $label$50:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$51 }
	CALL $12($6)
	
.LABEL $label$51
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$50 }
	$4 = *(($3 + [104]))
	goto $label$48 
	
.LABEL $label$49
	$4 = $8
	
.LABEL $label$48
	*($9) = $8
	CALL $12($4)
	
.LABEL $label$47
	$global$0 = ($3 + [144])
}

int_32 .FUNC $321 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $327(($1 + [144]), *(($1 + [148])))
	$2 = *($1 + [124])
	if ( ($2 == 0) ){ goto $label$2 }
	*(($1 + [128])) = $2
	CALL $12($2)
	
.LABEL $label$2
	$2 = *($1 + [112])
	if ( ($2 == 0) ){ goto $label$3 }
	*(($1 + [116])) = $2
	CALL $12($2)
	
.LABEL $label$3
	if ( (*($1 + [32]) & [1]) ){ goto $label$8 }
	if ( (*($1 + [20]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $12(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $12(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $12(*(($1 + [16])))
	
.LABEL $label$4
	CALL $12($1)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $320 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [11218])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [100]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)7464606431203819521, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [100])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = *($1 + [8])
	$3 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$6 }
	$3 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$2 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)7464606431203819520, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $328($7, $2)
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	*(($4 + [100])) = $5
	
.LABEL $label$3
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $323 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($5 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$6 = ($4 + ((int_32)$7 * (int_32)[24]))
	$8 = ($1 + [24])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$1 = (($4 + $5) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$4 = *($3 + [8])
	if ( ($4 == 0) ){ goto $label$11 }
	$0 = ($3 + [12])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($7 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL $12(*(($7 + [-4])))
	
.LABEL $label$15
	$7 = $1
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$14 }
	$1 = *(($3 + [8]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $4
	
.LABEL $label$12
	*($0) = $4
	CALL $12($1)
	
.LABEL $label$11
	CALL $12($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $12($5)
	
.LABEL $label$16
	(unreachable)
}

int_32 .FUNC $322 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [11862])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$5 = *($1)
	$7 = *($1 + [4])
	$6 = ((int_32)($7 - $5) / (int_32)[12])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $324($1, ($2 - $6))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$6 = ($5 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($7 + [-12])
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($7 + [-4])))
	
.LABEL $label$9
	$7 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $6
	$7 = $6
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$10:
	CALL $165($0, $2)
	$2 = ($2 + [12])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$10 }
	
.LABEL $label$3
	return $0
}

void .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $322(*($1), *($0 + [8]))
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $324 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[12]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[12])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$2 = ((int_32)($2 - $4) / (int_32)[12])
	if ( ((uint_32)$2 > (uint_32)[178956969]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL $10(((int_32)$6 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[12]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$4 = ($2 + ((int_32)$6 * (int_32)[12]))
	$3 = ($2 + ((int_32)$3 * (int_32)[12]))
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = [0]
	$6 = ($6 + [12])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$5 = ($3 + ((int_32)$1 * (int_32)[12]))
	$2 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = ($6 + [-4])
	*(($3 + [-4])) = *($1)
	$6 = ($6 + [-12])
	*(($3 = ($3 + [-12]))) = *($6)
	*($6) = (int_64)0
	*($1) = [0]
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $3
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = ($2 + [-12])
	if ( ((*($6) & [1]) == 0) ){ goto $label$13 }
	CALL $12(*(($2 + [-4])))
	
.LABEL $label$13
	$2 = $6
	if ( ((int_32)$1 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$14 }
	CALL $12($1)
	
.LABEL $label$14
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $327($0, *($1))
	CALL $327($0, *($1 + [4]))
	if ( ((*(($1 + [24])) & [1]) == 0) ){ goto $label$2 }
	CALL $12(*(($1 + [32])))
	
.LABEL $label$2
	CALL $12($1)
	
.LABEL $label$1
}

void .FUNC $326 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($5 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$6 = ($4 + ((int_32)$7 * (int_32)[24]))
	$8 = ($1 + [24])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$1 = (($4 + $5) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$4 = *($3 + [16])
	if ( ($4 == 0) ){ goto $label$11 }
	$0 = ($3 + [20])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($7 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL $12(*(($7 + [-4])))
	
.LABEL $label$15
	$7 = $1
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$14 }
	$1 = *(($3 + [16]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $4
	
.LABEL $label$12
	*($0) = $4
	CALL $12($1)
	
.LABEL $label$11
	CALL $12($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $12($5)
	
.LABEL $label$16
	(unreachable)
}

void .FUNC $101 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	CALL $56(($0 + [32]), $1)
	*($4 + [8]) = ($0 + [840])
	CALL $97($4, ($4 + [8]), $1)
	$5 = ($0 + [776])
	$0 = *($4 + [4])
	if ( ($0 == 0) ){ goto $label$2 }
	if ( ((int_64)*($0 + [16]) != (int_64)*($1)) ){ goto $label$2 }
	
.LOOP $label$3:
	if ( ((int_64)*($0 + [8]) == (int_64)*($2)) ){ goto $label$1 }
	CALL $98($4)
	$0 = *($4 + [4])
	if ( ($0 == 0) ){ goto $label$2 }
	if ( ((int_64)*($0 + [16]) == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$2
	CALL $94($5, $1, $2, $3)
	
.LABEL $label$1
	CALL $95($5, $1)
	$global$0 = ($4 + [16])
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [24])
	$4 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-24] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [24])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $51($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [12]) = $3
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	$0 = ($4 - $3)
	if ( ((int_32)$0 > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	$4 = ($3 + [8])
	*($2 + [12]) = $4
	$7 = ($1 + [8])
	if ( ((int_32)($0 + [-8]) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = ($3 + [16])
	*($2 + [12]) = $4
	*($2 + [24]) = *(($1 + [16]))
	if ( ((int_32)($0 + [-16]) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [24]), [8])
	*($2 + [12]) = ($3 + [24])
	CALL $301(($2 + [8]), $6)
	$global$0 = ($2 + [32])
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [60]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12696])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	if ( ((*($6 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $12(*(($6 + [32])))
	
.LABEL $label$13
	CALL $12($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$16 }
	CALL $12(*(($9 + [32])))
	
.LABEL $label$16
	CALL $12($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [64]))
	$9 = *($1 + [68])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4148594918074220544, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$9 = *(($1 + [72]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$20 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4148594918074220545, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$19 }
	
.LABEL $label$20
	CALL db_idx64_remove($9)
	
.LABEL $label$19
	$global$0 = ($2 + [16])
}

void .FUNC $102 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = ($0 + [24])
	$5 = *($2)
	$7 = *(($0 + [52]))
	$6 = *(($0 + [48]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$7:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$6 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*(($9 + [100])) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	$4 = [1]
	if ( (CALL has_auth(*($0)) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [32])), (int_64)4148595222869180416, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $96($4, $8)
	if ( ((int_32)*($9 + [100]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	$4 = [1]
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [12749])
	$4 = [1]
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = CALL has_auth(*(($9 + [88])))
	
.LABEL $label$1
	$5 = *(($9 + [88]))
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$11 }
	$7 = [0]
	$9 = *([0] + [12468])
	
.LOOP $label$13:
	*((($3 + [32]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$12 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$13 }
	
.LABEL $label$12
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$10 }
	*($3 + [16]) = ($7 << [1])
	$9 = (($3 + [16]) | [1])
	goto $label$9 
	
.LABEL $label$11
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	*($3 + [16]) = [0]
	$8 = (($3 + [16]) | [1])
	goto $label$8 
	
.LABEL $label$10
	$6 = (($7 + [16]) & [-16])
	$9 = CALL $10($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $9
	*($3 + [20]) = $7
	
.LABEL $label$9
	$6 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$14:
	*(($9 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$14 }
	$8 = ($9 + $7)
	
.LABEL $label$8
	*($8) = [0]
	$8 = CALL $34(($3 + [16]), [0], [13058])
	$7 = ($8 + [8])
	*((($3 + [32]) + [8])) = *($7)
	*($3 + [32]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$19 }
	$8 = [1]
	if ( (*($3 + [32]) & [1]) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL eosio_assert([0], ( *($3 + [40]) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $12(*($3 + [40]))
	if ( (*($3 + [16]) & $8) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	if ( ((*($3 + [16]) & $8) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $12(*($3 + [24]))
	
.LABEL $label$15
	*($3 + [8]) = ($0 + [64])
	CALL $97(($3 + [16]), ($3 + [8]), $1)
	$8 = *($3 + [20])
	if ( ($8 == 0) ){ goto $label$21 }
	if ( ((int_64)*($8 + [16]) != (int_64)*($1)) ){ goto $label$21 }
	
.LOOP $label$22:
	if ( ((int_64)*($8 + [8]) == (int_64)*($2)) ){ goto $label$20 }
	CALL $98(($3 + [16]))
	$8 = *($3 + [20])
	if ( ($8 == 0) ){ goto $label$21 }
	if ( ((int_64)*($8 + [16]) == (int_64)*($1)) ){ goto $label$22 }
	
.LABEL $label$21
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$20
	$5 = *($3 + [16])
	*($3 + [32]) = $5
	$8 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $8) ){ goto $label$23 }
	CALL eosio_assert([0], [12567])
	$8 = *($3 + [36])
	
.LABEL $label$23
	CALL $98(($3 + [32]))
	CALL $103(*($3 + [8]), $8)
	$global$0 = ($3 + [48])
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $5
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$5 = CALL $4($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $6)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $6)
	*(($4 = CALL $10([32]))) = (int_64)0
	*($4 + [8 align=4]) = (int_64)0
	*($4 + [16]) = [0]
	*($4 + [20]) = $0
	$8 = ($4 + [8])
	$2 = $5
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($4, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $322(($3 + [32]), $8)
	*($4 + [24]) = $1
	*($3 + [24]) = $4
	$9 = *($4)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $4
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $323(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $5($5)
	
.LABEL $label$8
	$6 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	$0 = *($6 + [8])
	if ( ($0 == 0) ){ goto $label$12 }
	$2 = ($6 + [12])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = ($1 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$16 }
	CALL $12(*(($1 + [-4])))
	
.LABEL $label$16
	$1 = $5
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$15 }
	$5 = *(($6 + [8]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $0
	
.LABEL $label$13
	*($2) = $0
	CALL $12($5)
	
.LABEL $label$12
	CALL $12($6)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $4
}

void .FUNC $104 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = $1
	*($3 + [16]) = *($0)
	*($3 + [8]) = (int_64)0
	CALL $65(($3 + [16]), ($3 + [24]), ($3 + [8]), [8924])
	$4 = ($0 + [360])
	$1 = *($3 + [24])
	$6 = *(($0 + [388]))
	$5 = *(($0 + [384]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$7:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$6 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$5 }
	if ( ((int_32)*($8 + [20]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$8
	if ( $8 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = CALL db_find_i64(*($4), *(($0 + [368])), (int_64)-8281825045618098176, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $105($4, $7)
	if ( ((int_32)*($8 + [20]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	$1 = *($0 + [352])
	*($3 + [16]) = $2
	if ( ($8 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	CALL eosio_assert([0], [13122])
	$1 = *($0 + [352])
	*($3 + [16]) = $2
	if ( [0] ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10691])
	
.LABEL $label$1
	CALL $106($4, $8, $1, ($3 + [16]))
	$global$0 = ($3 + [32])
}

void .FUNC $107 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$3 = ($global$0 - [528])
	$global$0 = $3
	*($3 + [424]) = $1
	*((($3 + [376]) + [24])) = (int_64)-1
	*((($3 + [376]) + [32])) = (int_64)0
	*((($3 + [376]) + [40])) = [0]
	$1 = *($0)
	*((($3 + [376]) + [16])) = $1
	*($3 + [376]) = $1
	*($3 + [384]) = $1
	*((($3 + [184]) + [16])) = $1
	*((($3 + [184]) + [24])) = (int_64)-1
	*((($3 + [184]) + [32])) = (int_64)0
	*((($3 + [184]) + [40])) = [0]
	*((($3 + [184]) + [56])) = $1
	*((($3 + [184]) + [64])) = $1
	*((($3 + [184]) + [72])) = (int_64)-1
	*((($3 + [184]) + [80])) = (int_64)0
	*((($3 + [184]) + [88])) = [0]
	*(($3 + [278])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [280])) = $1
	*(($3 + [288])) = $1
	*(($3 + [296])) = $1
	*(($3 + [304])) = (int_64)-1
	*($3 + [192]) = $1
	*($3 + [184]) = $1
	*($3 + [232]) = $1
	*(($3 + [320])) = [0]
	*(($3 + [312])) = (int_64)0
	*(($3 + [336])) = $1
	*(($3 + [344])) = $1
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*($3 + [328]) = $1
	CALL $108(($3 + [184]), ($3 + [424]), $2)
	*((($3 + [88]) + [24])) = (int_64)-1
	*((($3 + [88]) + [32])) = (int_64)0
	*((($3 + [88]) + [40])) = [0]
	*(($3 + [134])) = [0]
	*(($3 + [132])) = [0]
	*((($3 + [88]) + [72])) = (int_64)-1
	*((($3 + [88]) + [80])) = (int_64)0
	*((($3 + [88]) + [88])) = [0]
	$1 = *($0)
	*((($3 + [88]) + [16])) = $1
	*((($3 + [88]) + [56])) = $1
	*((($3 + [88]) + [64])) = $1
	*($3 + [88]) = $1
	*($3 + [96]) = $1
	*($3 + [136]) = $1
	*($3 + [80]) = ($3 + [96])
	CALL $109(($3 + [8]), ($3 + [80]), ($3 + [424]))
	$4 = *($3 + [12])
	if ( ($4 == 0) ){ goto $label$2 }
	if ( ((int_64)*($3 + [424]) != (int_64)*($4 + [8])) ){ goto $label$2 }
	$1 = *($3 + [8])
	*($3 + [72]) = $1
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($4) == 0) ){ goto $label$1 }
	if ( ((int_64)*($4 + [8]) != (int_64)*($3 + [424])) ){ goto $label$1 }
	$5 = (($3 + [432]) + [24])
	$6 = (($3 + [376]) + [8])
	$7 = ($3 + [44])
	$8 = (($3 + [480]) + [8])
	$9 = ($3 + [20])
	$10 = (($3 + [8]) + [16])
	$11 = (($3 + [8]) + [20])
	$12 = (($3 + [8]) + [28])
	$13 = ($3 + [52])
	$14 = ($3 + [60])
	$15 = (($3 + [8]) + [40])
	$16 = ($3 + [464])
	
.LOOP $label$3:
	$1 = CALL $39()
	*($9) = [0]
	*($10) = [0]
	*($11) = (int_64)0
	*($12) = (int_64)0
	*($7) = (int_64)0
	*($13) = (int_64)0
	*($14) = (int_64)0
	*($3 + [8]) = ((CASTING uint_32)(uint_64 ((int_64)$1 / (int_64)1000000)) + [60])
	*(($17 = (($3 + [432]) + [8]))) = (int_64)-6402241254016417792
	*($3 + [432]) = *($0)
	*($3) = (int_64)-8281833614906753024
	*($3 + [480]) = *(*($3 + [76]) + [16])
	CALL $24($8, $2)
	$4 = *($15)
	if ( ((uint_32)$4 >= (uint_32)*($13)) ){ goto $label$6 }
	$1 = *($0)
	*($4 + [8]) = *($3)
	*($4) = $1
	*($4 + [16 align=4]) = (int_64)0
	*(($18 = ($4 + [24]))) = [0]
	$19 = CALL $10([16])
	*($4 + [16]) = $19
	$20 = ($19 + [16])
	*($18) = $20
	*(($19 + [8])) = *($17)
	*($19) = *($3 + [432])
	*(($4 + [20])) = $20
	CALL $110(($4 + [28]), ($3 + [480]))
	*($15) = (*($15) + [40])
	if ( (*($8) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $111($7, ($3 + [432]), $0, $3, ($3 + [480]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $12(*((($3 + [480]) + [16])))
	
.LABEL $label$4
	*($11) = [1]
	$1 = *($3 + [376])
	*(($5 + [16])) = (int_64)0
	*(($5 + [8])) = (int_64)0
	*($5) = (int_64)0
	*($17) = (int_64)0
	*((($3 + [432]) + [16])) = (int_64)0
	*((($3 + [432]) + [28])) = [0]
	*($16) = [0]
	*($3 + [432]) = (int_64)0
	CALL $72(($3 + [480]), $6, $1, ($3 + [432]))
	$1 = ((int_64)*($4) + (int_64)1)
	*(($4 = (($3 + [480]) + [40]))) = $1
	CALL $73($6, ($3 + [480]), *($3 + [376]))
	*($3 + [488]) = (int_64)0
	*($3 + [480]) = $1
	CALL $112(($3 + [8]), ($3 + [480]), *($0), [0])
	CALL $113(($3 + [72]))
	CALL $114(($3 + [8]))
	$4 = *($3 + [76])
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ((int_64)*($4 + [8]) == (int_64)*($3 + [424])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($3 + [76]) = [0]
	*($3 + [72]) = ($3 + [80])
	
.LABEL $label$1
	CALL $115(($3 + [88]))
	$5 = *(($3 + [360]))
	if ( ($5 == 0) ){ goto $label$7 }
	$17 = ($3 + [364])
	$4 = *($17)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $12($0)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [360]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $5
	
.LABEL $label$8
	*($17) = $5
	CALL $12($4)
	
.LABEL $label$7
	CALL $115(($3 + [232]))
	$8 = *((($3 + [184]) + [32]))
	if ( ($8 == 0) ){ goto $label$12 }
	$13 = ($3 + [220])
	$17 = *($13)
	if ( ((int_32)$17 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$17 = ($17 + [-24])
	$6 = *($17)
	*($17) = [0]
	if ( ($6 == 0) ){ goto $label$16 }
	$5 = *($6 + [8])
	if ( ($5 == 0) ){ goto $label$17 }
	$11 = ($6 + [12])
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($0 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$21 }
	CALL $12(*(($0 + [-4])))
	
.LABEL $label$21
	$0 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($6 + [8]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $5
	
.LABEL $label$18
	*($11) = $5
	CALL $12($4)
	
.LABEL $label$17
	CALL $12($6)
	
.LABEL $label$16
	if ( ((int_32)$17 != (int_32)$8) ){ goto $label$15 }
	$4 = *(($3 + [216]))
	goto $label$13 
	
.LABEL $label$14
	$4 = $8
	
.LABEL $label$13
	*($13) = $8
	CALL $12($4)
	
.LABEL $label$12
	$5 = *((($3 + [376]) + [32]))
	if ( ($5 == 0) ){ goto $label$22 }
	$17 = ($3 + [412])
	$4 = *($17)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$24 }
	
.LOOP $label$25:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$26 }
	CALL $12($0)
	
.LABEL $label$26
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$25 }
	$4 = *(($3 + [408]))
	goto $label$23 
	
.LABEL $label$24
	$4 = $5
	
.LABEL $label$23
	*($17) = $5
	CALL $12($4)
	
.LABEL $label$22
	$global$0 = ($3 + [528])
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $2($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $26($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $26($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

void .FUNC $109 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7464606431203819520, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $328($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)7464606431203819520, $6))
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*($4 + [96]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [8])
	$5 = *($1)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$5:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$4 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	if ( ((int_32)*($9 + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL db_find_i64(*($4), *(($0 + [16])), (int_64)-8281825045618098176, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	if ( ((int_32)*(CALL $105($4, $8) + [20]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	CALL eosio_assert([0], [13145])
	
.LABEL $label$1
	$5 = *($0)
	*($3 + [4]) = $2
	*($3) = $1
	CALL $119(($3 + [8]), $4, $5, $3)
	$global$0 = ($3 + [16])
}

int_32 .FUNC $318 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$5 = CALL $4($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [20]) = $5
	*($3 + [16]) = $5
	*($3 + [24]) = ($5 + $4)
	*(($4 = CALL $10([64])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16 align=4]) = (int_64)0
	*($4 + [24]) = [0]
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [52]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($4 + [8])
	*($3 + [40]) = $4
	*($3 + [48]) = ($4 + [16])
	*($3 + [52]) = ($4 + [32])
	*($3 + [56]) = ($4 + [48])
	CALL $325(($3 + [40]), ($3 + [32]))
	*($4 + [60]) = [-1]
	*($4 + [56]) = $1
	*($3 + [32]) = $4
	$7 = *($4)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $4
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $326(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($5)
	
.LABEL $label$7
	$2 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$0 = *($2 + [16])
	if ( ($0 == 0) ){ goto $label$11 }
	$6 = ($2 + [20])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($1 + [-12])
	if ( ((*($5) & [1]) == 0) ){ goto $label$15 }
	CALL $12(*(($1 + [-4])))
	
.LABEL $label$15
	$1 = $5
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($2 + [16]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $12($5)
	
.LABEL $label$11
	CALL $12($2)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $4
}

void .FUNC $319 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)7464606431203819521, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $328($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)7464606431203819520, $6))
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*(($4 + [100])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $422 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = *($0)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [48]))) ){ goto $label$1 }
	CALL eosio_assert([0], [14736])
	
.LABEL $label$1
	$3 = (int_64)
	*($1 + [40]) = $3(*($1 + [40]) - *($2)))
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [14784])
	$3 = *(($1 + [40]))
	
.LABEL $label$2
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [14806])
	
.LABEL $label$3
	$0 = *($0)
	if ( ((int_64)*($0 + [8]) == (int_64)*(($1 + [64]))) ){ goto $label$4 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$4
	$3 = ((int_64)*($1 + [56]) + (int_64)*($0))
	*($1 + [56]) = $3
	if ( ((int_64)$3 <= (int_64)-4611686018427387904) ){ goto $label$7 }
	if ( ((int_64)$3 >= (int_64)4611686018427387904) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [14699])
	if ( ((int_64)*(($1 + [56])) < (int_64)4611686018427387904) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [14718])
	return 
	
.LABEL $label$5
}

void .FUNC $215 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $10($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*((($4 + [24]) + [36])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [52])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $51($2, $7)
	$2 = *(($4 + [56]))
	$7 = *(($4 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = $2
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $161(($4 + [88]), ($4 + [80]))
	CALL $53(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $7
	CALL $12($7)
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [44])) = $7
	CALL $12($7)
	
.LABEL $label$8
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [12]) = $7
	CALL $12($7)
	
.LABEL $label$9
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $38(($4 + [8]))
}

void .FUNC $214 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [192])
	$global$0 = $4
	*($4 + [88]) = $1
	*((($4 + [48]) + [32])) = [0]
	*($4 + [56]) = $1
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	$5 = *($0)
	*($4 + [48]) = $5
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, $6)
	if ( ((int_32)$7) < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $150(($4 + [48]), $7)
	if ( ((int_32)*($7 + [16]) == (int_32)($4 + [48])) ){ goto $label$9 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$9
	*($4 + [144]) = $2
	CALL $216(($4 + [48]), $7, (int_64)0, ($4 + [144]))
	goto $label$7 
	
.LABEL $label$8
	*((($4 + [8]) + [32])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	$1 = *($0)
	*($4 + [8]) = $1
	*($4 + [16]) = $6
	$7 = CALL db_find_i64($1, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	$7 = CALL $191(($4 + [8]), $7)
	if ( ((int_32)*($7 + [32]) == (int_32)($4 + [8])) ){ goto $label$10 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$10
	if ( ((int_64)*($4 + [88]) == (int_64)*($7 + [24])) ){ goto $label$11 }
	$1 = *($0 + [304])
	*(($4 + [136])) = (int_64)0
	*($4 + [120]) = (int_64)0
	*($4 + [128]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [104]) = (int_64)0
	*($4 + [112]) = (int_64)0
	*($4 + [124]) = [0]
	*($4 + [128]) = [0]
	$7 = ($0 + [312])
	CALL $72(($4 + [144]), $7, $1, ($4 + [96]))
	*($4 + [172]) = (*($4 + [172]) + [1])
	CALL $73($7, ($4 + [144]), *($0 + [304]))
	
.LABEL $label$11
	*($4 + [96]) = $2
	CALL $217(($4 + [144]), ($4 + [48]), $3, ($4 + [96]))
	$8 = *($4 + [32])
	if ( ($8 == 0) ){ goto $label$7 }
	$9 = ($4 + [36])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$14:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$15 }
	CALL $12($10)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$14 }
	$7 = *(($4 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$7 = $8
	
.LABEL $label$12
	*($9) = $8
	CALL $12($7)
	
.LABEL $label$7
	$11 = CALL $129(($0 + [32]), ($4 + [88]))
	$1 = *($4 + [88])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$19 }
	$10 = [0]
	$8 = *([0] + [12468])
	
.LOOP $label$21:
	*((($4 + [144]) + ($7 = $10))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$10 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$20 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$21 }
	
.LABEL $label$20
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$18 }
	*($4 + [8]) = ($10 << [1])
	$8 = (($4 + [8]) | [1])
	goto $label$17 
	
.LABEL $label$19
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	*($4 + [8]) = [0]
	$7 = (($4 + [8]) | [1])
	goto $label$16 
	
.LABEL $label$18
	$9 = (($10 + [16]) & [-16])
	$8 = CALL $10($9)
	*($4 + [8]) = ($9 | [1])
	*($4 + [16]) = $8
	*($4 + [12]) = $10
	
.LABEL $label$17
	$9 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$22:
	*(($8 + $7)) = *((($4 + [144]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$22 }
	$7 = ($8 + $10)
	
.LABEL $label$16
	*($7) = [0]
	$7 = CALL $34(($4 + [8]), [0], [14192])
	$10 = ($7 + [8])
	*((($4 + [96]) + [8])) = *($10)
	*($4 + [96]) = *($7)
	*($7) = (int_64)0
	*($10) = [0]
	$7 = CALL $31(($4 + [96]), [14224])
	$10 = ($7 + [8])
	*((($4 + [144]) + [8])) = *($10)
	*($4 + [144]) = *($7)
	*($7) = (int_64)0
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$24 }
	$7 = [1]
	if ( (*($4 + [144]) & [1]) ){ goto $label$23 }
	goto $label$5 
	
.LABEL $label$24
	CALL eosio_assert([0], ( *($4 + [152]) ? (($4 + [144]) | [1]) : (*($4 + [144]) & [1]) ))
	$7 = [1]
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$23
	CALL $12(*($4 + [152]))
	if ( ((*($4 + [96]) & $7) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	CALL eosio_assert([0], [9882])
	
.LABEL $label$5
	if ( (*($4 + [96]) & $7) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL $12(*($4 + [104]))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $12(*($4 + [16]))
	
.LABEL $label$1
	$12 = ($0 + [80])
	$1 = *($4 + [88])
	$10 = *(($0 + [108]))
	$8 = *(($0 + [104]))
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$31 }
	
.LOOP $label$33:
	$7 = ($10 + [-24])
	$11 = *($7)
	if ( ((int_64)*($11) == (int_64)$1) ){ goto $label$32 }
	$10 = $7
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	if ( ((int_32)$8 == (int_32)$10) ){ goto $label$31 }
	if ( ((int_32)*($11 + [176]) == (int_32)$12) ){ goto $label$30 }
	CALL eosio_assert([0], [11551])
	$6 = (int_64)0
	$1 = *($4 + [88])
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	$11 = [0]
	$7 = CALL db_find_i64(*($12), *(($0 + [88])), (int_64)-5915276602093076480, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$30 }
	$11 = CALL $57($12, $7)
	if ( ((int_32)*($11 + [176]) == (int_32)$12) ){ goto $label$30 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$30
	$6 = (int_64)0
	$1 = *($4 + [88])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$28 }
	
.LABEL $label$29
	$10 = [0]
	$8 = *([0] + [12468])
	
.LOOP $label$35:
	*((($4 + [144]) + ($7 = $10))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$10 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$34 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)$6) ){ goto $label$35 }
	
.LABEL $label$34
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$27 }
	*($4 + [8]) = ($10 << [1])
	$8 = (($4 + [8]) | [1])
	goto $label$26 
	
.LABEL $label$28
	*(($4 + [16])) = [0]
	*($4 + [8]) = $6
	*($4 + [8]) = [0]
	$7 = (($4 + [8]) | [1])
	goto $label$25 
	
.LABEL $label$27
	$9 = (($10 + [16]) & [-16])
	$8 = CALL $10($9)
	*($4 + [8]) = ($9 | [1])
	*($4 + [16]) = $8
	*($4 + [12]) = $10
	
.LABEL $label$26
	$9 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$36:
	*(($8 + $7)) = *((($4 + [144]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$36 }
	$7 = ($8 + $10)
	
.LABEL $label$25
	*($7) = [0]
	$7 = CALL $34(($4 + [8]), [0], [14192])
	$10 = ($7 + [8])
	*((($4 + [96]) + [8])) = *($10)
	*($4 + [96]) = *($7)
	*($7) = (int_64)0
	*($10) = [0]
	$7 = CALL $31(($4 + [96]), [14260])
	$10 = ($7 + [8])
	*((($4 + [144]) + [8])) = *($10)
	*($4 + [144]) = *($7)
	*($7) = (int_64)0
	*($10) = [0]
	if ( ($11 == 0) ){ goto $label$45 }
	$7 = [1]
	if ( (*($4 + [144]) & [1]) ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	CALL eosio_assert([0], ( *($4 + [152]) ? (($4 + [144]) | [1]) : (*($4 + [144]) & [1]) ))
	$7 = [1]
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$43 }
	
.LABEL $label$44
	CALL $12(*($4 + [152]))
	if ( ((*($4 + [96]) & $7) == 0) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	if ( (*($4 + [96]) & $7) ){ goto $label$41 }
	
.LABEL $label$42
	if ( (*($4 + [8]) & [1]) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$41
	CALL $12(*($4 + [104]))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$39 }
	
.LABEL $label$40
	CALL $12(*($4 + [16]))
	$1 = *($0)
	*($4 + [144]) = $2
	if ( $11 ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$39
	$1 = *($0)
	*($4 + [144]) = $2
	if ( $11 ){ goto $label$37 }
	
.LABEL $label$38
	CALL eosio_assert([0], [10691])
	
.LABEL $label$37
	CALL $218($12, $11, $1, ($4 + [144]))
	$8 = *($4 + [72])
	if ( ($8 == 0) ){ goto $label$46 }
	$9 = ($4 + [76])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$48 }
	
.LOOP $label$49:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$50 }
	CALL $12($10)
	
.LABEL $label$50
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$49 }
	$7 = *(($4 + [72]))
	goto $label$47 
	
.LABEL $label$48
	$7 = $8
	
.LABEL $label$47
	*($9) = $8
	CALL $12($7)
	
.LABEL $label$46
	$global$0 = ($4 + [192])
	(unreachable)
}

void .FUNC $217 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*(($5 = CALL $10([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	CALL memcpy(($4 + [16]), $5, [8])
	*($4 + [40]) = *($5 + [8])
	CALL memcpy((($4 + [16]) | [8]), ($4 + [40]), [8])
	$6 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)3607749779137757184, $2, $6), ($4 + [16]), [16]
	*($5 + [20]) = $7)
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$2
	*($4 + [40]) = $5
	$6 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($4 + [16]) = $6)
	*($4 + [12]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [40]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $381(($1 + [24]), ($4 + [40]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [40])
	*($4 + [40]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $12($5)
	
.LABEL $label$5
	$global$0 = ($4 + [48])
}

void .FUNC $216 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$3
	$7 = ((int_64)*($1) + (int_64)*($3))
	*($1) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14699])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14718])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $211 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = *($1)
	*($2 + [8]) = *(*($0 + [4]))
	$5 = *($4 + [4])
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $213 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14699])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14718])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = $2
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [24])
	CALL $210(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [36]), (int_64)0, $3, [32])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *(($5 + [16]))
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $196 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *(($1 + [28]))
	$4 = *($1 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$6 = *(($5 + [-24]))
	if ( ((int_32)*($6 + [88]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$2
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-5915276602094125056, $2)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$5 }
	CALL eosio_assert([0], $3)
	
.LABEL $label$5
	$6 = CALL $91($1, $6)
	if ( ((int_32)*($6 + [88]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$1
	*($0 + [4]) = $6
	*($0) = $1
}

void .FUNC $197 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *(($1 + [28]))
	$4 = *($1 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$6 = *(($5 + [-24]))
	if ( ((int_32)*($6 + [176]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$2
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-5915276602093076480, $2)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$5 }
	CALL eosio_assert([0], $3)
	
.LABEL $label$5
	$6 = CALL $57($1, $6)
	if ( ((int_32)*($6 + [176]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$1
	*($0 + [4]) = $6
	*($0) = $1
}

void .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	if ( CALL has_auth((int_64)7130081133533855744) ){ goto $label$1 }
	CALL eosio_assert([0], [9588])
	
.LABEL $label$1
	$3 = ($0 + [40])
	$4 = *($1)
	$6 = *(($0 + [68]))
	$5 = *(($0 + [64]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$10:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$9 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$8 }
	if ( ((int_32)*($8 + [88]) == (int_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [11551])
	$9 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [48])), (int_64)-5915276602094125056, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $91($3, $7)
	if ( ((int_32)*($8 + [88]) == (int_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$7
	$9 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = [0]
	$5 = *([0] + [12468])
	
.LOOP $label$12:
	*((($2 + [16]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$11 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)$9) ){ goto $label$12 }
	
.LABEL $label$11
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($2) = ($6 << [1])
	$5 = ($2 | [1])
	goto $label$3 
	
.LABEL $label$5
	*(($2 + [8])) = [0]
	*($2) = $9
	*($2) = [0]
	$7 = ($2 | [1])
	goto $label$2 
	
.LABEL $label$4
	$3 = (($6 + [16]) & [-16])
	$5 = CALL $10($3)
	*($2) = ($3 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $6
	
.LABEL $label$3
	$3 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$13:
	*(($5 + $7)) = *((($2 + [16]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$13 }
	$7 = ($5 + $6)
	
.LABEL $label$2
	*($7) = [0]
	$7 = CALL $34($2, [0], [9722])
	$6 = ($7 + [8])
	*((($2 + [16]) + [8])) = *($6)
	*($2 + [16]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	if ( $8 ){ goto $label$14 }
	CALL eosio_assert([0], ( *($2 + [24]) ? (($2 + [16]) | [1]) : (*($2 + [16]) & [1]) ))
	
.LABEL $label$14
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$15 }
	CALL $12(*($2 + [24]))
	
.LABEL $label$15
	$7 = ($0 + [32])
	if ( ((*($2) & [1]) == 0) ){ goto $label$16 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$16
	CALL $195($7, $1)
	$global$0 = ($2 + [32])
}

void .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	if ( (CALL $90($0, $1) == 0) ){ goto $label$2 }
	$3 = ($0 + [8])
	CALL $196(($2 + [32]), $3, *($1), [10129])
	$4 = *($2 + [32])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$3 }
	CALL eosio_assert([0], [12567])
	CALL eosio_assert([0], [11218])
	
.LABEL $label$3
	$6 = CALL db_next_i64(*($5 + [92]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	CALL $91((CASTING uint_32)(uint_64 $4), $6)
	
.LABEL $label$4
	CALL $93($3, $5)
	goto $label$1 
	
.LABEL $label$2
	if ( (CALL $129($0, $1) == 0) ){ goto $label$1 }
	$3 = ($0 + [48])
	CALL $197(($2 + [32]), $3, *($1), [10129])
	$4 = *($2 + [32])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$5 }
	CALL eosio_assert([0], [12567])
	CALL eosio_assert([0], [11218])
	
.LABEL $label$5
	$6 = CALL db_next_i64(*($5 + [180]), ($2 + [40]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $57((CASTING uint_32)(uint_64 $4), $6)
	
.LABEL $label$6
	CALL $198($3, $5)
	
.LABEL $label$1
	$3 = ($0 + [96])
	*($2 + [24]) = $3
	CALL $199(($2 + [32]), ($2 + [24]), $1)
	$5 = *($2 + [36])
	if ( ($5 == 0) ){ goto $label$7 }
	if ( ((int_64)*($5 + [16]) != (int_64)*($1)) ){ goto $label$7 }
	$4 = *($2 + [32])
	
.LOOP $label$8:
	*($2 + [40]) = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$9 }
	CALL eosio_assert([0], [12567])
	$5 = *($2 + [44])
	
.LABEL $label$9
	CALL $200(($2 + [40]))
	CALL $201(*($2 + [24]), $5)
	$4 = *($2 + [40])
	*($2 + [32]) = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$7 }
	if ( ((int_64)*($5 + [16]) == (int_64)*($1)) ){ goto $label$8 }
	
.LABEL $label$7
	*($2 + [16]) = $3
	CALL $85(($2 + [8]), ($2 + [16]), $1)
	$7 = *($1)
	$5 = *($2 + [12])
	if ( ($5 == 0) ){ goto $label$10 }
	if ( ((int_64)*($5 + [8]) != (int_64)$7) ){ goto $label$10 }
	$4 = *($2 + [8])
	
.LOOP $label$11:
	*($2 + [40]) = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$12 }
	CALL eosio_assert([0], [12567])
	$5 = *($2 + [44])
	
.LABEL $label$12
	CALL $86(($2 + [40]))
	CALL $201(*($2 + [16]), $5)
	$4 = *($2 + [40])
	*($2 + [8]) = $4
	$7 = *($1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$10 }
	if ( ((int_64)*($5 + [8]) == (int_64)$7) ){ goto $label$11 }
	
.LABEL $label$10
	$8 = ($0 + [136])
	$3 = *(($0 + [164]))
	$9 = *(($0 + [160]))
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$15 }
	
.LOOP $label$17:
	$5 = ($3 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$7) ){ goto $label$16 }
	$3 = $5
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$15 }
	if ( ((int_32)*($6 + [16]) == (int_32)$8) ){ goto $label$14 }
	CALL eosio_assert([0], [11551])
	goto $label$14 
	
.LABEL $label$15
	$5 = CALL db_find_i64(*($8), *(($0 + [144])), (int_64)-5001621371248181248, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $82($8, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$8) ){ goto $label$14 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$14
	$5 = CALL db_next_i64(*($6 + [20]), ($2 + [40]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$18 }
	CALL $82($8, $5)
	
.LABEL $label$18
	CALL $202($8, $6)
	
.LABEL $label$13
	*($2) = $8
	CALL $203(($2 + [40]), $2, $1)
	$4 = *($1)
	$5 = [0]
	$3 = $2
	$6 = *($2 + [44])
	if ( ($6 == 0) ){ goto $label$19 }
	if ( ((int_64)$4 != (int_64)*($6 + [8])) ){ goto $label$19 }
	$3 = *($2 + [40])
	$5 = $6
	
.LABEL $label$19
	if ( ($5 == 0) ){ goto $label$20 }
	if ( ((int_64)*($5 + [8]) != (int_64)$4) ){ goto $label$20 }
	
.LOOP $label$21:
	*($2 + [40]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $3))
	CALL $204(($2 + [40]))
	CALL $202(*($2), $5)
	$4 = *($2 + [40])
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$20 }
	$3 = (CASTING uint_32)(uint_64 $4)
	if ( ((int_64)*($5 + [8]) == (int_64)*($1)) ){ goto $label$21 }
	
.LABEL $label$20
	$global$0 = ($2 + [48])
}

void .FUNC $219 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [176])
	$global$0 = $5
	*($5 + [64]) = $2
	*($5 + [72]) = $1
	$1 = *($0 + [304])
	*(($5 + [168])) = (int_64)0
	*($5 + [152]) = (int_64)0
	*($5 + [160]) = (int_64)0
	*($5 + [128]) = (int_64)0
	*($5 + [136]) = (int_64)0
	*($5 + [144]) = (int_64)0
	*($5 + [156]) = [0]
	*($5 + [160]) = [0]
	CALL $72(($5 + [80]), ($0 + [312]), $1, ($5 + [128]))
	if ( ((int_32)*($5 + [104]) != (int_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$1
	*($5 + [128]) = *($0)
	CALL $65(($5 + [128]), ($5 + [72]), ($5 + [64]), [9116])
	if ( ((int_64)*($5 + [72]) != (int_64)*($5 + [64])) ){ goto $label$2 }
	CALL eosio_assert([0], [10068])
	
.LABEL $label$2
	if ( CALL has_auth(*($0)) ){ goto $label$3 }
	if ( CALL has_auth(*($5 + [72])) ){ goto $label$3 }
	CALL eosio_assert([0], [10092])
	
.LABEL $label$3
	$6 = *($3 + [8])
	$7 = [0]
	*(($5 + [160])) = [0]
	$1 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [136]) = $1)
	*($5 + [144]) = (int_64)-1
	*($5 + [152]) = (int_64)0
	$2 = *($0)
	*($5 + [128]) = $2
	$8 = CALL db_find_i64($2, $1, (int_64)-4157508551318700032, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $191(($5 + [128]), $8)
	if ( ((int_32)*($7 + [32]) == (int_32)($5 + [128])) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [10129])
	
.LABEL $label$4
	CALL require_recipient(*($5 + [72]))
	CALL require_recipient(*($5 + [64]))
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$8 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$1 = $2
	$10 = $8
	$8 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$1 = $2
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$8 < (int_32)[6])
	$11 = ($8 + [1])
	$8 = $11
	if ( $10 ){ goto $label$10 }
	$8 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9996])
	
.LABEL $label$6
	if ( ((int_64)$9 <= (int_64)0) ){ goto $label$15 }
	if ( ((int_64)$6 != (int_64)*($7 + [8])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL eosio_assert([0], [10148])
	if ( ((int_64)$6 == (int_64)*($7 + [8])) ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert([0], [10042])
	if ( (*($4) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	if ( ((*($4) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	if ( (*($4 + [4]) <= [257]) ){ goto $label$11 }
	CALL eosio_assert([0], [9853])
	
.LABEL $label$11
	$8 = ($3 + [8])
	$2 = *($8)
	*((($5 + [48]) + [8])) = $2
	$1 = *($3)
	*((($5 + [16]) + [8])) = $2
	*($5 + [48]) = $1
	*($5 + [16]) = $1
	CALL $193($0, *($5 + [72]), ($5 + [16]))
	$2 = *($8)
	*((($5 + [32]) + [8])) = $2
	$6 = *($0)
	$1 = *($3)
	*(($5 + [8])) = $2
	*($5 + [32]) = $1
	*($5) = $1
	CALL $214($0, *($5 + [64]), $5, $6)
	$11 = *($5 + [152])
	if ( ($11 == 0) ){ goto $label$16 }
	$0 = ($5 + [156])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$11) ){ goto $label$18 }
	
.LOOP $label$19:
	$8 = ($8 + [-24])
	$10 = *($8)
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$20 }
	CALL $12($10)
	
.LABEL $label$20
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$19 }
	$8 = *(($5 + [152]))
	goto $label$17 
	
.LABEL $label$18
	$8 = $11
	
.LABEL $label$17
	*($0) = $11
	CALL $12($8)
	
.LABEL $label$16
	$global$0 = ($5 + [176])
}

void .FUNC $218 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	$6 = *($1 + [48])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)$6) + (int_64)*($1 + [80]))
	$7 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $7
	*($5 + [56]) = $7
	$7 = *($1)
	*($5 + [24]) = $7
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14656])
	$6 = *(($1 + [48]))
	
.LABEL $label$3
	$6 = ((int_64)$6 + (int_64)*($3))
	*(($8 = ($1 + [48]))) = $6
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [136]
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [14699])
	$3 = [136]
	if ( ((int_64)*($8) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [14718])
	$8 = ($1 + $3)
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = ($1 + $3)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10823])
	
.LABEL $label$4
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $8
	*($5 + [88]) = $1
	$9 = ($1 + [8])
	*($5 + [92]) = $9
	$10 = ($1 + [20])
	*($5 + [96]) = $10
	$11 = ($1 + [32])
	*($5 + [100]) = $11
	$12 = ($1 + [48])
	*($5 + [104]) = $12
	$13 = ($1 + [64])
	*($5 + [108]) = $13
	$14 = ($1 + [80])
	*($5 + [112]) = $14
	$15 = ($1 + [96])
	*($5 + [116]) = $15
	$16 = ($1 + [112])
	*($5 + [120]) = $16
	$17 = ($1 + [124])
	*($5 + [124]) = $17
	$18 = ($1 + [144])
	*($5 + [132]) = $18
	$19 = ($1 + [160])
	*($5 + [136]) = $19
	$20 = ($1 + [168])
	*($5 + [140]) = $20
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$10 }
	$4 = CALL $4($3)
	$2 = *($5 + [72])
	goto $label$9 
	
.LABEL $label$10
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$9
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $9
	*($5 + [96]) = $10
	*($5 + [100]) = $11
	*($5 + [104]) = $12
	*($5 + [108]) = $13
	*($5 + [112]) = $14
	*($5 + [116]) = $15
	*($5 + [120]) = $16
	*($5 + [124]) = $17
	*($5 + [128]) = $8
	*($5 + [132]) = $18
	*($5 + [136]) = $19
	*($5 + [140]) = $20
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$11 }
	CALL $5($4)
	
.LABEL $label$11
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $413(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = ($0 + [64])
	CALL $97(($2 + [8]), ($2 + [16]), $1)
	$0 = *($2 + [12])
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((int_64)*($0 + [16]) != (int_64)*($1)) ){ goto $label$1 }
	$3 = *($2 + [8])
	
.LOOP $label$2:
	*($2 + [24]) = $3
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$3 }
	CALL eosio_assert([0], [12567])
	$0 = *($2 + [28])
	
.LABEL $label$3
	CALL $98(($2 + [24]))
	CALL $103(*($2 + [16]), $0)
	$3 = *($2 + [24])
	*($2 + [8]) = $3
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	if ( ($0) == 0) ){ goto $label$1 }
	if ( ((int_64)*($0 + [16]) == (int_64)*($1)) ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($2 + [32])
}

int_32 .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $10([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	CALL $423(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $211(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $378 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($1)
	*($1) = [0]
	$3 = *($0)
	*($0) = $2
	if ( ($3 == 0) ){ goto $label$1 }
	if ( (*($3 + [72]) & [1]) ){ goto $label$10 }
	if ( (*($3 + [60]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $12(*(($3 + [80])))
	if ( ((*($3 + [60]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $12(*(($3 + [68])))
	$2 = [1]
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$2 = [1]
	if ( (*($3 + [48]) & [1]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( (*($3 + [20]) & $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $12(*(($3 + [56])))
	if ( ((*($3 + [20]) & $2) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $12(*(($3 + [28])))
	if ( (*($3 + [8]) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $12(*(($3 + [16])))
	
.LABEL $label$2
	CALL $12($3)
	
.LABEL $label$1
	*($0 + [8]) = *($1 + [8])
	*(($0 + [16])) = *(($1 + [16]))
	return $0
}

void .FUNC $379 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

int_32 .FUNC $372 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [10600])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $292($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $373 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = *($4 + [4])
	$4 = ($1 + [12])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)*(($1 + [16]))) ){ goto $label$2 }
	CALL $24($7, $6)
	$8 = (*($4) + [12])
	*($4) = $8
	$7 = ($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$7 = ($1 + [8])
	CALL $367($7, $6)
	$8 = *($4)
	
.LABEL $label$1
	$6 = *($7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)($8 - $6) / (int_32)[12]))
	$4 = [8]
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = *($6)
	$7 = ( *($6 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$4 = ($7 + $4)
	$9 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$6:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	$6 = ($6 + [12])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ($4 <= [513]) ){ goto $label$8 }
	$6 = CALL $4($4)
	goto $label$7 
	
.LABEL $label$8
	$6 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$7
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $4)
	CALL $368($3, $1)
	$9 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($5 + [8]), (int_64)-8281825045618098176, *(*($0 + [8])), $9, $6, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$9 >= (uint_64)*($5 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $5($6)
	if ( (uint_64)($9 <= *($5 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

int_32 .FUNC $370 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $371($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $54($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $54($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $372($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $371 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [10600])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $376 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	*($1) = *(*($0))
	CALL $25(($1 + [8]), *($0 + [4]))
	CALL $25(($1 + [20]), *($0 + [8]))
	$2 = (int_64)5523015
	$0 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = $0
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$5 = ($0 + [1])
	$0 = $5
	if ( $4 ){ goto $label$5 }
	$0 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9800])
	
.LABEL $label$1
	*($1 + [48]) = (int_64)0
	*(($1 + [56])) = (int_64)1413891848
	$2 = (int_64)5523015
	$0 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = $0
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$5 = ($0 + [1])
	$0 = $5
	if ( $4 ){ goto $label$10 }
	$0 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9800])
	
.LABEL $label$6
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = (int_64)1413891848
	$2 = (int_64)5523015
	$0 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = $0
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$5 = ($0 + [1])
	$0 = $5
	if ( $4 ){ goto $label$15 }
	$0 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9800])
	
.LABEL $label$11
	*($1 + [64]) = (int_64)0
	*(($1 + [72])) = (int_64)1413891848
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	*($1 + [160]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
}

void .FUNC $377 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [136])
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076480, $10, $9, ($6 + [8]))
	*(*($7 + [4]) + [184]) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [64]) + (int_64)*($8 + [48])) + (int_64)*($8 + [80]))
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076479, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [188])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [160]) / (int_64)1000000) & (int_64)4294967295)
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076478, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [192])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [160]) / (int_64)1000000) & (int_64)4294967295)
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076477, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [196])) = $8
	$0 = *($0)
	$7 = *($0 + [12])
	$9 = *($7)
	$10 = *(*($0 + [8]))
	$11 = *(*($0) + [8])
	*($6 + [8]) = *($7 + [96])
	$7 = CALL db_idx64_store($11, (int_64)-5915276602093076476, $10, $9, ($6 + [8]))
	*((*($0 + [4]) + [200])) = $7
	$global$0 = ($6 + [16])
}

void .FUNC $374 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $10([208])
	CALL $356($3)
	*($3 + [176]) = $1
	CALL $375(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [180])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $358(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $327(($1 + [144]), *(($1 + [148])))
	$3 = *($1 + [124])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($1 + [128])) = $3
	CALL $12($3)
	
.LABEL $label$5
	$3 = *($1 + [112])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($1 + [116])) = $3
	CALL $12($3)
	
.LABEL $label$6
	if ( (*($1 + [32]) & [1]) ){ goto $label$11 }
	if ( (*($1 + [20]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $12(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $12(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*(($1 + [16])))
	
.LABEL $label$7
	CALL $12($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $375 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0)
	CALL $376(*($0 + [4]), $1)
	*(($4 = $2) + [16]) = [0]
	*($4) = ($4 + [16])
	$5 = ($1 + [8])
	*($4 + [28]) = $5
	*($4 + [24]) = $1
	$6 = ($1 + [20])
	*($4 + [32]) = $6
	$7 = ($1 + [32])
	*($4 + [36]) = $7
	$8 = ($1 + [48])
	*($4 + [40]) = $8
	$9 = ($1 + [64])
	*($4 + [44]) = $9
	$10 = ($1 + [80])
	*($4 + [48]) = $10
	$11 = ($1 + [96])
	*($4 + [52]) = $11
	$12 = ($1 + [112])
	*($4 + [56]) = $12
	$13 = ($1 + [124])
	*($4 + [60]) = $13
	$14 = ($1 + [136])
	*($4 + [64]) = $14
	$15 = ($1 + [144])
	*($4 + [68]) = $15
	$16 = ($1 + [160])
	*($4 + [72]) = $16
	$17 = ($1 + [168])
	*($4 + [76]) = $17
	CALL $298(($4 + [24]), $4)
	$18 = *($4 + [16])
	if ( ($18 <= [513]) ){ goto $label$2 }
	$2 = CALL $4($18)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($18 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($2 + $18)
	*($4 + [16]) = $4
	*($4 + [28]) = $5
	*($4 + [24]) = $1
	*($4 + [32]) = $6
	*($4 + [36]) = $7
	*($4 + [40]) = $8
	*($4 + [44]) = $9
	*($4 + [48]) = $10
	*($4 + [52]) = $11
	*($4 + [56]) = $12
	*($4 + [60]) = $13
	*($4 + [64]) = $14
	*($4 + [68]) = $15
	*($4 + [72]) = $16
	*($4 + [76]) = $17
	CALL $299(($4 + [24]), ($4 + [16]))
	$19 = *($1)
	*($1 + [180]) = CALL db_store_i64(*($3 + [8]), (int_64)-5915276602093076480, *(*($0 + [8])), $19, $2, $18)
	if ( ($18 <= [513]) ){ goto $label$3 }
	CALL $5($2)
	
.LABEL $label$3
	if ( (uint_64)($19 <= *($3 + [16])) ){ goto $label$4 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$19 + (int_64)1) : ((uint_64)$19 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($4 + [28]) = $1
	*($4 + [36]) = $1
	*($4 + [32]) = *(($0 + [8]))
	*($4 + [24]) = $3
	*($4 + [16]) = ($4 + [24])
	CALL $377(($4 + [16]), ($3 + [36]), ($3 + [37]), ($3 + [38]), ($3 + [39]), ($3 + [40]))
	$global$0 = ($4 + [80])
}

void .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [108]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12696])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$3 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	$8 = *($6 + [84])
	if ( ($8 == 0) ){ goto $label$13 }
	*(($6 + [88])) = $8
	CALL $12($8)
	
.LABEL $label$13
	$8 = *($6 + [68])
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [72])) = $8
	CALL $12($8)
	
.LABEL $label$14
	$8 = *($6 + [52])
	if ( ($8 == 0) ){ goto $label$15 }
	*(($6 + [56])) = $8
	CALL $12($8)
	
.LABEL $label$15
	if ( ((*($6 + [40]) & [1]) == 0) ){ goto $label$16 }
	CALL $12(*(($6 + [48])))
	
.LABEL $label$16
	if ( ((*($6 + [8]) & [1]) == 0) ){ goto $label$17 }
	CALL $12(*(($6 + [16])))
	
.LABEL $label$17
	CALL $12($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$3 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$18:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$19 }
	$8 = *($9 + [84])
	if ( ($8 == 0) ){ goto $label$20 }
	*(($9 + [88])) = $8
	CALL $12($8)
	
.LABEL $label$20
	$8 = *($9 + [68])
	if ( ($8 == 0) ){ goto $label$21 }
	*(($9 + [72])) = $8
	CALL $12($8)
	
.LABEL $label$21
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$22 }
	*(($9 + [56])) = $8
	CALL $12($8)
	
.LABEL $label$22
	if ( ((*($9 + [40]) & [1]) == 0) ){ goto $label$23 }
	CALL $12(*(($9 + [48])))
	
.LABEL $label$23
	if ( ((*($9 + [8]) & [1]) == 0) ){ goto $label$24 }
	CALL $12(*(($9 + [16])))
	
.LABEL $label$24
	CALL $12($9)
	
.LABEL $label$19
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$18 }
	
.LABEL $label$3
	*(($0 + [28])) = $3
	CALL db_remove_i64(*($1 + [112]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $395(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]))
	$global$0 = ($2 + [16])
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = ($0 + [8])
	$4 = *($1)
	$6 = *(($0 + [36]))
	$5 = *(($0 + [32]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [108]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [16])), (int_64)-5915097263692054528, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $170($3, $7)
	if ( ((int_32)*($8 + [108]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$1
	CALL $37($2, *($1))
	$7 = CALL $34($2, [0], [13902])
	$6 = ($7 + [8])
	*((($2 + [16]) + [8])) = *($6)
	*($2 + [16]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$9 }
	$7 = [1]
	if ( (*($2 + [16]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], ( *($2 + [24]) ? (($2 + [16]) | [1]) : (*($2 + [16]) & [1]) ))
	$7 = [1]
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*($2 + [24]))
	if ( (*($2) & $7) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($2) & $7) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $12(*($2 + [8]))
	
.LABEL $label$5
	*($2 + [16]) = (int_64)0
	CALL $65($0, ($8 + [24]), ($2 + [16]), [13932])
	if ( $8 ){ goto $label$10 }
	CALL eosio_assert([0], [12567])
	CALL eosio_assert([0], [11218])
	
.LABEL $label$10
	$7 = CALL db_next_i64(*($8 + [112]), ($2 + [16]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	CALL $170($3, $7)
	
.LABEL $label$11
	CALL $174($3, $8)
	$global$0 = ($2 + [32])
}

void .FUNC $176 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $10([136])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40 align=4]) = (int_64)0
	*($3 + [48 align=4]) = (int_64)0
	*($3 + [56 align=4]) = (int_64)0
	*($3 + [68 align=4]) = (int_64)0
	*($3 + [76]) = [0]
	*($3 + [84 align=4]) = (int_64)0
	*($3 + [92 align=4]) = (int_64)0
	*($3 + [100]) = ((int_64)CALL $39() / (int_64)1000000)
	$2 = CALL $39()
	*($3 + [108]) = $1
	*($3 + [104]) = ((int_64)$2 / (int_64)1000000)
	CALL $396(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [112])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $384(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [84])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [88])) = $1
	CALL $12($1)
	
.LABEL $label$5
	$1 = *($3 + [68])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($3 + [72])) = $1
	CALL $12($1)
	
.LABEL $label$6
	$1 = *($3 + [52])
	if ( ($1 == 0) ){ goto $label$7 }
	*(($3 + [56])) = $1
	CALL $12($1)
	
.LABEL $label$7
	if ( ((*($3 + [40]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*(($3 + [48])))
	
.LABEL $label$8
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($3 + [16])))
	
.LABEL $label$9
	CALL $12($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $177 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [128]) = (int_64)0
	CALL $65($0, $1, ($3 + [128]), [11296])
	$4 = ($0 + [8])
	$5 = *($2)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($9 + [108]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [16])), (int_64)-5915097263692054528, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $170($4, $8)
	if ( ((int_32)*($9 + [108]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$1
	CALL $37(($3 + [112]), *($2))
	$8 = CALL $34(($3 + [112]), [0], [13940])
	$7 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($7)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$9 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*($3 + [136]))
	if ( (*($3 + [112]) & $8) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($3 + [112]) & $8) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $12(*($3 + [120]))
	
.LABEL $label$5
	$6 = *(($7 + [56]))
	$7 = CALL $178($3, $9)
	$8 = *($7 + [52])
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$11 }
	$5 = *($1)
	
.LOOP $label$12:
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$11 }
	$8 = ($8 + [8])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$10 }
	CALL eosio_assert([0], [13969])
	
.LABEL $label$10
	$6 = *(($7 + [72]))
	$8 = *($7 + [68])
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$14 }
	$5 = *($1)
	
.LOOP $label$15:
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$14 }
	$8 = ($8 + [8])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$13 }
	CALL eosio_assert([0], [13999])
	
.LABEL $label$13
	$8 = *($7 + [84])
	if ( ($8 == 0) ){ goto $label$16 }
	*(($7 + [88])) = $8
	CALL $12($8)
	
.LABEL $label$16
	$8 = *(($7 + [68]))
	if ( ($8 == 0) ){ goto $label$17 }
	*(($7 + [72])) = $8
	CALL $12($8)
	
.LABEL $label$17
	$8 = *(($7 + [52]))
	if ( ($8 == 0) ){ goto $label$18 }
	*(($7 + [56])) = $8
	CALL $12($8)
	
.LABEL $label$18
	if ( (*($7 + [40]) & [1]) ){ goto $label$23 }
	if ( (*($7 + [8]) & [1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $12(*(($7 + [48])))
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL $12(*(($7 + [16])))
	$5 = *($0)
	*($3 + [128]) = $1
	if ( $9 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	$5 = *($0)
	*($3 + [128]) = $1
	if ( $9 ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [10691])
	
.LABEL $label$19
	CALL $179($4, $9, $5, ($3 + [128]))
	$global$0 = ($3 + [144])
}

int_32 .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $10([136])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56 align=4]) = (int_64)0
	*($5 + [68 align=4]) = (int_64)0
	*($5 + [76]) = [0]
	*($5 + [84 align=4]) = (int_64)0
	*($5 + [92 align=4]) = (int_64)0
	*($5 + [100]) = ((int_64)CALL $39() / (int_64)1000000)
	$7 = CALL $39()
	*($5 + [108]) = $0
	*($5 + [104]) = ((int_64)$7 / (int_64)1000000)
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [24])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [52])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [68])
	*($3 + [72]) = ($5 + [80])
	*($3 + [76]) = ($5 + [84])
	*($3 + [80]) = ($5 + [96])
	*($3 + [84]) = ($5 + [100])
	*($3 + [88]) = ($5 + [104])
	CALL $391(($3 + [40]), ($3 + [32]))
	*($5 + [112]) = $1
	*($5 + [116 align=4]) = (int_64)-1
	*($5 + [124 align=4]) = (int_64)-1
	*($5 + [132]) = [-1]
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $384(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [84])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [88])) = $4
	CALL $12($4)
	
.LABEL $label$11
	$4 = *($1 + [68])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [72])) = $4
	CALL $12($4)
	
.LABEL $label$12
	$4 = *($1 + [52])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($1 + [56])) = $4
	CALL $12($4)
	
.LABEL $label$13
	if ( ((*($1 + [40]) & [1]) == 0) ){ goto $label$14 }
	CALL $12(*(($1 + [48])))
	
.LABEL $label$14
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$15 }
	CALL $12(*(($1 + [16])))
	
.LABEL $label$15
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

int_32 .FUNC $171 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5915276602093076480, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $57($0, $5)
	if ( ((int_32)*($6 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $172 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-5915276602093076480, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [176]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $57($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-5915276602093076480, $6))
	if ( ((int_32)*($4 + [176]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*(($4 + [184])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $173 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [184])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [11218])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [184])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-5915276602093076480, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [184]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [176]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $57($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-5915276602093076480, $6))
	if ( ((int_32)*($3 + [176]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [184])) = $5
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	CALL $24(($0 + [8]), ($1 + [8]))
	*(($0 + [32])) = *(($1 + [32]))
	*($0 + [24]) = *($1 + [24])
	CALL $24(($0 + [40]), ($1 + [40]))
	*($0 + [52 align=4]) = (int_64)0
	*(($0 + [60])) = [0]
	$2 = (*(($1 + [56])) - *($1 + [52]))
	if ( ($2 == 0) ){ goto $label$4 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$3 }
	$2 = CALL $10($2)
	*(($0 + [52])) = $2
	*(($0 + [60])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [56]))) = $2
	$4 = *(($1 + [52]))
	$5 = (*(($1 + [56])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$4
	*(($0 + [72])) = (int_64)0
	*($0 + [68]) = [0]
	*($0 + [64]) = *($1 + [64])
	$2 = (*(($1 + [72])) - *($1 + [68]))
	if ( ($2 == 0) ){ goto $label$5 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$2 }
	$2 = CALL $10($2)
	*(($0 + [68])) = $2
	*(($0 + [76])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [72]))) = $2
	$4 = *(($1 + [68]))
	$5 = (*(($1 + [72])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$5
	*(($0 + [88])) = (int_64)0
	*($0 + [84]) = [0]
	*($0 + [80]) = *($1 + [80])
	$2 = (*(($1 + [88])) - *($1 + [84]))
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL $10($2)
	*(($0 + [84])) = $3
	*(($0 + [92])) = ($3 + $2)
	*(($2 = ($0 + [88]))) = $3
	$4 = *(($1 + [84]))
	$5 = (*(($1 + [88])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$6
	*($0 + [96]) = *($1 + [96])
	*(($0 + [104])) = *(($1 + [104]))
	return $0
	
.LABEL $label$3
	CALL $38(($0 + [52]))
	
.LABEL $label$2
	CALL $38(($0 + [68]))
	
.LABEL $label$1
	CALL $38(($0 + [84]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $179 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [108]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [32])
	*($5 + [40]) = *($1 + [24])
	*($5 + [48]) = *($1 + [100])
	*($5 + [56]) = *($1 + [104])
	*($5 + [64]) = *($1 + [96])
	*($1 + [64]) = (*($1 + [64]) + [1])
	$2 = *($1)
	*($5 + [24]) = $2
	$6 = *($3)
	$7 = ($1 + [56])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)*(($1 + [60]))) ){ goto $label$4 }
	*($3) = *($6)
	*($7) = ($3 + [8])
	$2 = *($5 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $297(($1 + [52]), $6)
	
.LABEL $label$3
	$6 = ($1 + [64])
	$7 = ($1 + [32])
	if ( ((int_64)$2 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$5
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [100]) = $7
	*($5 + [112]) = $6
	*($5 + [88]) = $1
	$8 = ($1 + [8])
	*($5 + [92]) = $8
	$9 = ($1 + [24])
	*($5 + [96]) = $9
	$10 = ($1 + [40])
	*($5 + [104]) = $10
	$11 = ($1 + [52])
	*($5 + [108]) = $11
	$12 = ($1 + [68])
	*($5 + [116]) = $12
	$13 = ($1 + [80])
	*($5 + [120]) = $13
	$14 = ($1 + [84])
	*($5 + [124]) = $14
	$15 = ($1 + [96])
	*($5 + [128]) = $15
	$16 = ($1 + [100])
	*($5 + [132]) = $16
	$17 = ($1 + [104])
	*($5 + [136]) = $17
	CALL $386(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $4($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $8
	*($5 + [96]) = $9
	*($5 + [100]) = $7
	*($5 + [104]) = $10
	*($5 + [108]) = $11
	*($5 + [112]) = $6
	*($5 + [116]) = $12
	*($5 + [120]) = $13
	*($5 + [124]) = $14
	*($5 + [128]) = $15
	*($5 + [132]) = $16
	*($5 + [136]) = $17
	*($5 + [88]) = $1
	CALL $387(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [112]), *($5 + [72]), $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $5($4)
	
.LABEL $label$8
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $399(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $361 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [28]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($1 + [36])))
	
.LABEL $label$11
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL $12(*(($1 + [24])))
	
.LABEL $label$12
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $12($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $420 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = *($0)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$1 }
	CALL eosio_assert([0], [14736])
	
.LABEL $label$1
	$3 = (int_64)
	*($1 + [48]) = $3(*($1 + [48]) - *($2)))
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [14784])
	$3 = *(($1 + [48]))
	
.LABEL $label$2
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$3 }
	CALL eosio_assert([0], [14806])
	
.LABEL $label$3
	$0 = *($0)
	if ( ((int_64)*($0 + [8]) == (int_64)*(($1 + [72]))) ){ goto $label$4 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$4
	$3 = ((int_64)*($1 + [64]) + (int_64)*($0))
	*($1 + [64]) = $3
	if ( ((int_64)$3 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14699])
	$3 = *(($1 + [64]))
	
.LABEL $label$5
	if ( ((int_64)$3 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [14718])
	
.LABEL $label$6
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
}

void .FUNC $237 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1376])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1344]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1344]), $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	*($3 + [1368]) = *($3 + [1344])
	*($3 + [1360]) = $0
	CALL $123(($3 + [1352]), ($3 + [1360]), ($3 + [1368]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1376])
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = ($0 + [64])
	*($2 + [8]) = $3
	CALL $97(($2 + [16]), ($2 + [8]), $1)
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) != (int_64)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_64)*($5 + [8]) == (int_64)-2688959060979482624) ){ goto $label$3 }
	CALL $98(($2 + [16]))
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) == (int_64)$4) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	*($2 + [8]) = $3
	CALL $97(($2 + [16]), ($2 + [8]), $1)
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) != (int_64)$4) ){ goto $label$2 }
	
.LOOP $label$6:
	if ( ((int_64)*($5 + [8]) == (int_64)-2688959068504874496) ){ goto $label$5 }
	CALL $98(($2 + [16]))
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) == (int_64)$4) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$5
	*($2 + [8]) = $3
	CALL $97(($2 + [16]), ($2 + [8]), $1)
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) != (int_64)$4) ){ goto $label$2 }
	
.LOOP $label$8:
	if ( ((int_64)*($5 + [8]) == (int_64)7293464317099769856) ){ goto $label$7 }
	CALL $98(($2 + [16]))
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) == (int_64)$4) ){ goto $label$8 }
	goto $label$2 
	
.LABEL $label$7
	*($2 + [8]) = $3
	CALL $97(($2 + [16]), ($2 + [8]), $1)
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) != (int_64)$4) ){ goto $label$2 }
	
.LOOP $label$10:
	if ( ((int_64)*($5 + [8]) == (int_64)-2507230955073175552) ){ goto $label$9 }
	CALL $98(($2 + [16]))
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) == (int_64)$4) ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$9
	*($2 + [8]) = $3
	CALL $97(($2 + [16]), ($2 + [8]), $1)
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) != (int_64)$4) ){ goto $label$2 }
	
.LOOP $label$12:
	if ( ((int_64)*($5 + [8]) == (int_64)4520705709016350720) ){ goto $label$11 }
	CALL $98(($2 + [16]))
	$4 = *($1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((int_64)*($5 + [16]) == (int_64)$4) ){ goto $label$12 }
	goto $label$2 
	
.LABEL $label$11
	*($2 + [8]) = $3
	CALL $97(($2 + [16]), ($2 + [8]), $1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$13 }
	$4 = *($5 + [16])
	if ( ((int_64)$4 != (int_64)*($1)) ){ goto $label$13 }
	if ( ((int_64)*($5 + [8]) == (int_64)*($0 + [16])) ){ goto $label$2 }
	$6 = ($0 + [16])
	
.LOOP $label$14:
	CALL $98(($2 + [16]))
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$13 }
	$4 = *($5 + [16])
	if ( ((int_64)$4 != (int_64)*($1)) ){ goto $label$13 }
	if ( ((int_64)*($5 + [8]) != (int_64)*($6)) ){ goto $label$14 }
	goto $label$2 
	
.LABEL $label$13
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	$5 = CALL $2([12988])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = ($0 + [16])
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$17 }
	*($2 + [16]) = ($5 << [1])
	$6 = (($2 + [16]) | [1])
	if ( $5 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$8 = (($5 + [16]) & [-16])
	$6 = CALL $10($8)
	*($2 + [16]) = ($8 | [1])
	*($2 + [24]) = $6
	*($2 + [20]) = $5
	
.LABEL $label$16
	CALL memcpy($6, [12988], $5)
	
.LABEL $label$15
	*(($6 + $5)) = [0]
	CALL $94($0, $1, $7, ($2 + [16]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$18 }
	CALL $12(*($2 + [24]))
	
.LABEL $label$18
	$4 = *($1)
	
.LABEL $label$2
	$9 = ($0 + [152])
	$6 = *(($0 + [180]))
	$8 = *(($0 + [176]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$22 }
	
.LOOP $label$24:
	$5 = ($6 + [-24])
	$7 = *($5)
	if ( ((int_64)*($7) == (int_64)$4) ){ goto $label$23 }
	$6 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$22 }
	if ( ((int_32)*($7 + [176]) == (int_32)$9) ){ goto $label$21 }
	CALL eosio_assert([0], [11551])
	goto $label$21 
	
.LABEL $label$22
	$5 = CALL db_find_i64(*($9), *(($0 + [160])), (int_64)-5915276602093076480, $4)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$20 }
	$7 = CALL $57($9, $5)
	if ( ((int_32)*($7 + [176]) == (int_32)$9) ){ goto $label$21 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$21
	*($2 + [8]) = $3
	CALL $97(($2 + [16]), ($2 + [8]), $1)
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$25 }
	if ( ((int_64)*($5 + [16]) != (int_64)*($1)) ){ goto $label$25 }
	
.LOOP $label$26:
	if ( ((int_64)*($5 + [8]) == (int_64)7293464317099769856) ){ goto $label$20 }
	CALL $98(($2 + [16]))
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$25 }
	if ( ((int_64)*($5 + [16]) == (int_64)*($1)) ){ goto $label$26 }
	
.LABEL $label$25
	$5 = *($7 + [8])
	if ( ($5 & [1]) ){ goto $label$28 }
	if ( uint_32($5 >> [1]) ){ goto $label$27 }
	goto $label$20 
	
.LABEL $label$28
	if ( (*(($7 + [12])) == 0) ){ goto $label$20 }
	
.LABEL $label$27
	*($2 + [8]) = (int_64)7293464317099769856
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	$5 = CALL $2([13032])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$31 }
	*($2 + [16]) = ($5 << [1])
	$6 = (($2 + [16]) | [1])
	if ( $5 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$7 = (($5 + [16]) & [-16])
	$6 = CALL $10($7)
	*($2 + [16]) = ($7 | [1])
	*($2 + [24]) = $6
	*($2 + [20]) = $5
	
.LABEL $label$30
	CALL memcpy($6, [13032], $5)
	
.LABEL $label$29
	*(($6 + $5)) = [0]
	CALL $94($0, $1, ($2 + [8]), ($2 + [16]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$20 }
	CALL $12(*($2 + [24]))
	
.LABEL $label$20
	$global$0 = ($2 + [32])
	return (unreachable)
	
.LABEL $label$19
	CALL $23(($2 + [16]))
	
.LABEL $label$1
	CALL $23(($2 + [16]))
	(unreachable)
}

void .FUNC $235 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1424])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1380]) = $2
	*($3 + [1376]) = $2
	*($3 + [1384]) = ($2 + $4)
	*($3 + [1368]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1380])
	
.LABEL $label$5
	CALL memcpy(($3 + [1368]), $2, [8])
	*($3 + [1380]) = ($2 + [8])
	*($3 + [1360]) = [0]
	*($3 + [1352]) = (int_64)0
	CALL $165(($3 + [1376]), ($3 + [1352]))
	*(($2 = ($3 + [8]))) = *((($3 + [1376]) + [8]))
	*($3) = *($3 + [1376])
	*(($4 = (($3 + [1392]) + [8]))) = *($2)
	*($3 + [1392]) = *($3)
	$2 = *($4)
	*((($3 + [1408]) + [8])) = $2
	*(($3 + [40])) = $2
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$1 = *($3 + [1392])
	*($3 + [32]) = $1
	*($3 + [1408]) = $1
	*(($3 + [56])) = $0
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*($3 + [48]) = $0
	*(($3 + [184])) = $0
	*(($3 + [180])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [220])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [270])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*($3 + [224]) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [288])) = $0
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*($3 + [320]) = $0
	*($3 + [368]) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [432])) = $0
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [462])) = [0]
	*(($3 + [460])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = [0]
	*(($3 + [500])) = [0]
	*(($3 + [504])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = (int_64)-1
	*(($3 + [544])) = [0]
	*(($3 + [548])) = [0]
	*(($3 + [552])) = [0]
	*($3 + [560]) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = (int_64)-1
	*(($3 + [648])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = (int_64)-1
	*(($3 + [688])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [712])) = $0
	*(($3 + [720])) = $0
	*(($3 + [728])) = (int_64)-1
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = $0
	*(($3 + [760])) = $0
	*(($3 + [768])) = (int_64)-1
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*($3 + [792]) = $0
	*(($3 + [800])) = [1]
	*(($3 + [808])) = (int_64)8238557860461690880
	*(($3 + [816])) = $0
	*(($3 + [824])) = $0
	*(($3 + [832])) = (int_64)-1
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = $0
	*(($3 + [864])) = $0
	*(($3 + [872])) = (int_64)-1
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = (int_64)-1
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = [0]
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = (int_64)-1
	*(($3 + [968])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [992])) = $0
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = (int_64)-1
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = (int_64)-1
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*($3 + [1072]) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = (int_64)-1
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*(($3 + [1112])) = [0]
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = (int_64)-1
	*(($3 + [1144])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = (int_64)-1
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = (int_64)-1
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = (int_64)-1
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = [0]
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = (int_64)-1
	*(($3 + [1328])) = [0]
	*(($3 + [1332])) = [0]
	*(($3 + [1336])) = [0]
	*($3 + [1344]) = $0
	CALL $48(($3 + [16]), ($3 + [1368]), ($3 + [1352]))
	CALL $230(($3 + [16]))
	if ( ((*($3 + [1352]) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*((($3 + [1352]) + [8])))
	
.LABEL $label$6
	$global$0 = ($3 + [1424])
}

void .FUNC $360 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	CALL $165(*($1), *($0 + [12]))
	CALL $165(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4148594918074220544, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [60]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $137($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)4148594918074220544, $6))
	if ( ((int_32)*($4 + [60]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*($4 + [68]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($0 + [8])
	$3 = *($1)
	$5 = *(($0 + [36]))
	$4 = *(($0 + [32]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$1 = ($5 + [-24])
	$6 = *($1)
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$3 }
	$5 = $1
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($6 + [88]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	return ((int_32)$6 != (int_32)[0])
	
.LABEL $label$2
	$6 = [0]
	$1 = CALL db_find_i64(*($2), *(($0 + [16])), (int_64)-5915276602094125056, $3)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $91($2, $1)
	if ( ((int_32)*($6 + [88]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$1
	return ((int_32)$6 != (int_32)[0])
}

int_32 .FUNC $86 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [36])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [11218])
	$2 = *(($0 + [4]))
	$3 = *($2 + [36])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-2688959343285501952, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [36]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $345($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-2688959343285501952, $6))
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$5
	*($4 + [36]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $232 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [72]) & [1]) == 0) ){ goto $label$14 }
	CALL $12(*(($3 + [80])))
	if ( ((*($3 + [60]) & [1]) == 0) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((*($3 + [60]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $12(*(($3 + [68])))
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $12(*(($3 + [56])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $12(*(($3 + [28])))
	if ( (*($3 + [8]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $12(*(($3 + [16])))
	
.LABEL $label$6
	CALL $12($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $12($3)
	
.LABEL $label$1
	return $0
}

void .FUNC $408 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $165(*($1), *($0 + [4]))
	CALL $165(*($1), *($0 + [8]))
	CALL $165(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $392(*($1), *($0 + [32]))
	CALL $392(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $409(*($1), *($0 + [44]))
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $231 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [256]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [260])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*(($4 + [28])))
	
.LABEL $label$6
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($4 + [16])))
	
.LABEL $label$7
	CALL $12($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$4 = *(($0 + [256]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $12($4)
	
.LABEL $label$1
	$1 = *(($0 + [208]))
	if ( ($1 == 0) ){ goto $label$8 }
	$2 = ($0 + [212])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $12($3)
	
.LABEL $label$12
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$11 }
	$4 = *(($0 + [208]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $1
	
.LABEL $label$9
	*($2) = $1
	CALL $12($4)
	
.LABEL $label$8
	CALL $131($0)
	return $0
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12696])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [28]) & [1]) == 0) ){ goto $label$13 }
	CALL $12(*(($5 + [36])))
	
.LABEL $label$13
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$14 }
	CALL $12(*(($5 + [24])))
	
.LABEL $label$14
	CALL $12($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$15:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	if ( ((*($8 + [28]) & [1]) == 0) ){ goto $label$17 }
	CALL $12(*(($8 + [36])))
	
.LABEL $label$17
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$18 }
	CALL $12(*(($8 + [24])))
	
.LABEL $label$18
	CALL $12($8)
	
.LABEL $label$16
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$15 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [92]))
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	$3 = *($3)
	if ( ((uint_32)$3 > (uint_32)[13]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$13
	CALL $74($0, $1, $2)
	return 
	
.LABEL $label$12
	CALL $75($0, $1, $2)
	return 
	
.LABEL $label$11
	CALL $74($0, $1, $1)
	CALL require_auth(*($1))
	return 
	
.LABEL $label$10
	CALL $76($0, $1, $2)
	return 
	
.LABEL $label$9
	CALL $77($0, $1)
	return 
	
.LABEL $label$8
	CALL $78($0, $1)
	
.LABEL $label$7
	return 
	
.LABEL $label$6
	CALL $74($0, $1, $2)
	return 
	
.LABEL $label$5
	CALL $74($0, $1, $2)
	$4 = *($1)
	if ( ((int_64)$4 != (int_64)*($2)) ){ goto $label$14 }
	CALL eosio_assert([0], [8996])
	$4 = *($1)
	
.LABEL $label$14
	CALL require_auth($4)
	return 
	
.LABEL $label$4
	CALL $74($0, $1, $1)
	CALL require_auth(*($1))
	return 
	
.LABEL $label$3
	CALL $79($0)
	return 
	
.LABEL $label$2
	CALL $74($0, $1, $1)
	CALL require_auth(*($1))
	return 
	
.LABEL $label$1
	CALL $80($0, $1)
	$3
}

void .FUNC $85 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-2688959343285501952, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $345($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-2688959343285501952, $6))
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*($4 + [36]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$2 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $2
	*($5 + [56]) = $2
	$2 = *($1)
	*($5 + [24]) = $2
	$6 = *($3)
	$7 = ($1 + [128])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)*(($1 + [132]))) ){ goto $label$4 }
	*($3) = *($6)
	*($7) = ($3 + [8])
	$2 = *($5 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $297(($1 + [124]), $6)
	
.LABEL $label$3
	$6 = ($1 + [136])
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	if ( ((int_64)$2 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$5
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $6
	*($5 + [88]) = $1
	$7 = ($1 + [8])
	*($5 + [92]) = $7
	$8 = ($1 + [20])
	*($5 + [96]) = $8
	$9 = ($1 + [32])
	*($5 + [100]) = $9
	$10 = ($1 + [48])
	*($5 + [104]) = $10
	$11 = ($1 + [64])
	*($5 + [108]) = $11
	$12 = ($1 + [80])
	*($5 + [112]) = $12
	$13 = ($1 + [96])
	*($5 + [116]) = $13
	$14 = ($1 + [112])
	*($5 + [120]) = $14
	$15 = ($1 + [124])
	*($5 + [124]) = $15
	$16 = ($1 + [144])
	*($5 + [132]) = $16
	$17 = ($1 + [160])
	*($5 + [136]) = $17
	$18 = ($1 + [168])
	*($5 + [140]) = $18
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $4($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $7
	*($5 + [96]) = $8
	*($5 + [100]) = $9
	*($5 + [104]) = $10
	*($5 + [108]) = $11
	*($5 + [112]) = $12
	*($5 + [116]) = $13
	*($5 + [120]) = $14
	*($5 + [124]) = $15
	*($5 + [128]) = $6
	*($5 + [132]) = $16
	*($5 + [136]) = $17
	*($5 + [140]) = $18
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), *($5 + [72]), $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $5($4)
	
.LABEL $label$8
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $300(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$2 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $2
	*($5 + [56]) = $2
	$2 = *($1)
	*($5 + [24]) = $2
	$6 = *($3)
	$7 = ($1 + [116])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)*(($1 + [120]))) ){ goto $label$4 }
	*($3) = *($6)
	*($7) = ($3 + [8])
	$2 = *($5 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $297(($1 + [112]), $6)
	
.LABEL $label$3
	$6 = ($1 + [136])
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	if ( ((int_64)$2 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$5
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $6
	*($5 + [88]) = $1
	$7 = ($1 + [8])
	*($5 + [92]) = $7
	$8 = ($1 + [20])
	*($5 + [96]) = $8
	$9 = ($1 + [32])
	*($5 + [100]) = $9
	$10 = ($1 + [48])
	*($5 + [104]) = $10
	$11 = ($1 + [64])
	*($5 + [108]) = $11
	$12 = ($1 + [80])
	*($5 + [112]) = $12
	$13 = ($1 + [96])
	*($5 + [116]) = $13
	$14 = ($1 + [112])
	*($5 + [120]) = $14
	$15 = ($1 + [124])
	*($5 + [124]) = $15
	$16 = ($1 + [144])
	*($5 + [132]) = $16
	$17 = ($1 + [160])
	*($5 + [136]) = $17
	$18 = ($1 + [168])
	*($5 + [140]) = $18
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $4($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $7
	*($5 + [96]) = $8
	*($5 + [100]) = $9
	*($5 + [104]) = $10
	*($5 + [108]) = $11
	*($5 + [112]) = $12
	*($5 + [116]) = $13
	*($5 + [120]) = $14
	*($5 + [124]) = $15
	*($5 + [128]) = $6
	*($5 + [132]) = $16
	*($5 + [136]) = $17
	*($5 + [140]) = $18
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), *($5 + [72]), $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $5($4)
	
.LABEL $label$8
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $304(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $271 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1360])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	*($3 + [1344]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL require_auth(*($3 + [1344]))
	CALL $81(($3 + [40]), ($3 + [1352]), ($3 + [1344]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1360])
}

void .FUNC $270 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1360])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	*($3 + [1344]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL $84(($3 + [40]), ($3 + [1352]), ($3 + [1344]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1360])
}

void .FUNC $277 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1404]) = $2
	*($3 + [1400]) = $2
	*($3 + [1408]) = ($2 + $4)
	*($3 + [1392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1404])
	
.LABEL $label$5
	CALL memcpy(($3 + [1392]), $2, [8])
	*($3 + [1404]) = ($2 + [8])
	*($3 + [1384]) = [0]
	*($3 + [1376]) = (int_64)0
	CALL $165(($3 + [1400]), ($3 + [1376]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [1400]) + [8]))
	*($3 + [24]) = *($3 + [1400])
	*(($4 = (($3 + [1424]) + [8]))) = *($2)
	*($3 + [1424]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [1440]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [1424])
	*($3 + [56]) = $1
	*($3 + [1440]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*($3 + [72]) = $0
	*(($3 + [208])) = $0
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [294])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*($3 + [248]) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [312])) = $0
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [352])) = $0
	*(($3 + [360])) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = $0
	*($3 + [344]) = $0
	*($3 + [392]) = $0
	*(($3 + [464])) = (int_64)-1
	*(($3 + [456])) = $0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	*(($3 + [486])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = (int_64)-1
	*(($3 + [520])) = [0]
	*(($3 + [524])) = [0]
	*(($3 + [528])) = [0]
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = (int_64)-1
	*(($3 + [568])) = [0]
	*(($3 + [572])) = [0]
	*(($3 + [576])) = [0]
	*($3 + [584]) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = $0
	*(($3 + [608])) = (int_64)-1
	*(($3 + [616])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [632])) = [0]
	*(($3 + [628])) = [0]
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = $0
	*(($3 + [696])) = $0
	*(($3 + [704])) = (int_64)-1
	*(($3 + [712])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = $0
	*(($3 + [784])) = $0
	*(($3 + [792])) = (int_64)-1
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*(($3 + [808])) = [0]
	*(($3 + [812])) = [0]
	*($3 + [816]) = $0
	*(($3 + [824])) = [1]
	*(($3 + [832])) = (int_64)8238557860461690880
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = (int_64)-1
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = $0
	*(($3 + [976])) = $0
	*(($3 + [984])) = (int_64)-1
	*(($3 + [992])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = (int_64)-1
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*($3 + [1096]) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = (int_64)-1
	*(($3 + [1168])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = (int_64)-1
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = (int_64)-1
	*(($3 + [1304])) = [0]
	*(($3 + [1308])) = [0]
	*(($3 + [1312])) = [0]
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = $0
	*(($3 + [1344])) = (int_64)-1
	*(($3 + [1352])) = [0]
	*(($3 + [1356])) = [0]
	*(($3 + [1360])) = [0]
	*($3 + [1368]) = $0
	$0 = *($3 + [1392])
	$2 = CALL $24(($3 + [8]), ($3 + [1376]))
	*($3 + [1424]) = $0
	*($3 + [1440]) = *($3 + [40])
	*($3 + [1416]) = (int_64)0
	CALL $65(($3 + [1440]), ($3 + [1424]), ($3 + [1416]), [8872])
	*($3 + [1416]) = *($3 + [40])
	$4 = CALL $24(($3 + [1440]), $2)
	CALL $107(($3 + [1416]), *($3 + [1424]), $4)
	if ( ((*($3 + [1440]) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*($4 + [8]))
	
.LABEL $label$6
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$7
	CALL $230(($3 + [40]))
	if ( ((*($3 + [1376]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*(($3 + [1384])))
	
.LABEL $label$8
	$global$0 = ($3 + [1456])
}

void .FUNC $276 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1404]) = $2
	*($3 + [1400]) = $2
	*($3 + [1408]) = ($2 + $4)
	*($3 + [1392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1404])
	
.LABEL $label$5
	CALL memcpy(($3 + [1392]), $2, [8])
	*($3 + [1404]) = ($2 + [8])
	*($3 + [1384]) = [0]
	*($3 + [1376]) = (int_64)0
	CALL $165(($3 + [1400]), ($3 + [1376]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [1400]) + [8]))
	*($3 + [24]) = *($3 + [1400])
	*(($4 = (($3 + [1424]) + [8]))) = *($2)
	*($3 + [1424]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [1440]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [1424])
	*($3 + [56]) = $1
	*($3 + [1440]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*($3 + [72]) = $0
	*(($3 + [208])) = $0
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [294])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*($3 + [248]) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [312])) = $0
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [352])) = $0
	*(($3 + [360])) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = $0
	*($3 + [344]) = $0
	*($3 + [392]) = $0
	*(($3 + [464])) = (int_64)-1
	*(($3 + [456])) = $0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	*(($3 + [486])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = (int_64)-1
	*(($3 + [520])) = [0]
	*(($3 + [524])) = [0]
	*(($3 + [528])) = [0]
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = (int_64)-1
	*(($3 + [568])) = [0]
	*(($3 + [572])) = [0]
	*(($3 + [576])) = [0]
	*($3 + [584]) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = $0
	*(($3 + [608])) = (int_64)-1
	*(($3 + [616])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [632])) = [0]
	*(($3 + [628])) = [0]
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = $0
	*(($3 + [696])) = $0
	*(($3 + [704])) = (int_64)-1
	*(($3 + [712])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = $0
	*(($3 + [784])) = $0
	*(($3 + [792])) = (int_64)-1
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*(($3 + [808])) = [0]
	*(($3 + [812])) = [0]
	*($3 + [816]) = $0
	*(($3 + [824])) = [1]
	*(($3 + [832])) = (int_64)8238557860461690880
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = (int_64)-1
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = $0
	*(($3 + [976])) = $0
	*(($3 + [984])) = (int_64)-1
	*(($3 + [992])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = (int_64)-1
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*($3 + [1096]) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = (int_64)-1
	*(($3 + [1168])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = (int_64)-1
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = (int_64)-1
	*(($3 + [1304])) = [0]
	*(($3 + [1308])) = [0]
	*(($3 + [1312])) = [0]
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = $0
	*(($3 + [1344])) = (int_64)-1
	*(($3 + [1352])) = [0]
	*(($3 + [1356])) = [0]
	*(($3 + [1360])) = [0]
	*($3 + [1368]) = $0
	$0 = *($3 + [1392])
	$2 = CALL $24(($3 + [8]), ($3 + [1376]))
	*($3 + [1440]) = $0
	CALL prints([8928])
	*($3 + [1424]) = *($3 + [40])
	*($3 + [1416]) = (int_64)0
	CALL $65(($3 + [1424]), ($3 + [1440]), ($3 + [1416]), [8924])
	CALL $108(($3 + [392]), ($3 + [1440]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$6
	CALL $230(($3 + [40]))
	if ( ((*($3 + [1376]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($3 + [1384])))
	
.LABEL $label$7
	$global$0 = ($3 + [1456])
}

void .FUNC $275 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1412]) = $2
	*($3 + [1408]) = $2
	$5 = ($2 + $4)
	*($3 + [1416]) = $5
	*($3 + [1400]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1416]))
	$2 = *($3 + [1412])
	
.LABEL $label$5
	CALL memcpy(($3 + [1400]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1412]) = $2
	*($3 + [1392]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1412])
	
.LABEL $label$6
	CALL memcpy(($3 + [1392]), $2, [8])
	*($3 + [1412]) = ($2 + [8])
	*($3 + [1384]) = [0]
	*($3 + [1376]) = (int_64)0
	CALL $165(($3 + [1408]), ($3 + [1376]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [1408]) + [8]))
	*($3 + [24]) = *($3 + [1408])
	*(($4 = (($3 + [1424]) + [8]))) = *($2)
	*($3 + [1424]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [1440]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [1424])
	*($3 + [56]) = $1
	*($3 + [1440]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*($3 + [72]) = $0
	*(($3 + [208])) = $0
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [294])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*($3 + [248]) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [312])) = $0
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [352])) = $0
	*(($3 + [360])) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = $0
	*($3 + [344]) = $0
	*($3 + [392]) = $0
	*(($3 + [464])) = (int_64)-1
	*(($3 + [456])) = $0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	*(($3 + [486])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = (int_64)-1
	*(($3 + [520])) = [0]
	*(($3 + [524])) = [0]
	*(($3 + [528])) = [0]
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = (int_64)-1
	*(($3 + [568])) = [0]
	*(($3 + [572])) = [0]
	*(($3 + [576])) = [0]
	*($3 + [584]) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = $0
	*(($3 + [608])) = (int_64)-1
	*(($3 + [616])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [632])) = [0]
	*(($3 + [628])) = [0]
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = $0
	*(($3 + [696])) = $0
	*(($3 + [704])) = (int_64)-1
	*(($3 + [712])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = $0
	*(($3 + [784])) = $0
	*(($3 + [792])) = (int_64)-1
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*(($3 + [808])) = [0]
	*(($3 + [812])) = [0]
	*($3 + [816]) = $0
	*(($3 + [824])) = [1]
	*(($3 + [832])) = (int_64)8238557860461690880
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = (int_64)-1
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = $0
	*(($3 + [976])) = $0
	*(($3 + [984])) = (int_64)-1
	*(($3 + [992])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = (int_64)-1
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*($3 + [1096]) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = (int_64)-1
	*(($3 + [1168])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = (int_64)-1
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = (int_64)-1
	*(($3 + [1304])) = [0]
	*(($3 + [1308])) = [0]
	*(($3 + [1312])) = [0]
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = $0
	*(($3 + [1344])) = (int_64)-1
	*(($3 + [1352])) = [0]
	*(($3 + [1356])) = [0]
	*(($3 + [1360])) = [0]
	*($3 + [1368]) = $0
	$2 = CALL $24(($3 + [8]), ($3 + [1376]))
	CALL $151(($3 + [40]), *($3 + [1400]), *($3 + [1392]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$7
	CALL $230(($3 + [40]))
	if ( ((*($3 + [1376]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*(($3 + [1384])))
	
.LABEL $label$8
	$global$0 = ($3 + [1456])
}

void .FUNC $274 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1336]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	CALL $125($3, *($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1344])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (*($2) + [4])
	*(($2 = *($1))) = $1
	$3 = *($3)
	$3 = *($0 + [4])
	$4 = *($3 + [4])
	$5 = (CASTING uint_64)(uint_32 ((int_32)($4 - $3) / (int_32)[44]))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$3:
	$1 = ($1 + [35])
	$5 = *($3)
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$4 }
	$3 = ($3 + [44])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$3 }
	*($2) = $1
	
.LABEL $label$2
	$3 = *($3)
	$3 = *($0 + [8])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[24]))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$6 }
	$1 = ((((int_32)((uint_32)($6 + [-24]) / (uint_32)[24]) * (int_32)[18]) + $1) + [18])
	
.LABEL $label$6
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [12])
	$4 = *($3 + [4])
	$0 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($0 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = ((((int_32)uint_32(($0 + [-8]) >> [3]) * (int_32)[6]) + $1) + [6])
	
.LABEL $label$8
	*($2) = $1
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $10($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $38($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $12($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $279 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1404]) = $2
	*($3 + [1400]) = $2
	*($3 + [1408]) = ($2 + $4)
	*($3 + [1392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1404])
	
.LABEL $label$5
	CALL memcpy(($3 + [1392]), $2, [8])
	*($3 + [1404]) = ($2 + [8])
	*($3 + [1384]) = [0]
	*($3 + [1376]) = (int_64)0
	CALL $165(($3 + [1400]), ($3 + [1376]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [1400]) + [8]))
	*($3 + [24]) = *($3 + [1400])
	*(($4 = (($3 + [1424]) + [8]))) = *($2)
	*($3 + [1424]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [1440]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [1424])
	*($3 + [56]) = $1
	*($3 + [1440]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*($3 + [72]) = $0
	*(($3 + [208])) = $0
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [294])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*($3 + [248]) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [312])) = $0
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [352])) = $0
	*(($3 + [360])) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = $0
	*($3 + [344]) = $0
	*($3 + [392]) = $0
	*(($3 + [464])) = (int_64)-1
	*(($3 + [456])) = $0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	*(($3 + [486])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = (int_64)-1
	*(($3 + [520])) = [0]
	*(($3 + [524])) = [0]
	*(($3 + [528])) = [0]
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = (int_64)-1
	*(($3 + [568])) = [0]
	*(($3 + [572])) = [0]
	*(($3 + [576])) = [0]
	*($3 + [584]) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = $0
	*(($3 + [608])) = (int_64)-1
	*(($3 + [616])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [632])) = [0]
	*(($3 + [628])) = [0]
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = $0
	*(($3 + [696])) = $0
	*(($3 + [704])) = (int_64)-1
	*(($3 + [712])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = $0
	*(($3 + [784])) = $0
	*(($3 + [792])) = (int_64)-1
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*(($3 + [808])) = [0]
	*(($3 + [812])) = [0]
	*($3 + [816]) = $0
	*(($3 + [824])) = [1]
	*(($3 + [832])) = (int_64)8238557860461690880
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = (int_64)-1
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = $0
	*(($3 + [976])) = $0
	*(($3 + [984])) = (int_64)-1
	*(($3 + [992])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = (int_64)-1
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*($3 + [1096]) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = (int_64)-1
	*(($3 + [1168])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = (int_64)-1
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = (int_64)-1
	*(($3 + [1304])) = [0]
	*(($3 + [1308])) = [0]
	*(($3 + [1312])) = [0]
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = $0
	*(($3 + [1344])) = (int_64)-1
	*(($3 + [1352])) = [0]
	*(($3 + [1356])) = [0]
	*(($3 + [1360])) = [0]
	*($3 + [1368]) = $0
	$0 = *($3 + [1392])
	$2 = CALL $24(($3 + [8]), ($3 + [1376]))
	*($3 + [1424]) = $0
	*($3 + [1440]) = *($3 + [40])
	*($3 + [1416]) = (int_64)0
	CALL $65(($3 + [1440]), ($3 + [1424]), ($3 + [1416]), [8872])
	*($3 + [1416]) = *($3 + [40])
	$4 = CALL $24(($3 + [1440]), $2)
	CALL $116(($3 + [1416]), *($3 + [1424]), $4)
	if ( ((*($3 + [1440]) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*($4 + [8]))
	
.LABEL $label$6
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$7
	CALL $230(($3 + [40]))
	if ( ((*($3 + [1376]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*(($3 + [1384])))
	
.LABEL $label$8
	$global$0 = ($3 + [1456])
}

void .FUNC $53 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $51($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $54(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $12($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $292(CALL $291($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $56($0, $1)
	CALL $56($0, $2)
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	$10 = (int_64)0
	$5 = *($1)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $57($4, $8)
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$6
	$10 = (int_64)0
	$5 = *($1)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$11:
	*((($3 + [16]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$10 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)$10) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$3 }
	*($3) = ($7 << [1])
	$6 = ($3 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($3 + [8])) = [0]
	*($3) = $10
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$1 
	
.LABEL $label$3
	$11 = (($7 + [16]) & [-16])
	$6 = CALL $10($11)
	*($3) = ($11 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $7
	
.LABEL $label$2
	$11 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$12:
	*(($6 + $8)) = *((($3 + [16]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$12 }
	$8 = ($6 + $7)
	
.LABEL $label$1
	*($8) = [0]
	$8 = CALL $34($3, [0], [10606])
	$7 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($7)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$17 }
	$8 = [1]
	if ( (*($3 + [16]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL eosio_assert([0], ( *($3 + [24]) ? (($3 + [16]) | [1]) : (*($3 + [16]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $12(*($3 + [24]))
	if ( (*($3) & $8) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($3) & $8) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $12(*($3 + [8]))
	
.LABEL $label$13
	$5 = *($2)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$24 }
	
.LOOP $label$26:
	$8 = ($7 + [-24])
	$12 = *($8)
	if ( ((int_64)*($12) == (int_64)$5) ){ goto $label$25 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$24 }
	if ( ((int_32)*($12 + [176]) == (int_32)$4) ){ goto $label$23 }
	CALL eosio_assert([0], [11551])
	$10 = (int_64)0
	$5 = *($2)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$12 = [0]
	$8 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$23 }
	$12 = CALL $57($4, $8)
	if ( ((int_32)*($12 + [176]) == (int_32)$4) ){ goto $label$23 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$23
	$10 = (int_64)0
	$5 = *($2)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$21 }
	
.LABEL $label$22
	$7 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$28:
	*((($3 + [16]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$27 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)$10) ){ goto $label$28 }
	
.LABEL $label$27
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$20 }
	*($3) = ($7 << [1])
	$6 = ($3 | [1])
	goto $label$19 
	
.LABEL $label$21
	*(($3 + [8])) = [0]
	*($3) = $10
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$18 
	
.LABEL $label$20
	$11 = (($7 + [16]) & [-16])
	$6 = CALL $10($11)
	*($3) = ($11 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $7
	
.LABEL $label$19
	$11 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$29:
	*(($6 + $8)) = *((($3 + [16]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$11 != (int_32)$8) ){ goto $label$29 }
	$8 = ($6 + $7)
	
.LABEL $label$18
	*($8) = [0]
	$8 = CALL $34($3, [0], [10647])
	$7 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($7)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$36 }
	$8 = [1]
	if ( (*($3 + [16]) & [1]) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL eosio_assert([0], ( *($3 + [24]) ? (($3 + [16]) | [1]) : (*($3 + [16]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL $12(*($3 + [24]))
	if ( ((*($3) & $8) == 0) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	if ( (*($3) & $8) ){ goto $label$32 }
	
.LABEL $label$33
	$5 = *($0)
	*($3 + [16]) = $2
	if ( ($9 == 0) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $12(*($3 + [8]))
	$5 = *($0)
	*($3 + [16]) = $2
	if ( $9 ){ goto $label$30 }
	
.LABEL $label$31
	CALL eosio_assert([0], [10691])
	
.LABEL $label$30
	CALL $58($4, $9, $5, ($3 + [16]))
	$5 = *($0)
	*($3 + [16]) = $1
	if ( $12 ){ goto $label$37 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$37
	CALL $59($4, $12, $5, ($3 + [16]))
	CALL $60($0, *($2))
	$global$0 = ($3 + [32])
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [64])
	$global$0 = $2
	if ( (CALL $90($0, $1) == 0) ){ goto $label$1 }
	$3 = ($0 + [8])
	$4 = *($1)
	$6 = *(($0 + [36]))
	$5 = *(($0 + [32]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [88]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($3), *(($0 + [16])), (int_64)-5915276602094125056, $4)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$6 }
	$8 = CALL $91($3, $7)
	if ( ((int_32)*($8 + [88]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$6
	$8 = [0]
	
.LABEL $label$2
	*($2 + [44]) = $8
	*($2 + [40]) = $3
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$10 }
	$6 = [0]
	$5 = *([0] + [12468])
	
.LOOP $label$12:
	*((($2 + [48]) + ($7 = $6))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$11 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$12 }
	
.LABEL $label$11
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$9 }
	*($2 + [8]) = ($6 << [1])
	$5 = (($2 + [8]) | [1])
	goto $label$8 
	
.LABEL $label$10
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [8]) = [0]
	$7 = (($2 + [8]) | [1])
	goto $label$7 
	
.LABEL $label$9
	$9 = (($6 + [16]) & [-16])
	$5 = CALL $10($9)
	*($2 + [8]) = ($9 | [1])
	*($2 + [16]) = $5
	*($2 + [12]) = $6
	
.LABEL $label$8
	$9 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$13:
	*(($5 + $7)) = *((($2 + [48]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$13 }
	$7 = ($5 + $6)
	
.LABEL $label$7
	*($7) = [0]
	$7 = CALL $34(($2 + [8]), [0], [12505])
	$6 = ($7 + [8])
	*((($2 + [24]) + [8])) = *($6)
	*($2 + [24]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	$7 = CALL $31(($2 + [24]), [12534])
	$6 = ($7 + [8])
	*((($2 + [48]) + [8])) = *($6)
	*($2 + [48]) = *($7)
	*($7) = (int_64)0
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$20 }
	$7 = [1]
	if ( (*($2 + [48]) & [1]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL eosio_assert([0], ( *($2 + [56]) ? (($2 + [48]) | [1]) : (*($2 + [48]) & [1]) ))
	$7 = [1]
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $12(*($2 + [56]))
	if ( ((*($2 + [24]) & $7) == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	if ( (*($2 + [24]) & $7) ){ goto $label$16 }
	
.LABEL $label$17
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$16
	CALL $12(*($2 + [32]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $12(*($2 + [16]))
	
.LABEL $label$14
	$4 = *($0)
	*($2 + [48]) = $1
	*($2 + [52]) = ($2 + [40])
	CALL $92(($2 + [24]), ($0 + [48]), $4, ($2 + [48]))
	$4 = *($2 + [40])
	$7 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( $7) ){ goto $label$21 }
	CALL eosio_assert([0], [12567])
	CALL eosio_assert([0], [11218])
	
.LABEL $label$21
	$6 = CALL db_next_i64(*($7 + [92]), ($2 + [48]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$22 }
	CALL $91((CASTING uint_32)(uint_64 $4), $6)
	
.LABEL $label$22
	CALL $93($3, $7)
	
.LABEL $label$1
	$global$0 = ($2 + [64])
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$5 = CALL $10([208])
	CALL $356($5)
	*($5 + [176]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [20])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [64])
	*($3 + [64]) = ($5 + [80])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [112])
	*($3 + [76]) = ($5 + [124])
	*($3 + [80]) = ($5 + [136])
	*($3 + [84]) = ($5 + [144])
	*($3 + [88]) = ($5 + [160])
	*($3 + [92]) = ($5 + [168])
	CALL $408(($3 + [40]), ($3 + [32]))
	*($5 + [180]) = $1
	*($5 + [184 align=4]) = (int_64)-1
	*($5 + [192 align=4]) = (int_64)-1
	*($5 + [200]) = [-1]
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $358(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $327(($1 + [144]), *(($1 + [148])))
	$4 = *($1 + [124])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [128])) = $4
	CALL $12($4)
	
.LABEL $label$11
	$4 = *($1 + [112])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [116])) = $4
	CALL $12($4)
	
.LABEL $label$12
	if ( (*($1 + [32]) & [1]) ){ goto $label$17 }
	if ( (*($1 + [20]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $12(*(($1 + [40])))
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $12(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL $12(*(($1 + [16])))
	
.LABEL $label$13
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

void .FUNC $152 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [24]) = *(($1 + [8]))
	$6 = *($3)
	$7 = *($1)
	$3 = ($1 + [20])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)*(($1 + [24]))) ){ goto $label$5 }
	CALL $24($8, $6)
	*($3) = (*($3) + [12])
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL $367(($1 + [16]), $6)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	$3 = [16]
	$9 = ($1 + [16])
	$6 = *($1 + [16])
	$10 = *(($1 + [20]))
	$11 = (CASTING uint_64)(uint_32 ((int_32)($10 - $6) / (int_32)[12]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$7 }
	
.LOOP $label$8:
	$8 = *($6)
	$8 = ( *($6 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$3 = ($8 + $3)
	$11 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$9 }
	$6 = ($6 + [12])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$8 }
	
.LABEL $label$7
	$6 = ($3 + [20])
	if ( ($6 <= [513]) ){ goto $label$11 }
	$3 = CALL $4($6)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$10
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $6)
	*($5 + [32]) = ($5 + [8])
	*($5 + [48]) = $9
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [52]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	CALL $430(($5 + [40]), ($5 + [32]))
	CALL db_update_i64(*($1 + [56]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$12 }
	CALL $5($3)
	
.LABEL $label$12
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	*($5 + [40]) = *(($1 + [8]))
	if ( (CALL $3(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$14 }
	$3 = *($1 + [60])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$15 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4849559493988974592, ($5 + [32]), $7)
	*(($1 + [60])) = $3
	
.LABEL $label$15
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$14
	$global$0 = ($5 + [64])
}

void .FUNC $153 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	float_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$5 = ($global$0 - [256])
	$global$0 = $5
	*($5 + [144]) = $2
	*($5 + [152]) = $1
	*($5 + [208]) = *($0)
	CALL $65(($5 + [208]), ($5 + [152]), ($5 + [144]), [9120])
	CALL require_auth(*($5 + [152]))
	if ( CALL $145($0, *($5 + [152])) ){ goto $label$1 }
	CALL eosio_assert([0], [9124])
	
.LABEL $label$1
	$1 = *($0 + [304])
	*(($5 + [248])) = (int_64)0
	*($5 + [232]) = (int_64)0
	*($5 + [240]) = (int_64)0
	*($5 + [208]) = (int_64)0
	*($5 + [216]) = (int_64)0
	*($5 + [224]) = (int_64)0
	*($5 + [236]) = [0]
	*($5 + [240]) = [0]
	CALL $72(($5 + [160]), ($0 + [312]), $1, ($5 + [208]))
	if ( ((int_32)*($5 + [184]) != (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$2
	if ( CALL $154(($0 + [32]), ($5 + [144]), $3) ){ goto $label$3 }
	CALL eosio_assert([0], [9161])
	
.LABEL $label$3
	$6 = [0]
	*((($5 + [160]) + [32])) = [0]
	*($5 + [176]) = (int_64)-1
	*($5 + [184]) = (int_64)0
	*($5 + [196]) = [0]
	$1 = *($0)
	*($5 + [160]) = $1
	*($5 + [168]) = $1
	$3 = CALL db_find_i64($1, $1, (int_64)4849559493988974592, *($5 + [144]))
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL $126(($5 + [160]), $3)
	if ( ((int_32)*($6 + [52]) == (int_32)($5 + [160])) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [8703])
	
.LABEL $label$4
	$2 = *($6 + [8])
	$3 = ($6 + [40])
	$7 = *($3)
	*((($5 + [128]) + [8])) = $7
	$1 = *($6 + [32])
	*((($5 + [8]) + [8])) = $7
	*($5 + [128]) = $1
	*($5 + [8]) = $1
	CALL $155($0, $2, ($5 + [8]))
	$8 = ((float_32)(CASTING float_32)(int_64 *($6 + [32])) * (float_32)(float_32)0.20000000298023224)
	if ( ((float_32)(float_32)|$8| < (float_32)(float_32)9223372036854775808) ){ goto $label$7 }
	$7 = (int_64)-9223372036854775808
	goto $label$6 
	
.LABEL $label$7
	$7 = (Rounds 0)($8)
	
.LABEL $label$6
	$9 = *($3)
	if ( (uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$8 }
	CALL eosio_assert([0], [14454])
	
.LABEL $label$8
	$1 = (uint_64)$9 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$1 = $2
	$10 = $3
	$3 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$1 = $2
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$3 < (int_32)[6])
	$11 = ($3 + [1])
	$3 = $11
	if ( $10 ){ goto $label$13 }
	$3 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [9800])
	
.LABEL $label$9
	$8 = ((float_32)(CASTING float_32)(int_64 *(($6 + [32]))) * (float_32)(float_32)0.4000000059604645)
	if ( ((float_32)(float_32)|$8| < (float_32)(float_32)9223372036854775808) ){ goto $label$15 }
	$12 = (int_64)-9223372036854775808
	goto $label$14 
	
.LABEL $label$15
	$12 = (Rounds 0)($8)
	
.LABEL $label$14
	$13 = *(($6 + [40]))
	if ( (uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$16 }
	CALL eosio_assert([0], [14454])
	
.LABEL $label$16
	$1 = (uint_64)$13 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$1 = $2
	$10 = $3
	$3 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$1 = $2
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$10 = ((int_32)$3 < (int_32)[6])
	$11 = ($3 + [1])
	$3 = $11
	if ( $10 ){ goto $label$21 }
	$3 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [9800])
	
.LABEL $label$17
	$2 = *(($6 + [32]))
	$1 = *(($6 + [40]))
	if ( ((int_64)$9 == (int_64)$1) ){ goto $label$22 }
	CALL eosio_assert([0], [14736])
	
.LABEL $label$22
	$2 = (int_64)
	if ( ((int_64)$2($2 - $7)) <= (int_64)-4611686018427387904) ){ goto $label$29 }
	if ( ((int_64)$2 >= (int_64)4611686018427387904) ){ goto $label$28 }
	if ( ((int_64)$13 != (int_64)$1) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	CALL eosio_assert([0], [14784])
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$26 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [14806])
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$26 }
	
.LABEL $label$27
	CALL eosio_assert([0], [14736])
	$14 = (int_64)
	if ( ((int_64)$14($2 - $12)) > (int_64)-4611686018427387904) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$14 = (int_64)
	if ( ((int_64)$14($2 - $12)) <= (int_64)-4611686018427387904) ){ goto $label$24 }
	
.LABEL $label$25
	if ( ((int_64)$14 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [14806])
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [14784])
	
.LABEL $label$23
	*(($5 + [120])) = [0]
	*($5 + [112]) = (int_64)0
	$3 = CALL $2([9225])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$37 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$40 }
	*($5 + [112]) = ($3 << [1])
	$10 = (($5 + [112]) | [1])
	if ( $3 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$11 = (($3 + [16]) & [-16])
	$10 = CALL $10($11)
	*($5 + [112]) = ($11 | [1])
	*($5 + [120]) = $10
	*($5 + [116]) = $3
	
.LABEL $label$39
	CALL memcpy($10, [9225], $3)
	
.LABEL $label$38
	*(($10 + $3)) = [0]
	*(($5 + [104])) = [0]
	*($5 + [96]) = (int_64)0
	$3 = CALL $2([9305])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$36 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$43 }
	*($5 + [96]) = ($3 << [1])
	$10 = (($5 + [96]) | [1])
	if ( $3 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$11 = (($3 + [16]) & [-16])
	$10 = CALL $10($11)
	*($5 + [96]) = ($11 | [1])
	*($5 + [104]) = $10
	*($5 + [100]) = $3
	
.LABEL $label$42
	CALL memcpy($10, [9305], $3)
	
.LABEL $label$41
	*(($10 + $3)) = [0]
	*(($5 + [88])) = [0]
	*($5 + [80]) = (int_64)0
	$3 = CALL $2([9409])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$35 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$46 }
	*($5 + [80]) = ($3 << [1])
	$10 = (($5 + [80]) | [1])
	if ( $3 ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	$11 = (($3 + [16]) & [-16])
	$10 = CALL $10($11)
	*($5 + [80]) = ($11 | [1])
	*($5 + [88]) = $10
	*($5 + [84]) = $3
	
.LABEL $label$45
	CALL memcpy($10, [9409], $3)
	
.LABEL $label$44
	*(($10 + $3)) = [0]
	*($5 + [32]) = (int_64)-6402241254016417792
	$2 = *($0)
	*($5 + [24]) = $2
	$15 = *(($6 + [8]))
	*(($5 + [232])) = $9
	*($5 + [208]) = $15
	*($5 + [216]) = *($5 + [152])
	*($5 + [224]) = $7
	CALL $24((($5 + [208]) + [32]), ($5 + [112]))
	$3 = CALL $156(($5 + [40]), ($5 + [24]), $2, (int_64)-3617168760277827584, ($5 + [208]))
	CALL $53($3)
	$10 = *($3 + [28])
	if ( ($10 == 0) ){ goto $label$47 }
	*(($3 + [32])) = $10
	CALL $12($10)
	
.LABEL $label$47
	$10 = *($3 + [16])
	if ( ($10 == 0) ){ goto $label$48 }
	*(($3 + [20])) = $10
	CALL $12($10)
	
.LABEL $label$48
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$49 }
	CALL $12(*(($5 + [248])))
	
.LABEL $label$49
	*($5 + [32]) = (int_64)-6402241254016417792
	$2 = *($0)
	*($5 + [24]) = $2
	$7 = *(($6 + [8]))
	$9 = *($6)
	*(($5 + [232])) = $13
	*($5 + [208]) = $7
	*($5 + [224]) = $12
	*($5 + [216]) = $9
	CALL $24((($5 + [208]) + [32]), ($5 + [96]))
	$3 = CALL $156(($5 + [40]), ($5 + [24]), $2, (int_64)-3617168760277827584, ($5 + [208]))
	CALL $53($3)
	$10 = *($3 + [28])
	if ( ($10 == 0) ){ goto $label$50 }
	*(($3 + [32])) = $10
	CALL $12($10)
	
.LABEL $label$50
	$10 = *($3 + [16])
	if ( ($10 == 0) ){ goto $label$51 }
	*(($3 + [20])) = $10
	CALL $12($10)
	
.LABEL $label$51
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$52 }
	CALL $12(*(($5 + [248])))
	
.LABEL $label$52
	*($5 + [32]) = (int_64)-6402241254016417792
	$2 = *($0)
	*($5 + [24]) = $2
	$7 = *(($6 + [8]))
	*(($5 + [232])) = $1
	*($5 + [216]) = $2
	*($5 + [208]) = $7
	*($5 + [224]) = $14
	CALL $24((($5 + [208]) + [32]), ($5 + [80]))
	$3 = CALL $156(($5 + [40]), ($5 + [24]), $2, (int_64)-3617168760277827584, ($5 + [208]))
	CALL $53($3)
	$10 = *($3 + [28])
	if ( ($10 == 0) ){ goto $label$53 }
	*(($3 + [32])) = $10
	CALL $12($10)
	
.LABEL $label$53
	$10 = *($3 + [16])
	if ( ($10 == 0) ){ goto $label$54 }
	*(($3 + [20])) = $10
	CALL $12($10)
	
.LABEL $label$54
	if ( ((*($5 + [240]) & [1]) == 0) ){ goto $label$55 }
	CALL $12(*(($5 + [248])))
	
.LABEL $label$55
	if ( $6 ){ goto $label$56 }
	CALL eosio_assert([0], [12567])
	CALL eosio_assert([0], [11218])
	
.LABEL $label$56
	$3 = CALL db_next_i64(*($6 + [56]), ($5 + [208]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$57 }
	CALL $126(($5 + [160]), $3)
	
.LABEL $label$57
	CALL $127(($5 + [160]), $6)
	if ( (*($5 + [80]) & [1]) ){ goto $label$59 }
	if ( (*($5 + [96]) & [1]) ){ goto $label$58 }
	goto $label$34 
	
.LABEL $label$59
	CALL $12(*($5 + [88]))
	if ( ((*($5 + [96]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$58
	CALL $12(*($5 + [104]))
	if ( ((*($5 + [112]) & [1]) == 0) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$37
	CALL $23(($5 + [112]))
	
.LABEL $label$36
	CALL $23(($5 + [96]))
	
.LABEL $label$35
	CALL $23(($5 + [80]))
	
.LABEL $label$34
	if ( (*($5 + [112]) & [1]) ){ goto $label$32 }
	
.LABEL $label$33
	$16 = *($5 + [184])
	if ( $16 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $12(*($5 + [120]))
	$16 = *($5 + [184])
	if ( ($16 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$17 = ($5 + [188])
	$6 = *($17)
	if ( ((int_32)$6 == (int_32)$16) ){ goto $label$61 }
	
.LOOP $label$62:
	$6 = ($6 + [-24])
	$0 = *($6)
	*($6) = [0]
	if ( ($0 == 0) ){ goto $label$63 }
	$11 = *($0 + [16])
	if ( ($11 == 0) ){ goto $label$64 }
	$18 = ($0 + [20])
	$10 = *($18)
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$66 }
	
.LOOP $label$67:
	$3 = ($10 + [-12])
	if ( ((*($3) & [1]) == 0) ){ goto $label$68 }
	CALL $12(*(($10 + [-4])))
	
.LABEL $label$68
	$10 = $3
	if ( ((int_32)$11 != (int_32)$3) ){ goto $label$67 }
	$3 = *(($0 + [16]))
	goto $label$65 
	
.LABEL $label$66
	$3 = $11
	
.LABEL $label$65
	*($18) = $11
	CALL $12($3)
	
.LABEL $label$64
	CALL $12($0)
	
.LABEL $label$63
	if ( ((int_32)$6 != (int_32)$16) ){ goto $label$62 }
	$3 = *(($5 + [184]))
	goto $label$60 
	
.LABEL $label$61
	$3 = $16
	
.LABEL $label$60
	*($17) = $16
	CALL $12($3)
	$global$0 = ($5 + [256])
	return 
	
.LABEL $label$30
	$global$0 = ($5 + [256])
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$2 = CALL $4($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $10([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $381(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $5($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $12($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $151 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4) = $2
	*($4 + [8]) = $1
	CALL require_auth($1)
	*($4 + [64]) = *($0)
	CALL $65(($4 + [64]), ($4 + [8]), $4, [9116])
	$1 = *($0 + [304])
	*(($4 + [104])) = (int_64)0
	*($4 + [88]) = (int_64)0
	*($4 + [96]) = (int_64)0
	*($4 + [64]) = (int_64)0
	*($4 + [72]) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($4 + [92]) = [0]
	*($4 + [96]) = [0]
	CALL $72(($4 + [16]), ($0 + [312]), $1, ($4 + [64]))
	if ( ((int_32)*($4 + [40]) != (int_32)[1]) ){ goto $label$1 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$1
	*(($4 + [96])) = [0]
	*($4 + [80]) = (int_64)-1
	*($4 + [88]) = (int_64)0
	*($4 + [100]) = [0]
	$1 = *($0)
	*($4 + [64]) = $1
	*($4 + [72]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)4849559493988974592, *($4))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $126(($4 + [64]), $5)
	if ( ((int_32)*($5 + [52]) == (int_32)($4 + [64])) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	$1 = *($0)
	*($4 + [16]) = $3
	goto $label$2 
	
.LABEL $label$3
	$5 = [0]
	CALL eosio_assert([0], [8703])
	$1 = *($0)
	*($4 + [16]) = $3
	CALL eosio_assert([0], [10691])
	
.LABEL $label$2
	CALL $152(($4 + [64]), $5, $1, ($4 + [16]))
	$6 = *($4 + [88])
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ($4 + [92])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$9 }
	$5 = *($9 + [16])
	if ( ($5 == 0) ){ goto $label$10 }
	$10 = ($9 + [20])
	$3 = *($10)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($3 + [-12])
	if ( ((*($0) & [1]) == 0) ){ goto $label$14 }
	CALL $12(*(($3 + [-4])))
	
.LABEL $label$14
	$3 = $0
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($9 + [16]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $5
	
.LABEL $label$11
	*($10) = $5
	CALL $12($0)
	
.LABEL $label$10
	CALL $12($9)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$8 }
	$0 = *(($4 + [88]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $6
	
.LABEL $label$6
	*($7) = $6
	CALL $12($0)
	
.LABEL $label$5
	$global$0 = ($4 + [112])
}

int_32 .FUNC $156 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL $10([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $51($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $161(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $157 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)4849559493988974592, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [52]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $126($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)4849559493988974592, $6))
	if ( ((int_32)*($4 + [52]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*($4 + [60]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $154 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	if ( (CALL $129($0, $1) == 0) ){ goto $label$17 }
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$15 }
	
.LOOP $label$18:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$16 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$18 }
	goto $label$15 
	
.LABEL $label$17
	if ( (CALL $90($0, $1) == 0) ){ goto $label$19 }
	$4 = ($0 + [8])
	$5 = *($1)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$20:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$12 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$20 }
	goto $label$11 
	
.LABEL $label$19
	$5 = *($1)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$13 }
	$7 = [0]
	$8 = *([0] + [12468])
	
.LOOP $label$22:
	*((($3 + [32]) + ($1 = $7))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$7 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$21 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$22 }
	
.LABEL $label$21
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$9 }
	*($3) = ($7 << [1])
	$8 = ($3 | [1])
	goto $label$8 
	
.LABEL $label$16
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$15 }
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$14 }
	CALL eosio_assert([0], [11551])
	goto $label$14 
	
.LABEL $label$15
	$8 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$14 }
	$8 = CALL $57($4, $1)
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$14 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$14
	$6 = ($1 & [1])
	$1 = *($2)
	$1 = ( *($2 + [4]) ? uint_32($1 >> [1]) : $6 )
	$0 = *($2 + [8])
	$7 = *($8 + [8])
	if ( ($7 & [1]) ){ goto $label$23 }
	$4 = (($8 + [8]) + [1])
	$9 = ($1 <= $7)
	$7 = uint_32($7 >> [1])
	$8 = ( $1 ? $7 : $9 )
	if ( ($8 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$23
	$4 = *(($8 + [16]))
	$9 = ($1 <= $7)
	$7 = *(($8 + [12]))
	$8 = ( $1 ? $7 : $9 )
	if ( $8 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$13
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$1 = ($3 | [1])
	goto $label$7 
	
.LABEL $label$12
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	if ( ((int_32)*($8 + [88]) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [11551])
	goto $label$10 
	
.LABEL $label$11
	$8 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [16])), (int_64)-5915276602094125056, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$8 = CALL $91($4, $1)
	if ( ((int_32)*($8 + [88]) == (int_32)$4) ){ goto $label$10 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$10
	$6 = ($1 & [1])
	$1 = *($2)
	$1 = ( *($2 + [4]) ? uint_32($1 >> [1]) : $6 )
	$0 = *($2 + [8])
	$7 = *($8 + [16])
	if ( ($7 & [1]) ){ goto $label$24 }
	$4 = (($8 + [16]) + [1])
	$9 = ($1 <= $7)
	$7 = uint_32($7 >> [1])
	$8 = ( $1 ? $7 : $9 )
	if ( ($8 == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$24
	$4 = *(($8 + [24]))
	$9 = ($1 <= $7)
	$7 = *(($8 + [20]))
	$8 = ( $1 ? $7 : $9 )
	if ( $8 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$9
	$6 = (($7 + [16]) & [-16])
	$8 = CALL $10($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $8
	*($3 + [4]) = $7
	
.LABEL $label$8
	$6 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$25:
	*(($8 + $1)) = *((($3 + [32]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$25 }
	$1 = ($8 + $7)
	
.LABEL $label$7
	*($1) = [0]
	$1 = CALL $34($3, [0], [13527])
	$7 = ($1 + [8])
	*((($3 + [16]) + [8])) = *($7)
	*($3 + [16]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	$1 = CALL $31(($3 + [16]), [13557])
	$8 = ($1 + [8])
	*(($7 = (($3 + [32]) + [8]))) = *($8)
	*($3 + [32]) = *($1)
	*($1) = (int_64)0
	*($8) = [0]
	CALL eosio_assert([0], ( *($7) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	if ( (*($3 + [32]) & [1]) ){ goto $label$30 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	CALL $12(*($7))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$28 }
	
.LABEL $label$29
	CALL $12(*($3 + [24]))
	if ( (*($3) & [1]) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	if ( ((*($3) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $12(*($3 + [8]))
	
.LABEL $label$26
	$global$0 = ($3 + [48])
	return [0]
	
.LABEL $label$6
	$8 = CALL $3($4, ( $0 ? ($2 + [1]) : $6 ), $8)
	if ( $8 ){ goto $label$4 }
	
.LABEL $label$5
	$8 = ( [-1] ? $9 : ($7 <= $1) )
	
.LABEL $label$4
	$global$0 = ($3 + [48])
	return ($8 == 0)
	
.LABEL $label$3
	$8 = CALL $3($4, ( $0 ? ($2 + [1]) : $6 ), $8)
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ( [-1] ? $9 : ($7 <= $1) )
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return ($8 == 0)
}

void .FUNC $155 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	float_32 $23
	$3 = ($global$0 - [192])
	$global$0 = $3
	*($3 + [56]) = $1
	CALL require_auth($1)
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$1 }
	CALL eosio_assert([0], [10299])
	
.LABEL $label$1
	if ( CALL $129(($0 + [32]), ($3 + [56])) ){ goto $label$2 }
	CALL eosio_assert([0], [10353])
	
.LABEL $label$2
	$4 = ($0 + [80])
	$1 = *($3 + [56])
	$6 = *(($0 + [108]))
	$5 = *(($0 + [104]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$6:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$5 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [11551])
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [88])), (int_64)-5915276602093076480, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $57($4, $7)
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [11551])
	goto $label$3 
	
.LABEL $label$7
	CALL eosio_assert([0], [10428])
	
.LABEL $label$3
	$7 = [0]
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	*($3 + [52]) = [0]
	$1 = *($0)
	*($3 + [16]) = $1
	*($3 + [24]) = $1
	*($3 + [8]) = ($3 + [16])
	*($3 + [128]) = (int_64)0
	CALL $157($3, ($3 + [8]), ($3 + [128]))
	$9 = *($2 + [8])
	$1 = (uint_64)$9 >> (uint_64)(int_64)8)
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$10 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$1 = $10
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$1 = $10
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$12 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [9800])
	
.LABEL $label$8
	$1 = (int_64)0
	$7 = *($3 + [4])
	if ( ($7 == 0) ){ goto $label$13 }
	if ( ((int_64)*($7 + [8]) != (int_64)*($3 + [56])) ){ goto $label$13 }
	$1 = (int_64)0
	
.LOOP $label$14:
	if ( ((int_64)*(($7 + [40])) == (int_64)$9) ){ goto $label$15 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$15
	$1 = ((int_64)*($7 + [32]) + (int_64)$1)
	if ( ((int_64)$1 <= (int_64)-4611686018427387904) ){ goto $label$18 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$17 }
	CALL eosio_assert([0], [14718])
	CALL $158($3)
	$7 = *($3 + [4])
	if ( $7 ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$18
	CALL eosio_assert([0], [14699])
	
.LABEL $label$17
	CALL $158($3)
	$7 = *($3 + [4])
	if ( ($7 == 0) ){ goto $label$13 }
	
.LABEL $label$16
	if ( ((int_64)*($7 + [8]) == (int_64)*($3 + [56])) ){ goto $label$14 }
	
.LABEL $label$13
	$10 = *($8 + [64])
	$11 = *(($8 + [72]))
	if ( ((int_64)*(($8 + [88])) == (int_64)$11) ){ goto $label$19 }
	CALL eosio_assert([0], [14736])
	
.LABEL $label$19
	$10 = (int_64)
	if ( ((int_64)$10($10 - *($8 + [80]))) <= (int_64)-4611686018427387904) ){ goto $label$21 }
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$20 }
	CALL eosio_assert([0], [14806])
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [14784])
	
.LABEL $label$20
	if ( ((int_64)$11 == (int_64)*(($2 + [8]))) ){ goto $label$22 }
	CALL eosio_assert([0], [14395])
	
.LABEL $label$22
	if ( ((int_64)$10 >= (int_64)*($2)) ){ goto $label$23 }
	CALL eosio_assert([0], [10455])
	
.LABEL $label$23
	$11 = *(($8 + [64]))
	$10 = *(($8 + [72]))
	if ( ((int_64)*(($8 + [88])) == (int_64)$10) ){ goto $label$24 }
	CALL eosio_assert([0], [14736])
	
.LABEL $label$24
	$11 = (int_64)
	if ( ((int_64)$11($11 - *(($8 + [80])))) <= (int_64)-4611686018427387904) ){ goto $label$31 }
	if ( ((int_64)$11 >= (int_64)4611686018427387904) ){ goto $label$30 }
	if ( ((int_64)$9 != (int_64)$10) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$31
	CALL eosio_assert([0], [14784])
	if ( ((int_64)$9 == (int_64)$10) ){ goto $label$28 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [14806])
	if ( ((int_64)$9 == (int_64)$10) ){ goto $label$28 }
	
.LABEL $label$29
	CALL eosio_assert([0], [14736])
	$9 = (int_64)
	if ( ((int_64)$9($11 - $1)) > (int_64)-4611686018427387904) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$9 = (int_64)
	if ( ((int_64)$9($11 - $1)) <= (int_64)-4611686018427387904) ){ goto $label$26 }
	
.LABEL $label$27
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$25 }
	CALL eosio_assert([0], [14806])
	goto $label$25 
	
.LABEL $label$26
	CALL eosio_assert([0], [14784])
	
.LABEL $label$25
	if ( ((int_64)$10 != (int_64)*(($2 + [8]))) ){ goto $label$36 }
	$1 = *($2)
	if ( ((int_64)$9 < (int_64)$1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL eosio_assert([0], [14395])
	$1 = *($2)
	if ( ((int_64)$9 >= (int_64)$1) ){ goto $label$34 }
	
.LABEL $label$35
	CALL eosio_assert([0], [10506])
	$12 = (int_64)1
	$1 = *($2)
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$34
	$12 = (int_64)1
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$32 }
	
.LABEL $label$33
	$13 = ($2 + [8])
	$14 = *($13)
	$15 = (uint_64)$14 >> (uint_64)(int_64)8)
	$16 = ($3 + [164])
	$17 = ($3 + [140])
	$18 = ($3 + [148])
	$19 = ($3 + [156])
	$20 = ($3 + [172])
	$21 = ($3 + [180])
	$9 = $14
	$22 = [64800]
	$10 = $1
	
.LOOP $label$37:
	$23 = ((float_32)(CASTING float_32)(int_64 $1) * (float_32)(float_32)0.05000000074505806)
	if ( ((float_32)(float_32)|$23| < (float_32)(float_32)9223372036854775808) ){ goto $label$40 }
	$11 = (int_64)-9223372036854775808
	if ( ((uint_64)((int_64)-9223372036854775808 + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$11 = (Rounds 0)($23)
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$38 }
	
.LABEL $label$39
	CALL eosio_assert([0], [14454])
	
.LABEL $label$38
	$1 = (uint_64)$9 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$1 = $9
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$44
	$1 = $9
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$42 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$45 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	CALL eosio_assert([0], [9800])
	
.LABEL $label$41
	$11 = ( $11 ? $10 : ((int_64)$10 > (int_64)$11) )
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$46 }
	CALL eosio_assert([0], [14454])
	
.LABEL $label$46
	$7 = [0]
	$1 = $15
	
.LOOP $label$49:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$48 }
	$9 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$50 }
	$1 = $9
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$50
	$1 = $9
	
.LOOP $label$51:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$48 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$51 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$48
	CALL eosio_assert([0], [9800])
	
.LABEL $label$47
	$1 = *($3 + [56])
	$9 = CALL $39()
	*($17) = [0]
	*((($3 + [128]) + [16])) = [0]
	*($18) = (int_64)0
	*($19) = (int_64)0
	*($16) = (int_64)0
	*($20) = (int_64)0
	*($21) = (int_64)0
	*($3 + [128]) = ((CASTING uint_32)(uint_64 ((int_64)$9 / (int_64)1000000)) + [60])
	*((($3 + [112]) + [8])) = (int_64)-6402241254016417792
	$9 = *($0)
	*($3 + [112]) = $9
	*($3 + [104]) = $9
	*($3 + [96]) = (int_64)-3102536759673618432
	*((($3 + [64]) + [8])) = $11
	*((($3 + [64]) + [16])) = $14
	*($3 + [64]) = $1
	CALL $159($16, ($3 + [112]), ($3 + [104]), ($3 + [96]), ($3 + [64]))
	*($18) = $22
	$7 = CALL $40()
	*($3 + [72]) = (int_64)0
	*($3 + [64]) = ((int_64)((int_64)$1 + (int_64)(CASTING uint_64)(uint_32 $22)) + (int_64)((int_64)((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000) & (int_64)4294967295))
	CALL $112(($3 + [128]), ($3 + [64]), *($0), [0])
	CALL $114(($3 + [128]))
	$10 = (int_64)
	if ( ((int_64)$10($10 - $11)) <= (int_64)-4611686018427387904) ){ goto $label$52 }
	if ( ((int_64)$10 >= (int_64)4611686018427387904) ){ goto $label$54 }
	if ( ((int_64)$10 >= (int_64)$12) ){ goto $label$53 }
	goto $label$32 
	
.LABEL $label$54
	CALL eosio_assert([0], [14806])
	
.LABEL $label$53
	$22 = ($22 + [64800])
	$9 = *($13)
	$1 = *($2)
	goto $label$37 
	
.LABEL $label$52
	CALL eosio_assert([0], [14784])
	
.LABEL $label$32
	$1 = *($0)
	*($3 + [128]) = $2
	if ( $8 ){ goto $label$55 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$55
	CALL $160($4, $8, $1, ($3 + [128]))
	$16 = *($3 + [40])
	if ( ($16 == 0) ){ goto $label$56 }
	$2 = ($3 + [44])
	$22 = *($2)
	if ( ((int_32)$22 == (int_32)$16) ){ goto $label$58 }
	
.LOOP $label$59:
	$22 = ($22 + [-24])
	$0 = *($22)
	*($22) = [0]
	if ( ($0 == 0) ){ goto $label$60 }
	$5 = *($0 + [16])
	if ( ($5 == 0) ){ goto $label$61 }
	$18 = ($0 + [20])
	$6 = *($18)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$63 }
	
.LOOP $label$64:
	$7 = ($6 + [-12])
	if ( ((*($7) & [1]) == 0) ){ goto $label$65 }
	CALL $12(*(($6 + [-4])))
	
.LABEL $label$65
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$64 }
	$7 = *(($0 + [16]))
	goto $label$62 
	
.LABEL $label$63
	$7 = $5
	
.LABEL $label$62
	*($18) = $5
	CALL $12($7)
	
.LABEL $label$61
	CALL $12($0)
	
.LABEL $label$60
	if ( ((int_32)$22 != (int_32)$16) ){ goto $label$59 }
	$7 = *(($3 + [40]))
	goto $label$57 
	
.LABEL $label$58
	$7 = $16
	
.LABEL $label$57
	*($2) = $16
	CALL $12($7)
	
.LABEL $label$56
	$global$0 = ($3 + [192])
}

void .FUNC $404 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	$0 = *(*($0) + [4])
	$2 = *($0 + [80])
	$3 = *(($0 + [88]))
	if ( ((int_64)*(($0 + [72])) == (int_64)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$1
	$2 = ((int_64)*($0 + [64]) + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$3 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [14718])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [14699])
	
.LABEL $label$2
	if ( ((int_64)$3 == (int_64)*(($1 + [56]))) ){ goto $label$4 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$4
	$2 = ((int_64)*($1 + [48]) + (int_64)$2)
	*($1 + [48]) = $2
	if ( ((int_64)$2 > (int_64)-4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14699])
	$2 = *(($1 + [48]))
	
.LABEL $label$5
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [14718])
	
.LABEL $label$6
	*($1 + [64]) = (int_64)0
	*($1 + [80]) = (int_64)0
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
}

void .FUNC $405 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

int_32 .FUNC $158 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [60])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [11218])
	$2 = *(($0 + [4]))
	$3 = *($2 + [60])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)4849559493988974592, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [60]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [52]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $126($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)4849559493988974592, $6))
	if ( ((int_32)*($4 + [52]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$5
	*($4 + [60]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $159 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $10(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $10([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $51(($7 + [28]), [24])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $223(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $12($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $12($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $12($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $400 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [32])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [116])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915097263692054528, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [116]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [24])
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [120]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915097263692054527, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [120])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [100])
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [124]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915097263692054526, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [124])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [104])
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [128]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915097263692054525, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [128])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [132]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915097263692054524, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [132])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $401 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0)
	CALL $402(*($0 + [4]), $1)
	*(($4 = $2) + [16]) = [0]
	*($4) = ($4 + [16])
	$5 = ($1 + [8])
	*($4 + [28]) = $5
	*($4 + [24]) = $1
	$6 = ($1 + [20])
	*($4 + [32]) = $6
	$7 = ($1 + [32])
	*($4 + [36]) = $7
	$8 = ($1 + [48])
	*($4 + [40]) = $8
	$9 = ($1 + [64])
	*($4 + [44]) = $9
	$10 = ($1 + [80])
	*($4 + [48]) = $10
	$11 = ($1 + [96])
	*($4 + [52]) = $11
	$12 = ($1 + [112])
	*($4 + [56]) = $12
	$13 = ($1 + [124])
	*($4 + [60]) = $13
	$14 = ($1 + [136])
	*($4 + [64]) = $14
	$15 = ($1 + [144])
	*($4 + [68]) = $15
	$16 = ($1 + [160])
	*($4 + [72]) = $16
	$17 = ($1 + [168])
	*($4 + [76]) = $17
	CALL $298(($4 + [24]), $4)
	$18 = *($4 + [16])
	if ( ($18 <= [513]) ){ goto $label$2 }
	$2 = CALL $4($18)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($18 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($2 + $18)
	*($4 + [16]) = $4
	*($4 + [28]) = $5
	*($4 + [24]) = $1
	*($4 + [32]) = $6
	*($4 + [36]) = $7
	*($4 + [40]) = $8
	*($4 + [44]) = $9
	*($4 + [48]) = $10
	*($4 + [52]) = $11
	*($4 + [56]) = $12
	*($4 + [60]) = $13
	*($4 + [64]) = $14
	*($4 + [68]) = $15
	*($4 + [72]) = $16
	*($4 + [76]) = $17
	CALL $299(($4 + [24]), ($4 + [16]))
	$19 = *($1)
	*($1 + [180]) = CALL db_store_i64(*($3 + [8]), (int_64)-5915276602093076480, *(*($0 + [8])), $19, $2, $18)
	if ( ($18 <= [513]) ){ goto $label$3 }
	CALL $5($2)
	
.LABEL $label$3
	if ( (uint_64)($19 <= *($3 + [16])) ){ goto $label$4 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$19 + (int_64)1) : ((uint_64)$19 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($4 + [28]) = $1
	*($4 + [36]) = $1
	*($4 + [32]) = *(($0 + [8]))
	*($4 + [24]) = $3
	*($4 + [16]) = ($4 + [24])
	CALL $403(($4 + [16]), ($3 + [36]), ($3 + [37]), ($3 + [38]), ($3 + [39]), ($3 + [40]))
	$global$0 = ($4 + [80])
}

void .FUNC $402 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	*($1) = *(*($0))
	$2 = (int_64)5523015
	$0 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = $0
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$5 = ($0 + [1])
	$0 = $5
	if ( $4 ){ goto $label$5 }
	$0 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9800])
	
.LABEL $label$1
	*($1 + [48]) = (int_64)0
	*(($1 + [56])) = (int_64)1413891848
	$2 = (int_64)5523015
	$0 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = $0
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$5 = ($0 + [1])
	$0 = $5
	if ( $4 ){ goto $label$10 }
	$0 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9800])
	
.LABEL $label$6
	*($1 + [80]) = (int_64)0
	*(($1 + [88])) = (int_64)1413891848
	$2 = (int_64)5523015
	$0 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = $0
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$5 = ($0 + [1])
	$0 = $5
	if ( $4 ){ goto $label$15 }
	$0 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9800])
	
.LABEL $label$11
	*($1 + [64]) = (int_64)0
	*(($1 + [72])) = (int_64)1413891848
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	*($1 + [160]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
}

void .FUNC $403 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [136])
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076480, $10, $9, ($6 + [8]))
	*(*($7 + [4]) + [184]) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [64]) + (int_64)*($8 + [48])) + (int_64)*($8 + [80]))
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076479, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [188])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [160]) / (int_64)1000000) & (int_64)4294967295)
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076478, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [192])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = ((int_64)((int_64)*($8 + [160]) / (int_64)1000000) & (int_64)4294967295)
	$8 = CALL db_idx64_store($11, (int_64)-5915276602093076477, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [196])) = $8
	$0 = *($0)
	$7 = *($0 + [12])
	$9 = *($7)
	$10 = *(*($0 + [8]))
	$11 = *(*($0) + [8])
	*($6 + [8]) = *($7 + [96])
	$7 = CALL db_idx64_store($11, (int_64)-5915276602093076476, $10, $9, ($6 + [8]))
	*((*($0 + [4]) + [200])) = $7
	$global$0 = ($6 + [16])
}

void .FUNC $273 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1488])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1444]) = $2
	*($3 + [1440]) = $2
	$5 = ($2 + $4)
	*($3 + [1448]) = $5
	*($3 + [1432]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1448]))
	$2 = *($3 + [1444])
	
.LABEL $label$5
	CALL memcpy(($3 + [1432]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1444]) = $2
	*($3 + [1424]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1444])
	
.LABEL $label$6
	CALL memcpy(($3 + [1424]), $2, [8])
	*($3 + [1444]) = ($2 + [8])
	*($3 + [1416]) = [0]
	*($3 + [1408]) = (int_64)0
	CALL $165(($3 + [1440]), ($3 + [1408]))
	*($3 + [1400]) = [0]
	*($3 + [1392]) = (int_64)0
	CALL $165(($3 + [1440]), ($3 + [1392]))
	*(($2 = (($3 + [40]) + [8]))) = *((($3 + [1440]) + [8]))
	*($3 + [40]) = *($3 + [1440])
	*(($4 = (($3 + [1456]) + [8]))) = *($2)
	*($3 + [1456]) = *($3 + [40])
	$2 = *($4)
	*((($3 + [1472]) + [8])) = $2
	*(($3 + [80])) = $2
	*($3 + [56]) = $0
	*($3 + [64]) = $1
	$1 = *($3 + [1456])
	*($3 + [72]) = $1
	*($3 + [1472]) = $1
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [136])) = $0
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*($3 + [88]) = $0
	*(($3 + [224])) = $0
	*(($3 + [220])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [310])) = [0]
	*(($3 + [308])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*($3 + [264]) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [328])) = $0
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*($3 + [360]) = $0
	*($3 + [408]) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [472])) = $0
	*(($3 + [488])) = (int_64)0
	*(($3 + [496])) = [0]
	*(($3 + [502])) = [0]
	*(($3 + [500])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*($3 + [600]) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = (int_64)-1
	*(($3 + [688])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [752])) = $0
	*(($3 + [760])) = $0
	*(($3 + [768])) = (int_64)-1
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = $0
	*(($3 + [800])) = $0
	*(($3 + [808])) = (int_64)-1
	*(($3 + [816])) = [0]
	*(($3 + [820])) = [0]
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*($3 + [832]) = $0
	*(($3 + [840])) = [1]
	*(($3 + [848])) = (int_64)8238557860461690880
	*(($3 + [856])) = $0
	*(($3 + [864])) = $0
	*(($3 + [872])) = (int_64)-1
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = (int_64)-1
	*(($3 + [968])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = (int_64)-1
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*($3 + [1112]) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = (int_64)-1
	*(($3 + [1144])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = (int_64)-1
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*(($3 + [1336])) = $0
	*(($3 + [1344])) = $0
	*(($3 + [1352])) = $0
	*(($3 + [1360])) = (int_64)-1
	*(($3 + [1368])) = [0]
	*(($3 + [1372])) = [0]
	*(($3 + [1376])) = [0]
	*($3 + [1384]) = $0
	$0 = *($3 + [1424])
	$1 = *($3 + [1432])
	$2 = CALL $24(($3 + [24]), ($3 + [1408]))
	$4 = CALL $24(($3 + [8]), ($3 + [1392]))
	CALL $153(($3 + [56]), $1, $0, $2, $3)
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*($4 + [8]))
	
.LABEL $label$7
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$8
	CALL $230(($3 + [56]))
	if ( (*($3 + [1392]) & [1]) ){ goto $label$11 }
	if ( (*($3 + [1408]) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $12(*(($3 + [1400])))
	if ( ((*($3 + [1408]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $12(*(($3 + [1416])))
	$global$0 = ($3 + [1488])
	return 
	
.LABEL $label$9
	$global$0 = ($3 + [1488])
}

void .FUNC $421 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $272 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1412]) = $2
	*($3 + [1408]) = $2
	$5 = ($2 + $4)
	*($3 + [1416]) = $5
	*($3 + [1400]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1416]))
	$2 = *($3 + [1412])
	
.LABEL $label$5
	CALL memcpy(($3 + [1400]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1412]) = $2
	*($3 + [1392]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1412])
	
.LABEL $label$6
	CALL memcpy(($3 + [1392]), $2, [8])
	*($3 + [1412]) = ($2 + [8])
	*($3 + [1384]) = [0]
	*($3 + [1376]) = (int_64)0
	CALL $165(($3 + [1408]), ($3 + [1376]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [1408]) + [8]))
	*($3 + [24]) = *($3 + [1408])
	*(($4 = (($3 + [1424]) + [8]))) = *($2)
	*($3 + [1424]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [1440]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [1424])
	*($3 + [56]) = $1
	*($3 + [1440]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*($3 + [72]) = $0
	*(($3 + [208])) = $0
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [294])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*($3 + [248]) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [312])) = $0
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [352])) = $0
	*(($3 + [360])) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = $0
	*($3 + [344]) = $0
	*($3 + [392]) = $0
	*(($3 + [464])) = (int_64)-1
	*(($3 + [456])) = $0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	*(($3 + [486])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = (int_64)-1
	*(($3 + [520])) = [0]
	*(($3 + [524])) = [0]
	*(($3 + [528])) = [0]
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = (int_64)-1
	*(($3 + [568])) = [0]
	*(($3 + [572])) = [0]
	*(($3 + [576])) = [0]
	*($3 + [584]) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = $0
	*(($3 + [608])) = (int_64)-1
	*(($3 + [616])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [632])) = [0]
	*(($3 + [628])) = [0]
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = $0
	*(($3 + [696])) = $0
	*(($3 + [704])) = (int_64)-1
	*(($3 + [712])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = $0
	*(($3 + [784])) = $0
	*(($3 + [792])) = (int_64)-1
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*(($3 + [808])) = [0]
	*(($3 + [812])) = [0]
	*($3 + [816]) = $0
	*(($3 + [824])) = [1]
	*(($3 + [832])) = (int_64)8238557860461690880
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = (int_64)-1
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = $0
	*(($3 + [976])) = $0
	*(($3 + [984])) = (int_64)-1
	*(($3 + [992])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = (int_64)-1
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*($3 + [1096]) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = (int_64)-1
	*(($3 + [1168])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = (int_64)-1
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = (int_64)-1
	*(($3 + [1304])) = [0]
	*(($3 + [1308])) = [0]
	*(($3 + [1312])) = [0]
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = $0
	*(($3 + [1344])) = (int_64)-1
	*(($3 + [1352])) = [0]
	*(($3 + [1356])) = [0]
	*(($3 + [1360])) = [0]
	*($3 + [1368]) = $0
	$2 = CALL $24(($3 + [8]), ($3 + [1376]))
	CALL $144(($3 + [40]), *($3 + [1400]), *($3 + [1392]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$7
	CALL $230(($3 + [40]))
	if ( ((*($3 + [1376]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*(($3 + [1384])))
	
.LABEL $label$8
	$global$0 = ($3 + [1456])
}

int_32 .FUNC $426 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$8 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($8) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [4])
	$4 = (*($6) + [4])
	*($6) = $4
	if ( ((int_32)(*($8) - $4) > (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [4]), [2])
	$4 = (*($6) + [2])
	*($6) = $4
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $106 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = *($3)
	$7 = *($1)
	$3 = ($1 + [12])
	$8 = *($3)
	if ( ((int_32)$8 == (int_32)*(($1 + [16]))) ){ goto $label$5 }
	CALL $24($8, $6)
	*($3) = (*($3) + [12])
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL $367(($1 + [8]), $6)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	$6 = *($1 + [8])
	$9 = *(($1 + [12]))
	$10 = (CASTING uint_64)(uint_32 ((int_32)($9 - $6) / (int_32)[12]))
	$3 = [8]
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$7 }
	
.LOOP $label$8:
	$8 = *($6)
	$8 = ( *($6 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$3 = ($8 + $3)
	$10 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$9 }
	$6 = ($6 + [12])
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ($3 <= [513]) ){ goto $label$11 }
	$6 = CALL $4($3)
	goto $label$10 
	
.LABEL $label$11
	$6 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$10
	*($5 + [4]) = $6
	*($5) = $6
	*($5 + [8]) = ($6 + $3)
	CALL $368($5, $1)
	CALL db_update_i64(*($1 + [24]), $2, $6, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $5($6)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [16])
}

void .FUNC $427 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($1)
	$1 = *($5 + [4])
	$6 = ($5 + [8])
	$7 = ($5 + [4])
	
.LOOP $label$1:
	$8 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$9 = ((int_64)$4) != (int_64)0
	*($3 + [15]) = (($9) << [7]) | ($8 & [127]))
	if ( ((int_32)(*($6) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$1 = *($7)
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	$1 = (*($7) + [1])
	*($7) = $1
	if ( $9 ){ goto $label$1 }
	$7 = ($0 + [4])
	if ( ((int_32)(*(($5 + [8])) - $1) > (int_32)[32]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$1 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $7, [33])
	*(($1 = ($5 + [4]))) = (*($1) + [33])
	$global$0 = ($3 + [16])
}

int_32 .FUNC $424 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[44]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2 + [8]) = $0
	CALL $427($4, ($2 + [8]), [1])
	$7 = *($6 + [4])
	$6 = *($2 + [8])
	if ( ((int_32)(*($6 + [8]) - $7) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$7 = *(($6 + [4]))
	
.LABEL $label$5
	CALL memcpy($7, ($4 + [40]), [2])
	*(($6 = ($6 + [4]))) = (*($6) + [2])
	$4 = ($4 + [44])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $425 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[24]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [31]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [31]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	*($2 + [8]) = $0
	*($2 + [16]) = $4
	*($2 + [20]) = ($4 + [16])
	CALL $428(($2 + [16]), ($2 + [8]))
	$4 = ($4 + [24])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $344 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $228 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$6 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $6
	*($5 + [56]) = $6
	$6 = *($1)
	*($5 + [24]) = $6
	CALL $420($3, $1)
	$7 = ($1 + [136])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $7
	*($5 + [88]) = $1
	$8 = ($1 + [8])
	*($5 + [92]) = $8
	$9 = ($1 + [20])
	*($5 + [96]) = $9
	$10 = ($1 + [32])
	*($5 + [100]) = $10
	$11 = ($1 + [48])
	*($5 + [104]) = $11
	$12 = ($1 + [64])
	*($5 + [108]) = $12
	$13 = ($1 + [80])
	*($5 + [112]) = $13
	$14 = ($1 + [96])
	*($5 + [116]) = $14
	$15 = ($1 + [112])
	*($5 + [120]) = $15
	$16 = ($1 + [124])
	*($5 + [124]) = $16
	$17 = ($1 + [144])
	*($5 + [132]) = $17
	$18 = ($1 + [160])
	*($5 + [136]) = $18
	$19 = ($1 + [168])
	*($5 + [140]) = $19
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $4($3)
	$2 = *($5 + [72])
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $8
	*($5 + [96]) = $9
	*($5 + [100]) = $10
	*($5 + [104]) = $11
	*($5 + [108]) = $12
	*($5 + [112]) = $13
	*($5 + [116]) = $14
	*($5 + [120]) = $15
	*($5 + [124]) = $16
	*($5 + [128]) = $7
	*($5 + [132]) = $17
	*($5 + [136]) = $18
	*($5 + [140]) = $19
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL $5($4)
	
.LABEL $label$6
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $421(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $229 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $4($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL require_auth((int_64)7130081133533855744)
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1344])
}

void .FUNC $89 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL $10([112])
	CALL $350($3)
	*($3 + [100]) = $1
	CALL $351(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [104])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $352(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	if ( (*($1 + [72]) & [1]) ){ goto $label$13 }
	if ( (*($1 + [60]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $12(*(($1 + [80])))
	if ( ((*($1 + [60]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $12(*(($1 + [68])))
	$3 = [1]
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$3 = [1]
	if ( (*($1 + [48]) & [1]) ){ goto $label$9 }
	
.LABEL $label$10
	if ( (*($1 + [20]) & $3) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $12(*(($1 + [56])))
	if ( ((*($1 + [20]) & $3) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*(($1 + [28])))
	if ( (*($1 + [8]) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $12(*(($1 + [16])))
	
.LABEL $label$5
	CALL $12($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$10 = ($global$0 - [48])
	$global$0 = $10
	*($10 + [15]) = $9
	$11 = [1]
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	$11 = CALL has_auth((int_64)7130081133533855744)
	
.LABEL $label$1
	$12 = *($1)
	if ( ((int_64)$12 == (int_64)0) ){ goto $label$5 }
	$13 = [0]
	$14 = *([0] + [12468])
	
.LOOP $label$7:
	*((($10 + [16]) + ($9 = $13))) = *(($14 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$12 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$9 == (int_32)[12]) )))))
	$13 = ($9 + [1])
	if ( ((uint_32)$9 > (uint_32)[11]) ){ goto $label$6 }
	$12 = ((int_64)$12 << (int_64)5)
	if ( ((int_64)$12 != (int_64)0) ){ goto $label$7 }
	
.LABEL $label$6
	*(($10 + [8])) = [0]
	*($10) = (int_64)0
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$4 }
	*($10) = ($13 << [1])
	$14 = ($10 | [1])
	goto $label$3 
	
.LABEL $label$5
	*(($10 + [8])) = [0]
	*($10) = (int_64)0
	*($10) = [0]
	$9 = ($10 | [1])
	goto $label$2 
	
.LABEL $label$4
	$15 = (($13 + [16]) & [-16])
	$14 = CALL $10($15)
	*($10) = ($15 | [1])
	*($10 + [8]) = $14
	*($10 + [4]) = $13
	
.LABEL $label$3
	$15 = ($9 + [1])
	$9 = [0]
	
.LOOP $label$8:
	*(($14 + $9)) = *((($10 + [16]) + $9))
	$9 = ($9 + [1])
	if ( ((int_32)$15 != (int_32)$9) ){ goto $label$8 }
	$9 = ($14 + $13)
	
.LABEL $label$2
	*($9) = [0]
	$9 = CALL $34($10, [0], [8876])
	$13 = ($9 + [8])
	*((($10 + [16]) + [8])) = *($13)
	*($10 + [16]) = *($9)
	*($9) = (int_64)0
	*($13) = [0]
	if ( ($11 == 0) ){ goto $label$13 }
	$9 = [1]
	if ( (*($10 + [16]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], ( *($10 + [24]) ? (($10 + [16]) | [1]) : (*($10 + [16]) & [1]) ))
	$9 = [1]
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $12(*($10 + [24]))
	if ( (*($10) & $9) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	if ( ((*($10) & $9) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $12(*($10 + [8]))
	
.LABEL $label$9
	$12 = *($0 + [776])
	*($10 + [20]) = $2
	*($10 + [16]) = $1
	*($10 + [24]) = $3
	*($10 + [28]) = $4
	*($10 + [32]) = $6
	*($10 + [36]) = $7
	*($10 + [40]) = $8
	*($10 + [44]) = ($10 + [15])
	CALL $89($10, ($0 + [800]), $12, ($10 + [16]))
	$global$0 = ($10 + [48])
}

void .FUNC $224 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4 + [104]) = $1
	*($4 + [48]) = *($0)
	CALL $65(($4 + [48]), ($4 + [104]), ($4 + [104]), [9512])
	$1 = (int_64)5523015
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $6
	$7 = $5
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $7 ){ goto $label$5 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9800])
	
.LABEL $label$1
	if ( ((int_64)*($2 + [8]) == (int_64)1413891848) ){ goto $label$6 }
	CALL eosio_assert([0], [14395])
	
.LABEL $label$6
	$1 = *($2)
	CALL $139(($4 + [88]), $2)
	$5 = CALL $34(($4 + [88]), [0], [10180])
	$7 = ($5 + [8])
	*((($4 + [8]) + [8])) = *($7)
	*($4 + [8]) = *($5)
	*($5) = (int_64)0
	*($7) = [0]
	$5 = CALL $31(($4 + [8]), [10231])
	$7 = ($5 + [8])
	*((($4 + [48]) + [8])) = *($7)
	*($4 + [48]) = *($5)
	*($5) = (int_64)0
	*($7) = [0]
	if ( ((int_64)$1 >= (int_64)1000000001) ){ goto $label$13 }
	$5 = [1]
	if ( (*($4 + [48]) & [1]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], ( *($4 + [56]) ? (($4 + [48]) | [1]) : (*($4 + [48]) & [1]) ))
	$5 = [1]
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $12(*($4 + [56]))
	if ( ((*($4 + [8]) & $5) == 0) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	if ( (*($4 + [8]) & $5) ){ goto $label$9 }
	
.LABEL $label$10
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	CALL $12(*($4 + [16]))
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*($4 + [96]))
	
.LABEL $label$7
	$1 = *($0)
	*((($4 + [8]) + [16])) = *(($2 + [8]))
	*($4 + [8]) = *($4 + [104])
	*($4 + [16]) = *($2)
	CALL $24((($4 + [8]) + [24]), $3)
	*($4 + [56]) = (int_64)8516770230402916512
	*($4 + [48]) = $1
	*(($5 = CALL $10([16]))) = $1
	*($5 + [8]) = (int_64)-6402241254016417792
	$7 = ($5 + [16])
	*((($4 + [48]) + [24])) = $7
	*(($4 + [68])) = $7
	*($4 + [64]) = $5
	CALL $100(($4 + [76]), ($4 + [8]))
	CALL $53(($4 + [48]))
	$5 = *($4 + [76])
	if ( ($5 == 0) ){ goto $label$14 }
	*(($4 + [80])) = $5
	CALL $12($5)
	
.LABEL $label$14
	$5 = *($4 + [64])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($4 + [68])) = $5
	CALL $12($5)
	
.LABEL $label$15
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL $12(*(($4 + [40])))
	
.LABEL $label$16
	$global$0 = ($4 + [112])
}

void .FUNC $225 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [144])
	$global$0 = $4
	CALL require_auth(*($0))
	$6 = ($2 + [8])
	*(($5 = (($4 + [96]) + [8]))) = *($6)
	*($4 + [96]) = *($2)
	$3 = CALL $24(($4 + [80]), $3)
	*(($4 + [8])) = *($5)
	*($4) = *($4 + [96])
	CALL $212($0, $1, $4, $3)
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	CALL $12(*($3 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	*((($4 + [16]) + [16])) = *($6)
	*($4 + [16]) = $1
	*($4 + [40]) = $7
	*($4 + [48]) = (int_64)-4157661383434960896
	*($4 + [24]) = *($2)
	*(($2 = CALL $10([16]))) = $7
	*($2 + [8]) = (int_64)-6402241254016417792
	*(($4 + [76])) = [0]
	$0 = ($2 + [16])
	*((($4 + [40]) + [24])) = $0
	*(($4 + [60])) = $0
	*($4 + [56]) = $2
	*($4 + [68 align=4]) = (int_64)0
	CALL $51(($4 + [68]), [24])
	$3 = ($4 + [72])
	$2 = *($3)
	$0 = *($4 + [68])
	*($4 + [116]) = $0
	*($4 + [112]) = $0
	*($4 + [120]) = $2
	*($4 + [128]) = ($4 + [112])
	*($4 + [136]) = ($4 + [16])
	CALL $223(($4 + [136]), ($4 + [128]))
	CALL $53(($4 + [40]))
	$2 = *($4 + [68])
	if ( ($2 == 0) ){ goto $label$2 }
	*($3) = $2
	CALL $12($2)
	
.LABEL $label$2
	$2 = *($4 + [56])
	if ( ($2 == 0) ){ goto $label$3 }
	*(($4 + [60])) = $2
	CALL $12($2)
	
.LABEL $label$3
	$global$0 = ($4 + [144])
}

void .FUNC $226 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$global$0 = $3
	if ( (CALL $129($0, $1) == 0) ){ goto $label$11 }
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$12:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$10 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$12 }
	goto $label$9 
	
.LABEL $label$11
	if ( (CALL $90($0, $1) == 0) ){ goto $label$13 }
	$4 = ($0 + [8])
	$5 = *($1)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$14:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$6 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$14 }
	goto $label$5 
	
.LABEL $label$13
	$5 = *($1)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$7 }
	$7 = [0]
	$8 = *([0] + [12468])
	
.LOOP $label$16:
	*((($3 + [32]) + ($1 = $7))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$7 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$15 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$15
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$3 }
	*($3) = ($7 << [1])
	$8 = ($3 | [1])
	goto $label$2 
	
.LABEL $label$10
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$9 }
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [11551])
	goto $label$8 
	
.LABEL $label$9
	$8 = CALL $57($4, CALL $fimport$25(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5))
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$8 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$8
	*($3 + [32]) = $4
	*($3 + [36]) = $8
	if ( ((int_64)*(($8 + [88])) == (int_64)*($2 + [8])) ){ goto $label$17 }
	CALL eosio_assert([0], [14395])
	
.LABEL $label$17
	if ( ((int_64)*($8 + [80]) >= (int_64)*($2)) ){ goto $label$18 }
	CALL eosio_assert([0], [14518])
	
.LABEL $label$18
	$5 = *($0)
	$1 = *($3 + [36])
	*($3 + [16]) = ($3 + [32])
	if ( $1 ){ goto $label$19 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$19
	CALL $415($4, $1, $5, ($3 + [16]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$7
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$1 = ($3 | [1])
	goto $label$1 
	
.LABEL $label$6
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	if ( ((int_32)*($8 + [88]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	goto $label$4 
	
.LABEL $label$5
	$8 = CALL $91($4, CALL $fimport$25(*($4), *(($0 + [16])), (int_64)-5915276602094125056, $5))
	if ( ((int_32)*($8 + [88]) == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	*($3 + [32]) = $4
	*($3 + [36]) = $8
	if ( ((int_64)*(($8 + [80])) == (int_64)*($2 + [8])) ){ goto $label$20 }
	CALL eosio_assert([0], [14395])
	
.LABEL $label$20
	if ( ((int_64)*($8 + [72]) >= (int_64)*($2)) ){ goto $label$21 }
	CALL eosio_assert([0], [14518])
	
.LABEL $label$21
	$5 = *($0)
	$1 = *($3 + [36])
	*($3 + [16]) = ($3 + [32])
	if ( $1 ){ goto $label$22 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$22
	CALL $416($4, $1, $5, ($3 + [16]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$3
	$0 = (($7 + [16]) & [-16])
	$8 = CALL $10($0)
	*($3) = ($0 | [1])
	*($3 + [8]) = $8
	*($3 + [4]) = $7
	
.LABEL $label$2
	$0 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$23:
	*(($8 + $1)) = *((($3 + [32]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$23 }
	$1 = ($8 + $7)
	
.LABEL $label$1
	*($1) = [0]
	$1 = CALL $34($3, [0], [14560])
	$7 = ($1 + [8])
	*((($3 + [16]) + [8])) = *($7)
	*($3 + [16]) = *($1)
	*($1) = (int_64)0
	*($7) = [0]
	$1 = CALL $31(($3 + [16]), [13557])
	$8 = ($1 + [8])
	*(($7 = (($3 + [32]) + [8]))) = *($8)
	*($3 + [32]) = *($1)
	*($1) = (int_64)0
	*($8) = [0]
	CALL eosio_assert([0], ( *($7) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	if ( (*($3 + [32]) & [1]) ){ goto $label$28 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $12(*($7))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $12(*($3 + [24]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	if ( (*($3) & [1]) ){ goto $label$24 }
	
.LABEL $label$25
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$24
	CALL $12(*($3 + [8]))
	$global$0 = ($3 + [48])
}

void .FUNC $227 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = *($1)
	CALL $422($3, $1)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	$3 = *($1 + [16])
	$7 = ( *(($1 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($7 + [62])
	$8 = (CASTING uint_64)(uint_32 $7)
	$7 = ($1 + [16])
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	$9 = *($1 + [28])
	$9 = ( *(($1 + [32])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$3 = ($9 + $3)
	$8 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [28])
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $4($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $7
	*($5 + [48]) = $9
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [12])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [56])
	*($5 + [60]) = ($1 + [72])
	CALL $407(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [92]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $5($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [64])
}

void .FUNC $220 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [14736])
	
.LABEL $label$3
	$7 = (int_64)
	*($1) = $7(*($1) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [14784])
	$7 = *($1)
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [14806])
	
.LABEL $label$5
	$3 = ($1 + [8])
	if ( ((int_64)$6 == (int_64)(uint_64)*($3) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$6
	$8 = $4
	$4 = ($8 + [-16])
	$global$0 = $4
	CALL memcpy($4, $1, [8])
	*($5 + [8]) = *($3)
	CALL memcpy(($8 + [-8]), ($5 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $4, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $221 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	$6 = *($1 + [48])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)$6) + (int_64)*($1 + [80]))
	$7 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $7
	*($5 + [56]) = $7
	$7 = *($1)
	*($5 + [24]) = $7
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$3 }
	CALL eosio_assert([0], [14736])
	$6 = *(($1 + [48]))
	
.LABEL $label$3
	$6 = (int_64)
	*(($8 = ($1 + [48]))) = $6($6 - *($3)))
	if ( ((int_64)$6 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [136]
	if ( ((int_64)$6 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [14784])
	$3 = [136]
	if ( ((int_64)*($8) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [14806])
	$8 = ($1 + $3)
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$8 = ($1 + $3)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10823])
	
.LABEL $label$4
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [128]) = $8
	*($5 + [88]) = $1
	$9 = ($1 + [8])
	*($5 + [92]) = $9
	$10 = ($1 + [20])
	*($5 + [96]) = $10
	$11 = ($1 + [32])
	*($5 + [100]) = $11
	$12 = ($1 + [48])
	*($5 + [104]) = $12
	$13 = ($1 + [64])
	*($5 + [108]) = $13
	$14 = ($1 + [80])
	*($5 + [112]) = $14
	$15 = ($1 + [96])
	*($5 + [116]) = $15
	$16 = ($1 + [112])
	*($5 + [120]) = $16
	$17 = ($1 + [124])
	*($5 + [124]) = $17
	$18 = ($1 + [144])
	*($5 + [132]) = $18
	$19 = ($1 + [160])
	*($5 + [136]) = $19
	$20 = ($1 + [168])
	*($5 + [140]) = $20
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$10 }
	$4 = CALL $4($3)
	$2 = *($5 + [72])
	goto $label$9 
	
.LABEL $label$10
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$9
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $9
	*($5 + [96]) = $10
	*($5 + [100]) = $11
	*($5 + [104]) = $12
	*($5 + [108]) = $13
	*($5 + [112]) = $14
	*($5 + [116]) = $15
	*($5 + [120]) = $16
	*($5 + [124]) = $17
	*($5 + [128]) = $8
	*($5 + [132]) = $18
	*($5 + [136]) = $19
	*($5 + [140]) = $20
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$11 }
	CALL $5($4)
	
.LABEL $label$11
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $414(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $222 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [144])
	$global$0 = $5
	$7 = ($3 + [8])
	*(($6 = (($5 + [96]) + [8]))) = *($7)
	*($5 + [96]) = *($3)
	$4 = CALL $24(($5 + [80]), $4)
	*(($5 + [8])) = *($6)
	*($5) = *($5 + [96])
	CALL $219($0, $1, $2, $5, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL $12(*($4 + [8]))
	
.LABEL $label$1
	$1 = *($0)
	*((($5 + [16]) + [16])) = *($7)
	*($5 + [16]) = $2
	*($5 + [40]) = $1
	*($5 + [48]) = (int_64)-4157661383434960896
	*($5 + [24]) = *($3)
	*(($3 = CALL $10([16]))) = $1
	*($3 + [8]) = (int_64)-6402241254016417792
	*(($5 + [76])) = [0]
	$4 = ($3 + [16])
	*((($5 + [40]) + [24])) = $4
	*(($5 + [60])) = $4
	*($5 + [56]) = $3
	*($5 + [68 align=4]) = (int_64)0
	CALL $51(($5 + [68]), [24])
	$0 = ($5 + [72])
	$3 = *($0)
	$4 = *($5 + [68])
	*($5 + [116]) = $4
	*($5 + [112]) = $4
	*($5 + [120]) = $3
	*($5 + [128]) = ($5 + [112])
	*($5 + [136]) = ($5 + [16])
	CALL $223(($5 + [136]), ($5 + [128]))
	CALL $53(($5 + [40]))
	$3 = *($5 + [68])
	if ( ($3 == 0) ){ goto $label$2 }
	*($0) = $3
	CALL $12($3)
	
.LABEL $label$2
	$3 = *($5 + [56])
	if ( ($3 == 0) ){ goto $label$3 }
	*(($5 + [60])) = $3
	CALL $12($3)
	
.LABEL $label$3
	$global$0 = ($5 + [144])
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = ($global$0 - [176])
	$global$0 = $2
	CALL prints([12058])
	CALL prints([12076])
	CALL $79($0)
	if ( CALL is_account(*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [12098])
	
.LABEL $label$1
	$3 = *($0)
	*(($2 + [16])) = $3
	*(($2 + [24])) = (int_64)-1
	*(($2 + [32])) = (int_64)0
	*(($2 + [40])) = [0]
	*(($2 + [56])) = $3
	*(($2 + [64])) = (int_64)-1
	*(($2 + [72])) = (int_64)0
	*(($2 + [80])) = (int_64)0
	*(($2 + [88])) = [0]
	*(($2 + [104])) = $3
	*(($2 + [112])) = (int_64)-1
	*(($2 + [120])) = [0]
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [48]) = $3
	*($2 + [96]) = $3
	*(($2 + [132])) = [0]
	*(($2 + [124])) = (int_64)0
	*(($2 + [144])) = $3
	*(($2 + [152])) = (int_64)-1
	*(($2 + [160])) = (int_64)0
	*(($2 + [168])) = [0]
	*(($2 + [172])) = [0]
	*($2 + [136]) = $3
	if ( CALL $129($2, $1) ){ goto $label$2 }
	CALL eosio_assert([0], [12134])
	
.LABEL $label$2
	CALL $131($2)
	$global$0 = ($2 + [176])
}

int_32 .FUNC $389 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [112]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11480])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-5915097263692054528)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $170(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $388 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [32])
	$8 = CALL db_idx64_store($11, (int_64)-5915097263692054528, $10, $9, ($6 + [8]))
	*(*($7 + [4]) + [116]) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [24])
	$8 = CALL db_idx64_store($11, (int_64)-5915097263692054527, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [120])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [100])
	$8 = CALL db_idx64_store($11, (int_64)-5915097263692054526, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [124])) = $8
	$7 = *($0)
	$8 = *($7 + [12])
	$9 = *($8)
	$10 = *(*($7 + [8]))
	$11 = *(*($7) + [8])
	*($6 + [8]) = *($8 + [104])
	$8 = CALL db_idx64_store($11, (int_64)-5915097263692054525, $10, $9, ($6 + [8]))
	*((*($7 + [4]) + [128])) = $8
	$0 = *($0)
	$7 = *($0 + [12])
	$9 = *($7)
	$10 = *(*($0 + [8]))
	$11 = *(*($0) + [8])
	*($6 + [8]) = *($7 + [96])
	$7 = CALL db_idx64_store($11, (int_64)-5915097263692054524, $10, $9, ($6 + [8]))
	*((*($0 + [4]) + [132])) = $7
	$global$0 = ($6 + [16])
}

void .FUNC $383 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_64 $18
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0)
	CALL $385(*($0 + [4]), $1)
	*(($4 = $2) + [16]) = [0]
	*($4) = ($4 + [16])
	$5 = ($1 + [8])
	*($4 + [28]) = $5
	*($4 + [24]) = $1
	$6 = ($1 + [24])
	*($4 + [32]) = $6
	$7 = ($1 + [32])
	*($4 + [36]) = $7
	$8 = ($1 + [40])
	*($4 + [40]) = $8
	$9 = ($1 + [52])
	*($4 + [44]) = $9
	$10 = ($1 + [64])
	*($4 + [48]) = $10
	$11 = ($1 + [68])
	*($4 + [52]) = $11
	$12 = ($1 + [80])
	*($4 + [56]) = $12
	$13 = ($1 + [84])
	*($4 + [60]) = $13
	$14 = ($1 + [96])
	*($4 + [64]) = $14
	$15 = ($1 + [100])
	*($4 + [68]) = $15
	$16 = ($1 + [104])
	*($4 + [72]) = $16
	CALL $386(($4 + [24]), $4)
	$17 = *($4 + [16])
	if ( ($17 <= [513]) ){ goto $label$2 }
	$2 = CALL $4($17)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($17 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$1
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($2 + $17)
	*($4 + [16]) = $4
	*($4 + [28]) = $5
	*($4 + [24]) = $1
	*($4 + [32]) = $6
	*($4 + [36]) = $7
	*($4 + [40]) = $8
	*($4 + [44]) = $9
	*($4 + [48]) = $10
	*($4 + [52]) = $11
	*($4 + [56]) = $12
	*($4 + [60]) = $13
	*($4 + [64]) = $14
	*($4 + [68]) = $15
	*($4 + [72]) = $16
	CALL $387(($4 + [24]), ($4 + [16]))
	$18 = *($1)
	*($1 + [112]) = CALL db_store_i64(*($3 + [8]), (int_64)-5915097263692054528, *(*($0 + [8])), $18, $2, $17)
	if ( ($17 <= [513]) ){ goto $label$3 }
	CALL $5($2)
	
.LABEL $label$3
	if ( (uint_64)($18 <= *($3 + [16])) ){ goto $label$4 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$18 + (int_64)1) : ((uint_64)$18 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($4 + [28]) = $1
	*($4 + [36]) = $1
	*($4 + [32]) = *(($0 + [8]))
	*($4 + [24]) = $3
	*($4 + [16]) = ($4 + [24])
	CALL $388(($4 + [16]), ($3 + [36]), ($3 + [37]), ($3 + [38]), ($3 + [39]), ($3 + [40]))
	$global$0 = ($4 + [80])
}

void .FUNC $382 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $381 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $380 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $387 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $301(*($1), *($0 + [4]))
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $301(*($1), *($0 + [16]))
	CALL $302(*($1), *($0 + [20]))
	$2 = *($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $302(*($1), *($0 + [28]))
	$2 = *($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	CALL $292(*($1), *($0 + [36]))
	$2 = *($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [44])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [48])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [16])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [52])
	$4 = ($3 + [40])
	$2 = ($3 + [28])
	$5 = ($3 + [24])
	$1 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $1) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$1 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $5, [4])
	*(($1 = ($3 + [4]))) = (*($1) + [4])
	CALL $424($3, $2)
	CALL $425($3, $4)
	CALL $426($3, $0)
}

void .FUNC $385 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *(($3 + [24]))
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = ($3 + [8])
	$6 = CALL db_lowerbound_i64(*($5), *(($3 + [16])), (int_64)-5915097263692054528, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $170($5, $6)
	*($2 + [12]) = [0]
	*($2 + [8]) = $5
	$4 = *(*(CALL $389(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [24])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11351])
	$4 = *(($3 + [24]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [24])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	*($1 + [24]) = *(*($0 + [4]))
	CALL $25(($1 + [40]), *($0 + [8]))
	CALL $25(($1 + [8]), *($0 + [12]))
	$1 = *($0 + [16])
	$3 = ($1 + [84])
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$5 }
	CALL $390($3, *($1), *($1 + [4]))
	
.LABEL $label$5
	$global$0 = ($2 + [16])
}

void .FUNC $384 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $10(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $394(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $72 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *(($1 + [28]))
	if ( ((int_32)$5 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)3849324904583266304, (int_64)3849324904583266304)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $133($1, $5)
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*($0) = *($5)
	*(($0 + [40])) = *(($5 + [40]))
	*(($0 + [32])) = *(($5 + [32]))
	*(($0 + [24])) = *(($5 + [24]))
	*(($0 + [16])) = *(($5 + [16]))
	*(($0 + [8])) = *(($5 + [8]))
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$1
	*($4 + [8]) = $3
	CALL $335($4, $1, $2, ($4 + [8]))
	$5 = *($4 + [4])
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	*(($0 + [16])) = *(($5 + [16]))
	*(($0 + [24])) = *(($5 + [24]))
	*(($0 + [32])) = *(($5 + [32]))
	*(($0 + [40])) = *(($5 + [40]))
	$global$0 = ($4 + [16])
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3849324904583266304, (int_64)3849324904583266304)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $133($0, $4)
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*($3) = $1
	CALL $336($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $337($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [80])
	$global$0 = $3
	*(($3 + [64])) = (int_64)0
	*(($3 + [74])) = [0]
	*(($3 + [72])) = [0]
	*($3 + [48]) = (int_64)-1
	*($3 + [56]) = (int_64)0
	$4 = *($0)
	*($3 + [32]) = $4
	*($3 + [40]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)4982429584927490048, *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $68(($3 + [32]), $6)
	if ( ((int_32)*($5 + [68]) == (int_32)($3 + [32])) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$1
	CALL $37($3, *($1))
	$1 = CALL $34($3, [0], [11528])
	$6 = ($1 + [8])
	*((($3 + [16]) + [8])) = *($6)
	*($3 + [16]) = *($1)
	*($1) = (int_64)0
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$6 }
	$1 = [1]
	if ( (*($3 + [16]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], ( *($3 + [24]) ? (($3 + [16]) | [1]) : (*($3 + [16]) & [1]) ))
	$1 = [1]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $12(*($3 + [24]))
	if ( (*($3) & $1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((*($3) & $1) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $12(*($3 + [8]))
	
.LABEL $label$2
	*($3 + [16]) = (int_64)0
	CALL $65($0, ($5 + [32]), ($3 + [16]), [11296])
	$4 = *($0)
	*($3 + [16]) = $2
	if ( $5 ){ goto $label$7 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$7
	CALL $71(($3 + [32]), $5, $4, ($3 + [16]))
	$1 = *($3 + [56])
	if ( ($1 == 0) ){ goto $label$8 }
	$2 = ($3 + [60])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	if ( ((*($0 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL $12(*(($0 + [56])))
	
.LABEL $label$13
	CALL $12($0)
	
.LABEL $label$12
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$11 }
	$5 = *(($3 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $1
	
.LABEL $label$9
	*($2) = $1
	CALL $12($5)
	
.LABEL $label$8
	$global$0 = ($3 + [80])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [88]) = $2
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [8])
	*($5 + [40]) = *($1 + [32])
	*($5 + [48]) = *($1 + [40])
	*($5 + [56]) = *($1 + [16])
	*($5 + [64]) = *($1 + [24])
	*($5 + [72]) = *($1 + [60])
	*($5 + [80]) = *($1 + [64])
	$6 = *($1)
	*($5 + [24]) = $6
	$7 = ($1 + [48])
	CALL $25($7, *($3))
	*($1 + [64]) = ((int_64)CALL $39() / (int_64)1000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	$8 = ($1 + [16])
	$9 = ($1 + [40])
	$10 = ($0 + [36])
	$3 = *($7)
	$11 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($11 + [56])
	$12 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $4($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [96]) = ($5 + [8])
	*($5 + [112]) = $8
	*($5 + [124]) = $9
	*($5 + [128]) = $7
	*($5 + [104]) = $1
	*($5 + [108]) = ($1 + [8])
	*($5 + [116]) = ($1 + [24])
	*($5 + [120]) = ($1 + [32])
	*($5 + [132]) = ($1 + [60])
	*($5 + [136]) = ($1 + [64])
	CALL $312(($5 + [104]), ($5 + [96]))
	CALL db_update_i64(*($1 + [72]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $5($4)
	$6 = *($5 + [24])
	
.LABEL $label$7
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [108]) = $1
	*($5 + [104]) = $0
	*($5 + [116]) = $1
	*($5 + [112]) = ($5 + [32])
	*($5 + [120]) = ($5 + [24])
	*($5 + [124]) = ($5 + [88])
	*($5 + [96]) = ($5 + [104])
	CALL $317(($5 + [96]), $10, ($10 + [1]), ($10 + [2]), ($10 + [3]), ($10 + [4]), ($10 + [5]), ($10 + [6]))
	$global$0 = ($5 + [144])
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL $74($0, $1, $1)
	$4 = CALL is_account(*($2))
	$5 = *($2)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$4 }
	$1 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$6:
	*((($3 + [96]) + ($2 = $1))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$2 == (int_32)[12]) )))))
	$1 = ($2 + [1])
	if ( ((uint_32)$2 > (uint_32)[11]) ){ goto $label$5 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$3 }
	*($3 + [48]) = ($1 << [1])
	$6 = (($3 + [48]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	*($3 + [48]) = [0]
	$2 = (($3 + [48]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($1 + [16]) & [-16])
	$6 = CALL $10($7)
	*($3 + [48]) = ($7 | [1])
	*($3 + [56]) = $6
	*($3 + [52]) = $1
	
.LABEL $label$2
	$7 = ($2 + [1])
	$2 = [0]
	
.LOOP $label$7:
	*(($6 + $2)) = *((($3 + [96]) + $2))
	$2 = ($2 + [1])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$2 = ($6 + $1)
	
.LABEL $label$1
	*($2) = [0]
	$2 = CALL $34(($3 + [48]), [0], [12177])
	$1 = ($2 + [8])
	*((($3 + [96]) + [8])) = *($1)
	*($3 + [96]) = *($2)
	*($2) = (int_64)0
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	$2 = [1]
	if ( (*($3 + [96]) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], ( *($3 + [104]) ? (($3 + [96]) | [1]) : (*($3 + [96]) & [1]) ))
	$2 = [1]
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $12(*($3 + [104]))
	if ( (*($3 + [48]) & $2) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((*($3 + [48]) & $2) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $12(*($3 + [56]))
	
.LABEL $label$8
	*(($3 + [72])) = (int_64)-1
	*(($2 = ($3 + [80]))) = (int_64)0
	*((($3 + [48]) + [40])) = [0]
	$5 = *($0)
	*(($3 + [64])) = $5
	*($3 + [48]) = $5
	*($3 + [56]) = $5
	*(($1 = (($3 + [96]) + [40]))) = (int_64)0
	*($3 + [120]) = (int_64)0
	*($3 + [128]) = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [104]) = (int_64)0
	*($3 + [112]) = (int_64)0
	*($3 + [124]) = [0]
	*($3 + [128]) = [0]
	$6 = ($3 + [56])
	CALL $72($3, $6, $5, ($3 + [96]))
	if ( ((int_64)*($3 + [16]) != (int_64)0) ){ goto $label$13 }
	CALL eosio_assert([0], [12214])
	
.LABEL $label$13
	$5 = *($3 + [48])
	*($1) = (int_64)0
	*($3 + [120]) = (int_64)0
	*($3 + [128]) = (int_64)0
	*($3 + [96]) = (int_64)0
	*($3 + [104]) = (int_64)0
	*($3 + [112]) = (int_64)0
	*($3 + [124]) = [0]
	*($3 + [128]) = [0]
	CALL $72($3, $6, $5, ($3 + [96]))
	CALL require_auth(*($3 + [16]))
	$6 = *($2)
	if ( ($6 == 0) ){ goto $label$14 }
	$7 = ($3 + [84])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$1 = *($2)
	*($2) = [0]
	if ( ($1 == 0) ){ goto $label$18 }
	CALL $12($1)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($3 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $6
	
.LABEL $label$15
	*($7) = $6
	CALL $12($2)
	
.LABEL $label$14
	$global$0 = ($3 + [144])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	if ( CALL has_auth(*($1)) ){ goto $label$1 }
	if ( CALL has_auth(*($1)) ){ goto $label$1 }
	$1 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	*($2 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-4352391049156317184, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$1 = CALL $121($2, $0)
	
.LABEL $label$2
	
.LOOP $label$5:
	if ( ($1 == 0) ){ goto $label$4 }
	$0 = CALL has_auth(*($1))
	$4 = *($1 + [12])
	$1 = [0]
	$4 = CALL db_next_i64($4, ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$1 = CALL $121($2, $4)
	
.LABEL $label$6
	if ( ($0 == 0) ){ goto $label$5 }
	$4 = *($2 + [24])
	if ( $4 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([0], [12240])
	$4 = *($2 + [24])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$3
	$5 = ($2 + [28])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $12($0)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($2 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $4
	
.LABEL $label$7
	*($5) = $4
	CALL $12($1)
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [48])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [544])
	$global$0 = $3
	if ( CALL is_account(*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11632])
	
.LABEL $label$1
	if ( CALL is_account(*($2)) ){ goto $label$2 }
	CALL eosio_assert([0], [11669])
	
.LABEL $label$2
	$4 = *($0)
	*(($3 + [336])) = $4
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	$5 = [0]
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $4
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [424])) = $4
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = [0]
	*($3 + [320]) = $4
	*($3 + [328]) = $4
	*($3 + [368]) = $4
	*($3 + [416]) = $4
	*(($3 + [452])) = [0]
	*(($3 + [444])) = (int_64)0
	*(($3 + [464])) = $4
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = (int_64)0
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*($3 + [456]) = $4
	$6 = CALL $90(($3 + [320]), $1)
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$6 }
	$7 = *([0] + [12468])
	
.LOOP $label$8:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$7 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$8 }
	
.LABEL $label$7
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [80]) = ($5 << [1])
	$7 = (($3 + [80]) | [1])
	goto $label$4 
	
.LABEL $label$6
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [80]) = [0]
	$8 = (($3 + [80]) | [1])
	goto $label$3 
	
.LABEL $label$5
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $10($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $7
	*($3 + [84]) = $5
	
.LABEL $label$4
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$9:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$9 }
	$8 = ($7 + $5)
	
.LABEL $label$3
	*($8) = [0]
	$8 = CALL $34(($3 + [80]), [0], [11706])
	$5 = ($8 + [8])
	*((($3 + [496]) + [8])) = *($5)
	*($3 + [496]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [496]), [11715])
	$5 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($5)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( $6 ){ goto $label$16 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $12(*($3 + [136]))
	if ( ((*($3 + [496]) & $8) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	if ( (*($3 + [496]) & $8) ){ goto $label$12 }
	
.LABEL $label$13
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	CALL $12(*($3 + [504]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $12(*($3 + [88]))
	
.LABEL $label$10
	$6 = CALL $129(($3 + [320]), $1)
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$20 }
	$5 = [0]
	$7 = *([0] + [12468])
	
.LOOP $label$22:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$21 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$22 }
	
.LABEL $label$21
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$19 }
	*($3 + [80]) = ($5 << [1])
	$7 = (($3 + [80]) | [1])
	goto $label$18 
	
.LABEL $label$20
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [80]) = [0]
	$8 = (($3 + [80]) | [1])
	goto $label$17 
	
.LABEL $label$19
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $10($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $7
	*($3 + [84]) = $5
	
.LABEL $label$18
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$23:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$23 }
	$8 = ($7 + $5)
	
.LABEL $label$17
	*($8) = [0]
	$8 = CALL $34(($3 + [80]), [0], [11706])
	$5 = ($8 + [8])
	*((($3 + [496]) + [8])) = *($5)
	*($3 + [496]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [496]), [11738])
	$5 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($5)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$32 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL $12(*($3 + [136]))
	if ( ((*($3 + [496]) & $8) == 0) ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	if ( (*($3 + [496]) & $8) ){ goto $label$28 }
	
.LABEL $label$29
	if ( (*($3 + [80]) & [1]) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $12(*($3 + [504]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL $12(*($3 + [88]))
	if ( (int_64)(*($2) == 0) ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$26
	if ( (int_64)(*($2) == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$6 = CALL $90(($3 + [320]), $2)
	$4 = *($2)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$36 }
	$5 = [0]
	$7 = *([0] + [12468])
	
.LOOP $label$38:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$37 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$38 }
	
.LABEL $label$37
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$35 }
	*($3 + [80]) = ($5 << [1])
	$7 = (($3 + [80]) | [1])
	goto $label$34 
	
.LABEL $label$36
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [80]) = [0]
	$8 = (($3 + [80]) | [1])
	goto $label$33 
	
.LABEL $label$35
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $10($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $7
	*($3 + [84]) = $5
	
.LABEL $label$34
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$39:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$39 }
	$8 = ($7 + $5)
	
.LABEL $label$33
	*($8) = [0]
	$8 = CALL $34(($3 + [80]), [0], [11764])
	$5 = ($8 + [8])
	*((($3 + [496]) + [8])) = *($5)
	*($3 + [496]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [496]), [11715])
	$5 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($5)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( $6 ){ goto $label$46 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$46
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$44 }
	
.LABEL $label$45
	CALL $12(*($3 + [136]))
	if ( ((*($3 + [496]) & $8) == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	if ( (*($3 + [496]) & $8) ){ goto $label$42 }
	
.LABEL $label$43
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$42
	CALL $12(*($3 + [504]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$40 }
	
.LABEL $label$41
	CALL $12(*($3 + [88]))
	
.LABEL $label$40
	$6 = CALL $129(($3 + [320]), $2)
	$4 = *($2)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$50 }
	$5 = [0]
	$7 = *([0] + [12468])
	
.LOOP $label$52:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$51 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$52 }
	
.LABEL $label$51
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$49 }
	*($3 + [80]) = ($5 << [1])
	$7 = (($3 + [80]) | [1])
	goto $label$48 
	
.LABEL $label$50
	*(($3 + [88])) = [0]
	*($3 + [80]) = (int_64)0
	*($3 + [80]) = [0]
	$8 = (($3 + [80]) | [1])
	goto $label$47 
	
.LABEL $label$49
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $10($9)
	*($3 + [80]) = ($9 | [1])
	*($3 + [88]) = $7
	*($3 + [84]) = $5
	
.LABEL $label$48
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$53:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$53 }
	$8 = ($7 + $5)
	
.LABEL $label$47
	*($8) = [0]
	$8 = CALL $34(($3 + [80]), [0], [11764])
	$5 = ($8 + [8])
	*((($3 + [496]) + [8])) = *($5)
	*($3 + [496]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [496]), [11738])
	$5 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($5)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$59 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$57 }
	
.LABEL $label$58
	CALL $12(*($3 + [136]))
	if ( ((*($3 + [496]) & $8) == 0) ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	if ( (*($3 + [496]) & $8) ){ goto $label$55 }
	
.LABEL $label$56
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$24 }
	goto $label$54 
	
.LABEL $label$55
	CALL $12(*($3 + [504]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$24 }
	
.LABEL $label$54
	CALL $12(*($3 + [88]))
	
.LABEL $label$24
	$4 = *($0)
	*((($3 + [128]) + [16])) = $4
	*((($3 + [128]) + [24])) = (int_64)-1
	*((($3 + [128]) + [32])) = (int_64)0
	*((($3 + [128]) + [40])) = [0]
	*(($3 + [184])) = $4
	*(($3 + [192])) = $4
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [222])) = [0]
	*(($3 + [220])) = [0]
	*(($3 + [224])) = $4
	*(($3 + [232])) = $4
	*(($3 + [240])) = $4
	*($3 + [128]) = $4
	*($3 + [136]) = $4
	*($3 + [176]) = $4
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [280])) = $4
	*(($3 + [288])) = $4
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*($3 + [272]) = $4
	$8 = CALL db_find_i64($4, $4, (int_64)-8281825045618098176, *($1))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$60 }
	$5 = (($3 + [128]) + [8])
	if ( ((int_32)*(CALL $105($5, $8) + [20]) == (int_32)$5) ){ goto $label$61 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$61
	CALL eosio_assert([0], [11782])
	
.LABEL $label$60
	$4 = *($0)
	*((($3 + [80]) + [16])) = $4
	*((($3 + [80]) + [24])) = (int_64)-1
	*((($3 + [80]) + [32])) = (int_64)0
	*((($3 + [80]) + [40])) = [0]
	*($3 + [80]) = $4
	*($3 + [88]) = $4
	*((($3 + [496]) + [40])) = (int_64)0
	*($3 + [520]) = (int_64)0
	*($3 + [528]) = (int_64)0
	*($3 + [496]) = (int_64)0
	*($3 + [504]) = (int_64)0
	*($3 + [512]) = (int_64)0
	*($3 + [524]) = [0]
	*($3 + [528]) = [0]
	CALL $72(($3 + [32]), (($3 + [80]) + [8]), $4, ($3 + [496]))
	if ( (*($3 + [56]) == 0) ){ goto $label$62 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$62
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = (int_64)0
	$6 = [0]
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	$4 = *($0)
	*(($3 + [512])) = $4
	*($3 + [496]) = $4
	*($3 + [504]) = $4
	$0 = ($3 + [504])
	$8 = CALL db_find_i64($4, $4, (int_64)4849559493988974592, *($1))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$63 }
	$6 = CALL $318($0, $8)
	if ( ((int_32)*($6 + [52]) == (int_32)$0) ){ goto $label$63 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$63
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$67 }
	$5 = [0]
	$7 = *([0] + [12468])
	
.LOOP $label$69:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$68 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$69 }
	
.LABEL $label$68
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$66 }
	*($3) = ($5 << [1])
	$7 = ($3 | [1])
	goto $label$65 
	
.LABEL $label$67
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$64 
	
.LABEL $label$66
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $10($9)
	*($3) = ($9 | [1])
	*($3 + [8]) = $7
	*($3 + [4]) = $5
	
.LABEL $label$65
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$70:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$70 }
	$8 = ($7 + $5)
	
.LABEL $label$64
	*($8) = [0]
	$8 = CALL $34($3, [0], [11706])
	$5 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($5)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [16]), [11826])
	$5 = ($8 + [8])
	*((($3 + [32]) + [8])) = *($5)
	*($3 + [32]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$71 }
	CALL eosio_assert([0], ( *($3 + [40]) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	
.LABEL $label$71
	if ( (*($3 + [32]) & [1]) ){ goto $label$76 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	CALL $12(*($3 + [40]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$74 }
	
.LABEL $label$75
	CALL $12(*($3 + [24]))
	if ( (*($3) & [1]) ){ goto $label$73 }
	goto $label$72 
	
.LABEL $label$74
	if ( ((*($3) & [1]) == 0) ){ goto $label$72 }
	
.LABEL $label$73
	CALL $12(*($3 + [8]))
	
.LABEL $label$72
	$4 = *($2)
	$5 = *(($3 + [532]))
	$7 = *(($3 + [528]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$83 }
	
.LOOP $label$85:
	$8 = ($5 + [-24])
	$1 = *($8)
	if ( ((int_64)*($1) == (int_64)$4) ){ goto $label$84 }
	$5 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$85 }
	goto $label$83 
	
.LABEL $label$84
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$83 }
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$82 }
	CALL eosio_assert([0], [11551])
	$10 = (int_64)0
	$4 = *($2)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$83
	$1 = [0]
	$8 = CALL db_find_i64(*(($3 + [504])), *(($3 + [512])), (int_64)4849559493988974592, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$82 }
	$1 = CALL $318($0, $8)
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$82 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$82
	$10 = (int_64)0
	$4 = *($2)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$80 }
	
.LABEL $label$81
	$5 = [0]
	$7 = *([0] + [12468])
	
.LOOP $label$87:
	*((($3 + [32]) + ($8 = $5))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$5 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$86 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)$10) ){ goto $label$87 }
	
.LABEL $label$86
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$79 }
	*($3) = ($5 << [1])
	$7 = ($3 | [1])
	goto $label$78 
	
.LABEL $label$80
	*(($3 + [8])) = [0]
	*($3) = $10
	*($3) = [0]
	$8 = ($3 | [1])
	goto $label$77 
	
.LABEL $label$79
	$9 = (($5 + [16]) & [-16])
	$7 = CALL $10($9)
	*($3) = ($9 | [1])
	*($3 + [8]) = $7
	*($3 + [4]) = $5
	
.LABEL $label$78
	$9 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$88:
	*(($7 + $8)) = *((($3 + [32]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$88 }
	$8 = ($7 + $5)
	
.LABEL $label$77
	*($8) = [0]
	$8 = CALL $34($3, [0], [11852])
	$5 = ($8 + [8])
	*((($3 + [16]) + [8])) = *($5)
	*($3 + [16]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	$8 = CALL $31(($3 + [16]), [11826])
	$5 = ($8 + [8])
	*((($3 + [32]) + [8])) = *($5)
	*($3 + [32]) = *($8)
	*($8) = (int_64)0
	*($5) = [0]
	if ( ($1 == 0) ){ goto $label$89 }
	CALL eosio_assert([0], ( *($3 + [40]) ? (($3 + [32]) | [1]) : (*($3 + [32]) & [1]) ))
	
.LABEL $label$89
	if ( (*($3 + [32]) & [1]) ){ goto $label$94 }
	if ( (*($3 + [16]) & [1]) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$94
	CALL $12(*($3 + [40]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$92 }
	
.LABEL $label$93
	CALL $12(*($3 + [24]))
	if ( (*($3) & [1]) ){ goto $label$91 }
	goto $label$90 
	
.LABEL $label$92
	if ( ((*($3) & [1]) == 0) ){ goto $label$90 }
	
.LABEL $label$91
	CALL $12(*($3 + [8]))
	
.LABEL $label$90
	$2 = *((($3 + [496]) + [32]))
	if ( ($2 == 0) ){ goto $label$95 }
	$6 = ($3 + [532])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$97 }
	
.LOOP $label$98:
	$9 = ($9 + [-24])
	$1 = *($9)
	*($9) = [0]
	if ( ($1 == 0) ){ goto $label$99 }
	$7 = *($1 + [16])
	if ( ($7 == 0) ){ goto $label$100 }
	$0 = ($1 + [20])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$102 }
	
.LOOP $label$103:
	$8 = ($5 + [-12])
	if ( ((*($8) & [1]) == 0) ){ goto $label$104 }
	CALL $12(*(($5 + [-4])))
	
.LABEL $label$104
	$5 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$103 }
	$8 = *(($1 + [16]))
	goto $label$101 
	
.LABEL $label$102
	$8 = $7
	
.LABEL $label$101
	*($0) = $7
	CALL $12($8)
	
.LABEL $label$100
	CALL $12($1)
	
.LABEL $label$99
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$98 }
	$8 = *(($3 + [528]))
	goto $label$96 
	
.LABEL $label$97
	$8 = $2
	
.LABEL $label$96
	*($6) = $2
	CALL $12($8)
	
.LABEL $label$95
	$7 = *((($3 + [80]) + [32]))
	if ( ($7 == 0) ){ goto $label$105 }
	$9 = ($3 + [116])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$107 }
	
.LOOP $label$108:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$109 }
	CALL $12($5)
	
.LABEL $label$109
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$108 }
	$8 = *(($3 + [112]))
	goto $label$106 
	
.LABEL $label$107
	$8 = $7
	
.LABEL $label$106
	*($9) = $7
	CALL $12($8)
	
.LABEL $label$105
	$7 = *(($3 + [304]))
	if ( ($7 == 0) ){ goto $label$110 }
	$9 = ($3 + [308])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$112 }
	
.LOOP $label$113:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$114 }
	CALL $12($5)
	
.LABEL $label$114
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$113 }
	$8 = *(($3 + [304]))
	goto $label$111 
	
.LABEL $label$112
	$8 = $7
	
.LABEL $label$111
	*($9) = $7
	CALL $12($8)
	
.LABEL $label$110
	CALL $115(($3 + [176]))
	$2 = *(($3 + [160]))
	if ( ($2 == 0) ){ goto $label$115 }
	$6 = ($3 + [164])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$117 }
	
.LOOP $label$118:
	$9 = ($9 + [-24])
	$1 = *($9)
	*($9) = [0]
	if ( ($1 == 0) ){ goto $label$119 }
	$7 = *($1 + [8])
	if ( ($7 == 0) ){ goto $label$120 }
	$0 = ($1 + [12])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$122 }
	
.LOOP $label$123:
	$8 = ($5 + [-12])
	if ( ((*($8) & [1]) == 0) ){ goto $label$124 }
	CALL $12(*(($5 + [-4])))
	
.LABEL $label$124
	$5 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$123 }
	$8 = *(($1 + [8]))
	goto $label$121 
	
.LABEL $label$122
	$8 = $7
	
.LABEL $label$121
	*($0) = $7
	CALL $12($8)
	
.LABEL $label$120
	CALL $12($1)
	
.LABEL $label$119
	if ( ((int_32)$9 != (int_32)$2) ){ goto $label$118 }
	$8 = *(($3 + [160]))
	goto $label$116 
	
.LABEL $label$117
	$8 = $2
	
.LABEL $label$116
	*($6) = $2
	CALL $12($8)
	
.LABEL $label$115
	CALL $131(($3 + [320]))
	$global$0 = ($3 + [544])
}

void .FUNC $75 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL $74($0, $1, $2)
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [86])) = [0]
	*(($3 + [84])) = [0]
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	$4 = *($0)
	*(($3 + [56])) = $4
	*(($3 + [96])) = $4
	*(($3 + [104])) = $4
	*($3 + [40]) = $4
	*($3 + [48]) = $4
	*($3 + [88]) = $4
	$5 = ($3 + [48])
	*($3 + [32]) = $5
	CALL $109(($3 + [136]), ($3 + [32]), $1)
	$0 = *($3 + [140])
	if ( ($0 == 0) ){ goto $label$2 }
	if ( ((int_64)*($1) != (int_64)*($0 + [8])) ){ goto $label$2 }
	$4 = *($3 + [136])
	*($3 + [24]) = $4
	$0 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ($0) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_64)*($0 + [8]) != (int_64)*($1)) ){ goto $label$1 }
	if ( ((int_64)*($0 + [16]) != (int_64)*($2)) ){ goto $label$4 }
	CALL eosio_assert([0], [11866])
	
.LABEL $label$4
	CALL $113(($3 + [24]))
	$0 = *($3 + [28])
	if ( $0 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($3 + [28]) = [0]
	*($3 + [24]) = ($3 + [32])
	
.LABEL $label$1
	*($3 + [16]) = $5
	CALL $319(($3 + [136]), ($3 + [16]), $1)
	$0 = *($3 + [140])
	if ( ($0 == 0) ){ goto $label$6 }
	if ( ((int_64)*($1) != (int_64)*($0 + [16])) ){ goto $label$6 }
	$4 = *($3 + [136])
	*($3 + [8]) = $4
	$0 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ($0) == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	if ( ((int_64)*($0 + [16]) != (int_64)*($1)) ){ goto $label$5 }
	if ( ((int_64)*($0 + [8]) != (int_64)*($2)) ){ goto $label$8 }
	CALL eosio_assert([0], [11916])
	
.LABEL $label$8
	CALL $320(($3 + [8]))
	$0 = *($3 + [12])
	if ( $0 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	*($3 + [12]) = [0]
	*($3 + [8]) = ($3 + [16])
	
.LABEL $label$5
	CALL $115(($3 + [40]))
	$global$0 = ($3 + [144])
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [336])
	$global$0 = $2
	CALL $74($0, $1, $1)
	CALL require_auth(*($1))
	*(($2 + [80])) = (int_64)-1
	*(($2 + [88])) = (int_64)0
	$3 = [0]
	*(($2 + [96])) = [0]
	*(($2 + [100])) = [0]
	*(($2 + [120])) = (int_64)-1
	*(($2 + [128])) = (int_64)0
	*(($2 + [136])) = [0]
	*(($2 + [140])) = [0]
	$4 = *($0)
	*(($2 + [72])) = $4
	*(($2 + [112])) = $4
	*($2 + [48]) = [1]
	*($2 + [56]) = (int_64)8238557860461690880
	*($2 + [40]) = $4
	*($2 + [64]) = $4
	*($2 + [104]) = $4
	*($2 + [144]) = $4
	*(($2 + [160])) = $4
	*(($2 + [152])) = $4
	*(($2 + [168])) = (int_64)-1
	*(($2 + [176])) = (int_64)0
	*(($2 + [184])) = [0]
	*(($2 + [192])) = $4
	*(($2 + [200])) = $4
	*(($2 + [208])) = (int_64)-1
	*(($2 + [216])) = (int_64)0
	*(($2 + [224])) = (int_64)0
	*(($2 + [232])) = [0]
	*(($2 + [240])) = $4
	*(($2 + [248])) = $4
	*(($2 + [256])) = (int_64)-1
	*(($2 + [264])) = (int_64)0
	*(($2 + [272])) = [0]
	*(($2 + [276])) = [0]
	*(($2 + [288])) = $4
	*(($2 + [280])) = $4
	*(($2 + [296])) = (int_64)-1
	*(($2 + [304])) = (int_64)0
	*(($2 + [312])) = [0]
	*(($2 + [316])) = [0]
	*($2 + [24]) = ($2 + [104])
	CALL $97(($2 + [320]), ($2 + [24]), $1)
	$4 = *($1)
	$0 = *($2 + [324])
	if ( ($0 == 0) ){ goto $label$6 }
	$5 = *($0 + [16])
	if ( ((int_64)$5 != (int_64)$4) ){ goto $label$6 }
	if ( ((int_64)*($0 + [8]) != (int_64)8238557860461690880) ){ goto $label$7 }
	$3 = [1]
	$4 = $5
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	
.LOOP $label$8:
	CALL $98(($2 + [320]))
	$4 = *($1)
	$0 = *($2 + [324])
	if ( ($0 == 0) ){ goto $label$6 }
	$5 = *($0 + [16])
	if ( ((int_64)$5 != (int_64)$4) ){ goto $label$6 }
	if ( ((int_64)*($0 + [8]) != (int_64)8238557860461690880) ){ goto $label$8 }
	$4 = $5
	$3 = [1]
	
.LABEL $label$6
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	$1 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$10:
	*((($2 + [320]) + ($0 = $1))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$0 == (int_32)[12]) )))))
	$1 = ($0 + [1])
	if ( ((uint_32)$0 > (uint_32)[11]) ){ goto $label$9 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$10 }
	
.LABEL $label$9
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$3 }
	*($2 + [8]) = ($1 << [1])
	$6 = (($2 + [8]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [8]) = [0]
	$0 = (($2 + [8]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($1 + [16]) & [-16])
	$6 = CALL $10($7)
	*($2 + [8]) = ($7 | [1])
	*($2 + [16]) = $6
	*($2 + [12]) = $1
	
.LABEL $label$2
	$7 = ($0 + [1])
	$0 = [0]
	
.LOOP $label$11:
	*(($6 + $0)) = *((($2 + [320]) + $0))
	$0 = ($0 + [1])
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$11 }
	$0 = ($6 + $1)
	
.LABEL $label$1
	*($0) = [0]
	$0 = CALL $34(($2 + [8]), [0], [11706])
	$1 = ($0 + [8])
	*((($2 + [24]) + [8])) = *($1)
	*($2 + [24]) = *($0)
	*($0) = (int_64)0
	*($1) = [0]
	$0 = CALL $31(($2 + [24]), [12312])
	$1 = ($0 + [8])
	*((($2 + [320]) + [8])) = *($1)
	*($2 + [320]) = *($0)
	*($0) = (int_64)0
	*($1) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	$0 = [1]
	if ( (*($2 + [320]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL eosio_assert([0], ( *($2 + [328]) ? (($2 + [320]) | [1]) : (*($2 + [320]) & [1]) ))
	$0 = [1]
	if ( ((*($2 + [320]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $12(*($2 + [328]))
	if ( ((*($2 + [24]) & $0) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( (*($2 + [24]) & $0) ){ goto $label$14 }
	
.LABEL $label$15
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	CALL $12(*($2 + [32]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $12(*($2 + [16]))
	
.LABEL $label$12
	CALL $131(($2 + [144]))
	$6 = *(($2 + [128]))
	if ( ($6 == 0) ){ goto $label$19 }
	$7 = ($2 + [132])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$21 }
	
.LOOP $label$22:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$23 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$24 }
	CALL $12(*(($1 + [32])))
	
.LABEL $label$24
	CALL $12($1)
	
.LABEL $label$23
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$22 }
	$0 = *(($2 + [128]))
	goto $label$20 
	
.LABEL $label$21
	$0 = $6
	
.LABEL $label$20
	*($7) = $6
	CALL $12($0)
	
.LABEL $label$19
	CALL $232(($2 + [88]))
	$global$0 = ($2 + [336])
}

void .FUNC $79 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [64])
	$global$0 = $1
	CALL prints([11961])
	if ( CALL has_auth(*($0)) ){ goto $label$2 }
	$2 = [0]
	*(($1 + [56])) = [0]
	*($1 + [40]) = (int_64)-1
	$3 = *($0)
	*($1 + [24]) = $3
	*($1 + [32]) = $3
	*($1 + [48]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-4352391049156317184, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $121(($1 + [24]), $0)
	
.LOOP $label$4:
	$2 = CALL has_auth(*($0))
	$0 = CALL db_next_i64(*($0 + [12]), ($1 + [8]))
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$3 }
	$0 = CALL $121(($1 + [24]), $0)
	if ( ($2 == 0) ){ goto $label$4 }
	
.LABEL $label$3
	CALL $35(($1 + [8]), $2)
	CALL prints([11985])
	$0 = *($1 + [8])
	$4 = ($0 & [1])
	CALL prints_l(( *($1 + [16]) ? (($1 + [8]) | [1]) : $4 ), ( *($1 + [12]) ? uint_32($0 >> [1]) : $4 ))
	CALL prints([11025])
	if ( (*($1 + [8]) & [1]) ){ goto $label$7 }
	if ( ($2 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $12(*(($1 + [16])))
	if ( $2 ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [12008])
	$4 = *($1 + [48])
	if ( ($4 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$4 = *($1 + [48])
	if ( $4 ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($1 + [64])
	return 
	
.LABEL $label$1
	$5 = ($1 + [52])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($1 + [48]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($5) = $4
	CALL $12($0)
	$global$0 = ($1 + [64])
}

void .FUNC $259 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1440])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1396]) = $2
	*($3 + [1392]) = $2
	$5 = ($2 + $4)
	*($3 + [1400]) = $5
	*($3 + [1384]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1400]))
	$2 = *($3 + [1396])
	
.LABEL $label$5
	CALL memcpy(($3 + [1384]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1396]) = $2
	*($3 + [1376]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1396])
	
.LABEL $label$6
	CALL memcpy(($3 + [1376]), $2, [8])
	*($3 + [1396]) = ($2 + [8])
	*($3 + [1368]) = [0]
	*($3 + [1360]) = (int_64)0
	CALL $165(($3 + [1392]), ($3 + [1360]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [1392]) + [8]))
	*($3 + [8]) = *($3 + [1392])
	*(($4 = (($3 + [1408]) + [8]))) = *($2)
	*($3 + [1408]) = *($3 + [8])
	$2 = *($4)
	*((($3 + [1424]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$1 = *($3 + [1408])
	*($3 + [40]) = $1
	*($3 + [1424]) = $1
	*(($3 + [64])) = $0
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [56]) = $0
	*(($3 + [192])) = $0
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [278])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*($3 + [232]) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [296])) = $0
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [336])) = $0
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [384])) = $0
	*(($3 + [392])) = $0
	*(($3 + [400])) = (int_64)-1
	*(($3 + [408])) = (int_64)0
	*(($3 + [416])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = $0
	*($3 + [328]) = $0
	*($3 + [376]) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [440])) = $0
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [470])) = [0]
	*(($3 + [468])) = [0]
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = [0]
	*(($3 + [508])) = [0]
	*(($3 + [512])) = [0]
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = (int_64)-1
	*(($3 + [552])) = [0]
	*(($3 + [556])) = [0]
	*(($3 + [560])) = [0]
	*($3 + [568]) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = (int_64)-1
	*(($3 + [600])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [616])) = [0]
	*(($3 + [612])) = [0]
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = $0
	*(($3 + [648])) = (int_64)-1
	*(($3 + [656])) = [0]
	*(($3 + [660])) = [0]
	*(($3 + [664])) = [0]
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = (int_64)-1
	*(($3 + [696])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [720])) = $0
	*(($3 + [728])) = $0
	*(($3 + [736])) = (int_64)-1
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [760])) = $0
	*(($3 + [768])) = $0
	*(($3 + [776])) = (int_64)-1
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*($3 + [800]) = $0
	*(($3 + [808])) = [1]
	*(($3 + [816])) = (int_64)8238557860461690880
	*(($3 + [824])) = $0
	*(($3 + [832])) = $0
	*(($3 + [840])) = (int_64)-1
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = [0]
	*(($3 + [860])) = [0]
	*(($3 + [864])) = $0
	*(($3 + [872])) = $0
	*(($3 + [880])) = (int_64)-1
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = (int_64)-1
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = [0]
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = (int_64)-1
	*(($3 + [976])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = (int_64)-1
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = (int_64)-1
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*($3 + [1080]) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = (int_64)-1
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*(($3 + [1120])) = [0]
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = (int_64)-1
	*(($3 + [1152])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = (int_64)-1
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = (int_64)-1
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = (int_64)-1
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = [0]
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = (int_64)-1
	*(($3 + [1336])) = [0]
	*(($3 + [1340])) = [0]
	*(($3 + [1344])) = [0]
	*($3 + [1352]) = $0
	CALL $101(($3 + [24]), ($3 + [1384]), ($3 + [1376]), ($3 + [1360]))
	CALL $230(($3 + [24]))
	if ( ((*($3 + [1360]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($3 + [1368])))
	
.LABEL $label$7
	$global$0 = ($3 + [1440])
}

void .FUNC $258 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1360])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [1352]), $2, [8])
	*($3 + [1344]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL $102(($3 + [784]), ($3 + [1352]), ($3 + [1344]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1360])
}

void .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $301(*($1), *($0 + [24]))
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $313 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$8 = ($global$0 - [16])
	$global$0 = $8
	$9 = *($0)
	$10 = *($9 + [12])
	$11 = *($10)
	$12 = *(*($9 + [8]))
	$13 = *(*($9) + [8])
	*($8 + [8]) = *($10 + [8])
	$10 = CALL db_idx64_store($13, (int_64)4982429584927490048, $12, $11, ($8 + [8]))
	*(*($9 + [4]) + [76]) = $10
	$9 = *($0)
	$10 = *($9 + [12])
	$11 = *($10)
	$12 = *(*($9 + [8]))
	$13 = *(*($9) + [8])
	*($8 + [8]) = *($10 + [32])
	$10 = CALL db_idx64_store($13, (int_64)4982429584927490049, $12, $11, ($8 + [8]))
	*((*($9 + [4]) + [80])) = $10
	$9 = *($0)
	$10 = *($9 + [12])
	$11 = *($10)
	$12 = *(*($9 + [8]))
	$13 = *(*($9) + [8])
	*($8 + [8]) = *($10 + [40])
	$10 = CALL db_idx64_store($13, (int_64)4982429584927490050, $12, $11, ($8 + [8]))
	*((*($9 + [4]) + [84])) = $10
	$9 = *($0)
	$10 = *($9 + [12])
	$11 = *($10)
	$12 = *(*($9 + [8]))
	$13 = *(*($9) + [8])
	*($8 + [8]) = *($10 + [16])
	$10 = CALL db_idx64_store($13, (int_64)4982429584927490051, $12, $11, ($8 + [8]))
	*((*($9 + [4]) + [88])) = $10
	$9 = *($0)
	$10 = *($9 + [12])
	$11 = *($10)
	$12 = *(*($9 + [8]))
	$13 = *(*($9) + [8])
	*($8 + [8]) = *($10 + [24])
	$10 = CALL db_idx64_store($13, (int_64)4982429584927490052, $12, $11, ($8 + [8]))
	*((*($9 + [4]) + [92])) = $10
	$9 = *($0)
	$10 = *($9 + [12])
	$11 = *($10)
	$12 = *(*($9 + [8]))
	$13 = *(*($9) + [8])
	*($8 + [8]) = *($10 + [60])
	$10 = CALL db_idx64_store($13, (int_64)4982429584927490053, $12, $11, ($8 + [8]))
	*((*($9 + [4]) + [96])) = $10
	$0 = *($0)
	$9 = *($0 + [12])
	$11 = *($9)
	$12 = *(*($0 + [8]))
	$13 = *(*($0) + [8])
	*($8 + [8]) = *($9 + [64])
	$9 = CALL db_idx64_store($13, (int_64)4982429584927490054, $12, $11, ($8 + [8]))
	*((*($0 + [4]) + [100])) = $9
	$global$0 = ($8 + [16])
}

int_32 .FUNC $314 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [72]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11480])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)4982429584927490048)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $68(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $165(*($1), *($0 + [24]))
	$2 = *($0 + [28])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [32])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $316 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$8 = ($global$0 - [16])
	$global$0 = $8
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [8])
	if ( (CALL $3(*($9 + [8]), ($8 + [8]), [8]) == 0) ){ goto $label$1 }
	$11 = *(*($9 + [12]) + [76])
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$2 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490048, $8, *(*($9 + [16])))
	*(*(($9 + [12])) + [76]) = $11
	
.LABEL $label$2
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$1
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [32])
	if ( (CALL $3((*($9 + [8]) + [8]), ($8 + [8]), [8]) == 0) ){ goto $label$3 }
	$11 = *((*($9 + [12]) + [80]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$4 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490049, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [80])) = $11
	
.LABEL $label$4
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$3
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [40])
	if ( (CALL $3((*($9 + [8]) + [16]), ($8 + [8]), [8]) == 0) ){ goto $label$5 }
	$11 = *((*($9 + [12]) + [84]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$6 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490050, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [84])) = $11
	
.LABEL $label$6
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$5
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [16])
	if ( (CALL $3((*($9 + [8]) + [24]), ($8 + [8]), [8]) == 0) ){ goto $label$7 }
	$11 = *((*($9 + [12]) + [88]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$8 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490051, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [88])) = $11
	
.LABEL $label$8
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$7
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [24])
	if ( (CALL $3((*($9 + [8]) + [32]), ($8 + [8]), [8]) == 0) ){ goto $label$9 }
	$11 = *((*($9 + [12]) + [92]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$10 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490052, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [92])) = $11
	
.LABEL $label$10
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$9
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [60])
	if ( (CALL $3((*($9 + [8]) + [40]), ($8 + [8]), [8]) == 0) ){ goto $label$11 }
	$11 = *((*($9 + [12]) + [96]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$12 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490053, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [96])) = $11
	
.LABEL $label$12
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$11
	$0 = *($0)
	$11 = *($0)
	*($8 + [8]) = *(*($0 + [4]) + [64])
	if ( (CALL $3((*($0 + [8]) + [48]), ($8 + [8]), [8]) == 0) ){ goto $label$13 }
	$9 = *((*($0 + [12]) + [100]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$14 }
	$9 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)4982429584927490054, $8, *(*($0 + [16])))
	*((*(($0 + [12])) + [100])) = $9
	
.LABEL $label$14
	CALL db_idx64_update($9, *(*($0 + [20])), ($8 + [8]))
	
.LABEL $label$13
	$global$0 = ($8 + [16])
}

void .FUNC $317 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$8 = ($global$0 - [16])
	$global$0 = $8
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [8])
	if ( (CALL $3(*($9 + [8]), ($8 + [8]), [8]) == 0) ){ goto $label$1 }
	$11 = *(*($9 + [12]) + [76])
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$2 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490048, $8, *(*($9 + [16])))
	*(*(($9 + [12])) + [76]) = $11
	
.LABEL $label$2
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$1
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [32])
	if ( (CALL $3((*($9 + [8]) + [8]), ($8 + [8]), [8]) == 0) ){ goto $label$3 }
	$11 = *((*($9 + [12]) + [80]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$4 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490049, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [80])) = $11
	
.LABEL $label$4
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$3
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [40])
	if ( (CALL $3((*($9 + [8]) + [16]), ($8 + [8]), [8]) == 0) ){ goto $label$5 }
	$11 = *((*($9 + [12]) + [84]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$6 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490050, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [84])) = $11
	
.LABEL $label$6
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$5
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [16])
	if ( (CALL $3((*($9 + [8]) + [24]), ($8 + [8]), [8]) == 0) ){ goto $label$7 }
	$11 = *((*($9 + [12]) + [88]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$8 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490051, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [88])) = $11
	
.LABEL $label$8
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$7
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [24])
	if ( (CALL $3((*($9 + [8]) + [32]), ($8 + [8]), [8]) == 0) ){ goto $label$9 }
	$11 = *((*($9 + [12]) + [92]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$10 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490052, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [92])) = $11
	
.LABEL $label$10
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$9
	$9 = *($0)
	$10 = *($9)
	*($8 + [8]) = *(*($9 + [4]) + [60])
	if ( (CALL $3((*($9 + [8]) + [40]), ($8 + [8]), [8]) == 0) ){ goto $label$11 }
	$11 = *((*($9 + [12]) + [96]))
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$12 }
	$11 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)4982429584927490053, $8, *(*($9 + [16])))
	*((*(($9 + [12])) + [96])) = $11
	
.LABEL $label$12
	CALL db_idx64_update($11, *(*($9 + [20])), ($8 + [8]))
	
.LABEL $label$11
	$0 = *($0)
	$11 = *($0)
	*($8 + [8]) = *(*($0 + [4]) + [64])
	if ( (CALL $3((*($0 + [8]) + [48]), ($8 + [8]), [8]) == 0) ){ goto $label$13 }
	$9 = *((*($0 + [12]) + [100]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$14 }
	$9 = CALL db_idx64_find_primary(*($11), *($11 + [8]), (int_64)4982429584927490054, $8, *(*($0 + [16])))
	*((*(($0 + [12])) + [100])) = $9
	
.LABEL $label$14
	CALL db_idx64_update($9, *(*($0 + [20])), ($8 + [8]))
	
.LABEL $label$13
	$global$0 = ($8 + [16])
}

void .FUNC $251 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1504])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1460]) = $2
	*($3 + [1456]) = $2
	$5 = ($2 + $4)
	*($3 + [1464]) = $5
	*($3 + [1448]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1464]))
	$2 = *($3 + [1460])
	
.LABEL $label$5
	CALL memcpy(($3 + [1448]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1460]) = $2
	*($3 + [1440]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *((($3 + [1456]) + [8]))
	$2 = *($3 + [1460])
	
.LABEL $label$6
	CALL memcpy(($3 + [1440]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1460]) = $2
	*($3 + [1432]) = (int_64)0
	*($3 + [1424]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1464]))
	$2 = *($3 + [1460])
	
.LABEL $label$7
	CALL memcpy(($3 + [1424]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1460]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1460])
	
.LABEL $label$8
	CALL memcpy(($3 + [72]), $2, [8])
	*(($5 = (($3 + [1424]) + [8]))) = *($3 + [72])
	*($3 + [1460]) = ($2 + [8])
	*($3 + [1416]) = [0]
	*($3 + [1408]) = (int_64)0
	CALL $165(($3 + [1456]), ($3 + [1408]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [1456]) + [8]))
	*($3 + [56]) = *($3 + [1456])
	*(($4 = (($3 + [1472]) + [8]))) = *($2)
	*($3 + [1472]) = *($3 + [56])
	$2 = *($4)
	*((($3 + [1488]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [1472])
	*($3 + [88]) = $1
	*($3 + [1488]) = $1
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*($3 + [104]) = $0
	*(($3 + [240])) = $0
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [326])) = [0]
	*(($3 + [324])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*($3 + [280]) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [344])) = $0
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [384])) = $0
	*(($3 + [392])) = $0
	*(($3 + [400])) = (int_64)-1
	*(($3 + [408])) = (int_64)0
	*(($3 + [416])) = [0]
	*(($3 + [432])) = $0
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*($3 + [376]) = $0
	*($3 + [424]) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [488])) = $0
	*(($3 + [504])) = (int_64)0
	*(($3 + [512])) = [0]
	*(($3 + [518])) = [0]
	*(($3 + [516])) = [0]
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = (int_64)-1
	*(($3 + [552])) = [0]
	*(($3 + [556])) = [0]
	*(($3 + [560])) = [0]
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = (int_64)-1
	*(($3 + [600])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [608])) = [0]
	*($3 + [616]) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = (int_64)-1
	*(($3 + [648])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [664])) = [0]
	*(($3 + [660])) = [0]
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = $0
	*(($3 + [696])) = (int_64)-1
	*(($3 + [704])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [720])) = $0
	*(($3 + [728])) = $0
	*(($3 + [736])) = (int_64)-1
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [760])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [768])) = $0
	*(($3 + [776])) = $0
	*(($3 + [784])) = (int_64)-1
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*($3 + [848]) = $0
	*(($3 + [856])) = [1]
	*(($3 + [864])) = (int_64)8238557860461690880
	*(($3 + [872])) = $0
	*(($3 + [880])) = $0
	*(($3 + [888])) = (int_64)-1
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = (int_64)-1
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = [0]
	*(($3 + [948])) = [0]
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = $0
	*(($3 + [976])) = (int_64)-1
	*(($3 + [984])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = (int_64)-1
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1040])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = (int_64)-1
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = (int_64)-1
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*(($3 + [1120])) = [0]
	*(($3 + [1124])) = [0]
	*($3 + [1128]) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = (int_64)-1
	*(($3 + [1160])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = (int_64)-1
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1216])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = (int_64)-1
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = (int_64)-1
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = [0]
	*(($3 + [1300])) = [0]
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = (int_64)-1
	*(($3 + [1336])) = [0]
	*(($3 + [1340])) = [0]
	*(($3 + [1344])) = [0]
	*(($3 + [1352])) = $0
	*(($3 + [1360])) = $0
	*(($3 + [1368])) = $0
	*(($3 + [1376])) = (int_64)-1
	*(($3 + [1384])) = [0]
	*(($3 + [1388])) = [0]
	*(($3 + [1392])) = [0]
	*($3 + [1400]) = $0
	*(($4 = (($3 + [40]) + [8]))) = *($5)
	*($3 + [40]) = *($3 + [1424])
	$0 = *($3 + [1440])
	$1 = *($3 + [1448])
	$2 = CALL $24(($3 + [24]), ($3 + [1408]))
	*((($3 + [8]) + [8])) = *($4)
	*($3 + [8]) = *($3 + [40])
	CALL $219(($3 + [72]), $1, $0, ($3 + [8]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$9
	CALL $230(($3 + [72]))
	if ( ((*($3 + [1408]) & [1]) == 0) ){ goto $label$10 }
	CALL $12(*(($3 + [1416])))
	
.LABEL $label$10
	$global$0 = ($3 + [1504])
}

void .FUNC $250 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1488])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1444]) = $2
	*($3 + [1440]) = $2
	$5 = ($2 + $4)
	*($3 + [1448]) = $5
	*($3 + [1432]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1448]))
	$2 = *($3 + [1444])
	
.LABEL $label$5
	CALL memcpy(($3 + [1432]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1444]) = $2
	*($3 + [1424]) = (int_64)0
	*($3 + [1416]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *((($3 + [1440]) + [8]))
	$2 = *($3 + [1444])
	
.LABEL $label$6
	CALL memcpy(($3 + [1416]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1444]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1444])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	*(($4 = (($3 + [1416]) + [8]))) = *($3 + [64])
	*($3 + [1444]) = ($2 + [8])
	*($3 + [1408]) = [0]
	*($3 + [1400]) = (int_64)0
	CALL $165(($3 + [1440]), ($3 + [1400]))
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [1440]) + [8]))
	*($3 + [48]) = *($3 + [1440])
	*(($5 = (($3 + [1456]) + [8]))) = *($2)
	*($3 + [1456]) = *($3 + [48])
	$2 = *($5)
	*((($3 + [1472]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [1456])
	*($3 + [80]) = $1
	*($3 + [1472]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*($3 + [96]) = $0
	*(($3 + [232])) = $0
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [318])) = [0]
	*(($3 + [316])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*($3 + [272]) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [336])) = $0
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*($3 + [368]) = $0
	*($3 + [416]) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [480])) = $0
	*(($3 + [496])) = (int_64)0
	*(($3 + [504])) = [0]
	*(($3 + [510])) = [0]
	*(($3 + [508])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = (int_64)-1
	*(($3 + [544])) = [0]
	*(($3 + [548])) = [0]
	*(($3 + [552])) = [0]
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*($3 + [608]) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = (int_64)-1
	*(($3 + [696])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [712])) = $0
	*(($3 + [720])) = $0
	*(($3 + [728])) = (int_64)-1
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [760])) = $0
	*(($3 + [768])) = $0
	*(($3 + [776])) = (int_64)-1
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*($3 + [840]) = $0
	*(($3 + [848])) = [1]
	*(($3 + [856])) = (int_64)8238557860461690880
	*(($3 + [864])) = $0
	*(($3 + [872])) = $0
	*(($3 + [880])) = (int_64)-1
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = (int_64)-1
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = (int_64)-1
	*(($3 + [976])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [992])) = $0
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = (int_64)-1
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = (int_64)-1
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = (int_64)-1
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*($3 + [1120]) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = (int_64)-1
	*(($3 + [1152])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = (int_64)-1
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = (int_64)-1
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = (int_64)-1
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = (int_64)-1
	*(($3 + [1328])) = [0]
	*(($3 + [1332])) = [0]
	*(($3 + [1336])) = [0]
	*(($3 + [1344])) = $0
	*(($3 + [1352])) = $0
	*(($3 + [1360])) = $0
	*(($3 + [1368])) = (int_64)-1
	*(($3 + [1376])) = [0]
	*(($3 + [1380])) = [0]
	*(($3 + [1384])) = [0]
	*($3 + [1392]) = $0
	*(($5 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [1416])
	$0 = *($3 + [1432])
	$2 = CALL $24(($3 + [16]), ($3 + [1400]))
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $225(($3 + [64]), $0, $3, $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$8
	CALL $230(($3 + [64]))
	if ( ((*($3 + [1400]) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($3 + [1408])))
	
.LABEL $label$9
	$global$0 = ($3 + [1488])
}

void .FUNC $253 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1392])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1384]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1384]), $2, [8])
	*($3 + [1376]) = (int_64)0
	*($3 + [1368]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [1368]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [1368]) + [8]))) = *($3 + [32])
	*((($3 + [32]) + [24])) = $4
	*(($3 + [72])) = $0
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [24])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = $0
	*(($3 + [168])) = $0
	*(($3 + [160])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*($3 + [240]) = $0
	*(($3 + [286])) = [0]
	*(($3 + [280])) = [0]
	*(($3 + [284])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*(($3 + [312])) = (int_64)-1
	*(($3 + [320])) = (int_64)0
	*(($3 + [328])) = [0]
	*(($3 + [344])) = $0
	*(($3 + [352])) = $0
	*(($3 + [360])) = (int_64)-1
	*(($3 + [368])) = (int_64)0
	*(($3 + [376])) = [0]
	*(($3 + [392])) = $0
	*(($3 + [400])) = $0
	*($3 + [336]) = $0
	*($3 + [384]) = $0
	*(($3 + [408])) = (int_64)-1
	*(($3 + [416])) = (int_64)0
	*(($3 + [424])) = [0]
	*(($3 + [432])) = $0
	*(($3 + [440])) = $0
	*(($3 + [448])) = $0
	*(($3 + [456])) = (int_64)-1
	*(($3 + [464])) = (int_64)0
	*(($3 + [472])) = [0]
	*(($3 + [478])) = [0]
	*(($3 + [476])) = [0]
	*(($3 + [480])) = $0
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = (int_64)-1
	*(($3 + [512])) = [0]
	*(($3 + [516])) = [0]
	*(($3 + [520])) = [0]
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = (int_64)-1
	*(($3 + [560])) = [0]
	*(($3 + [564])) = [0]
	*(($3 + [568])) = [0]
	*($3 + [576]) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = (int_64)-1
	*(($3 + [608])) = [0]
	*(($3 + [612])) = [0]
	*(($3 + [616])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [632])) = $0
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = (int_64)-1
	*(($3 + [664])) = [0]
	*(($3 + [668])) = [0]
	*(($3 + [672])) = [0]
	*(($3 + [680])) = $0
	*(($3 + [688])) = $0
	*(($3 + [696])) = (int_64)-1
	*(($3 + [704])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [728])) = $0
	*(($3 + [736])) = $0
	*(($3 + [744])) = (int_64)-1
	*(($3 + [752])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = $0
	*(($3 + [776])) = $0
	*(($3 + [784])) = (int_64)-1
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*($3 + [808]) = $0
	*(($3 + [816])) = [1]
	*(($3 + [824])) = (int_64)8238557860461690880
	*(($3 + [832])) = $0
	*(($3 + [840])) = $0
	*(($3 + [848])) = (int_64)-1
	*(($3 + [856])) = [0]
	*(($3 + [860])) = [0]
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = $0
	*(($3 + [880])) = $0
	*(($3 + [888])) = (int_64)-1
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = (int_64)-1
	*(($3 + [944])) = [0]
	*(($3 + [948])) = [0]
	*(($3 + [952])) = [0]
	*(($3 + [960])) = $0
	*(($3 + [968])) = $0
	*(($3 + [976])) = (int_64)-1
	*(($3 + [984])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = (int_64)-1
	*(($3 + [1032])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = (int_64)-1
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*($3 + [1088]) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = (int_64)-1
	*(($3 + [1120])) = [0]
	*(($3 + [1124])) = [0]
	*(($3 + [1128])) = [0]
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = (int_64)-1
	*(($3 + [1160])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = (int_64)-1
	*(($3 + [1208])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = (int_64)-1
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = (int_64)-1
	*(($3 + [1296])) = [0]
	*(($3 + [1300])) = [0]
	*(($3 + [1304])) = [0]
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = (int_64)-1
	*(($3 + [1344])) = [0]
	*(($3 + [1348])) = [0]
	*(($3 + [1352])) = [0]
	*($3 + [1360]) = $0
	$0 = *($3 + [1384])
	*(($2 = (($3 + [16]) + [8]))) = *($5)
	*($3 + [16]) = *($3 + [1368])
	*(($3 + [8])) = *($2)
	*($3) = *($3 + [16])
	CALL $155(($3 + [32]), $0, $3)
	CALL $230(($3 + [32]))
	$global$0 = ($3 + [1392])
}

void .FUNC $252 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1504])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1460]) = $2
	*($3 + [1456]) = $2
	$5 = ($2 + $4)
	*($3 + [1464]) = $5
	*($3 + [1448]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1464]))
	$2 = *($3 + [1460])
	
.LABEL $label$5
	CALL memcpy(($3 + [1448]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1460]) = $2
	*($3 + [1440]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$5 = *((($3 + [1456]) + [8]))
	$2 = *($3 + [1460])
	
.LABEL $label$6
	CALL memcpy(($3 + [1440]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1460]) = $2
	*($3 + [1432]) = (int_64)0
	*($3 + [1424]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1464]))
	$2 = *($3 + [1460])
	
.LABEL $label$7
	CALL memcpy(($3 + [1424]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1460]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1460])
	
.LABEL $label$8
	CALL memcpy(($3 + [72]), $2, [8])
	*(($5 = (($3 + [1424]) + [8]))) = *($3 + [72])
	*($3 + [1460]) = ($2 + [8])
	*($3 + [1416]) = [0]
	*($3 + [1408]) = (int_64)0
	CALL $165(($3 + [1456]), ($3 + [1408]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [1456]) + [8]))
	*($3 + [56]) = *($3 + [1456])
	*(($4 = (($3 + [1472]) + [8]))) = *($2)
	*($3 + [1472]) = *($3 + [56])
	$2 = *($4)
	*((($3 + [1488]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [1472])
	*($3 + [88]) = $1
	*($3 + [1488]) = $1
	*(($3 + [112])) = $0
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*($3 + [104]) = $0
	*(($3 + [240])) = $0
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [326])) = [0]
	*(($3 + [324])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*($3 + [280]) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [344])) = $0
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [384])) = $0
	*(($3 + [392])) = $0
	*(($3 + [400])) = (int_64)-1
	*(($3 + [408])) = (int_64)0
	*(($3 + [416])) = [0]
	*(($3 + [432])) = $0
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*($3 + [376]) = $0
	*($3 + [424]) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [488])) = $0
	*(($3 + [504])) = (int_64)0
	*(($3 + [512])) = [0]
	*(($3 + [518])) = [0]
	*(($3 + [516])) = [0]
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = (int_64)-1
	*(($3 + [552])) = [0]
	*(($3 + [556])) = [0]
	*(($3 + [560])) = [0]
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = (int_64)-1
	*(($3 + [600])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [608])) = [0]
	*($3 + [616]) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = (int_64)-1
	*(($3 + [648])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [664])) = [0]
	*(($3 + [660])) = [0]
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = $0
	*(($3 + [696])) = (int_64)-1
	*(($3 + [704])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [720])) = $0
	*(($3 + [728])) = $0
	*(($3 + [736])) = (int_64)-1
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [760])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [768])) = $0
	*(($3 + [776])) = $0
	*(($3 + [784])) = (int_64)-1
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*($3 + [848]) = $0
	*(($3 + [856])) = [1]
	*(($3 + [864])) = (int_64)8238557860461690880
	*(($3 + [872])) = $0
	*(($3 + [880])) = $0
	*(($3 + [888])) = (int_64)-1
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = (int_64)-1
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = [0]
	*(($3 + [948])) = [0]
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = $0
	*(($3 + [976])) = (int_64)-1
	*(($3 + [984])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = (int_64)-1
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1040])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = (int_64)-1
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = (int_64)-1
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*(($3 + [1120])) = [0]
	*(($3 + [1124])) = [0]
	*($3 + [1128]) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = (int_64)-1
	*(($3 + [1160])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = (int_64)-1
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1216])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = (int_64)-1
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = (int_64)-1
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = [0]
	*(($3 + [1300])) = [0]
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = (int_64)-1
	*(($3 + [1336])) = [0]
	*(($3 + [1340])) = [0]
	*(($3 + [1344])) = [0]
	*(($3 + [1352])) = $0
	*(($3 + [1360])) = $0
	*(($3 + [1368])) = $0
	*(($3 + [1376])) = (int_64)-1
	*(($3 + [1384])) = [0]
	*(($3 + [1388])) = [0]
	*(($3 + [1392])) = [0]
	*($3 + [1400]) = $0
	*(($4 = (($3 + [40]) + [8]))) = *($5)
	*($3 + [40]) = *($3 + [1424])
	$0 = *($3 + [1440])
	$1 = *($3 + [1448])
	$2 = CALL $24(($3 + [24]), ($3 + [1408]))
	*((($3 + [8]) + [8])) = *($4)
	*($3 + [8]) = *($3 + [40])
	CALL $222(($3 + [72]), $1, $0, ($3 + [8]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$9
	CALL $230(($3 + [72]))
	if ( ((*($3 + [1408]) & [1]) == 0) ){ goto $label$10 }
	CALL $12(*(($3 + [1416])))
	
.LABEL $label$10
	$global$0 = ($3 + [1504])
}

void .FUNC $255 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1408])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1376]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1376]), $2, [8])
	*($3 + [1368]) = (int_64)0
	*($3 + [1360]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [1360]), $5, [8])
	*($3 + [24]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	CALL memcpy(($3 + [24]), $5, [8])
	*(($5 = (($3 + [1360]) + [8]))) = *($3 + [24])
	*((($3 + [24]) + [24])) = $4
	*(($3 + [64])) = $0
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*($3 + [40]) = $2
	*(($3 + [44])) = ($2 + [24])
	*($3 + [32]) = $1
	*($3 + [24]) = $0
	*($3 + [56]) = $0
	*(($3 + [160])) = $0
	*(($3 + [152])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*($3 + [232]) = $0
	*(($3 + [278])) = [0]
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [336])) = $0
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [384])) = $0
	*(($3 + [392])) = $0
	*($3 + [328]) = $0
	*($3 + [376]) = $0
	*(($3 + [400])) = (int_64)-1
	*(($3 + [408])) = (int_64)0
	*(($3 + [416])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = $0
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [470])) = [0]
	*(($3 + [468])) = [0]
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = [0]
	*(($3 + [508])) = [0]
	*(($3 + [512])) = [0]
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = (int_64)-1
	*(($3 + [552])) = [0]
	*(($3 + [556])) = [0]
	*(($3 + [560])) = [0]
	*($3 + [568]) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = (int_64)-1
	*(($3 + [600])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [616])) = [0]
	*(($3 + [612])) = [0]
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = $0
	*(($3 + [648])) = (int_64)-1
	*(($3 + [656])) = [0]
	*(($3 + [660])) = [0]
	*(($3 + [664])) = [0]
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = (int_64)-1
	*(($3 + [696])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [720])) = $0
	*(($3 + [728])) = $0
	*(($3 + [736])) = (int_64)-1
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [760])) = $0
	*(($3 + [768])) = $0
	*(($3 + [776])) = (int_64)-1
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*($3 + [800]) = $0
	*(($3 + [808])) = [1]
	*(($3 + [816])) = (int_64)8238557860461690880
	*(($3 + [824])) = $0
	*(($3 + [832])) = $0
	*(($3 + [840])) = (int_64)-1
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = [0]
	*(($3 + [860])) = [0]
	*(($3 + [864])) = $0
	*(($3 + [872])) = $0
	*(($3 + [880])) = (int_64)-1
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = (int_64)-1
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = [0]
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = (int_64)-1
	*(($3 + [976])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = (int_64)-1
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = (int_64)-1
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*($3 + [1080]) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = (int_64)-1
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*(($3 + [1120])) = [0]
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = (int_64)-1
	*(($3 + [1152])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = (int_64)-1
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = (int_64)-1
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = (int_64)-1
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = [0]
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = (int_64)-1
	*(($3 + [1336])) = [0]
	*(($3 + [1340])) = [0]
	*(($3 + [1344])) = [0]
	*($3 + [1352]) = $0
	$0 = *($3 + [1376])
	*(($2 = (($3 + [8]) + [8]))) = *($5)
	*($3 + [8]) = *($3 + [1360])
	*((($3 + [1384]) + [8])) = *($2)
	*($3 + [1400]) = $0
	*($3 + [1384]) = *($3 + [8])
	if ( CALL has_auth($0) ){ goto $label$8 }
	if ( CALL has_auth(*($3 + [24])) ){ goto $label$8 }
	CALL eosio_assert([0], [10242])
	
.LABEL $label$8
	CALL $147(($3 + [56]), ($3 + [1400]), ($3 + [1384]))
	CALL $230(($3 + [24]))
	$global$0 = ($3 + [1408])
}

void .FUNC $254 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1440])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1376]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1376]), $2, [8])
	*($3 + [1368]) = (int_64)0
	*($3 + [1360]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [1360]), $5, [8])
	*($3 + [24]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$7
	CALL memcpy(($3 + [24]), $5, [8])
	*(($5 = (($3 + [1360]) + [8]))) = *($3 + [24])
	*((($3 + [24]) + [24])) = $4
	*(($3 + [64])) = $0
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*($3 + [40]) = $2
	*(($3 + [44])) = ($2 + [24])
	*($3 + [32]) = $1
	*($3 + [24]) = $0
	*($3 + [56]) = $0
	*(($3 + [160])) = $0
	*(($3 + [152])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*($3 + [232]) = $0
	*(($3 + [278])) = [0]
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [336])) = $0
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [384])) = $0
	*(($3 + [392])) = $0
	*($3 + [328]) = $0
	*($3 + [376]) = $0
	*(($3 + [400])) = (int_64)-1
	*(($3 + [408])) = (int_64)0
	*(($3 + [416])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = $0
	*(($3 + [440])) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [470])) = [0]
	*(($3 + [468])) = [0]
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = [0]
	*(($3 + [508])) = [0]
	*(($3 + [512])) = [0]
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = (int_64)-1
	*(($3 + [552])) = [0]
	*(($3 + [556])) = [0]
	*(($3 + [560])) = [0]
	*($3 + [568]) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = (int_64)-1
	*(($3 + [600])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [616])) = [0]
	*(($3 + [612])) = [0]
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = $0
	*(($3 + [648])) = (int_64)-1
	*(($3 + [656])) = [0]
	*(($3 + [660])) = [0]
	*(($3 + [664])) = [0]
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = (int_64)-1
	*(($3 + [696])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [720])) = $0
	*(($3 + [728])) = $0
	*(($3 + [736])) = (int_64)-1
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [760])) = $0
	*(($3 + [768])) = $0
	*(($3 + [776])) = (int_64)-1
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*($3 + [800]) = $0
	*(($3 + [808])) = [1]
	*(($3 + [816])) = (int_64)8238557860461690880
	*(($3 + [824])) = $0
	*(($3 + [832])) = $0
	*(($3 + [840])) = (int_64)-1
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = [0]
	*(($3 + [860])) = [0]
	*(($3 + [864])) = $0
	*(($3 + [872])) = $0
	*(($3 + [880])) = (int_64)-1
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = (int_64)-1
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = [0]
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = (int_64)-1
	*(($3 + [976])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = (int_64)-1
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = (int_64)-1
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*($3 + [1080]) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = (int_64)-1
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*(($3 + [1120])) = [0]
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = (int_64)-1
	*(($3 + [1152])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = (int_64)-1
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = (int_64)-1
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = (int_64)-1
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = [0]
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = (int_64)-1
	*(($3 + [1336])) = [0]
	*(($3 + [1340])) = [0]
	*(($3 + [1344])) = [0]
	*($3 + [1352]) = $0
	$1 = *($3 + [1376])
	*(($2 = (($3 + [8]) + [8]))) = *($5)
	*($3 + [8]) = *($3 + [1360])
	*(($4 = (($3 + [1384]) + [8]))) = *($2)
	*($3 + [1384]) = *($3 + [8])
	CALL require_auth($0)
	*(($2 = (($3 + [1400]) + [8]))) = *($4)
	*($3 + [1400]) = *($3 + [1384])
	*((($3 + [1416]) + [8])) = *($2)
	*($3 + [1432]) = $1
	*($3 + [1416]) = *($3 + [1400])
	CALL $226(($3 + [56]), ($3 + [1432]), ($3 + [1416]))
	CALL $230(($3 + [24]))
	$global$0 = ($3 + [1440])
}

void .FUNC $257 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1440])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1396]) = $2
	*($3 + [1392]) = $2
	$5 = ($2 + $4)
	*($3 + [1400]) = $5
	*($3 + [1384]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($3 + [1400]))
	$2 = *($3 + [1396])
	
.LABEL $label$5
	CALL memcpy(($3 + [1384]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [1396]) = $2
	*($3 + [1376]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1396])
	
.LABEL $label$6
	CALL memcpy(($3 + [1376]), $2, [8])
	*($3 + [1396]) = ($2 + [8])
	*($3 + [1368]) = [0]
	*($3 + [1360]) = (int_64)0
	CALL $165(($3 + [1392]), ($3 + [1360]))
	*(($2 = (($3 + [8]) + [8]))) = *((($3 + [1392]) + [8]))
	*($3 + [8]) = *($3 + [1392])
	*(($4 = (($3 + [1408]) + [8]))) = *($2)
	*($3 + [1408]) = *($3 + [8])
	$2 = *($4)
	*((($3 + [1424]) + [8])) = $2
	*(($3 + [48])) = $2
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	$1 = *($3 + [1408])
	*($3 + [40]) = $1
	*($3 + [1424]) = $1
	*(($3 + [64])) = $0
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [104])) = $0
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [56]) = $0
	*(($3 + [192])) = $0
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [278])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = $0
	*($3 + [232]) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [296])) = $0
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [336])) = $0
	*(($3 + [344])) = $0
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*(($3 + [384])) = $0
	*(($3 + [392])) = $0
	*(($3 + [400])) = (int_64)-1
	*(($3 + [408])) = (int_64)0
	*(($3 + [416])) = [0]
	*(($3 + [424])) = $0
	*(($3 + [432])) = $0
	*($3 + [328]) = $0
	*($3 + [376]) = $0
	*(($3 + [448])) = (int_64)-1
	*(($3 + [440])) = $0
	*(($3 + [456])) = (int_64)0
	*(($3 + [464])) = [0]
	*(($3 + [470])) = [0]
	*(($3 + [468])) = [0]
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = $0
	*(($3 + [496])) = (int_64)-1
	*(($3 + [504])) = [0]
	*(($3 + [508])) = [0]
	*(($3 + [512])) = [0]
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = $0
	*(($3 + [544])) = (int_64)-1
	*(($3 + [552])) = [0]
	*(($3 + [556])) = [0]
	*(($3 + [560])) = [0]
	*($3 + [568]) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = $0
	*(($3 + [592])) = (int_64)-1
	*(($3 + [600])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [616])) = [0]
	*(($3 + [612])) = [0]
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = $0
	*(($3 + [648])) = (int_64)-1
	*(($3 + [656])) = [0]
	*(($3 + [660])) = [0]
	*(($3 + [664])) = [0]
	*(($3 + [672])) = $0
	*(($3 + [680])) = $0
	*(($3 + [688])) = (int_64)-1
	*(($3 + [696])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [712])) = [0]
	*(($3 + [708])) = [0]
	*(($3 + [720])) = $0
	*(($3 + [728])) = $0
	*(($3 + [736])) = (int_64)-1
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = [0]
	*(($3 + [756])) = [0]
	*(($3 + [760])) = $0
	*(($3 + [768])) = $0
	*(($3 + [776])) = (int_64)-1
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*(($3 + [792])) = [0]
	*(($3 + [796])) = [0]
	*($3 + [800]) = $0
	*(($3 + [808])) = [1]
	*(($3 + [816])) = (int_64)8238557860461690880
	*(($3 + [824])) = $0
	*(($3 + [832])) = $0
	*(($3 + [840])) = (int_64)-1
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = [0]
	*(($3 + [860])) = [0]
	*(($3 + [864])) = $0
	*(($3 + [872])) = $0
	*(($3 + [880])) = (int_64)-1
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = [0]
	*(($3 + [900])) = [0]
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = $0
	*(($3 + [928])) = (int_64)-1
	*(($3 + [936])) = [0]
	*(($3 + [940])) = [0]
	*(($3 + [944])) = [0]
	*(($3 + [952])) = $0
	*(($3 + [960])) = $0
	*(($3 + [968])) = (int_64)-1
	*(($3 + [976])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [992])) = [0]
	*(($3 + [988])) = [0]
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = $0
	*(($3 + [1016])) = (int_64)-1
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = [0]
	*(($3 + [1036])) = [0]
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = $0
	*(($3 + [1056])) = (int_64)-1
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*(($3 + [1072])) = [0]
	*(($3 + [1076])) = [0]
	*($3 + [1080]) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = $0
	*(($3 + [1104])) = (int_64)-1
	*(($3 + [1112])) = [0]
	*(($3 + [1116])) = [0]
	*(($3 + [1120])) = [0]
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = $0
	*(($3 + [1144])) = (int_64)-1
	*(($3 + [1152])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1168])) = [0]
	*(($3 + [1164])) = [0]
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = $0
	*(($3 + [1192])) = (int_64)-1
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = [0]
	*(($3 + [1212])) = [0]
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = $0
	*(($3 + [1232])) = (int_64)-1
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = [0]
	*(($3 + [1252])) = [0]
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = (int_64)-1
	*(($3 + [1288])) = [0]
	*(($3 + [1292])) = [0]
	*(($3 + [1296])) = [0]
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = (int_64)-1
	*(($3 + [1336])) = [0]
	*(($3 + [1340])) = [0]
	*(($3 + [1344])) = [0]
	*($3 + [1352]) = $0
	CALL $56(($3 + [56]), ($3 + [1384]))
	$2 = ($3 + [800])
	CALL $94($2, ($3 + [1384]), ($3 + [1376]), ($3 + [1360]))
	CALL $95($2, ($3 + [1384]))
	CALL $230(($3 + [24]))
	if ( ((*($3 + [1360]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($3 + [1368])))
	
.LABEL $label$7
	$global$0 = ($3 + [1440])
}

void .FUNC $256 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1520])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1476]) = $2
	*($3 + [1472]) = $2
	*($3 + [1480]) = ($2 + $4)
	*($3 + [1464]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1476])
	
.LABEL $label$5
	CALL memcpy(($3 + [1464]), $2, [8])
	*($3 + [1476]) = ($2 + [8])
	*($3 + [1456]) = [0]
	*($3 + [1448]) = (int_64)0
	CALL $165(($3 + [1472]), ($3 + [1448]))
	*($3 + [1440]) = [0]
	*($3 + [1432]) = (int_64)0
	CALL $165(($3 + [1472]), ($3 + [1432]))
	*($3 + [1424]) = (int_64)0
	*($3 + [1416]) = (int_64)0
	$2 = *($3 + [1476])
	$4 = (($3 + [1472]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1476])
	
.LABEL $label$6
	CALL memcpy(($3 + [1416]), $2, [8])
	$2 = (*($3 + [1476]) + [8])
	*($3 + [1476]) = $2
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1476])
	
.LABEL $label$7
	CALL memcpy(($3 + [16]), $2, [8])
	*((($3 + [1416]) + [8])) = *($3 + [16])
	*($3 + [1476]) = (*($3 + [1476]) + [8])
	*($3 + [1408]) = [0]
	*($3 + [1400]) = (int_64)0
	CALL $165(($3 + [1472]), ($3 + [1400]))
	*($3 + [1392]) = [0]
	*($3 + [1384]) = (int_64)0
	CALL $165(($3 + [1472]), ($3 + [1384]))
	*($3 + [1376]) = [0]
	*($3 + [1368]) = (int_64)0
	CALL $165(($3 + [1472]), ($3 + [1368]))
	*($3 + [1360]) = (int_64)0
	$2 = *($3 + [1476])
	$4 = (($3 + [1472]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1476])
	
.LABEL $label$8
	CALL memcpy(($3 + [1360]), $2, [8])
	$2 = (*($3 + [1476]) + [8])
	*($3 + [1476]) = $2
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$9 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1476])
	
.LABEL $label$9
	CALL memcpy(($3 + [1359]), $2, [1])
	*($3 + [1476]) = (*($3 + [1476]) + [1])
	*(($2 = ($3 + [8]))) = *((($3 + [1472]) + [8]))
	*($3) = *($3 + [1472])
	*(($4 = (($3 + [1488]) + [8]))) = *($2)
	*($3 + [1488]) = *($3)
	$2 = *($4)
	*((($3 + [1504]) + [8])) = $2
	*(($3 + [40])) = $2
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$1 = *($3 + [1488])
	*($3 + [32]) = $1
	*($3 + [1504]) = $1
	*(($3 + [56])) = $0
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*($3 + [48]) = $0
	*(($3 + [184])) = $0
	*(($3 + [180])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [220])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [270])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*($3 + [224]) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [288])) = $0
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*($3 + [320]) = $0
	*($3 + [368]) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [432])) = $0
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [462])) = [0]
	*(($3 + [460])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = [0]
	*(($3 + [500])) = [0]
	*(($3 + [504])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = (int_64)-1
	*(($3 + [544])) = [0]
	*(($3 + [548])) = [0]
	*(($3 + [552])) = [0]
	*($3 + [560]) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = (int_64)-1
	*(($3 + [648])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = (int_64)-1
	*(($3 + [688])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [712])) = $0
	*(($3 + [720])) = $0
	*(($3 + [728])) = (int_64)-1
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = $0
	*(($3 + [760])) = $0
	*(($3 + [768])) = (int_64)-1
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*($3 + [792]) = $0
	*(($3 + [800])) = [1]
	*(($3 + [808])) = (int_64)8238557860461690880
	*(($3 + [816])) = $0
	*(($3 + [824])) = $0
	*(($3 + [832])) = (int_64)-1
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = $0
	*(($3 + [864])) = $0
	*(($3 + [872])) = (int_64)-1
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = (int_64)-1
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = [0]
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = (int_64)-1
	*(($3 + [968])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [992])) = $0
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = (int_64)-1
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = (int_64)-1
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*($3 + [1072]) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = (int_64)-1
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*(($3 + [1112])) = [0]
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = (int_64)-1
	*(($3 + [1144])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = (int_64)-1
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = (int_64)-1
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = (int_64)-1
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = [0]
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = (int_64)-1
	*(($3 + [1328])) = [0]
	*(($3 + [1332])) = [0]
	*(($3 + [1336])) = [0]
	*($3 + [1344]) = $0
	CALL $88(($3 + [16]), ($3 + [1464]), ($3 + [1448]), ($3 + [1432]), ($3 + [1416]), ($3 + [1400]), ($3 + [1384]), ($3 + [1368]), ($3 + [1360]), *($3 + [1359]))
	CALL $230(($3 + [16]))
	if ( (*($3 + [1368]) & [1]) ){ goto $label$18 }
	if ( (*($3 + [1384]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $12(*((($3 + [1368]) + [8])))
	if ( ((*($3 + [1384]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $12(*(($3 + [1392])))
	$2 = [1]
	if ( ((*($3 + [1400]) & [1]) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$2 = [1]
	if ( (*($3 + [1400]) & [1]) ){ goto $label$14 }
	
.LABEL $label$15
	if ( (*($3 + [1432]) & $2) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $12(*(($3 + [1408])))
	if ( ((*($3 + [1432]) & $2) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $12(*(($3 + [1440])))
	if ( ((*($3 + [1448]) & [1]) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	if ( (*($3 + [1448]) & [1]) ){ goto $label$10 }
	
.LABEL $label$11
	$global$0 = ($3 + [1520])
	return 
	
.LABEL $label$10
	CALL $12(*(($3 + [1456])))
	$global$0 = ($3 + [1520])
}

void .FUNC $181 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [108]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [32])
	*($5 + [40]) = *($1 + [24])
	*($5 + [48]) = *($1 + [100])
	*($5 + [56]) = *($1 + [104])
	*($5 + [64]) = *($1 + [96])
	*($1 + [80]) = (*($1 + [80]) + [1])
	$2 = *($1)
	*($5 + [24]) = $2
	$6 = *($3)
	$7 = ($1 + [72])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)*(($1 + [76]))) ){ goto $label$4 }
	*($3) = *($6)
	*($7) = ($3 + [8])
	$2 = *($5 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $297(($1 + [68]), $6)
	
.LABEL $label$3
	$6 = ($1 + [80])
	$7 = ($1 + [32])
	if ( ((int_64)$2 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$5
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [100]) = $7
	*($5 + [120]) = $6
	*($5 + [88]) = $1
	$8 = ($1 + [8])
	*($5 + [92]) = $8
	$9 = ($1 + [24])
	*($5 + [96]) = $9
	$10 = ($1 + [40])
	*($5 + [104]) = $10
	$11 = ($1 + [52])
	*($5 + [108]) = $11
	$12 = ($1 + [64])
	*($5 + [112]) = $12
	$13 = ($1 + [68])
	*($5 + [116]) = $13
	$14 = ($1 + [84])
	*($5 + [124]) = $14
	$15 = ($1 + [96])
	*($5 + [128]) = $15
	$16 = ($1 + [100])
	*($5 + [132]) = $16
	$17 = ($1 + [104])
	*($5 + [136]) = $17
	CALL $386(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $4($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $8
	*($5 + [96]) = $9
	*($5 + [100]) = $7
	*($5 + [104]) = $10
	*($5 + [108]) = $11
	*($5 + [112]) = $12
	*($5 + [116]) = $13
	*($5 + [120]) = $6
	*($5 + [124]) = $14
	*($5 + [128]) = $15
	*($5 + [132]) = $16
	*($5 + [136]) = $17
	*($5 + [88]) = $1
	CALL $387(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [112]), *($5 + [72]), $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $5($4)
	
.LABEL $label$8
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $400(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

void .FUNC $406 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	$0 = *(*($0) + [4])
	$2 = *($0 + [72])
	$3 = *(($0 + [80]))
	if ( ((int_64)*(($0 + [64])) == (int_64)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$1
	$2 = ((int_64)*($0 + [56]) + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$3 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$2 }
	CALL eosio_assert([0], [14718])
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [14699])
	
.LABEL $label$2
	if ( ((int_64)$3 == (int_64)*(($1 + [48]))) ){ goto $label$4 }
	CALL eosio_assert([0], [14656])
	
.LABEL $label$4
	$2 = ((int_64)*($1 + [40]) + (int_64)$2)
	*($1 + [40]) = $2
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$7 }
	if ( ((int_64)$2 >= (int_64)4611686018427387904) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [14699])
	if ( ((int_64)*(($1 + [40])) < (int_64)4611686018427387904) ){ goto $label$5 }
	
.LABEL $label$6
	CALL eosio_assert([0], [14718])
	*($1 + [56]) = (int_64)0
	*($1 + [72]) = (int_64)0
	return 
	
.LABEL $label$5
	*($1 + [56]) = (int_64)0
	*($1 + [72]) = (int_64)0
}

void .FUNC $180 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [128]) = (int_64)0
	CALL $65($0, $1, ($3 + [128]), [11296])
	$4 = ($0 + [8])
	$5 = *($2)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($9 + [108]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [16])), (int_64)-5915097263692054528, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $170($4, $8)
	if ( ((int_32)*($9 + [108]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$1
	CALL $37(($3 + [112]), *($2))
	$8 = CALL $34(($3 + [112]), [0], [13940])
	$7 = ($8 + [8])
	*((($3 + [128]) + [8])) = *($7)
	*($3 + [128]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$9 }
	$8 = [1]
	if ( (*($3 + [128]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL eosio_assert([0], ( *($3 + [136]) ? (($3 + [128]) | [1]) : (*($3 + [128]) & [1]) ))
	$8 = [1]
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*($3 + [136]))
	if ( (*($3 + [112]) & $8) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ((*($3 + [112]) & $8) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $12(*($3 + [120]))
	
.LABEL $label$5
	$6 = *(($7 + [56]))
	$7 = CALL $178($3, $9)
	$8 = *($7 + [52])
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$11 }
	$5 = *($1)
	
.LOOP $label$12:
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$11 }
	$8 = ($8 + [8])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$10 }
	CALL eosio_assert([0], [13969])
	
.LABEL $label$10
	$6 = *(($7 + [72]))
	$8 = *($7 + [68])
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$14 }
	$5 = *($1)
	
.LOOP $label$15:
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$14 }
	$8 = ($8 + [8])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$13 }
	CALL eosio_assert([0], [13999])
	
.LABEL $label$13
	$8 = *($7 + [84])
	if ( ($8 == 0) ){ goto $label$16 }
	*(($7 + [88])) = $8
	CALL $12($8)
	
.LABEL $label$16
	$8 = *(($7 + [68]))
	if ( ($8 == 0) ){ goto $label$17 }
	*(($7 + [72])) = $8
	CALL $12($8)
	
.LABEL $label$17
	$8 = *(($7 + [52]))
	if ( ($8 == 0) ){ goto $label$18 }
	*(($7 + [56])) = $8
	CALL $12($8)
	
.LABEL $label$18
	if ( (*($7 + [40]) & [1]) ){ goto $label$23 }
	if ( (*($7 + [8]) & [1]) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $12(*(($7 + [48])))
	if ( ((*($7 + [8]) & [1]) == 0) ){ goto $label$21 }
	
.LABEL $label$22
	CALL $12(*(($7 + [16])))
	$5 = *($0)
	*($3 + [128]) = $1
	if ( $9 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	$5 = *($0)
	*($3 + [128]) = $1
	if ( $9 ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [10691])
	
.LABEL $label$19
	CALL $181($4, $9, $5, ($3 + [128]))
	$global$0 = ($3 + [144])
}

void .FUNC $138 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [128])
	$global$0 = $3
	if ( (CALL $129($0, $1) == 0) ){ goto $label$1 }
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$9:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$5) ){ goto $label$8 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$7 }
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	$5 = *($1)
	if ( ((int_64)$5 <= (int_64)7130081133533855743) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $57($4, $8)
	if ( ((int_32)*($9 + [176]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$6
	$5 = *($1)
	if ( ((int_64)$5 > (int_64)7130081133533855743) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)-205908660975170112) ){ goto $label$2 }
	if ( ((int_64)$5 == (int_64)5307181297324903472) ){ goto $label$2 }
	if ( ((int_64)$5 == (int_64)5307181297324903488) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_64)$5 == (int_64)7130081133533855744) ){ goto $label$2 }
	if ( ((int_64)$5 == (int_64)7464601112396324000) ){ goto $label$2 }
	if ( ((int_64)$5 == (int_64)7464601119210243136) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_64)$5 == (int_64)*($0)) ){ goto $label$2 }
	$10 = ($9 + [96])
	if ( ((int_64)*(($9 + [104])) == (int_64)*($2 + [8])) ){ goto $label$10 }
	CALL eosio_assert([0], [14395])
	$5 = *($1)
	
.LABEL $label$10
	$11 = *($2)
	$12 = *($10)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$14 }
	$7 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$16:
	*((($3 + [112]) + ($8 = $7))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$15 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$16 }
	
.LABEL $label$15
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$13 }
	*($3 + [32]) = ($7 << [1])
	$6 = (($3 + [32]) | [1])
	goto $label$12 
	
.LABEL $label$14
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	*($3 + [32]) = [0]
	$8 = (($3 + [32]) | [1])
	goto $label$11 
	
.LABEL $label$13
	$1 = (($7 + [16]) & [-16])
	$6 = CALL $10($1)
	*($3 + [32]) = ($1 | [1])
	*($3 + [40]) = $6
	*($3 + [36]) = $7
	
.LABEL $label$12
	$1 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$17:
	*(($6 + $8)) = *((($3 + [112]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$17 }
	$8 = ($6 + $7)
	
.LABEL $label$11
	*($8) = [0]
	$8 = CALL $34(($3 + [32]), [0], [11706])
	$7 = ($8 + [8])
	*((($3 + [48]) + [8])) = *($7)
	*($3 + [48]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = CALL $31(($3 + [48]), [13388])
	$7 = ($8 + [8])
	*((($3 + [64]) + [8])) = *($7)
	*($3 + [64]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $139(($3 + [16]), $10)
	$8 = *($3 + [16])
	$7 = ($8 & [1])
	$8 = CALL $32(($3 + [64]), ( *($3 + [24]) ? (($3 + [16]) | [1]) : $7 ), ( *($3 + [20]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($3 + [80]) + [8])) = *($7)
	*($3 + [80]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	$8 = CALL $31(($3 + [80]), [13466])
	$7 = ($8 + [8])
	*((($3 + [96]) + [8])) = *($7)
	*($3 + [96]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	CALL $139($3, $2)
	$8 = *($3)
	$7 = ($8 & [1])
	$8 = CALL $32(($3 + [96]), ( *($3 + [8]) ? ($3 | [1]) : $7 ), ( *($3 + [4]) ? uint_32($8 >> [1]) : $7 ))
	$7 = ($8 + [8])
	*((($3 + [112]) + [8])) = *($7)
	*($3 + [112]) = *($8)
	*($8) = (int_64)0
	*($7) = [0]
	if ( ((int_64)$12 < (int_64)$11) ){ goto $label$33 }
	if ( (*($3 + [112]) & [1]) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$33
	CALL eosio_assert([0], ( *($3 + [120]) ? (($3 + [112]) | [1]) : (*($3 + [112]) & [1]) ))
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$31 }
	
.LABEL $label$32
	CALL $12(*($3 + [120]))
	$8 = [1]
	if ( ((*($3) & [1]) == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$8 = [1]
	if ( (*($3) & [1]) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($3 + [96]) & $8) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	CALL $12(*(($3 + [8])))
	if ( ((*($3 + [96]) & $8) == 0) ){ goto $label$27 }
	
.LABEL $label$28
	CALL $12(*($3 + [104]))
	$8 = [1]
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$8 = [1]
	if ( (*($3 + [80]) & [1]) ){ goto $label$25 }
	
.LABEL $label$26
	if ( (*($3 + [16]) & $8) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$25
	CALL $12(*($3 + [88]))
	if ( ((*($3 + [16]) & $8) == 0) ){ goto $label$23 }
	
.LABEL $label$24
	CALL $12(*(($3 + [24])))
	$8 = [1]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$8 = [1]
	if ( (*($3 + [64]) & [1]) ){ goto $label$21 }
	
.LABEL $label$22
	if ( (*($3 + [48]) & $8) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL $12(*($3 + [72]))
	if ( ((*($3 + [48]) & $8) == 0) ){ goto $label$19 }
	
.LABEL $label$20
	CALL $12(*($3 + [56]))
	if ( (*($3 + [32]) & [1]) ){ goto $label$18 }
	goto $label$2 
	
.LABEL $label$19
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$18
	CALL $12(*($3 + [40]))
	
.LABEL $label$2
	$5 = *($0)
	*($3 + [112]) = $2
	if ( $9 ){ goto $label$34 }
	CALL eosio_assert([0], [10691])
	
.LABEL $label$34
	CALL $140($4, $9, $5, ($3 + [112]))
	
.LABEL $label$1
	$global$0 = ($3 + [128])
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [8])
	$5 = (CASTING uint_32)(uint_64 $4)
	$6 = ((int_64)$4 & (int_64)255)
	$7 = (int_64)($6 == 0)
	if ( $7 ){ goto $label$2 }
	$8 = ((int_64)$6 + (int_64)1)
	$9 = (int_64)1
	
.LOOP $label$3:
	$9 = ((int_64)$9 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)1
	
.LABEL $label$1
	$5 = ($5 & [255])
	$10 = ($2 - (($5 + [16]) & [496]))
	$2 = $10
	$global$0 = $2
	*(($11 = ($10 + $5))) = [0]
	$12 = *($1)
	if ( $7 ){ goto $label$4 }
	$8 = ((int_64)( (int_64)-1 ? (int_64)1 : ((int_64)$12 < (int_64)0) ) * (int_64)((int_64)$12 % (int_64)$9))
	$6 = ((int_64)$6 + (int_64)1)
	$1 = ($11 + [-1])
	
.LOOP $label$5:
	$13 = ((int_64)$8 / (int_64)10)
	*($1) = ((CASTING uint_32)(uint_64 (int_64))($8 - ((int_64)$13 * (int_64)10))) + [48])
	$1 = ($1 + [-1])
	$8 = $13
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = ($2 - (($5 + [47]) & [496]))
	$global$0 = $11
	$14 = ( [14515] ? [14517] : *($10) )
	$9 = ((int_64)$12 / (int_64)$9)
	$15 = ($5 + [32])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( (int_64)($8) == 0) ){ goto $label$9 }
	$5 = [0]
	
.LOOP $label$11:
	*((($3 + [41]) + ($1 = $5))) = $8
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	
.LABEL $label$10
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($5 << [1])
	$2 = (($3 + [24]) | [1])
	goto $label$7 
	
.LABEL $label$9
	*(($3 + [32])) = [0]
	*($3 + [24]) = (int_64)0
	*($3 + [24]) = [0]
	$1 = (($3 + [24]) | [1])
	$5 = $1
	goto $label$6 
	
.LABEL $label$8
	$7 = (($5 + [16]) & [-16])
	$2 = CALL $10($7)
	*($3 + [24]) = ($7 | [1])
	*($3 + [32]) = $2
	*($3 + [28]) = $5
	
.LABEL $label$7
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$12:
	*(($2 + $1)) = *((($3 + [41]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$12 }
	$5 = ($2 + $5)
	$1 = (($3 + [24]) | [1])
	
.LABEL $label$6
	*($5) = [0]
	*(($3 + [16])) = ( *($3 + [32]) ? $1 : (*($3 + [24]) & [1]) )
	*($3 + [12]) = $10
	*($3 + [8]) = $14
	*($3) = $9
	CALL $22($11, $15, [14503], $3)
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$13 }
	CALL $12(*(($3 + [32])))
	
.LABEL $label$13
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $2($11)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($0) = ($1 << [1])
	$5 = ($0 + [1])
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$2 = (($1 + [16]) & [-16])
	$5 = CALL $10($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $1
	
.LABEL $label$16
	CALL memcpy($5, $11, $1)
	
.LABEL $label$15
	*(($5 + $1)) = [0]
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$14
	CALL $23($0)
}

void .FUNC $428 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	$5 = (*($4) + [8])
	*(($4 = ($3 + [4]))) = $5
	$2 = ($2 + [8])
	if ( ((int_32)(*(($3 + [8])) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$5 = *($4)
	
.LABEL $label$2
	CALL memcpy($5, $2, [8])
	*($4) = (*($4) + [8])
	$5 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $5, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
}

int_32 .FUNC $369 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

void .FUNC $269 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [1344])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1336]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$5
	CALL memcpy(($3 + [1336]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = [0]
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*(($3 + [136])) = $0
	*(($3 + [128])) = $0
	*(($3 + [144])) = (int_64)-1
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [164])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = $0
	*(($3 + [232])) = (int_64)-1
	*(($3 + [240])) = (int_64)0
	*($3 + [208]) = $0
	*(($3 + [254])) = [0]
	*(($3 + [248])) = [0]
	*(($3 + [252])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*(($3 + [288])) = (int_64)0
	*(($3 + [296])) = [0]
	*(($3 + [312])) = $0
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = (int_64)0
	*(($3 + [344])) = [0]
	*(($3 + [360])) = $0
	*(($3 + [368])) = $0
	*($3 + [304]) = $0
	*($3 + [352]) = $0
	*(($3 + [376])) = (int_64)-1
	*(($3 + [384])) = (int_64)0
	*(($3 + [392])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = (int_64)-1
	*(($3 + [432])) = (int_64)0
	*(($3 + [440])) = [0]
	*(($3 + [446])) = [0]
	*(($3 + [444])) = [0]
	*(($3 + [448])) = $0
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = (int_64)-1
	*(($3 + [480])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = [0]
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = (int_64)-1
	*(($3 + [528])) = [0]
	*(($3 + [532])) = [0]
	*(($3 + [536])) = [0]
	*($3 + [544]) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = (int_64)-1
	*(($3 + [576])) = [0]
	*(($3 + [580])) = [0]
	*(($3 + [584])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [600])) = $0
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = (int_64)-1
	*(($3 + [632])) = [0]
	*(($3 + [636])) = [0]
	*(($3 + [640])) = [0]
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [696])) = $0
	*(($3 + [704])) = $0
	*(($3 + [712])) = (int_64)-1
	*(($3 + [720])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*($3 + [776]) = $0
	*(($3 + [784])) = [1]
	*(($3 + [792])) = (int_64)8238557860461690880
	*(($3 + [800])) = $0
	*(($3 + [808])) = $0
	*(($3 + [816])) = (int_64)-1
	*(($3 + [824])) = [0]
	*(($3 + [828])) = [0]
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = (int_64)-1
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = [0]
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [976])) = $0
	*(($3 + [984])) = $0
	*(($3 + [992])) = (int_64)-1
	*(($3 + [1000])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*($3 + [1056]) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = (int_64)-1
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*(($3 + [1096])) = [0]
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = (int_64)-1
	*(($3 + [1176])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = (int_64)-1
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = [0]
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = (int_64)-1
	*(($3 + [1312])) = [0]
	*(($3 + [1316])) = [0]
	*(($3 + [1320])) = [0]
	*($3 + [1328]) = $0
	CALL $194($3, ($3 + [1336]))
	CALL $230($3)
	$global$0 = ($3 + [1344])
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [48])
	$global$0 = $4
	$5 = ($0 + [8])
	$6 = *($1)
	$8 = *(($0 + [36]))
	$7 = *(($0 + [32]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$9:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$8 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	if ( ((int_32)*($10 + [88]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	$11 = (int_64)0
	$6 = *($1)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$10 = [0]
	$9 = CALL db_find_i64(*($5), *(($0 + [16])), (int_64)-5915276602094125056, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$6 }
	$10 = CALL $91($5, $9)
	if ( ((int_32)*($10 + [88]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$6
	$11 = (int_64)0
	$6 = *($1)
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$5
	$8 = [0]
	$7 = *([0] + [12468])
	
.LOOP $label$11:
	*((($4 + [32]) + ($9 = $8))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$9 == (int_32)[12]) )))))
	$8 = ($9 + [1])
	if ( ((uint_32)$9 > (uint_32)[11]) ){ goto $label$10 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)$11) ){ goto $label$11 }
	
.LABEL $label$10
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$3 }
	*($4) = ($8 << [1])
	$7 = ($4 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($4 + [8])) = [0]
	*($4) = $11
	*($4) = [0]
	$9 = ($4 | [1])
	goto $label$1 
	
.LABEL $label$3
	$5 = (($8 + [16]) & [-16])
	$7 = CALL $10($5)
	*($4) = ($5 | [1])
	*($4 + [8]) = $7
	*($4 + [4]) = $8
	
.LABEL $label$2
	$5 = ($9 + [1])
	$9 = [0]
	
.LOOP $label$12:
	*(($7 + $9)) = *((($4 + [32]) + $9))
	$9 = ($9 + [1])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$12 }
	$9 = ($7 + $8)
	
.LABEL $label$1
	*($9) = [0]
	$9 = CALL $34($4, [0], [11706])
	$8 = ($9 + [8])
	*((($4 + [16]) + [8])) = *($8)
	*($4 + [16]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	$9 = CALL $31(($4 + [16]), [13306])
	$8 = ($9 + [8])
	*((($4 + [32]) + [8])) = *($8)
	*($4 + [32]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$13 }
	CALL eosio_assert([0], ( *($4 + [40]) ? (($4 + [32]) | [1]) : (*($4 + [32]) & [1]) ))
	
.LABEL $label$13
	if ( (*($4 + [32]) & [1]) ){ goto $label$18 }
	if ( (*($4 + [16]) & [1]) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $12(*($4 + [40]))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $12(*($4 + [24]))
	if ( (*($4) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((*($4) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $12(*($4 + [8]))
	
.LABEL $label$14
	$12 = ($0 + [48])
	$6 = *($1)
	$8 = *(($0 + [76]))
	$7 = *(($0 + [72]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$25 }
	
.LOOP $label$27:
	$9 = ($8 + [-24])
	$10 = *($9)
	if ( ((int_64)*($10) == (int_64)$6) ){ goto $label$26 }
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$25 }
	if ( ((int_32)*($10 + [176]) == (int_32)$12) ){ goto $label$24 }
	CALL eosio_assert([0], [11551])
	$11 = (int_64)0
	$6 = *($1)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$10 = [0]
	$9 = CALL db_find_i64(*($12), *(($0 + [56])), (int_64)-5915276602093076480, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$24 }
	$10 = CALL $57($12, $9)
	if ( ((int_32)*($10 + [176]) == (int_32)$12) ){ goto $label$24 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$24
	$11 = (int_64)0
	$6 = *($1)
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$22 }
	
.LABEL $label$23
	$8 = [0]
	$7 = *([0] + [12468])
	
.LOOP $label$29:
	*((($4 + [32]) + ($9 = $8))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$9 == (int_32)[12]) )))))
	$8 = ($9 + [1])
	if ( ((uint_32)$9 > (uint_32)[11]) ){ goto $label$28 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)$11) ){ goto $label$29 }
	
.LABEL $label$28
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$21 }
	*($4) = ($8 << [1])
	$7 = ($4 | [1])
	goto $label$20 
	
.LABEL $label$22
	*(($4 + [8])) = [0]
	*($4) = $11
	*($4) = [0]
	$9 = ($4 | [1])
	goto $label$19 
	
.LABEL $label$21
	$5 = (($8 + [16]) & [-16])
	$7 = CALL $10($5)
	*($4) = ($5 | [1])
	*($4 + [8]) = $7
	*($4 + [4]) = $8
	
.LABEL $label$20
	$5 = ($9 + [1])
	$9 = [0]
	
.LOOP $label$30:
	*(($7 + $9)) = *((($4 + [32]) + $9))
	$9 = ($9 + [1])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$30 }
	$9 = ($7 + $8)
	
.LABEL $label$19
	*($9) = [0]
	$9 = CALL $34($4, [0], [11706])
	$8 = ($9 + [8])
	*((($4 + [16]) + [8])) = *($8)
	*($4 + [16]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	$9 = CALL $31(($4 + [16]), [13347])
	$8 = ($9 + [8])
	*((($4 + [32]) + [8])) = *($8)
	*($4 + [32]) = *($9)
	*($9) = (int_64)0
	*($8) = [0]
	if ( ($10 == 0) ){ goto $label$31 }
	CALL eosio_assert([0], ( *($4 + [40]) ? (($4 + [32]) | [1]) : (*($4 + [32]) & [1]) ))
	
.LABEL $label$31
	if ( (*($4 + [32]) & [1]) ){ goto $label$36 }
	if ( (*($4 + [16]) & [1]) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL $12(*($4 + [40]))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL $12(*($4 + [24]))
	if ( (*($4) & [1]) ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	if ( ((*($4) & [1]) == 0) ){ goto $label$32 }
	
.LABEL $label$33
	CALL $12(*($4 + [8]))
	
.LABEL $label$32
	$6 = *($0)
	*($4 + [36]) = $2
	*($4 + [32]) = $1
	*($4 + [40]) = $3
	CALL $374(($4 + [16]), $12, $6, ($4 + [32]))
	$global$0 = ($4 + [48])
}

int_32 .FUNC $131 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [160]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [164])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $12($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [160]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$1
	$1 = *(($0 + [120]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [124])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $12($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [120]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$6
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [76])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	$3 = ($3 + [-24])
	
.LOOP $label$14:
	$4 = CALL $321($3)
	$3 = ($3 + [-24])
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$14 }
	$3 = *(($0 + [72]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$11
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$15 }
	$2 = ($0 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$17 }
	
.LOOP $label$18:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$19 }
	if ( ((*($3 + [28]) & [1]) == 0) ){ goto $label$20 }
	CALL $12(*(($3 + [36])))
	
.LABEL $label$20
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$21 }
	CALL $12(*(($3 + [24])))
	
.LABEL $label$21
	CALL $12($3)
	
.LABEL $label$19
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$18 }
	$3 = *(($0 + [32]))
	goto $label$16 
	
.LABEL $label$17
	$3 = $1
	
.LABEL $label$16
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$15
	return $0
}

void .FUNC $132 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = ($0 + [312])
	$3 = *(($0 + [340]))
	if ( ((int_32)$3 == (int_32)*(($0 + [336]))) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [48]) == (int_32)$2) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$3 = CALL db_find_i64(*($2), *(($0 + [320])), (int_64)3849324904583266304, (int_64)3849324904583266304)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $133($2, $3)
	if ( ((int_32)*($3 + [48]) == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($3 + [52]), ($1 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	CALL $133($2, $4)
	
.LABEL $label$5
	CALL $134($2, $3)
	
.LABEL $label$1
	CALL $135(($0 + [776]))
	$global$0 = ($1 + [16])
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $10([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [28])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [40])
	CALL $340(($3 + [32]), ($3 + [24]))
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	*($3 + [32]) = (int_64)3849324904583266304
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)3849324904583266304
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $339(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [12696])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $12($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $12($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*($1 + [52]))
}

void .FUNC $135 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = CALL db_lowerbound_i64(*($0 + [24]), *(($0 + [32])), (int_64)4148595222869180416, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = ($0 + [24])
	$4 = CALL $96($3, $2)
	
.LOOP $label$2:
	$2 = [0]
	$5 = CALL db_next_i64(*($4 + [104]), ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $96($3, $5)
	
.LABEL $label$3
	CALL $136($3, $4)
	$4 = $2
	if ( $2 ){ goto $label$2 }
	
.LABEL $label$1
	$2 = CALL db_lowerbound_i64(*($0 + [64]), *(($0 + [72])), (int_64)4148594918074220544, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + [64])
	$4 = CALL $137($3, $2)
	
.LOOP $label$5:
	$2 = [0]
	$5 = CALL db_next_i64(*($4 + [64]), ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$2 = CALL $137($3, $5)
	
.LABEL $label$6
	CALL $103($3, $4)
	$4 = $2
	if ( $2 ){ goto $label$5 }
	
.LABEL $label$4
	$global$0 = ($1 + [16])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [100])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$8 = [-24]
	$9 = ($6 + [-24])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12696])
	$8 = [-24]
	$9 = ($6 + [-24])
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$10 = $9
	goto $label$4 
	
.LABEL $label$5
	
.LOOP $label$11:
	$10 = ($9 + [24])
	CALL $378($9, $10)
	$6 = ($9 + [48])
	$9 = $10
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$11 }
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$12:
	$6 = ($6 + $8)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$13 }
	if ( ((*($9 + [72]) & [1]) == 0) ){ goto $label$22 }
	CALL $12(*(($9 + [80])))
	if ( ((*($9 + [60]) & [1]) == 0) ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$22
	if ( ((*($9 + [60]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $12(*(($9 + [68])))
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$20
	if ( ((*($9 + [48]) & [1]) == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL $12(*(($9 + [56])))
	if ( ((*($9 + [20]) & [1]) == 0) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((*($9 + [20]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $12(*(($9 + [28])))
	if ( (*($9 + [8]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	if ( ((*($9 + [8]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $12(*(($9 + [16])))
	
.LABEL $label$14
	CALL $12($9)
	
.LABEL $label$13
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$3
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [104]))
	$9 = *($1 + [108])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$24 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4148595222869180416, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$23 }
	
.LABEL $label$24
	CALL db_idx64_remove($9)
	
.LABEL $label$23
	$global$0 = ($2 + [16])
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$5 = CALL $4($4)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL $10([80])
	$6 = CALL $332($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	$7 = *($1)
	*($3 + [8]) = $7
	$8 = *($1 + [64])
	*($3 + [4]) = $8
	$9 = ($0 + [28])
	$4 = *($9)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $7
	*($4 + [16]) = $8
	*($3 + [24]) = [0]
	*($4) = $1
	*($9) = ($4 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $333(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($5 + [32])))
	
.LABEL $label$11
	CALL $12($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $6
}

int_32 .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0)
	$5 = ($4 & [1])
	if ( $5 ){ goto $label$5 }
	$4 = uint_32($4 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = [10]
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$6
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$10 }
	CALL $26($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	goto $label$9 
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$9 }
	if ( $5 ){ goto $label$8 }
	$5 = ($0 + [1])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( $1 ){ goto $label$2 }
	
.LABEL $label$7
	CALL memmove($6, $2, $3)
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL memmove(($6 + $3), $6, $1)
	CALL memmove($6, ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) ), $3)
	
.LABEL $label$1
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($3 << [1])
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$11
	*($0 + [4]) = $3
	*(($5 + $3)) = [0]
	(unreachable)
	return $0
}

int_32 .FUNC $368 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [12])) - *($1 + [8])) / (int_32)[12]))
	
.LOOP $label$2:
	$6 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$7 = ((int_64)$5) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$3 = *($4)
	
.LABEL $label$3
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $7 ){ goto $label$2 }
	$4 = *(($1 + [12]))
	$3 = *(($1 + [8]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL $301($0, $3)
	$3 = ($3 + [12])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$5 }
	
.LABEL $label$4
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $300 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = *(*($7 + [4]) + [136])
	if ( (CALL $3(*($7 + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$1 }
	$9 = *(*($7 + [12]) + [184])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076480, $6, *(*($7 + [16])))
	*(*(($7 + [12])) + [184]) = $9
	
.LABEL $label$2
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7)
	$9 = *($7 + [4])
	*($6 + [8]) = ((int_64)((int_64)*($9 + [64]) + (int_64)*($9 + [48])) + (int_64)*($9 + [80]))
	if ( (CALL $3((*($7 + [8]) + [8]), ($6 + [8]), [8]) == 0) ){ goto $label$3 }
	$9 = *((*($7 + [12]) + [188]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076479, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [188])) = $9
	
.LABEL $label$4
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [16]), ($6 + [8]), [8]) == 0) ){ goto $label$5 }
	$9 = *((*($7 + [12]) + [192]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076478, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [192])) = $9
	
.LABEL $label$6
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7)
	*($6 + [8]) = ((int_64)((int_64)*(*($7 + [4]) + [160]) / (int_64)1000000) & (int_64)4294967295)
	if ( (CALL $3((*($7 + [8]) + [24]), ($6 + [8]), [8]) == 0) ){ goto $label$7 }
	$9 = *((*($7 + [12]) + [196]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-5915276602093076477, $6, *(*($7 + [16])))
	*((*(($7 + [12])) + [196])) = $9
	
.LABEL $label$8
	CALL db_idx64_update($9, *(*($7 + [20])), ($6 + [8]))
	
.LABEL $label$7
	$0 = *($0)
	$9 = *($0)
	*($6 + [8]) = *(*($0 + [4]) + [96])
	if ( (CALL $3((*($0 + [8]) + [32]), ($6 + [8]), [8]) == 0) ){ goto $label$9 }
	$7 = *((*($0 + [12]) + [200]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-5915276602093076476, $6, *(*($0 + [16])))
	*((*(($0 + [12])) + [200])) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, *(*($0 + [20])), ($6 + [8]))
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $429 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $322(*($1), *($0 + [8]))
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $208 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$6 = *($1)
	$7 = ($1 + [16])
	CALL $25($7, *($3))
	$8 = ($1 + [28])
	CALL $25($8, *($3 + [4]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	$3 = *($7)
	$9 = ( *(($1 + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($9 + [62])
	$10 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	$9 = *(($1 + [28]))
	$9 = ( *(($1 + [32])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$3 = ($9 + $3)
	$10 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $4($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $7
	*($5 + [48]) = $8
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [12])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [56])
	*($5 + [60]) = ($1 + [72])
	CALL $407(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [92]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $5($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [64])
}

void .FUNC $209 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [128])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = (int_64)5523015
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $4
	$5 = $3
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $4
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$6 = ($3 + [1])
	$3 = $6
	if ( $5 ){ goto $label$5 }
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9800])
	
.LABEL $label$1
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	*($1 + [32]) = (int_64)0
	$2 = *($0)
	*($1 + [8]) = $2
	*($1 + [16]) = (int_64)5523015
	$3 = CALL db_find_i64($2, (int_64)5523015, (int_64)-4157508551318700032, (int_64)5523015)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $191(($1 + [8]), $3) + [32]) == (int_32)($1 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$7
	CALL eosio_assert([0], [9820])
	
.LABEL $label$6
	$4 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($1 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$8
	*(($3 = CALL $10([48]))) = (int_64)0
	*($3 + [32]) = ($1 + [8])
	*($3 + [8]) = (int_64)1413891848
	*($3 + [16]) = (int_64)1413891848
	*($3 + [24]) = *($0)
	*($1 + [96]) = (($1 + [48]) + [32])
	*($1 + [92]) = ($1 + [48])
	*($1 + [88]) = ($1 + [48])
	*($1 + [104]) = ($1 + [88])
	*($1 + [116]) = ($3 + [16])
	*($1 + [112]) = $3
	*($1 + [120]) = ($3 + [24])
	CALL $210(($1 + [112]), ($1 + [104]))
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*((($1 + [8]) + [8])), (int_64)-4157508551318700032, $4, $2), ($1 + [48]), [32]
	*($3 + [36]) = $6)
	$5 = (($1 + [8]) + [16])
	if ( (uint_64)($2 <= *($5)) ){ goto $label$9 }
	*($5) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$9
	*($1 + [112]) = $3
	$2 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8
	*($1 + [48]) = $2)
	*($1 + [88]) = $6
	$0 = ($1 + [36])
	$5 = *($0)
	if ( ((uint_32)$5 >= (uint_32)*((($1 + [8]) + [32]))) ){ goto $label$12 }
	*($5 + [8]) = $2
	*($5 + [16]) = $6
	*($1 + [112]) = [0]
	*($5) = $3
	*($0) = ($5 + [24])
	$3 = *($1 + [112])
	*($1 + [112]) = [0]
	if ( $3 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $211(($1 + [32]), ($1 + [112]), ($1 + [48]), ($1 + [88]))
	$3 = *($1 + [112])
	*($1 + [112]) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $12($3)
	
.LABEL $label$10
	$6 = *($1 + [32])
	if ( ($6 == 0) ){ goto $label$13 }
	$0 = ($1 + [36])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$17 }
	CALL $12($5)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$16 }
	$3 = *(($1 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$3 = $6
	
.LABEL $label$14
	*($0) = $6
	CALL $12($3)
	
.LABEL $label$13
	$global$0 = ($1 + [128])
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12696])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $12($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $12($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
	$9 = *(($1 + [24]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5001621371248181248, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $203 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-5001621371248181248, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [16]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $82($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-5001621371248181248, $6))
	if ( ((int_32)*($4 + [16]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$2
	*(($4 + [24])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $200 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [11218])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [40]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-2688959343285501951, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [40])) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = *($1 + [8])
	$3 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$6 }
	$3 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$3) ){ goto $label$5 }
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	$2 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)-2688959343285501952, $6)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $345($7, $2)
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	*(($4 + [40])) = $5
	
.LABEL $label$3
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12696])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $12($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $12($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [32]))
	$9 = *($1 + [36])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2688959343285501952, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2688959343285501951, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

void .FUNC $206 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [48])
	$global$0 = $4
	if ( (CALL $129($0, $1) == 0) ){ goto $label$15 }
	$5 = ($0 + [48])
	$6 = *($1)
	$8 = *(($0 + [76]))
	$7 = *(($0 + [72]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$16:
	$1 = ($8 + [-24])
	$9 = *($1)
	if ( ((int_64)*($9) == (int_64)$6) ){ goto $label$14 }
	$8 = $1
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$16 }
	goto $label$13 
	
.LABEL $label$15
	if ( (CALL $90($0, $1) == 0) ){ goto $label$17 }
	$5 = ($0 + [8])
	$6 = *($1)
	$8 = *(($0 + [36]))
	$7 = *(($0 + [32]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$18:
	$1 = ($8 + [-24])
	$9 = *($1)
	if ( ((int_64)*($9) == (int_64)$6) ){ goto $label$8 }
	$8 = $1
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$18 }
	goto $label$7 
	
.LABEL $label$17
	$6 = *($1)
	if ( ((int_64)$6 == (int_64)0) ){ goto $label$9 }
	$8 = [0]
	$9 = *([0] + [12468])
	
.LOOP $label$20:
	*((($4 + [32]) + ($1 = $8))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$6 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$8 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$19 }
	$6 = ((int_64)$6 << (int_64)5)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$20 }
	
.LABEL $label$19
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$3 }
	*($4) = ($8 << [1])
	$9 = ($4 | [1])
	goto $label$2 
	
.LABEL $label$14
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	if ( ((int_32)*($9 + [176]) == (int_32)$5) ){ goto $label$12 }
	CALL eosio_assert([0], [11551])
	$6 = *($0)
	*($4 + [36]) = $3
	*($4 + [32]) = $2
	if ( $9 ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$13
	$9 = [0]
	$1 = CALL db_find_i64(*($5), *(($0 + [56])), (int_64)-5915276602093076480, $6)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$12 }
	$9 = CALL $57($5, $1)
	if ( ((int_32)*($9 + [176]) == (int_32)$5) ){ goto $label$12 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$12
	$6 = *($0)
	*($4 + [36]) = $3
	*($4 + [32]) = $2
	if ( $9 ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [10691])
	
.LABEL $label$10
	CALL $207($5, $9, $6, ($4 + [32]))
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$9
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	*($4) = [0]
	$1 = ($4 | [1])
	goto $label$1 
	
.LABEL $label$8
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	if ( ((int_32)*($9 + [88]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	$6 = *($0)
	*($4 + [36]) = $3
	*($4 + [32]) = $2
	if ( $9 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$7
	$9 = [0]
	$1 = CALL db_find_i64(*($5), *(($0 + [16])), (int_64)-5915276602094125056, $6)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$6 }
	$9 = CALL $91($5, $1)
	if ( ((int_32)*($9 + [88]) == (int_32)$5) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$6
	$6 = *($0)
	*($4 + [36]) = $3
	*($4 + [32]) = $2
	if ( $9 ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10691])
	
.LABEL $label$4
	CALL $208($5, $9, $6, ($4 + [32]))
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$3
	$0 = (($8 + [16]) & [-16])
	$9 = CALL $10($0)
	*($4) = ($0 | [1])
	*($4 + [8]) = $9
	*($4 + [4]) = $8
	
.LABEL $label$2
	$0 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$21:
	*(($9 + $1)) = *((($4 + [32]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$21 }
	$1 = ($9 + $8)
	
.LABEL $label$1
	*($1) = [0]
	$1 = CALL $34($4, [0], [14164])
	$8 = ($1 + [8])
	*((($4 + [16]) + [8])) = *($8)
	*($4 + [16]) = *($1)
	*($1) = (int_64)0
	*($8) = [0]
	$1 = CALL $31(($4 + [16]), [13557])
	$9 = ($1 + [8])
	*(($8 = (($4 + [32]) + [8]))) = *($9)
	*($4 + [32]) = *($1)
	*($1) = (int_64)0
	*($9) = [0]
	CALL eosio_assert([0], ( *($8) ? (($4 + [32]) | [1]) : (*($4 + [32]) & [1]) ))
	if ( (*($4 + [32]) & [1]) ){ goto $label$26 }
	if ( (*($4 + [16]) & [1]) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL $12(*($8))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$24 }
	
.LABEL $label$25
	CALL $12(*($4 + [24]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	if ( (*($4) & [1]) ){ goto $label$22 }
	
.LABEL $label$23
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$22
	CALL $12(*($4 + [8]))
	$global$0 = ($4 + [48])
}

void .FUNC $207 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$6 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $6
	*($5 + [56]) = $6
	$6 = *($1)
	*($5 + [24]) = $6
	$7 = ($1 + [8])
	CALL $25($7, *($3))
	$8 = ($1 + [20])
	CALL $25($8, *($3 + [4]))
	*($1 + [168]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000)
	$9 = ($1 + [136])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10823])
	
.LABEL $label$3
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	*($5 + [92]) = $7
	*($5 + [96]) = $8
	*($5 + [128]) = $9
	*($5 + [88]) = $1
	$10 = ($1 + [32])
	*($5 + [100]) = $10
	$11 = ($1 + [48])
	*($5 + [104]) = $11
	$12 = ($1 + [64])
	*($5 + [108]) = $12
	$13 = ($1 + [80])
	*($5 + [112]) = $13
	$14 = ($1 + [96])
	*($5 + [116]) = $14
	$15 = ($1 + [112])
	*($5 + [120]) = $15
	$16 = ($1 + [124])
	*($5 + [124]) = $16
	$17 = ($1 + [144])
	*($5 + [132]) = $17
	$18 = ($1 + [160])
	*($5 + [136]) = $18
	$19 = ($1 + [168])
	*($5 + [140]) = $19
	CALL $298(($5 + [88]), ($5 + [8]))
	$20 = *($5 + [80])
	if ( ($20 <= [513]) ){ goto $label$5 }
	$3 = CALL $4($20)
	$2 = *($5 + [72])
	goto $label$4 
	
.LABEL $label$5
	$3 = ($4 - (($20 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $20)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $7
	*($5 + [96]) = $8
	*($5 + [100]) = $10
	*($5 + [104]) = $11
	*($5 + [108]) = $12
	*($5 + [112]) = $13
	*($5 + [116]) = $14
	*($5 + [120]) = $15
	*($5 + [124]) = $16
	*($5 + [128]) = $9
	*($5 + [132]) = $17
	*($5 + [136]) = $18
	*($5 + [140]) = $19
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), $2, $3, $20)
	if ( ($20 <= [513]) ){ goto $label$6 }
	CALL $5($3)
	
.LABEL $label$6
	$3 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $412(($5 + [80]), $3, ($3 + [1]), ($3 + [2]), ($3 + [3]), ($3 + [4]))
	$global$0 = ($5 + [144])
}

int_32 .FUNC $204 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [24])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [11218])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [24])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-5001621371248181248, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [24]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [16]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $82($7, CALL $fimport$25(*($7), *($7 + [8]), (int_64)-5001621371248181248, $6))
	if ( ((int_32)*($3 + [16]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [24])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $205 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [144])
	$global$0 = $5
	*($5 + [96]) = $2
	*($5 + [104]) = $1
	CALL prints([9760])
	$6 = *($3)
	$7 = ($6 & [1])
	CALL prints_l(( *($3 + [8]) ? ($3 + [1]) : $7 ), ( *($3 + [4]) ? uint_32($6 >> [1]) : $7 ))
	CALL prints([9777])
	CALL require_auth($1)
	*($5 + [40]) = *($0)
	CALL $65(($5 + [40]), ($5 + [104]), ($5 + [96]), [9780])
	CALL $206(($0 + [32]), ($5 + [96]), $3, $4)
	$1 = *($5 + [104])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$4 }
	$4 = [0]
	$6 = *([0] + [12468])
	
.LOOP $label$6:
	*((($5 + [40]) + ($3 = $4))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$3 == (int_32)[12]) )))))
	$4 = ($3 + [1])
	if ( ((uint_32)$3 > (uint_32)[11]) ){ goto $label$5 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($5 + [16])) = [0]
	*($5 + [8]) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$3 }
	*($5 + [8]) = ($4 << [1])
	$6 = (($5 + [8]) | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($5 + [16])) = [0]
	*($5 + [8]) = (int_64)0
	*($5 + [8]) = [0]
	$3 = (($5 + [8]) | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($4 + [16]) & [-16])
	$6 = CALL $10($7)
	*($5 + [8]) = ($7 | [1])
	*($5 + [16]) = $6
	*($5 + [12]) = $4
	
.LABEL $label$2
	$7 = ($3 + [1])
	$3 = [0]
	
.LOOP $label$7:
	*(($6 + $3)) = *((($5 + [40]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$7 }
	$3 = ($6 + $4)
	
.LABEL $label$1
	*($3) = [0]
	$3 = CALL $34(($5 + [8]), [0], [9784])
	$4 = ($3 + [8])
	*((($5 + [80]) + [8])) = *($4)
	*($5 + [80]) = *($3)
	*($3) = (int_64)0
	*($4) = [0]
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL $12(*($5 + [16]))
	
.LABEL $label$8
	$1 = *($0)
	*($5 + [16]) = (int_64)7293464317099769856
	*($5 + [8]) = *($5 + [96])
	$4 = CALL $24((($5 + [8]) + [16]), ($5 + [80]))
	*($5 + [48]) = (int_64)8516769913390661632
	*($5 + [40]) = $1
	*(($3 = CALL $10([16]))) = $1
	*($3 + [8]) = (int_64)-6402241254016417792
	*(($5 + [76])) = [0]
	$6 = ($3 + [16])
	*(($5 + [64])) = $6
	*((($5 + [40]) + [20])) = $6
	*($5 + [56]) = $3
	*($5 + [68 align=4]) = (int_64)0
	$3 = *($4)
	$4 = ( *((($5 + [8]) + [20])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($4 + [16])
	$1 = (CASTING uint_64)(uint_32 $4)
	$4 = ($5 + [68])
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$9 }
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $51($4, $3)
	$4 = *(($5 + [72]))
	$3 = *(($5 + [68]))
	goto $label$10 
	
.LABEL $label$11
	$4 = [0]
	$3 = [0]
	
.LABEL $label$10
	*($5 + [116]) = $3
	*($5 + [112]) = $3
	*($5 + [120]) = $4
	*($5 + [128]) = ($5 + [112])
	*($5 + [136]) = ($5 + [8])
	CALL $143(($5 + [136]), ($5 + [128]))
	CALL $53(($5 + [40]))
	$3 = *($5 + [68])
	if ( ($3 == 0) ){ goto $label$12 }
	*(($5 + [72])) = $3
	CALL $12($3)
	
.LABEL $label$12
	$3 = *($5 + [56])
	if ( ($3 == 0) ){ goto $label$13 }
	*(($5 + [60])) = $3
	CALL $12($3)
	
.LABEL $label$13
	if ( (*($5 + [24]) & [1]) ){ goto $label$16 }
	if ( (*($5 + [80]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $12(*(($5 + [32])))
	if ( ((*($5 + [80]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $12(*($5 + [88]))
	$global$0 = ($5 + [144])
	return 
	
.LABEL $label$14
	$global$0 = ($5 + [144])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $4($1)
	
.LABEL $label$2
	*(CALL $7()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $4(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $5($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $9 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $7())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $8($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $6 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $7 ()
{
	return [8208]
}

int_32 .FUNC $4 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8497])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $5 (int_32 $0)
{
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $3 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $0 ()
{
	CALL $6()
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	CALL $0()
	CALL $229($0, $1)
	CALL $235($0, $1)
	CALL $236($0, $1)
	CALL $237($0, $1)
	CALL $238($0, $1)
	CALL $239($0, $1)
	CALL $240($0, $1)
	CALL $241($0, $1)
	CALL $242($0, $1)
	CALL $243($0, $1)
	CALL $244($0, $1)
	CALL $245($0, $1)
	CALL $246($0, $1)
	CALL $247($0, $1)
	CALL $248($0, $1)
	CALL $249($0, $1)
	CALL $250($0, $1)
	CALL $251($0, $1)
	CALL $252($0, $1)
	CALL $253($0, $1)
	CALL $254($0, $1)
	CALL $255($0, $1)
	CALL $256($0, $1)
	CALL $257($0, $1)
	CALL $258($0, $1)
	CALL $259($0, $1)
	CALL $260($0, $1)
	CALL $261($0, $1)
	CALL $262($0, $1)
	CALL $263($0, $1)
	CALL $264($0, $1)
	CALL $265($0, $1)
	CALL $266($0, $1)
	CALL $267($0, $1)
	CALL $268($0, $1)
	CALL $269($0, $1)
	CALL $270($0, $1)
	CALL $271($0, $1)
	CALL $272($0, $1)
	CALL $273($0, $1)
	CALL $274($0, $1)
	CALL $275($0, $1)
	CALL $276($0, $1)
	CALL $277($0, $1)
	CALL $278($0, $1)
	CALL $279($0, $1)
	CALL $280($0, $1)
	CALL $281($0, $1)
	CALL $282($0, $1)
	CALL $283($0, $1)
	CALL $284($0, $1)
	CALL $285($0, $1)
	CALL $286($0, $1)
	CALL $287($0, $1)
	CALL $288($0, $1)
	CALL $289($0, $1)
	CALL $290($0, $1)
	CALL eosio_assert_code([0], (int_64)8000000000000000000)
	CALL eosio_assert_code([0], (int_64)8000000000000000001)
	CALL $41([0])
	((int_64)$0 == (int_64)$1)
	((int_64)-1525172453364465664 == (int_64)$2)
	((int_64)3626145555844956160 == (int_64)$2)
	((int_64)3626390765191561216 == (int_64)$2)
	((int_64)-4997439571269517312 == (int_64)$2)
	((int_64)-6217917475468607488 == (int_64)$2)
	((int_64)-3104548728665538560 == (int_64)$2)
	((int_64)4853075956275631104 == (int_64)$2)
	((int_64)-4417316219328135168 == (int_64)$2)
	((int_64)-4416997509229035520 == (int_64)$2)
	((int_64)4921564679018381312 == (int_64)$2)
	((int_64)8516758116379496720 == (int_64)$2)
	((int_64)-3073298666878926848 == (int_64)$2)
	((int_64)-4994302320998088704 == (int_64)$2)
	((int_64)-4273435156939800576 == (int_64)$2)
	((int_64)5031766152489992192 == (int_64)$2)
	((int_64)8516769789752901632 == (int_64)$2)
	((int_64)8516770230402916512 == (int_64)$2)
	((int_64)-3617168760277827584 == (int_64)$2)
	((int_64)-1525175652692257792 == (int_64)$2)
	((int_64)-4995149618615255040 == (int_64)$2)
	((int_64)-3102536759673618432 == (int_64)$2)
	((int_64)-4157661383434960896 == (int_64)$2)
	((int_64)5031766156353672192 == (int_64)$2)
	((int_64)8516769913390661632 == (int_64)$2)
	((int_64)-3108173784021837664 == (int_64)$2)
	((int_64)8516770035280461824 == (int_64)$2)
	((int_64)3626193066236313600 == (int_64)$2)
	((int_64)5031766164160823296 == (int_64)$2)
	((int_64)-4417060030675681280 == (int_64)$2)
	((int_64)-2507759716923167232 == (int_64)$2)
	((int_64)-3100925519616163840 == (int_64)$2)
	((int_64)-4421662014340890624 == (int_64)$2)
	((int_64)4520833809837457408 == (int_64)$2)
	((int_64)3607569026526060704 == (int_64)$2)
	((int_64)-4997487256316237312 == (int_64)$2)
	((int_64)-4997502815877021696 == (int_64)$2)
	((int_64)-2688959059812040704 == (int_64)$2)
	((int_64)-5001621310162862080 == (int_64)$2)
	((int_64)-7342441045757362176 == (int_64)$2)
	((int_64)-2764395866176356352 == (int_64)$2)
	((int_64)5339695504917954560 == (int_64)$2)
	((int_64)3626112190022418432 == (int_64)$2)
	((int_64)3626270858294591488 == (int_64)$2)
	((int_64)3626270858435730736 == (int_64)$2)
	((int_64)3626270858624259072 == (int_64)$2)
	((int_64)-3106564271770458624 == (int_64)$2)
	((int_64)-3106564276286914560 == (int_64)$2)
	((int_64)-5915097261842366464 == (int_64)$2)
	((int_64)-5915097261410402304 == (int_64)$2)
	((int_64)6292807267941485840 == (int_64)$2)
	((int_64)-2507759717372133376 == (int_64)$2)
	((int_64)-2507762612471713280 == (int_64)$2)
	((int_64)-3100925522312085504 == (int_64)$2)
	((int_64)-4997502815876857856 == (int_64)$2)
	((int_64)3626112701670768640 == (int_64)$2)
	((int_64)-4997717634790309888 == (int_64)$2)
	((int_64)5935062965233709568 == (int_64)$2)
	((int_64)$0 != (int_64)6138663577826885632)
	((int_64)6138663577826885632 == (int_64)$1)
	((int_64)-6569208335818555392 == (int_64)$2)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $9(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $9(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	return CALL $14($0, $1)
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $5($0)
	
.LABEL $label$1
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
	CALL $16($0, $1)
}

int_32 .FUNC $10 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $4($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $4($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $11 (int_32 $0)
{
	return CALL $10($0)
}

void .FUNC $12 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $5($0)
	
.LABEL $label$1
}

void .FUNC $13 (int_32 $0)
{
	CALL $12($0)
}

int_64 .FUNC $39 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8232])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8232]) = $0
	return $0
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8528]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $20($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $19 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

void .FUNC $338 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $339 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $336 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($6 = ($1 + [40]))) = *(($3 + [40]))
	*(($7 = ($1 + [32]))) = *(($3 + [32]))
	*(($8 = ($1 + [24]))) = *(($3 + [24]))
	*(($9 = ($1 + [16]))) = *(($3 + [16]))
	*(($10 = ($1 + [8]))) = *(($3 + [8]))
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($4 + [-7])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $10
	*($5 + [32]) = $1
	*($5 + [40]) = $9
	*($5 + [44]) = $8
	*($5 + [48]) = ($1 + [28])
	*($5 + [52]) = $7
	*($5 + [56]) = $6
	CALL $338(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [52]), $2, $3, [41])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)3849324904583266304) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)3849324904583266305
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

void .FUNC $337 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [112])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*(($5 = CALL $10([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [48]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	*($5 + [16]) = *(($3 + [16]))
	*(($6 = ($5 + [24]))) = *(($3 + [24]))
	*($5 + [32]) = *(($3 + [32]))
	*(($7 = ($5 + [40]))) = *(($3 + [40]))
	*($4 + [64]) = ($4 + [41])
	*($4 + [60]) = $4
	*($4 + [56]) = $4
	*($4 + [72]) = ($4 + [56])
	*($4 + [84]) = ($5 + [8])
	*($4 + [80]) = $5
	*($4 + [88]) = ($5 + [16])
	*($4 + [92]) = $6
	*($4 + [96]) = ($5 + [28])
	*($4 + [100]) = ($5 + [32])
	*($4 + [104]) = $7
	CALL $338(($4 + [80]), ($4 + [72]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)3849324904583266304, $2, (int_64)3849324904583266304, $4, [41])
	*($5 + [52]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)3849324904583266304) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)3849324904583266305
	
.LABEL $label$2
	*($4 + [80]) = $5
	*($4) = (int_64)3849324904583266304
	*($4 + [56]) = $6
	$3 = *(($1 + [28]))
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)3849324904583266304
	*($3 + [16]) = $6
	*($4 + [80]) = [0]
	*($3) = $5
	*(($1 + [28])) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $339(($1 + [24]), ($4 + [80]), $4, ($4 + [56]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $12($5)
	
.LABEL $label$5
	$global$0 = ($4 + [112])
}

void .FUNC $334 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $165(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $335 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [112])
	$global$0 = $4
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*(($5 = CALL $10([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [28 align=4]) = (int_64)0
	*($5 + [48]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *(($3 + [8]))
	*($5 + [16]) = *(($3 + [16]))
	*(($6 = ($5 + [24]))) = *(($3 + [24]))
	*($5 + [32]) = *(($3 + [32]))
	*(($7 = ($5 + [40]))) = *(($3 + [40]))
	*($4 + [64]) = ($4 + [41])
	*($4 + [60]) = $4
	*($4 + [56]) = $4
	*($4 + [72]) = ($4 + [56])
	*($4 + [84]) = ($5 + [8])
	*($4 + [80]) = $5
	*($4 + [88]) = ($5 + [16])
	*($4 + [92]) = $6
	*($4 + [96]) = ($5 + [28])
	*($4 + [100]) = ($5 + [32])
	*($4 + [104]) = $7
	CALL $338(($4 + [80]), ($4 + [72]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)3849324904583266304, $2, (int_64)3849324904583266304, $4, [41])
	*($5 + [52]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)3849324904583266304) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)3849324904583266305
	
.LABEL $label$2
	*($4 + [80]) = $5
	*($4) = (int_64)3849324904583266304
	*($4 + [56]) = $6
	$3 = *(($1 + [28]))
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)3849324904583266304
	*($3 + [16]) = $6
	*($4 + [80]) = [0]
	*($3) = $5
	*(($1 + [28])) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $339(($1 + [24]), ($4 + [80]), $4, ($4 + [56]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $12($5)
	
.LABEL $label$5
	$global$0 = ($4 + [112])
}

int_32 .FUNC $332 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24 align=4]) = (int_64)0
	*($0 + [40]) = (int_64)0
	$4 = [0]
	*(($0 + [32])) = [0]
	*(($0 + [48])) = (int_64)1413891848
	$5 = (int_64)5523015
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $6
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $7 ){ goto $label$5 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9800])
	
.LABEL $label$1
	$4 = CALL $40()
	*($0 + [60]) = $1
	*($0 + [56]) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $4) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	*($3) = *($2 + [4])
	*($3 + [12]) = ($0 + [8])
	*($3 + [8]) = $0
	*($3 + [16]) = ($0 + [16])
	*($3 + [20]) = ($0 + [24])
	*($3 + [24]) = ($0 + [40])
	*($3 + [28]) = ($0 + [56])
	CALL $334(($3 + [8]), $3)
	*($0 + [64]) = *(*($2 + [8]))
	*($0 + [68 align=4]) = (int_64)-1
	$global$0 = ($3 + [32])
	return $0
}

void .FUNC $333 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [24]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($1 + [32])))
	
.LABEL $label$11
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $12($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $330 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [68]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($1 + [76])))
	
.LABEL $label$11
	if ( ((*($1 + [56]) & [1]) == 0) ){ goto $label$12 }
	CALL $12(*(($1 + [64])))
	
.LABEL $label$12
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $12($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $331 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $116 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$3 = ($global$0 - [528])
	$global$0 = $3
	*($3 + [424]) = $1
	*((($3 + [376]) + [24])) = (int_64)-1
	*((($3 + [376]) + [32])) = (int_64)0
	*((($3 + [376]) + [40])) = [0]
	$1 = *($0)
	*((($3 + [376]) + [16])) = $1
	*($3 + [376]) = $1
	*($3 + [384]) = $1
	*((($3 + [184]) + [16])) = $1
	*((($3 + [184]) + [24])) = (int_64)-1
	*((($3 + [184]) + [32])) = (int_64)0
	*((($3 + [184]) + [40])) = [0]
	*((($3 + [184]) + [56])) = $1
	*((($3 + [184]) + [64])) = $1
	*((($3 + [184]) + [72])) = (int_64)-1
	*((($3 + [184]) + [80])) = (int_64)0
	*((($3 + [184]) + [88])) = [0]
	*(($3 + [278])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [280])) = $1
	*(($3 + [288])) = $1
	*(($3 + [296])) = $1
	*(($3 + [304])) = (int_64)-1
	*($3 + [192]) = $1
	*($3 + [184]) = $1
	*($3 + [232]) = $1
	*(($3 + [320])) = [0]
	*(($3 + [312])) = (int_64)0
	*(($3 + [336])) = $1
	*(($3 + [344])) = $1
	*(($3 + [352])) = (int_64)-1
	*(($3 + [360])) = (int_64)0
	*(($3 + [368])) = [0]
	*($3 + [328]) = $1
	CALL $117(($3 + [184]), ($3 + [424]), $2)
	*((($3 + [88]) + [24])) = (int_64)-1
	*((($3 + [88]) + [32])) = (int_64)0
	*((($3 + [88]) + [40])) = [0]
	*(($3 + [134])) = [0]
	*(($3 + [132])) = [0]
	*((($3 + [88]) + [72])) = (int_64)-1
	*((($3 + [88]) + [80])) = (int_64)0
	*((($3 + [88]) + [88])) = [0]
	$1 = *($0)
	*((($3 + [88]) + [16])) = $1
	*((($3 + [88]) + [56])) = $1
	*((($3 + [88]) + [64])) = $1
	*($3 + [88]) = $1
	*($3 + [96]) = $1
	*($3 + [136]) = $1
	*($3 + [80]) = ($3 + [96])
	CALL $109(($3 + [8]), ($3 + [80]), ($3 + [424]))
	$4 = *($3 + [12])
	if ( ($4 == 0) ){ goto $label$2 }
	if ( ((int_64)*($3 + [424]) != (int_64)*($4 + [8])) ){ goto $label$2 }
	$1 = *($3 + [8])
	*($3 + [72]) = $1
	$4 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($4) == 0) ){ goto $label$1 }
	if ( ((int_64)*($4 + [8]) != (int_64)*($3 + [424])) ){ goto $label$1 }
	$5 = (($3 + [432]) + [24])
	$6 = (($3 + [376]) + [8])
	$7 = ($3 + [44])
	$8 = (($3 + [480]) + [8])
	$9 = ($3 + [20])
	$10 = (($3 + [8]) + [16])
	$11 = (($3 + [8]) + [20])
	$12 = (($3 + [8]) + [28])
	$13 = ($3 + [52])
	$14 = ($3 + [60])
	$15 = (($3 + [8]) + [40])
	$16 = ($3 + [464])
	
.LOOP $label$3:
	$1 = CALL $39()
	*($9) = [0]
	*($10) = [0]
	*($11) = (int_64)0
	*($12) = (int_64)0
	*($7) = (int_64)0
	*($13) = (int_64)0
	*($14) = (int_64)0
	*($3 + [8]) = ((CASTING uint_32)(uint_64 ((int_64)$1 / (int_64)1000000)) + [60])
	*(($17 = (($3 + [432]) + [8]))) = (int_64)-6402241254016417792
	*($3 + [432]) = *($0)
	*($3) = (int_64)-3106564271770458624
	*($3 + [480]) = *(*($3 + [76]) + [16])
	CALL $24($8, $2)
	$4 = *($15)
	if ( ((uint_32)$4 >= (uint_32)*($13)) ){ goto $label$6 }
	$1 = *($0)
	*($4 + [8]) = *($3)
	*($4) = $1
	*($4 + [16 align=4]) = (int_64)0
	*(($18 = ($4 + [24]))) = [0]
	$19 = CALL $10([16])
	*($4 + [16]) = $19
	$20 = ($19 + [16])
	*($18) = $20
	*(($19 + [8])) = *($17)
	*($19) = *($3 + [432])
	*(($4 + [20])) = $20
	CALL $110(($4 + [28]), ($3 + [480]))
	*($15) = (*($15) + [40])
	if ( (*($8) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $111($7, ($3 + [432]), $0, $3, ($3 + [480]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $12(*((($3 + [480]) + [16])))
	
.LABEL $label$4
	*($11) = [1]
	$1 = *($3 + [376])
	*(($5 + [16])) = (int_64)0
	*(($5 + [8])) = (int_64)0
	*($5) = (int_64)0
	*($17) = (int_64)0
	*((($3 + [432]) + [16])) = (int_64)0
	*((($3 + [432]) + [28])) = [0]
	*($16) = [0]
	*($3 + [432]) = (int_64)0
	CALL $72(($3 + [480]), $6, $1, ($3 + [432]))
	$1 = ((int_64)*($4) + (int_64)1)
	*(($4 = (($3 + [480]) + [40]))) = $1
	CALL $73($6, ($3 + [480]), *($3 + [376]))
	*($3 + [488]) = (int_64)0
	*($3 + [480]) = $1
	CALL $112(($3 + [8]), ($3 + [480]), *($0), [0])
	CALL $113(($3 + [72]))
	CALL $114(($3 + [8]))
	$4 = *($3 + [76])
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ((int_64)*($4 + [8]) == (int_64)*($3 + [424])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($3 + [76]) = [0]
	*($3 + [72]) = ($3 + [80])
	
.LABEL $label$1
	CALL $115(($3 + [88]))
	$5 = *(($3 + [360]))
	if ( ($5 == 0) ){ goto $label$7 }
	$17 = ($3 + [364])
	$4 = *($17)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $12($0)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [360]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $5
	
.LABEL $label$8
	*($17) = $5
	CALL $12($4)
	
.LABEL $label$7
	CALL $115(($3 + [232]))
	$8 = *((($3 + [184]) + [32]))
	if ( ($8 == 0) ){ goto $label$12 }
	$13 = ($3 + [220])
	$17 = *($13)
	if ( ((int_32)$17 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$17 = ($17 + [-24])
	$6 = *($17)
	*($17) = [0]
	if ( ($6 == 0) ){ goto $label$16 }
	$5 = *($6 + [8])
	if ( ($5 == 0) ){ goto $label$17 }
	$11 = ($6 + [12])
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($0 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$21 }
	CALL $12(*(($0 + [-4])))
	
.LABEL $label$21
	$0 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($6 + [8]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $5
	
.LABEL $label$18
	*($11) = $5
	CALL $12($4)
	
.LABEL $label$17
	CALL $12($6)
	
.LABEL $label$16
	if ( ((int_32)$17 != (int_32)$8) ){ goto $label$15 }
	$4 = *(($3 + [216]))
	goto $label$13 
	
.LABEL $label$14
	$4 = $8
	
.LABEL $label$13
	*($13) = $8
	CALL $12($4)
	
.LABEL $label$12
	$5 = *((($3 + [376]) + [32]))
	if ( ($5 == 0) ){ goto $label$22 }
	$17 = ($3 + [412])
	$4 = *($17)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$24 }
	
.LOOP $label$25:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$26 }
	CALL $12($0)
	
.LABEL $label$26
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$25 }
	$4 = *(($3 + [408]))
	goto $label$23 
	
.LABEL $label$24
	$4 = $5
	
.LABEL $label$23
	*($17) = $5
	CALL $12($4)
	
.LABEL $label$22
	$global$0 = ($3 + [528])
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [8])
	$5 = *($1)
	$7 = *(($0 + [36]))
	$6 = *(($0 + [32]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$5:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$4 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	if ( ((int_32)*($8 + [20]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$6
	if ( $8 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$1 = CALL db_find_i64(*($4), *(($0 + [16])), (int_64)-8281825045618098176, $5)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = CALL $105($4, $1)
	if ( ((int_32)*($8 + [20]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	CALL eosio_assert([0], [13122])
	CALL eosio_assert([0], [12567])
	CALL eosio_assert([0], [11218])
	
.LABEL $label$1
	$1 = CALL db_next_i64(*($8 + [24]), ($3 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$7 }
	CALL $105($4, $1)
	
.LABEL $label$7
	CALL $118($4, $8)
	$global$0 = ($3 + [16])
}

int_32 .FUNC $114 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $12($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $12($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $12($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $12($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $12($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $115 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [80]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [84])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $12($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [80]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$1
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	if ( ((*($3 + [68]) & [1]) == 0) ){ goto $label$11 }
	CALL $12(*(($3 + [76])))
	
.LABEL $label$11
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$12 }
	CALL $12(*(($3 + [64])))
	
.LABEL $label$12
	CALL $12($3)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $12($3)
	
.LABEL $label$6
	return $0
}

void .FUNC $112 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $369(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $51($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $370(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $12($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

int_32 .FUNC $113 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [96])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [11218])
	$2 = *(($0 + [4]))
	$3 = *($2 + [96])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)7464606431203819520, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [96]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	goto $label$5 
	
.LABEL $label$6
	$4 = [0]
	$3 = CALL db_find_i64(*($7), *($7 + [8]), (int_64)7464606431203819520, $6)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $328($7, $3)
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$5
	*($4 + [96]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [8])
	$4 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-8] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [8])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $51($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	if ( ((int_32)($4 - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	*($2 + [4]) = ($3 + [8])
	CALL $301($2, $6)
	$global$0 = ($2 + [16])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $10(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $10([16])
	*($6 + [16]) = $2
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $110(($6 + [28]), $4)
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$7:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$7 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $8
	CALL $12($8)
	
.LABEL $label$10
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $12($1)
	
.LABEL $label$11
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $12($5)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	if ( ((int_32)*($1 + [20]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$7 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$8 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$9:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$6 }
	$10 = [-24]
	$2 = ($5 + [-24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	CALL eosio_assert([0], [12696])
	$10 = [-24]
	$2 = ($5 + [-24])
	$4 = *($3)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$10:
	$8 = *($5)
	*($5) = [0]
	$3 = *($2)
	*($2) = $8
	if ( ($3 == 0) ){ goto $label$11 }
	$7 = *($3 + [8])
	if ( ($7 == 0) ){ goto $label$12 }
	$11 = ($3 + [12])
	$9 = *($11)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = ($9 + [-12])
	if ( ((*($8) & [1]) == 0) ){ goto $label$16 }
	CALL $12(*(($9 + [-4])))
	
.LABEL $label$16
	$9 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$15 }
	$8 = *(($3 + [8]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $7
	
.LABEL $label$13
	*($11) = $7
	CALL $12($8)
	
.LABEL $label$12
	CALL $12($3)
	
.LABEL $label$11
	*($2 + [8]) = *($5 + [8])
	*(($2 + [16])) = *(($5 + [16]))
	$2 = ($2 + [24])
	$5 = ($5 + [24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$10 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$17:
	$5 = ($5 + $10)
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	$7 = *($3 + [8])
	if ( ($7 == 0) ){ goto $label$19 }
	$4 = ($3 + [12])
	$9 = *($4)
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$22:
	$8 = ($9 + [-12])
	if ( ((*($8) & [1]) == 0) ){ goto $label$23 }
	CALL $12(*(($9 + [-4])))
	
.LABEL $label$23
	$9 = $8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$22 }
	$8 = *(($3 + [8]))
	goto $label$20 
	
.LABEL $label$21
	$8 = $7
	
.LABEL $label$20
	*($4) = $7
	CALL $12($8)
	
.LABEL $label$19
	CALL $12($3)
	
.LABEL $label$18
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$17 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [24]))
}

void .FUNC $119 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)CALL current_receiver() == (int_64)*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [11300])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL $10([32]))) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	*($3 + [20]) = $1
	CALL $373(($4 + [16]), $3)
	*($4 + [32]) = $3
	$2 = *($3)
	*($4 + [16]) = $2
	$5 = *($3 + [24])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = $2
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $323(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$7 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($7 == 0) ){ goto $label$4 }
	$0 = *($7 + [8])
	if ( ($0 == 0) ){ goto $label$5 }
	$5 = ($7 + [12])
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = ($1 + [-12])
	if ( ((*($3) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($1 + [-4])))
	
.LABEL $label$9
	$1 = $3
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$8 }
	$3 = *(($7 + [8]))
	goto $label$6 
	
.LABEL $label$7
	$3 = $0
	
.LABEL $label$6
	*($5) = $0
	CALL $12($3)
	
.LABEL $label$5
	CALL $12($7)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $301(*($1), *($0 + [4]))
	CALL $301(*($1), *($0 + [8]))
	CALL $301(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $302(*($1), *($0 + [32]))
	CALL $302(*($1), *($0 + [36]))
	$3 = *($0 + [40])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $303(*($1), *($0 + [44]))
	$3 = *($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [52])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$12
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $298 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = (*($2) + [8])
	*(($2 = *($1))) = $1
	$4 = *($3)
	$3 = *($0 + [4])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$2
	$4 = *($3)
	$3 = *($0 + [8])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$4
	$4 = *($3)
	$3 = *($0 + [12])
	$5 = (CASTING uint_64)(uint_32 ( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ))
	
.LOOP $label$5:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	*($2) = $1
	$3 = *($3)
	$3 = ( *(($3 + [4])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($3 + $1)
	*($2) = $1
	
.LABEL $label$6
	$1 = ($1 + [64])
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [32])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$8 }
	$1 = (($6 & [-8]) + $1)
	
.LABEL $label$8
	*($2) = $1
	$3 = *($3)
	$3 = *($0 + [36])
	$4 = *($3 + [4])
	$6 = ($4 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$9:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$10 }
	$1 = (($6 & [-8]) + $1)
	
.LABEL $label$10
	$1 = ($1 + [8])
	*($2) = $1
	$0 = *($0 + [44])
	$5 = *($0 + [8])
	
.LOOP $label$11:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$11 }
	*($2) = $1
	$6 = ($0 + [4])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = ($1 + [8])
	*($2) = $1
	$0 = *($4 + [24])
	$4 = $3
	$5 = (CASTING uint_64)(uint_32 ( *($4 + [28]) ? uint_32($0 >> [1]) : ($0 & [1]) ))
	
.LOOP $label$14:
	$1 = ($1 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$14 }
	*($2) = $1
	$0 = *(($4 + [24]))
	$0 = ( *(($4 + [28])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$15 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$15
	$0 = *($4 + [4])
	if ( ($0 == 0) ){ goto $label$17 }
	
.LOOP $label$18:
	$3 = $0
	$0 = *($3)
	if ( $0 ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = *($4 + [8])
	if ( ((int_32)*($3) == (int_32)$4) ){ goto $label$16 }
	$4 = ($4 + [8])
	
.LOOP $label$19:
	$0 = *($4)
	$4 = ($0 + [8])
	$3 = *($0 + [8])
	if ( ((int_32)$0 != (int_32)*($3)) ){ goto $label$19 }
	
.LABEL $label$16
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$12
	*($2) = ($1 + [16])
}

void .FUNC $295 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$4 = ($global$0 - [144])
	$global$0 = $4
	*(($5 = $4) + [72]) = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10726])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10772])
	
.LABEL $label$2
	*($5 + [32]) = *($1 + [136])
	*($5 + [64]) = *($1 + [96])
	*($5 + [40]) = ((int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [48])) + (int_64)*($1 + [80]))
	$2 = ((int_64)((int_64)*($1 + [160]) / (int_64)1000000) & (int_64)4294967295)
	*($5 + [48]) = $2
	*($5 + [56]) = $2
	*($1 + [136]) = *(*($3))
	*($5 + [24]) = *($1)
	*($5 + [80]) = [0]
	*($5 + [8]) = ($5 + [80])
	$6 = ($1 + [8])
	*($5 + [92]) = $6
	*($5 + [88]) = $1
	$7 = ($1 + [20])
	*($5 + [96]) = $7
	$8 = ($1 + [32])
	*($5 + [100]) = $8
	$9 = ($1 + [48])
	*($5 + [104]) = $9
	$10 = ($1 + [64])
	*($5 + [108]) = $10
	$11 = ($1 + [80])
	*($5 + [112]) = $11
	$12 = ($1 + [96])
	*($5 + [116]) = $12
	$13 = ($1 + [112])
	*($5 + [120]) = $13
	$14 = ($1 + [124])
	*($5 + [124]) = $14
	$15 = ($1 + [136])
	*($5 + [128]) = $15
	$16 = ($1 + [144])
	*($5 + [132]) = $16
	$17 = ($1 + [160])
	*($5 + [136]) = $17
	$18 = ($1 + [168])
	*($5 + [140]) = $18
	CALL $298(($5 + [88]), ($5 + [8]))
	$3 = *($5 + [80])
	if ( ($3 <= [513]) ){ goto $label$4 }
	$4 = CALL $4($3)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$3
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [80]) = ($5 + [8])
	*($5 + [92]) = $6
	*($5 + [96]) = $7
	*($5 + [100]) = $8
	*($5 + [104]) = $9
	*($5 + [108]) = $10
	*($5 + [112]) = $11
	*($5 + [116]) = $12
	*($5 + [120]) = $13
	*($5 + [124]) = $14
	*($5 + [128]) = $15
	*($5 + [132]) = $16
	*($5 + [136]) = $17
	*($5 + [140]) = $18
	*($5 + [88]) = $1
	CALL $299(($5 + [88]), ($5 + [80]))
	CALL db_update_i64(*($1 + [180]), *($5 + [72]), $4, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL $5($4)
	
.LABEL $label$5
	$4 = ($0 + [36])
	$2 = *($5 + [24])
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($5 + [92]) = $1
	*($5 + [88]) = $0
	*($5 + [100]) = $1
	*($5 + [96]) = ($5 + [32])
	*($5 + [104]) = ($5 + [24])
	*($5 + [108]) = ($5 + [72])
	*($5 + [80]) = ($5 + [88])
	CALL $306(($5 + [80]), $4, ($4 + [1]), ($4 + [2]), ($4 + [3]), ($4 + [4]))
	$global$0 = ($5 + [144])
}

int_64 .FUNC $294 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($0 + [48])
	$5 = *($1)
	$7 = *(($0 + [76]))
	$6 = *(($0 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$1 = ($7 + [-24])
	$8 = *($1)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$3 }
	$7 = $1
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$1 = CALL db_find_i64(*($4), *(($0 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $57($4, $1)
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert([0], [10882])
	
.LABEL $label$1
	*($3 + [8]) = [0]
	$5 = (int_64)0
	*($3) = (int_64)0
	$1 = (*(($8 + [116])) - *($8 + [112]))
	if ( ($1 == 0) ){ goto $label$7 }
	$7 = int_32($1 >> [3])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$6 }
	$6 = CALL $10($1)
	*(($3 + [8])) = ($6 + ($7 << [3]))
	*($3) = $6
	*($3 + [4]) = $6
	$5 = (int_64)0
	$7 = *(($8 + [112]))
	$1 = (*(($8 + [116])) - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($6, $7, $1)
	*($3 + [4]) = ($6 + $1)
	if ( ($1 == 0) ){ goto $label$8 }
	$7 = ($1 & [-8])
	$5 = (int_64)0
	$1 = $6
	
.LOOP $label$9:
	$5 = ((int_64)$5 + (int_64)(CASTING uint_64)(uint_32 ((int_64)*(CALL $171($4, *($1), [10129]) + [136]) == (int_64)*($2))))
	$1 = ($1 + [8])
	$7 = ($7 + [-8])
	if ( $7 ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$7 }
	*($3 + [4]) = $6
	CALL $12($6)
	
.LABEL $label$7
	$global$0 = ($3 + [16])
	return $5
	
.LABEL $label$6
	CALL $38($3)
	return (unreachable)
}

void .FUNC $297 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $10(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $38($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $12($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $296 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $296($0, *($1))
	CALL $296($0, *($1 + [4]))
	CALL $12($1)
	
.LABEL $label$1
}

int_32 .FUNC $291 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $290 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1424])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1380]) = $2
	*($3 + [1376]) = $2
	*($3 + [1384]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1380])
	
.LABEL $label$5
	CALL memcpy(($3 + [1368]), $2, [8])
	*($3 + [1380]) = ($2 + [8])
	*($3 + [1360]) = [0]
	*($3 + [1352]) = (int_64)0
	CALL $165(($3 + [1376]), ($3 + [1352]))
	*(($2 = ($3 + [8]))) = *((($3 + [1376]) + [8]))
	*($3) = *($3 + [1376])
	*(($4 = (($3 + [1392]) + [8]))) = *($2)
	*($3 + [1392]) = *($3)
	$2 = *($4)
	*((($3 + [1408]) + [8])) = $2
	*(($3 + [40])) = $2
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$1 = *($3 + [1392])
	*($3 + [32]) = $1
	*($3 + [1408]) = $1
	*(($3 + [56])) = $0
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*($3 + [48]) = $0
	*(($3 + [184])) = $0
	*(($3 + [180])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [220])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [270])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*($3 + [224]) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [288])) = $0
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*($3 + [320]) = $0
	*($3 + [368]) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [432])) = $0
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [462])) = [0]
	*(($3 + [460])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = [0]
	*(($3 + [500])) = [0]
	*(($3 + [504])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = (int_64)-1
	*(($3 + [544])) = [0]
	*(($3 + [548])) = [0]
	*(($3 + [552])) = [0]
	*($3 + [560]) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = (int_64)-1
	*(($3 + [648])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = (int_64)-1
	*(($3 + [688])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [712])) = $0
	*(($3 + [720])) = $0
	*(($3 + [728])) = (int_64)-1
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = $0
	*(($3 + [760])) = $0
	*(($3 + [768])) = (int_64)-1
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*($3 + [792]) = $0
	*(($3 + [800])) = [1]
	*(($3 + [808])) = (int_64)8238557860461690880
	*(($3 + [816])) = $0
	*(($3 + [824])) = $0
	*(($3 + [832])) = (int_64)-1
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = $0
	*(($3 + [864])) = $0
	*(($3 + [872])) = (int_64)-1
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = (int_64)-1
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = [0]
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = (int_64)-1
	*(($3 + [968])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [992])) = $0
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = (int_64)-1
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = (int_64)-1
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*($3 + [1072]) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = (int_64)-1
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*(($3 + [1112])) = [0]
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = (int_64)-1
	*(($3 + [1144])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = (int_64)-1
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = (int_64)-1
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = (int_64)-1
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = [0]
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = (int_64)-1
	*(($3 + [1328])) = [0]
	*(($3 + [1332])) = [0]
	*(($3 + [1336])) = [0]
	*($3 + [1344]) = $0
	CALL $70(($3 + [1344]), ($3 + [1368]), ($3 + [1352]))
	CALL $230(($3 + [16]))
	if ( ((*($3 + [1352]) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*((($3 + [1352]) + [8])))
	
.LABEL $label$6
	$global$0 = ($3 + [1424])
}

void .FUNC $293 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = ($1 + [48])
	$5 = *($2)
	$7 = *(($1 + [76]))
	$6 = *(($1 + [72]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$2 = ($7 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$3 }
	$7 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$2 = CALL db_find_i64(*($4), *(($1 + [56])), (int_64)-5915276602093076480, $5)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $57($4, $2)
	if ( ((int_32)*($8 + [176]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [11551])
	goto $label$1 
	
.LABEL $label$5
	CALL eosio_assert([0], [10882])
	
.LABEL $label$1
	$6 = [0]
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	$2 = (*(($8 + [116])) - *($8 + [112]))
	if ( ($2 == 0) ){ goto $label$10 }
	$7 = int_32($2 >> [3])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$7 }
	$6 = CALL $10($2)
	*(($3 + [8])) = ($6 + ($7 << [3]))
	*($3) = $6
	*($3 + [4]) = $6
	$7 = *(($8 + [112]))
	$2 = (*(($8 + [116])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($6, $7, $2)
	$9 = ($6 + $2)
	*($3 + [4]) = $9
	goto $label$8 
	
.LABEL $label$10
	$9 = [0]
	goto $label$8 
	
.LABEL $label$9
	$9 = $6
	
.LABEL $label$8
	*($0 + [4 align=4]) = (int_64)0
	$1 = ($0 + [4])
	*($0) = $1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$6 }
	$10 = ($0 + [4])
	$11 = ($0 + [8])
	
.LOOP $label$11:
	$12 = CALL $171($4, *($6), [10129])
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$15 }
	$7 = $1
	$13 = *($2 + [16])
	$5 = *(($12 + [136]))
	if ( ((uint_64)$5 >= (uint_64)$13) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$2 = $1
	$7 = $1
	$14 = [3]
	goto $label$12 
	
.LABEL $label$14
	$14 = [9]
	goto $label$12 
	
.LABEL $label$13
	$14 = [2]
	
.LABEL $label$12
	
.LOOP $label$16:
	goto $label$33 
	
.LABEL $label$37
	$7 = $2
	$2 = $8
	$13 = *($2 + [16])
	if ( ((uint_64)$5 >= (uint_64)$13) ){ goto $label$25 }
	$14 = [9]
	goto $label$16 
	
.LABEL $label$36
	$8 = *($2)
	if ( $8 ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$35
	if ( ((uint_64)$13 >= (uint_64)$5) ){ goto $label$20 }
	$14 = [8]
	goto $label$16 
	
.LABEL $label$34
	$7 = ($2 + [4])
	$8 = *($2 + [4])
	if ( ($8 == 0) ){ goto $label$23 }
	$14 = [0]
	goto $label$16 
	
.LABEL $label$33
	$2 = $7
	goto $label$24 
	
.LABEL $label$32
	if ( (*($7) == 0) ){ goto $label$19 }
	$14 = [4]
	goto $label$16 
	
.LABEL $label$31
	$6 = ($6 + [8])
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$11 }
	goto $label$26 
	
.LABEL $label$30
	$7 = $2
	if ( *($7) ){ goto $label$18 }
	$14 = [5]
	goto $label$16 
	
.LABEL $label$29
	*(($8 = CALL $10([24]))) = (int_64)0
	*($8 + [8]) = $2
	*($7) = $8
	*($8 + [16]) = *(($12 + [136]))
	$2 = *(*($0))
	if ( ($2 == 0) ){ goto $label$17 }
	$14 = [6]
	goto $label$16 
	
.LABEL $label$28
	*($0) = $2
	$8 = *($7)
	$14 = [7]
	goto $label$16 
	
.LABEL $label$27
	CALL $305(*($10), $8)
	*($11) = (*($11) + [1])
	$6 = ($6 + [8])
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$11 }
	
.LABEL $label$26
	$6 = *($3)
	goto $label$6 
	
.LABEL $label$25
	$14 = [2]
	goto $label$16 
	
.LABEL $label$24
	$14 = [1]
	goto $label$16 
	
.LABEL $label$23
	$14 = [3]
	goto $label$16 
	
.LABEL $label$22
	$14 = [10]
	goto $label$16 
	
.LABEL $label$21
	$14 = [1]
	goto $label$16 
	
.LABEL $label$20
	$14 = [3]
	goto $label$16 
	
.LABEL $label$19
	$14 = [5]
	goto $label$16 
	
.LABEL $label$18
	$14 = [4]
	goto $label$16 
	
.LABEL $label$17
	$14 = [7]
	goto $label$16 
	
.LABEL $label$7
	CALL $38($3)
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$38 }
	*($3 + [4]) = $6
	CALL $12($6)
	
.LABEL $label$38
	$global$0 = ($3 + [16])
	$14
	(unreachable)
}

int_32 .FUNC $292 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $407 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [2])
	*(($4 = ($4 + [4]))) = (*($4) + [2])
	CALL $301(*($1), *($0 + [12]))
	CALL $301(*($1), *($0 + [16]))
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10600])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [176]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12601])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [12646])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$8 = [-24]
	$9 = ($6 + [-24])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [12696])
	$8 = [-24]
	$9 = ($6 + [-24])
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$10 = $9
	goto $label$4 
	
.LABEL $label$5
	
.LOOP $label$11:
	$10 = ($9 + [24])
	CALL $410($9, $10)
	$6 = ($9 + [48])
	$9 = $10
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$11 }
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$3 }
	
.LABEL $label$4
	$9 = ($6 + $8)
	
.LOOP $label$12:
	$6 = CALL $321($9)
	$9 = ($9 + $8)
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$12 }
	
.LABEL $label$3
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [180]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $411(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $349 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [32]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11480])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-2688959343285501952)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [11426])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $345(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $348 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10600])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [10600])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $347 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$4 = *(($3 + [112]))
	if ( ((int_64)$4 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$4 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$4 = (int_64)0
	$5 = ($3 + [96])
	$6 = CALL db_lowerbound_i64(*($5), *(($3 + [104])), (int_64)-2688959343285501952, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $345($5, $6)
	*($2 + [12]) = [0]
	*($2 + [8]) = $5
	$4 = *(*(CALL $349(($2 + [8])) + [4]))
	$4 = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	*(($3 + [112])) = $4
	if ( (uint_64)($4 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [11351])
	$4 = *(($3 + [112]))
	goto $label$1 
	
.LABEL $label$2
	*(($3 + [112])) = (int_64)0
	
.LABEL $label$1
	*($1) = $4
	*($1 + [8]) = *(*($0 + [4]))
	*($1 + [16]) = *(*($0 + [8]))
	*($1 + [24]) = ((uint_64)((int_64)((int_64)(CASTING uint_64)(uint_32 CALL $40()) * (int_64)500000) + (int_64)946684800000000) / (uint_64)(int_64)1000000)
	$global$0 = ($2 + [16])
}

void .FUNC $346 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

int_32 .FUNC $345 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [11403])
	
.LABEL $label$5
	$4 = CALL $4($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $10([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [28]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $346(($3 + [32]), ($3 + [24]))
	*($5 + [32]) = $1
	*($5 + [36 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $344(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $212 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [192])
	$global$0 = $4
	$5 = [0]
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$7 = $8
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$7 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9800])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [9853])
	
.LABEL $label$1
	$11 = [0]
	*(($4 + [120])) = [0]
	*($4 + [104]) = (int_64)-1
	*($4 + [112]) = (int_64)0
	$7 = *($0)
	*($4 + [88]) = $7
	*($4 + [96]) = $6
	$5 = CALL db_find_i64($7, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$10 }
	$11 = CALL $191(($4 + [88]), $5)
	if ( ((int_32)*($11 + [32]) == (int_32)($4 + [88])) ){ goto $label$11 }
	CALL eosio_assert([0], [11551])
	
.LABEL $label$11
	if ( CALL has_auth(*($11 + [24])) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [9882])
	if ( CALL has_auth(*([0] + [24])) ){ goto $label$8 }
	
.LABEL $label$9
	if ( CALL has_auth(*($0)) ){ goto $label$8 }
	CALL eosio_assert([0], [9942])
	
.LABEL $label$8
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$13 }
	$7 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$7 = $8
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$7 = $8
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $9 ){ goto $label$16 }
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [9996])
	$6 = *($2)
	
.LABEL $label$12
	if ( ((int_64)$6 > (int_64)0) ){ goto $label$17 }
	CALL eosio_assert([0], [10013])
	
.LABEL $label$17
	$5 = ($2 + [8])
	if ( ((int_64)*($5) == (int_64)*($11 + [16])) ){ goto $label$18 }
	CALL eosio_assert([0], [10042])
	
.LABEL $label$18
	*($4 + [128]) = $2
	CALL $213(($4 + [88]), $11, ($4 + [128]))
	$9 = ($11 + [24])
	$7 = *($9)
	*(($10 = (($4 + [72]) + [8]))) = *($5)
	$8 = *($2)
	*((($4 + [8]) + [8])) = *($10)
	*($4 + [72]) = $8
	*($4 + [8]) = *($4 + [72])
	CALL $214($0, $7, ($4 + [8]), $7)
	$7 = *($9)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$19 }
	*(($9 = (($4 + [24]) + [24]))) = *(($2 + [8]))
	*($4 + [24]) = $7
	*($4 + [32]) = $1
	*($4 + [40]) = *($2)
	$8 = *($0)
	CALL $24(($4 + [56]), $3)
	*(($5 = CALL $10([16]))) = $7
	*($5 + [8]) = (int_64)-6402241254016417792
	*((($4 + [128]) + [24])) = *($9)
	$9 = (($4 + [24]) + [40])
	*(($10 = (($4 + [128]) + [40]))) = *($9)
	*($9) = [0]
	*($4 + [176]) = $5
	$5 = ($5 + [16])
	*($4 + [184]) = $5
	*($4 + [180]) = $5
	*($4 + [128]) = *($4 + [24])
	*($4 + [136]) = *($4 + [32])
	*($4 + [144]) = *($4 + [40])
	*($4 + [160]) = *($4 + [56])
	*($4 + [56]) = (int_64)0
	CALL $215($8, (int_64)-3617168760277827584, ($4 + [176]), ($4 + [128]))
	if ( ((*($4 + [160]) & [1]) == 0) ){ goto $label$20 }
	CALL $12(*($10))
	
.LABEL $label$20
	$5 = *($4 + [176])
	if ( ($5 == 0) ){ goto $label$21 }
	*($4 + [180]) = $5
	CALL $12($5)
	
.LABEL $label$21
	if ( ((*(($4 + [56])) & [1]) == 0) ){ goto $label$19 }
	CALL $12(*(($4 + [64])))
	
.LABEL $label$19
	$10 = *($4 + [112])
	if ( ($10 == 0) ){ goto $label$22 }
	$2 = ($4 + [116])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$10) ){ goto $label$24 }
	
.LOOP $label$25:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$26 }
	CALL $12($9)
	
.LABEL $label$26
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$25 }
	$5 = *(($4 + [112]))
	goto $label$23 
	
.LABEL $label$24
	$5 = $10
	
.LABEL $label$23
	*($2) = $10
	CALL $12($5)
	
.LABEL $label$22
	$global$0 = ($4 + [192])
}

void .FUNC $343 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *($0)
	CALL $347(*($0 + [4]), $1)
	*($2 + [48]) = ($2 + [28])
	*($2 + [44]) = $2
	*($2 + [40]) = $2
	*($2 + [56]) = ($2 + [40])
	*($2 + [68]) = ($1 + [8])
	*($2 + [64]) = $1
	*($2 + [72]) = ($1 + [16])
	*($2 + [76]) = ($1 + [24])
	CALL $348(($2 + [64]), ($2 + [56]))
	$4 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($3 + [8]), (int_64)-2688959343285501952, *(*($0 + [8])), $4, $2, [28])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$3 = ($3 + [8])
	$4 = *($3)
	$0 = *(($0 + [8]))
	$5 = *($0)
	$6 = *($1)
	*($2 + [64]) = *($1 + [8])
	*($1 + [36]) = CALL db_idx64_store($4, (int_64)-2688959343285501952, $5, $6, ($2 + [64]))
	$4 = *($0)
	$5 = *($3)
	$6 = *($1)
	*($2 + [64]) = *($1 + [16])
	*(($1 + [40])) = CALL db_idx64_store($5, (int_64)-2688959343285501951, $4, $6, ($2 + [64]))
	$global$0 = ($2 + [80])
}

void .FUNC $342 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $38($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $341 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [8]) = *(*($1 + [4]))
	$1 = *($2)
	CALL memcpy($3, $0, [8])
	$4 = ($0 + [8])
	CALL memcpy(($3 | [8]), $4, [8])
	$5 = *($0)
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)-5001621371248181248, *(*($2 + [8])), $5, $3, [16])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	$5 = *(($1 + [8]))
	$6 = *(*(($2 + [8])))
	$7 = *($0)
	*($3 + [24]) = *($4)
	*($0 + [24]) = CALL db_idx64_store($5, (int_64)-5001621371248181248, $6, $7, ($3 + [24]))
	$global$0 = ($3 + [32])
	return $0
}

void .FUNC $340 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [20])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	$4 = *(($3 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [11956])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $38 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $283 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [1360])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $4($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [1352])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [1352])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [11956])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [1344]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11956])
	
.LABEL $label$6
	CALL memcpy(($3 + [1344]), $5, [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = $0
	*(($3 + [64])) = (int_64)-1
	*(($3 + [72])) = (int_64)0
	*(($3 + [80])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = $0
	*(($3 + [104])) = (int_64)-1
	*(($3 + [112])) = (int_64)0
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*(($3 + [144])) = $0
	*(($3 + [136])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [172])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*(($3 + [212])) = [0]
	*(($3 + [224])) = $0
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*($3 + [216]) = $0
	*(($3 + [262])) = [0]
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [264])) = $0
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = (int_64)0
	*(($3 + [352])) = [0]
	*(($3 + [368])) = $0
	*(($3 + [376])) = $0
	*($3 + [312]) = $0
	*($3 + [360]) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($3 + [408])) = $0
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*(($3 + [432])) = (int_64)-1
	*(($3 + [440])) = (int_64)0
	*(($3 + [448])) = [0]
	*(($3 + [454])) = [0]
	*(($3 + [452])) = [0]
	*(($3 + [456])) = $0
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = (int_64)-1
	*(($3 + [488])) = [0]
	*(($3 + [492])) = [0]
	*(($3 + [496])) = [0]
	*(($3 + [504])) = $0
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = (int_64)-1
	*(($3 + [536])) = [0]
	*(($3 + [540])) = [0]
	*(($3 + [544])) = [0]
	*($3 + [552]) = $0
	*(($3 + [560])) = $0
	*(($3 + [568])) = $0
	*(($3 + [576])) = (int_64)-1
	*(($3 + [584])) = [0]
	*(($3 + [588])) = [0]
	*(($3 + [592])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [608])) = $0
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = (int_64)-1
	*(($3 + [640])) = [0]
	*(($3 + [644])) = [0]
	*(($3 + [648])) = [0]
	*(($3 + [656])) = $0
	*(($3 + [664])) = $0
	*(($3 + [672])) = (int_64)-1
	*(($3 + [680])) = [0]
	*(($3 + [684])) = [0]
	*(($3 + [688])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [704])) = $0
	*(($3 + [712])) = $0
	*(($3 + [720])) = (int_64)-1
	*(($3 + [728])) = [0]
	*(($3 + [732])) = [0]
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = $0
	*(($3 + [752])) = $0
	*(($3 + [760])) = (int_64)-1
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*($3 + [784]) = $0
	*(($3 + [792])) = [1]
	*(($3 + [800])) = (int_64)8238557860461690880
	*(($3 + [808])) = $0
	*(($3 + [816])) = $0
	*(($3 + [824])) = (int_64)-1
	*(($3 + [832])) = [0]
	*(($3 + [836])) = [0]
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = $0
	*(($3 + [856])) = $0
	*(($3 + [864])) = (int_64)-1
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = $0
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = (int_64)-1
	*(($3 + [920])) = [0]
	*(($3 + [924])) = [0]
	*(($3 + [928])) = [0]
	*(($3 + [936])) = $0
	*(($3 + [944])) = $0
	*(($3 + [952])) = (int_64)-1
	*(($3 + [960])) = [0]
	*(($3 + [964])) = [0]
	*(($3 + [968])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [984])) = $0
	*(($3 + [992])) = $0
	*(($3 + [1000])) = (int_64)-1
	*(($3 + [1008])) = [0]
	*(($3 + [1012])) = [0]
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = (int_64)-1
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*($3 + [1064]) = $0
	*(($3 + [1072])) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = (int_64)-1
	*(($3 + [1096])) = [0]
	*(($3 + [1100])) = [0]
	*(($3 + [1104])) = [0]
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = (int_64)-1
	*(($3 + [1136])) = [0]
	*(($3 + [1140])) = [0]
	*(($3 + [1144])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1160])) = $0
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = (int_64)-1
	*(($3 + [1184])) = [0]
	*(($3 + [1188])) = [0]
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = (int_64)-1
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = (int_64)-1
	*(($3 + [1272])) = [0]
	*(($3 + [1276])) = [0]
	*(($3 + [1280])) = [0]
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = (int_64)-1
	*(($3 + [1320])) = [0]
	*(($3 + [1324])) = [0]
	*(($3 + [1328])) = [0]
	*($3 + [1336]) = $0
	CALL $169(($3 + [552]), ($3 + [1352]), ($3 + [1344]))
	CALL $230(($3 + [8]))
	$global$0 = ($3 + [1360])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $29(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $22(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8649], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $29(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $29(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $37 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $29(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $22(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8698], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $29(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $29(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $33($0, $1, $2, CALL $2($2))
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $29(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $22(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8608], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $29(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $29(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $26($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $280 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1456])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1404]) = $2
	*($3 + [1400]) = $2
	*($3 + [1408]) = ($2 + $4)
	*($3 + [1392]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1404])
	
.LABEL $label$5
	CALL memcpy(($3 + [1392]), $2, [8])
	*($3 + [1404]) = ($2 + [8])
	*($3 + [1384]) = [0]
	*($3 + [1376]) = (int_64)0
	CALL $165(($3 + [1400]), ($3 + [1376]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [1400]) + [8]))
	*($3 + [24]) = *($3 + [1400])
	*(($4 = (($3 + [1424]) + [8]))) = *($2)
	*($3 + [1424]) = *($3 + [24])
	$2 = *($4)
	*((($3 + [1440]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [1424])
	*($3 + [56]) = $1
	*($3 + [1440]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = (int_64)0
	*(($3 + [160])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*($3 + [72]) = $0
	*(($3 + [208])) = $0
	*(($3 + [204])) = [0]
	*(($3 + [216])) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = $0
	*(($3 + [272])) = (int_64)-1
	*(($3 + [280])) = (int_64)0
	*(($3 + [288])) = [0]
	*(($3 + [294])) = [0]
	*(($3 + [292])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = $0
	*($3 + [248]) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [312])) = $0
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	*(($3 + [352])) = $0
	*(($3 + [360])) = $0
	*(($3 + [368])) = (int_64)-1
	*(($3 + [376])) = (int_64)0
	*(($3 + [384])) = [0]
	*(($3 + [400])) = $0
	*(($3 + [408])) = $0
	*(($3 + [416])) = (int_64)-1
	*(($3 + [424])) = (int_64)0
	*(($3 + [432])) = [0]
	*(($3 + [440])) = $0
	*(($3 + [448])) = $0
	*($3 + [344]) = $0
	*($3 + [392]) = $0
	*(($3 + [464])) = (int_64)-1
	*(($3 + [456])) = $0
	*(($3 + [472])) = (int_64)0
	*(($3 + [480])) = [0]
	*(($3 + [486])) = [0]
	*(($3 + [484])) = [0]
	*(($3 + [488])) = $0
	*(($3 + [496])) = $0
	*(($3 + [504])) = $0
	*(($3 + [512])) = (int_64)-1
	*(($3 + [520])) = [0]
	*(($3 + [524])) = [0]
	*(($3 + [528])) = [0]
	*(($3 + [536])) = $0
	*(($3 + [544])) = $0
	*(($3 + [552])) = $0
	*(($3 + [560])) = (int_64)-1
	*(($3 + [568])) = [0]
	*(($3 + [572])) = [0]
	*(($3 + [576])) = [0]
	*($3 + [584]) = $0
	*(($3 + [592])) = $0
	*(($3 + [600])) = $0
	*(($3 + [608])) = (int_64)-1
	*(($3 + [616])) = [0]
	*(($3 + [620])) = [0]
	*(($3 + [624])) = [0]
	*(($3 + [632])) = [0]
	*(($3 + [628])) = [0]
	*(($3 + [640])) = $0
	*(($3 + [648])) = $0
	*(($3 + [656])) = $0
	*(($3 + [664])) = (int_64)-1
	*(($3 + [672])) = [0]
	*(($3 + [676])) = [0]
	*(($3 + [680])) = [0]
	*(($3 + [688])) = $0
	*(($3 + [696])) = $0
	*(($3 + [704])) = (int_64)-1
	*(($3 + [712])) = [0]
	*(($3 + [716])) = [0]
	*(($3 + [720])) = [0]
	*(($3 + [728])) = [0]
	*(($3 + [724])) = [0]
	*(($3 + [736])) = $0
	*(($3 + [744])) = $0
	*(($3 + [752])) = (int_64)-1
	*(($3 + [760])) = [0]
	*(($3 + [764])) = [0]
	*(($3 + [768])) = [0]
	*(($3 + [772])) = [0]
	*(($3 + [776])) = $0
	*(($3 + [784])) = $0
	*(($3 + [792])) = (int_64)-1
	*(($3 + [800])) = [0]
	*(($3 + [804])) = [0]
	*(($3 + [808])) = [0]
	*(($3 + [812])) = [0]
	*($3 + [816]) = $0
	*(($3 + [824])) = [1]
	*(($3 + [832])) = (int_64)8238557860461690880
	*(($3 + [840])) = $0
	*(($3 + [848])) = $0
	*(($3 + [856])) = (int_64)-1
	*(($3 + [864])) = [0]
	*(($3 + [868])) = [0]
	*(($3 + [872])) = [0]
	*(($3 + [876])) = [0]
	*(($3 + [880])) = $0
	*(($3 + [888])) = $0
	*(($3 + [896])) = (int_64)-1
	*(($3 + [904])) = [0]
	*(($3 + [908])) = [0]
	*(($3 + [912])) = [0]
	*(($3 + [916])) = [0]
	*(($3 + [920])) = $0
	*(($3 + [928])) = $0
	*(($3 + [936])) = $0
	*(($3 + [944])) = (int_64)-1
	*(($3 + [952])) = [0]
	*(($3 + [956])) = [0]
	*(($3 + [960])) = [0]
	*(($3 + [968])) = $0
	*(($3 + [976])) = $0
	*(($3 + [984])) = (int_64)-1
	*(($3 + [992])) = [0]
	*(($3 + [996])) = [0]
	*(($3 + [1000])) = [0]
	*(($3 + [1008])) = [0]
	*(($3 + [1004])) = [0]
	*(($3 + [1016])) = $0
	*(($3 + [1024])) = $0
	*(($3 + [1032])) = (int_64)-1
	*(($3 + [1040])) = [0]
	*(($3 + [1044])) = [0]
	*(($3 + [1048])) = [0]
	*(($3 + [1052])) = [0]
	*(($3 + [1056])) = $0
	*(($3 + [1064])) = $0
	*(($3 + [1072])) = (int_64)-1
	*(($3 + [1080])) = [0]
	*(($3 + [1084])) = [0]
	*(($3 + [1088])) = [0]
	*(($3 + [1092])) = [0]
	*($3 + [1096]) = $0
	*(($3 + [1104])) = $0
	*(($3 + [1112])) = $0
	*(($3 + [1120])) = (int_64)-1
	*(($3 + [1128])) = [0]
	*(($3 + [1132])) = [0]
	*(($3 + [1136])) = [0]
	*(($3 + [1144])) = $0
	*(($3 + [1152])) = $0
	*(($3 + [1160])) = (int_64)-1
	*(($3 + [1168])) = [0]
	*(($3 + [1172])) = [0]
	*(($3 + [1176])) = [0]
	*(($3 + [1184])) = [0]
	*(($3 + [1180])) = [0]
	*(($3 + [1192])) = $0
	*(($3 + [1200])) = $0
	*(($3 + [1208])) = (int_64)-1
	*(($3 + [1216])) = [0]
	*(($3 + [1220])) = [0]
	*(($3 + [1224])) = [0]
	*(($3 + [1228])) = [0]
	*(($3 + [1232])) = $0
	*(($3 + [1240])) = $0
	*(($3 + [1248])) = (int_64)-1
	*(($3 + [1256])) = [0]
	*(($3 + [1260])) = [0]
	*(($3 + [1264])) = [0]
	*(($3 + [1268])) = [0]
	*(($3 + [1272])) = $0
	*(($3 + [1280])) = $0
	*(($3 + [1288])) = $0
	*(($3 + [1296])) = (int_64)-1
	*(($3 + [1304])) = [0]
	*(($3 + [1308])) = [0]
	*(($3 + [1312])) = [0]
	*(($3 + [1320])) = $0
	*(($3 + [1328])) = $0
	*(($3 + [1336])) = $0
	*(($3 + [1344])) = (int_64)-1
	*(($3 + [1352])) = [0]
	*(($3 + [1356])) = [0]
	*(($3 + [1360])) = [0]
	*($3 + [1368]) = $0
	$0 = *($3 + [1392])
	$2 = CALL $24(($3 + [8]), ($3 + [1376]))
	*($3 + [1440]) = $0
	*($3 + [1424]) = *($3 + [40])
	*($3 + [1416]) = (int_64)0
	CALL $65(($3 + [1424]), ($3 + [1440]), ($3 + [1416]), [8924])
	CALL $117(($3 + [392]), ($3 + [1440]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$6 }
	CALL $12(*($2 + [8]))
	
.LABEL $label$6
	CALL $230(($3 + [40]))
	if ( ((*($3 + [1376]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($3 + [1384])))
	
.LABEL $label$7
	$global$0 = ($3 + [1456])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $10($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $12($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $2($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $26($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $281 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [1504])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $4($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [1396]) = $2
	*($3 + [1392]) = $2
	*($3 + [1400]) = ($2 + $4)
	*($3 + [1384]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [11956])
	$2 = *($3 + [1396])
	
.LABEL $label$5
	CALL memcpy(($3 + [1384]), $2, [8])
	*($3 + [1396]) = ($2 + [8])
	*($3 + [1376]) = [0]
	*($3 + [1368]) = (int_64)0
	CALL $165(($3 + [1392]), ($3 + [1368]))
	*($3 + [1360]) = [0]
	*($3 + [1352]) = (int_64)0
	CALL $165(($3 + [1392]), ($3 + [1352]))
	*(($2 = ($3 + [8]))) = *((($3 + [1392]) + [8]))
	*($3) = *($3 + [1392])
	*(($4 = (($3 + [1408]) + [8]))) = *($2)
	*($3 + [1408]) = *($3)
	$2 = *($4)
	*((($3 + [1456]) + [8])) = $2
	*(($3 + [40])) = $2
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$1 = *($3 + [1408])
	*($3 + [32]) = $1
	*($3 + [1456]) = $1
	*((($3 + [16]) + [40])) = $0
	*(($3 + [64])) = $0
	*(($3 + [72])) = (int_64)-1
	*(($3 + [80])) = (int_64)0
	*(($3 + [88])) = [0]
	*(($3 + [96])) = $0
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*($3 + [48]) = $0
	*(($3 + [184])) = $0
	*(($3 + [180])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [220])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [270])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = $0
	*($3 + [224]) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [288])) = $0
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($2 = ($3 + [328]))) = $0
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*(($3 + [352])) = (int_64)0
	*(($3 + [360])) = [0]
	*(($3 + [376])) = $0
	*(($3 + [384])) = $0
	*(($3 + [392])) = (int_64)-1
	*(($3 + [400])) = (int_64)0
	*(($3 + [408])) = [0]
	*(($3 + [416])) = $0
	*(($3 + [424])) = $0
	*($3 + [320]) = $0
	*($3 + [368]) = $0
	*(($3 + [440])) = (int_64)-1
	*(($3 + [432])) = $0
	*(($3 + [448])) = (int_64)0
	*(($3 + [456])) = [0]
	*(($3 + [462])) = [0]
	*(($3 + [460])) = [0]
	*(($3 + [464])) = $0
	*(($3 + [472])) = $0
	*(($3 + [480])) = $0
	*(($3 + [488])) = (int_64)-1
	*(($3 + [496])) = [0]
	*(($3 + [500])) = [0]
	*(($3 + [504])) = [0]
	*(($3 + [512])) = $0
	*(($3 + [520])) = $0
	*(($3 + [528])) = $0
	*(($3 + [536])) = (int_64)-1
	*(($3 + [544])) = [0]
	*(($3 + [548])) = [0]
	*(($3 + [552])) = [0]
	*($3 + [560]) = $0
	*(($4 = ($3 + [568]))) = $0
	*(($3 + [576])) = $0
	*(($3 + [584])) = (int_64)-1
	*(($3 + [592])) = [0]
	*(($3 + [596])) = [0]
	*(($3 + [600])) = [0]
	*(($3 + [608])) = [0]
	*(($3 + [604])) = [0]
	*(($3 + [616])) = $0
	*(($3 + [624])) = $0
	*(($3 + [632])) = $0
	*(($3 + [640])) = (int_64)-1
	*(($3 + [648])) = [0]
	*(($3 + [652])) = [0]
	*(($3 + [656])) = [0]
	*(($3 + [664])) = $0
	*(($3 + [672])) = $0
	*(($3 + [680])) = (int_64)-1
	*(($3 + [688])) = [0]
	*(($3 + [692])) = [0]
	*(($3 + [696])) = [0]
	*(($3 + [704])) = [0]
	*(($3 + [700])) = [0]
	*(($3 + [712])) = $0
	*(($3 + [720])) = $0
	*(($3 + [728])) = (int_64)-1
	*(($3 + [736])) = [0]
	*(($3 + [740])) = [0]
	*(($3 + [744])) = [0]
	*(($3 + [748])) = [0]
	*(($3 + [752])) = $0
	*(($3 + [760])) = $0
	*(($3 + [768])) = (int_64)-1
	*(($3 + [776])) = [0]
	*(($3 + [780])) = [0]
	*(($3 + [784])) = [0]
	*(($3 + [788])) = [0]
	*($3 + [792]) = $0
	*(($3 + [800])) = [1]
	*(($3 + [808])) = (int_64)8238557860461690880
	*(($3 + [816])) = $0
	*(($3 + [824])) = $0
	*(($3 + [832])) = (int_64)-1
	*(($3 + [840])) = [0]
	*(($3 + [844])) = [0]
	*(($3 + [848])) = [0]
	*(($3 + [852])) = [0]
	*(($3 + [856])) = $0
	*(($3 + [864])) = $0
	*(($3 + [872])) = (int_64)-1
	*(($3 + [880])) = [0]
	*(($3 + [884])) = [0]
	*(($3 + [888])) = [0]
	*(($3 + [892])) = [0]
	*(($3 + [896])) = $0
	*(($3 + [904])) = $0
	*(($3 + [912])) = $0
	*(($3 + [920])) = (int_64)-1
	*(($3 + [928])) = [0]
	*(($3 + [932])) = [0]
	*(($3 + [936])) = [0]
	*(($3 + [944])) = $0
	*(($3 + [952])) = $0
	*(($3 + [960])) = (int_64)-1
	*(($3 + [968])) = [0]
	*(($3 + [972])) = [0]
	*(($3 + [976])) = [0]
	*(($3 + [984])) = [0]
	*(($3 + [980])) = [0]
	*(($3 + [992])) = $0
	*(($3 + [1000])) = $0
	*(($3 + [1008])) = (int_64)-1
	*(($3 + [1016])) = [0]
	*(($3 + [1020])) = [0]
	*(($3 + [1024])) = [0]
	*(($3 + [1028])) = [0]
	*(($3 + [1032])) = $0
	*(($3 + [1040])) = $0
	*(($3 + [1048])) = (int_64)-1
	*(($3 + [1056])) = [0]
	*(($3 + [1060])) = [0]
	*(($3 + [1064])) = [0]
	*(($3 + [1068])) = [0]
	*($3 + [1072]) = $0
	*(($3 + [1080])) = $0
	*(($3 + [1088])) = $0
	*(($3 + [1096])) = (int_64)-1
	*(($3 + [1104])) = [0]
	*(($3 + [1108])) = [0]
	*(($3 + [1112])) = [0]
	*(($3 + [1120])) = $0
	*(($3 + [1128])) = $0
	*(($3 + [1136])) = (int_64)-1
	*(($3 + [1144])) = [0]
	*(($3 + [1148])) = [0]
	*(($3 + [1152])) = [0]
	*(($3 + [1160])) = [0]
	*(($3 + [1156])) = [0]
	*(($3 + [1168])) = $0
	*(($3 + [1176])) = $0
	*(($3 + [1184])) = (int_64)-1
	*(($3 + [1192])) = [0]
	*(($3 + [1196])) = [0]
	*(($3 + [1200])) = [0]
	*(($3 + [1204])) = [0]
	*(($3 + [1208])) = $0
	*(($3 + [1216])) = $0
	*(($3 + [1224])) = (int_64)-1
	*(($3 + [1232])) = [0]
	*(($3 + [1236])) = [0]
	*(($3 + [1240])) = [0]
	*(($3 + [1244])) = [0]
	*(($3 + [1248])) = $0
	*(($3 + [1256])) = $0
	*(($3 + [1264])) = $0
	*(($3 + [1272])) = (int_64)-1
	*(($3 + [1280])) = [0]
	*(($3 + [1284])) = [0]
	*(($3 + [1288])) = [0]
	*(($3 + [1296])) = $0
	*(($3 + [1304])) = $0
	*(($3 + [1312])) = $0
	*(($3 + [1320])) = (int_64)-1
	*(($3 + [1328])) = [0]
	*(($3 + [1332])) = [0]
	*(($3 + [1336])) = [0]
	*($3 + [1344]) = $0
	*((($3 + [1456]) + [40])) = (int_64)0
	*($3 + [1480]) = (int_64)0
	*($3 + [1488]) = (int_64)0
	*($3 + [1456]) = (int_64)0
	*($3 + [1464]) = (int_64)0
	*($3 + [1472]) = (int_64)0
	*($3 + [1484]) = [0]
	*($3 + [1488]) = [0]
	CALL $72(($3 + [1408]), $2, $0, ($3 + [1456]))
	if ( ((int_32)*($3 + [1432]) != (int_32)[1]) ){ goto $label$6 }
	CALL eosio_assert([0], [9029])
	
.LABEL $label$6
	*($3 + [1456]) = (int_64)0
	$2 = ($3 + [560])
	CALL $65($2, ($3 + [1384]), ($3 + [1456]), [13936])
	$0 = *($3 + [1384])
	*($3 + [1456]) = $2
	*($3 + [1460]) = ($3 + [1384])
	*($3 + [1464]) = ($3 + [1368])
	*($3 + [1468]) = ($3 + [1352])
	CALL $176(($3 + [1408]), $4, $0, ($3 + [1456]))
	CALL $230(($3 + [16]))
	if ( (*($3 + [1352]) & [1]) ){ goto $label$9 }
	if ( (*($3 + [1368]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $12(*(($3 + [1360])))
	if ( ((*($3 + [1368]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $12(*(($3 + [1376])))
	$global$0 = ($3 + [1504])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [1504])
}