(data (i32.const 4) "`\8b\00\00")
(data (i32.const 32) "000\00")
(data (i32.const 48) "00\00")
(data (i32.const 64) "0\00")
(data (i32.const 80) " EOS\00")
(data (i32.const 96) "tools::EOS_asset_to_string: asset should be in EOS\00")
(data (i32.const 160) ".\00")
(data (i32.const 176) "onerror\00")
(data (i32.const 192) "eosio\00")
(data (i32.const 208) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 272) "eosio.token\00")
(data (i32.const 288) "transfer\00")
(data (i32.const 304) "wizardfights\00")
(data (i32.const 320) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 384) "Only one payed action in one transaction is allowed\00")
(data (i32.const 448) "cannot pass end iterator to erase\00")
(data (i32.const 496) "cannot increment end iterator\00")
(data (i32.const 528) "cannot create objects in table of another contract\00")
(data (i32.const 592) "write\00")
(data (i32.const 608) "object passed to erase is not in multi_index\00")
(data (i32.const 656) "cannot erase objects in table of another contract\00")
(data (i32.const 720) "attempt to remove object that was not in multi_index\00")
(data (i32.const 784) "error reading iterator\00")
(data (i32.const 816) "read\00")
(data (i32.const 832) "cannot pass end iterator to modify\00")
(data (i32.const 880) "object passed to modify is not in multi_index\00")
(data (i32.const 928) "cannot modify objects in table of another contract\00")
(data (i32.const 992) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1056) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1120) "invalid symbol name\00")
(data (i32.const 1152) "get\00")
(data (i32.const 1168) "pvp::getCurrentTransaction: read_transaction failed\00")
(data (i32.const 1232) "active\00")
(data (i32.const 1248) "cancelfight\00")
(data (i32.const 1264) "utilfunc\00")
(data (i32.const 1280) "Can\'t find unclaimed hp for any given wizard\00")
(data (i32.const 1328) "wizardstoken\00")
(data (i32.const 1344) " doesn\'t have wizard \00")
(data (i32.const 1368) "`\05\00\00")
(data (i32.const 1376) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 1424) "unexisted payment\00")
(data (i32.const 1456) "tournament not ended\00")
(data (i32.const 1488) "iterCount should be > 0\00")
(data (i32.const 1520) "pplintourns\00")
(data (i32.const 1536) "\n new startindex: \00")
(data (i32.const 1568) "wizintourns\00")
(data (i32.const 1584) "unable to find key\00")
(data (i32.const 1616) "Inner exception, block not found : \00")
(data (i32.const 1664) "Tournament structure doesn\'t exist. Contact with devs to create it. Tourn id : \00")
(data (i32.const 1744) "tournament structure doesn\'t exist. Contact with devs to create it. Id : \00")
(data (i32.const 1824) "cleartrndata\00")
(data (i32.const 1840) "inner exception, ppvp is null\00")
(data (i32.const 1872) "tournament {\00")
(data (i32.const 1888) "} not found\00")
(data (i32.const 1904) "tournament ended\00")
(data (i32.const 1936) "fight cannot be started now\00")
(data (i32.const 1968) "pvp::runFight: unknown battle_type\00")
(data (i32.const 2016) "unknown enum\00")
(data (i32.const 2032) "bad tournament state before IceAge\00")
(data (i32.const 2080) "preptrnbatl\00")
(data (i32.const 2096) "\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 2112) "unkown size of removed ids\00")
(data (i32.const 2144) "solo wins not allowed. Contact with devs\00")
(data (i32.const 2192) "pvp::sendlog: battle must be done\00")
(data (i32.const 2240) "payhonor\00")
(data (i32.const 2256) "inner exception. tWizInTourn. WizInT not found : \00")
(data (i32.const 2320) "AddWinToWizard:internal error: no state record for this wizard in specified tournament\00")
(data (i32.const 2416) "vector of ids bigger than wiz_in_block const\00")
(data (i32.const 2464) "cannot add wiz on lvl : \00")
(data (i32.const 2496) ", tournstrctid : \00")
(data (i32.const 2528) ", cur size: \00")
(data (i32.const 2544) "wrong tables. level :\00")
(data (i32.const 2576) ", block: \00")
(data (i32.const 2592) "todo nextid\00")
(data (i32.const 2608) "internal error: no state record for this wizard in specified tournament\00")
(data (i32.const 2688) "DropWizard: wizard already dropped from tournament\00")
(data (i32.const 2752) "nexttrnbatl\00")
(data (i32.const 2768) "there is no last winners in tournament. Cannot pay to winners\00")
(data (i32.const 2832) "graztrnwinrs\00")
(data (i32.const 2848) "multiplication overflow\00")
(data (i32.const 2880) "multiplication underflow\00")
(data (i32.const 2912) "divide by zero\00")
(data (i32.const 2928) "signed division overflow\00")
(data (i32.const 2960) "game.wizards.one - Reward for getting \00")
(data (i32.const 3008) " place in the tournament \00")
(data (i32.const 3040) "amount should be > 0\00")
(data (i32.const 3072) "proctransfer\00")
(data (i32.const 3088) "transfer should be in EOS\00")
(data (i32.const 3152) "read_transaction failed\00")
(data (i32.const 3184) "inner exception. wiztournstate. WizInT not found : \00")
(data (i32.const 3248) "internal exception in tourament table. Contact with devs. T_id: \00")
(data (i32.const 3328) "Cannot remove wizards after IceAge\00")
(data (i32.const 3376) "RemoveWizard: no such wizard in specified tournament\00")
(data (i32.const 3440) "RemoveWizard: internal error, no state record for this wizard in specified tournament\00")
(data (i32.const 3536) "RemoveWizard: wizard should be dropped from the tournament\00")
(data (i32.const 3600) "entertotourn\00")
(data (i32.const 3616) "limit:max_wiz, cannot registarte in that tourn enymore\00")
(data (i32.const 3680) "registration for that tournament is not open\00")
(data (i32.const 3728) "registration for that tournament is closed\00")
(data (i32.const 3776) "limit:max_uniq_wiz_from_acc, user cannot add new uniq wizards to that tournament\00")
(data (i32.const 3872) "limit:enter_limit_for_acc, user cannot enter that tournament anymore\00")
(data (i32.const 3952) "Inner exeption. wizint : \00")
(data (i32.const 3984) " uses bad state id: \00")
(data (i32.const 4016) "wizard {\00")
(data (i32.const 4032) "} already in tournament {\00")
(data (i32.const 4064) "}\00")
(data (i32.const 4080) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 4144) "You should pay for enter at least \00")
(data (i32.const 4192) "fee from entire to game.wizards.one tournament {\00")
(data (i32.const 4256) "}, user: \00")
(data (i32.const 4272) "attempt to subtract asset with different symbol\00")
(data (i32.const 4320) "subtraction underflow\00")
(data (i32.const 4352) "subtraction overflow\00")
(data (i32.const 4384) "attempt to add asset with different symbol\00")
(data (i32.const 4432) "addition underflow\00")
(data (i32.const 4464) "addition overflow\00")
(data (i32.const 4496) "pvp::checkTrans: Wrong parametres to that action was send\00")
(data (i32.const 4560) "pvp::checkTrans: wrong number of actions in transaction. Should be two, where first should be eosio.token::transfer\00")
(data (i32.const 4688) "pvp::checkTrans: wrong second action smart contract executor, should be wizardfights, first should be eosio.token::transfer\00")
(data (i32.const 4816) "pvp::checkTrans: inner exception. Check call params. Method should be \00")
(data (i32.const 4896) "pvp::checkTrans: First action should be exactly eosio.token::transfer\00")
(data (i32.const 4976) "pvp::checkTrans: only one payed action is allowed\00")
(data (i32.const 5040) "singleton does not exist\00")
(data (i32.const 5072) "old payment cannot be used\00")
(data (i32.const 5104) "pvp::checkTrans: Bad stored action code: \00")
(data (i32.const 5152) ", action: \00")
(data (i32.const 5168) ", receiver: \00")
(data (i32.const 5184) "pvp::checkTrans: wrong payer\00")
(data (i32.const 5216) "pvp::checkTrans: wrong asset recepient\00")
(data (i32.const 5264) "pvp::checkTrans: payment should not be zero\00")
(data (i32.const 5312) "pvp::checkTrans: payment should be in EOS\00")
(data (i32.const 5360) "andreymaugry\00")
(data (i32.const 5376) "opcheese1234\00")
(data (i32.const 5392) "auth requred\00")
(data (i32.const 5408) "createtourn\00")
(data (i32.const 5424) "comission for creating tournament should be more than \00")
(data (i32.const 5488) "inner ecxeption. Cannot create tournament structure\00")
(data (i32.const 5552) "tourn_name shold be not empty\00")
(data (i32.const 5584) "tourn_description shold be not empty\00")
(data (i32.const 5632) "creator is unknown!\00")
(data (i32.const 5664) "start_reg_date should be in future! Now is \00")
(data (i32.const 5712) " your is \00")
(data (i32.const 5728) "stop_reg_date shouldn be in future! Now is \00")
(data (i32.const 5776) "start_fight_date shouldn be in future! Now is \00")
(data (i32.const 5824) "prize should be no zero and should be in EOS! your : \00")
(data (i32.const 5888) "prize_distribution should be vector with percent distribution, which sum must be 100. Your is \00")
(data (i32.const 5984) "enter_stake should be no zero and should be in EOS!\00")
(data (i32.const 6048) "fee_from_stake should be [0,100]%, 0 - all to prize, 100 - all to fe_too\00")
(data (i32.const 6128) "fe_too shold be not 0\00")
(data (i32.const 6160) "There are minimal 10 limits in tournament. Look at sources.\00")
(data (i32.const 6224) "prize_distribution should be [0,1], 0 - one winner, 1 - log distribution\00")
(data (i32.const 6304) "only one tournament structure is avaliable now. Contact with devs for more.\00")
(data (i32.const 6384) "battle_delay should be positive\00")
(data (i32.const 6416) "there\'s no honor points to claim\00")
(data (i32.const 6464) "wizardrandom\00")
(data (i32.const 6480) "requirerand\00")
(data (i32.const 6496) "pvp::checkCoolDown: wizard is not on cooldown\00")
(data (i32.const 6544) "pvp::checkCoolDown: wizard is still on cooldown, wait about \00")
(data (i32.const 6608) " seconds; or call resetwizcd(fighterWizId : \00")
(data (i32.const 6656) ") with pay for reset\00")
(data (i32.const 6688) "pvp::resetCooldown: wizard is not on cooldown\00")
(data (i32.const 6736) "resetwizcd\00")
(data (i32.const 6752) "pvp::resetCooldown: not enough pay.should be >= than \00")
(data (i32.const 6816) "pvp::denyfight: fight doesn\'t exist\00")
(data (i32.const 6864) "pvp::denyfight: should be one tran with deny battle\00")
(data (i32.const 6928) "pvp::denyfight: you cannot deny that fight\00")
(data (i32.const 6976) "fight doesn\'t exist\00")
(data (i32.const 7008) "game.wizards.one - Refund for the canceled PvP battle.\00")
(data (i32.const 7072) "pvp::processFight: fight doesn\'t exist\00")
(data (i32.const 7120) "pvp::processFight target for arena should be not zero\00")
(data (i32.const 7184) "pvp::processFight wrong wizard own\00")
(data (i32.const 7232) "pvp::processFight: fighters changed their owners. Battle is not valid. Decline that battle\00")
(data (i32.const 7328) "acceptarena\00")
(data (i32.const 7344) "acceptfight\00")
(data (i32.const 7360) "pvp::processFight: stake should be >= than \00")
(data (i32.const 7408) ". Use eosio::transfer to wizardfights in first action to send stake\00")
(data (i32.const 7488) "game.wizards.one - Reward for winning in the \00")
(data (i32.const 7536) "arena battle!\00")
(data (i32.const 7552) "PvP battle!\00")
(data (i32.const 7568) "pvp::setCooldown: internal error, contains same wizard\00")
(data (i32.const 7632) "next primary key in table is at autoincrement limit\00")
(data (i32.const 7696) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 7760) "cannot decrement iterator at beginning of table\00")
(data (i32.const 7808) "pvp::cancelfight: challenger auth require\00")
(data (i32.const 7856) "pvp::regstrfight: you cannot fight yourself\00")
(data (i32.const 7904) "pvp::regstrfight: battle_type should be 0 (different genom index) or 1 (possible same genom index) or 2 (rags fight)\00")
(data (i32.const 8032) "regstrfight\00")
(data (i32.const 8048) "createarena\00")
(data (i32.const 8064) "handlereg\00")
(data (i32.const 8080) "not enouth permission\00")
(data (i32.const 8112) "\n[\00")
(data (i32.const 8128) "]\n\00")
(data (i32.const 8144) ", \00")
(data (i32.const 8160) "pvp::findFight: you should choose enemy wizrad id\00")
(data (i32.const 16608) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 16704) "%d\00")
(data (i32.const 16720) "%lld\00")
(data (i32.const 16736) "%llu\00")
(data (i32.const 16752) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 17216) "0123456789ABCDEF")
(data (i32.const 17232) "-+   0X0x\00")
(data (i32.const 17248) "(null)\00")
(data (i32.const 17264) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 17296) "inf\00")
(data (i32.const 17312) "INF\00")
(data (i32.const 17328) "nan\00")
(data (i32.const 17344) "NAN\00")
(data (i32.const 17360) ".\00")
(data (i32.const 17376) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 17472) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__multi3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$12))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "cancel_deferred" (func $fimport$14 (param i32) (result i32)))
(import "env" "current_receiver" (func $fimport$15 (result i64)))
(import "env" "current_time" (func $fimport$16 (result i64)))
(import "env" "db_end_i64" (func $fimport$17 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$20 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$21 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$23 (param i32)))
(import "env" "db_idx64_store" (func $fimport$24 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$25 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$26 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$29 (param i32)))
(import "env" "db_store_i64" (func $fimport$30 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$31 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$32 (param i32 i32)))
(import "env" "has_auth" (func $fimport$33 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$34 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$35 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$36 (param i32 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$37 (param i32)))
(import "env" "printui" (func $fimport$38 (param i64)))
(import "env" "read_action_data" (func $fimport$39 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$40 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$41 (param i64)))
(import "env" "require_auth2" (func $fimport$42 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$43 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$44 (param i32 i32)))
(import "env" "sha1" (func $fimport$45 (param i32 i32 i32)))
(import "env" "sha256" (func $fimport$46 (param i32 i32 i32)))
(import "env" "tapos_block_prefix" (func $fimport$47 (result i32)))
(import "env" "transaction_size" (func $fimport$48 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_Z13getVectorHashNSt3__16vectorIyNS_9allocatorIyEEEE" (func $5))
(export "_Z18getFilterWithHash2yyhh" (func $6))
(export "_Z6formatv" (func $7))
(export "_Z7getLog2m" (func $8))
(export "_Z7getPow2h" (func $9))
(export "_Z19EOS_asset_to_stringN5eosio5assetE" (func $10))
(export "apply" (func $13))
(export "_ZN3pvp11regstrfightEyyyyN5eosio5assetEhm" (func $17))
(export "_ZN3pvp11createarenaEyyN5eosio5assetEh" (func $19))
(export "_ZN3pvp9handleregE5fight" (func $21))
(export "_ZN3pvp11cancelfightEy" (func $23))
(export "_ZN3pvp11acceptfightEy" (func $25))
(export "_ZN3pvp11acceptarenaEyyy" (func $26))
(export "_ZN3pvp9denyfightEy" (func $28))
(export "_ZN3pvp8payhonorE5tinfoyyyyhy11fight_log_s" (func $29))
(export "_ZN3pvp10resetwizcdEy" (func $31))
(export "_ZN3pvp10checkwizcdEy" (func $32))
(export "_ZN3pvp10cleanwizcdEt" (func $33))
(export "_ZN3pvp10claimhonorEyy" (func $35))
(export "_ZN3pvp11createtournE9tourninfo" (func $37))
(export "_ZN3pvp12entertotournEyyy" (func $39))
(export "_ZN3pvp11updatetournEy" (func $40))
(export "_ZN3pvp12rmvwizfrmtrnEyyy" (func $41))
(export "_ZN3pvp12resdefbattrnEy" (func $42))
(export "_ZN3pvp11nexttrnbatlEy" (func $43))
(export "_ZN3pvp11preptrnbatlEyhyyy" (func $44))
(export "_ZN3pvp12cleartrndataEyyth" (func $46))
(export "_ZN3pvp12proctransferEy11checksum256" (func $48))
(export "_ZN3pvp12graztrnwinrsEyNSt3__16vectorIyNS0_9allocatorIyEEEENS1_ItNS2_ItEEEE" (func $50))
(export "_ZN3pvp11claimhpsidsEyNSt3__16vectorIyNS0_9allocatorIyEEEE" (func $52))
(export "_ZN3pvp11claimallhpsEyyy" (func $54))
(export "_ZN3pvp8utilfuncEy" (func $55))
(export "_ZN3pvp5applyEyyy" (func $56))
(export "_ZN3pvp21getCurrentTransactionEv" (func $59))
(export "_ZN3pvp17checkAndGetWizardEyyR6wizardb" (func $102))
(export "_ZN3pvp8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $121))
(export "_ZN11CTournament7FactoryEP3pvpy" (func $129))
(export "_ZN11CTournament9ClearDataEyth" (func $130))
(export "_ZN11CTournament9SendClearEyth" (func $133))
(export "_ZN15CTournStructure14ClearStructureEv" (func $142))
(export "_ZN15CTournStructure4initEb" (func $143))
(export "_ZN11CTournament17ProcessNextBattleEv" (func $183))
(export "_ZN11CTournament13GetNextBattleEv" (func $184))
(export "_ZN11CTournament10PayWinnersEv" (func $186))
(export "_ZN11CTournament17AddDefferedBattleE12unsigned_int" (func $187))
(export "_ZN11CTournament8AddLoserEyb" (func $188))
(export "_ZN15CTournStructure13AddWizToLevelEiNSt3__16vectorIyNS0_9allocatorIyEEEEb" (func $189))
(export "_ZN11CTournament14AddWinToWizardERKy" (func $190))
(export "_ZN11CTournament16WizardByWizInTIdERKy" (func $191))
(export "_ZN3pvp16runFightGenotypeERK12fight_wizardS2_R9fight_logh" (func $193))
(export "_ZN3pvp17runFightPhenotypeERK12fight_wizardS2_R9fight_logh" (func $194))
(export "_ZN3pvp7sendlogER9fight_logR5tinfo" (func $195))
(export "_ZN15CTournStructure8GetNext2EbRNSt3__16vectorIyNS0_9allocatorIyEEEERy" (func $196))
(export "_ZN15CTournStructure16remove_from_headEiiRNSt3__16vectorIyNS0_9allocatorIyEEEE" (func $200))
(export "_ZN3pvp22runFightRoundPhenotypeERK12fight_wizardS2_RiS3_R9fight_logi" (func $217))
(export "_ZN3pvp23initFightRoundPhenotypeER13fight_round_sRK12fight_wizardS4_i" (func $218))
(export "_ZN3pvp14pickAttributesERib" (func $220))
(export "_ZN3pvp21runFightRoundGenotypeERK12fight_wizardS2_RiS3_S3_S3_R9fight_logi" (func $221))
(export "_ZN3pvp22initFightRoundGenotypeER13fight_round_sRK12fight_wizardS4_Rii" (func $222))
(export "_ZN15CTournStructure12create_layerEiNSt3__16vectorIyNS0_9allocatorIyEEEE" (func $225))
(export "_ZN15CTournStructure12create_blockENSt3__16vectorIyNS0_9allocatorIyEEEE" (func $229))
(export "_ZN11CTournament6nextIdEi" (func $233))
(export "_ZN11CTournament10DropWizardERKy" (func $256))
(export "_ZN11CTournament10updateInfoEv" (func $261))
(export "_ZN11CTournament21WizardStateByWizInTIdERKy" (func $262))
(export "_ZN3pvp20prepareDeferTransferEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $266))
(export "_ZN3pvp17calc_cur_trans_idEv" (func $270))
(export "_ZN3pvp6nextIdEb" (func $271))
(export "_ZN12fight_wizardC2E6wizard" (func $304))
(export "_ZN11CTournament12RemoveWizardERK12fight_wizard" (func $305))
(export "_ZN11CTournamentD2Ev" (func $306))
(export "_ZNK12fight_wizard15getRagLegendaryERKhS1_" (func $309))
(export "_ZN3pvp29checkFirstTransferTransactionEyyb" (func $314))
(export "_ZN11CTournament11EnterWizardEN5eosio5assetEyRK12fight_wizard" (func $315))
(export "_ZN11CTournament10enter_userEN5eosio5assetEyRK12fight_wizardRb" (func $316))
(export "_ZN11CTournament16CreateTournamentEP3pvpP9tourninfo" (func $346))
(export "_ZN15CTournStructure15CreateStructureEv" (func $348))
(export "_ZN3pvp18checkCooldownInnerEyb" (func $361))
(export "_ZN3pvp13doCancelFightERN5eosio11multi_indexILy6600268108542246912E5fightJNS0_10indexed_byILy4409831333891670016EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_19both_wizs_res_btypeEvEEEEEENS3_ILy6295342335517523968ENS6_IS2_yXadL_ZNKS2_8existingEvEEEEEEEE14const_iteratorE" (func $377))
(export "_ZN3pvp12processFightEyyy" (func $379))
(export "_ZN3pvp11setCooldownEyyy" (func $380))
(export "_ZN3pvp11createFightEyRK6wizardyS2_RN5eosio5assetES5_hm" (func $389))
(export "_ZN3pvp15logregistrationERK5fight" (func $391))
(export "_Z14calc_rag_priceRK7ragdisth" (func $399))
(export "_ZN11CTournamentC2EP3pvpP9tourninfo" (func $400))
(export "_ZN11CTournament15CreateStructureEv" (func $401))
(export "_ZN11CTournament20PayedHonorPointTournEP3pvpy" (func $402))
(export "_ZN11CTournament10UpdateInfoEv" (func $403))
(export "_ZN3pvp8runFightER5fightR9fight_log" (func $404))
(export "_ZN15CTournStructure6reinitEv" (func $405))
(export "_ZN15CTournStructure8block_atEy" (func $406))
(export "_ZN15CTournStructure9printsizeEv" (func $408))
(export "_ZN3pvp9clearlogsEv" (func $409))
(export "_ZN3pvp15getWizOffenceAtERK12fight_wizardi" (func $410))
(export "_ZN3pvp16getWizDeffenceAtERK12fight_wizardi" (func $411))
(export "_ZNK12fight_wizard12calcRagPowerERKh" (func $412))
(export "_ZNK12fight_wizard14getRagCoolDownERKh" (func $413))
(export "_ZNK12fight_wizard11getCoolDownEv" (func $414))
(export "_ZN3pvp9findFightEyRK6wizardyh" (func $415))
(export "_ZN3pvp11fightExistsEy" (func $418))
(export "_ZN3pvp21runCalcDamageGenotypeER13fight_round_s" (func $420))
(export "_ZN3pvp29initPhenotypeFightRoundMinMaxERK12fight_wizardRKhRhS5_i" (func $421))
(export "_ZN3pvp22runCalcDamagePhenotypeER13fight_round_s" (func $422))
(export "_ZN3pvp8runFightERK12fight_wizardS2_hR9fight_log" (func $423))
(export "malloc" (func $424))
(export "free" (func $427))
(export "_ZNSt3__19to_stringEi" (func $440))
(export "_ZNSt3__19to_stringEx" (func $443))
(export "_ZNSt3__19to_stringEy" (func $444))
(export "trunc" (func $448))
(export "snprintf" (func $449))
(export "vsnprintf" (func $450))
(export "__errno_location" (func $452))
(export "vfprintf" (func $453))
(export "__lockfile" (func $455))
(export "__unlockfile" (func $456))
(export "__fwritex" (func $457))
(export "strerror" (func $459))
(export "strnlen" (func $460))
(export "wctomb" (func $461))
(export "__signbitl" (func $462))
(export "__fpclassifyl" (func $463))
(export "frexpl" (func $464))
(export "wcrtomb" (func $465))
(export "memchr" (func $466))
(export "__lctrans" (func $467))
(export "__lctrans_impl" (func $468))
(export "__mo_lookup" (func $469))
(export "strcmp" (func $470))
(export "__towrite" (func $471))
(export "memcmp" (func $472))
(export "strlen" (func $473))
(table $0 28 28 anyfunc)
(elem (i32.const 0) $474 $55 $39 $29 $54 $41 $37 $17 $33 $25 $21 $40 $28 $15 $43 $23 $32 $42 $31 $46 $19 $44 $48 $35 $52 $26 $50 $451)



int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

void .FUNC _ZN3pvp8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [128])
	*([0] + [4]) = $12
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1232]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [272]
	$10 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$7 > (uint_64)(int_64)10) ){ goto $label$12 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$9 = (int_64)0
	if ( ((int_64)$7 == (int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$8
	$5 = ($5 + [1])
	$6 = ((int_64)$6 + (int_64)-5)
	$10 = ((int_64)$9 | (int_64)$10)
	$7 = ((int_64)$7 + (int_64)1)
	if ( ((int_64)$7 != (int_64)13) ){ goto $label$7 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [288]
	$11 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$7 > (uint_64)(int_64)7) ){ goto $label$18 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$4 = ($4 + [165])
	goto $label$16 
	
.LABEL $label$18
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$14
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$13 }
	*((($12 + [8]) + [28])) = *(($2 + [12]))
	*((($12 + [8]) + [24])) = *(($2 + [8]))
	*((($12 + [8]) + [20])) = *(($2 + [4]))
	*($12 + [16]) = $1
	*($12 + [8]) = $0
	*($12 + [24]) = *($2)
	CALL $446((($12 + [8]) + [32]), $3)
	*($12 + [64]) = $11
	*($12 + [56]) = $10
	*(($5 = CALL $428([16]))) = $0
	*($5 + [8]) = $8
	*((($12 + [56]) + [32])) = [0]
	$4 = ($5 + [16])
	*((($12 + [56]) + [24])) = $4
	*((($12 + [56]) + [20])) = $4
	*($12 + [72]) = $5
	*($12 + [84]) = [0]
	*((($12 + [56]) + [36])) = [0]
	$5 = *($12 + [40])
	$4 = ( *((($12 + [8]) + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($4 + [32])
	$7 = (CASTING uint_64)(uint_32 $4)
	$4 = (($12 + [56]) + [28])
	
.LOOP $label$19:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$19 }
	if ( ($5 == 0) ){ goto $label$21 }
	CALL $76($4, $5)
	$4 = *(($12 + [88]))
	$5 = *(($12 + [84]))
	goto $label$20 
	
.LABEL $label$21
	$4 = [0]
	$5 = [0]
	
.LABEL $label$20
	*($12 + [100]) = $5
	*($12 + [96]) = $5
	*($12 + [104]) = $4
	*($12 + [112]) = ($12 + [96])
	*($12 + [120]) = ($12 + [8])
	CALL $123(($12 + [120]), ($12 + [112]))
	CALL $85(($12 + [96]), ($12 + [56]))
	$5 = *($12 + [96])
	CALL send_inline($5, (*($12 + [100]) - $5))
	$5 = *($12 + [96])
	if ( ($5 == 0) ){ goto $label$22 }
	*($12 + [100]) = $5
	CALL $430($5)
	
.LABEL $label$22
	$5 = *($12 + [84])
	if ( ($5 == 0) ){ goto $label$23 }
	*(($12 + [88])) = $5
	CALL $430($5)
	
.LABEL $label$23
	$5 = *($12 + [72])
	if ( ($5 == 0) ){ goto $label$24 }
	*(($12 + [76])) = $5
	CALL $430($5)
	
.LABEL $label$24
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$25 }
	CALL $430(*(($12 + [48])))
	
.LABEL $label$25
	*([0] + [4]) = ($12 + [128])
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $428([56])
	$4 = CALL $125($6)
	*($6 + [44]) = $0
	CALL $126(($8 + [32]), $4)
	*($6 + [48]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [48])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $127(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $430(*(($4 + [40])))
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $364 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*(($10 + [24])) = [0]
	*($10 + [16]) = (int_64)0
	$6 = CALL strlen($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($10 + [16]) = ($6 << [1])
	$9 = (($10 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($6 + [16]) & [-16])
	$9 = CALL $428($7)
	*($10 + [16]) = ($7 | [1])
	*($10 + [24]) = $9
	*($10 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($9, $1, $6)
	
.LABEL $label$2
	*(($9 + $6)) = [0]
	CALL $366($10, $2, $3, $4, $5)
	$6 = *($10)
	$9 = ($6 & [1])
	$6 = CALL $436(($10 + [16]), ( *($10 + [8]) ? ($10 | [1]) : $9 ), ( *($10 + [4]) ? uint_32($6 >> [1]) : $9 ))
	$8 = *($6)
	*($6) = (int_64)0
	*($0) = $8
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($10) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($10 + [8])))
	
.LABEL $label$5
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($10 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($10 + [16]))
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [27]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $74($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN15CTournStructure13AddWizToLevelEiNSt3__16vectorIyNS0_9allocatorIyEEEEb (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [112])
	*([0] + [4]) = $10
	*($10 + [92]) = $1
	*($10 + [91]) = $3
	CALL eosio_assert((int_32((*($2 + [4]) - *($2)) >> [3]) <= [256]), [2416])
	CALL _ZN15CTournStructure4initEb($0, [1])
	$3 = *(($0 + [8]))
	$9 = int_32((*(($3 + [20])) - *($3 + [16])) >> [5])
	*($10 + [84]) = $9
	CALL $224(($10 + [48]), [2464], ($10 + [92]), [2496], $3, [2528], ($10 + [84]))
	$1 = ((int_32)$9 >= (int_32)$1)
	$3 = (*($10 + [48]) & [1])
	$8 = *($10 + [56])
	$9 = ( $8 ? (($10 + [48]) | [1]) : $3 )
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $430($8)
	
.LABEL $label$1
	CALL eosio_assert($1, $9)
	$1 = *($10 + [92])
	$3 = *($10 + [84])
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$6 }
	*($10 + [40]) = [0]
	*($10 + [32]) = (int_64)0
	$1 = (*(($2 + [4])) - *($2))
	$9 = int_32($1 >> [3])
	if ( ($9 == 0) ){ goto $label$7 }
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$5 }
	$1 = CALL $428($1)
	*(($10 + [40])) = ($1 + ($9 << [3]))
	*($10 + [32]) = $1
	*($10 + [36]) = $1
	$2 = *($2)
	$9 = (*(($2 + [4])) - $2)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($1, $2, $9)
	*($10 + [36]) = (*($10 + [36]) + $9)
	
.LABEL $label$7
	CALL _ZN15CTournStructure12create_layerEiNSt3__16vectorIyNS0_9allocatorIyEEEE(($10 + [48]), $0, $3, ($10 + [32]))
	$1 = *($10 + [32])
	if ( ($1 == 0) ){ goto $label$8 }
	*($10 + [36]) = $1
	CALL $430($1)
	
.LABEL $label$8
	$1 = *(($0 + [8]))
	$6 = *($0 + [16])
	$3 = *($0 + [12])
	*($10 + [96]) = ($10 + [48])
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [832])
	CALL $226($3, $1, $6, ($10 + [96]))
	*($0 + [24]) = [0]
	CALL _ZN15CTournStructure4initEb($0, [1])
	goto $label$2 
	
.LABEL $label$6
	$1 = (*(*(($0 + [8])) + [16]) + ($1 << [5]))
	*((($10 + [48]) + [28])) = *(($1 + [28]))
	*((($10 + [48]) + [24])) = *(($1 + [24]))
	*((($10 + [48]) + [20])) = *(($1 + [20]))
	*(($3 = (($10 + [48]) + [16]))) = *(($1 + [16]))
	*((($10 + [48]) + [12])) = *(($1 + [12]))
	*(($5 = (($10 + [48]) + [8]))) = *(($1 + [8]))
	*($10 + [48]) = *($1)
	*($10 + [52]) = *(($1 + [4]))
	*($3) = ((int_64)(CASTING uint_64)(uint_32 int_32((*(($2 + [4])) - *($2)) >> [3])) + (int_64)*($3))
	$6 = *($5)
	$7 = *(($4 + [208]))
	$4 = *($0)
	$9 = *(($4 + [212]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$9 }
	$1 = ($9 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$10:
	if ( ((int_64)*(*($1)) == (int_64)$6) ){ goto $label$9 }
	$9 = $1
	$3 = ($1 + [-24])
	$1 = $3
	if ( ((int_32)($3 + $8) != (int_32)[-24]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = ($4 + [184])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$12 }
	$1 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$3), [320])
	goto $label$11 
	
.LABEL $label$12
	$1 = [0]
	$9 = CALL db_find_i64(*(($4 + [184])), *(($4 + [192])), (int_64)-3659885401779982336, $6)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	$1 = CALL $146($3, $9)
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$3), [320])
	
.LABEL $label$11
	CALL $227(($10 + [96]), [2544], ($10 + [92]), [2496], *(($0 + [8])), [2576], $5)
	$9 = (*($10 + [96]) & [1])
	$4 = *($10 + [104])
	$8 = ( $4 ? (($10 + [96]) | [1]) : $9 )
	$3 = ((int_32)$1 != (int_32)[0])
	if ( ($9 == 0) ){ goto $label$13 }
	CALL $430($4)
	
.LABEL $label$13
	CALL eosio_assert($3, $8)
	if ( *($10 + [91]) ){ goto $label$15 }
	$8 = (*(($2 + [4])) - *($2))
	$9 = int_32($8 >> [3])
	if ( ((uint_32)($9 + int_32((*(($1 + [12])) - *($1 + [8])) >> [3])) > (uint_32)[256]) ){ goto $label$14 }
	
.LABEL $label$15
	$6 = *($0 + [16])
	$9 = *($0)
	*($10 + [100]) = $2
	*($10 + [96]) = ($10 + [91])
	CALL eosio_assert($3, [832])
	CALL $228(($9 + [184]), $1, $6, ($10 + [96]))
	goto $label$3 
	
.LABEL $label$14
	*($10 + [24]) = [0]
	*($10 + [16]) = (int_64)0
	if ( ($9 == 0) ){ goto $label$16 }
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$4 }
	$8 = CALL $428($8)
	*(($10 + [24])) = ($8 + ($9 << [3]))
	*($10 + [16]) = $8
	*($10 + [20]) = $8
	$2 = *($2)
	$9 = (*(($2 + [4])) - $2)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($8, $2, $9)
	*($10 + [20]) = (*($10 + [20]) + $9)
	
.LABEL $label$16
	$6 = CALL _ZN15CTournStructure12create_blockENSt3__16vectorIyNS0_9allocatorIyEEEE($0, ($10 + [16]))
	$9 = *($10 + [16])
	if ( ($9 == 0) ){ goto $label$17 }
	*($10 + [20]) = $9
	CALL $430($9)
	
.LABEL $label$17
	*($10 + [96]) = $6
	$6 = *($0 + [16])
	$9 = *($0)
	*($10 + [8]) = ($10 + [96])
	CALL eosio_assert($3, [832])
	CALL $230(($9 + [184]), $1, $6, ($10 + [8]))
	*(($10 + [56])) = *($10 + [96])
	goto $label$3 
	
.LABEL $label$5
	CALL $445(($10 + [32]))
	
.LABEL $label$4
	CALL $445(($10 + [16]))
	
.LABEL $label$3
	$6 = *(($0 + [16]))
	$1 = *(($0 + [8]))
	$0 = *($0 + [12])
	*($10 + [100]) = ($10 + [48])
	*($10 + [96]) = ($10 + [92])
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [832])
	CALL $231($0, $1, $6, ($10 + [96]))
	
.LABEL $label$2
	*([0] + [4]) = ($10 + [112])
	(unreachable)
	(unreachable)
}

void .FUNC _ZN11CTournament8AddLoserEyb (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*($7 + [16]) = $1
	CALL _ZN11CTournament10DropWizardERKy($0, ($7 + [16]))
	if ( ($2 == 0) ){ goto $label$1 }
	$1 = *(*($0 + [4]))
	$3 = *(($0 + [288]))
	$6 = *(($0 + [292]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$2 }
	$2 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$2 }
	$6 = $2
	$5 = ($2 + [-24])
	$2 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = ($0 + [264])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$6 }
	$2 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [20]) == (int_32)$5), [320])
	if ( $2 ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$2 = CALL db_find_i64(*(($0 + [264])), *(($0 + [272])), (int_64)-8524864589369311232, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$2 = CALL $140($5, $2)
	CALL eosio_assert(((int_32)*($2 + [20]) == (int_32)$5), [320])
	goto $label$4 
	
.LABEL $label$5
	$1 = *($0 + [16])
	*($7 + [8]) = $0
	*($7 + [56]) = $1
	CALL eosio_assert(((int_64)*(($0 + [264])) == (int_64)CALL $fimport$15()), [528])
	*($7 + [32]) = $5
	*($7 + [36]) = ($7 + [8])
	*($7 + [40]) = ($7 + [56])
	*(($2 = CALL $428([32])) + [16]) = [0]
	*($2 + [8 align=4]) = (int_64)0
	*($2 + [20]) = $5
	CALL $257(($7 + [32]), $2)
	*($7 + [48]) = $2
	$1 = *($2)
	*($7 + [32]) = $1
	$4 = *($2 + [24])
	*($7 + [28]) = $4
	$3 = ($0 + [292])
	$6 = *($3)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [296]))) ){ goto $label$8 }
	*($6 + [8]) = $1
	*($6 + [16]) = $4
	*($7 + [48]) = [0]
	*($6) = $2
	*($3) = ($6 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $157(($0 + [288]), ($7 + [48]), ($7 + [32]), ($7 + [28]))
	
.LABEL $label$7
	$6 = *($7 + [48])
	*($7 + [48]) = [0]
	if ( ($6 == 0) ){ goto $label$4 }
	$4 = *($6 + [8])
	if ( ($4 == 0) ){ goto $label$9 }
	*(($6 + [12])) = $4
	CALL $430($4)
	
.LABEL $label$9
	CALL $430($6)
	
.LABEL $label$4
	$6 = *(($0 + [4]))
	*($7 + [56]) = (([1] << (int_32((*(($6 + [100])) - *($6 + [96])) >> [2]) + [-1])) + [1])
	$1 = *(($0 + [16]))
	*($7 + [36]) = ($7 + [56])
	*($7 + [32]) = ($7 + [16])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [832])
	CALL $258($5, $2, $1, ($7 + [32]))
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [64])
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [176])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($7 + [72])) = (int_64)0
	*((($7 + [32]) + [32])) = (int_64)0
	*((($7 + [32]) + [24])) = (int_64)0
	*($7 + [48]) = (int_64)0
	*($7 + [32]) = (int_64)0
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [816])
	CALL memcpy(($7 + [32]), $5, [8])
	CALL eosio_assert(((uint_32)($3 + [-8]) > (uint_32)[31]), [816])
	$1 = (($7 + [32]) + [16])
	CALL memcpy($1, ($5 + [8]), [32])
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	*(($3 = (($7 + [80]) + [24]))) = *(($1 + [24]))
	*(($5 = (($7 + [80]) + [16]))) = *(($1 + [16]))
	$4 = *($7 + [32])
	*($7 + [80]) = *($1)
	*($7 + [92]) = *(($1 + [12]))
	*($7 + [88]) = *(($1 + [8]))
	*((($7 + [112]) + [24])) = *($3)
	*((($7 + [112]) + [16])) = *($5)
	*($7 + [120]) = *($7 + [88])
	*($7 + [112]) = *($7 + [80])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	*(($3 = (($7 + [144]) + [24]))) = *((($7 + [112]) + [24]))
	*(($5 = (($7 + [144]) + [16]))) = *((($7 + [112]) + [16]))
	*($7 + [152]) = *($7 + [120])
	*($7 + [144]) = *($7 + [112])
	*(($7 + [24])) = *($3)
	*(($7 + [16])) = *($5)
	*($7) = *($7 + [144])
	*($7 + [8]) = *($7 + [152])
	CALL void $1((int_32 $4), (int_64 $7), (int_32 $6))
	*([0] + [4]) = ($7 + [176])
	return [1]
}

void .FUNC _ZN3pvp12proctransferEy11checksum256 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	*([0] + [4]) = $12
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	$4 = *(($0 + [280]))
	$11 = *(($0 + [284]))
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$5 }
	$6 = ($11 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$6:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$5 }
	$11 = $6
	$3 = ($6 + [-24])
	$6 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$3 = ($0 + [256])
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$8 }
	$6 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [44]) == (int_32)$3), [320])
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	$11 = CALL db_find_i64(*(($0 + [256])), *(($0 + [264])), (int_64)6138858854829391872, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $120($3, $11)
	CALL eosio_assert(((int_32)*($6 + [44]) == (int_32)$3), [320])
	
.LABEL $label$7
	$11 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($11, [1424])
	$8 = *($6 + [8])
	*(($12 + [52])) = *(($6 + [28]))
	*(($5 = (($12 + [40]) + [8]))) = *(($6 + [24]))
	*($12 + [44]) = *(($6 + [20]))
	*($12 + [40]) = *($6 + [16])
	$7 = *($0)
	CALL $446(($12 + [24]), ($6 + [32]))
	*((($12 + [8]) + [8])) = *($5)
	*($12 + [8]) = *($12 + [40])
	CALL _ZN3pvp8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($7, $8, ($12 + [8]), ($12 + [24]))
	if ( ((*($12 + [24]) & [1]) == 0) ){ goto $label$9 }
	CALL $430(*($12 + [32]))
	
.LABEL $label$9
	CALL eosio_assert($11, [448])
	CALL eosio_assert($11, [496])
	$11 = CALL db_next_i64(*($6 + [48]), ($12 + [56]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$10 }
	CALL $120($3, $11)
	
.LABEL $label$10
	CALL $122($3, $6)
	*([0] + [4]) = ($12 + [64])
}

void .FUNC $264 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = ($6 - $5)
	if ( ((int_32)$3 <= (int_32)[-3]) ){ goto $label$2 }
	$3 = (*($0 + [8]) - $5)
	$2 = int_32($3 >> [1])
	$4 = ($2 + [1])
	$3 = ( ( $4 ? $3 : ($3 <= $4) ) ? [2147483647] : (int_32($3 >> [1]) <= [1073741823]) )
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$7 = CALL $428(($3 << [1]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	*(($4 = ($7 + ($2 << [1])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($4 - $6)
	$3 = ($7 + ($3 << [1]))
	$4 = ($4 + [2])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $4
	*(($0 + [8])) = $3
	if ( ($5 == 0) ){ goto $label$6 }
	CALL $430($5)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

void .FUNC $265 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$5 = CALL strlen($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [16]) = ($5 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $428($6)
	*($9 + [16]) = ($6 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($8, $1, $5)
	
.LABEL $label$2
	*(($8 + $5)) = [0]
	CALL $292($9, $2, $3, $4)
	$5 = *($9)
	$8 = ($5 & [1])
	$5 = CALL $436(($9 + [16]), ( *($9 + [8]) ? ($9 | [1]) : $8 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $8 ))
	$7 = *($5)
	*($5) = (int_64)0
	*($0) = $7
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($9 + [8])))
	
.LABEL $label$5
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($9 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($9 + [16]))
}

void .FUNC _ZN3pvp20prepareDeferTransferEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [224])
	*([0] + [4]) = $11
	CALL _ZN3pvp17calc_cur_trans_idEv($0)
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [3040])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1397703940), [3088])
	*((($11 + [168]) + [24])) = (int_64)1398362884
	*($11 + [184]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$8 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*(($11 + [208])) = [0]
	*($11 + [200]) = (int_64)0
	$8 = CALL _ZN3pvp6nextIdEb($0, [1])
	*(($11 + [196])) = *(($2 + [12]))
	*((($11 + [168]) + [24])) = *(($2 + [8]))
	*(($11 + [188])) = *(($2 + [4]))
	*($11 + [176]) = $1
	*($11 + [168]) = $8
	*($11 + [184]) = *($2)
	CALL $433(($11 + [200]), $3)
	$8 = *($0)
	*($11 + [160]) = ($11 + [168])
	*($11) = $8
	CALL eosio_assert(((int_64)*($0 + [256]) == (int_64)CALL $fimport$15()), [528])
	$2 = ($0 + [256])
	*($11 + [96]) = $2
	*($11 + [100]) = ($11 + [160])
	*($11 + [104]) = $11
	$6 = CALL $428([56])
	CALL $125($6)
	*($6 + [44]) = $2
	CALL $272(($11 + [96]), $6)
	*($11 + [56]) = $6
	$8 = *($6)
	*($11 + [96]) = $8
	$5 = *($6 + [48])
	*($11 + [220]) = $5
	$3 = ($0 + [284])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [288]))) ){ goto $label$7 }
	*($2 + [8]) = $8
	*($2 + [16]) = $5
	*($11 + [56]) = [0]
	*($2) = $6
	*($3) = ($2 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $127(($0 + [280]), ($11 + [56]), ($11 + [96]), ($11 + [220]))
	
.LABEL $label$6
	$6 = *($11 + [56])
	*($11 + [56]) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$9 }
	CALL $430(*(($6 + [40])))
	
.LABEL $label$9
	CALL $430($6)
	
.LABEL $label$8
	$8 = CALL current_time()
	*(($11 + [124])) = [0]
	*(($11 + [128])) = [0]
	*($11 + [108]) = [0]
	*($11 + [112]) = [0]
	*($11 + [116]) = [0]
	*($11 + [120]) = [0]
	*($11 + [96]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($11 + [132]) = [0]
	*(($11 + [136])) = [0]
	*(($11 + [140])) = [0]
	*($11 + [144]) = [0]
	*(($11 + [148])) = [0]
	*(($11 + [152])) = [0]
	$5 = ($11 + [132])
	$4 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1232]
	$9 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$15 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$2 = ($2 + [165])
	goto $label$13 
	
.LABEL $label$15
	$1 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$11
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$1 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$10 }
	$8 = (int_64)0
	$1 = (int_64)59
	$6 = [3072]
	$10 = (int_64)0
	
.LOOP $label$16:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$17 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$2 = ($2 + [165])
	goto $label$18 
	
.LABEL $label$19
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$17
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$7 | (int_64)$10)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$16 }
	*($11) = *($11 + [168])
	$6 = *($0 + [472])
	*(($11 + [44])) = *(($6 + [28]))
	*(($11 + [40])) = *(($6 + [24]))
	*(($11 + [36])) = *(($6 + [20]))
	*(($11 + [32])) = *(($6 + [16]))
	*(($11 + [28])) = *(($6 + [12]))
	*(($11 + [24])) = *(($6 + [8]))
	*(($11 + [20])) = *(($6 + [4]))
	*($11 + [16]) = *($6)
	*($11 + [64]) = $10
	*($11 + [56]) = $4
	*(($6 = CALL $428([16]))) = $4
	*($6 + [8]) = $9
	*(($2 = (($11 + [56]) + [32]))) = [0]
	$3 = ($6 + [16])
	*((($11 + [56]) + [24])) = $3
	*((($11 + [56]) + [20])) = $3
	*($11 + [72]) = $6
	*($11 + [84]) = [0]
	*((($11 + [56]) + [36])) = [0]
	CALL $76((($11 + [56]) + [28]), [40])
	$6 = *($11 + [84])
	$3 = (*($2) - $6)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [592])
	CALL memcpy($6, $11, [8])
	CALL eosio_assert(((int_32)($3 + [-8]) > (int_32)[31]), [592])
	CALL memcpy(($6 + [8]), ($11 + [16]), [32])
	CALL $86($5, ($11 + [56]))
	$6 = *($11 + [84])
	if ( ($6 == 0) ){ goto $label$20 }
	*($2) = $6
	CALL $430($6)
	
.LABEL $label$20
	$6 = *($11 + [72])
	if ( ($6 == 0) ){ goto $label$21 }
	*(($11 + [76])) = $6
	CALL $430($6)
	
.LABEL $label$21
	*(($11 + [116])) = [0]
	$10 = *($0)
	$8 = (int_64)0
	$1 = (int_64)59
	$6 = [3072]
	$9 = (int_64)0
	
.LOOP $label$22:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$23 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$2 = ($2 + [165])
	goto $label$24 
	
.LABEL $label$25
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$23
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$7 | (int_64)$9)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$22 }
	$8 = *($11 + [168])
	*($11 + [8]) = (int_64)0
	$8 = ((int_64)$8 + (int_64)((int_64)$9 + (int_64)$10))
	*($11) = $8
	CALL cancel_deferred($11)
	*($11 + [8]) = (int_64)0
	*($11) = $8
	$8 = *($0)
	CALL $87(($11 + [56]), ($11 + [96]))
	$6 = *($11 + [56])
	CALL send_deferred($11, $8, $6, (*($11 + [60]) - $6), [0])
	$6 = *($11 + [56])
	if ( ($6 == 0) ){ goto $label$26 }
	*($11 + [60]) = $6
	CALL $430($6)
	
.LABEL $label$26
	CALL $65(($11 + [96]))
	if ( ((*(($11 + [200])) & [1]) == 0) ){ goto $label$27 }
	CALL $430(*(($11 + [208])))
	
.LABEL $label$27
	*([0] + [4]) = ($11 + [224])
}

void .FUNC $267 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [32])
	$9 = $8
	*([0] + [4]) = $8
	$2 = *($0)
	$6 = *($0 + [4])
	$3 = *($6)
	*($1) = CALL _ZN11CTournament6nextIdEi($3, [7])
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($6 + [4]))
	*($1 + [24]) = *(*($6 + [8]))
	$3 = *($6 + [12])
	*($1 + [32]) = *($3)
	*(($1 + [40])) = *(($3 + [8]))
	CALL $433(($1 + [48]), *($6 + [16]))
	$6 = *($1 + [48])
	$3 = ( *(($1 + [52])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($3 + [41])
	$7 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($6)
	goto $label$2 
	
.LABEL $label$3
	$8 = ($8 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	*($9 + [12]) = $8
	*($9 + [8]) = $8
	*($9 + [16]) = ($8 + $6)
	CALL $269(($9 + [8]), $1)
	$7 = *($1)
	*($1 + [64]) = CALL db_store_i64(*($2 + [8]), (int_64)-1934358166657564672, *(*($0 + [8])), $7, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$4 }
	CALL free($8)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$5 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($2 + [8]))
	$4 = *(*(($0 + [8])))
	$5 = *($1)
	*($9 + [24]) = *(($1 + [8]))
	*($1 + [68]) = CALL db_idx64_store($7, (int_64)-1934358166657564672, $4, $5, ($9 + [24]))
	*([0] + [4]) = ($9 + [32])
}

void .FUNC _ZN3pvp11nexttrnbatlEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [304]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($6)
	CALL _ZN11CTournament17ProcessNextBattleEv(CALL $129($0, $1))
}

void .FUNC _ZN3pvp12resdefbattrnEy (int_32 $0, int_64 $1)
{
	CALL _ZN11CTournament17AddDefferedBattleE12unsigned_int(CALL $129($0, $1), [0])
}

void .FUNC _ZN3pvp12rmvwizfrmtrnEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	CALL require_auth($2)
	$4 = CALL _ZN11CTournament7FactoryEP3pvpy($0, $1)
	$0 = CALL $101(($8 + [80]))
	CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($0, $2, $3, $0, [1])
	$5 = CALL $303($8, $0)
	$6 = CALL _ZN12fight_wizardC2E6wizard(($8 + [48]), $5)
	CALL _ZN11CTournament12RemoveWizardERK12fight_wizard($4, $6)
	$7 = *($6 + [20])
	if ( ($7 == 0) ){ goto $label$1 }
	*(($6 + [24])) = $7
	CALL $430($7)
	
.LABEL $label$1
	$7 = *($6 + [8])
	if ( ($7 == 0) ){ goto $label$2 }
	*(($6 + [12])) = $7
	CALL $430($7)
	
.LABEL $label$2
	$6 = *($5 + [20])
	if ( ($6 == 0) ){ goto $label$3 }
	*(($5 + [24])) = $6
	CALL $430($6)
	
.LABEL $label$3
	$6 = *($5 + [8])
	if ( ($6 == 0) ){ goto $label$4 }
	*(($5 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$4
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $430(CALL $306($4))
	
.LABEL $label$5
	$5 = *($0 + [20])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($0 + [24])) = $5
	CALL $430($5)
	
.LABEL $label$6
	$5 = *($0 + [8])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($0 + [12])) = $5
	CALL $430($5)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [128])
}

void .FUNC _ZN3pvp11updatetournEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [304]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($6)
	*(*(($3 = CALL _ZN11CTournament7FactoryEP3pvpy($0, $1)) + [4]) + [160]) = [120]
	CALL _ZN11CTournament10updateInfoEv($3)
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($7 + [16]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = [0]
	*($7 + [26]) = [0]
	*($7 + [36]) = $1
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + $3)
	*($7 + [48]) = ($7 + [32])
	*($7 + [56]) = ($7 + [8])
	CALL $128(($7 + [56]), ($7 + [48]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *(($7 + [26]))
	$8 = *(($7 + [24]))
	$5 = *(($7 + [16]))
	$4 = *($7 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($1) + $6))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 $5), (int_64 ($8 & [65535])), (int_32 ($3 & [255])), (int_32 $6))
	*([0] + [4]) = ($7 + [64])
	return [1]
}

void .FUNC _ZN3pvp12cleartrndataEyyth (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$5 = ($5 + [165])
	goto $label$3 
	
.LABEL $label$4
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($9)
	CALL _ZN11CTournament9ClearDataEyth(CALL $129($0, $1), $2, $3, $4)
}

int_32 .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [80])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	*($9 + [24]) = (int_64)0
	*($9 + [32]) = (int_64)0
	*($9 + [40]) = (int_64)0
	*($9 + [52]) = $1
	*($9 + [48]) = $1
	*($9 + [56]) = ($1 + $3)
	*($9 + [64]) = ($9 + [48])
	*($9 + [72]) = ($9 + [8])
	CALL $182(($9 + [72]), ($9 + [64]))
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$7 = *(($9 + [40]))
	$6 = *(($9 + [32]))
	$5 = *(($9 + [24]))
	$3 = *(($9 + [16]))
	$4 = *($9 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$8 = *((*($1) + $8))
	
.LABEL $label$5
	CALL void $1((int_32 $4), (int_64 ($3 & [255])), (int_32 $5), (int_64 $6), (int_64 $7), (int_64 $8))
	*([0] + [4]) = ($9 + [80])
	return [1]
}

void .FUNC _ZN3pvp11preptrnbatlEyhyyy (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [304]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$6 = ($6 + [165])
	goto $label$3 
	
.LABEL $label$4
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($10)
}

void .FUNC $363 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-1734277135947792384, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [320])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $358($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)-1734277135947792384, $5))
	CALL eosio_assert(((int_32)*($2 + [24]) == (int_32)$4), [320])
	
.LABEL $label$4
	*(($2 + [32])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $362 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	$1 = *($0)
	$5 = (int_64)0
	$4 = (int_64)59
	$0 = [1232]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$5 > (uint_64)(int_64)5) ){ goto $label$6 }
	$2 = *($0)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((uint_64)$5 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	$5 = (int_64)0
	$7 = (int_64)59
	$0 = [6464]
	$8 = (int_64)0
	
.LOOP $label$7:
	$4 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$8 }
	$2 = *($0)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$2 = ($2 + [165])
	goto $label$9 
	
.LABEL $label$10
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$8 = ((int_64)$4 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	$5 = (int_64)0
	$4 = (int_64)59
	$0 = [6480]
	$9 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$5 > (uint_64)(int_64)10) ){ goto $label$16 }
	$2 = *($0)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$2 = ($2 + [165])
	goto $label$14 
	
.LABEL $label$16
	$7 = (int_64)0
	if ( ((int_64)$5 == (int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$12
	$0 = ($0 + [1])
	$4 = ((int_64)$4 + (int_64)-5)
	$9 = ((int_64)$7 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)13) ){ goto $label$11 }
	*($10) = $1
	*($10 + [16]) = $9
	*($10 + [8]) = $8
	*(($0 = CALL $428([16]))) = $1
	*($0 + [8]) = $6
	*(($2 = ($10 + [40]))) = [0]
	$3 = ($0 + [16])
	*(($10 + [32])) = $3
	*(($10 + [28])) = $3
	*($10 + [24]) = $0
	*($10 + [36]) = [0]
	*(($10 + [44])) = [0]
	CALL $76(($10 + [36]), [8])
	$0 = *($10 + [36])
	CALL eosio_assert(((int_32)(*($2) - $0) > (int_32)[7]), [592])
	CALL memcpy($0, $10, [8])
	CALL $85(($10 + [48]), ($10 + [8]))
	$0 = *($10 + [48])
	CALL send_inline($0, (*($10 + [52]) - $0))
	$0 = *($10 + [48])
	if ( ($0 == 0) ){ goto $label$17 }
	*($10 + [52]) = $0
	CALL $430($0)
	
.LABEL $label$17
	$0 = *($10 + [36])
	if ( ($0 == 0) ){ goto $label$18 }
	*(($10 + [40])) = $0
	CALL $430($0)
	
.LABEL $label$18
	$0 = *($10 + [24])
	if ( ($0 == 0) ){ goto $label$19 }
	*(($10 + [28])) = $0
	CALL $430($0)
	
.LABEL $label$19
	*([0] + [4]) = ($10 + [64])
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $167 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [24]) = (int_64)0
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [1056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($0 + [52])) = [0]
	*($0 + [44 align=4]) = (int_64)0
	*($0 + [56]) = (int_64)0
	return $0
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[1]), [592])
	CALL memcpy(*($2 + [4]), ($0 + [16]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$1 = *($1)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[0]), [592])
	CALL memcpy(*($1 + [4]), ($0 + [18]), [1])
	*($1 + [4]) = (*($1 + [4]) + [1])
}

void .FUNC $165 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *(($1 + [52]))
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [56])) = $6
	CALL $430($6)
	
.LABEL $label$11
	$6 = *(($1 + [40]))
	if ( ($6 == 0) ){ goto $label$12 }
	*(($1 + [44])) = $6
	CALL $430($6)
	
.LABEL $label$12
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $430($2)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $98(CALL $98($0, ($1 + [40])), ($1 + [52]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $163 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [64]) = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [48])) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	CALL eosio_assert([1], [1056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	return $0
}

void .FUNC $162 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [784])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $428([24])) + [12]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [816])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-2])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [816])
	CALL memcpy(($6 + [8]), ($7 + [8]), [2])
	CALL eosio_assert(((int_32)$4 != (int_32)[10]), [816])
	CALL memcpy(($6 + [10]), ($7 + [10]), [2])
	*($6 + [16]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [16])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $162(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $160 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = *($0)
	$5 = *($6 + [4])
	$7 = *($5 + [96])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	$7 = *($6)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-2035932804877062144, ($8 + [8]), *($5))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($7)
	
.LABEL $label$1
	$6 = *($0)
	$5 = *($6 + [4])
	$7 = *(($5 + [100]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$4 }
	$7 = *($6)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-2035932804877062143, ($8 + [8]), *($5))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($7)
	
.LABEL $label$3
	$6 = *($0)
	$5 = *($6 + [4])
	$7 = *(($5 + [104]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$6 }
	$7 = *($6)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-2035932804877062142, ($8 + [8]), *($5))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($7)
	
.LABEL $label$5
	$7 = *($0)
	$6 = *($7 + [4])
	$0 = *(($6 + [108]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$8 }
	$0 = *($7)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2035932804877062141, ($8 + [8]), *($6))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($0)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$3 = *($3)
	*($1) = *($3)
	*(($4 = ($1 + [24]))) = *(($3 + [24]))
	*(($5 = ($1 + [16]))) = *(($3 + [16]))
	*(($6 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [592])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($7 | [8]), $6, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($7 + [16]), $5, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($7 + [24]), $4, [8])
	CALL db_update_i64(*($1 + [36]), $2, $7, [32])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)8516495933114040320) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)8516495933114040321
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $169 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [44])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [48])) = $6
	CALL $430($6)
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $430($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [816])
	CALL memcpy(($1 + [40]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = CALL $114($0, ($1 + [44]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [784])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $428([48])) + [32]) = $0
	CALL $71(($7 + [32]), $5)
	*($5 + [36]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)8516495933114040320
	$6 = *($5 + [36])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)8516495933114040320
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $70(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$0), [320])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)8516495933114040320, (int_64)8516495933114040320)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $66($0, $3)
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$0), [320])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [832])
	CALL $67($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $68($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC __unlockfile (int_32 $0)
{
}

void .FUNC $60 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL $72($0, $2, $1)
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = $3
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $430($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $416 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)6600268108542246912, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [144]) == (int_32)$4), [320])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $84($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)6600268108542246912, $5))
	CALL eosio_assert(((int_32)*($2 + [144]) == (int_32)$4), [320])
	
.LABEL $label$4
	*(($2 + [152])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $241 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$3 = *(*($0 + [4]))
	*($1) = *($3)
	*(($1 + [24])) = *(($3 + [24]))
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	$6 = [32]
	$4 = ($1 + [32])
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$1 }
	CALL $234($4, *($3 + [32]), *(($3 + [36])))
	
.LABEL $label$1
	$4 = *($4)
	$3 = *(($1 + [36]))
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$3 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$3
	if ( ($6 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($8 + [4]) = $3
	*($8) = $3
	*($8 + [8]) = ($3 + $6)
	CALL $243($8, $1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-7297072577464238080, *(*($0 + [8])), (int_64)-7297072577464238080, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)-7297072577464238080) ){ goto $label$7 }
	*(($2 + [16])) = (int_64)-7297072577464238079
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $398 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

int_64 .FUNC _Z14calc_rag_priceRK7ragdisth (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	(Rounds 0)(CALL trunc(((float_64)((float_64)((float_64)(CASTING float_64)(uint_32 *($0 + [20])) / (float_64)(CASTING float_64)(uint_32 *((*($0 + [8]) + ($1 << [2]))))) / (float_64)(float_64)20) * (float_64)(float_64)1e3)))
	CALL eosio_assert([1], [1056])
	$3 = [0]
	$2 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	return CALL eosio_assert($4, [1120])
}

void .FUNC $390 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [272])
	*([0] + [4]) = $16
	$2 = *($0)
	$13 = *($0 + [4])
	$4 = *($13)
	$14 = *($4)
	*(($15 = $16) + [200]) = [0]
	*($15 + [192]) = (int_64)0
	$3 = ($4 + [312])
	CALL $276($15, $3, $14, ($15 + [192]))
	$14 = *($15)
	*($15) = ((int_64)$14 + (int_64)1)
	CALL $277($3, $15, *($4))
	*($1) = $14
	$3 = CALL $303(($15 + [192]), *($13 + [4]))
	$4 = CALL _ZN12fight_wizardC2E6wizard($15, $3)
	*($1 + [8]) = *($4)
	$6 = ($1 + [16])
	$12 = *($6)
	if ( ($12 == 0) ){ goto $label$2 }
	*(($1 + [20])) = $12
	CALL $430($12)
	*(($5 = ($1 + [24]))) = [0]
	*($6) = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$5 = ($1 + [24])
	
.LABEL $label$1
	$6 = ($4 + [8])
	*(($1 + [16])) = *($6)
	$12 = [0]
	*(($4 + [12])) = [0]
	$7 = ($4 + [16])
	$8 = *($7)
	*($7) = [0]
	*($5) = $8
	*($6) = [0]
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ($5 == 0) ){ goto $label$4 }
	*(($1 + [32])) = $5
	CALL $430($5)
	*(($5 = ($1 + [36]))) = [0]
	*($6) = (int_64)0
	$12 = *($4 + [8])
	goto $label$3 
	
.LABEL $label$4
	$5 = ($1 + [36])
	
.LABEL $label$3
	$6 = ($4 + [20])
	*(($1 + [28])) = *($6)
	*(($4 + [24])) = [0]
	$7 = ($4 + [28])
	$8 = *($7)
	*($7) = [0]
	*($5) = $8
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$5 }
	*(($4 + [12])) = $12
	CALL $430($12)
	
.LABEL $label$5
	$4 = *($3 + [20])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [24])) = $4
	CALL $430($4)
	
.LABEL $label$6
	$4 = *($3 + [8])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($3 + [12])) = $4
	CALL $430($4)
	
.LABEL $label$7
	*(($1 + [40])) = *(*($13 + [8]))
	$4 = *($13 + [12])
	*($1 + [112]) = *($4)
	*(($1 + [120])) = *(($4 + [8]))
	$4 = *($13 + [16])
	*($1 + [128]) = *($4)
	*(($1 + [136])) = *(($4 + [8]))
	*($1 + [104]) = *(*($13 + [20]))
	$4 = *($13 + [24])
	*($1 + [88]) = [0]
	*($1 + [108]) = *($4)
	$3 = CALL $303(($15 + [144]), *($13 + [28]))
	$4 = CALL _ZN12fight_wizardC2E6wizard($15, $3)
	*($1 + [48]) = *($4)
	$6 = ($1 + [56])
	$12 = *($6)
	if ( ($12 == 0) ){ goto $label$9 }
	*(($1 + [60])) = $12
	CALL $430($12)
	*(($5 = ($1 + [64]))) = [0]
	*($6) = (int_64)0
	goto $label$8 
	
.LABEL $label$9
	$5 = ($1 + [64])
	
.LABEL $label$8
	$6 = ($4 + [8])
	*(($1 + [56])) = *($6)
	$12 = [0]
	*(($4 + [12])) = [0]
	$7 = ($4 + [16])
	$8 = *($7)
	*($7) = [0]
	*($5) = $8
	*($6) = [0]
	$6 = ($1 + [68])
	$5 = *($6)
	if ( ($5 == 0) ){ goto $label$11 }
	*(($1 + [72])) = $5
	CALL $430($5)
	*(($5 = ($1 + [76]))) = [0]
	*($6) = (int_64)0
	$12 = *($4 + [8])
	goto $label$10 
	
.LABEL $label$11
	$5 = ($1 + [76])
	
.LABEL $label$10
	$6 = ($4 + [20])
	*(($1 + [68])) = *($6)
	*(($4 + [24])) = [0]
	$7 = ($4 + [28])
	$8 = *($7)
	*($7) = [0]
	*($5) = $8
	*($6) = [0]
	if ( ($12 == 0) ){ goto $label$12 }
	*(($4 + [12])) = $12
	CALL $430($12)
	
.LABEL $label$12
	$4 = *($3 + [20])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($3 + [24])) = $4
	CALL $430($4)
	
.LABEL $label$13
	$5 = ($1 + [8])
	$6 = ($1 + [48])
	$4 = ($1 + [88])
	$7 = ($1 + [108])
	$12 = *($3 + [8])
	if ( ($12 == 0) ){ goto $label$14 }
	*(($3 + [12])) = $12
	CALL $430($12)
	
.LABEL $label$14
	*(($3 = ($1 + [80]))) = *(*($13 + [32]))
	*($15) = *($1)
	CALL $192(($15 + [8]), $5)
	*(($15 + [40])) = *(($1 + [40]))
	CALL $192(($15 + [48]), $6)
	*(($15 + [80])) = *($3)
	*(($15 + [104])) = *(($4 + [16]))
	*(($15 + [100])) = *(($4 + [12]))
	*(($15 + [96])) = *(($4 + [8]))
	*(($15 + [92])) = *(($4 + [4]))
	*($15 + [88]) = *($4)
	$4 = CALL memcpy(($15 + [108]), $7, [36])
	$13 = *($13 + [36])
	CALL $394($13, $15)
	CALL memcpy(($13 + [108]), $4, [36])
	$13 = *(($15 + [68]))
	if ( ($13 == 0) ){ goto $label$15 }
	*(($15 + [72])) = $13
	CALL $430($13)
	
.LABEL $label$15
	$13 = *(($15 + [56]))
	if ( ($13 == 0) ){ goto $label$16 }
	*(($15 + [60])) = $13
	CALL $430($13)
	
.LABEL $label$16
	$13 = *(($15 + [28]))
	if ( ($13 == 0) ){ goto $label$17 }
	*(($15 + [32])) = $13
	CALL $430($13)
	
.LABEL $label$17
	$13 = [16]
	$4 = *(($15 + [16]))
	if ( ($4 == 0) ){ goto $label$18 }
	*(($15 + [20])) = $4
	CALL $430($4)
	
.LABEL $label$18
	$3 = *(($1 + [16]))
	$4 = *(($1 + [20]))
	$12 = ($4 - $3)
	$14 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$19:
	$13 = ($13 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$19 }
	$13 = ( $13 ? ($12 + $13) : ((int_32)$3 == (int_32)$4) )
	$3 = *(($1 + [28]))
	$4 = *(($1 + [32]))
	$12 = ($4 - $3)
	$14 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$20:
	$13 = ($13 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$20 }
	$13 = (( $13 ? ($12 + $13) : ((int_32)$3 == (int_32)$4) ) + [16])
	$3 = *(($1 + [56]))
	$4 = *(($1 + [60]))
	$12 = ($4 - $3)
	$14 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$21:
	$13 = ($13 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$21 }
	$13 = ( $13 ? ($12 + $13) : ((int_32)$3 == (int_32)$4) )
	$3 = *(($1 + [68]))
	$4 = *(($1 + [72]))
	$12 = ($4 - $3)
	$14 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$22:
	$13 = ($13 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$22 }
	$4 = (( $13 ? ($12 + $13) : ((int_32)$3 == (int_32)$4) ) + [54])
	if ( ($4 <= [513]) ){ goto $label$24 }
	$13 = CALL malloc($4)
	goto $label$23 
	
.LABEL $label$24
	$13 = ($16 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $13
	
.LABEL $label$23
	*($15 + [148]) = $13
	*($15 + [144]) = $13
	*($15 + [152]) = ($13 + $4)
	CALL $393(($15 + [144]), $1)
	$14 = *($1)
	*($1 + [148]) = CALL db_store_i64(*($2 + [8]), (int_64)6600268108542246912, *(*($0 + [8])), $14, $13, $4)
	if ( ($4 <= [513]) ){ goto $label$25 }
	CALL free($13)
	
.LABEL $label$25
	if ( (uint_64)($14 <= *($2 + [16])) ){ goto $label$26 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$26
	$13 = ($2 + [8])
	$14 = *($13)
	$4 = *(($0 + [8]))
	$9 = *($4)
	$10 = *($1)
	$0 = *(($1 + [104]))
	$2 = ($1 + [88])
	$3 = *($2)
	$11 = *($1 + [48])
	*($15 + [264]) = *($1 + [8])
	*($15 + [256]) = $11
	*($15 + [255]) = $3
	*($15 + [254]) = $0
	CALL memcpy(($15 + [192]), ($15 + [264]), [8])
	CALL memcpy((($15 + [192]) | [8]), ($15 + [256]), [8])
	CALL memcpy(($15 + [208]), ($15 + [254]), [1])
	CALL memcpy(($15 + [209]), ($15 + [255]), [1])
	CALL sha1(($15 + [192]), [18], $15)
	*($15) = *($15)
	*($1 + [152]) = CALL db_idx64_store($14, (int_64)6600268108542246912, $9, $10, $15)
	$14 = *($4)
	$9 = *($13)
	$10 = *($1)
	*($15) = ( (int_64)-1 ? *($1 + [8]) : *($2) )
	*(($1 + [156])) = CALL db_idx64_store($9, (int_64)6600268108542246913, $14, $10, $15)
	*([0] + [4]) = ($15 + [272])
}

void .FUNC _ZN3pvp15logregistrationERK5fight (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [368])
	*([0] + [4]) = $13
	$2 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [1232]
	$11 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$6 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	*($13 + [304]) = $11
	*($13 + [296]) = $2
	$10 = (int_64)0
	$9 = (int_64)59
	$0 = [8064]
	$11 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$10 > (uint_64)(int_64)8) ){ goto $label$12 }
	$3 = *($0)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$3 = ($3 + [165])
	goto $label$10 
	
.LABEL $label$12
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$7 }
	*($13 + [8]) = *($1)
	CALL $192((($13 + [8]) + [8]), ($1 + [8]))
	*(($0 = (($13 + [8]) + [40]))) = *(($1 + [40]))
	CALL $192((($13 + [8]) + [48]), ($1 + [48]))
	*(($3 = (($13 + [8]) + [80]))) = *(($1 + [80]))
	*(($4 = (($13 + [8]) + [104]))) = *(($1 + [104]))
	*((($13 + [8]) + [100])) = *(($1 + [100]))
	*(($5 = (($13 + [8]) + [96]))) = *(($1 + [96]))
	*((($13 + [8]) + [92])) = *(($1 + [92]))
	*($13 + [96]) = *($1 + [88])
	$1 = CALL memcpy((($13 + [8]) + [108]), ($1 + [108]), [36])
	$6 = (($13 + [8]) + [16])
	*((($13 + [152]) + [16])) = *($6)
	*($13 + [152]) = *($13 + [8])
	*($13 + [160]) = *($13 + [16])
	$7 = (($13 + [8]) + [20])
	*((($13 + [152]) + [20])) = *($7)
	*($7) = [0]
	$7 = (($13 + [8]) + [24])
	$8 = *($7)
	*($7) = [0]
	*((($13 + [152]) + [24])) = $8
	*($6) = [0]
	$6 = (($13 + [8]) + [28])
	*((($13 + [152]) + [28])) = *($6)
	$7 = (($13 + [8]) + [32])
	*((($13 + [152]) + [32])) = *($7)
	*($7) = [0]
	$7 = (($13 + [8]) + [36])
	$8 = *($7)
	*($7) = [0]
	*((($13 + [152]) + [36])) = $8
	*($6) = [0]
	*((($13 + [152]) + [40])) = *($0)
	*($13 + [200]) = *($13 + [56])
	$0 = (($13 + [8]) + [56])
	*((($13 + [152]) + [56])) = *($0)
	$6 = (($13 + [8]) + [60])
	*((($13 + [152]) + [60])) = *($6)
	*($6) = [0]
	$6 = (($13 + [8]) + [64])
	$7 = *($6)
	*($6) = [0]
	*((($13 + [152]) + [64])) = $7
	*($0) = [0]
	$0 = (($13 + [8]) + [68])
	*((($13 + [152]) + [68])) = *($0)
	$6 = (($13 + [8]) + [72])
	*((($13 + [152]) + [72])) = *($6)
	*($6) = [0]
	$6 = (($13 + [8]) + [76])
	$7 = *($6)
	*($6) = [0]
	*((($13 + [152]) + [76])) = $7
	*($0) = [0]
	*((($13 + [152]) + [80])) = *($3)
	*((($13 + [152]) + [104])) = *($4)
	*((($13 + [152]) + [96])) = *($5)
	*($13 + [240]) = *($13 + [96])
	CALL memcpy((($13 + [152]) + [108]), $1, [36])
	$0 = CALL $392(($13 + [312]), ($13 + [296]), $2, $11, ($13 + [152]))
	CALL $85(($13 + [352]), $0)
	$3 = *($13 + [352])
	CALL send_inline($3, (*($13 + [356]) - $3))
	$3 = *($13 + [352])
	if ( ($3 == 0) ){ goto $label$13 }
	*($13 + [356]) = $3
	CALL $430($3)
	
.LABEL $label$13
	$3 = *($0 + [28])
	if ( ($3 == 0) ){ goto $label$14 }
	*(($0 + [32])) = $3
	CALL $430($3)
	
.LABEL $label$14
	$3 = *($0 + [16])
	if ( ($3 == 0) ){ goto $label$15 }
	*(($0 + [20])) = $3
	CALL $430($3)
	
.LABEL $label$15
	$0 = *(($13 + [220]))
	if ( ($0 == 0) ){ goto $label$16 }
	*(($13 + [224])) = $0
	CALL $430($0)
	
.LABEL $label$16
	$0 = *(($13 + [208]))
	if ( ($0 == 0) ){ goto $label$17 }
	*(($13 + [212])) = $0
	CALL $430($0)
	
.LABEL $label$17
	$0 = *(($13 + [180]))
	if ( ($0 == 0) ){ goto $label$18 }
	*(($13 + [184])) = $0
	CALL $430($0)
	
.LABEL $label$18
	$0 = *(($13 + [168]))
	if ( ($0 == 0) ){ goto $label$19 }
	*(($13 + [172])) = $0
	CALL $430($0)
	
.LABEL $label$19
	$0 = *(($13 + [76]))
	if ( ($0 == 0) ){ goto $label$20 }
	*(($13 + [80])) = $0
	CALL $430($0)
	
.LABEL $label$20
	$0 = *(($13 + [64]))
	if ( ($0 == 0) ){ goto $label$21 }
	*(($13 + [68])) = $0
	CALL $430($0)
	
.LABEL $label$21
	$0 = *(($13 + [36]))
	if ( ($0 == 0) ){ goto $label$22 }
	*(($13 + [40])) = $0
	CALL $430($0)
	
.LABEL $label$22
	$0 = *(($13 + [24]))
	if ( ($0 == 0) ){ goto $label$23 }
	*(($13 + [28])) = $0
	CALL $430($0)
	
.LABEL $label$23
	*([0] + [4]) = ($13 + [368])
}

int_32 .FUNC $392 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$9 = [16]
	$6 = CALL $428([16])
	*($0 + [16]) = $6
	*(($7 = ($0 + [20]))) = $6
	$8 = ($6 + [16])
	*($5) = $8
	*(($6 + [8])) = *(($1 + [8]))
	*($6) = *($1)
	*($7) = $8
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$1 = *(($4 + [16]))
	$6 = *(($4 + [20]))
	$5 = ($6 - $1)
	$2 = (CASTING uint_64)(uint_32 $5)
	$7 = ($0 + [28])
	
.LOOP $label$1:
	$9 = ($9 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	$9 = ( $9 ? ($5 + $9) : ((int_32)$1 == (int_32)$6) )
	$1 = *(($4 + [28]))
	$6 = *(($4 + [32]))
	$5 = ($6 - $1)
	$2 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$9 = ($9 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$2 }
	$9 = (( $9 ? ($5 + $9) : ((int_32)$1 == (int_32)$6) ) + [16])
	$1 = *(($4 + [56]))
	$6 = *(($4 + [60]))
	$5 = ($6 - $1)
	$2 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$3:
	$9 = ($9 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$3 }
	$9 = ( $9 ? ($5 + $9) : ((int_32)$1 == (int_32)$6) )
	$1 = *(($4 + [68]))
	$6 = *(($4 + [72]))
	$5 = ($6 - $1)
	$2 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$4:
	$9 = ($9 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$4 }
	$9 = (( $9 ? ($5 + $9) : ((int_32)$1 == (int_32)$6) ) + [54])
	if ( ($9 == 0) ){ goto $label$6 }
	CALL $76($7, $9)
	$6 = *(($0 + [32]))
	$9 = *(($0 + [28]))
	goto $label$5 
	
.LABEL $label$6
	$6 = [0]
	$9 = [0]
	
.LABEL $label$5
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = $6
	CALL $393($10, $4)
	*([0] + [4]) = ($10 + [16])
	return $0
}

int_32 .FUNC $393 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $324(CALL $324($0, ($1 + [16])), ($1 + [28]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $324(CALL $324($0, ($1 + [56])), ($1 + [68]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [108]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [136]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $394 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = *($1)
	*($0 + [8]) = *($1 + [8])
	$3 = ($0 + [16])
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$2 }
	*(($0 + [20])) = $2
	CALL $430($2)
	*(($2 = ($0 + [24]))) = [0]
	*($3) = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$2 = ($0 + [24])
	
.LABEL $label$1
	$3 = ($1 + [16])
	*(($0 + [16])) = *($3)
	*(($0 + [20])) = *(($1 + [20]))
	$4 = ($1 + [24])
	*($2) = *($4)
	*($4) = [0]
	*($3) = (int_64)0
	$3 = ($0 + [28])
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$4 }
	*(($0 + [32])) = $2
	CALL $430($2)
	*(($2 = ($0 + [36]))) = [0]
	*($3) = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	$2 = ($0 + [36])
	
.LABEL $label$3
	$3 = ($1 + [28])
	*(($0 + [28])) = *($3)
	*(($0 + [32])) = *(($1 + [32]))
	$4 = ($1 + [36])
	*($2) = *($4)
	*($4) = [0]
	*($3) = (int_64)0
	*(($0 + [40])) = *(($1 + [40]))
	*($0 + [48]) = *($1 + [48])
	$3 = ($0 + [56])
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$6 }
	*(($0 + [60])) = $2
	CALL $430($2)
	*(($2 = ($0 + [64]))) = [0]
	*($3) = (int_64)0
	goto $label$5 
	
.LABEL $label$6
	$2 = ($0 + [64])
	
.LABEL $label$5
	$3 = ($1 + [56])
	*(($0 + [56])) = *($3)
	*(($0 + [60])) = *(($1 + [60]))
	$4 = ($1 + [64])
	*($2) = *($4)
	*($4) = [0]
	*($3) = (int_64)0
	$3 = ($0 + [68])
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$8 }
	*(($0 + [72])) = $2
	CALL $430($2)
	*(($2 = ($0 + [76]))) = [0]
	*($3) = (int_64)0
	goto $label$7 
	
.LABEL $label$8
	$2 = ($0 + [76])
	
.LABEL $label$7
	$3 = ($1 + [68])
	*(($0 + [68])) = *($3)
	*(($0 + [72])) = *(($1 + [72]))
	$4 = ($1 + [76])
	*($2) = *($4)
	*($4) = [0]
	*($3) = (int_64)0
	*(($0 + [80])) = *(($1 + [80]))
	*(($0 + [96])) = *(($1 + [96]))
	*($0 + [88]) = *($1 + [88])
	*(($0 + [104])) = *(($1 + [104]))
	return $0
}

int_32 .FUNC $395 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	*($0) = $1
	$1 = (int_64)0
	$4 = (int_64)59
	$3 = [6464]
	$5 = (int_64)0
	
.LOOP $label$1:
	$6 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$5 = ((int_64)$6 | (int_64)$5)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	$1 = (int_64)0
	$4 = (int_64)59
	$3 = [6464]
	$7 = (int_64)0
	
.LOOP $label$5:
	$6 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$2 = ($2 + [165])
	goto $label$7 
	
.LABEL $label$8
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$6 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$6
	$3 = ($3 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$7 = ((int_64)$6 | (int_64)$7)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$5 }
	*($0 + [8]) = $5
	*(($0 + [16])) = $7
	*(($0 + [24])) = (int_64)-1
	*(($0 + [32])) = (int_64)0
	*(($0 + [40])) = [0]
	CALL $396($0)
	return $0
}

void .FUNC $396 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($0 + [8])
	$3 = *(($0 + [36]))
	if ( ((int_32)$3 == (int_32)*(($0 + [32]))) ){ goto $label$2 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$1), [320])
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	$2 = CALL db_find_i64(*($1), *(($0 + [16])), (int_64)-4840370576440688640, (int_64)-4840370576440688640)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $397($1, $2)
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$1), [320])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [5040])
	*($0 + [48]) = *($3)
}

int_32 .FUNC $397 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [784])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $428([64]))) = (int_64)1
	$3 = ($5 + [16])
	CALL memset($3, [0], [32])
	*($5 + [48]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [816])
	CALL memcpy($5, $6, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[31]), [816])
	CALL memcpy($3, ($6 + [8]), [32])
	*($5 + [52]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-4840370576440688640
	$6 = *($5 + [52])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-4840370576440688640
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $398(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

void .FUNC $442 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $428($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $430($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $454 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [16752]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $458(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [17232]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [17264]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [17270] ? [17265] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [17234] ? [17232] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [17267]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $452()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [17232]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [17232]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [17216])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [17232])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [17248] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [17232]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [17328] ? [17344] : $30 ) ? ( [17296] ? [17312] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [17232]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [17233]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [17232] ? [17237] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [17216])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [17216])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [17216])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([17360], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([17360], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([17360], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $458(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $458(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $458(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $458(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $458(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $458(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $458(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $458(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $458(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

int_32 .FUNC $365 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [496])
	$6 = *($0 + [4])
	$7 = *($6 + [32])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-1734277135947792384, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [32]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [320])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $358($2, CALL $fimport$18(*($2), *($2 + [8]), (int_64)-1734277135947792384, $3))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$2), [320])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [32])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $88($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $76($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $89($4, $1)
	CALL $91(CALL $90(CALL $90($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $367 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*(($8 + [24])) = [0]
	*($8 + [16]) = (int_64)0
	$4 = CALL strlen($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($8 + [16]) = ($4 << [1])
	$7 = (($8 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$7 = CALL $428($5)
	*($8 + [16]) = ($5 | [1])
	*($8 + [24]) = $7
	*($8 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($7, $1, $4)
	
.LABEL $label$2
	*(($7 + $4)) = [0]
	CALL $368($8, $2, $3)
	$4 = *($8)
	$7 = ($4 & [1])
	$4 = CALL $436(($8 + [16]), ( *($8 + [8]) ? ($8 | [1]) : $7 ), ( *($8 + [4]) ? uint_32($4 >> [1]) : $7 ))
	$6 = *($4)
	*($4) = (int_64)0
	*($0) = $6
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($8) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($8 + [8])))
	
.LABEL $label$5
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($8 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($8 + [16]))
}

void .FUNC $366 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL _ZNSt3__19to_stringEy(($6 + [16]), *($1))
	CALL $367($6, $2, $3, $4)
	$2 = *($6)
	$3 = ($2 & [1])
	$2 = CALL $436(($6 + [16]), ( *($6 + [8]) ? ($6 | [1]) : $3 ), ( *($6 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($6 + [8])))
	
.LABEL $label$1
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($6 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$2 = *($0)
	$3 = *(*($0 + [4]))
	*($1) = *($3)
	*(($4 = ($1 + [24]))) = *(($3 + [24]))
	*(($5 = ($1 + [16]))) = *(($3 + [16]))
	*(($6 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [592])
	CALL memcpy($7, $1, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($7 | [8]), $6, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($7 + [16]), $5, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($7 + [24]), $4, [8])
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)8516495933114040320, *(*($0 + [8])), (int_64)8516495933114040320, $7, [32])
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)8516495933114040320) ){ goto $label$1 }
	*(($2 + [16])) = (int_64)8516495933114040321
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [528])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $428([48])) + [32]) = $1
	CALL $69(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)8516495933114040320
	$4 = *($3 + [36])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)8516495933114040320
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $70(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $430($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $248 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$5 = CALL strlen($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [16]) = ($5 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $428($6)
	*($9 + [16]) = ($6 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($8, $1, $5)
	
.LABEL $label$2
	*(($8 + $5)) = [0]
	CALL $249($9, $2, $3, $4)
	$5 = *($9)
	$8 = ($5 & [1])
	$5 = CALL $436(($9 + [16]), ( *($9 + [8]) ? ($9 | [1]) : $8 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $8 ))
	$7 = *($5)
	*($5) = (int_64)0
	*($0) = $7
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($9 + [8])))
	
.LABEL $label$5
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($9 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($9 + [16]))
}

void .FUNC $249 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL _ZNSt3__19to_stringEy(($5 + [16]), *($1))
	CALL $250($5, $2, $3)
	$2 = *($5)
	$3 = ($2 & [1])
	$2 = CALL $436(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $3 ), ( *($5 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$4 = *($2)
	*($2) = (int_64)0
	*($0) = $4
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($5 + [8])))
	
.LABEL $label$1
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($5 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $246 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$3 = *(*($0 + [4]))
	*($1) = *($3)
	*(($1 + [24])) = *(($3 + [24]))
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	$6 = [32]
	$4 = ($1 + [32])
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$1 }
	CALL $234($4, *($3 + [32]), *(($3 + [36])))
	
.LABEL $label$1
	$4 = *($4)
	$3 = *(($1 + [36]))
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$3 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$3
	if ( ($6 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($8 + [4]) = $3
	*($8) = $3
	*($8 + [8]) = ($3 + $6)
	CALL $243($8, $1)
	*($1 + [52]) = CALL db_store_i64(*($2 + [8]), (int_64)-7297072577464238080, *(*($0 + [8])), (int_64)-7297072577464238080, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)-7297072577464238080) ){ goto $label$7 }
	*(($2 + [16])) = (int_64)-7297072577464238079
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $247 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL _ZNSt3__19to_stringEi(($7 + [16]), *($1))
	CALL $248($7, $2, $3, $4, $5)
	$2 = *($7)
	$3 = ($2 & [1])
	$2 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $3 ), ( *($7 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$6 = *($2)
	*($2) = (int_64)0
	*($0) = $6
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$1
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $114($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $245 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [528])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $428([64])) + [40]) = [0]
	*($3 + [32 align=4]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [48]) = $1
	CALL $246(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)-7297072577464238080
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)-7297072577464238080
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $242(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [32])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [36])) = $1
	CALL $430($1)
	
.LABEL $label$4
	CALL $430($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $242 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [32])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [36])) = $6
	CALL $430($6)
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $430($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $243 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $210($0, ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $240 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [528])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $428([64])) + [40]) = [0]
	*($3 + [32 align=4]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [48]) = $1
	CALL $241(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)-7297072577464238080
	$4 = *($3 + [52])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)-7297072577464238080
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $242(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [32])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [36])) = $1
	CALL $430($1)
	
.LABEL $label$4
	CALL $430($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [784])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $428([24])) + [8]) = $0
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [816])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $64(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $428([160])
	$4 = CALL $94($6)
	*($6 + [144]) = $0
	CALL $95(($8 + [32]), $4)
	*($6 + [152]) = [-1]
	*($6 + [148]) = $1
	*($6 + [156]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [148])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $96(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *(($4 + [68]))
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [72])) = $7
	CALL $430($7)
	
.LABEL $label$10
	$7 = *(($4 + [56]))
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [60])) = $7
	CALL $430($7)
	
.LABEL $label$11
	$7 = *(($4 + [28]))
	if ( ($7 == 0) ){ goto $label$12 }
	*(($4 + [32])) = $7
	CALL $430($7)
	
.LABEL $label$12
	$7 = *(($4 + [16]))
	if ( ($7 == 0) ){ goto $label$13 }
	*(($4 + [20])) = $7
	CALL $430($7)
	
.LABEL $label$13
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [9]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $428(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $430($6)
	
.LABEL $label$8
	(unreachable)
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1152])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $83($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [816])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [816])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $149 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $430($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $428(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $430($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $430($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $430($5)
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $419 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)6600268108542246913, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [144]) == (int_32)$4), [320])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $84($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)6600268108542246912, $5))
	CALL eosio_assert(((int_32)*($2 + [144]) == (int_32)$4), [320])
	
.LABEL $label$4
	*(($2 + [156])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC _ZN3pvp11fightExistsEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	*($2 + [16]) = $1
	*($2 + [8]) = ($0 + [96])
	CALL $419(($2 + [24]), ($2 + [8]), ($2 + [16]))
	$0 = *($2 + [28])
	if ( ($0 == 0) ){ goto $label$2 }
	$0 = ((int_64)*($2 + [16]) == (int_64)( (int_64)-1 ? *($0 + [8]) : *($0 + [88]) ))
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [32])
	return $0
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [20])) = $6
	CALL $430($6)
	
.LABEL $label$7
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [20])) = $6
	CALL $430($6)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [32]))
	$7 = *($1 + [36])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3659885105376759808, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $428([48])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [32]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [816])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	$4 = CALL $114(($8 + [32]), ($6 + [8]))
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($6 + [24]), *($4 + [4]), [8])
	*($6 + [36]) = $1
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $149(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $430($7)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$7
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [24]))
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $428([32])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [20]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [816])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	CALL $114(($8 + [32]), ($6 + [8]))
	*($6 + [24]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [24])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $157(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $430($7)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC _ZN15CTournStructure4initEb (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$7 = [1]
	if ( *($0 + [24]) ){ goto $label$1 }
	*($9 + [8]) = *($0 + [12])
	$6 = *(*($0) + [4])
	CALL $154(($9 + [16]), ($9 + [8]), $6)
	$7 = *($9 + [20])
	if ( ($7 == 0) ){ goto $label$5 }
	if ( ((int_64)*($6) != (int_64)*($7 + [8])) ){ goto $label$5 }
	if ( ($7 == 0) ){ goto $label$5 }
	$3 = *($7)
	$4 = *($2 + [24])
	$2 = *(($0 + [12]))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$6 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [28]) == (int_32)$2), [320])
	*(($0 + [8])) = $6
	*($0 + [4]) = $2
	$7 = [1]
	if ( $6 ){ goto $label$1 }
	goto $label$3 
	
.LABEL $label$5
	CALL $155(($9 + [16]), [1664], *(*($0) + [4]))
	$0 = (*($9 + [16]) & [1])
	$8 = *($9 + [24])
	$7 = ( $8 ? (($9 + [16]) | [1]) : $0 )
	$6 = ((int_32)$1 ^ (int_32)[1])
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $430($8)
	
.LABEL $label$8
	CALL eosio_assert($6, $7)
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL db_find_i64(*($2), *($2 + [8]), (int_64)-3659885105376759808, $3)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL $144($2, $7)
	CALL eosio_assert(((int_32)*($7 + [28]) == (int_32)$2), [320])
	*(($0 + [8])) = $7
	*($0 + [4]) = $2
	$7 = [1]
	goto $label$1 
	
.LABEL $label$9
	*($0 + [4]) = $2
	*(($0 + [8])) = [0]
	
.LABEL $label$3
	CALL $156(($9 + [16]), [1744], *(*($0) + [4]))
	$0 = (*($9 + [16]) & [1])
	$8 = *($9 + [24])
	$7 = ( $8 ? (($9 + [16]) | [1]) : $0 )
	$6 = ((int_32)$1 ^ (int_32)[1])
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $430($8)
	
.LABEL $label$10
	CALL eosio_assert($6, $7)
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [32])
	return $7
}

int_32 .FUNC _ZN15CTournStructure14ClearStructureEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [48])
	*([0] + [4]) = $12
	if ( (CALL _ZN15CTournStructure4initEb($0, [0]) == 0) ){ goto $label$2 }
	*($12 + [8]) = (int_64)0
	*($12 + [16]) = [0]
	$10 = *(($0 + [8]))
	$11 = (*(($10 + [20])) - *($10 + [16]))
	$6 = int_32($11 >> [5])
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$1 }
	$8 = CALL $428($11)
	*(($12 + [16])) = ($8 + ($6 << [5]))
	*($12 + [8]) = $8
	*($12 + [12]) = $8
	$6 = *(($10 + [16]))
	$10 = (*(($10 + [20])) - $6)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $6, $10)
	$1 = ($8 + $10)
	*($12 + [12]) = $1
	if ( ($10 == 0) ){ goto $label$3 }
	$2 = (($12 + [32]) | [1])
	$7 = ($12 + [40])
	
.LOOP $label$4:
	$9 = *($8)
	
.LOOP $label$5:
	*($12 + [24]) = $9
	$4 = *(($3 + [208]))
	$3 = *($0)
	$11 = *(($3 + [212]))
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$6 }
	$10 = ($11 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($10)) == (int_64)$9) ){ goto $label$6 }
	$11 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = ($3 + [184])
	if ( ((int_32)$11 == (int_32)$4) ){ goto $label$9 }
	$10 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [32]) == (int_32)$5), [320])
	goto $label$8 
	
.LABEL $label$9
	$10 = [0]
	$6 = CALL db_find_i64(*($5), *(($3 + [192])), (int_64)-3659885401779982336, $9)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$10 = CALL $146($5, $6)
	CALL eosio_assert(((int_32)*($10 + [32]) == (int_32)$5), [320])
	
.LABEL $label$8
	CALL $147(($12 + [32]), [1616], ($12 + [24]))
	$11 = (*($12 + [32]) & [1])
	$4 = *($7)
	$3 = ( $4 ? $2 : $11 )
	$6 = ((int_32)$10 != (int_32)[0])
	if ( ($11 == 0) ){ goto $label$10 }
	CALL $430($4)
	
.LABEL $label$10
	CALL eosio_assert($6, $3)
	$9 = *($10 + [24])
	$11 = *($0)
	CALL eosio_assert($6, [448])
	CALL eosio_assert($6, [496])
	$6 = ($11 + [184])
	$11 = CALL db_next_i64(*($10 + [36]), ($12 + [32]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$11 }
	CALL $146($5, $11)
	
.LABEL $label$11
	CALL $148($6, $10)
	if ( ((int_64)$9 != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [32])
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$6 = *($0 + [12])
	$9 = *(($0 + [4]))
	$10 = (CASTING uint_32)(uint_64 (uint_64)$9 >> (uint_64)(int_64)32)
	$11 = ((int_32)$10) != (int_32)[0]
	CALL eosio_assert($11), [448])
	CALL eosio_assert($11, [496])
	$11 = CALL db_next_i64(*($10 + [32]), ($12 + [32]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$12 }
	CALL $144((CASTING uint_32)(uint_64 $9), $11)
	
.LABEL $label$12
	CALL $145($6, $10)
	$10 = *($12 + [8])
	if ( ($10 == 0) ){ goto $label$2 }
	*($12 + [12]) = $10
	CALL $430($10)
	
.LABEL $label$2
	*([0] + [4]) = ($12 + [48])
	return [0]
	
.LABEL $label$1
	CALL $445(($12 + [8]))
	return (unreachable)
}

int_32 .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [784])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $428([32])) + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [816])
	CALL memcpy($5, $6, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [816])
	CALL memcpy(($5 + [8]), ($6 + [8]), [4])
	*($5 + [20]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-4157503053760561152
	$6 = *($5 + [20])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-4157503053760561152
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $282(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

int_32 .FUNC _ZNK12fight_wizard12calcRagPowerERKh (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = [0]
	$1 = ((uint_32)*($1) % (uint_32)[10])
	$2 = *($0 + [20])
	$0 = *(($2 + ( ($1 + [20]) ? $1 : ((uint_32)(*(($0 + [24])) - $2) > (uint_32)[20]) )))
	if ( ((uint_32)$0 > (uint_32)[7]) ){ goto $label$1 }
	$3 = ([8] - $0)
	
.LABEL $label$1
	return ($3 & [255])
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$7
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC _ZNSt3__19to_stringEi (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [16704], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $441(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $441(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = ($3 - $4)
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $99($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + $5)
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	$2 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((int_32)*($2) != (int_32)$7), [816])
	CALL memcpy($4, *($5), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	$4 = ($4 + [1])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $428($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $430($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $239 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [48]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$4 = *($3)
	*($1) = *($4)
	*(($1 + [24])) = *(($4 + [24]))
	*(($1 + [16])) = *(($4 + [16]))
	*(($1 + [8])) = *(($4 + [8]))
	$3 = [32]
	$5 = ($1 + [32])
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $234($5, *($4 + [32]), *(($4 + [36])))
	
.LABEL $label$1
	CALL eosio_assert([1], [992])
	$5 = *($5)
	$4 = *(($1 + [36]))
	$6 = ($4 - $5)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$3 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$4
	*($8 + [4]) = $4
	*($8) = $4
	*($8 + [8]) = ($4 + $3)
	CALL $243($8, $1)
	CALL db_update_i64(*($1 + [52]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($4)
	
.LABEL $label$6
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-7297072577464238080) ){ goto $label$7 }
	*(($0 + [16])) = (int_64)-7297072577464238079
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [784])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $428([64])) + [40]) = [0]
	*($5 + [32 align=4]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [48]) = $0
	CALL $244(($7 + [32]), $5)
	*($5 + [52]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-7297072577464238080
	$6 = *($5 + [52])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)-7297072577464238080
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $242(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [36])) = $6
	CALL $430($6)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

int_32 .FUNC $94 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [32])) = (int_64)0
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = (int_64)0
	$2 = [0]
	*(($0 + [72])) = [0]
	*(($0 + [76])) = [0]
	*($0 + [112]) = (int_64)0
	*(($3 = ($0 + [120]))) = (int_64)1398362884
	CALL eosio_assert([1], [1056])
	$1 = (uint_64)*($3) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($2 = ($0 + [136]))) = (int_64)1398362884
	*($0 + [128]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	return $0
}

void .FUNC $236 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $428(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $430($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $96 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $9) / (int_32)[24])
	$8 = ($4 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$2 }
	$5 = ($0 + [8])
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[24])
	if ( ((uint_32)$9 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($10 + [24])) = $5
	$5 = [0]
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$9 = ($9 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $9
	goto $label$4 
	
.LABEL $label$5
	*(($10 + [24])) = $5
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$5 = [178956970]
	
.LABEL $label$4
	$8 = CALL $428(((int_32)$5 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	*($10 + [8]) = $8
	$9 = ($8 + ((int_32)$4 * (int_32)[24]))
	*($10 + [12]) = $9
	$5 = ($8 + ((int_32)$5 * (int_32)[24]))
	*($7) = $5
	$8 = *($1)
	*($1) = [0]
	$1 = *($3)
	$6 = *($2)
	*($9) = $8
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$1 = ($9 + [24])
	*($10 + [16]) = $1
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($8 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($8 + [-8]))
	*(($9 + [-12])) = *(($8 + [-12]))
	*(($9 + [-16])) = *(($8 + [-16]))
	$9 = (*($10 + [12]) + [-24])
	*($10 + [12]) = $9
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$8 = *(($0 + [4]))
	$5 = *($7)
	$2 = *($0)
	$1 = *(($10 + [16]))
	
.LABEL $label$6
	*($0) = $9
	*(($0 + [4])) = $1
	*((($10 + [8]) + [8])) = $8
	$9 = ($0 + [8])
	$8 = *($9)
	*($9) = $5
	*($10 + [12]) = $2
	*($7) = $8
	*($10 + [8]) = $2
	CALL $97(($10 + [8]))
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

void .FUNC $234 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $430($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($8 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL $428($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $445($0)
}

int_64 .FUNC _ZN11CTournament6nextIdEi (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	$4 = *($0 + [16])
	*(($9 + [40])) = [0]
	*($9 + [32]) = (int_64)0
	*($9) = (int_64)0
	*($9 + [8]) = (int_64)0
	*($9 + [16]) = (int_64)0
	*($9 + [24]) = (int_64)0
	$2 = ($0 + [24])
	CALL $235(($9 + [48]), $2, $4, $9)
	$8 = *($9 + [32])
	if ( ($8 == 0) ){ goto $label$1 }
	*(($9 + [36])) = $8
	CALL $430($8)
	
.LABEL $label$1
	$8 = ($1 + [-1])
	if ( ((uint_32)$8 > (uint_32)[6]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$7 = *($9 + [80])
	$8 = *(($9 + [84]))
	$6 = int_32(($8 - $7) >> [3])
	if ( ((uint_32)$6 > (uint_32)[2]) ){ goto $label$9 }
	if ( ((int_32)$6 == (int_32)[3]) ){ goto $label$9 }
	$3 = ($9 + [80])
	$7 = ([2] - $6)
	$5 = ($9 + [88])
	$6 = ($9 + [84])
	
.LOOP $label$11:
	*($9) = (int_64)0
	if ( ((uint_32)$8 >= (uint_32)*($5)) ){ goto $label$13 }
	*($8) = (int_64)0
	*($6) = ($8 + [8])
	if ( $7 ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	CALL $236($3, $9)
	if ( ($7 == 0) ){ goto $label$10 }
	
.LABEL $label$12
	$7 = ($7 + [-1])
	$8 = *($6)
	goto $label$11 
	
.LABEL $label$10
	$7 = *(($9 + [80]))
	
.LABEL $label$9
	$4 = ((int_64)*($8) + (int_64)1)
	*(($8 = (($7 + ($1 << [3])) + [-40]))) = $4
	goto $label$2 
	
.LABEL $label$7
	CALL eosio_assert([0], [2592])
	$4 = (int_64)0
	goto $label$2 
	
.LABEL $label$6
	$4 = ((int_64)*($9 + [48]) + (int_64)1)
	*($9 + [48]) = $4
	goto $label$2 
	
.LABEL $label$5
	$4 = ((int_64)*($9 + [56]) + (int_64)1)
	*($9 + [56]) = $4
	goto $label$2 
	
.LABEL $label$4
	$4 = ((int_64)*($9 + [64]) + (int_64)1)
	*($9 + [64]) = $4
	goto $label$2 
	
.LABEL $label$3
	$4 = ((int_64)*($9 + [72]) + (int_64)1)
	*($9 + [72]) = $4
	
.LABEL $label$2
	CALL $237($2, ($9 + [48]), *(($0 + [16])))
	$8 = *($9 + [80])
	if ( ($8 == 0) ){ goto $label$14 }
	*(($9 + [84])) = $8
	CALL $430($8)
	
.LABEL $label$14
	*([0] + [4]) = ($9 + [96])
	$8
	return $4
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [592])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [592])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $92($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [592])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [592])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $230 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$11 = (*([0] + [4]) - [16])
	$12 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	*($1 + [24]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [992])
	$3 = [8]
	$6 = ($1 + [8])
	$5 = ($1 + [24])
	$7 = *($1 + [8])
	$8 = *(($1 + [12]))
	$9 = ($8 - $7)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	$3 = (($9 & [-8]) + $3)
	
.LABEL $label$2
	$8 = ($3 + [8])
	if ( ($8 <= [513]) ){ goto $label$4 }
	$11 = CALL malloc($8)
	goto $label$3 
	
.LABEL $label$4
	$11 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $11
	
.LABEL $label$3
	*($12) = $11
	*($12 + [8]) = ($11 + $8)
	CALL eosio_assert(((int_32)($3 + [8]) > (int_32)[7]), [592])
	CALL memcpy($11, $1, [8])
	*($12 + [4]) = ($11 + [8])
	$3 = CALL $210($12, $6)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($3 + [4]), $5, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL db_update_i64(*($1 + [36]), $2, $11, $8)
	if ( ($8 <= [513]) ){ goto $label$5 }
	CALL free($11)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($12 + [16])
}

int_32 .FUNC _ZN3pvp16getWizDeffenceAtERK12fight_wizardi (int_32 $0, int_32 $1, int_32 $2)
{
	$2 = ((*((*($1 + [8]) + $2)) << [24]) + [-838860800])
	$1 = int_32($2 >> [24])
	if ( ((int_32)$2 < (int_32)[-16777215]) ){ goto $label$2 }
	$2 = (((int_32)$1 / (int_32)[2]) + [8])
	goto $label$1 
	
.LABEL $label$2
	$2 = ([8] - $1)
	
.LABEL $label$1
	return ($2 & [255])
}

void .FUNC $417 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1 + [24])
	$7 = *(($1 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [144]) == (int_32)$1), [320])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)6600268108542246912, $2)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $84($1, $6)
	CALL eosio_assert(((int_32)*($6 + [144]) == (int_32)$1), [320])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC _ZNSt3__19to_stringEx (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [16720], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $441(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $441(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $428([40])) + [24]) = [0]
	*($6 + [16 align=4]) = (int_64)0
	*($6 + [28]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [816])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[7]), [816])
	CALL memcpy(($6 + [8]), $3, [8])
	*($8 + [36]) = ($4 + [16])
	CALL $150(($8 + [32]), ($6 + [16]))
	*($6 + [36]) = [-1]
	*($6 + [32]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [32])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $151(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [16])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [20])) = $7
	CALL $430($7)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN3pvp9clearlogsEv (int_32 $0)
{
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [16736], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $441(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $441(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZN3pvp9findFightEyRK6wizardyh (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [112])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_64)$4 != (int_64)0), [8160])
	$1 = ($1 + [96])
	*($11 + [8]) = $1
	$6 = *($3)
	*($11 + [104]) = $4
	*($11 + [96]) = $6
	*($11 + [24]) = [0]
	*($11 + [16]) = $5
	CALL memcpy(($11 + [64]), ($11 + [104]), [8])
	$3 = (($11 + [64]) | [8])
	CALL memcpy($3, ($11 + [96]), [8])
	$7 = ($11 + [80])
	CALL memcpy($7, ($11 + [16]), [1])
	$8 = ($11 + [81])
	CALL memcpy($8, ($11 + [24]), [1])
	CALL sha1(($11 + [64]), [18], ($11 + [32]))
	*($11 + [16]) = *($11 + [32])
	CALL $416(($11 + [24]), ($11 + [8]), ($11 + [16]))
	$5 = *($11 + [28])
	if ( ($5 == 0) ){ goto $label$2 }
	$9 = *($5 + [104])
	$10 = *($5 + [88])
	$4 = *($5 + [48])
	$6 = *($11 + [16])
	*($11 + [104]) = *($5 + [8])
	*($11 + [96]) = $4
	*($11 + [95]) = $10
	*($11 + [94]) = $9
	CALL memcpy(($11 + [64]), ($11 + [104]), [8])
	CALL memcpy($3, ($11 + [96]), [8])
	CALL memcpy($7, ($11 + [94]), [1])
	CALL memcpy($8, ($11 + [95]), [1])
	CALL sha1(($11 + [64]), [18], ($11 + [32]))
	if ( ((int_64)$6 != (int_64)*($11 + [32])) ){ goto $label$2 }
	$5 = *($11 + [28])
	if ( ($5 == 0) ){ goto $label$2 }
	CALL $417($0, $1, *($5))
	goto $label$1 
	
.LABEL $label$2
	*($0 + [4]) = [0]
	*($0) = $1
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [112])
}

void .FUNC $445 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $192 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $428($2)
	*(($0 + [8])) = $3
	*(($0 + [16])) = ($3 + $2)
	*(($2 = ($0 + [12]))) = $3
	$4 = *(($1 + [8]))
	$5 = (*(($1 + [12])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$3
	*($0 + [20 align=4]) = (int_64)0
	*(($0 + [28])) = [0]
	$2 = (*(($1 + [24])) - *($1 + [20]))
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL $428($2)
	*(($0 + [20])) = $3
	*(($0 + [28])) = ($3 + $2)
	*(($2 = ($0 + [24]))) = $3
	$5 = *(($1 + [20]))
	$1 = (*(($1 + [24])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $5, $1)
	*($2) = (*($2) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $445(($0 + [8]))
	
.LABEL $label$1
	CALL $445(($0 + [20]))
	(unreachable)
	return (unreachable)
}

void .FUNC $260 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$9 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [3])
	if ( ((uint_32)$3 <= (uint_32)int_32(($9 - $4) >> [3])) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$5 }
	*($0 + [4]) = $4
	CALL $430($4)
	$9 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$4 = [536870911]
	if ( ((uint_32)int_32($9 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$4 = $3
	$9 = int_32($9 >> [2])
	if ( ($9 <= $3) ){ goto $label$6 }
	$4 = $9
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$9 = ($4 << [3])
	$4 = CALL $428($9)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $9)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$3 = (($2 + [-8]) - $1)
	$9 = $4
	
.LOOP $label$7:
	*($9) = *($1)
	$9 = ($9 + [8])
	$1 = ($1 + [8])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	*(($0 + [4])) = (($4 + ($3 & [-8])) + [8])
	return 
	
.LABEL $label$4
	$8 = int_32($8 >> [3])
	$8 = (*($0 + [4]) - $4)
	$9 = ($1 + $8)
	$5 = ( $9 ? $2 : ((uint_32)$3 > (uint_32)$8) )
	$6 = ($5 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$8 }
	CALL memmove($4, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$8) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$3 }
	$4 = (($2 + [-8]) - $5)
	$3 = *(($0 + [4]))
	$1 = $3
	
.LOOP $label$9:
	*($1) = *($9)
	$1 = ($1 + [8])
	$9 = ($9 + [8])
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$9 }
	*(($0 + [4])) = (($3 + ($4 & [-8])) + [8])
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($4 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $445($0)
}

int_64 .FUNC _ZNK12fight_wizard11getCoolDownEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	$2 = ((int_64)*(( ($1 + [20]) ? $1 : $0 )) * (int_64)60000000)
	$2 = ((int_64)*(($1 + ( [21] ? [1] : $0 ))) * (int_64)60000000)
	$2 = ((int_64)*(($1 + ( [22] ? [2] : $0 ))) * (int_64)60000000)
	$2 = ((int_64)*(($1 + ( [23] ? [3] : $0 ))) * (int_64)60000000)
	$2 = ((int_64)*(($1 + ( [24] ? [4] : $0 ))) * (int_64)60000000)
	$2 = ((int_64)*(($1 + ( [25] ? [5] : $0 ))) * (int_64)60000000)
	$2 = ((int_64)*(($1 + ( [26] ? [6] : $0 ))) * (int_64)60000000)
	$2 = ((int_64)*(($1 + ( [27] ? [7] : $0 ))) * (int_64)60000000)
	$0 = ((uint_32)(*(($0 + [24])) - $1) > (uint_32)[20])
	$1 = *($0 + [20])
	$2 = ((int_64)*(($1 + ( [28] ? [8] : $0 ))) * (int_64)60000000)
	return ((int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) ) + (int_64)((int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) ) + (int_64)((int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) ) + (int_64)((int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) ) + (int_64)((int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) ) + (int_64)((int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) ) + (int_64)((int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) ) + (int_64)((int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) ) + (int_64)( $2 ? (int_64)360000000 : (uint_64)($2 <= (int_64)360000000) )))))))))
}

int_32 .FUNC $446 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $428($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC _ZN11CTournament10updateInfoEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*($7 + [24]) = (int_64)-1
	*($7 + [32]) = [0]
	$4 = *(*($0))
	*($7 + [8]) = $4
	*($7 + [16]) = $4
	*(($7 + [36])) = [0]
	*(($7 + [40])) = [0]
	$6 = [0]
	$1 = CALL db_find_i64($4, $4, (int_64)-3659885111347970048, *(*($0 + [4])))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $171(($7 + [8]), $1)
	CALL eosio_assert(((int_32)*($6 + [196]) == (int_32)($7 + [8])), [320])
	
.LABEL $label$1
	CALL $296(($7 + [48]), [3248], *(($0 + [4])))
	$5 = (*($7 + [48]) & [1])
	$2 = *($7 + [56])
	$3 = ( $2 ? (($7 + [48]) | [1]) : $5 )
	$1 = ((int_32)$6 != (int_32)[0])
	if ( ($5 == 0) ){ goto $label$2 }
	CALL $430($2)
	
.LABEL $label$2
	CALL eosio_assert($1, $3)
	$4 = *($0 + [16])
	*($7 + [48]) = $0
	CALL eosio_assert($1, [832])
	CALL $297(($7 + [8]), $6, $4, ($7 + [48]))
	CALL $174(($7 + [32]))
	*([0] + [4]) = ($7 + [64])
}

int_64 .FUNC _ZNK12fight_wizard14getRagCoolDownERKh (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$1 = ((uint_32)*($1) % (uint_32)[10])
	$2 = *($0 + [20])
	$3 = ((int_64)*(($2 + ( ($1 + [20]) ? $1 : ((uint_32)(*(($0 + [24])) - $2) > (uint_32)[20]) ))) * (int_64)60000000)
	return ( $3 ? (int_64)360000000 : (uint_64)($3 <= (int_64)360000000) )
}

int_32 .FUNC $447 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $428($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC _ZN11CTournament21WizardStateByWizInTIdERKy (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$2 = *(CALL _ZN11CTournament16WizardByWizInTIdERKy($0, $1) + [80])
	$3 = *(($0 + [168]))
	$7 = *(($0 + [172]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [144])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [12]) == (int_32)$5), [320])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)-2035737192754708480, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $161($5, $7)
	CALL eosio_assert(((int_32)*($6 + [12]) == (int_32)$5), [320])
	
.LABEL $label$3
	CALL $295($8, [3184], $1)
	$5 = (*($8) & [1])
	$0 = *($8 + [8])
	$7 = ( $0 ? ($8 | [1]) : $5 )
	$4 = ((int_32)$6 != (int_32)[0])
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $430($0)
	
.LABEL $label$5
	CALL eosio_assert($4, $7)
	*([0] + [4]) = ($8 + [16])
	return $6
}

int_32 .FUNC _ZN3pvp15getWizOffenceAtERK12fight_wizardi (int_32 $0, int_32 $1, int_32 $2)
{
	$2 = ((*((*($1 + [8]) + $2)) << [24]) + [-838860800])
	$1 = int_32($2 >> [24])
	if ( ((int_32)$2 < (int_32)[-16777215]) ){ goto $label$2 }
	$2 = ($1 + [8])
	goto $label$1 
	
.LABEL $label$2
	$2 = ([8] - ((int_32)$1 / (int_32)[2]))
	
.LABEL $label$1
	return ($2 & [255])
}

void .FUNC $386 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*($4 + [8]) = $2
	CALL $387(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $428($2)
	*(($0 + [8])) = $3
	*(($0 + [16])) = ($3 + $2)
	*(($2 = ($0 + [12]))) = $3
	$4 = *(($1 + [8]))
	$5 = (*(($1 + [12])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$3
	*($0 + [20 align=4]) = (int_64)0
	*(($0 + [28])) = [0]
	$2 = (*(($1 + [24])) - *($1 + [20]))
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$3 = CALL $428($2)
	*(($0 + [20])) = $3
	*(($0 + [28])) = ($3 + $2)
	*(($2 = ($0 + [24]))) = $3
	$4 = *(($1 + [20]))
	$5 = (*(($1 + [24])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$4
	*($0 + [32]) = *($1 + [32])
	*(($0 + [40])) = *(($1 + [40]))
	return $0
	
.LABEL $label$2
	CALL $445(($0 + [8]))
	
.LABEL $label$1
	CALL $445(($0 + [20]))
	(unreachable)
	return (unreachable)
}

void .FUNC $302 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1 + [24])
	$7 = *(($1 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$1), [320])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-7297066292185632768, $2)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $138($1, $6)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$1), [320])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [2]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [592])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[3]), [592])
	$2 = ($0 + [4])
	CALL memcpy(*($2), $5, [4])
	$7 = (*($2) + [4])
	*($2) = $7
	$5 = ($5 + [4])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $263 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$7 = [8]
	$2 = ($1 + [8])
	$3 = *($1 + [8])
	$8 = *(($1 + [12]))
	$4 = ($8 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [3]))
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$2 }
	$7 = (($4 & [-8]) + $7)
	
.LABEL $label$2
	$3 = ($1 + [20])
	$4 = *($1 + [20])
	$8 = *(($1 + [24]))
	$5 = ($8 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [1]))
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$4 }
	$7 = (($5 & [-2]) + $7)
	
.LABEL $label$4
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $76($0, $7)
	$8 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$8 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($9) = $7
	*($9 + [8]) = $8
	CALL eosio_assert(((int_32)($8 - $7) > (int_32)[7]), [592])
	CALL memcpy($7, $1, [8])
	*($9 + [4]) = ($7 + [8])
	CALL $210($9, $2)
	CALL $294($9, $3)
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $307 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-2035932804877062141, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [320])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $134($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)-2035932804877062144, $5))
	CALL eosio_assert(((int_32)*($2 + [88]) == (int_32)$4), [320])
	
.LABEL $label$4
	*(($2 + [108])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC _ZN11CTournamentD2Ev (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0 + [4])
	if ( ($3 == 0) ){ goto $label$1 }
	$5 = *($3 + [184])
	if ( ($5 == 0) ){ goto $label$2 }
	*(($3 + [188])) = $5
	CALL $430($5)
	
.LABEL $label$2
	$5 = *($3 + [144])
	if ( ($5 == 0) ){ goto $label$3 }
	*(($3 + [148])) = $5
	CALL $430($5)
	
.LABEL $label$3
	$5 = *($3 + [96])
	if ( ($5 == 0) ){ goto $label$4 }
	*(($3 + [100])) = $5
	CALL $430($5)
	
.LABEL $label$4
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($3 + [28])))
	
.LABEL $label$5
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*(($3 + [16])))
	
.LABEL $label$6
	CALL $430($3)
	
.LABEL $label$1
	$3 = *($0 + [8])
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $430($3)
	
.LABEL $label$7
	$2 = *(($0 + [368]))
	if ( ($2 == 0) ){ goto $label$8 }
	$1 = ($0 + [372])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL $430(*(($5 + [56])))
	
.LABEL $label$13
	CALL $430($5)
	
.LABEL $label$12
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$11 }
	$3 = *(($0 + [368]))
	goto $label$9 
	
.LABEL $label$10
	$3 = $2
	
.LABEL $label$9
	*($1) = $2
	CALL $430($3)
	
.LABEL $label$8
	$2 = *(($0 + [328]))
	if ( ($2 == 0) ){ goto $label$14 }
	$1 = ($0 + [332])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$16 }
	
.LOOP $label$17:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$18 }
	CALL $430($5)
	
.LABEL $label$18
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$17 }
	$3 = *(($0 + [328]))
	goto $label$15 
	
.LABEL $label$16
	$3 = $2
	
.LABEL $label$15
	*($1) = $2
	CALL $430($3)
	
.LABEL $label$14
	$1 = *(($0 + [288]))
	if ( ($1 == 0) ){ goto $label$19 }
	$4 = ($0 + [292])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$21 }
	
.LOOP $label$22:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$23 }
	$2 = *($5 + [8])
	if ( ($2 == 0) ){ goto $label$24 }
	*(($5 + [12])) = $2
	CALL $430($2)
	
.LABEL $label$24
	CALL $430($5)
	
.LABEL $label$23
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$22 }
	$3 = *(($0 + [288]))
	goto $label$20 
	
.LABEL $label$21
	$3 = $1
	
.LABEL $label$20
	*($4) = $1
	CALL $430($3)
	
.LABEL $label$19
	$1 = *(($0 + [248]))
	if ( ($1 == 0) ){ goto $label$25 }
	$4 = ($0 + [252])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$27 }
	
.LOOP $label$28:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$29 }
	$2 = *($5 + [16])
	if ( ($2 == 0) ){ goto $label$30 }
	*(($5 + [20])) = $2
	CALL $430($2)
	
.LABEL $label$30
	CALL $430($5)
	
.LABEL $label$29
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$28 }
	$3 = *(($0 + [248]))
	goto $label$26 
	
.LABEL $label$27
	$3 = $1
	
.LABEL $label$26
	*($4) = $1
	CALL $430($3)
	
.LABEL $label$25
	$1 = *(($0 + [208]))
	if ( ($1 == 0) ){ goto $label$31 }
	$4 = ($0 + [212])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$33 }
	
.LOOP $label$34:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$35 }
	$2 = *($5 + [8])
	if ( ($2 == 0) ){ goto $label$36 }
	*(($5 + [12])) = $2
	CALL $430($2)
	
.LABEL $label$36
	CALL $430($5)
	
.LABEL $label$35
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$34 }
	$3 = *(($0 + [208]))
	goto $label$32 
	
.LABEL $label$33
	$3 = $1
	
.LABEL $label$32
	*($4) = $1
	CALL $430($3)
	
.LABEL $label$31
	$2 = *(($0 + [168]))
	if ( ($2 == 0) ){ goto $label$37 }
	$1 = ($0 + [172])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$39 }
	
.LOOP $label$40:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$41 }
	CALL $430($5)
	
.LABEL $label$41
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$40 }
	$3 = *(($0 + [168]))
	goto $label$38 
	
.LABEL $label$39
	$3 = $2
	
.LABEL $label$38
	*($1) = $2
	CALL $430($3)
	
.LABEL $label$37
	$1 = *(($0 + [128]))
	if ( ($1 == 0) ){ goto $label$42 }
	$4 = ($0 + [132])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$44 }
	
.LOOP $label$45:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$46 }
	$2 = *(($3 + [52]))
	if ( ($2 == 0) ){ goto $label$47 }
	*(($3 + [56])) = $2
	CALL $430($2)
	
.LABEL $label$47
	$2 = *(($3 + [40]))
	if ( ($2 == 0) ){ goto $label$48 }
	*(($3 + [44])) = $2
	CALL $430($2)
	
.LABEL $label$48
	CALL $430($3)
	
.LABEL $label$46
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$45 }
	$3 = *(($0 + [128]))
	goto $label$43 
	
.LABEL $label$44
	$3 = $1
	
.LABEL $label$43
	*($4) = $1
	CALL $430($3)
	
.LABEL $label$42
	$1 = *(($0 + [88]))
	if ( ($1 == 0) ){ goto $label$49 }
	$4 = ($0 + [92])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$51 }
	
.LOOP $label$52:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$53 }
	$2 = *($5 + [44])
	if ( ($2 == 0) ){ goto $label$54 }
	*(($5 + [48])) = $2
	CALL $430($2)
	
.LABEL $label$54
	CALL $430($5)
	
.LABEL $label$53
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$52 }
	$3 = *(($0 + [88]))
	goto $label$50 
	
.LABEL $label$51
	$3 = $1
	
.LABEL $label$50
	*($4) = $1
	CALL $430($3)
	
.LABEL $label$49
	$1 = *(($0 + [48]))
	if ( ($1 == 0) ){ goto $label$55 }
	$4 = ($0 + [52])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$57 }
	
.LOOP $label$58:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$59 }
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$60 }
	*(($5 + [36])) = $2
	CALL $430($2)
	
.LABEL $label$60
	CALL $430($5)
	
.LABEL $label$59
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$58 }
	$3 = *(($0 + [48]))
	goto $label$56 
	
.LABEL $label$57
	$3 = $1
	
.LABEL $label$56
	*($4) = $1
	CALL $430($3)
	
.LABEL $label$55
	return $0
}

void .FUNC _ZN11CTournament12RemoveWizardERK12fight_wizard (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [64])
	*([0] + [4]) = $13
	CALL eosio_assert(((uint_64)CALL $fimport$16() <= (uint_64)*(*($0 + [4]) + [48])), [3328])
	$2 = ($0 + [104])
	*($13 + [16]) = $2
	$5 = *(*($0 + [4]))
	$9 = *($1)
	*(($1 = CALL $428([16])) + [8]) = $9
	*($1) = $5
	$7 = CALL $429([16])
	CALL memcpy($7, $1, [16])
	CALL sha1($7, [16], ($13 + [32]))
	if ( ($7 == 0) ){ goto $label$1 }
	CALL $431($7)
	
.LABEL $label$1
	*($13 + [8]) = *($13 + [32])
	CALL $307(($13 + [24]), ($13 + [16]), ($13 + [8]))
	$10 = [0]
	$7 = *($13 + [28])
	if ( ($7 == 0) ){ goto $label$2 }
	$5 = *($7 + [8])
	$9 = *($7 + [24])
	$3 = *($13 + [8])
	*(($7 = CALL $428([16])) + [8]) = $9
	*($7) = $5
	$11 = CALL $429([16])
	CALL memcpy($11, $7, [16])
	CALL sha1($11, [16], ($13 + [32]))
	if ( ($11 == 0) ){ goto $label$3 }
	CALL $431($11)
	
.LABEL $label$3
	$5 = *($13 + [32])
	if ( ($7 == 0) ){ goto $label$4 }
	CALL $430($7)
	
.LABEL $label$4
	if ( ((int_64)$3 != (int_64)$5) ){ goto $label$2 }
	$10 = *($13 + [28])
	
.LABEL $label$2
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $430($1)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [3376])
	$5 = *($10 + [80])
	$12 = *(($0 + [168]))
	$11 = *(($0 + [172]))
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$6 }
	$1 = ($11 + [-24])
	$6 = ([0] - $12)
	
.LOOP $label$7:
	if ( ((int_64)*(*($1)) == (int_64)$5) ){ goto $label$6 }
	$11 = $1
	$7 = ($1 + [-24])
	$1 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$4 = ($0 + [144])
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$9 }
	$12 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [12]) == (int_32)$4), [320])
	goto $label$8 
	
.LABEL $label$9
	$12 = [0]
	$1 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)-2035737192754708480, $5)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$8 }
	$12 = CALL $161($4, $1)
	CALL eosio_assert(((int_32)*($12 + [12]) == (int_32)$4), [320])
	
.LABEL $label$8
	$8 = ((int_32)$12 != (int_32)[0])
	CALL eosio_assert($8, [3440])
	CALL eosio_assert(((int_32)*($12 + [10]) == (int_32)[1]), [3536])
	$5 = *($10)
	$10 = *(($0 + [128]))
	$11 = *(($0 + [132]))
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$10 }
	$1 = ($11 + [-24])
	$6 = ([0] - $10)
	
.LOOP $label$11:
	if ( ((int_64)*(*($1)) == (int_64)$5) ){ goto $label$10 }
	$11 = $1
	$7 = ($1 + [-24])
	$1 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$13 }
	$1 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$2), [320])
	goto $label$12 
	
.LABEL $label$13
	$1 = [0]
	$7 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)-2035932804877062144, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$12 }
	$1 = CALL $134($2, $7)
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$2), [320])
	
.LABEL $label$12
	$7 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($7, [448])
	CALL eosio_assert($7, [496])
	$7 = CALL db_next_i64(*($1 + [92]), ($13 + [32]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	CALL $134($2, $7)
	
.LABEL $label$14
	CALL $137($2, $1)
	CALL eosio_assert($8, [448])
	CALL eosio_assert($8, [496])
	$1 = CALL db_next_i64(*($12 + [16]), ($13 + [32]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$15 }
	CALL $161($4, $1)
	
.LABEL $label$15
	CALL $136($4, $12)
	*([0] + [4]) = ($13 + [64])
}

int_32 .FUNC _ZN12fight_wizardC2E6wizard (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8 align=4]) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = [0]
	*(($0 + [28])) = [0]
	*($0) = *($1)
	if ( ((int_32)*(($1 + [12])) == (int_32)*($1 + [8])) ){ goto $label$1 }
	if ( ((int_32)*(($1 + [24])) == (int_32)*($1 + [20])) ){ goto $label$1 }
	*(($0 + [8])) = (int_64)0
	*(($5 = ($0 + [16]))) = (int_64)0
	*(($0 + [24])) = (int_64)0
	$4 = ($1 + [8])
	$7 = ($0 + [8])
	CALL $308($7, *($4))
	$3 = (*($4) + [1])
	$4 = ($0 + [12])
	$6 = *($4)
	if ( ((int_32)$6 == (int_32)*($5)) ){ goto $label$3 }
	*($6) = *($3)
	$5 = (*($4) + [1])
	*($4) = $5
	goto $label$2 
	
.LABEL $label$3
	CALL $308($7, $3)
	$5 = *($4)
	
.LABEL $label$2
	$4 = (*(($1 + [8])) + [2])
	if ( ((int_32)$5 == (int_32)*(($0 + [16]))) ){ goto $label$5 }
	*($5) = *($4)
	$4 = (*($4) + [1])
	*(($4 = ($0 + [12]))) = $4
	goto $label$4 
	
.LABEL $label$5
	CALL $308($7, $4)
	$4 = *(($0 + [12]))
	
.LABEL $label$4
	$5 = (*(($1 + [8])) + [3])
	if ( ((int_32)$4 == (int_32)*(($0 + [16]))) ){ goto $label$7 }
	*($4) = *($5)
	$4 = (*($4) + [1])
	*(($4 = ($0 + [12]))) = $4
	goto $label$6 
	
.LABEL $label$7
	CALL $308($7, $5)
	$4 = *(($0 + [12]))
	
.LABEL $label$6
	$5 = (*(($1 + [8])) + [4])
	if ( ((int_32)$4 == (int_32)*(($0 + [16]))) ){ goto $label$9 }
	*($4) = *($5)
	$4 = (*($4) + [1])
	*(($4 = ($0 + [12]))) = $4
	goto $label$8 
	
.LABEL $label$9
	CALL $308($7, $5)
	$4 = *(($0 + [12]))
	
.LABEL $label$8
	$5 = (*(($1 + [8])) + [5])
	if ( ((int_32)$4 == (int_32)*(($0 + [16]))) ){ goto $label$11 }
	*($4) = *($5)
	$4 = (*($4) + [1])
	*(($4 = ($0 + [12]))) = $4
	goto $label$10 
	
.LABEL $label$11
	CALL $308($7, $5)
	$4 = *(($0 + [12]))
	
.LABEL $label$10
	$5 = (*(($1 + [8])) + [6])
	if ( ((int_32)$4 == (int_32)*(($0 + [16]))) ){ goto $label$13 }
	*($4) = *($5)
	$4 = (*($4) + [1])
	*(($4 = ($0 + [12]))) = $4
	goto $label$12 
	
.LABEL $label$13
	CALL $308($7, $5)
	$4 = *(($0 + [12]))
	
.LABEL $label$12
	$2 = ($0 + [20])
	$5 = (*(($1 + [8])) + [7])
	if ( ((int_32)$4 == (int_32)*(($0 + [16]))) ){ goto $label$15 }
	*($4) = *($5)
	*(($7 = ($0 + [12]))) = (*($7) + [1])
	goto $label$14 
	
.LABEL $label$15
	CALL $308($7, $5)
	
.LABEL $label$14
	$7 = [0]
	
.LOOP $label$16:
	$5 = (*(($1 + [20])) + $7)
	$4 = ($0 + [24])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)*(($0 + [28]))) ){ goto $label$18 }
	*($3) = *($5)
	*($4) = (*($4) + [1])
	goto $label$17 
	
.LABEL $label$18
	CALL $308($2, $5)
	
.LABEL $label$17
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[20]) ){ goto $label$16 }
	$7 = [10]
	$3 = ($1 + [20])
	$6 = ($0 + [28])
	$4 = ($0 + [24])
	
.LOOP $label$19:
	$5 = *($3)
	*($8 + [14]) = $7
	$5 = CALL _ZNK12fight_wizard15getRagLegendaryERKhS1_($7, ($8 + [14]), ($5 + $7))
	*($8 + [15]) = $5
	$1 = *($4)
	if ( ((uint_32)$1 >= (uint_32)*($6)) ){ goto $label$21 }
	*($1) = $5
	*($4) = (*($4) + [1])
	goto $label$20 
	
.LABEL $label$21
	CALL $310($2, ($8 + [15]))
	
.LABEL $label$20
	$7 = ($7 + [1])
	if ( ((int_32)$7 != (int_32)[20]) ){ goto $label$19 }
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC _ZNK12fight_wizard15getRagLegendaryERKhS1_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [64])
	*([0] + [4]) = $14
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1328]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$13 = *($6)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$13 = ($13 + [165])
	goto $label$3 
	
.LABEL $label$4
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($13 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1328]
	$11 = (int_64)0
	
.LOOP $label$5:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$6 }
	$13 = *($6)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$13 = ($13 + [165])
	goto $label$7 
	
.LABEL $label$8
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($13 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$6
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$5 }
	$6 = [0]
	*(($14 + [56])) = [0]
	*($14 + [32]) = $11
	*($14 + [24]) = $9
	*($14 + [40]) = (int_64)-1
	*($14 + [48]) = (int_64)0
	$13 = CALL $311(($14 + [24]), (CASTING uint_64)(uint_32 ((uint_32)*($1) % (uint_32)[10])), [1584])
	*(($14 + [12])) = (int_64)0
	*($14 + [8]) = [0]
	*($14) = *($13)
	$4 = (*(($13 + [12])) - *($13 + [8]))
	$1 = int_32($4 >> [2])
	if ( ($1 == 0) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)[1073741824]) ){ goto $label$9 }
	$4 = CALL $428($4)
	*(($5 = ($14 + [8]))) = $4
	*(($14 + [16])) = ($4 + ($1 << [2]))
	*(($1 = ($14 + [12]))) = $4
	$3 = *(($13 + [8]))
	$12 = (*(($13 + [12])) - $3)
	if ( ((int_32)$12 < (int_32)[1]) ){ goto $label$12 }
	CALL memcpy($4, $3, $12)
	*($1) = (*($1) + $12)
	$4 = *($5)
	
.LABEL $label$12
	$12 = $4
	goto $label$10 
	
.LABEL $label$11
	$4 = [0]
	$12 = [0]
	
.LABEL $label$10
	*($14 + [20]) = *($13 + [20])
	$13 = *(($12 + (*($2) << [2])))
	
.LOOP $label$13:
	$1 = $6
	$6 = ($1 + [1])
	$13 = uint_32($13 >> [1])
	if ( $13 ){ goto $label$13 }
	if ( ($12 == 0) ){ goto $label$14 }
	*(($14 + [12])) = $12
	CALL $430($4)
	
.LABEL $label$14
	$12 = ($1 & [255])
	$4 = *($14 + [48])
	if ( ($4 == 0) ){ goto $label$15 }
	$2 = ($14 + [52])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$17 }
	
.LOOP $label$18:
	$6 = ($6 + [-24])
	$13 = *($6)
	*($6) = [0]
	if ( ($13 == 0) ){ goto $label$19 }
	$1 = *($13 + [8])
	if ( ($1 == 0) ){ goto $label$20 }
	*(($13 + [12])) = $1
	CALL $430($1)
	
.LABEL $label$20
	CALL $430($13)
	
.LABEL $label$19
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$18 }
	$6 = *(($14 + [48]))
	goto $label$16 
	
.LABEL $label$17
	$6 = $4
	
.LABEL $label$16
	*($2) = $4
	CALL $430($6)
	
.LABEL $label$15
	*([0] + [4]) = ($14 + [64])
	return $12
	
.LABEL $label$9
	CALL $445(($14 + [8]))
	return (unreachable)
}

void .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ($5 - $4)
	$7 = ($3 + [1])
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$2 = (*($0 + [8]) - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $428($6)
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	*(($3 = ($7 + $3))) = *($1)
	$5 = ($5 - $4)
	$1 = ($3 - $5)
	$6 = ($7 + $6)
	$7 = ($3 + [1])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $430($4)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC _ZN3pvp8runFightERK12fight_wizardS2_hR9fight_log (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	if ( ((uint_32)$3 >= (uint_32)[2]) ){ goto $label$2 }
	$3 = CALL _ZN3pvp16runFightGenotypeERK12fight_wizardS2_R9fight_logh($0, $1, $2, $4, $3)
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 != (int_32)[2]) ){ goto $label$3 }
	$3 = CALL _ZN3pvp17runFightPhenotypeERK12fight_wizardS2_R9fight_logh($0, $1, $2, $4, [0])
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [1968])
	
.LABEL $label$1
	*($4) = ($3 + [1])
	*($4 + [24]) = CALL current_time()
	return $3
}

void .FUNC $435 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $428(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $430($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $434 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $428($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $430($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $437 (int_32 $0, int_32 $1)
{
	return CALL $436($0, $1, CALL $473($1))
}

int_32 .FUNC $436 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $434($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

void .FUNC $431 (int_32 $0)
{
	CALL $430($0)
}

void .FUNC $430 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $433 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $434($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $432 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $439 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $434($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $438 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $439($0, $1, $2, CALL $473($2))
}

void .FUNC $282 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $268 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL $430(*(($1 + [56])))
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $430($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC _ZN11CTournament7FactoryEP3pvpy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [64])
	*([0] + [4]) = $6
	*($6 + [40]) = $1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), CALL $170([1840]))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$4 = *($0)
	*($6) = $4
	*($6 + [8]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-3659885111347970048, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $171($6, $5)
	CALL eosio_assert(((int_32)*($2 + [196]) == (int_32)$6), [320])
	$5 = CALL $428([384])
	$3 = CALL $428([200])
	CALL $172($3, $2)
	*($5 + [4]) = $3
	*($5) = $0
	*($5 + [40]) = (int_64)-1
	$4 = *($0)
	*($5 + [16]) = $4
	*($5 + [24]) = $4
	*($5 + [32]) = $4
	*($5 + [48]) = [0]
	*($5 + [52]) = [0]
	*($5 + [56]) = [0]
	*($5 + [64]) = $4
	*($5 + [72]) = $4
	*($5 + [80]) = (int_64)-1
	*($5 + [88]) = [0]
	*($5 + [92]) = [0]
	*($5 + [96]) = [0]
	*($5 + [100 align=1]) = [0]
	*($5 + [104]) = $4
	*($5 + [112]) = $4
	*($5 + [120]) = (int_64)-1
	*($5 + [128]) = [0]
	*($5 + [132]) = [0]
	*($5 + [136]) = [0]
	*($5 + [140 align=1]) = [0]
	*($5 + [144]) = $4
	*($5 + [152]) = $4
	*($5 + [160]) = (int_64)-1
	*($5 + [168]) = [0]
	*($5 + [172]) = [0]
	*($5 + [176]) = [0]
	*($5 + [184]) = $4
	*($5 + [192]) = $4
	*($5 + [200]) = (int_64)-1
	*($5 + [208]) = [0]
	*($5 + [212]) = [0]
	*($5 + [216]) = [0]
	*($5 + [224]) = $4
	*($5 + [232]) = $4
	*($5 + [240]) = (int_64)-1
	*($5 + [248]) = [0]
	*($5 + [252]) = [0]
	*($5 + [256]) = [0]
	*($5 + [260]) = [0]
	*($5 + [264]) = $4
	*($5 + [272]) = $4
	*($5 + [280]) = (int_64)-1
	*($5 + [288]) = [0]
	*($5 + [292]) = [0]
	*($5 + [296]) = [0]
	*($5 + [304]) = $4
	*($5 + [312]) = $4
	*($5 + [320]) = (int_64)-1
	*($5 + [328]) = [0]
	*($5 + [332]) = [0]
	*($5 + [336]) = [0]
	$4 = *($5 + [16])
	*($5 + [344]) = $4
	*($5 + [352]) = $4
	*($5 + [360]) = (int_64)-1
	*($5 + [368]) = [0]
	*($5 + [372]) = [0]
	*($5 + [376]) = [0]
	*($5 + [380]) = [0]
	$2 = ($5 + [224])
	*(($0 = CALL $428([32])) + [4]) = $2
	*($0) = $5
	*($0 + [8]) = [0]
	*($0 + [12]) = $2
	*($0 + [24]) = [0]
	*($0 + [16]) = *($5 + [16])
	*($5 + [8]) = $0
	goto $label$1 
	
.LABEL $label$2
	CALL $173(($6 + [48]), [1872], ($6 + [40]), [1888])
	$5 = (*($6 + [48]) & [1])
	$2 = *($6 + [56])
	$0 = ( $2 ? (($6 + [48]) | [1]) : $5 )
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $430($2)
	
.LABEL $label$3
	$5 = [0]
	CALL eosio_assert([0], $0)
	
.LABEL $label$1
	CALL $174(($6 + [24]))
	*([0] + [4]) = ($6 + [64])
	return $5
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [816])
	CALL memcpy(($0 + [16]), *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$1 = *($1)
	CALL eosio_assert(((int_32)*($1 + [8]) != (int_32)*($1 + [4])), [816])
	CALL memcpy(($0 + [18]), *($1 + [4]), [1])
	*($1 + [4]) = (*($1 + [4]) + [1])
}

void .FUNC $286 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$8 = *($3)
	*($1) = *($8)
	$3 = [8]
	$4 = ($1 + [8])
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$1 }
	CALL $234($4, *($8 + [8]), *(($8 + [12])))
	
.LABEL $label$1
	CALL eosio_assert([1], [992])
	$5 = *($4)
	$8 = *(($1 + [12]))
	$6 = ($8 - $5)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$3 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$3
	if ( ($3 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9) = $8
	*($9 + [8]) = ($8 + $3)
	CALL eosio_assert(((int_32)$3 > (int_32)[7]), [592])
	CALL memcpy($8, $1, [8])
	*($9 + [4]) = ($8 + [8])
	CALL $210($9, $4)
	CALL db_update_i64(*($1 + [28]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-7047450998071099392) ){ goto $label$7 }
	*(($0 + [16])) = (int_64)-7047450998071099391
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $287 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [528])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $428([40])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3) = (int_64)0
	CALL $260(($3 + [8]), [3120], [3152])
	*($3 + [24]) = $1
	CALL $288(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)-7047450998071099392
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)-7047450998071099392
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $289(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [12])) = $1
	CALL $430($1)
	
.LABEL $label$4
	CALL $430($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $284 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = $1
	$1 = *($2)
	$3 = *(*($2 + [4]))
	*($0) = *($3)
	*($0 + [8]) = *(($3 + [8]))
	CALL eosio_assert([1], [592])
	CALL memcpy($4, $0, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($4 | [8]), ($0 + [8]), [4])
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)-4157503053760561152, *(*($2 + [8])), (int_64)-4157503053760561152, $4, [12])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4157503053760561152) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-4157503053760561151
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	return $0
}

int_32 .FUNC $285 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [784])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	$6 = ($4 + $5)
	*($7 + [40]) = $6
	if ( ((uint_32)$5 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$6 = *(($7 + [40]))
	$4 = *($7 + [36])
	
.LABEL $label$7
	*(($5 = CALL $428([40])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5) = (int_64)0
	$3 = ($5 + [8])
	CALL $260($3, [3120], [3152])
	*($5 + [24]) = $0
	CALL eosio_assert(((uint_32)($6 - $4) > (uint_32)[7]), [816])
	CALL memcpy($5, $4, [8])
	*($7 + [36]) = ($4 + [8])
	CALL $114(($7 + [32]), $3)
	*($5 + [28]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-7047450998071099392
	$6 = *($5 + [28])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)-7047450998071099392
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $289(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $124(*($1), ($0 + [32]))
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $430(*(($4 + [40])))
	
.LABEL $label$7
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $430(*(($4 + [40])))
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $288 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$8 = *(*($0 + [4]))
	*($1) = *($8)
	$6 = [8]
	$3 = ($1 + [8])
	$2 = *($0)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$1 }
	CALL $234($3, *($8 + [8]), *(($8 + [12])))
	
.LABEL $label$1
	$4 = *($3)
	$8 = *(($1 + [12]))
	$5 = ($8 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$3
	if ( ($6 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [592])
	CALL memcpy($8, $1, [8])
	*($9 + [4]) = ($8 + [8])
	CALL $210($9, $3)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-7047450998071099392, *(*($0 + [8])), (int_64)-7047450998071099392, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)-7047450998071099392) ){ goto $label$7 }
	*(($2 + [16])) = (int_64)-7047450998071099391
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $289 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $430($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $430(*(($1 + [40])))
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $430($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC _ZN11CTournament17ProcessNextBattleEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [544])
	*([0] + [4]) = $20
	CALL eosio_assert((int_64)(*(*($0 + [4]) + [72]) == 0), [1904])
	CALL eosio_assert(((uint_64)*(*($0 + [4]) + [56]) <= (uint_64)CALL $fimport$16()), [1936])
	$18 = *(*($0 + [4]) + [48])
	$15 = CALL current_time()
	CALL _ZN11CTournament13GetNextBattleEv(($20 + [536]), $0)
	$8 = *($20 + [540])
	$14 = *($8 + [8])
	*($20 + [532]) = $14
	*($20 + [520]) = *($8 + [9])
	*($20 + [512]) = [0]
	*($20 + [504]) = (int_64)0
	CALL $185(($20 + [504]), ($8 + [16]))
	$2 = (*($20 + [540]) + [24])
	$8 = *($20 + [508])
	if ( ((int_32)$8 == (int_32)*($20 + [512])) ){ goto $label$2 }
	*($8) = *($2)
	*($20 + [508]) = ($8 + [8])
	goto $label$1 
	
.LABEL $label$2
	CALL $185(($20 + [504]), $2)
	$14 = *($20 + [532])
	
.LABEL $label$1
	$5 = (($20 + [504]) | [4])
	if ( ((uint_32)$14 > (uint_32)[32]) ){ goto $label$23 }
	goto $label$3 
	
.LABEL $label$24
	CALL _ZN11CTournament10PayWinnersEv($0)
	goto $label$13 
	
.LABEL $label$23
	CALL eosio_assert([0], [2016])
	goto $label$13 
	
.LABEL $label$22
	CALL _ZN11CTournament8AddLoserEyb($0, *(*($20 + [504])), ((uint_64)$18 <= (uint_64)$15))
	goto $label$13 
	
.LABEL $label$21
	*($20 + [492]) = [0]
	$16 = *($20 + [520])
	$14 = *($20 + [504])
	*($20 + [488]) = [0]
	$8 = *($0 + [8])
	$17 = *($14)
	*($20 + [496]) = [0]
	*(($14 = CALL $428([8]))) = $17
	*($20 + [488]) = $14
	$14 = ($14 + [8])
	*($20 + [496]) = $14
	*($20 + [492]) = $14
	CALL _ZN15CTournStructure13AddWizToLevelEiNSt3__16vectorIyNS0_9allocatorIyEEEEb($8, (CASTING uint_32)(uint_64 ((int_64)$16 + (int_64)1)), ($20 + [488]), [1])
	$14 = *($20 + [488])
	if ( ($14 == 0) ){ goto $label$25 }
	*($20 + [492]) = $14
	CALL $430($14)
	
.LABEL $label$25
	CALL _ZN11CTournament14AddWinToWizardERKy($0, *($20 + [504]))
	goto $label$13 
	
.LABEL $label$20
	$8 = [0]
	*((($20 + [296]) + [16])) = [0]
	*($20 + [304]) = (int_64)0
	$1 = CALL $94((($20 + [296]) + [32]))
	$14 = ($0 + [4])
	*($20 + [480]) = *(*($14))
	*(($2 = CALL $94(($20 + [152]))) + [104]) = *(*($14) + [164])
	$14 = CALL _ZN11CTournament16WizardByWizInTIdERKy($0, *($20 + [504]))
	*(($4 = (($20 + [64]) + [24]))) = *(($14 + [24]))
	*(($6 = (($20 + [64]) + [16]))) = *(($14 + [16]))
	*(($9 = (($20 + [64]) + [8]))) = *(($14 + [8]))
	*($20 + [64]) = *($14)
	$3 = CALL $192((($20 + [64]) + [32]), ($14 + [32]))
	*((($20 + [64]) + [80])) = *(($14 + [80]))
	*((($20 + [64]) + [72])) = *(($14 + [72]))
	*($20 + [128]) = *($14 + [64])
	*($2 + [8]) = *($3)
	$10 = (($20 + [64]) + [44])
	$11 = (($20 + [64]) + [40])
	CALL $109(($2 + [16]), *($11), *($10))
	$12 = (($20 + [64]) + [56])
	$13 = (($20 + [64]) + [52])
	CALL $109(($2 + [28]), *($13), *($12))
	*(($2 + [40])) = *($6)
	$14 = CALL _ZN11CTournament16WizardByWizInTIdERKy($0, (*($20 + [504]) + [8]))
	*($4) = *(($14 + [24]))
	*($6) = *(($14 + [16]))
	*($9) = *(($14 + [8]))
	*($20 + [64]) = *($14)
	$16 = *($14 + [32])
	*($20 + [96]) = $16
	$4 = ($20 + [128])
	if ( ((int_32)$14 == (int_32)($20 + [64])) ){ goto $label$26 }
	CALL $109($11, *(($14 + [40])), *(($14 + [44])))
	CALL $109($13, *(($14 + [52])), *(($14 + [56])))
	$16 = *($3)
	
.LABEL $label$26
	$3 = ($2 + [8])
	*($4) = *($14 + [64])
	*(($4 + [16])) = *(($14 + [80]))
	*(($4 + [8])) = *(($14 + [72]))
	*($2 + [48]) = $16
	CALL $109(($2 + [56]), *($11), *($10))
	CALL $109(($2 + [68]), *($13), *($12))
	*(($2 + [80])) = *($6)
	CALL eosio_assert([1], [1056])
	$4 = ($2 + [48])
	$16 = (int_64)5459781
	
.LOOP $label$27:
	$14 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	
.LOOP $label$29:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$27 }
	goto $label$17 
	
.LABEL $label$19
	if ( ((uint_64)$18 > (uint_64)$15) ){ goto $label$16 }
	$14 = [2]
	*($20 + [532]) = [2]
	*($20 + [508]) = *($20 + [504])
	CALL _ZN11CTournament17AddDefferedBattleE12unsigned_int($0, [0])
	$6 = ($20 + [504])
	goto $label$9 
	
.LABEL $label$18
	$6 = [0]
	
.LABEL $label$17
	CALL eosio_assert($6, [1120])
	*(($2 + [120])) = (int_64)1397703940
	*($2 + [112]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$16 = (int_64)5459781
	
.LOOP $label$32:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $16) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	
.LOOP $label$34:
	$16 = (uint_64)$16 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$16) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$34 }
	
.LABEL $label$33
	$8 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	$8 = [0]
	
.LABEL $label$30
	CALL eosio_assert($8, [1120])
	*(($2 + [136])) = (int_64)1397703940
	*($2 + [128]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [108]) = [0]
	$8 = *($0)
	$14 = *(($2 + [104]))
	if ( ((uint_32)$14 >= (uint_32)[2]) ){ goto $label$15 }
	$8 = CALL _ZN3pvp16runFightGenotypeERK12fight_wizardS2_R9fight_logh($8, $3, $4, ($20 + [296]), $14)
	goto $label$14 
	
.LABEL $label$16
	*($20 + [508]) = *($20 + [504])
	$14 = [32]
	$2 = [30]
	$6 = ($20 + [504])
	goto $label$12 
	
.LABEL $label$15
	if ( ((int_32)$14 != (int_32)[2]) ){ goto $label$35 }
	$8 = CALL _ZN3pvp17runFightPhenotypeERK12fight_wizardS2_R9fight_logh($8, $3, $4, ($20 + [296]), [0])
	goto $label$14 
	
.LABEL $label$35
	CALL eosio_assert([0], [1968])
	
.LABEL $label$14
	$4 = ($2 + [108])
	$14 = ($8 + [1])
	*($20 + [296]) = $14
	$16 = CALL current_time()
	*($2 + [88]) = $14
	*($2 + [96]) = $16
	*($20 + [320]) = $16
	*($20 + [32]) = *(*(($0 + [4])))
	*($20 + [56]) = *($20 + [520])
	$6 = *($20 + [504])
	$17 = *($6)
	*($20 + [40]) = $17
	$16 = *($6 + [8])
	*($20 + [48]) = $16
	$14 = ($2 + [88])
	if ( ($8 == 0) ){ goto $label$37 }
	*($20 + [24]) = $16
	CALL _ZN11CTournament8AddLoserEyb($0, *($6), ((uint_64)$18 <= (uint_64)$15))
	goto $label$36 
	
.LABEL $label$37
	*($20 + [24]) = $17
	CALL _ZN11CTournament8AddLoserEyb($0, $16, ((uint_64)$18 <= (uint_64)$15))
	
.LABEL $label$36
	*($1) = *($2)
	*((($20 + [296]) + [40])) = *($2 + [8])
	CALL $109(($20 + [344]), *(($2 + [16])), *(($2 + [20])))
	CALL $109((($20 + [296]) + [60]), *(($2 + [28])), *(($2 + [32])))
	*((($20 + [296]) + [72])) = *(($2 + [40]))
	*((($20 + [296]) + [80])) = *($2 + [48])
	CALL $109(($20 + [384]), *(($2 + [56])), *(($2 + [60])))
	CALL $109(($20 + [396]), *(($2 + [68])), *(($2 + [72])))
	*(($20 + [408])) = *(($2 + [80]))
	*(($20 + [416])) = *($14)
	*(($20 + [432])) = *(($14 + [16]))
	*(($20 + [428])) = *(($14 + [12]))
	*(($20 + [424])) = *(($14 + [8]))
	CALL memcpy(($20 + [436]), $4, [36])
	CALL _ZN3pvp7sendlogER9fight_logR5tinfo(*($0), ($20 + [296]), ($20 + [32]))
	CALL _ZN11CTournament14AddWinToWizardERKy($0, ($20 + [24]))
	*($20 + [16]) = [0]
	$16 = *($20 + [520])
	$17 = *($20 + [24])
	*($20 + [8]) = (int_64)0
	$8 = *($0 + [8])
	*(($14 = CALL $428([8]))) = $17
	*($20 + [8]) = $14
	$14 = ($14 + [8])
	*($20 + [16]) = $14
	*($20 + [12]) = $14
	CALL _ZN15CTournStructure13AddWizToLevelEiNSt3__16vectorIyNS0_9allocatorIyEEEEb($8, (CASTING uint_32)(uint_64 ((int_64)$16 + (int_64)1)), ($20 + [8]), [0])
	$14 = *($20 + [8])
	if ( ($14 == 0) ){ goto $label$38 }
	*($20 + [12]) = $14
	CALL $430($14)
	
.LABEL $label$38
	$14 = *(($20 + [116]))
	if ( ($14 == 0) ){ goto $label$39 }
	*(($20 + [120])) = $14
	CALL $430($14)
	
.LABEL $label$39
	$14 = *(($20 + [104]))
	if ( ($14 == 0) ){ goto $label$40 }
	*(($20 + [108])) = $14
	CALL $430($14)
	
.LABEL $label$40
	$14 = *(($2 + [68]))
	if ( ($14 == 0) ){ goto $label$41 }
	*(($2 + [72])) = $14
	CALL $430($14)
	
.LABEL $label$41
	$14 = *(($2 + [56]))
	if ( ($14 == 0) ){ goto $label$42 }
	*(($2 + [60])) = $14
	CALL $430($14)
	
.LABEL $label$42
	$14 = *(($2 + [28]))
	if ( ($14 == 0) ){ goto $label$43 }
	*(($2 + [32])) = $14
	CALL $430($14)
	
.LABEL $label$43
	$14 = *(($2 + [16]))
	if ( ($14 == 0) ){ goto $label$44 }
	*(($2 + [20])) = $14
	CALL $430($14)
	
.LABEL $label$44
	$14 = *(($20 + [396]))
	if ( ($14 == 0) ){ goto $label$45 }
	*(($20 + [400])) = $14
	CALL $430($14)
	
.LABEL $label$45
	$14 = *(($20 + [384]))
	if ( ($14 == 0) ){ goto $label$46 }
	*(($20 + [388])) = $14
	CALL $430($14)
	
.LABEL $label$46
	$14 = *(($20 + [356]))
	if ( ($14 == 0) ){ goto $label$47 }
	*(($20 + [360])) = $14
	CALL $430($14)
	
.LABEL $label$47
	$14 = *(($20 + [344]))
	if ( ($14 == 0) ){ goto $label$48 }
	*(($20 + [348])) = $14
	CALL $430($14)
	
.LABEL $label$48
	$14 = *(($20 + [304]))
	if ( ($14 == 0) ){ goto $label$13 }
	*(($20 + [308])) = $14
	CALL $430($14)
	
.LABEL $label$13
	*($20 + [508]) = *($20 + [504])
	$14 = *($20 + [532])
	if ( ((uint_64)$18 > (uint_64)$15) ){ goto $label$49 }
	$6 = ($20 + [504])
	goto $label$10 
	
.LABEL $label$49
	$8 = [0]
	$6 = ($20 + [504])
	$2 = ($14 + [-2])
	if ( ((uint_32)$2 > (uint_32)[30]) ){ goto $label$11 }
	
.LABEL $label$12
	$8 = (uint_32([1073758209] >> ($2 & [2147483647])) & [1])
	
.LABEL $label$11
	CALL eosio_assert($8, [2032])
	$16 = *(*(($0 + [4])) + [48])
	if ( ((uint_64)CALL current_time() >= (uint_64)((int_64)$16 + (int_64)-86400000000)) ){ goto $label$8 }
	
.LABEL $label$10
	if ( ((int_32)$14 != (int_32)[1]) ){ goto $label$50 }
	*($20 + [532]) = [0]
	goto $label$5 
	
.LABEL $label$50
	CALL _ZN11CTournament17AddDefferedBattleE12unsigned_int($0, [0])
	if ( ((int_32)$14 == (int_32)[4]) ){ goto $label$6 }
	if ( ((int_32)$14 == (int_32)[32]) ){ goto $label$7 }
	
.LABEL $label$9
	$8 = CALL _ZN15CTournStructure8GetNext2EbRNSt3__16vectorIyNS0_9allocatorIyEEEERy(*($0 + [8]), ((uint_64)$18 <= (uint_64)$15), ($20 + [504]), ($20 + [520]))
	*($20 + [532]) = $8
	if ( ((int_32)$14 != (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$8 != (int_32)[2]) ){ goto $label$5 }
	$14 = ($0 + [16])
	goto $label$4 
	
.LABEL $label$8
	CALL _ZN11CTournament17AddDefferedBattleE12unsigned_int($0, (CASTING uint_32)(uint_64 ((uint_64)(int_64))($16 - CALL $fimport$16()) / (uint_64)(int_64)1000000)))
	
.LABEL $label$7
	*($20 + [532]) = [32]
	goto $label$5 
	
.LABEL $label$6
	*($20 + [532]) = [1]
	
.LABEL $label$5
	$14 = *($20 + [540])
	$16 = *($0 + [16])
	*($20 + [300]) = ($20 + [520])
	*($20 + [296]) = ($20 + [532])
	*($20 + [304]) = ($20 + [504])
	CALL eosio_assert(((int_32)$14 != (int_32)[0]), [832])
	CALL $197(($0 + [304]), $14, $16, ($20 + [296]))
	$14 = ($0 + [16])
	
.LABEL $label$4
	$7 = *($14)
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [1232]
	$17 = (int_64)0
	
.LOOP $label$51:
	if ( ((uint_64)$16 > (uint_64)(int_64)5) ){ goto $label$56 }
	$8 = *($14)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$55 }
	$8 = ($8 + [165])
	goto $label$54 
	
.LABEL $label$56
	$18 = (int_64)0
	if ( ((uint_64)$16 <= (uint_64)(int_64)11) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$55
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$54
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$53
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$52
	$14 = ($14 + [1])
	$16 = ((int_64)$16 + (int_64)1)
	$17 = ((int_64)$18 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$51 }
	$16 = (int_64)0
	$15 = (int_64)59
	$14 = [2080]
	$19 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$16 > (uint_64)(int_64)10) ){ goto $label$62 }
	$8 = *($14)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$8 = ($8 + [165])
	goto $label$60 
	
.LABEL $label$62
	$18 = (int_64)0
	if ( ((int_64)$16 == (int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$58
	$14 = ($14 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$19 = ((int_64)$18 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)1)
	if ( ((int_64)$16 != (int_64)13) ){ goto $label$57 }
	$14 = *($20 + [504])
	$16 = *($20 + [520])
	$2 = *($20 + [532])
	*($20 + [152]) = *(*(($0 + [4])))
	$8 = *($6)
	$0 = *($5)
	*($20 + [160]) = $2
	*($20 + [168]) = $16
	*($20 + [176]) = *(( [2096] ? $14 : ((int_32)$0 == (int_32)$8) ))
	*($20 + [296]) = $7
	*($20 + [184]) = *(( ($14 + [8]) ? [2096] : ((uint_32)int_32(($0 - $8) >> [3]) > (uint_32)[1]) ))
	*($20 + [304]) = $19
	*(($14 = CALL $428([16]))) = $7
	*($14 + [8]) = $17
	*(($8 = ($20 + [328]))) = [0]
	$0 = ($14 + [16])
	*(($20 + [320])) = $0
	*(($20 + [316])) = $0
	*($20 + [312]) = $14
	*($20 + [324]) = [0]
	*(($20 + [332])) = [0]
	CALL $76(($20 + [324]), [33])
	$14 = *($8)
	$8 = *($20 + [324])
	*($20 + [68]) = $8
	*($20 + [64]) = $8
	*($20 + [72]) = $14
	*($20 + [24]) = ($20 + [64])
	*($20 + [32]) = ($20 + [152])
	CALL $198(($20 + [32]), ($20 + [24]))
	CALL $85(($20 + [64]), ($20 + [296]))
	$14 = *($20 + [64])
	CALL send_inline($14, (*($20 + [68]) - $14))
	$14 = *($20 + [64])
	if ( ($14 == 0) ){ goto $label$63 }
	*($20 + [68]) = $14
	CALL $430($14)
	
.LABEL $label$63
	$14 = *($20 + [324])
	if ( ($14 == 0) ){ goto $label$64 }
	*(($20 + [328])) = $14
	CALL $430($14)
	
.LABEL $label$64
	$14 = *($20 + [312])
	if ( ($14 == 0) ){ goto $label$3 }
	*(($20 + [316])) = $14
	CALL $430($14)
	
.LABEL $label$3
	$14 = *($20 + [504])
	if ( ($14 == 0) ){ goto $label$65 }
	*($20 + [508]) = $14
	CALL $430($14)
	
.LABEL $label$65
	*([0] + [4]) = ($20 + [544])
	$14
}

int_32 .FUNC $125 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [1056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	return $0
}

int_32 .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [592])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [592])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [816])
	CALL memcpy(($2 + [8]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($2 + [32]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$3 = int_32(($6 - $5) >> [3])
	$7 = ($3 + [1])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = [536870911]
	$2 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$4 = int_32($2 >> [2])
	$4 = ( $7 ? $4 : ($4 <= $7) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $428(($4 << [3]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($3 << [3])))) = *($1)
	$6 = ($6 - $5)
	$1 = ($3 - $6)
	$4 = ($7 + ($4 << [3]))
	$7 = ($3 + [8])
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $5, $6)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $430($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC _ZN11CTournament13GetNextBattleEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	*([0] + [4]) = $9
	$6 = ($1 + [4])
	$2 = ($1 + [304])
	CALL $302($0, $2, *(*($6)))
	if ( *($0 + [4]) ){ goto $label$1 }
	$7 = *($1 + [16])
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$15()), [528])
	*(($3 = CALL $428([48])) + [32]) = $2
	*($3 + [8]) = [65282]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)-1
	*($3) = *(*($6))
	*($9 + [56]) = (($9 + [16]) + [26])
	*($9 + [52]) = ($9 + [16])
	*($9 + [48]) = ($9 + [16])
	CALL $199(($9 + [48]), $3)
	$4 = *($3)
	$5 = CALL db_store_i64(*(($1 + [312])), (int_64)-7297066292185632768, $7, $4, ($9 + [16]), [26])
	*($3 + [36]) = $5
	$6 = ($1 + [320])
	if ( (uint_64)($4 <= *($6)) ){ goto $label$2 }
	*($6) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($9 + [48]) = $3
	$4 = *($3)
	*($9 + [16]) = $4
	*($9 + [12]) = $5
	$8 = ($1 + [332])
	$6 = *($8)
	if ( ((uint_32)$6 >= (uint_32)*(($1 + [336]))) ){ goto $label$4 }
	*($6 + [8]) = $4
	*($6 + [16]) = $5
	*($9 + [48]) = [0]
	*($6) = $3
	*($8) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $159(($1 + [328]), ($9 + [48]), ($9 + [16]), ($9 + [12]))
	
.LABEL $label$3
	$1 = *($9 + [48])
	*($9 + [48]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $430($1)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [64])
}

void .FUNC _ZN11CTournament17AddDefferedBattleE12unsigned_int (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [128])
	*([0] + [4]) = $12
	CALL eosio_assert((int_64)(*(*($0 + [4]) + [72]) == 0), [1904])
	if ( (CALL has_auth(*($0 + [16])) == 0) ){ goto $label$2 }
	$8 = *(*(($0 + [4])) + [56])
	if ( ((uint_64)CALL current_time() >= (uint_64)$8) ){ goto $label$1 }
	$1 = (CASTING uint_32)(uint_64 ((int_64)((uint_64)(int_64))($8 - CALL current_time()) / (uint_64)(int_64)1000000) + (int_64)1))
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert(((uint_64)*(*(($0 + [4])) + [56]) <= (uint_64)CALL $fimport$16()), [1936])
	
.LABEL $label$1
	$8 = CALL current_time()
	*(($12 + [76])) = [0]
	*(($12 + [80])) = [0]
	*($12 + [60]) = [0]
	*($12 + [64]) = [0]
	*($12 + [68]) = [0]
	*($12 + [72]) = [0]
	*($12 + [48]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [84]) = [0]
	*(($12 + [88])) = [0]
	*(($12 + [92])) = [0]
	*($12 + [96]) = [0]
	*(($12 + [100])) = [0]
	*(($12 + [104])) = [0]
	$2 = *(($0 + [16]))
	$3 = ($12 + [84])
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1232]
	$9 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$8 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$8
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$4
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$3 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [2752]
	$11 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$14 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$4 = ($4 + [165])
	goto $label$12 
	
.LABEL $label$14
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$10
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$9 }
	*($12 + [112]) = *(*(($0 + [4])))
	*($12 + [8]) = $11
	*($12) = $2
	*(($6 = CALL $428([16]))) = $2
	*($6 + [8]) = $9
	*(($4 = ($12 + [32]))) = [0]
	$5 = ($6 + [16])
	*(($12 + [24])) = $5
	*(($12 + [20])) = $5
	*($12 + [16]) = $6
	*($12 + [28]) = [0]
	*(($12 + [36])) = [0]
	CALL $76(($12 + [28]), [8])
	$6 = *($12 + [28])
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[7]), [592])
	CALL memcpy($6, ($12 + [112]), [8])
	CALL $86($3, $12)
	$6 = *($12 + [28])
	if ( ($6 == 0) ){ goto $label$15 }
	*($4) = $6
	CALL $430($6)
	
.LABEL $label$15
	$6 = *($12 + [16])
	if ( ($6 == 0) ){ goto $label$16 }
	*(($12 + [20])) = $6
	CALL $430($6)
	
.LABEL $label$16
	$6 = *(($0 + [4]))
	if ( $1 ){ goto $label$17 }
	$1 = *($6 + [160])
	
.LABEL $label$17
	*(($12 + [68])) = $1
	$8 = *(($0 + [16]))
	$10 = *($6)
	*($12 + [8]) = (int_64)0
	*($12) = ((int_64)$10 + (int_64)$8)
	CALL $87(($12 + [112]), ($12 + [48]))
	$6 = *($12 + [112])
	CALL send_deferred($12, $8, $6, (*($12 + [116]) - $6), [0])
	$6 = *($12 + [112])
	if ( ($6 == 0) ){ goto $label$18 }
	*($12 + [116]) = $6
	CALL $430($6)
	
.LABEL $label$18
	CALL $65(($12 + [48]))
	*([0] + [4]) = ($12 + [128])
}

void .FUNC _ZN11CTournament10PayWinnersEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_64 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_64 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_32 $30
	int_32 $31
	$31 = (*([0] + [4]) - [352])
	*([0] + [4]) = $31
	$27 = CALL current_time()
	*(*($0 + [4]) + [72]) = $27
	CALL _ZN11CTournament10updateInfoEv($0)
	$27 = *(*($0 + [4]))
	$30 = *(($0 + [288]))
	$13 = *(($0 + [292]))
	if ( ((int_32)$13 == (int_32)$30) ){ goto $label$1 }
	$25 = ($13 + [-24])
	$24 = ([0] - $30)
	
.LOOP $label$2:
	if ( ((int_64)*(*($25)) == (int_64)$27) ){ goto $label$1 }
	$13 = $25
	$10 = ($25 + [-24])
	$25 = $10
	if ( ((int_32)($10 + $24) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$25 = ($0 + [264])
	if ( ((int_32)$13 == (int_32)$30) ){ goto $label$4 }
	$21 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [20]) == (int_32)$25), [320])
	goto $label$3 
	
.LABEL $label$4
	$21 = [0]
	$10 = CALL db_find_i64(*(($0 + [264])), *(($0 + [272])), (int_64)-8524864589369311232, $27)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	$21 = CALL $140($25, $10)
	CALL eosio_assert(((int_32)*($21 + [20]) == (int_32)$25), [320])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$21 != (int_32)[0]), [2768])
	$25 = CALL _ZN11CTournament21WizardStateByWizInTIdERKy($0, *($21 + [8]))
	$11 = ($0 + [4])
	$10 = *($11)
	$24 = *($10 + [96])
	$10 = *(($10 + [100]))
	$25 = *($25 + [8])
	*($31 + [312]) = [0]
	$22 = (int_64)0
	*($31 + [304]) = (int_64)0
	*($31 + [296]) = [0]
	*($31 + [288]) = (int_64)0
	$3 = CALL $101(($31 + [240]))
	$13 = *(CALL _ZN11CTournament21WizardStateByWizInTIdERKy($0, *($21 + [8])) + [8])
	*($31 + [236]) = $25
	$27 = (CASTING uint_64)(uint_32 int_32(($10 - $24) >> [2]))
	$1 = (CASTING uint_64)(uint_32 $25)
	$2 = ( [0] ? (CASTING uint_32)(uint_64 (int_64))($1 - $27)) : (uint_64)($1 <= $27) 
	if ( ((uint_32)$25 <= (uint_32)$2)) ){ goto $label$5 }
	$8 = ($0 + [368])
	$7 = ($0 + [344])
	$4 = ((int_64)$1 + (int_64)1)
	$6 = ($31 + [168])
	$5 = (($31 + [104]) + [32])
	$12 = (($31 + [224]) + [8])
	$17 = ($31 + [156])
	$19 = ($31 + [144])
	$20 = ($31 + [148])
	$18 = (($31 + [104]) + [56])
	$15 = ($0 + [376])
	$16 = ($0 + [372])
	$30 = [0]
	
.LOOP $label$6:
	*($12) = [0]
	*($31 + [224]) = (int_64)0
	if ( ((int_32)($13 & [65535]) != (int_32)$25) ){ goto $label$7 }
	$25 = ($30 << [3])
	$30 = ($30 + [1])
	$23 = [0]
	$10 = [0]
	
.LOOP $label$8:
	$13 = ($21 + [8])
	$24 = *($13)
	$9 = ($24 + $25)
	if ( ((int_32)$10 == (int_32)$23) ){ goto $label$10 }
	*($10) = *($9)
	*($31 + [228]) = ($10 + [8])
	goto $label$9 
	
.LABEL $label$10
	CALL $185(($31 + [224]), $9)
	$24 = *($13)
	
.LABEL $label$9
	$24 = (CALL _ZN11CTournament16WizardByWizInTIdERKy($0, ($24 + $25)) + [24])
	$10 = *($31 + [308])
	if ( ((int_32)$10 == (int_32)*((($31 + [304]) + [8]))) ){ goto $label$12 }
	*($10) = *($24)
	*($31 + [308]) = ($10 + [8])
	goto $label$11 
	
.LABEL $label$12
	CALL $185(($31 + [304]), $24)
	
.LABEL $label$11
	$24 = *($31 + [236])
	*($31 + [104]) = $24
	$10 = *($31 + [292])
	if ( ((uint_32)$10 >= (uint_32)*((($31 + [288]) + [8]))) ){ goto $label$14 }
	*($10) = $24
	*($31 + [292]) = ($10 + [2])
	goto $label$13 
	
.LABEL $label$14
	CALL $264(($31 + [288]), ($31 + [104]))
	
.LABEL $label$13
	$10 = *($31 + [236])
	$13 = *(CALL _ZN11CTournament21WizardStateByWizInTIdERKy($0, ((*($13) + $25) + [8])) + [8])
	if ( ((int_32)$13 != (int_32)$10) ){ goto $label$15 }
	$25 = ($25 + [8])
	$30 = ($30 + [1])
	$23 = *($12)
	$10 = *($31 + [228])
	goto $label$8 
	
.LABEL $label$15
	$25 = *($31 + [224])
	if ( ((int_32)*($31 + [228]) == (int_32)$25) ){ goto $label$16 }
	$25 = *($11)
	$27 = *($25 + [80])
	CALL __multi3(($31 + [16]), $27, (int_64)$27 >> (int_64)63), *((*($25 + [96]) + ((CASTING uint_32)(uint_64 (int_64))($1 - (CASTING uint_64)(uint_32 $10))) << [2]))), (int_64)0)
	$29 = *(($25 + [88]))
	$27 = *((($31 + [16]) + [8]))
	$26 = *($31 + [16])
	CALL eosio_assert(( (uint_64)($26 <= (int_64)4611686018427387904) ? ((int_64)$27 < (int_64)0) : (int_64)($27 == 0) ), [2848])
	CALL eosio_assert(( ((uint_64)$26 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$27 > (int_64)-1) : ((int_64)$27 == (int_64)-1) ), [2880])
	CALL eosio_assert([1], [2912])
	CALL eosio_assert([1], [2928])
	*(($14 = (($31 + [208]) + [8]))) = $29
	$25 = int_32((*($31 + [228]) - *($31 + [224])) >> [3])
	CALL eosio_assert(((int_32)$25 != (int_32)[0]), [2912])
	CALL eosio_assert([1], [2928])
	*($31 + [208]) = ((int_64)((int_64)$26 / (int_64)100) / (int_64)(CASTING uint_64)(uint_32 $25))
	*($31 + [104]) = (int_64))($4 - *($31 + [236]))
	CALL $265(($31 + [192]), [2960], ($31 + [104]), [3008], *($11))
	$9 = *($31 + [228])
	$24 = *($31 + [224])
	if ( ((int_32)$24 == (int_32)$9) ){ goto $label$17 }
	
.LOOP $label$18:
	$25 = CALL _ZN11CTournament16WizardByWizInTIdERKy($0, $24)
	*(($23 = (($31 + [104]) + [24]))) = *(($25 + [24]))
	*(($10 = (($31 + [104]) + [16]))) = *(($25 + [16]))
	*((($31 + [104]) + [8])) = *(($25 + [8]))
	*($31 + [104]) = *($25)
	CALL $192($5, ($25 + [32]))
	*(($6 + [16])) = *(($25 + [80]))
	*(($6 + [8])) = *(($25 + [72]))
	*($6) = *($25 + [64])
	$27 = *($23)
	*($31 + [96]) = $27
	if ( (CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($31, *($10), $27, $3, [0]) == 0) ){ goto $label$22 }
	*((($31 + [80]) + [12])) = *((($31 + [208]) + [12]))
	*(($25 = (($31 + [80]) + [8]))) = *($14)
	*($31 + [84]) = *($31 + [212])
	*($31 + [80]) = *($31 + [208])
	$23 = *($0)
	$27 = *($10)
	CALL $446(($31 + [64]), ($31 + [192]))
	*(($31 + [8])) = *($25)
	*($31) = *($31 + [80])
	CALL _ZN3pvp20prepareDeferTransferEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($23, $27, $31, ($31 + [64]))
	if ( ((*($31 + [64]) & [1]) == 0) ){ goto $label$21 }
	CALL $430(*((($31 + [64]) + [8])))
	$25 = *($17)
	if ( $25 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$27 = (int_64)0
	$26 = (int_64)59
	$25 = [304]
	$28 = (int_64)0
	
.LOOP $label$23:
	$29 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$24 }
	$10 = *($25)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$10 = ($10 + [165])
	goto $label$25 
	
.LABEL $label$26
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$29 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$24
	$25 = ($25 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$28 = ((int_64)$29 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$23 }
	*((($31 + [32]) + [8])) = ($31 + [236])
	*((($31 + [32]) + [12])) = ($31 + [208])
	*((($31 + [32]) + [16])) = ($31 + [192])
	*($31 + [36]) = ($31 + [96])
	*($31 + [32]) = $0
	*($31 + [344]) = $28
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$15()), [528])
	*($31 + [320]) = $7
	*((($31 + [320]) + [8])) = ($31 + [344])
	*($31 + [324]) = ($31 + [32])
	*(($10 = CALL $428([72])) + [40]) = (int_64)1398362884
	*($10 + [32]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$27 = (int_64)5462355
	$25 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $27) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$27 = (uint_64)$27 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$27) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$23 = [1]
	$25 = ($25 + [1])
	if ( ((int_32)$25 < (int_32)[7]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	$23 = [0]
	
.LABEL $label$27
	CALL eosio_assert($23, [1120])
	*($10 + [56]) = [0]
	*($10 + [48 align=4]) = (int_64)0
	*($10 + [60]) = $7
	CALL $267(($31 + [320]), $10)
	*($31 + [336]) = $10
	$27 = *($10)
	*($31 + [320]) = $27
	$23 = *($10 + [64])
	*($31 + [316]) = $23
	$25 = *($16)
	if ( ((uint_32)$25 >= (uint_32)*($15)) ){ goto $label$33 }
	*($25 + [8]) = $27
	*($25 + [16]) = $23
	*($31 + [336]) = [0]
	*($25) = $10
	*($16) = ($25 + [24])
	goto $label$32 
	
.LABEL $label$33
	CALL $268($8, ($31 + [336]), ($31 + [320]), ($31 + [316]))
	
.LABEL $label$32
	$25 = *($31 + [336])
	*($31 + [336]) = [0]
	if ( ($25 == 0) ){ goto $label$21 }
	if ( ((*($25 + [48]) & [1]) == 0) ){ goto $label$34 }
	CALL $430(*(($25 + [56])))
	
.LABEL $label$34
	CALL $430($25)
	
.LABEL $label$21
	$25 = *($17)
	if ( ($25 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	*($18) = $25
	CALL $430($25)
	
.LABEL $label$19
	$25 = *($19)
	if ( ($25 == 0) ){ goto $label$35 }
	*($20) = $25
	CALL $430($25)
	
.LABEL $label$35
	$24 = ($24 + [8])
	if ( ((int_32)$24 != (int_32)$9) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ((*($31 + [192]) & [1]) == 0) ){ goto $label$36 }
	CALL $430(*((($31 + [192]) + [8])))
	
.LABEL $label$36
	$25 = *($31 + [224])
	
.LABEL $label$16
	if ( ($25 == 0) ){ goto $label$7 }
	*($31 + [228]) = $25
	CALL $430($25)
	
.LABEL $label$7
	$25 = (*($31 + [236]) + [-1])
	*($31 + [236]) = $25
	if ( ((uint_32)$25 > (uint_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	$1 = *($0 + [16])
	$26 = (int_64)59
	$25 = [1232]
	$28 = (int_64)0
	
.LOOP $label$37:
	if ( ((uint_64)$22 > (uint_64)(int_64)5) ){ goto $label$42 }
	$10 = *($25)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$10 = ($10 + [165])
	goto $label$40 
	
.LABEL $label$42
	$27 = (int_64)0
	if ( ((uint_64)$22 <= (uint_64)(int_64)11) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$41
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$27 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$39
	$27 = ((int_64)((int_64)$27 & (int_64)31) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$38
	$25 = ($25 + [1])
	$22 = ((int_64)$22 + (int_64)1)
	$28 = ((int_64)$27 | (int_64)$28)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$37 }
	$27 = (int_64)0
	$26 = (int_64)59
	$25 = [2832]
	$22 = (int_64)0
	
.LOOP $label$43:
	$29 = (int_64)0
	if ( ((uint_64)$27 > (uint_64)(int_64)11) ){ goto $label$44 }
	$10 = *($25)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$46 }
	$10 = ($10 + [165])
	goto $label$45 
	
.LABEL $label$46
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$45
	$29 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$26 & (int_64)4294967295))
	
.LABEL $label$44
	$25 = ($25 + [1])
	$27 = ((int_64)$27 + (int_64)1)
	$22 = ((int_64)$29 | (int_64)$22)
	$26 = ((int_64)$26 + (int_64)-5)
	if ( ((int_64)$26 != (int_64)-6) ){ goto $label$43 }
	*(($31 + [48])) = [0]
	*($31 + [32]) = *(*(($0 + [4])))
	*($31 + [40]) = (int_64)0
	$25 = (*($31 + [308]) - *($31 + [304]))
	$10 = int_32($25 >> [3])
	if ( ($10 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)[536870912]) ){ goto $label$48 }
	$25 = CALL $428($25)
	*(($31 + [40])) = $25
	*(($13 = ($31 + [44]))) = $25
	*(($31 + [48])) = ($25 + ($10 << [3]))
	$24 = *($31 + [304])
	$10 = (*($31 + [308]) - $24)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$49 }
	CALL memcpy($25, $24, $10)
	*($13) = (*($13) + $10)
	
.LABEL $label$49
	*((($31 + [32]) + [28])) = [0]
	*($31 + [52 align=4]) = (int_64)0
	$25 = (*($31 + [292]) - *($31 + [288]))
	$10 = int_32($25 >> [1])
	if ( ($10 == 0) ){ goto $label$50 }
	if ( ((int_32)$25 <= (int_32)[-1]) ){ goto $label$47 }
	$25 = CALL $428($25)
	*(($31 + [52])) = $25
	*(($13 = ($31 + [56]))) = $25
	*(($31 + [60])) = ($25 + ($10 << [1]))
	$24 = *($31 + [288])
	$10 = (*($31 + [292]) - $24)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$50 }
	CALL memcpy($25, $24, $10)
	*($13) = (*($13) + $10)
	
.LABEL $label$50
	*($31 + [112]) = $22
	*($31 + [104]) = $1
	*(($25 = CALL $428([16]))) = $1
	*($25 + [8]) = $28
	$10 = ($25 + [16])
	*(($31 + [128])) = $10
	*((($31 + [104]) + [20])) = $10
	*($31 + [120]) = $25
	CALL $263((($31 + [104]) + [28]), ($31 + [32]))
	CALL $85(($31 + [208]), ($31 + [104]))
	$25 = *($31 + [208])
	CALL send_inline($25, (*($31 + [212]) - $25))
	$25 = *($31 + [208])
	if ( ($25 == 0) ){ goto $label$51 }
	*($31 + [212]) = $25
	CALL $430($25)
	
.LABEL $label$51
	$25 = *($31 + [132])
	if ( ($25 == 0) ){ goto $label$52 }
	*(($31 + [136])) = $25
	CALL $430($25)
	
.LABEL $label$52
	$25 = *($31 + [120])
	if ( ($25 == 0) ){ goto $label$53 }
	*(($31 + [124])) = $25
	CALL $430($25)
	
.LABEL $label$53
	$25 = *($31 + [52])
	if ( ($25 == 0) ){ goto $label$54 }
	*(($31 + [56])) = $25
	CALL $430($25)
	
.LABEL $label$54
	$25 = *($31 + [40])
	if ( ($25 == 0) ){ goto $label$55 }
	*(($31 + [44])) = $25
	CALL $430($25)
	
.LABEL $label$55
	CALL _ZN11CTournament9SendClearEyth($0, (int_64)0, [20], [0])
	$25 = *($3 + [20])
	if ( ($25 == 0) ){ goto $label$56 }
	*(($3 + [24])) = $25
	CALL $430($25)
	
.LABEL $label$56
	$25 = *($3 + [8])
	if ( ($25 == 0) ){ goto $label$57 }
	*(($3 + [12])) = $25
	CALL $430($25)
	
.LABEL $label$57
	$25 = *($31 + [288])
	if ( ($25 == 0) ){ goto $label$58 }
	*($31 + [292]) = $25
	CALL $430($25)
	
.LABEL $label$58
	$25 = *($31 + [304])
	if ( ($25 == 0) ){ goto $label$59 }
	*($31 + [308]) = $25
	CALL $430($25)
	
.LABEL $label$59
	*([0] + [4]) = ($31 + [352])
	return (unreachable)
	
.LABEL $label$48
	CALL $445(($31 + [40]))
	
.LABEL $label$47
	CALL $445((($31 + [32]) + [20]))
	(unreachable)
}

int_32 .FUNC $358 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [784])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $428([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [816])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [816])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [816])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [32]) = [-1]
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $360(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $359 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $430($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-1734277135947792384, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $354 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEx($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

void .FUNC $355 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEi($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

void .FUNC $356 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL _ZNSt3__19to_stringEy(($5 + [16]), *($1))
	CALL $357($5, $2, $3)
	$2 = *($5)
	$3 = ($2 & [1])
	$2 = CALL $436(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $3 ), ( *($5 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$4 = *($2)
	*($2) = (int_64)0
	*($0) = $4
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($5 + [8])))
	
.LABEL $label$1
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($5 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $357 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEx($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

void .FUNC $350 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$9 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [5])
	if ( ((uint_32)$3 <= (uint_32)int_32(($9 - $4) >> [5])) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$5 }
	*($0 + [4]) = $4
	CALL $430($4)
	$9 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$1 }
	$4 = [134217727]
	if ( ((uint_32)int_32($9 >> [5]) > (uint_32)[67108862]) ){ goto $label$6 }
	$4 = $3
	$9 = int_32($9 >> [4])
	if ( ($9 <= $3) ){ goto $label$6 }
	$4 = $9
	if ( ((uint_32)$9 >= (uint_32)[134217728]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($4 << [5])
	$9 = CALL $428($4)
	*($0) = $9
	*($0 + [4]) = $9
	*(($0 + [8])) = ($9 + $4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($9) = *($1)
	*(($9 + [24])) = *(($1 + [24]))
	*(($9 + [16])) = *(($1 + [16]))
	*(($9 + [8])) = *(($1 + [8]))
	$9 = (*($0) + [32])
	*($0) = $9
	$1 = ($1 + [32])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$8 = int_32($8 >> [5])
	$8 = (*($0 + [4]) - $4)
	$9 = ($1 + $8)
	$5 = ( $9 ? $2 : ((uint_32)$3 > (uint_32)$8) )
	$6 = ($5 - $1)
	$7 = int_32($6 >> [5])
	if ( ($7 == 0) ){ goto $label$8 }
	CALL memmove($4, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$8) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$9:
	*($1) = *($9)
	*(($1 + [24])) = *(($9 + [24]))
	*(($1 + [16])) = *(($9 + [16]))
	*(($1 + [8])) = *(($9 + [8]))
	$1 = (*($0) + [32])
	*($0) = $1
	$9 = ($9 + [32])
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($4 + ($7 << [5]))
	return (unreachable)
	
.LABEL $label$1
	CALL $445($0)
}

void .FUNC $351 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($0) = (int_64)0
	$7 = *($0 + [8])
	if ( ($7 & [1]) ){ goto $label$2 }
	$7 = uint_32($7 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$7 = *(($0 + [12]))
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [5552])
	$7 = *($0 + [20])
	if ( ($7 & [1]) ){ goto $label$4 }
	$7 = uint_32($7 >> [1])
	goto $label$3 
	
.LABEL $label$4
	$7 = *(($0 + [24]))
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [5584])
	CALL eosio_assert(((int_64)*($0 + [32]) != (int_64)0), [5632])
	$7 = ($0 + [40])
	$5 = *($0 + [40])
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$5 }
	$5 = CALL current_time()
	*($7) = $5
	
.LABEL $label$5
	$4 = CALL current_time()
	*($8 + [8]) = CALL current_time()
	CALL $352(($8 + [16]), [5664], ($8 + [8]), [5712], $7)
	$6 = (*($8 + [16]) & [1])
	$7 = (($8 + [16]) | [1])
	$2 = *($8 + [24])
	$3 = ( $2 ? $7 : $6 )
	$1 = ((uint_64)$5 >= (uint_64)$4)
	if ( ($6 == 0) ){ goto $label$6 }
	CALL $430($2)
	
.LABEL $label$6
	CALL eosio_assert($1, $3)
	$5 = *($0 + [48])
	$4 = CALL current_time()
	*($8 + [8]) = CALL current_time()
	CALL $352(($8 + [16]), [5728], ($8 + [8]), [5712], ($0 + [48]))
	$6 = (*($8 + [16]) & [1])
	$1 = *($8 + [24])
	$7 = ( $1 ? $7 : $6 )
	$3 = ((uint_64)$5 > (uint_64)$4)
	if ( ($6 == 0) ){ goto $label$7 }
	CALL $430($1)
	
.LABEL $label$7
	CALL eosio_assert($3, $7)
	$7 = ($0 + [56])
	$5 = *($0 + [56])
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$8 }
	$5 = ((int_64)CALL current_time() + (int_64)120000000)
	*($7) = $5
	
.LABEL $label$8
	$4 = CALL current_time()
	*($8 + [8]) = CALL current_time()
	CALL $353(($8 + [16]), [5776], ($8 + [8]), [5712], $7)
	$7 = (*($8 + [16]) & [1])
	$1 = *($8 + [24])
	$6 = ( $1 ? (($8 + [16]) | [1]) : $7 )
	$3 = ((uint_64)$5 > (uint_64)$4)
	if ( ($7 == 0) ){ goto $label$9 }
	CALL $430($1)
	
.LABEL $label$9
	CALL eosio_assert($3, $6)
	*($0 + [72]) = (int_64)0
	$7 = ($0 + [80])
	if ( ((int_64)*($0 + [80]) <= (int_64)0) ){ goto $label$11 }
	$6 = ((int_64)*(($0 + [88])) == (int_64)1397703940)
	goto $label$10 
	
.LABEL $label$11
	$6 = [0]
	
.LABEL $label$10
	CALL $354(($8 + [16]), [5824], $7)
	$7 = (*($8 + [16]) & [1])
	$1 = *($8 + [24])
	$3 = ( $1 ? (($8 + [16]) | [1]) : $7 )
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $430($1)
	
.LABEL $label$12
	CALL eosio_assert($6, $3)
	$6 = [0]
	*($8 + [8]) = [0]
	$3 = *(($0 + [100]))
	$7 = *($0 + [96])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	$6 = [0]
	
.LOOP $label$14:
	$6 = ($6 + *($7))
	$7 = ($7 + [4])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$14 }
	*($8 + [8]) = $6
	$6 = ((int_32)$6 == (int_32)[100])
	
.LABEL $label$13
	CALL $355(($8 + [16]), [5888], ($8 + [8]))
	$7 = (*($8 + [16]) & [1])
	$1 = *($8 + [24])
	$3 = ( $1 ? (($8 + [16]) | [1]) : $7 )
	if ( ($7 == 0) ){ goto $label$15 }
	CALL $430($1)
	
.LABEL $label$15
	CALL eosio_assert($6, $3)
	$7 = [0]
	if ( ((int_64)*($0 + [112]) <= (int_64)0) ){ goto $label$16 }
	$7 = ((int_64)*(($0 + [120])) == (int_64)1397703940)
	
.LABEL $label$16
	CALL eosio_assert($7, [5984])
	CALL eosio_assert((*($0 + [128]) <= [101]), [6048])
	CALL eosio_assert(((int_64)*($0 + [136]) != (int_64)0), [6128])
	CALL eosio_assert(((uint_32)int_32((*(($0 + [148])) - *($0 + [144])) >> [3]) > (uint_32)[9]), [6160])
	CALL eosio_assert((*($0 + [164]) <= [3]), [6224])
	CALL eosio_assert((*($0 + [156]) == 0), [6304])
	CALL eosio_assert(((int_32)*($0 + [160]) != (int_32)[0]), [6384])
	*($0 + [176]) = (int_64)0
	*($0 + [168]) = (int_64)0
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $352 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$5 = CALL strlen($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [16]) = ($5 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $428($6)
	*($9 + [16]) = ($6 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($8, $1, $5)
	
.LABEL $label$2
	*(($8 + $5)) = [0]
	CALL $356($9, $2, $3, $4)
	$5 = *($9)
	$8 = ($5 & [1])
	$5 = CALL $436(($9 + [16]), ( *($9 + [8]) ? ($9 | [1]) : $8 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $8 ))
	$7 = *($5)
	*($5) = (int_64)0
	*($0) = $7
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($9 + [8])))
	
.LABEL $label$5
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($9 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($9 + [16]))
}

void .FUNC $353 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$5 = CALL strlen($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [16]) = ($5 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $428($6)
	*($9 + [16]) = ($6 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($8, $1, $5)
	
.LABEL $label$2
	*(($8 + $5)) = [0]
	CALL $356($9, $2, $3, $4)
	$5 = *($9)
	$8 = ($5 & [1])
	$5 = CALL $436(($9 + [16]), ( *($9 + [8]) ? ($9 | [1]) : $8 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $8 ))
	$7 = *($5)
	*($5) = (int_64)0
	*($0) = $7
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($9 + [8])))
	
.LABEL $label$5
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($9 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($9 + [16]))
}

void .FUNC _ZN3pvp8payhonorE5tinfoyyyyhy11fight_log_s (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [48])
	*([0] + [4]) = $17
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [304]
	$15 = (int_64)0
	
.LOOP $label$1:
	$16 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$2 }
	$9 = *($12)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$9 = ($9 + [165])
	goto $label$3 
	
.LABEL $label$4
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$2
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($15)
	$14 = *($1)
	if ( (int_64)($14 == 0) ){ goto $label$5 }
	$12 = *(CALL _ZN11CTournament7FactoryEP3pvpy($0, $14) + [4])
	if ( (uint_64)(*($12 + [176]) <= *($12 + [64])) ){ goto $label$5 }
	$10 = *(($0 + [240]))
	$1 = *(($0 + [244]))
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$6 }
	$12 = ($1 + [-24])
	$11 = ([0] - $10)
	
.LOOP $label$7:
	if ( ((int_64)*(*($12)) == (int_64)$3) ){ goto $label$6 }
	$1 = $12
	$9 = ($12 + [-24])
	$12 = $9
	if ( ((int_32)($9 + $11) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$9 = ($0 + [216])
	if ( ((int_32)$1 == (int_32)$10) ){ goto $label$11 }
	$12 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [320])
	$14 = *($0)
	if ( $12 ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$12 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)-3111684726404022272, $3)
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$9 }
	$12 = CALL $100($9, $12)
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [320])
	$14 = *($0)
	
.LABEL $label$10
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($12 + [24]) == (int_32)$9), [880])
	CALL eosio_assert(((int_64)*(($0 + [216])) == (int_64)CALL $fimport$15()), [928])
	*($12 + [8]) = ((int_64)*($12 + [8]) + (int_64)1)
	$9 = ($12 + [16])
	*($17 + [24]) = *($9)
	$13 = *($12)
	*($9) = ((int_64)CALL current_time() + (int_64)1814400000000)
	CALL eosio_assert(((int_64)$13 == (int_64)*($12)), [992])
	CALL eosio_assert([1], [592])
	CALL memcpy($17, $12, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($17 | [8]), ($12 + [8]), [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($17 + [16]), $9, [8])
	CALL db_update_i64(*($12 + [28]), $14, $17, [24])
	$1 = ($0 + [232])
	if ( (uint_64)($13 <= *($1)) ){ goto $label$12 }
	*($1) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*($17 + [40]) = *($9)
	if ( (CALL memcmp(($17 + [24]), ($17 + [40]), [8]) == 0) ){ goto $label$5 }
	$9 = ($12 + [32])
	$12 = *($9)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$13 }
	$12 = CALL db_idx64_find_primary(*(($0 + [216])), *(($0 + [224])), (int_64)-3111684726404022272, ($17 + [32]), $13)
	*($9) = $12
	
.LABEL $label$13
	CALL db_idx64_update($12, $14, ($17 + [40]))
	goto $label$5 
	
.LABEL $label$9
	$14 = *($0)
	
.LABEL $label$8
	CALL eosio_assert(((int_64)*(($0 + [216])) == (int_64)CALL $fimport$15()), [528])
	*(($12 = CALL $428([40])) + [24]) = $9
	*($12 + [8]) = (int_64)1
	*($12) = $3
	*($12 + [16]) = ((int_64)CALL current_time() + (int_64)1814400000000)
	CALL eosio_assert([1], [592])
	CALL memcpy($17, $12, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($17 | [8]), ($12 + [8]), [8])
	CALL eosio_assert([1], [592])
	$9 = ($12 + [16])
	CALL memcpy(($17 + [16]), $9, [8])
	$13 = *($12)
	$1 = ($0 + [224])
	*($12 + [28]) = CALL db_store_i64(*($1), (int_64)-3111684726404022272, $14, $13, $17, [24])
	$11 = ($0 + [232])
	if ( (uint_64)($13 <= *($11)) ){ goto $label$14 }
	*($11) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	$13 = *($1)
	$16 = *($12)
	*($17 + [40]) = *($9)
	*($12 + [32]) = CALL db_idx64_store($13, (int_64)-3111684726404022272, $14, $16, ($17 + [40]))
	*($17 + [40]) = $12
	$14 = *($12)
	*($17) = $14
	$1 = *(($12 + [28]))
	*($17 + [32]) = $1
	$11 = ($0 + [244])
	$9 = *($11)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [248]))) ){ goto $label$16 }
	*($9 + [8]) = $14
	*($9 + [16]) = $1
	*($17 + [40]) = [0]
	*($9) = $12
	*($11) = ($9 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $113(($0 + [240]), ($17 + [40]), $17, ($17 + [32]))
	
.LABEL $label$15
	$12 = *($17 + [40])
	*($17 + [40]) = [0]
	if ( ($12 == 0) ){ goto $label$5 }
	CALL $430($12)
	
.LABEL $label$5
	*([0] + [4]) = ($17 + [48])
}

void .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$5 = *($0 + [4])
	$3 = ($5 - $4)
	$7 = ($3 + [1])
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$2 = (*($0 + [8]) - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($2 << [1])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $428($6)
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	*(($3 = ($7 + $3))) = *($1)
	$5 = ($5 - $4)
	$1 = ($3 - $5)
	$6 = ($7 + $6)
	$7 = ($3 + [1])
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $4, $5)
	$4 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $7
	*(($0 + [8])) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $430($4)
	
.LABEL $label$6
	(unreachable)
}

int_32 .FUNC $311 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [320])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5073138528238436352, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $312($0, $5)
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)$0), [320])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC _ZN3pvp9handleregE5fight (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [304]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($6)
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [112])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = [0]
	$6 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($8 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $3)
	
.LABEL $label$1
	*((($10 + [24]) + [24])) = (int_64)1398362884
	*($10 + [32]) = (int_64)0
	*($10 + [24]) = (int_64)0
	*($10 + [40]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$7 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$8 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$8 = [0]
	
.LABEL $label$4
	CALL eosio_assert($8, [1120])
	*($10 + [56]) = [0]
	*($10 + [100]) = $6
	*($10 + [96]) = $6
	*($10 + [104]) = ($6 + $3)
	*($10 + [64]) = ($10 + [96])
	*($10 + [80]) = ($10 + [24])
	CALL $385(($10 + [80]), ($10 + [64]))
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL free($6)
	
.LABEL $label$9
	$7 = *((($10 + [24]) + [8]))
	*(($10 + [76])) = *(($10 + [52]))
	*(($1 = (($10 + [64]) + [8]))) = *(($10 + [48]))
	$4 = *($10 + [24])
	*($10 + [64]) = *($10 + [40])
	*($10 + [68]) = *(($10 + [44]))
	$6 = *(($10 + [56]))
	*((($10 + [80]) + [8])) = *($1)
	*($10 + [80]) = *($10 + [64])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$10 }
	$9 = *((*($1) + $9))
	
.LABEL $label$10
	$5 = *((($10 + [80]) + [8]))
	*((($10 + [96]) + [8])) = $5
	*((($10 + [8]) + [8])) = $5
	$5 = *($10 + [80])
	*($10 + [96]) = $5
	*($10 + [8]) = $5
	CALL void $1((int_32 $4), (int_64 $7), (int_64 ($10 + [8])), (int_32 ($6 & [255])), (int_32 $9))
	*([0] + [4]) = ($10 + [112])
	return [1]
}

void .FUNC _ZN3pvp11cancelfightEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$2 = *(($0 + [120]))
	$5 = *(($0 + [124]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$1 }
	$6 = ($5 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$5 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [96])
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [144]) == (int_32)$4), [320])
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_find_i64(*(($0 + [96])), *(($0 + [104])), (int_64)6600268108542246912, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$5 }
	$6 = CALL $84($4, $6)
	CALL eosio_assert(((int_32)*($6 + [144]) == (int_32)$4), [320])
	goto $label$3 
	
.LABEL $label$5
	$6 = [0]
	
.LABEL $label$3
	*($10 + [12]) = $6
	*($10 + [8]) = $4
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [6976])
	$4 = [1]
	if ( CALL has_auth(*(($6 + [40]))) ){ goto $label$6 }
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$8 = (int_64)0
	
.LOOP $label$7:
	$9 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$8 }
	$4 = *($6)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$4 = ($4 + [165])
	goto $label$9 
	
.LABEL $label$10
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	$4 = CALL has_auth($8)
	
.LABEL $label$6
	CALL eosio_assert($4, [7808])
	CALL _ZN3pvp13doCancelFightERN5eosio11multi_indexILy6600268108542246912E5fightJNS0_10indexed_byILy4409831333891670016EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_19both_wizs_res_btypeEvEEEEEENS3_ILy6295342335517523968ENS6_IS2_yXadL_ZNKS2_8existingEvEEEEEEEE14const_iteratorE($0, ($10 + [8]))
	*($0 + [48]) = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	CALL $362($0)
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [176])
	*([0] + [4]) = $3
	*(($2 = $3) + [156]) = $0
	*($2 + [144]) = *($1)
	*($2 + [148]) = *($1 + [4])
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	$3 = CALL $94($2)
	*($2 + [164]) = $1
	*($2 + [160]) = $1
	*($2 + [168]) = ($1 + $0)
	CALL $95(($2 + [160]), $3)
	if ( ($0 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*($2 + [164]) = ($2 + [144])
	*($2 + [160]) = ($2 + [156])
	CALL $383(($2 + [160]), $2)
	$1 = *(($2 + [68]))
	if ( ($1 == 0) ){ goto $label$6 }
	*(($2 + [72])) = $1
	CALL $430($1)
	
.LABEL $label$6
	$1 = *(($2 + [56]))
	if ( ($1 == 0) ){ goto $label$7 }
	*(($2 + [60])) = $1
	CALL $430($1)
	
.LABEL $label$7
	$1 = *(($2 + [28]))
	if ( ($1 == 0) ){ goto $label$8 }
	*(($2 + [32])) = $1
	CALL $430($1)
	
.LABEL $label$8
	$1 = *(($2 + [16]))
	if ( ($1 == 0) ){ goto $label$9 }
	*(($2 + [20])) = $1
	CALL $430($1)
	
.LABEL $label$9
	*([0] + [4]) = ($2 + [176])
	return [1]
}

void .FUNC _ZN3pvp11acceptfightEy (int_32 $0, int_64 $1)
{
	CALL _ZN3pvp12processFightEyyy($0, $1, (int_64)0, (int_64)0)
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [816])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [816])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [816])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [816])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

void .FUNC _ZN3pvp11acceptarenaEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	CALL _ZN3pvp12processFightEyyy($0, $1, $2, $3)
}

void .FUNC $329 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL _ZNSt3__19to_stringEy(($6 + [16]), *($1))
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$1 = CALL strlen($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($6) = ($1 << [1])
	$4 = ($6 | [1])
	$5 = $4
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($1 + [16]) & [-16])
	$5 = CALL $428($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $1
	$4 = ($6 | [1])
	
.LABEL $label$3
	CALL memcpy($5, $2, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	$1 = *($6)
	$5 = ($1 & [1])
	$1 = CALL $436(($6 + [16]), ( *($6 + [8]) ? $4 : $5 ), ( *($6 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$3 = *($1)
	*($1) = (int_64)0
	*($0) = $3
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($6 + [8])))
	
.LABEL $label$5
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($6 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432($6)
}

void .FUNC $328 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*(($8 + [24])) = [0]
	*($8 + [16]) = (int_64)0
	$4 = CALL strlen($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($8 + [16]) = ($4 << [1])
	$7 = (($8 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$7 = CALL $428($5)
	*($8 + [16]) = ($5 | [1])
	*($8 + [24]) = $7
	*($8 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($7, $1, $4)
	
.LABEL $label$2
	*(($7 + $4)) = [0]
	CALL $329($8, $2, $3)
	$4 = *($8)
	$7 = ($4 & [1])
	$4 = CALL $436(($8 + [16]), ( *($8 + [8]) ? ($8 | [1]) : $7 ), ( *($8 + [4]) ? uint_32($4 >> [1]) : $7 ))
	$6 = *($4)
	*($4) = (int_64)0
	*($0) = $6
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($8) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($8 + [8])))
	
.LABEL $label$5
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($8 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($8 + [16]))
}

int_32 .FUNC _ZN3pvp16runFightGenotypeERK12fight_wizardS2_R9fight_logh (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	$4 = ((int_32)$4 != (int_32)[0])
	CALL _ZN3pvp14pickAttributesERib(($10 + [40]), $0, ($10 + [60]), $4)
	CALL _ZN3pvp14pickAttributesERib(($10 + [24]), $0, ($10 + [56]), $4)
	*($10 + [20]) = [0]
	*($10 + [16]) = [0]
	$7 = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($0 + [48]) = $7
	$4 = ((CASTING uint_32)(uint_64 $7) & [1])
	*($3 + [1]) = ([2] - $4)
	if ( $4 ){ goto $label$2 }
	*($10 + [16]) = [1]
	goto $label$1 
	
.LABEL $label$2
	*($10 + [20]) = [1]
	
.LABEL $label$1
	$5 = *($10 + [40])
	$4 = *($10 + [44])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	$6 = int_32(($4 - $5) >> [2])
	$9 = [0]
	$4 = *($10 + [24])
	$8 = $5
	
.LOOP $label$4:
	*($10 + [12]) = *($8)
	*($10 + [8]) = *($4)
	CALL _ZN3pvp21runFightRoundGenotypeERK12fight_wizardS2_RiS3_S3_S3_R9fight_logi($0, $1, $2, ($10 + [20]), ($10 + [16]), ($10 + [12]), ($10 + [8]), $3, [1])
	$4 = ($4 + [4])
	$8 = ($8 + [4])
	$9 = ($9 + [1])
	if ( ($9 <= $6) ){ goto $label$4 }
	
.LABEL $label$3
	CALL _ZN3pvp21runFightRoundGenotypeERK12fight_wizardS2_RiS3_S3_S3_R9fight_logi($0, $1, $2, ($10 + [20]), ($10 + [16]), ($10 + [60]), ($10 + [56]), $3, [2])
	$8 = *($10 + [20])
	*($3 + [2]) = $8
	$9 = *($10 + [16])
	*($3 + [4]) = $9
	$4 = [0]
	if ( ((int_32)$8 < (int_32)$9) ){ goto $label$5 }
	$4 = [1]
	if ( ((int_32)$8 > (int_32)$9) ){ goto $label$5 }
	$7 = ((uint_64)((int_64)((int_64)((int_64)*($4) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*(($4 = ($0 + [48]))) = $7
	$4 = ((CASTING uint_32)(uint_64 $7) & [1])
	*($3 + [6]) = ($4 + [1])
	
.LABEL $label$5
	$8 = *($10 + [24])
	if ( ($8 == 0) ){ goto $label$6 }
	*($10 + [28]) = $8
	CALL $430($8)
	
.LABEL $label$6
	if ( ($5 == 0) ){ goto $label$7 }
	*($10 + [44]) = $5
	CALL $430($5)
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [64])
	return $4
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

void .FUNC $321 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [96])
	*([0] + [4]) = $17
	$2 = *($0)
	$3 = *($0 + [4])
	$14 = *($3)
	$15 = *($14 + [16])
	*((($16 = $17) + [40])) = [0]
	*($16 + [32]) = (int_64)0
	*($16) = (int_64)0
	*($16 + [8]) = (int_64)0
	*($16 + [16]) = (int_64)0
	*($16 + [24]) = (int_64)0
	$12 = ($14 + [24])
	CALL $235(($16 + [48]), $12, $15, $16)
	$13 = *($16 + [32])
	if ( ($13 == 0) ){ goto $label$1 }
	*(($16 + [36])) = $13
	CALL $430($13)
	
.LABEL $label$1
	$15 = ((int_64)*($16 + [64]) + (int_64)1)
	*($16 + [64]) = $15
	CALL $237($12, ($16 + [48]), *(($14 + [16])))
	$13 = *($16 + [80])
	if ( ($13 == 0) ){ goto $label$2 }
	*(($16 + [84])) = $13
	CALL $430($13)
	
.LABEL $label$2
	*($1) = $15
	*($1 + [8]) = *(*($14 + [4]))
	*($1 + [16]) = *(*($3 + [4]))
	*($1 + [24]) = *(*($3 + [8]))
	$13 = CALL $192(($16 + [48]), *($3 + [8]))
	*($1 + [32]) = *($13)
	$12 = ($1 + [40])
	$14 = *($12)
	if ( ($14 == 0) ){ goto $label$4 }
	*(($1 + [44])) = $14
	CALL $430($14)
	*(($14 = ($1 + [48]))) = [0]
	*($12) = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	$14 = ($1 + [48])
	
.LABEL $label$3
	$4 = ($13 + [8])
	*(($1 + [40])) = *($4)
	$12 = [0]
	*(($13 + [12])) = [0]
	$5 = ($13 + [16])
	$6 = *($5)
	*($5) = [0]
	*($14) = $6
	*($4) = [0]
	$5 = ($1 + [52])
	$14 = *($5)
	if ( ($14 == 0) ){ goto $label$6 }
	*(($1 + [56])) = $14
	CALL $430($14)
	*(($4 = ($1 + [60]))) = [0]
	*($5) = (int_64)0
	$12 = *($13 + [8])
	goto $label$5 
	
.LABEL $label$6
	$4 = ($1 + [60])
	
.LABEL $label$5
	$5 = ($13 + [20])
	*(($1 + [52])) = *($5)
	$14 = [0]
	*(($13 + [24])) = [0]
	$6 = ($13 + [28])
	$7 = *($6)
	*($6) = [0]
	*($4) = $7
	*($5) = [0]
	if ( ($12 == 0) ){ goto $label$7 }
	*(($13 + [12])) = $12
	CALL $430($12)
	
.LABEL $label$7
	CALL eosio_assert([1], [1056])
	$15 = (int_64)5459781
	
.LOOP $label$9:
	$13 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$13 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	CALL eosio_assert($13, [1120])
	*(($1 + [72])) = (int_64)1397703940
	*($1 + [64]) = (int_64)0
	*($1 + [80]) = *(*($3 + [12]))
	$14 = [40]
	$3 = *(($1 + [40]))
	$13 = *(($1 + [44]))
	$12 = ($13 - $3)
	$15 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$12:
	$14 = ($14 + [1])
	$15 = (uint_64)$15 >> (uint_64)(int_64)7
	if ( ((int_64)$15) != (int_64)0) ){ goto $label$12 }
	$14 = ( $14 ? ($12 + $14) : ((int_32)$3 == (int_32)$13) )
	$3 = *(($1 + [52]))
	$13 = *(($1 + [56]))
	$12 = ($13 - $3)
	$15 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$13:
	$14 = ($14 + [1])
	$15 = (uint_64)$15 >> (uint_64)(int_64)7
	if ( ((int_64)$15) != (int_64)0) ){ goto $label$13 }
	$13 = (( $14 ? ($12 + $14) : ((int_32)$3 == (int_32)$13) ) + [24])
	if ( ($13 <= [513]) ){ goto $label$15 }
	$14 = CALL malloc($13)
	goto $label$14 
	
.LABEL $label$15
	$14 = ($17 - (($13 + [15]) & [-16]))
	*([0] + [4]) = $14
	
.LABEL $label$14
	*($16 + [4]) = $14
	*($16) = $14
	*($16 + [8]) = ($14 + $13)
	CALL $323($16, $1)
	$15 = *($1)
	*($1 + [92]) = CALL db_store_i64(*($2 + [8]), (int_64)-2035932804877062144, *(*($0 + [8])), $15, $14, $13)
	if ( ($13 <= [513]) ){ goto $label$16 }
	CALL free($14)
	
.LABEL $label$16
	if ( (uint_64)($15 <= *($2 + [16])) ){ goto $label$17 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$15 + (int_64)1) : ((uint_64)$15 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	$14 = ($2 + [8])
	$15 = *($14)
	$13 = *(($0 + [8]))
	$8 = *($13)
	$9 = *($1)
	$0 = ($1 + [16])
	*($16 + [48]) = *($0)
	*($1 + [96]) = CALL db_idx64_store($15, (int_64)-2035932804877062144, $8, $9, ($16 + [48]))
	$15 = *($13)
	$8 = *($14)
	$9 = *($1)
	$10 = *(($1 + [8]))
	$11 = *($0)
	*(($14 = CALL $428([16])) + [8]) = $11
	*($14) = $10
	$0 = CALL $429([16])
	CALL memcpy($0, $14, [16])
	CALL sha1($0, [16], ($16 + [48]))
	if ( ($0 == 0) ){ goto $label$18 }
	CALL $431($0)
	
.LABEL $label$18
	$10 = *($16 + [48])
	if ( ($14 == 0) ){ goto $label$19 }
	CALL $430($14)
	
.LABEL $label$19
	*($16 + [48]) = $10
	*(($1 + [100])) = CALL db_idx64_store($8, (int_64)-2035932804877062143, $15, $9, ($16 + [48]))
	$14 = ($2 + [8])
	$15 = *($14)
	$8 = *($1)
	$9 = *($13)
	$2 = ($1 + [24])
	*($16 + [48]) = *($2)
	*(($1 + [104])) = CALL db_idx64_store($15, (int_64)-2035932804877062142, $9, $8, ($16 + [48]))
	$15 = *($14)
	$8 = *($1)
	$9 = *($13)
	$10 = *(($1 + [8]))
	$11 = *($2)
	*(($14 = CALL $428([16])) + [8]) = $11
	*($14) = $10
	$13 = CALL $429([16])
	CALL memcpy($13, $14, [16])
	CALL sha1($13, [16], ($16 + [48]))
	if ( ($13 == 0) ){ goto $label$20 }
	CALL $431($13)
	
.LABEL $label$20
	$10 = *($16 + [48])
	if ( ($14 == 0) ){ goto $label$21 }
	CALL $430($14)
	
.LABEL $label$21
	*($16 + [48]) = $10
	*(($1 + [108])) = CALL db_idx64_store($15, (int_64)-2035932804877062141, $9, $8, ($16 + [48]))
	*([0] + [4]) = ($16 + [96])
}

void .FUNC $320 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$5 = CALL strlen($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [16]) = ($5 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $428($6)
	*($9 + [16]) = ($6 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($8, $1, $5)
	
.LABEL $label$2
	*(($8 + $5)) = [0]
	CALL $325($9, $2, $3, $4)
	$5 = *($9)
	$8 = ($5 & [1])
	$5 = CALL $436(($9 + [16]), ( *($9 + [8]) ? ($9 | [1]) : $8 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $8 ))
	$7 = *($5)
	*($5) = (int_64)0
	*($0) = $7
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($9 + [8])))
	
.LABEL $label$5
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($9 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($9 + [16]))
}

int_32 .FUNC $323 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $324(CALL $324($0, ($1 + [40])), ($1 + [52]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $322 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [96])
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$5 = *(($1 + [8]))
	$13 = *(($1 + [16]))
	*(($12 = CALL $428([16])) + [8]) = $13
	*($12) = $5
	$7 = CALL $429([16])
	CALL memcpy($7, $12, [16])
	$14 = $15
	CALL sha1($7, [16], ($14 + [64]))
	if ( ($7 == 0) ){ goto $label$1 }
	CALL $431($7)
	
.LABEL $label$1
	$4 = *($14 + [64])
	if ( ($12 == 0) ){ goto $label$2 }
	CALL $430($12)
	
.LABEL $label$2
	$8 = *(($1 + [8]))
	$5 = *(($1 + [24]))
	*(($12 = CALL $428([16])) + [8]) = $5
	*($12) = $8
	$7 = CALL $429([16])
	CALL memcpy($7, $12, [16])
	CALL sha1($7, [16], ($14 + [64]))
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $431($7)
	
.LABEL $label$3
	$8 = *($14 + [64])
	if ( ($12 == 0) ){ goto $label$4 }
	CALL $430($12)
	
.LABEL $label$4
	*($14 + [32]) = $4
	*($14 + [24]) = $13
	*($14 + [40]) = $5
	*($14 + [48]) = $8
	*(($1 + [16])) = *(*($3))
	$5 = *($1)
	$12 = CALL $192(($14 + [64]), *($3 + [4]))
	*($1 + [32]) = *($12)
	$3 = ($1 + [40])
	$7 = *($3)
	if ( ($7 == 0) ){ goto $label$6 }
	*(($1 + [44])) = $7
	CALL $430($7)
	*(($6 = ($1 + [48]))) = [0]
	*($3) = (int_64)0
	goto $label$5 
	
.LABEL $label$6
	$6 = ($1 + [48])
	
.LABEL $label$5
	$3 = ($12 + [8])
	*(($1 + [40])) = *($3)
	$7 = [0]
	*(($12 + [12])) = [0]
	$9 = ($12 + [16])
	$10 = *($9)
	*($9) = [0]
	*($6) = $10
	*($3) = [0]
	$9 = ($1 + [52])
	$3 = *($9)
	if ( ($3 == 0) ){ goto $label$8 }
	*(($1 + [56])) = $3
	CALL $430($3)
	*(($6 = ($1 + [60]))) = [0]
	*($9) = (int_64)0
	$7 = *($12 + [8])
	goto $label$7 
	
.LABEL $label$8
	$6 = ($1 + [60])
	
.LABEL $label$7
	$3 = ($12 + [20])
	*(($1 + [52])) = *($3)
	*(($12 + [24])) = [0]
	$9 = ($12 + [28])
	$10 = *($9)
	*($9) = [0]
	*($6) = $10
	*($3) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	*(($12 + [12])) = $7
	CALL $430($7)
	
.LABEL $label$9
	$3 = ($14 + [48])
	$9 = (($14 + [24]) + [16])
	$10 = ($14 + [32])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [992])
	$12 = [40]
	$6 = *(($1 + [40]))
	$7 = *(($1 + [44]))
	$11 = ($7 - $6)
	$13 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$10:
	$12 = ($12 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$10 }
	$12 = ( $12 ? ($11 + $12) : ((int_32)$6 == (int_32)$7) )
	$6 = *(($1 + [52]))
	$7 = *(($1 + [56]))
	$11 = ($7 - $6)
	$13 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$11:
	$12 = ($12 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$11 }
	$7 = (( $12 ? ($11 + $12) : ((int_32)$6 == (int_32)$7) ) + [24])
	if ( ($7 <= [513]) ){ goto $label$13 }
	$12 = CALL malloc($7)
	goto $label$12 
	
.LABEL $label$13
	$12 = ($15 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $12
	
.LABEL $label$12
	*($14 + [12]) = $12
	*($14 + [8]) = $12
	*($14 + [16]) = ($12 + $7)
	CALL $323(($14 + [8]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $12, $7)
	if ( ($7 <= [513]) ){ goto $label$14 }
	CALL free($12)
	
.LABEL $label$14
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$12 = ($1 + [16])
	*($14 + [64]) = *($12)
	if ( (CALL memcmp(($14 + [24]), ($14 + [64]), [8]) == 0) ){ goto $label$16 }
	$15 = ($1 + [96])
	$7 = *($15)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$17 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2035932804877062144, ($14 + [56]), $5)
	*($15) = $7
	
.LABEL $label$17
	CALL db_idx64_update($7, $2, ($14 + [64]))
	
.LABEL $label$16
	$13 = *(($1 + [8]))
	$4 = *($12)
	*(($12 = CALL $428([16])) + [8]) = $4
	*($12) = $13
	$7 = CALL $429([16])
	CALL memcpy($7, $12, [16])
	CALL sha1($7, [16], ($14 + [64]))
	if ( ($7 == 0) ){ goto $label$18 }
	CALL $431($7)
	
.LABEL $label$18
	$13 = *($14 + [64])
	if ( ($12 == 0) ){ goto $label$19 }
	CALL $430($12)
	
.LABEL $label$19
	*($14 + [64]) = $13
	if ( (CALL memcmp($10, ($14 + [64]), [8]) == 0) ){ goto $label$20 }
	$7 = ($1 + [100])
	$12 = *($7)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$21 }
	$12 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2035932804877062143, ($14 + [56]), $5)
	*($7) = $12
	
.LABEL $label$21
	CALL db_idx64_update($12, $2, ($14 + [64]))
	
.LABEL $label$20
	$12 = ($1 + [24])
	*($14 + [64]) = *($12)
	if ( (CALL memcmp($9, ($14 + [64]), [8]) == 0) ){ goto $label$22 }
	$15 = ($1 + [104])
	$7 = *($15)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$23 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2035932804877062142, ($14 + [56]), $5)
	*($15) = $7
	
.LABEL $label$23
	CALL db_idx64_update($7, $2, ($14 + [64]))
	
.LABEL $label$22
	$13 = *(($1 + [8]))
	$4 = *($12)
	*(($12 = CALL $428([16])) + [8]) = $4
	*($12) = $13
	$7 = CALL $429([16])
	CALL memcpy($7, $12, [16])
	CALL sha1($7, [16], ($14 + [64]))
	if ( ($7 == 0) ){ goto $label$24 }
	CALL $431($7)
	
.LABEL $label$24
	$13 = *($14 + [64])
	if ( ($12 == 0) ){ goto $label$25 }
	CALL $430($12)
	
.LABEL $label$25
	*($14 + [64]) = $13
	if ( (CALL memcmp($3, ($14 + [64]), [8]) == 0) ){ goto $label$26 }
	$1 = ($1 + [108])
	$12 = *($1)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$27 }
	$12 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2035932804877062141, ($14 + [56]), $5)
	*($1) = $12
	
.LABEL $label$27
	CALL db_idx64_update($12, $2, ($14 + [64]))
	
.LABEL $label$26
	*([0] + [4]) = ($14 + [96])
}

void .FUNC $325 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL _ZNSt3__19to_stringEy(($5 + [16]), *($1))
	CALL $326($5, $2, $3)
	$2 = *($5)
	$3 = ($2 & [1])
	$2 = CALL $436(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $3 ), ( *($5 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$4 = *($2)
	*($2) = (int_64)0
	*($0) = $4
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($5 + [8])))
	
.LABEL $label$1
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($5 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC $324 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [592])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [8])
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [592])
	CALL memcpy(*($2), $5, [1])
	$7 = (*($2) + [1])
	*($2) = $7
	$5 = ($5 + [1])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $327 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL _ZNSt3__19to_stringEy(($6 + [16]), *($1))
	CALL $328($6, $2, $3, $4)
	$2 = *($6)
	$3 = ($2 & [1])
	$2 = CALL $436(($6 + [16]), ( *($6 + [8]) ? ($6 | [1]) : $3 ), ( *($6 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($6 + [8])))
	
.LABEL $label$1
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($6 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $326 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [32]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [32]) = ($3 << [1])
	$6 = (($7 + [32]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [32]) = ($4 | [1])
	*($7 + [40]) = $6
	*($7 + [36]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	$3 = ($2 + [8])
	*(($7 + [8])) = *($3)
	$5 = *($2)
	*($2) = (int_64)0
	*($3) = [0]
	*($7) = $5
	CALL $446(($7 + [48]), $7)
	*(($2 = (($7 + [16]) + [8]))) = *((($7 + [48]) + [8]))
	*($7 + [16]) = *($7 + [48])
	$3 = *($7 + [16])
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [32]), ( *($2) ? (($7 + [16]) | [1]) : $6 ), ( *($7 + [20]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*($2))
	
.LABEL $label$5
	if ( ((*($7) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [8]))
	
.LABEL $label$6
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $430(*($7 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [32]))
}

int_32 .FUNC $101 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($4 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [1056])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*(($4 = CALL $428([20]))) = [0]
	*($4 + [4 align=1]) = [0]
	*($4 + [6 align=1]) = [0]
	*($4 + [10 align=1]) = [0]
	*($4 + [12 align=1]) = [0]
	*($4 + [14]) = [0]
	*($4 + [15]) = [0]
	*($4 + [16]) = [0]
	*($4 + [17]) = [0]
	*($4 + [18]) = [0]
	*($4 + [19]) = [0]
	$5 = ($4 + [20])
	$2 = ($0 + [20])
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$6 }
	*(($0 + [24])) = $1
	CALL $430($1)
	*(($0 + [28])) = [0]
	*($2) = (int_64)0
	
.LABEL $label$6
	*(($0 + [24])) = $5
	*($2) = $4
	*(($0 + [28])) = $5
	return $0
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [784])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $428([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [816])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [816])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [816])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [32]) = [-1]
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $113(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [784])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $428([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [816])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [816])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $104(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC _ZN3pvp17checkAndGetWizardEyyR6wizardb (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [96])
	*([0] + [4]) = $13
	*($13 + [88]) = $2
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1328]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$12 = *($6)
	if ( ((uint_32)(($12 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$12 = ($12 + [165])
	goto $label$3 
	
.LABEL $label$4
	$12 = ( ($12 + [208]) ? [0] : ((($12 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($12 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$11 = [0]
	*(($13 + [80])) = [0]
	*($13 + [64]) = (int_64)-1
	*($13 + [72]) = (int_64)0
	*($13 + [56]) = $1
	*($13 + [48]) = $9
	$6 = CALL db_find_i64($9, $1, (int_64)-2036071616521175040, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $106(($13 + [48]), $6)
	CALL eosio_assert(((int_32)*($6 + [48]) == (int_32)($13 + [48])), [320])
	$11 = [1]
	goto $label$6 
	
.LABEL $label$7
	if ( ($4 == 0) ){ goto $label$5 }
	$6 = [0]
	
.LABEL $label$6
	*($13 + [8]) = $1
	CALL $107(($13 + [16]), ($13 + [8]))
	CALL $108(($13 + [32]), ($13 + [16]), [1344], ($13 + [88]))
	CALL eosio_assert($11, ( *($13 + [40]) ? (($13 + [32]) | [1]) : (*($13 + [32]) & [1]) ))
	if ( ((*($13 + [32]) & [1]) == 0) ){ goto $label$8 }
	CALL $430(*(($13 + [40])))
	
.LABEL $label$8
	if ( ((*($13 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $430(*($13 + [24]))
	
.LABEL $label$9
	*($3) = *($6)
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$10 }
	CALL $109(($3 + [8]), *($6 + [8]), *(($6 + [12])))
	CALL $109(($3 + [20]), *($6 + [20]), *(($6 + [24])))
	
.LABEL $label$10
	*($3 + [32]) = *($6 + [32])
	*(($3 + [40])) = *(($6 + [40]))
	$11 = [1]
	$4 = *($13 + [72])
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = ($13 + [76])
	$12 = *($5)
	if ( ((int_32)$12 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$12 = ($12 + [-24])
	$6 = *($12)
	*($12) = [0]
	if ( ($6 == 0) ){ goto $label$14 }
	$3 = *($6 + [20])
	if ( ($3 == 0) ){ goto $label$15 }
	*(($6 + [24])) = $3
	CALL $430($3)
	
.LABEL $label$15
	$3 = *($6 + [8])
	if ( ($3 == 0) ){ goto $label$16 }
	*(($6 + [12])) = $3
	CALL $430($3)
	
.LABEL $label$16
	CALL $430($6)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$12) ){ goto $label$13 }
	$6 = *(($13 + [72]))
	goto $label$11 
	
.LABEL $label$12
	$6 = $4
	
.LABEL $label$11
	*($5) = $4
	CALL $430($6)
	
.LABEL $label$5
	*([0] + [4]) = ($13 + [96])
	return $11
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $430($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3111684726404022272, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $104 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $428([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [1368]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $447($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $435($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN3pvp9denyfightEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	$3 = *(($0 + [120]))
	$6 = *(($0 + [124]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$7 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [96])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [144]) == (int_32)$5), [320])
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*(($0 + [96])), *(($0 + [104])), (int_64)6600268108542246912, $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL $84($5, $4)
	CALL eosio_assert(((int_32)*($4 + [144]) == (int_32)$5), [320])
	goto $label$3 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$3
	*($8 + [124]) = $4
	*($8 + [120]) = $5
	$7 = [0]
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [6816])
	if ( CALL has_auth(*(($4 + [80]))) ){ goto $label$6 }
	CALL _ZN3pvp21getCurrentTransactionEv(($8 + [56]), $5)
	CALL eosio_assert(((int_32)(*((($8 + [56]) + [40])) - *($8 + [92])) == (int_32)[40]), [6864])
	$6 = CALL $101(($8 + [8]))
	$3 = *(($3 + [20]))
	$3 = *($8 + [92])
	$5 = *($3 + [16])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$2 = ($3 + [-16])
	$3 = ($4 + [48])
	
.LOOP $label$8:
	$7 = CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($5, *($5), *($3), $6, [0])
	if ( $7 ){ goto $label$7 }
	$4 = ((int_32)$2 != (int_32)$5)
	$5 = ($5 + [16])
	if ( $4 ){ goto $label$8 }
	
.LABEL $label$7
	CALL eosio_assert($7, [6928])
	$5 = *($6 + [20])
	if ( ($5 == 0) ){ goto $label$9 }
	*(($6 + [24])) = $5
	CALL $430($5)
	
.LABEL $label$9
	$5 = *($6 + [8])
	if ( ($5 == 0) ){ goto $label$10 }
	*(($6 + [12])) = $5
	CALL $430($5)
	
.LABEL $label$10
	CALL $65(($8 + [56]))
	
.LABEL $label$6
	CALL _ZN3pvp13doCancelFightERN5eosio11multi_indexILy6600268108542246912E5fightJNS0_10indexed_byILy4409831333891670016EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_19both_wizs_res_btypeEvEEEEEENS3_ILy6295342335517523968ENS6_IS2_yXadL_ZNKS2_8existingEvEEEEEEEE14const_iteratorE($0, ($8 + [120]))
	*($0 + [48]) = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	CALL $362($0)
	*([0] + [4]) = ($8 + [128])
}

void .FUNC $109 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *($0)
	$7 = *($0 + [8])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 <= (uint_32)($7 - $4)) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$5 }
	*($0 + [4]) = $4
	CALL $430($4)
	$7 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$2 = [2147483647]
	if ( ((uint_32)$7 > (uint_32)[1073741822]) ){ goto $label$6 }
	$4 = ($7 << [1])
	$2 = ( $3 ? $4 : ($4 <= $3) )
	
.LABEL $label$6
	$4 = CALL $428($2)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $2)
	CALL memcpy($4, $1, $3)
	$1 = ($0 + [4])
	$0 = (*($0 + [4]) + $3)
	goto $label$3 
	
.LABEL $label$4
	$7 = (*($0 + [4]) - $4)
	$5 = ( ($1 + $7) ? $2 : ((uint_32)$3 > (uint_32)$7) )
	$6 = ($5 - $1)
	if ( ($6 == 0) ){ goto $label$7 }
	CALL memmove($4, $1, $6)
	
.LABEL $label$7
	$1 = ($0 + [4])
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$8 }
	$0 = ($2 - $5)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy(*($1), $5, $0)
	$0 = (*($1) + $0)
	goto $label$3 
	
.LABEL $label$8
	$0 = ($4 + $6)
	
.LABEL $label$3
	*($1) = $0
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $445($0)
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	$4 = *($1)
	*($1) = (int_64)0
	$1 = ($1 + [8])
	*(($6 + [8])) = *($1)
	*($1) = [0]
	*($6) = $4
	CALL $446(($6 + [32]), $6)
	$5 = (($6 + [32]) + [8])
	*((($6 + [16]) + [8])) = *($5)
	*($6 + [16]) = *($6 + [32])
	CALL $110(($6 + [32]), $2, $3)
	$1 = *($6 + [32])
	$2 = ($1 & [1])
	$1 = CALL $436(($6 + [16]), ( *($6 + [40]) ? (($6 + [32]) | [1]) : $2 ), ( *($6 + [36]) ? uint_32($1 >> [1]) : $2 ))
	$4 = *($1)
	*($1) = (int_64)0
	*($0) = $4
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*($5))
	
.LABEL $label$1
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($6 + [24]))
	
.LABEL $label$2
	if ( ((*($6) & [1]) == 0) ){ goto $label$3 }
	CALL $430(*($6 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [17376])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [17472]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [17472]
	return .LABEL $label$1
}

void .FUNC $458 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

void .FUNC $318 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*(($10 + [24])) = [0]
	*($10 + [16]) = (int_64)0
	$6 = CALL strlen($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($10 + [16]) = ($6 << [1])
	$9 = (($10 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($6 + [16]) & [-16])
	$9 = CALL $428($7)
	*($10 + [16]) = ($7 | [1])
	*($10 + [24]) = $9
	*($10 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($9, $1, $6)
	
.LABEL $label$2
	*(($9 + $6)) = [0]
	CALL $327($10, $2, $3, $4, $5)
	$6 = *($10)
	$9 = ($6 & [1])
	$6 = CALL $436(($10 + [16]), ( *($10 + [8]) ? ($10 | [1]) : $9 ), ( *($10 + [4]) ? uint_32($6 >> [1]) : $9 ))
	$8 = *($6)
	*($6) = (int_64)0
	*($0) = $8
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($10) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($10 + [8])))
	
.LABEL $label$5
	if ( ((*($10 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($10 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($10 + [16]))
}

void .FUNC $319 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [32]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [32]) = ($3 << [1])
	$6 = (($7 + [32]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [32]) = ($4 | [1])
	*($7 + [40]) = $6
	*($7 + [36]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $446($7, $2)
	CALL $446(($7 + [48]), $7)
	*(($6 = (($7 + [16]) + [8]))) = *((($7 + [48]) + [8]))
	*($7 + [16]) = *($7 + [48])
	$3 = *($7 + [16])
	$1 = ($3 & [1])
	$3 = CALL $436(($7 + [32]), ( *($6) ? (($7 + [16]) | [1]) : $1 ), ( *($7 + [20]) ? uint_32($3 >> [1]) : $1 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*($6))
	
.LABEL $label$5
	if ( ((*($7) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [8]))
	
.LABEL $label$6
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $430(*($7 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [32]))
}

void .FUNC _ZN3pvp22runCalcDamagePhenotypeER13fight_round_s (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($1 + [7]) = [0]
	$4 = *($1 + [3])
	$5 = *($1 + [1])
	$2 = ($5 - $4)
	$3 = (*($1 + [6]) - $2)
	*($1 + [6]) = $3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$1 }
	if ( ((int_32)*($1 + [5]) <= (int_32)int_32(($3 << [24]) >> [24])) ){ goto $label$1 }
	*(($1 + [7])) = $2
	
.LABEL $label$1
}

int_32 .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [592])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL $216(CALL $216($0, $4), ($4 + [8]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), $1, [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [1]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [2]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [6]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = CALL $215($0, ($1 + [8]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN3pvp22runFightRoundPhenotypeERK12fight_wizardS2_RiS3_R9fight_logi (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($9 + [24]) = (int_64)0
	CALL _ZN3pvp23initFightRoundPhenotypeER13fight_round_sRK12fight_wizardS4_i($0, ($9 + [24]), $1, $2, $6)
	*($9 + [16]) = (int_64)0
	CALL _ZN3pvp23initFightRoundPhenotypeER13fight_round_sRK12fight_wizardS4_i($0, ($9 + [16]), $2, $1, $6)
	$1 = [0]
	*($9 + [31]) = [0]
	$6 = *($9 + [27])
	$2 = *($9 + [25])
	$7 = ($2 - $6)
	$8 = (*($9 + [30]) - $7)
	*($9 + [30]) = $8
	$0 = [0]
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$1 }
	$0 = [0]
	if ( ((int_32)*($9 + [29]) <= (int_32)int_32(($8 << [24]) >> [24])) ){ goto $label$1 }
	*($9 + [31]) = $7
	$0 = ($7 & [255])
	
.LABEL $label$1
	*($4) = (*($4) + $0)
	*($9 + [23]) = [0]
	$0 = *($9 + [19])
	$4 = *($9 + [17])
	$2 = ($4 - $0)
	$6 = (*($9 + [22]) - $2)
	*($9 + [22]) = $6
	if ( ((uint_32)$0 >= (uint_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($9 + [21]) <= (int_32)int_32(($6 << [24]) >> [24])) ){ goto $label$2 }
	*($9 + [23]) = $2
	$1 = ($2 & [255])
	
.LABEL $label$2
	*($3) = (*($3) + $1)
	*($9) = *($9 + [24])
	*($9 + [8]) = *($9 + [16])
	$3 = ($5 + [12])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)*(($5 + [16]))) ){ goto $label$4 }
	*($4) = *($9)
	*(($4 + [8])) = *(($9 + [8]))
	*($3) = (*($3) + [16])
	goto $label$3 
	
.LABEL $label$4
	CALL $219(($5 + [8]), $9)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), $1, [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [1]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [2]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [3]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [5]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [6]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [7]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL $212(*($1), *($0))
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($2 + [4]), ($0 + [32]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($2 + [4]), ($0 + [40]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($2 + [4]), ($0 + [48]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	*($3 + [8]) = $0
	CALL $213(($3 + [8]), $1)
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [592])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $7) > (int_32)[7]), [592])
	CALL memcpy(*($2), $5, [8])
	$7 = (*($2) + [8])
	*($2) = $7
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($2 + [4]), ($3 + [56]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [592])
	CALL memcpy(*($2 + [4]), ($0 + [64]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($2 + [4]), ($0 + [72]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $214(*($1), ($0 + [80]))
}

void .FUNC $223 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

int_32 .FUNC _ZN15CTournStructure8GetNext2EbRNSt3__16vectorIyNS0_9allocatorIyEEEERy (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [32])
	*([0] + [4]) = $14
	CALL _ZN15CTournStructure4initEb($0, [1])
	*($14 + [16]) = (int_64)0
	$7 = [0]
	*($14 + [24]) = [0]
	$6 = *(($0 + [8]))
	$12 = (*(($6 + [20])) - *($6 + [16]))
	$5 = int_32($12 >> [5])
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$1 }
	$7 = CALL $428($12)
	*(($14 + [24])) = ($7 + ($5 << [5]))
	*($14 + [16]) = $7
	*($14 + [20]) = $7
	$5 = *(($6 + [16]))
	$6 = (*(($6 + [20])) - $5)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $5, $6)
	$6 = ($7 + $6)
	*($14 + [20]) = $6
	$4 = $7
	$7 = $6
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	$6 = [0]
	goto $label$2 
	
.LABEL $label$3
	$4 = $7
	$6 = $7
	
.LABEL $label$2
	*($3) = (int_64)255
	$12 = int_32(($7 - $6) >> [5])
	if ( ($1 == 0) ){ goto $label$11 }
	if ( ($12 == 0) ){ goto $label$12 }
	$6 = ($4 + [16])
	$5 = int_32(($7 - $4) >> [5])
	$7 = [0]
	$11 = (int_64)0
	
.LOOP $label$13:
	if ( ((int_64)(*($6) == 0) == 0) ){ goto $label$10 }
	$6 = ($6 + [32])
	$11 = ((int_64)$11 + (int_64)1)
	$7 = ($7 + [1])
	if ( ($7 <= $5) ){ goto $label$13 }
	
.LABEL $label$12
	$1 = [0]
	$6 = *($14 + [16])
	if ( $6 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$11
	$1 = [2]
	if ( ($12 == 0) ){ goto $label$7 }
	$6 = ($4 + [48])
	$5 = int_32(($7 - $4) >> [5])
	$7 = [0]
	$10 = ($4 + [16])
	
.LOOP $label$14:
	$11 = *(($6 + [-32]))
	if ( (uint_64)($11 <= (int_64)5) ){ goto $label$15 }
	if ( ($7 == 0) ){ goto $label$17 }
	$9 = ((int_64)$11 << (int_64)1)
	$8 = *(($6 + [-64]))
	if ( ((uint_32)$7 >= (uint_32)($12 + [-1])) ){ goto $label$16 }
	if ( ((uint_64)$8 >= (uint_64)$9) ){ goto $label$15 }
	if ( ((uint_64)$11 <= (uint_64)((int_64)*($6) + (int_64)3)) ){ goto $label$15 }
	goto $label$9 
	
.LABEL $label$17
	$13 = [0]
	if ( ((int_32)$12 == (int_32)[1]) ){ goto $label$8 }
	if ( ((uint_64)((int_64)*(($4 + [48])) << (int_64)1) > (uint_64)*($10)) ){ goto $label$15 }
	goto $label$8 
	
.LABEL $label$16
	if ( (uint_64)($8 <= $9) ){ goto $label$9 }
	
.LABEL $label$15
	$6 = ($6 + [32])
	$12 = $5
	$7 = ($7 + [1])
	if ( ($7 <= $5) ){ goto $label$14 }
	goto $label$7 
	
.LABEL $label$10
	*($3) = $11
	*($14 + [8]) = [0]
	*($14) = (int_64)0
	$6 = CALL _ZN15CTournStructure16remove_from_headEiiRNSt3__16vectorIyNS0_9allocatorIyEEEE($0, $7, [2], $14)
	CALL $201($2, *($2 + [4]), *($14), *($14 + [4]))
	if ( ((int_32)$6 == (int_32)[2]) ){ goto $label$20 }
	if ( ((int_32)$6 != (int_32)[1]) ){ goto $label$19 }
	$1 = ( [4] ? [8] : ((int_32)(int_32((*($14 + [20]) - *($14 + [16])) >> [5]) + [-1]) == (int_32)$7) )
	$6 = *($14)
	if ( $6 ){ goto $label$18 }
	goto $label$7 
	
.LABEL $label$20
	$1 = [16]
	$6 = *($14)
	if ( $6 ){ goto $label$18 }
	goto $label$7 
	
.LABEL $label$19
	CALL eosio_assert([0], [2112])
	$1 = [2]
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$18
	*($14 + [4]) = $6
	CALL $430($6)
	$6 = *($14 + [16])
	if ( $6 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$9
	$13 = $7
	
.LABEL $label$8
	*($3) = (CASTING int_64)(int_32 $13)
	*($14 + [8]) = [0]
	*($14) = (int_64)0
	$1 = [2]
	$6 = CALL _ZN15CTournStructure16remove_from_headEiiRNSt3__16vectorIyNS0_9allocatorIyEEEE($0, $13, [2], $14)
	CALL $201($2, *($2 + [4]), *($14), *($14 + [4]))
	if ( ($6 == 0) ){ goto $label$22 }
	if ( ((int_32)$6 == (int_32)[2]) ){ goto $label$25 }
	if ( ((int_32)$6 != (int_32)[1]) ){ goto $label$24 }
	CALL eosio_assert([0], [2144])
	goto $label$23 
	
.LABEL $label$25
	$1 = [16]
	$6 = *($14)
	if ( $6 ){ goto $label$21 }
	goto $label$7 
	
.LABEL $label$24
	CALL eosio_assert([0], [2112])
	
.LABEL $label$23
	$1 = [2]
	
.LABEL $label$22
	$6 = *($14)
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$21
	*($14 + [4]) = $6
	CALL $430($6)
	
.LABEL $label$7
	$6 = *($14 + [16])
	if ( ($6 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*($14 + [20]) = $6
	CALL $430($6)
	
.LABEL $label$5
	*([0] + [4]) = ($14 + [32])
	return $1
	
.LABEL $label$1
	CALL $445(($14 + [16]))
	return (unreachable)
}

void .FUNC $197 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	*($1 + [8]) = *(*($3))
	*($1 + [9]) = *(*($3 + [4]))
	$4 = *($1)
	$7 = (int_64)-1
	$6 = (int_64)-1
	$5 = *($5)
	$5 = *($3 + [8])
	if ( ((int_32)*($5 + [4]) == (int_32)$5) ){ goto $label$1 }
	$6 = *($5)
	
.LABEL $label$1
	*($1 + [16]) = $6
	$3 = *($3)
	$3 = *(($3 + [8]))
	if ( (int_32((*($3 + [4]) - $3) >> [3]) <= [2]) ){ goto $label$2 }
	$7 = *($3 + [8])
	
.LABEL $label$2
	*($1 + [24]) = $7
	CALL eosio_assert([1], [992])
	$9 = $9
	$3 = ($9 + [-32])
	*([0] + [4]) = $3
	*($8 + [4]) = $3
	*($8) = $3
	*($8 + [8]) = ($9 + [-6])
	CALL $199($8, $1)
	CALL db_update_i64(*($1 + [36]), $2, $3, [26])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC _ZN3pvp17runFightPhenotypeERK12fight_wizardS2_R9fight_logh (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	*($7 + [12]) = [0]
	*($7 + [8]) = [0]
	$6 = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($0 + [48]) = $6
	$5 = ((CASTING uint_32)(uint_64 $6) & [1])
	*($3 + [1]) = ([2] - $5)
	if ( $5 ){ goto $label$2 }
	*($7 + [8]) = [1]
	goto $label$1 
	
.LABEL $label$2
	*($7 + [12]) = [1]
	
.LABEL $label$1
	CALL _ZN3pvp22runFightRoundPhenotypeERK12fight_wizardS2_RiS3_R9fight_logi($0, $1, $2, ($7 + [12]), ($7 + [8]), $3, [1])
	CALL _ZN3pvp22runFightRoundPhenotypeERK12fight_wizardS2_RiS3_R9fight_logi($0, $1, $2, ($7 + [12]), ($7 + [8]), $3, [1])
	CALL _ZN3pvp22runFightRoundPhenotypeERK12fight_wizardS2_RiS3_R9fight_logi($0, $1, $2, ($7 + [12]), ($7 + [8]), $3, [1])
	CALL _ZN3pvp22runFightRoundPhenotypeERK12fight_wizardS2_RiS3_R9fight_logi($0, $1, $2, ($7 + [12]), ($7 + [8]), $3, [1])
	CALL _ZN3pvp22runFightRoundPhenotypeERK12fight_wizardS2_RiS3_R9fight_logi($0, $1, $2, ($7 + [12]), ($7 + [8]), $3, [2])
	$2 = *($7 + [12])
	*($3 + [2]) = $2
	$5 = *($7 + [8])
	*($3 + [4]) = $5
	$1 = [0]
	if ( ((int_32)$2 < (int_32)$5) ){ goto $label$3 }
	$1 = [1]
	if ( ((int_32)$2 > (int_32)$5) ){ goto $label$3 }
	$6 = ((uint_64)((int_64)((int_64)((int_64)*($0) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*(($0 = ($0 + [48]))) = $6
	$1 = ((CASTING uint_32)(uint_64 $6) & [1])
	*($3 + [6]) = ($1 + [1])
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [16])
	return $1
}

void .FUNC _ZN3pvp7sendlogER9fight_logR5tinfo (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_32 $22
	$22 = (*([0] + [4]) - [256])
	*([0] + [4]) = $22
	$4 = ($1 + [120])
	CALL eosio_assert(((int_32)*($4) != (int_32)[0]), [2192])
	$10 = *($4)
	$3 = *($0)
	$18 = (int_64)0
	$17 = (int_64)59
	$0 = [1232]
	$19 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$18 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$20 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$19 = ((int_64)$20 | (int_64)$19)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$1 }
	$18 = (int_64)0
	$17 = (int_64)59
	$0 = [2240]
	$21 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$18 > (uint_64)(int_64)7) ){ goto $label$12 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$12
	$20 = (int_64)0
	if ( ((uint_64)$18 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$20 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$20 = ((int_64)((int_64)$20 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$18 = ((int_64)$18 + (int_64)1)
	$21 = ((int_64)$20 | (int_64)$21)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$7 }
	*(($11 = (($22 + [40]) + [24]))) = *(($2 + [24]))
	*(($12 = (($22 + [40]) + [16]))) = *(($2 + [16]))
	*(($13 = (($22 + [40]) + [8]))) = *(($2 + [8]))
	*($22 + [40]) = *($2)
	$2 = ((int_32)($10 & [255]) == (int_32)[1])
	$4 = ($1 + [40])
	$0 = ($1 + [80])
	$10 = ( $0 ? $4 : $2 )
	$18 = *($10)
	$20 = *($10 + [32])
	$0 = ( $4 ? $0 : $2 )
	$17 = *($0)
	$5 = *($0 + [32])
	$6 = *(($1 + [136]))
	$7 = *($1 + [32])
	*($22 + [14]) = *(($1 + [6]))
	*($22 + [12]) = *(($1 + [4]))
	*($22 + [8]) = *($1)
	*($22 + [16]) = [0]
	*(($14 = (($22 + [8]) + [12]))) = [0]
	*(($15 = (($22 + [8]) + [16]))) = [0]
	$8 = (($22 + [8]) + [8])
	$0 = [0]
	$2 = [0]
	$4 = [0]
	$9 = (*(($1 + [12])) - *($1 + [8]))
	$10 = int_32($9 >> [4])
	if ( ($10 == 0) ){ goto $label$14 }
	if ( ((uint_32)$10 >= (uint_32)[268435456]) ){ goto $label$13 }
	$4 = CALL $428($9)
	*((($22 + [8]) + [8])) = $4
	*(($9 = (($22 + [8]) + [12]))) = $4
	$0 = ($4 + ($10 << [4]))
	*(($22 + [24])) = $0
	$10 = *(($1 + [8]))
	$2 = (*(($1 + [12])) - $10)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$15 }
	CALL memcpy($4, $10, $2)
	$2 = ($4 + $2)
	*($9) = $2
	goto $label$14 
	
.LABEL $label$15
	$2 = $4
	
.LABEL $label$14
	*((($22 + [72]) + [16])) = *($12)
	*((($22 + [72]) + [8])) = *($13)
	$16 = *($1 + [24])
	*($22 + [32]) = $16
	*((($22 + [72]) + [24])) = *($11)
	*($22 + [72]) = *($22 + [40])
	*($22 + [104]) = $5
	*($22 + [112]) = $17
	*($22 + [120]) = $20
	*($22 + [128]) = $18
	*($22 + [136]) = $6
	*($22 + [144]) = $7
	*(($22 + [158])) = *($22 + [14])
	*(($22 + [156])) = *($22 + [12])
	*($22 + [152]) = *($22 + [8])
	*(($22 + [160])) = $4
	*(($22 + [164])) = $2
	*(($22 + [168])) = $0
	*($15) = [0]
	*($14) = [0]
	*($8) = [0]
	*(($22 + [176])) = $16
	*($22 + [192]) = $21
	*($22 + [184]) = $3
	*(($0 = CALL $428([16]))) = $3
	*($0 + [8]) = $19
	*(($22 + [216])) = [0]
	$1 = ($0 + [16])
	*((($22 + [184]) + [24])) = $1
	*(($22 + [204])) = $1
	*($22 + [200]) = $0
	*($22 + [212]) = [0]
	*(($22 + [220])) = [0]
	$1 = ($2 - $4)
	$18 = (CASTING uint_64)(uint_32 int_32($1 >> [4]))
	$10 = ($22 + [212])
	$0 = [73]
	
.LOOP $label$16:
	$0 = ($0 + [1])
	$18 = (uint_64)$18 >> (uint_64)(int_64)7
	if ( ((int_64)$18) != (int_64)0) ){ goto $label$16 }
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$17 }
	$0 = (($1 & [-16]) + $0)
	
.LABEL $label$17
	$0 = ($0 + [8])
	if ( ($0 == 0) ){ goto $label$19 }
	CALL $76($10, $0)
	$4 = *(($22 + [216]))
	$0 = *(($22 + [212]))
	goto $label$18 
	
.LABEL $label$19
	$4 = [0]
	$0 = [0]
	
.LABEL $label$18
	*($22 + [244]) = $0
	*($22 + [240]) = $0
	*($22 + [248]) = $4
	*($22 + [224]) = ($22 + [240])
	*($22 + [232]) = ($22 + [72])
	CALL $211(($22 + [232]), ($22 + [224]))
	CALL $85(($22 + [240]), ($22 + [184]))
	$0 = *($22 + [240])
	CALL send_inline($0, (*($22 + [244]) - $0))
	$0 = *($22 + [240])
	if ( ($0 == 0) ){ goto $label$20 }
	*($22 + [244]) = $0
	CALL $430($0)
	
.LABEL $label$20
	$0 = *($22 + [212])
	if ( ($0 == 0) ){ goto $label$21 }
	*(($22 + [216])) = $0
	CALL $430($0)
	
.LABEL $label$21
	$0 = *($22 + [200])
	if ( ($0 == 0) ){ goto $label$22 }
	*(($22 + [204])) = $0
	CALL $430($0)
	
.LABEL $label$22
	$0 = *(($22 + [160]))
	if ( ($0 == 0) ){ goto $label$23 }
	*(($22 + [164])) = $0
	CALL $430($0)
	
.LABEL $label$23
	$0 = *($22 + [16])
	if ( ($0 == 0) ){ goto $label$24 }
	*(($22 + [20])) = $0
	CALL $430($0)
	
.LABEL $label$24
	*([0] + [4]) = ($22 + [256])
	return (unreachable)
	
.LABEL $label$13
	CALL $445($8)
}

void .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [4])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$3 }
	$4 = [268435455]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$4 = int_32($7 >> [3])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $428(($4 << [4]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [4])))) = *($1)
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [4]))
	$3 = ($3 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $430($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC _ZN3pvp23initFightRoundPhenotypeER13fight_round_sRK12fight_wizardS4_i (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($0 + [48]) = $5
	$5 = ((uint_64)$5 % (uint_64)(int_64)3)
	*($1) = $5
	$9 = [0]
	$8 = [0]
	$7 = ((uint_32)*((*($0 + [56]) + (CASTING uint_32)(uint_64 $5))) % (uint_32)[10])
	$6 = *($2 + [20])
	$2 = *(($6 + ( ($7 + [20]) ? $7 : ((uint_32)(*(($2 + [24])) - $6) > (uint_32)[20]) )))
	if ( ((uint_32)$2 > (uint_32)[7]) ){ goto $label$1 }
	$8 = (([8] - $2) & [255])
	
.LABEL $label$1
	$8 = ((int_32)$8 * (int_32)$4)
	*(($1 + [2])) = $8
	$5 = ((uint_64)((int_64)((int_64)((int_64)*($2) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*(($2 = ($0 + [48]))) = $5
	*(($1 + [1])) = ((uint_64)$5 % (uint_64)(CASTING uint_64)(uint_32 (($8 & [255]) + [1])))
	$4 = ((uint_32)*((*($0 + [68]) + *($1))) % (uint_32)[10])
	$8 = *($3 + [20])
	$8 = *(($8 + ( ($4 + [20]) ? $4 : ((uint_32)(*(($3 + [24])) - $8) > (uint_32)[20]) )))
	if ( ((uint_32)$8 > (uint_32)[7]) ){ goto $label$2 }
	$9 = (([8] - $8) & [255])
	
.LABEL $label$2
	*(($1 + [4])) = $9
	$5 = ((uint_64)((int_64)((int_64)((int_64)*($2) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($2) = $5
	*(($1 + [3])) = ((uint_64)$5 % (uint_64)(CASTING uint_64)(uint_32 ($9 + [1])))
	$2 = [0]
	$8 = ((uint_32)*((*($0 + [80]) + *($1))) % (uint_32)[10])
	$9 = *(($3 + [20]))
	$3 = *(($9 + ( ($8 + [20]) ? $8 : ((uint_32)(*(($3 + [24])) - $9) > (uint_32)[20]) )))
	if ( ((uint_32)$3 > (uint_32)[7]) ){ goto $label$3 }
	$2 = ([8] - $3)
	
.LABEL $label$3
	*($1 + [6]) = $2
	$5 = ((uint_64)((int_64)((int_64)((int_64)*($0) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*(($0 = ($0 + [48]))) = $5
	*($1 + [5]) = ((uint_64)$5 % (uint_64)(int_64)11)
}

void .FUNC _ZN11CTournament14AddWinToWizardERKy (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	$1 = CALL _ZN11CTournament16WizardByWizInTIdERKy($0, $1)
	*((($8 + [8]) + [24])) = *(($1 + [24]))
	*((($8 + [8]) + [16])) = *(($1 + [16]))
	*((($8 + [8]) + [8])) = *(($1 + [8]))
	*($8 + [8]) = *($1)
	CALL $192((($8 + [8]) + [32]), ($1 + [32]))
	*((($8 + [8]) + [72])) = *(($1 + [72]))
	$2 = *(($1 + [80]))
	*($8 + [88]) = $2
	*($8 + [72]) = *($1 + [64])
	$3 = *(($0 + [168]))
	$7 = *(($0 + [172]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [144])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$5), [320])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$7 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)-2035737192754708480, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $161($5, $7)
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$5), [320])
	
.LABEL $label$3
	$7 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($7, [2320])
	$6 = *($0 + [16])
	CALL eosio_assert($7, [832])
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$5), [880])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$15()), [928])
	*($1 + [8]) = (*($1 + [8]) + [1])
	$2 = *($1)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [592])
	CALL memcpy(($8 + [96]), $1, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy((($8 + [96]) | [8]), ($1 + [8]), [2])
	CALL eosio_assert([1], [592])
	CALL memcpy((($8 + [96]) | [10]), ($1 + [10]), [2])
	CALL db_update_i64(*($1 + [16]), $6, ($8 + [96]), [12])
	$1 = ($0 + [160])
	if ( (uint_64)($2 <= *($1)) ){ goto $label$5 }
	*($1) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$1 = *(($8 + [60]))
	if ( ($1 == 0) ){ goto $label$6 }
	*(($8 + [64])) = $1
	CALL $430($1)
	
.LABEL $label$6
	$1 = *(($8 + [48]))
	if ( ($1 == 0) ){ goto $label$7 }
	*(($8 + [52])) = $1
	CALL $430($1)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [112])
}

int_32 .FUNC _ZN11CTournament16WizardByWizInTIdERKy (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$2 = *($1)
	$3 = *(($0 + [128]))
	$7 = *(($0 + [132]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [104])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$5), [320])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$7 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)-2035932804877062144, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $134($5, $7)
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$5), [320])
	
.LABEL $label$3
	CALL $223($8, [2256], $1)
	$5 = (*($8) & [1])
	$0 = *($8 + [8])
	$7 = ( $0 ? ($8 | [1]) : $5 )
	$4 = ((int_32)$6 != (int_32)[0])
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $430($0)
	
.LABEL $label$5
	CALL eosio_assert($4, $7)
	*([0] + [4]) = ($8 + [16])
	return $6
}

void .FUNC $378 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$6 = ($0 + [28])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$7 = ([0] - $3)
	$5 = ($4 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$1 }
	$4 = $5
	$8 = ($5 + [-24])
	$5 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [720])
	$8 = ($4 + [-24])
	$5 = *($6)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$4 }
	$3 = ([0] - $5)
	$5 = $8
	
.LOOP $label$5:
	$8 = ($5 + [24])
	$7 = *($8)
	*($8) = [0]
	$4 = *($5)
	*($5) = $7
	if ( ($4 == 0) ){ goto $label$6 }
	$7 = *(($4 + [68]))
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [72])) = $7
	CALL $430($7)
	
.LABEL $label$7
	$7 = *(($4 + [56]))
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [60])) = $7
	CALL $430($7)
	
.LABEL $label$8
	$7 = *(($4 + [28]))
	if ( ($7 == 0) ){ goto $label$9 }
	*(($4 + [32])) = $7
	CALL $430($7)
	
.LABEL $label$9
	$7 = *(($4 + [16]))
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [20])) = $7
	CALL $430($7)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$6
	*(($5 + [16])) = *(($5 + [40]))
	*(($5 + [8])) = *(($5 + [32]))
	$5 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$11:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *(($5 + [68]))
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [72])) = $7
	CALL $430($7)
	
.LABEL $label$13
	$7 = *(($5 + [56]))
	if ( ($7 == 0) ){ goto $label$14 }
	*(($5 + [60])) = $7
	CALL $430($7)
	
.LABEL $label$14
	$7 = *(($5 + [28]))
	if ( ($7 == 0) ){ goto $label$15 }
	*(($5 + [32])) = $7
	CALL $430($7)
	
.LABEL $label$15
	$7 = *(($5 + [16]))
	if ( ($7 == 0) ){ goto $label$16 }
	*(($5 + [20])) = $7
	CALL $430($7)
	
.LABEL $label$16
	CALL $430($5)
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$11 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [148]))
	$5 = *(($1 + [152]))
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$18 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6600268108542246912, ($9 + [8]), *($1))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($5)
	
.LABEL $label$17
	$5 = *(($1 + [156]))
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$20 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6600268108542246913, ($9 + [8]), *($1))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$19 }
	
.LABEL $label$20
	CALL db_idx64_remove($5)
	
.LABEL $label$19
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN3pvp12processFightEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_64 $21
	int_64 $22
	int_32 $23
	int_32 $24
	$24 = (*([0] + [4]) - [576])
	*([0] + [4]) = $24
	$8 = *(($0 + [120]))
	$19 = *(($0 + [124]))
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$1 }
	$20 = ($19 + [-24])
	$6 = ([0] - $8)
	
.LOOP $label$2:
	if ( ((int_64)*(*($20)) == (int_64)$1) ){ goto $label$1 }
	$19 = $20
	$10 = ($20 + [-24])
	$20 = $10
	if ( ((int_32)($10 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [96])
	if ( ((int_32)$19 == (int_32)$8) ){ goto $label$4 }
	$19 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($19 + [144]) == (int_32)$5), [320])
	goto $label$3 
	
.LABEL $label$4
	$19 = [0]
	$20 = CALL db_find_i64(*(($0 + [96])), *(($0 + [104])), (int_64)6600268108542246912, $1)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$3 }
	$19 = CALL $84($5, $20)
	CALL eosio_assert(((int_32)*($19 + [144]) == (int_32)$5), [320])
	
.LABEL $label$3
	$7 = ((int_32)$19 != (int_32)[0])
	CALL eosio_assert($7, [7072])
	*($24 + [432]) = *($19)
	$14 = CALL $192((($24 + [432]) + [8]), ($19 + [8]))
	*((($24 + [432]) + [40])) = *(($19 + [40]))
	$10 = (($24 + [432]) + [48])
	$15 = CALL $192($10, ($19 + [48]))
	$1 = *(($19 + [80]))
	*((($24 + [432]) + [104])) = *(($19 + [104]))
	*((($24 + [432]) + [100])) = *(($19 + [100]))
	*((($24 + [432]) + [96])) = *(($19 + [96]))
	*((($24 + [432]) + [92])) = *(($19 + [92]))
	*(($20 = (($24 + [432]) + [80]))) = $1
	*($24 + [520]) = *($19 + [88])
	$4 = CALL memcpy((($24 + [432]) + [108]), ($19 + [108]), [36])
	$6 = CALL $101(($24 + [384]))
	$1 = *($20)
	$13 = (int_64)($1 == 0)
	if ( ($13 == 0) ){ goto $label$5 }
	CALL eosio_assert((((int_64)$2 != (int_64)0) & ((int_64)$3 != (int_64)0)), [7120])
	CALL eosio_assert(CALL $102($24, $2, $3, $6, [1]), [7184])
	*($20) = $2
	$8 = CALL $303(($24 + [336]), $6)
	$20 = CALL _ZN12fight_wizardC2E6wizard(($24 + [96]), $8)
	*($10) = *($20)
	$11 = ($24 + [488])
	$23 = *($11)
	if ( ($23 == 0) ){ goto $label$7 }
	*(($24 + [492])) = $23
	CALL $430($23)
	*(($16 = ($24 + [496]))) = [0]
	*($11) = (int_64)0
	goto $label$6 
	
.LABEL $label$7
	$16 = ($24 + [496])
	
.LABEL $label$6
	$23 = ($20 + [8])
	*(($24 + [488])) = *($23)
	*(($20 + [12])) = [0]
	$11 = ($20 + [16])
	$18 = *($11)
	*($11) = [0]
	*($16) = $18
	*($23) = [0]
	$11 = ($24 + [500])
	$23 = *($11)
	if ( ($23 == 0) ){ goto $label$9 }
	*(($24 + [504])) = $23
	CALL $430($23)
	*(($16 = ($24 + [508]))) = [0]
	*($11) = (int_64)0
	goto $label$8 
	
.LABEL $label$9
	$16 = ($24 + [508])
	
.LABEL $label$8
	$23 = ($20 + [20])
	*(($24 + [500])) = *($23)
	*(($20 + [24])) = [0]
	$11 = ($20 + [28])
	$18 = *($11)
	*($11) = [0]
	*($16) = $18
	*($23) = [0]
	$23 = *($20 + [8])
	if ( ($23 == 0) ){ goto $label$10 }
	*(($20 + [12])) = $23
	CALL $430($23)
	
.LABEL $label$10
	$20 = *($8 + [20])
	if ( ($20 == 0) ){ goto $label$11 }
	*(($8 + [24])) = $20
	CALL $430($20)
	
.LABEL $label$11
	$20 = *($8 + [8])
	if ( ($20 == 0) ){ goto $label$12 }
	*(($8 + [12])) = $20
	CALL $430($20)
	
.LABEL $label$12
	$1 = *(($24 + [512]))
	
.LABEL $label$5
	if ( (CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($24, $1, *($10), $6, [0]) == 0) ){ goto $label$14 }
	$20 = CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($24, *(($24 + [472])), *($24 + [440]), $6, [0])
	goto $label$13 
	
.LABEL $label$14
	$20 = [0]
	
.LABEL $label$13
	$8 = ($24 + [520])
	CALL eosio_assert($20, [7232])
	$20 = ($24 + [512])
	CALL require_auth(*($20))
	CALL _ZN3pvp18checkCooldownInnerEyb($0, *(($24 + [440])), [0])
	CALL _ZN3pvp18checkCooldownInnerEyb($0, *(($24 + [480])), [0])
	$9 = *($20)
	$1 = (int_64)0
	$3 = (int_64)59
	$20 = [7328]
	$21 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$20 }
	$10 = *($20)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$10 = ($10 + [165])
	goto $label$18 
	
.LABEL $label$20
	$2 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$16
	$20 = ($20 + [1])
	$3 = ((int_64)$3 + (int_64)-5)
	$21 = ((int_64)$2 | (int_64)$21)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$15 }
	$1 = (int_64)0
	$3 = (int_64)59
	$20 = [7344]
	$22 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$1 > (uint_64)(int_64)10) ){ goto $label$26 }
	$10 = *($20)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$10 = ($10 + [165])
	goto $label$24 
	
.LABEL $label$26
	$2 = (int_64)0
	if ( ((int_64)$1 == (int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$3 & (int_64)4294967295))
	
.LABEL $label$22
	$20 = ($20 + [1])
	$3 = ((int_64)$3 + (int_64)-5)
	$22 = ((int_64)$2 | (int_64)$22)
	$1 = ((int_64)$1 + (int_64)1)
	if ( ((int_64)$1 != (int_64)13) ){ goto $label$21 }
	CALL _ZN3pvp29checkFirstTransferTransactionEyyb(($24 + [320]), $0, $9, ( $21 ? $22 : $13 ), [0])
	$20 = ($24 + [568])
	CALL eosio_assert(((int_64)*($24 + [328]) == (int_64)*($20)), [4080])
	$1 = *($24 + [560])
	$2 = *($24 + [320])
	$3 = *($20)
	*((($24 + [288]) + [8])) = $3
	*((($24 + [16]) + [8])) = $3
	*($24 + [288]) = *($24 + [560])
	*($24 + [16]) = *($24 + [288])
	*($24 + [20]) = *($24 + [292])
	CALL _Z19EOS_asset_to_stringN5eosio5assetE(($24 + [304]), ($24 + [16]))
	$20 = CALL $438(($24 + [304]), [0], [7360])
	$10 = ($20 + [8])
	*((($24 + [64]) + [8])) = *($10)
	*($24 + [64]) = *($20)
	*($20) = [0]
	*(($20 + [4])) = [0]
	*($10) = [0]
	$20 = CALL $437(($24 + [64]), [7408])
	$23 = ($20 + [8])
	*(($10 = (($24 + [96]) + [8]))) = *($23)
	*($24 + [96]) = *($20)
	*($20) = [0]
	*(($20 + [4])) = [0]
	*($23) = [0]
	CALL eosio_assert(((int_64)$2 >= (int_64)$1), ( *($10) ? (($24 + [96]) | [1]) : (*($24 + [96]) & [1]) ))
	if ( ((*($24 + [96]) & [1]) == 0) ){ goto $label$27 }
	CALL $430(*($10))
	
.LABEL $label$27
	if ( ((*($24 + [64]) & [1]) == 0) ){ goto $label$28 }
	CALL $430(*($24 + [72]))
	
.LABEL $label$28
	if ( ((*($24 + [304]) & [1]) == 0) ){ goto $label$29 }
	CALL $430(*($24 + [312]))
	
.LABEL $label$29
	*(($24 + [112])) = [0]
	*($24 + [104]) = (int_64)0
	$11 = CALL $94(($24 + [128]))
	$20 = *($24 + [536])
	if ( ((uint_32)$20 >= (uint_32)[2]) ){ goto $label$31 }
	$23 = CALL _ZN3pvp16runFightGenotypeERK12fight_wizardS2_R9fight_logh($0, $14, $15, ($24 + [96]), $20)
	goto $label$30 
	
.LABEL $label$31
	if ( ((int_32)$20 != (int_32)[2]) ){ goto $label$32 }
	$23 = CALL _ZN3pvp17runFightPhenotypeERK12fight_wizardS2_R9fight_logh($0, $14, $15, ($24 + [96]), [0])
	goto $label$30 
	
.LABEL $label$32
	CALL eosio_assert([0], [1968])
	
.LABEL $label$30
	$20 = ($23 + [1])
	*($24 + [96]) = $20
	$1 = CALL current_time()
	*((($24 + [432]) + [88])) = $20
	*($24 + [120]) = $1
	*($24 + [528]) = $1
	CALL eosio_assert($7, [448])
	CALL eosio_assert($7, [496])
	$20 = CALL db_next_i64(*($19 + [148]), ($24 + [64]))
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$33 }
	CALL $84($5, $20)
	
.LABEL $label$33
	CALL $378($5, $19)
	$19 = (($24 + [432]) + [80])
	$1 = ((int_64)*(($20 + ( [28] ? [8] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [27] ? [7] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [26] ? [6] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [25] ? [5] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [24] ? [4] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [23] ? [3] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [22] ? [2] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [21] ? [1] : $10 ))) * (int_64)60000000)
	$15 = ($24 + [528])
	$14 = ($24 + [464])
	$10 = ((uint_32)(*($14) - $20) > (uint_32)[20])
	$7 = (($24 + [432]) + [28])
	$20 = *($7)
	$1 = ((int_64)*(( ($20 + [20]) ? $20 : $10 )) * (int_64)60000000)
	$5 = (($24 + [432]) + [8])
	CALL _ZN3pvp11setCooldownEyyy($0, *($5), ((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) ) + (int_64)*($15)) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )), *($19))
	$1 = ((int_64)*(($20 + ( [28] ? [8] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [27] ? [7] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [26] ? [6] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [25] ? [5] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [24] ? [4] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [23] ? [3] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [22] ? [2] : $10 ))) * (int_64)60000000)
	$1 = ((int_64)*(($20 + ( [21] ? [1] : $10 ))) * (int_64)60000000)
	$17 = (($24 + [432]) + [72])
	$10 = ((uint_32)(*($17) - $20) > (uint_32)[20])
	$16 = ($24 + [500])
	$20 = *($16)
	$1 = ((int_64)*(( ($20 + [20]) ? $20 : $10 )) * (int_64)60000000)
	$18 = (($24 + [432]) + [48])
	CALL _ZN3pvp11setCooldownEyyy($0, *($18), ((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)((int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) ) + (int_64)*($15)) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )) + (int_64)( $1 ? (int_64)360000000 : (uint_64)($1 <= (int_64)360000000) )), *($19))
	*($11) = *($24 + [432])
	*((($24 + [96]) + [40])) = *($5)
	CALL $109((($24 + [96]) + [48]), *((($24 + [432]) + [16])), *((($24 + [432]) + [20])))
	CALL $109((($24 + [96]) + [60]), *($7), *($14))
	$20 = (($24 + [432]) + [40])
	*((($24 + [96]) + [72])) = *($20)
	*((($24 + [96]) + [80])) = *($18)
	CALL $109((($24 + [96]) + [88]), *(($24 + [488])), *((($24 + [432]) + [60])))
	$5 = ($24 + [196])
	CALL $109($5, *($16), *($17))
	$3 = *($19)
	*(($24 + [208])) = $3
	*((($24 + [96]) + [120])) = *($8)
	*((($24 + [96]) + [136])) = *(($8 + [16]))
	*(($24 + [228])) = *(($8 + [12]))
	*((($24 + [96]) + [128])) = *(($8 + [8]))
	CALL memcpy(($24 + [236]), $4, [36])
	$21 = *($20)
	$1 = (int_64)0
	*($24 + [72]) = (int_64)0
	*($24 + [64]) = (int_64)0
	*($24 + [80]) = (int_64)0
	*($24 + [88]) = [0]
	CALL _ZN3pvp7sendlogER9fight_logR5tinfo($0, ($24 + [96]), ($24 + [64]))
	$2 = *($24 + [544])
	$9 = *((($24 + [432]) + [120]))
	CALL eosio_assert(((int_64)*((($24 + [432]) + [136])) == (int_64)$9), [4384])
	$22 = ((int_64)$2 + (int_64)*((($24 + [432]) + [128])))
	CALL eosio_assert(((int_64)$22 > (int_64)-4611686018427387904), [4432])
	CALL eosio_assert(((int_64)$22 < (int_64)4611686018427387904), [4464])
	if ( ((int_64)$22 < (int_64)1) ){ goto $label$35 }
	$12 = ( $3 ? $21 : $23 )
	$2 = (int_64)59
	$20 = [304]
	$21 = (int_64)0
	
.LOOP $label$36:
	$3 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$37 }
	$10 = *($20)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$10 = ($10 + [165])
	goto $label$38 
	
.LABEL $label$39
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$3 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$37
	$20 = ($20 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$21 = ((int_64)$3 | (int_64)$21)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$36 }
	*($24 + [56]) = $9
	*($24 + [48]) = $22
	*(($24 + [312])) = [0]
	*($24 + [304]) = (int_64)0
	$20 = CALL strlen([7488])
	if ( ((uint_32)$20 >= (uint_32)[-16]) ){ goto $label$34 }
	if ( ((uint_32)$20 >= (uint_32)[11]) ){ goto $label$42 }
	*($24 + [304]) = ($20 << [1])
	$10 = (($24 + [304]) | [1])
	if ( $20 ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	$19 = (($20 + [16]) & [-16])
	$10 = CALL $428($19)
	*($24 + [304]) = ($19 | [1])
	*($24 + [312]) = $10
	*($24 + [308]) = $20
	
.LABEL $label$41
	CALL memcpy($10, [7488], $20)
	
.LABEL $label$40
	*(($10 + $20)) = [0]
	$20 = CALL $437(($24 + [304]), ( [7536] ? [7552] : $13 ))
	$10 = ($20 + [8])
	*((($24 + [32]) + [8])) = *($10)
	*($24 + [32]) = *($20)
	*($20) = [0]
	*(($20 + [4])) = [0]
	*($10) = [0]
	*(($24 + [8])) = *((($24 + [48]) + [8]))
	*($24) = *($24 + [48])
	CALL _ZN3pvp8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($21, $12, $24, ($24 + [32]))
	if ( ((*($24 + [32]) & [1]) == 0) ){ goto $label$43 }
	CALL $430(*($24 + [40]))
	
.LABEL $label$43
	if ( ((*($24 + [304]) & [1]) == 0) ){ goto $label$35 }
	CALL $430(*($24 + [312]))
	
.LABEL $label$35
	CALL $362($0)
	$20 = *($5)
	if ( ($20 == 0) ){ goto $label$44 }
	*(($24 + [200])) = $20
	CALL $430($20)
	
.LABEL $label$44
	$20 = *(($24 + [184]))
	if ( ($20 == 0) ){ goto $label$45 }
	*(($24 + [188])) = $20
	CALL $430($20)
	
.LABEL $label$45
	$20 = *(($24 + [156]))
	if ( ($20 == 0) ){ goto $label$46 }
	*(($24 + [160])) = $20
	CALL $430($20)
	
.LABEL $label$46
	$20 = *(($24 + [144]))
	if ( ($20 == 0) ){ goto $label$47 }
	*(($24 + [148])) = $20
	CALL $430($20)
	
.LABEL $label$47
	$20 = *(($24 + [104]))
	if ( ($20 == 0) ){ goto $label$48 }
	*(($24 + [108])) = $20
	CALL $430($20)
	
.LABEL $label$48
	$20 = *($6 + [20])
	if ( ($20 == 0) ){ goto $label$49 }
	*(($6 + [24])) = $20
	CALL $430($20)
	
.LABEL $label$49
	$20 = *($6 + [8])
	if ( ($20 == 0) ){ goto $label$50 }
	*(($6 + [12])) = $20
	CALL $430($20)
	
.LABEL $label$50
	$20 = *(($24 + [500]))
	if ( ($20 == 0) ){ goto $label$51 }
	*(($24 + [504])) = $20
	CALL $430($20)
	
.LABEL $label$51
	$20 = *(($24 + [488]))
	if ( ($20 == 0) ){ goto $label$52 }
	*(($24 + [492])) = $20
	CALL $430($20)
	
.LABEL $label$52
	$20 = *(($24 + [460]))
	if ( ($20 == 0) ){ goto $label$53 }
	*(($24 + [464])) = $20
	CALL $430($20)
	
.LABEL $label$53
	$20 = *(($24 + [448]))
	if ( ($20 == 0) ){ goto $label$54 }
	*(($24 + [452])) = $20
	CALL $430($20)
	
.LABEL $label$54
	*([0] + [4]) = ($24 + [576])
	return (unreachable)
	
.LABEL $label$34
	CALL $432(($24 + [304]))
}

void .FUNC $372 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($3 + [56]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [816])
	CALL memcpy(($0 + [64]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($0 + [72]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $373(*($1), ($0 + [80]))
}

int_32 .FUNC $373 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [816])
	CALL memcpy($1, *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [1]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [816])
	CALL memcpy(($1 + [2]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [816])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [6]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = CALL $374($0, ($1 + [8]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $370 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [192])
	*([0] + [4]) = $17
	*(($10 = (($17 + [64]) + [24]))) = *(($1 + [24]))
	*(($11 = (($17 + [64]) + [16]))) = *(($1 + [16]))
	*(($12 = (($17 + [64]) + [8]))) = *(($1 + [8]))
	*($17 + [64]) = *($1)
	$7 = *($1 + [72])
	$6 = *($1 + [64])
	$5 = *($1 + [56])
	$4 = *($1 + [48])
	$3 = *($1 + [40])
	$2 = *($1 + [32])
	*($17 + [38]) = *(($1 + [86]))
	*($17 + [36]) = *(($1 + [84]))
	*($17 + [32]) = *($1 + [80])
	$14 = [0]
	*($17 + [40]) = [0]
	*(($17 + [44])) = [0]
	*((($17 + [32]) + [16])) = [0]
	$8 = ($1 + [80])
	$15 = (*(($1 + [92])) - *(($1 + [88])))
	$1 = int_32($15 >> [4])
	if ( ($1 == 0) ){ goto $label$5 }
	if ( ((uint_32)$1 >= (uint_32)[268435456]) ){ goto $label$2 }
	$14 = CALL $428($15)
	*((($17 + [32]) + [8])) = $14
	*(($15 = (($17 + [32]) + [12]))) = $14
	*(($17 + [48])) = ($14 + ($1 << [4]))
	$16 = *(($8 + [8]))
	$1 = (*(($8 + [12])) - $16)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($14, $16, $1)
	$1 = ($14 + $1)
	*($15) = $1
	$15 = $14
	$14 = $1
	$16 = $15
	goto $label$3 
	
.LABEL $label$5
	$15 = [0]
	$16 = [0]
	goto $label$3 
	
.LABEL $label$4
	$15 = $14
	$16 = $14
	
.LABEL $label$3
	$9 = *($8 + [24])
	*($17 + [56]) = $9
	*((($17 + [96]) + [24])) = *($10)
	*((($17 + [96]) + [16])) = *($11)
	*((($17 + [96]) + [8])) = *($12)
	*($17 + [96]) = *($17 + [64])
	$1 = *($0 + [4])
	$8 = *($1 + [4])
	$0 = (*(*($0)) + int_32($8 >> [1]))
	$1 = *($1)
	if ( (($8 & [1]) == 0) ){ goto $label$6 }
	$1 = *((*($0) + $1))
	
.LABEL $label$6
	*(($11 = (($17 + [160]) + [24]))) = *((($17 + [96]) + [24]))
	*(($12 = (($17 + [160]) + [16]))) = *((($17 + [96]) + [16]))
	*(($13 = (($17 + [160]) + [8]))) = *((($17 + [96]) + [8]))
	*($17 + [160]) = *($17 + [96])
	*($17 + [134]) = *($17 + [38])
	*($17 + [132]) = *($17 + [36])
	*($17 + [128]) = *($17 + [32])
	*($17 + [136]) = [0]
	*(($17 + [140])) = [0]
	*((($17 + [128]) + [16])) = [0]
	$8 = ($14 - $16)
	$10 = int_32($8 >> [4])
	if ( ($10 == 0) ){ goto $label$7 }
	if ( ((uint_32)$10 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $428($8)
	*(($17 + [136])) = $8
	*(($16 = ($17 + [140]))) = $8
	*(($17 + [144])) = ($8 + ($10 << [4]))
	$14 = ($14 - $15)
	if ( ((int_32)$14 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($8, $15, $14)
	*($16) = ($8 + $14)
	
.LABEL $label$7
	*(($17 + [16])) = *($12)
	*(($17 + [8])) = *($13)
	*($17 + [152]) = $9
	*(($17 + [24])) = *($11)
	*($17) = *($17 + [160])
	CALL void $0((int_32 $17), (int_32 $2), (int_64 $3), (int_64 $4), (int_64 $5), (int_64 ($6 & [255])), (int_32 $7), (int_64 ($17 + [128])), (int_32 $1))
	$1 = *($17 + [136])
	if ( ($1 == 0) ){ goto $label$8 }
	*(($17 + [140])) = $1
	CALL $430($1)
	
.LABEL $label$8
	$1 = *($17 + [40])
	if ( ($1 == 0) ){ goto $label$9 }
	*(($17 + [44])) = $1
	CALL $430($1)
	
.LABEL $label$9
	*([0] + [4]) = ($17 + [192])
	return (unreachable)
	
.LABEL $label$2
	CALL $445((($17 + [32]) + [8]))
	
.LABEL $label$1
	CALL $445((($17 + [128]) + [8]))
	(unreachable)
}

int_32 .FUNC $371 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_32 .FUNC $376 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [816])
	CALL memcpy($1, *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [1]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [2]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [3]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [4]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [5]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [6]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [7]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC _ZN3pvp13doCancelFightERN5eosio11multi_indexILy6600268108542246912E5fightJNS0_10indexed_byILy4409831333891670016EN5boost11multi_index13const_mem_funIS2_yXadL_ZNKS2_19both_wizs_res_btypeEvEEEEEENS3_ILy6295342335517523968ENS6_IS2_yXadL_ZNKS2_8existingEvEEEEEEEE14const_iteratorE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [64])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [4]) != (int_32)[0]), [6976])
	$2 = *($1 + [4])
	$3 = *($2 + [112])
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$2 }
	$4 = *(($2 + [120]))
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$9 = (int_64)0
	
.LOOP $label$3:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$4 }
	$5 = *($6)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$5 = ($5 + [165])
	goto $label$5 
	
.LABEL $label$6
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$4
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$3 }
	*($11 + [48]) = $4
	*(($11 + [32])) = [0]
	*($11 + [40]) = $3
	*($11 + [24]) = (int_64)0
	$8 = *(($2 + [40]))
	$6 = CALL strlen([7008])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$9 }
	*($11 + [24]) = ($6 << [1])
	$5 = (($11 + [24]) | [1])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$2 = (($6 + [16]) & [-16])
	$5 = CALL $428($2)
	*($11 + [24]) = ($2 | [1])
	*($11 + [32]) = $5
	*($11 + [28]) = $6
	
.LABEL $label$8
	CALL memcpy($5, [7008], $6)
	
.LABEL $label$7
	*(($5 + $6)) = [0]
	*((($11 + [8]) + [8])) = *((($11 + [40]) + [8]))
	*($11 + [8]) = *($11 + [40])
	CALL _ZN3pvp8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($9, $8, ($11 + [8]), ($11 + [24]))
	if ( ((*($11 + [24]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($11 + [32]))
	
.LABEL $label$2
	$5 = ($0 + [96])
	$8 = *($1)
	$6 = (CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)
	$1 = ((int_32)$6) != (int_32)[0]
	CALL eosio_assert($1), [448])
	CALL eosio_assert($1, [496])
	$1 = CALL db_next_i64(*($6 + [148]), ($11 + [56]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	CALL $84((CASTING uint_32)(uint_64 $8), $1)
	
.LABEL $label$10
	CALL $378($5, $6)
	*([0] + [4]) = ($11 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($11 + [24]))
}

int_32 .FUNC $374 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$5 = *($1 + [4])
	$3 = int_32(($5 - $4) >> [4])
	$7 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$4 }
	CALL $375($1, ($7 - $3))
	$5 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$5 }
	$5 = ($4 + ($7 << [4]))
	*(($1 + [4])) = $5
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LABEL $label$3
	
.LOOP $label$6:
	CALL $376(CALL $376($0, $4), ($4 + [8]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $375 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$4 }
	$6 = [268435455]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$6 = int_32($2 >> [3])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $428(($6 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = (*($0) + [16])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $445($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [4]))
	$5 = ($2 + ($3 << [4]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $430($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $174 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	$3 = *($2 + [184])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($2 + [188])) = $3
	CALL $430($3)
	
.LABEL $label$6
	$3 = *($2 + [144])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($2 + [148])) = $3
	CALL $430($3)
	
.LABEL $label$7
	$3 = *($2 + [96])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($2 + [100])) = $3
	CALL $430($3)
	
.LABEL $label$8
	if ( ((*($2 + [20]) & [1]) == 0) ){ goto $label$9 }
	CALL $430(*(($2 + [28])))
	
.LABEL $label$9
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $430(*(($2 + [16])))
	
.LABEL $label$10
	CALL $430($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$2 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $430($2)
	
.LABEL $label$1
	return $0
}

void .FUNC $175 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL _ZNSt3__19to_stringEy(($6 + [16]), *($1))
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$1 = CALL strlen($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($6) = ($1 << [1])
	$4 = ($6 | [1])
	$5 = $4
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($1 + [16]) & [-16])
	$5 = CALL $428($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $1
	$4 = ($6 | [1])
	
.LABEL $label$3
	CALL memcpy($5, $2, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	$1 = *($6)
	$5 = ($1 & [1])
	$1 = CALL $436(($6 + [16]), ( *($6 + [8]) ? $4 : $5 ), ( *($6 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$3 = *($1)
	*($1) = (int_64)0
	*($0) = $3
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($6 + [8])))
	
.LABEL $label$5
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($6 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432($6)
}

int_32 .FUNC $176 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [80]) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($2 = ($0 + [88]))) = (int_64)1398362884
	CALL eosio_assert([1], [1056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [1120])
	*(($0 + [104])) = [0]
	*($0 + [96 align=4]) = (int_64)0
	*($0 + [112]) = (int_64)0
	*(($2 = ($0 + [120]))) = (int_64)1398362884
	CALL eosio_assert([1], [1056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [1120])
	*(($0 + [152])) = [0]
	*($0 + [144 align=4]) = (int_64)0
	*($0 + [184]) = [0]
	*(($0 + [188])) = [0]
	*(($0 + [192])) = [0]
	return $0
}

int_32 .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $114($0, ($1 + [184]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $74(CALL $74($0, ($1 + [8])), ($1 + [20]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [816])
	CALL memcpy(($1 + [64]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $180($0, ($1 + [96]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [128]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [136]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $114($0, ($1 + [144]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [816])
	CALL memcpy(($1 + [156]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [816])
	CALL memcpy(($1 + [160]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [816])
	CALL memcpy(($1 + [164]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [168]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [176]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $170 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	$1 = CALL strlen($0)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($4) = ($1 << [1])
	$2 = ($4 | [1])
	$3 = $2
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$2 = (($1 + [16]) & [-16])
	$3 = CALL $428($2)
	*($4) = ($2 | [1])
	*($4 + [8]) = $3
	*($4 + [4]) = $1
	$2 = ($4 | [1])
	
.LABEL $label$3
	CALL memcpy($3, $0, $1)
	
.LABEL $label$2
	*(($3 + $1)) = [0]
	$1 = (*($4) & [1])
	$0 = *($4 + [8])
	$3 = ( $0 ? $2 : $1 )
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $430($0)
	
.LABEL $label$5
	*([0] + [4]) = ($4 + [16])
	return $3
	
.LABEL $label$1
	CALL $432($4)
	return (unreachable)
}

int_32 .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $428([208])
	$4 = CALL $176($6)
	*($6 + [196]) = $0
	CALL $177(($8 + [32]), $4)
	*($6 + [200]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [200])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $178(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [184])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [188])) = $7
	CALL $430($7)
	
.LABEL $label$10
	$7 = *($4 + [144])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [148])) = $7
	CALL $430($7)
	
.LABEL $label$11
	$7 = *($4 + [96])
	if ( ($7 == 0) ){ goto $label$12 }
	*(($4 + [100])) = $7
	CALL $430($7)
	
.LABEL $label$12
	if ( ((*($4 + [20]) & [1]) == 0) ){ goto $label$13 }
	CALL $430(*(($4 + [28])))
	
.LABEL $label$13
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$14 }
	CALL $430(*(($4 + [16])))
	
.LABEL $label$14
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	CALL $446(($0 + [8]), ($1 + [8]))
	CALL $446(($0 + [20]), ($1 + [20]))
	CALL memcpy(($0 + [32]), ($1 + [32]), [64])
	*($0 + [96 align=4]) = (int_64)0
	*(($0 + [104])) = [0]
	$3 = (*(($1 + [100])) - *($1 + [96]))
	$2 = int_32($3 >> [2])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$3 = CALL $428($3)
	*(($0 + [96])) = $3
	*(($0 + [104])) = ($3 + ($2 << [2]))
	*(($2 = ($0 + [100]))) = $3
	$4 = *(($1 + [96]))
	$5 = (*(($1 + [100])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$4
	*($0 + [112]) = *($1 + [112])
	*(($0 + [136])) = *(($1 + [136]))
	*(($0 + [128])) = *(($1 + [128]))
	*(($0 + [120])) = *(($1 + [120]))
	*($0 + [144]) = [0]
	*(($0 + [148])) = [0]
	*(($0 + [152])) = [0]
	$3 = (*(($1 + [148])) - *($1 + [144]))
	$2 = int_32($3 >> [3])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$2 }
	$3 = CALL $428($3)
	*(($0 + [144])) = $3
	*(($0 + [152])) = ($3 + ($2 << [3]))
	*(($2 = ($0 + [148]))) = $3
	$4 = *(($1 + [144]))
	$5 = (*(($1 + [148])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$5
	*($0 + [156 align=4]) = *($1 + [156 align=4])
	*(($0 + [180])) = *(($1 + [180]))
	*(($0 + [172])) = *(($1 + [172]))
	*(($0 + [164])) = *(($1 + [164]))
	*($0 + [184]) = [0]
	*(($0 + [188])) = [0]
	*(($0 + [192])) = [0]
	$3 = (*(($1 + [188])) - *($1 + [184]))
	$2 = int_32($3 >> [3])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	$3 = CALL $428($3)
	*(($0 + [184])) = $3
	*(($0 + [192])) = ($3 + ($2 << [3]))
	*(($2 = ($0 + [188]))) = $3
	$5 = *(($1 + [184]))
	$1 = (*(($1 + [188])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($3, $5, $1)
	*($2) = (*($2) + $1)
	
.LABEL $label$6
	return $0
	
.LABEL $label$3
	CALL $445(($0 + [96]))
	
.LABEL $label$2
	CALL $445(($0 + [144]))
	
.LABEL $label$1
	CALL $445(($0 + [184]))
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $173 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*(($8 + [24])) = [0]
	*($8 + [16]) = (int_64)0
	$4 = CALL strlen($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($8 + [16]) = ($4 << [1])
	$7 = (($8 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($4 + [16]) & [-16])
	$7 = CALL $428($5)
	*($8 + [16]) = ($5 | [1])
	*($8 + [24]) = $7
	*($8 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($7, $1, $4)
	
.LABEL $label$2
	*(($7 + $4)) = [0]
	CALL $175($8, $2, $3)
	$4 = *($8)
	$7 = ($4 & [1])
	$4 = CALL $436(($8 + [16]), ( *($8 + [8]) ? ($8 | [1]) : $7 ), ( *($8 + [4]) ? uint_32($4 >> [1]) : $7 ))
	$6 = *($4)
	*($4) = (int_64)0
	*($0) = $6
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($8) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($8 + [8])))
	
.LABEL $label$5
	if ( ((*($8 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($8 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($8 + [16]))
}

void .FUNC $178 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $9) / (int_32)[24])
	$8 = ($4 + [1])
	if ( ((uint_32)$8 >= (uint_32)[178956971]) ){ goto $label$2 }
	$5 = ($0 + [8])
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[24])
	if ( ((uint_32)$9 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($10 + [24])) = $5
	$5 = [0]
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$9 = ($9 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	$5 = $9
	goto $label$4 
	
.LABEL $label$5
	*(($10 + [24])) = $5
	*($10 + [20]) = [0]
	$7 = ($10 + [20])
	$5 = [178956970]
	
.LABEL $label$4
	$8 = CALL $428(((int_32)$5 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	*($10 + [8]) = $8
	$9 = ($8 + ((int_32)$4 * (int_32)[24]))
	*($10 + [12]) = $9
	$5 = ($8 + ((int_32)$5 * (int_32)[24]))
	*($7) = $5
	$8 = *($1)
	*($1) = [0]
	$1 = *($3)
	$6 = *($2)
	*($9) = $8
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$1 = ($9 + [24])
	*($10 + [16]) = $1
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($8 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($8 + [-8]))
	*(($9 + [-12])) = *(($8 + [-12]))
	*(($9 + [-16])) = *(($8 + [-16]))
	$9 = (*($10 + [12]) + [-24])
	*($10 + [12]) = $9
	$8 = $5
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$7 }
	$8 = *(($0 + [4]))
	$5 = *($7)
	$2 = *($0)
	$1 = *(($10 + [16]))
	
.LABEL $label$6
	*($0) = $9
	*(($0 + [4])) = $1
	*((($10 + [8]) + [8])) = $8
	$9 = ($0 + [8])
	$8 = *($9)
	*($9) = $5
	*($10 + [12]) = $2
	*($7) = $8
	*($10 + [8]) = $2
	CALL $179(($10 + [8]))
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

int_32 .FUNC $179 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$1 }
	$4 = ($0 + [8])
	
.LOOP $label$2:
	$3 = ($2 + [-24])
	*($4) = $3
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [184])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($2 + [188])) = $3
	CALL $430($3)
	
.LABEL $label$4
	$3 = *($2 + [144])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($2 + [148])) = $3
	CALL $430($3)
	
.LABEL $label$5
	$3 = *($2 + [96])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($2 + [100])) = $3
	CALL $430($3)
	
.LABEL $label$6
	if ( ((*($2 + [20]) & [1]) == 0) ){ goto $label$7 }
	CALL $430(*(($2 + [28])))
	
.LABEL $label$7
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$8 }
	CALL $430(*(($2 + [16])))
	
.LABEL $label$8
	CALL $430($2)
	
.LABEL $label$3
	$2 = *($4)
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$9 }
	CALL $430($2)
	
.LABEL $label$9
	return $0
}

void .FUNC _ZN3pvp18checkCooldownInnerEyb (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	*($5 + [40]) = $1
	*($5 + [32]) = ($0 + [136])
	CALL $363(($5 + [16]), ($5 + [32]), ($5 + [40]))
	$0 = *($5 + [20])
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ((int_64)*($5 + [40]) != (int_64)*($0 + [8])) ){ goto $label$4 }
	$4 = *($5 + [16])
	if ( $0 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$4 = ($5 + [32])
	
.LABEL $label$3
	CALL current_time()
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = [0]
	CALL eosio_assert([0], [6496])
	
.LABEL $label$2
	$1 = *($0 + [16])
	$3 = CALL current_time()
	*($5 + [8]) = ((uint_64)(int_64))(*($0 + [16]) - CALL current_time()) / (uint_64)(int_64)1000000)
	CALL $364(($5 + [16]), [6544], ($5 + [8]), [6608], ($5 + [40]), [6656])
	CALL eosio_assert(((uint_64)$1 <= (uint_64)$3), ( *($5 + [24]) ? (($5 + [16]) | [1]) : (*($5 + [16]) & [1]) ))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($5 + [24])))
	
.LABEL $label$5
	$1 = ((int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4))
	*($5 + [16]) = $1
	$2 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($2, [448])
	CALL $365(($5 + [16]))
	CALL $359(*($5 + [32]), $0)
	*($5 + [16]) = $1
	CALL eosio_assert($2, [448])
	CALL $365(($5 + [16]))
	CALL $359(*($5 + [32]), $0)
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [48])
}

void .FUNC _ZN3pvp21runCalcDamageGenotypeER13fight_round_s (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	*($1 + [7]) = [0]
	$3 = *($1 + [3])
	$2 = *($1 + [1])
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$1 }
	*(($1 + [7])) = ( [2] ? [1] : ((uint_32)$2 > (uint_32)($3 + [8])) )
	
.LABEL $label$1
}

void .FUNC $237 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$0), [320])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-7297072577464238080, (int_64)-7297072577464238080)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $238($0, $3)
	CALL eosio_assert(((int_32)*($3 + [48]) == (int_32)$0), [320])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [832])
	CALL $239($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $240($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $98(CALL $98($0, ($1 + [16])), ($1 + [28]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $98(CALL $98($0, ($1 + [56])), ($1 + [68]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [88]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [104]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [816])
	CALL memcpy(($1 + [108]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [128]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [136]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $235 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *(($1 + [28]))
	if ( ((int_32)$4 == (int_32)*($1 + [24])) ){ goto $label$6 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$1), [320])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-7297072577464238080, (int_64)-7297072577464238080)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $238($1, $4)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)$1), [320])
	
.LABEL $label$5
	*($0) = *($4)
	*(($0 + [24])) = *(($4 + [24]))
	*(($0 + [16])) = *(($4 + [16]))
	*(($0 + [8])) = *(($4 + [8]))
	*($0 + [32]) = [0]
	*(($0 + [36])) = [0]
	*(($0 + [40])) = [0]
	$1 = (*(($4 + [36])) - *($4 + [32]))
	$3 = int_32($1 >> [3])
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$2 }
	$1 = CALL $428($1)
	*(($0 + [32])) = $1
	*(($0 + [40])) = ($1 + ($3 << [3]))
	*(($0 = ($0 + [36]))) = $1
	$3 = *(($4 + [32]))
	$4 = (*(($4 + [36])) - $3)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($1, $3, $4)
	*($0) = (*($0) + $4)
	goto $label$3 
	
.LABEL $label$4
	*($5 + [8]) = $3
	CALL $245($5, $1, $2, ($5 + [8]))
	$4 = *($5 + [4])
	*($0) = *($4)
	*(($0 + [28])) = *(($4 + [28]))
	*(($0 + [24])) = *(($4 + [24]))
	*(($0 + [20])) = *(($4 + [20]))
	*(($0 + [16])) = *(($4 + [16]))
	*(($0 + [12])) = *(($4 + [12]))
	*(($0 + [8])) = *(($4 + [8]))
	*(($0 + [4])) = *(($4 + [4]))
	*(($0 + [36])) = [0]
	*($0 + [32]) = [0]
	*(($0 + [40])) = [0]
	$1 = (*(($4 + [36])) - *($4 + [32]))
	$3 = int_32($1 >> [3])
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$1 = CALL $428($1)
	*(($0 + [32])) = $1
	*(($0 + [40])) = ($1 + ($3 << [3]))
	*(($0 = ($0 + [36]))) = $1
	$3 = *(($4 + [32]))
	$4 = (*(($4 + [36])) - $3)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($1, $3, $4)
	*($0) = (*($0) + $4)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [16])
	return (unreachable)
	
.LABEL $label$2
	CALL $445(($0 + [32]))
	
.LABEL $label$1
	CALL $445(($0 + [32]))
	(unreachable)
}

void .FUNC $360 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $97 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$1 }
	$4 = ($0 + [8])
	
.LOOP $label$2:
	$3 = ($2 + [-24])
	*($4) = $3
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *(($2 + [68]))
	if ( ($3 == 0) ){ goto $label$4 }
	*(($2 + [72])) = $3
	CALL $430($3)
	
.LABEL $label$4
	$3 = *(($2 + [56]))
	if ( ($3 == 0) ){ goto $label$5 }
	*(($2 + [60])) = $3
	CALL $430($3)
	
.LABEL $label$5
	$3 = *(($2 + [28]))
	if ( ($3 == 0) ){ goto $label$6 }
	*(($2 + [32])) = $3
	CALL $430($3)
	
.LABEL $label$6
	$3 = *(($2 + [16]))
	if ( ($3 == 0) ){ goto $label$7 }
	*(($2 + [20])) = $3
	CALL $430($3)
	
.LABEL $label$7
	CALL $430($2)
	
.LABEL $label$3
	$2 = *($4)
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$8 }
	CALL $430($2)
	
.LABEL $label$8
	return $0
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [592])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [592])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [592])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $92(CALL $93($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($7 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$5 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($1)
	*($8 + [16]) = *($1 + [16])
	*(($8 + [8])) = *(($1 + [8]))
	$7 = ($1 + [20])
	*(($8 + [20])) = *($7)
	*($7) = [0]
	$7 = ($1 + [24])
	$3 = *($7)
	*($7) = [0]
	*(($8 + [24])) = $3
	*($1 + [16]) = [0]
	*($8 + [28]) = *($1 + [28])
	$7 = ($1 + [32])
	*(($8 + [32])) = *($7)
	$3 = ($1 + [36])
	$4 = *($3)
	*($3) = [0]
	*(($8 + [36])) = $4
	*($7) = [0]
	*($1 + [28]) = [0]
	$4 = ($6 + ((int_32)$5 * (int_32)[40]))
	$2 = ($8 + [40])
	$1 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$6 }
	$3 = ([0] - $1)
	$1 = ($5 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($5 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($1 + [-4])
	*($5) = *($7)
	*(($8 + [-20])) = *($1)
	$5 = ($1 + [4])
	*($6) = *($5)
	*($5) = [0]
	*(($5 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($1 + [8])
	*($5) = *($7)
	*(($8 + [-8])) = *(($1 + [12]))
	$5 = ($1 + [16])
	*($6) = *($5)
	*($5) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$1 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $1
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $2
	*(($0 + [8])) = $4
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$8 }
	$5 = ([0] - $6)
	$8 = ($1 + [-24])
	
.LOOP $label$9:
	$1 = *(($8 + [12]))
	if ( ($1 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $1
	CALL $430($1)
	
.LABEL $label$10
	$1 = *($8)
	if ( ($1 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $1
	CALL $430($1)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $430($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $474 ()
{
	(unreachable)
}

void .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$6 = *($0 + [4])
	$9 = CALL _ZN11CTournament6nextIdEi(*(*($6)), [6])
	*($1 + [24]) = (int_64)0
	*($1) = $9
	$8 = [8]
	$6 = *($6 + [4])
	$4 = ($1 + [8])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$1 }
	CALL $234($4, *($6), *($6 + [4]))
	
.LABEL $label$1
	$3 = ($1 + [24])
	$5 = *($4)
	$6 = *(($1 + [12]))
	$7 = ($6 - $5)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$2:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$8 = (($7 & [-8]) + $8)
	
.LABEL $label$3
	$6 = ($8 + [8])
	if ( ($6 <= [513]) ){ goto $label$5 }
	$10 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$10 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$4
	*($11) = $10
	*($11 + [8]) = ($10 + $6)
	CALL eosio_assert(((int_32)($8 + [8]) > (int_32)[7]), [592])
	CALL memcpy($10, $1, [8])
	*($11 + [4]) = ($10 + [8])
	$8 = CALL $210($11, $4)
	CALL eosio_assert(((int_32)(*($8 + [8]) - *($8 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($8 + [4]), $3, [8])
	*($8 + [4]) = (*($8 + [4]) + [8])
	$9 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-3659885401779982336, *(*($0 + [8])), $9, $10, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($10)
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($11 + [16])
}

void .FUNC _ZN15CTournStructure9printsizeEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4) = (int_64)0
	$2 = [0]
	*($4 + [8]) = [0]
	$0 = *(($0 + [8]))
	$1 = (*(($0 + [20])) - *($0 + [16]))
	$3 = int_32($1 >> [5])
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$1 }
	$2 = CALL $428($1)
	*(($4 + [8])) = ($2 + ($3 << [5]))
	*($4) = $2
	*($4 + [4]) = $2
	$3 = *(($0 + [16]))
	$0 = (*(($0 + [20])) - $3)
	if ( ((int_32)$0 <= (int_32)[0]) ){ goto $label$5 }
	CALL memcpy($2, $3, $0)
	$3 = ($2 + $0)
	*($4 + [4]) = $3
	CALL prints([8112])
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = ($2 + [16])
	$1 = int_32(($3 - $2) >> [5])
	$3 = [0]
	
.LOOP $label$6:
	CALL printui(*($0))
	CALL prints([8144])
	$0 = ($0 + [32])
	$3 = ($3 + [1])
	if ( ($3 <= $1) ){ goto $label$6 }
	CALL prints([8128])
	goto $label$3 
	
.LABEL $label$5
	CALL prints([8112])
	
.LABEL $label$4
	CALL prints([8128])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($4 + [4]) = $2
	CALL $430($2)
	
.LABEL $label$2
	*([0] + [4]) = ($4 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $445($4)
}

void .FUNC $231 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	*(($9 = $10) + [24]) = *(($1 + [8]))
	$4 = *($1)
	$3 = *($3 + [4])
	*(($7 = (*($1 + [16]) + (*(*($3)) << [5])))) = *($3)
	*(($7 + [24])) = *(($3 + [24]))
	*(($7 + [16])) = *(($3 + [16]))
	*(($7 + [8])) = *(($3 + [8]))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$5 = *($1 + [16])
	$3 = *(($1 + [20]))
	$6 = ($3 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	$7 = [41]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	$7 = (((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[25]) + $7)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($7 + [-25])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($7)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($10 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($9 + [12]) = $3
	*($9 + [8]) = $3
	*($9 + [16]) = ($3 + $7)
	CALL $208(($9 + [8]), $1)
	CALL db_update_i64(*($1 + [32]), $2, $3, $7)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($9 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($9 + [24]), ($9 + [40]), [8]) == 0) ){ goto $label$8 }
	$7 = *($1 + [36])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3659885105376759808, ($9 + [32]), $4)
	*(($1 + [36])) = $7
	
.LABEL $label$9
	CALL db_idx64_update($7, $2, ($9 + [40]))
	
.LABEL $label$8
	*([0] + [4]) = ($9 + [48])
}

int_32 .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [592])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [592])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [592])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $441 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $442($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $65 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $430($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $430($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $430($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $430($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $430($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $430($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $430($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $430($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $76($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [592])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [592])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $92(CALL $93($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $58 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	$3 = *(($2 + [68]))
	if ( ($3 == 0) ){ goto $label$6 }
	*(($2 + [72])) = $3
	CALL $430($3)
	
.LABEL $label$6
	$3 = *(($2 + [56]))
	if ( ($3 == 0) ){ goto $label$7 }
	*(($2 + [60])) = $3
	CALL $430($3)
	
.LABEL $label$7
	$3 = *(($2 + [28]))
	if ( ($3 == 0) ){ goto $label$8 }
	*(($2 + [32])) = $3
	CALL $430($3)
	
.LABEL $label$8
	$3 = *(($2 + [16]))
	if ( ($3 == 0) ){ goto $label$9 }
	*(($2 + [20])) = $3
	CALL $430($3)
	
.LABEL $label$9
	CALL $430($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$2 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $430($2)
	
.LABEL $label$1
	return $0
}

void .FUNC _ZN3pvp21getCurrentTransactionEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$2 = CALL $429($3)
	$3 = CALL read_transaction($2, $3)
	$3 = CALL transaction_size()
	if ( ((int_32)$3 == (int_32)$3) ){ goto $label$1 }
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $431($2)
	
.LABEL $label$2
	CALL eosio_assert([0], [1168])
	
.LABEL $label$1
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = ($2 + $3)
	$4 = CALL current_time()
	*($0 + [12]) = [0]
	*($0 + [16]) = [0]
	*($0 + [20]) = [0]
	*($0 + [24]) = [0]
	*(($0 + [28])) = [0]
	*(($0 + [32])) = [0]
	*($0) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($0 + [36]) = [0]
	*(($0 + [40])) = [0]
	*(($0 + [44])) = [0]
	*($0 + [48]) = [0]
	*(($0 + [52])) = [0]
	*(($0 + [56])) = [0]
	CALL $77($5, $0)
	CALL $79(CALL $78(CALL $78($5, ($0 + [24])), ($0 + [36])), ($0 + [48]))
	if ( ($2 == 0) ){ goto $label$3 }
	CALL $431($2)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [16])
}

int_64 .FUNC _ZN3pvp6nextIdEb (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [48])
	*([0] + [4]) = $4
	if ( ($1 == 0) ){ goto $label$2 }
	$3 = *($0)
	*(($4 + [16])) = [0]
	*($4 + [8]) = (int_64)0
	*($4) = (int_64)0
	CALL $260(($4 + [8]), [3120], [3152])
	$2 = ($0 + [352])
	CALL $274(($4 + [24]), $2, $3, $4)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$3 }
	*(($4 + [12])) = $1
	CALL $430($1)
	
.LABEL $label$3
	$3 = ((int_64)*($4 + [24]) + (int_64)1)
	*($4 + [24]) = $3
	CALL $275($2, ($4 + [24]), *($0))
	$0 = *($4 + [32])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($4 + [36])) = $0
	CALL $430($0)
	goto $label$1 
	
.LABEL $label$2
	$3 = *($0)
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	$1 = ($0 + [312])
	CALL $276(($4 + [24]), $1, $3, $4)
	$3 = *($4 + [24])
	*($4 + [24]) = ((int_64)$3 + (int_64)1)
	CALL $277($1, ($4 + [24]), *($0))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [48])
	return $3
}

void .FUNC _ZN3pvp17calc_cur_trans_idEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	if ( *($0 + [472]) ){ goto $label$1 }
	*(($1 = CALL $428([32]))) = (int_64)0
	*(($2 = ($0 + [472]))) = $1
	*(($1 + [24])) = (int_64)0
	*(($1 + [16])) = (int_64)0
	*(($1 + [8])) = (int_64)0
	$0 = CALL $429($1)
	$1 = CALL read_transaction($0, $1)
	$1 = CALL transaction_size()
	CALL eosio_assert(((int_32)$1 == (int_32)$1), [3152])
	CALL sha256($0, $1, *($2))
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $431($0)
	
.LABEL $label$1
}

void .FUNC $277 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$0), [320])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157503053760561152, (int_64)-4157503053760561152)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $278($0, $3)
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$0), [320])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [832])
	CALL $279($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $280($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $276 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *(($1 + [28]))
	if ( ((int_32)$4 == (int_32)*($1 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$1), [320])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4157503053760561152, (int_64)-4157503053760561152)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $278($1, $4)
	CALL eosio_assert(((int_32)*($4 + [16]) == (int_32)$1), [320])
	
.LABEL $label$3
	*($0) = *($4)
	*(($0 + [8])) = *(($4 + [8]))
	goto $label$1 
	
.LABEL $label$2
	*($5 + [8]) = $3
	CALL $283($5, $1, $2, ($5 + [8]))
	$1 = *($5 + [4])
	*($0) = *($1)
	*(($0 + [12])) = *(($1 + [12]))
	*(($0 + [8])) = *(($1 + [8]))
	*(($0 + [4])) = *(($1 + [4]))
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $275 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [320])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-7047450998071099392, (int_64)-7047450998071099392)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $285($0, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$0), [320])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [832])
	CALL $286($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $287($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $274 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$4 = *(($1 + [28]))
	if ( ((int_32)$4 == (int_32)*($1 + [24])) ){ goto $label$6 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$1), [320])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-7047450998071099392, (int_64)-7047450998071099392)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $285($1, $4)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$1), [320])
	
.LABEL $label$5
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($4)
	$1 = (*(($4 + [12])) - *($4 + [8]))
	$3 = int_32($1 >> [3])
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$2 }
	$1 = CALL $428($1)
	*(($0 + [8])) = $1
	*(($0 + [16])) = ($1 + ($3 << [3]))
	*(($0 = ($0 + [12]))) = $1
	$3 = *(($4 + [8]))
	$4 = (*(($4 + [12])) - $3)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($1, $3, $4)
	*($0) = (*($0) + $4)
	goto $label$3 
	
.LABEL $label$4
	*($5 + [8]) = $3
	CALL $290($5, $1, $2, ($5 + [8]))
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	$1 = *($5 + [4])
	*($0) = *($1)
	$4 = (*(($1 + [12])) - *($1 + [8]))
	$3 = int_32($4 >> [3])
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$4 = CALL $428($4)
	*(($0 + [8])) = $4
	*(($0 + [16])) = ($4 + ($3 << [3]))
	*(($0 = ($0 + [12]))) = $4
	$3 = *(($1 + [8]))
	$1 = (*(($1 + [12])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($4, $3, $1)
	*($0) = (*($0) + $1)
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [16])
	return (unreachable)
	
.LABEL $label$2
	CALL $445(($0 + [8]))
	
.LABEL $label$1
	CALL $445(($0 + [8]))
	(unreachable)
}

void .FUNC _ZN3pvp12graztrnwinrsEyNSt3__16vectorIyNS0_9allocatorIyEEEENS1_ItNS2_ItEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [304]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($8)
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [16])) = (int_64)0
	*(($2 + [24])) = (int_64)0
	*($2) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [816])
	CALL memcpy($2, $1, [8])
	*($2 + [52]) = ($1 + [8])
	CALL $114(($2 + [48]), ($2 + [8]))
	$3 = ($2 + [20])
	CALL $116(($2 + [48]), $3)
	if ( ($0 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $117(($2 + [48]), $2)
	$1 = *($3)
	if ( ($1 == 0) ){ goto $label$6 }
	*(($2 + [24])) = $1
	CALL $430($1)
	
.LABEL $label$6
	$1 = *(($2 + [8]))
	if ( ($1 == 0) ){ goto $label$7 }
	*(($2 + [12])) = $1
	CALL $430($1)
	
.LABEL $label$7
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC $279 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$3 = *($3)
	*($1) = *($3)
	*(($4 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [592])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($5 | [8]), $4, [4])
	CALL db_update_i64(*($1 + [20]), $2, $5, [12])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4157503053760561152) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-4157503053760561151
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*(($6 + [24])) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [56]) = ($1 + $3)
	*($6 + [48]) = $1
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [816])
	CALL memcpy(($6 + [8]), $1, [8])
	*($6 + [52]) = ($1 + [8])
	$7 = (($6 + [8]) + [8])
	CALL $114(($6 + [48]), $7)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = [0]
	*($6 + [40]) = [0]
	$4 = *($6 + [8])
	*($6 + [32]) = (int_64)0
	$7 = (*(($6 + [20])) - *($7))
	$3 = int_32($7 >> [3])
	if ( ($3 == 0) ){ goto $label$7 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$6 }
	$1 = CALL $428($7)
	*((($6 + [32]) + [8])) = ($1 + ($3 << [3]))
	*($6 + [32]) = $1
	*($6 + [36]) = $1
	$7 = *((($6 + [8]) + [8]))
	$3 = (*(($6 + [20])) - $7)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($1, $7, $3)
	$1 = (*($6 + [36]) + $3)
	*($6 + [36]) = $1
	
.LABEL $label$7
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$8 }
	$5 = *((*($3) + $5))
	
.LABEL $label$8
	*($6 + [48]) = (int_64)0
	*($6 + [56]) = [0]
	$1 = ($1 - *($6 + [32]))
	$2 = int_32($1 >> [3])
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$5 }
	$1 = CALL $428($1)
	*(($6 + [56])) = ($1 + ($2 << [3]))
	*($6 + [48]) = $1
	*($6 + [52]) = $1
	$7 = *($6 + [32])
	$2 = (*($6 + [36]) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $7, $2)
	*($6 + [52]) = ($1 + $2)
	
.LABEL $label$9
	CALL void $3((int_32 $4), (int_64 ($6 + [48])), (int_32 $5))
	$1 = *($6 + [48])
	if ( ($1 == 0) ){ goto $label$10 }
	*($6 + [52]) = $1
	CALL $430($1)
	
.LABEL $label$10
	$1 = *($6 + [32])
	if ( ($1 == 0) ){ goto $label$11 }
	*($6 + [36]) = $1
	CALL $430($1)
	
.LABEL $label$11
	$1 = *(($6 + [16]))
	if ( ($1 == 0) ){ goto $label$12 }
	*(($6 + [20])) = $1
	CALL $430($1)
	
.LABEL $label$12
	*([0] + [4]) = ($6 + [64])
	return [1]
	
.LABEL $label$6
	CALL $445(($6 + [32]))
	
.LABEL $label$5
	CALL $445(($6 + [48]))
	(unreachable)
	return (unreachable)
}

void .FUNC _ZN3pvp11claimallhpsEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$21 = (*([0] + [4]) - [80])
	*([0] + [4]) = $21
	CALL require_auth($1)
	$16 = *(($0 + [240]))
	$18 = *(($0 + [244]))
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$1 }
	$17 = ($18 + [-24])
	$8 = ([0] - $16)
	
.LOOP $label$2:
	if ( ((int_64)*(*($17)) == (int_64)$2) ){ goto $label$1 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [216])
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$8 }
	$16 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)$4), [320])
	if ( $16 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	$17 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)-3111684726404022272, $2)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$7 }
	$16 = CALL $100($4, $17)
	CALL eosio_assert(((int_32)*($16 + [24]) == (int_32)$4), [320])
	$19 = [0]
	if ( $16 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$16 = [0]
	$17 = CALL db_lowerbound_i64(*(($0 + [216])), *(($0 + [224])), (int_64)-3111684726404022272, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$6 }
	$16 = CALL $100($4, $17)
	
.LABEL $label$6
	$19 = [0]
	if ( ($16 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$20 = [0]
	if ( (int_64)($3 == 0) ){ goto $label$3 }
	$7 = ($0 + [200])
	$5 = ($0 + [176])
	$6 = (($21 + [64]) | [8])
	$10 = ($0 + [204])
	$11 = ($0 + [184])
	$12 = ($0 + [192])
	$13 = ($0 + [208])
	$14 = ($21 + [20])
	$15 = ($21 + [12])
	$20 = [0]
	$17 = [1]
	
.LOOP $label$9:
	$19 = $17
	$17 = CALL $101($21)
	if ( (CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($17, $1, *($16), $17, [0]) == 0) ){ goto $label$16 }
	$2 = *($16)
	$0 = *($7)
	$18 = *($10)
	if ( ((int_32)$18 == (int_32)$0) ){ goto $label$17 }
	$17 = ($18 + [-24])
	$8 = ([0] - $0)
	
.LOOP $label$18:
	if ( ((int_64)*(*($17)) == (int_64)$2) ){ goto $label$17 }
	$18 = $17
	$9 = ($17 + [-24])
	$17 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$18 }
	
.LABEL $label$17
	if ( ((int_32)$18 == (int_32)$0) ){ goto $label$15 }
	$17 = *(($18 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [16]) == (int_32)$5), [320])
	if ( $17 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	CALL eosio_assert([1], [496])
	$17 = [0]
	$9 = CALL db_next_i64(*($16 + [28]), ($21 + [64]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$19 }
	$17 = CALL $100($4, $9)
	
.LABEL $label$19
	$20 = ($20 + [1])
	$9 = *($14)
	if ( $9 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$15
	$17 = CALL db_find_i64(*($5), *($11), (int_64)7865338659113693184, $2)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$13 }
	$17 = CALL $103($5, $17)
	CALL eosio_assert(((int_32)*($17 + [16]) == (int_32)$5), [320])
	
.LABEL $label$14
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($17 + [16]) == (int_32)$5), [880])
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$15()), [928])
	*($17 + [8]) = ((int_64)*($17 + [8]) + (int_64)*($16 + [8]))
	$2 = *($17)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [592])
	CALL memcpy(($21 + [64]), $17, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy($6, ($17 + [8]), [8])
	CALL db_update_i64(*($17 + [20]), $1, ($21 + [64]), [16])
	if ( (uint_64)($2 <= *($12)) ){ goto $label$12 }
	*($12) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$15()), [528])
	*(($17 = CALL $428([32])) + [16]) = $5
	*($17) = $2
	*($17 + [8]) = *($16 + [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($21 + [64]), $17, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy($6, ($17 + [8]), [8])
	$2 = *($17)
	$18 = CALL db_store_i64(*($11), (int_64)7865338659113693184, $1, $2, ($21 + [64]), [16])
	*($17 + [20]) = $18
	if ( (uint_64)($2 <= *($12)) ){ goto $label$20 }
	*($12) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	*($21 + [56]) = $17
	$2 = *($17)
	*($21 + [64]) = $2
	*($21 + [52]) = $18
	$9 = *($10)
	if ( ((uint_32)$9 >= (uint_32)*($13)) ){ goto $label$22 }
	*($9 + [8]) = $2
	*($9 + [16]) = $18
	*($21 + [56]) = [0]
	*($9) = $17
	*($10) = ($9 + [24])
	goto $label$21 
	
.LABEL $label$22
	CALL $104($7, ($21 + [56]), ($21 + [64]), ($21 + [52]))
	
.LABEL $label$21
	$17 = *($21 + [56])
	*($21 + [56]) = [0]
	if ( ($17 == 0) ){ goto $label$12 }
	CALL $430($17)
	
.LABEL $label$12
	$17 = [0]
	$9 = ((int_32)$16 != (int_32)[0])
	CALL eosio_assert($9, [448])
	CALL eosio_assert($9, [496])
	$9 = CALL db_next_i64(*($16 + [28]), ($21 + [64]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$23 }
	$17 = CALL $100($4, $9)
	
.LABEL $label$23
	CALL $105($4, $16)
	$9 = *($14)
	if ( ($9 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	*(($21 + [24])) = $9
	CALL $430($9)
	
.LABEL $label$10
	$9 = *(($21 + [8]))
	if ( ($9 == 0) ){ goto $label$24 }
	*($15) = $9
	CALL $430($9)
	
.LABEL $label$24
	if ( ($17 == 0) ){ goto $label$3 }
	$16 = $17
	$17 = ($19 + [1])
	if ( ((uint_64)(CASTING uint_64)(uint_32 $17) <= (uint_64)$3) ){ goto $label$9 }
	goto $label$3 
	
.LABEL $label$4
	$20 = [0]
	
.LABEL $label$3
	CALL eosio_assert(((uint_32)$19 > (uint_32)$20), [1280])
	*([0] + [4]) = ($21 + [80])
}

void .FUNC _ZN3pvp8utilfuncEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	$18 = (*([0] + [4]) - [128])
	*([0] + [4]) = $18
	$14 = (int_64)0
	$16 = (int_64)59
	$12 = [304]
	$15 = (int_64)0
	
.LOOP $label$1:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$2 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$5 = ($5 + [165])
	goto $label$3 
	
.LABEL $label$4
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$2
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$13 | (int_64)$15)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($15)
	$12 = CALL db_lowerbound_i64(*($0 + [96]), *(($0 + [104])), (int_64)6600268108542246912, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + [96])
	$11 = CALL $84($2, $12)
	$3 = ($18 + [76])
	$6 = ($18 + [72])
	$7 = ($18 + [80])
	$8 = (($18 + [48]) + [20])
	$9 = ($18 + [84])
	$10 = [0]
	
.LOOP $label$6:
	$4 = *($0)
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1232]
	$15 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$12 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$5 = ($5 + [165])
	goto $label$10 
	
.LABEL $label$12
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$8
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$7 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1248]
	$17 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$14 > (uint_64)(int_64)10) ){ goto $label$18 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$5 = ($5 + [165])
	goto $label$16 
	
.LABEL $label$18
	$16 = (int_64)0
	if ( ((int_64)$14 == (int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$14
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$17 = ((int_64)$16 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_64)$14 != (int_64)13) ){ goto $label$13 }
	$14 = *($11)
	*((($18 + [48]) + [8])) = $17
	*(($5 = (($18 + [48]) + [16]))) = (int_64)0
	*($6) = [0]
	*($18 + [112]) = $14
	*($18 + [48]) = $4
	$12 = CALL $428([16])
	*($5) = $12
	*($12) = $4
	*($12 + [8]) = $15
	*($3) = [0]
	*($7) = [0]
	$12 = ($12 + [16])
	*($6) = $12
	*($8) = $12
	*($9) = [0]
	CALL $76($3, [8])
	$12 = *($3)
	CALL eosio_assert(((int_32)(*($7) - $12) > (int_32)[7]), [592])
	CALL memcpy($12, ($18 + [112]), [8])
	CALL $85($18, ($18 + [48]))
	$12 = *($18)
	CALL send_inline($12, (*($18 + [4]) - $12))
	$12 = *($18)
	if ( ($12 == 0) ){ goto $label$19 }
	*($18 + [4]) = $12
	CALL $430($12)
	
.LABEL $label$19
	$12 = *($3)
	if ( ($12 == 0) ){ goto $label$20 }
	*($7) = $12
	CALL $430($12)
	
.LABEL $label$20
	$12 = *($5)
	if ( ($12 == 0) ){ goto $label$21 }
	*($8) = $12
	CALL $430($12)
	
.LABEL $label$21
	CALL eosio_assert([1], [496])
	$12 = CALL db_next_i64(*($11 + [148]), ($18 + [48]))
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $84($2, $12)
	$10 = ($10 + [1])
	if ( ((int_32)$10 != (int_32)[20]) ){ goto $label$6 }
	$14 = CALL current_time()
	*(($18 + [76])) = [0]
	*(($18 + [80])) = [0]
	*($18 + [60]) = [0]
	*($18 + [64]) = [0]
	*($18 + [68]) = [0]
	*($18 + [72]) = [0]
	*($18 + [48]) = ((CASTING uint_32)(uint_64 ((uint_64)$14 / (uint_64)(int_64)1000000)) + [60])
	*($18 + [84]) = [0]
	*(($18 + [88])) = [0]
	*(($18 + [92])) = [0]
	*($18 + [96]) = [0]
	*(($18 + [100])) = [0]
	*(($18 + [104])) = [0]
	$3 = ($18 + [84])
	$4 = *($0)
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1232]
	$15 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$27 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$5 = ($5 + [165])
	goto $label$25 
	
.LABEL $label$27
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$23
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$22 }
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1264]
	$17 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$14 > (uint_64)(int_64)7) ){ goto $label$33 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$5 = ($5 + [165])
	goto $label$31 
	
.LABEL $label$33
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$29
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$16 | (int_64)$17)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$28 }
	*($18 + [112]) = $1
	*($18 + [8]) = $17
	*($18) = $4
	*(($12 = CALL $428([16]))) = $4
	*($12 + [8]) = $15
	*(($5 = ($18 + [32]))) = [0]
	$11 = ($12 + [16])
	*(($18 + [24])) = $11
	*(($18 + [20])) = $11
	*($18 + [16]) = $12
	*($18 + [28]) = [0]
	*(($18 + [36])) = [0]
	CALL $76(($18 + [28]), [8])
	$12 = *($18 + [28])
	CALL eosio_assert(((int_32)(*($5) - $12) > (int_32)[7]), [592])
	CALL memcpy($12, ($18 + [112]), [8])
	CALL $86($3, $18)
	$12 = *($18 + [28])
	if ( ($12 == 0) ){ goto $label$34 }
	*($5) = $12
	CALL $430($12)
	
.LABEL $label$34
	$12 = *($18 + [16])
	if ( ($12 == 0) ){ goto $label$35 }
	*(($18 + [20])) = $12
	CALL $430($12)
	
.LABEL $label$35
	*(($18 + [68])) = [0]
	$17 = *($0)
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [1264]
	$15 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$14 > (uint_64)(int_64)7) ){ goto $label$41 }
	$5 = *($12)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$5 = ($5 + [165])
	goto $label$39 
	
.LABEL $label$41
	$16 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$16 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$16 = ((int_64)((int_64)$16 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$37
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$15 = ((int_64)$16 | (int_64)$15)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$36 }
	*($18 + [8]) = (int_64)0
	$14 = ((int_64)((int_64)$17 + (int_64)$1) + (int_64)$15)
	*($18) = $14
	CALL cancel_deferred($18)
	*($18 + [8]) = (int_64)0
	*($18) = $14
	$14 = *($0)
	CALL $87(($18 + [112]), ($18 + [48]))
	$12 = *($18 + [112])
	CALL send_deferred($18, $14, $12, (*($18 + [116]) - $12), [0])
	$12 = *($18 + [112])
	if ( ($12 == 0) ){ goto $label$42 }
	*($18 + [116]) = $12
	CALL $430($12)
	
.LABEL $label$42
	CALL $65(($18 + [48]))
	
.LABEL $label$5
	*([0] + [4]) = ($18 + [128])
}

void .FUNC _ZN3pvp5applyEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [192])
	*([0] + [4]) = $14
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [272]
	$11 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$7 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$7
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$3
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$2 }
	if ( ((int_64)$11 != (int_64)$2) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [288]
	$11 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$13 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$4 = ($4 + [165])
	goto $label$11 
	
.LABEL $label$13
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$9
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$8 }
	if ( ((int_64)$11 != (int_64)$3) ){ goto $label$1 }
	CALL _ZN3pvp21getCurrentTransactionEv(($14 + [120]), $8)
	CALL sha256(($14 + [120]), (CALL $fimport$48() + [-12]), ($14 + [80]))
	$5 = *($14 + [80])
	CALL $60(($14 + [32]))
	if ( ((int_64)*($14 + [40]) != (int_64)*($0)) ){ goto $label$14 }
	*($14 + [8]) = $1
	*($14 + [24]) = $3
	*($14 + [16]) = $2
	*($14) = CALL current_time()
	CALL $61(($0 + [392]), $14, *($0))
	
.LABEL $label$14
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [304]
	$1 = *($14 + [32])
	$11 = (int_64)0
	
.LOOP $label$15:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$16 }
	$4 = *($8)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$4 = ($4 + [165])
	goto $label$17 
	
.LABEL $label$18
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$16
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$15 }
	if ( ((int_64)$1 == (int_64)$11) ){ goto $label$19 }
	$6 = *(($0 + [456]))
	$13 = *(($0 + [460]))
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$20 }
	$8 = ($13 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$21:
	if ( ((int_64)*(*($8)) == (int_64)$5) ){ goto $label$20 }
	$13 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $7) != (int_32)[-24]) ){ goto $label$21 }
	
.LABEL $label$20
	$4 = ($0 + [432])
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$23 }
	$8 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)$4), [320])
	$13 = ($0 + [440])
	goto $label$22 
	
.LABEL $label$23
	$8 = [0]
	$13 = ($0 + [440])
	$7 = CALL db_find_i64(*(($0 + [432])), *($13), (int_64)-3609768575805423616, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$22 }
	$8 = CALL $62($4, $7)
	CALL eosio_assert(((int_32)*($8 + [8]) == (int_32)$4), [320])
	
.LABEL $label$22
	CALL eosio_assert(($8 == 0), [384])
	$8 = [0]
	$7 = CALL db_lowerbound_i64(*($4), *($13), (int_64)-3609768575805423616, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$24 }
	CALL $62($4, $7)
	$7 = CALL db_lowerbound_i64(*($4), *($13), (int_64)-3609768575805423616, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$25 }
	$8 = CALL $62($4, $7)
	
.LABEL $label$25
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [448])
	CALL eosio_assert($7, [496])
	$7 = CALL db_next_i64(*($8 + [12]), $14)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$26 }
	CALL $62($4, $7)
	
.LABEL $label$26
	CALL $63($4, $8)
	
.LABEL $label$24
	$12 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [432])) == (int_64)CALL $fimport$15()), [528])
	*(($8 = CALL $428([24])) + [8]) = $4
	*($8) = $5
	CALL eosio_assert([1], [592])
	CALL memcpy($14, $8, [8])
	$10 = *($8)
	$13 = CALL db_store_i64(*($13), (int_64)-3609768575805423616, $12, $10, $14, [8])
	*($8 + [12]) = $13
	$4 = ($0 + [448])
	if ( (uint_64)($10 <= *($4)) ){ goto $label$27 }
	*($4) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$27
	*($14 + [184]) = $8
	$10 = *($8)
	*($14) = $10
	*($14 + [180]) = $13
	$7 = ($0 + [460])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [464]))) ){ goto $label$29 }
	*($4 + [8]) = $10
	*($4 + [16]) = $13
	*($14 + [184]) = [0]
	*($4) = $8
	*($7) = ($4 + [24])
	goto $label$28 
	
.LABEL $label$29
	CALL $64(($0 + [456]), ($14 + [184]), $14, ($14 + [180]))
	
.LABEL $label$28
	$8 = *($14 + [184])
	*($14 + [184]) = [0]
	if ( ($8 == 0) ){ goto $label$19 }
	CALL $430($8)
	
.LABEL $label$19
	if ( ((*($14 + [64]) & [1]) == 0) ){ goto $label$30 }
	CALL $430(*(($14 + [72])))
	
.LABEL $label$30
	CALL $65(($14 + [120]))
	
.LABEL $label$1
	*([0] + [4]) = ($14 + [192])
}

int_32 .FUNC $57 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *(($0 + [456]))
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($0 + [460])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $430($2)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	$5 = *(($0 + [456]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $3
	
.LABEL $label$2
	*($1) = $3
	CALL $430($5)
	
.LABEL $label$1
	$3 = *(($0 + [416]))
	if ( ($3 == 0) ){ goto $label$6 }
	$1 = ($0 + [420])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $430($2)
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($0 + [416]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $3
	
.LABEL $label$7
	*($1) = $3
	CALL $430($5)
	
.LABEL $label$6
	$1 = *(($0 + [376]))
	if ( ($1 == 0) ){ goto $label$11 }
	$4 = ($0 + [380])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	$3 = *($2 + [8])
	if ( ($3 == 0) ){ goto $label$16 }
	*(($2 + [12])) = $3
	CALL $430($3)
	
.LABEL $label$16
	CALL $430($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($0 + [376]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $1
	
.LABEL $label$12
	*($4) = $1
	CALL $430($5)
	
.LABEL $label$11
	$3 = *(($0 + [336]))
	if ( ($3 == 0) ){ goto $label$17 }
	$1 = ($0 + [340])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$19 }
	
.LOOP $label$20:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$21 }
	CALL $430($2)
	
.LABEL $label$21
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$20 }
	$5 = *(($0 + [336]))
	goto $label$18 
	
.LABEL $label$19
	$5 = $3
	
.LABEL $label$18
	*($1) = $3
	CALL $430($5)
	
.LABEL $label$17
	$3 = *(($0 + [280]))
	if ( ($3 == 0) ){ goto $label$22 }
	$1 = ($0 + [284])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$24 }
	
.LOOP $label$25:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$26 }
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$27 }
	CALL $430(*(($2 + [40])))
	
.LABEL $label$27
	CALL $430($2)
	
.LABEL $label$26
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$25 }
	$5 = *(($0 + [280]))
	goto $label$23 
	
.LABEL $label$24
	$5 = $3
	
.LABEL $label$23
	*($1) = $3
	CALL $430($5)
	
.LABEL $label$22
	$3 = *(($0 + [240]))
	if ( ($3 == 0) ){ goto $label$28 }
	$1 = ($0 + [244])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$30 }
	
.LOOP $label$31:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$32 }
	CALL $430($2)
	
.LABEL $label$32
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$31 }
	$5 = *(($0 + [240]))
	goto $label$29 
	
.LABEL $label$30
	$5 = $3
	
.LABEL $label$29
	*($1) = $3
	CALL $430($5)
	
.LABEL $label$28
	$3 = *(($0 + [200]))
	if ( ($3 == 0) ){ goto $label$33 }
	$1 = ($0 + [204])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$35 }
	
.LOOP $label$36:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$37 }
	CALL $430($2)
	
.LABEL $label$37
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$36 }
	$5 = *(($0 + [200]))
	goto $label$34 
	
.LABEL $label$35
	$5 = $3
	
.LABEL $label$34
	*($1) = $3
	CALL $430($5)
	
.LABEL $label$33
	$3 = *(($0 + [160]))
	if ( ($3 == 0) ){ goto $label$38 }
	$1 = ($0 + [164])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$40 }
	
.LOOP $label$41:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$42 }
	CALL $430($2)
	
.LABEL $label$42
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$41 }
	$5 = *(($0 + [160]))
	goto $label$39 
	
.LABEL $label$40
	$5 = $3
	
.LABEL $label$39
	*($1) = $3
	CALL $430($5)
	
.LABEL $label$38
	CALL $58(($0 + [120]))
	$5 = *($0 + [80])
	if ( ($5 == 0) ){ goto $label$43 }
	*(($0 + [84])) = $5
	CALL $430($5)
	
.LABEL $label$43
	$5 = *($0 + [68])
	if ( ($5 == 0) ){ goto $label$44 }
	*(($0 + [72])) = $5
	CALL $430($5)
	
.LABEL $label$44
	$5 = *($0 + [56])
	if ( ($5 == 0) ){ goto $label$45 }
	*(($0 + [60])) = $5
	CALL $430($5)
	
.LABEL $label$45
	$3 = *(($0 + [32]))
	if ( ($3 == 0) ){ goto $label$46 }
	$1 = ($0 + [36])
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$48 }
	
.LOOP $label$49:
	$5 = ($5 + [-24])
	$2 = *($5)
	*($5) = [0]
	if ( ($2 == 0) ){ goto $label$50 }
	CALL $430($2)
	
.LABEL $label$50
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$49 }
	$5 = *(($0 + [32]))
	goto $label$47 
	
.LABEL $label$48
	$5 = $3
	
.LABEL $label$47
	*($1) = $3
	CALL $430($5)
	
.LABEL $label$46
	return $0
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $454([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $454($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $454($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC __errno_location ()
{
	return [19276]
}

int_32 .FUNC $451 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [5])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$4 }
	$6 = [134217727]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$6 = int_32($2 >> [4])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $428(($6 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [24])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = (*($0) + [32])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $445($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [5]))
	$5 = ($2 + ($3 << [5]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*(($6 + [24])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $430($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

int_32 .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$5 = *($1 + [4])
	$3 = int_32(($5 - $4) >> [5])
	$7 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$4 }
	CALL $152($1, ($7 - $3))
	$5 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$5 }
	$5 = ($4 + ($7 << [5]))
	*(($1 + [4])) = $5
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LABEL $label$3
	
.LOOP $label$6:
	CALL $153($0, $4)
	$4 = ($4 + [32])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $151 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [16])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [20])) = $6
	CALL $430($6)
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $430($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

void .FUNC $157 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $430($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $154 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-3659885105376759808, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [28]) == (int_32)$4), [320])
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$8 = CALL db_find_i64(*($4), *($4 + [8]), (int_64)-3659885105376759808, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$2 = CALL $144($4, $8)
	CALL eosio_assert(((int_32)*($2 + [28]) == (int_32)$4), [320])
	
.LABEL $label$4
	*($2 + [36]) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $155 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

int_32 .FUNC _ZN3pvp8runFightER5fightR9fight_log (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$4 = ($1 + [48])
	$3 = ($1 + [8])
	$6 = *($1 + [104])
	if ( ((uint_32)$6 >= (uint_32)[2]) ){ goto $label$2 }
	$6 = CALL _ZN3pvp16runFightGenotypeERK12fight_wizardS2_R9fight_logh($0, $3, $4, $2, $6)
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$6 != (int_32)[2]) ){ goto $label$3 }
	$6 = CALL _ZN3pvp17runFightPhenotypeERK12fight_wizardS2_R9fight_logh($0, $3, $4, $2, [0])
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [1968])
	
.LABEL $label$1
	$0 = ($6 + [1])
	*($2) = $0
	$5 = CALL current_time()
	*($1 + [88]) = $0
	*($2 + [24]) = $5
	*($1 + [96]) = $5
	return $6
}

void .FUNC _ZN15CTournStructure6reinitEv (int_32 $0)
{
	*($0 + [24]) = [0]
	CALL _ZN15CTournStructure4initEb($0, [1])
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [816])
	CALL memcpy(($1 + [9]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $159 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC _ZN11CTournamentC2EP3pvpP9tourninfo (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	*($0 + [4]) = $2
	*($0) = $1
	$3 = *($1)
	*($0 + [24]) = $3
	*($0 + [16]) = $3
	*(($0 + [32])) = $3
	*(($0 + [40])) = (int_64)-1
	*(($0 + [48])) = [0]
	*(($0 + [52])) = [0]
	*(($0 + [56])) = [0]
	*($0 + [64]) = $3
	*(($0 + [72])) = $3
	*(($0 + [80])) = (int_64)-1
	*(($0 + [88])) = [0]
	*(($0 + [92])) = [0]
	*(($0 + [96])) = [0]
	*(($0 + [100])) = [0]
	*($0 + [104]) = $3
	*(($0 + [112])) = $3
	*(($0 + [120])) = (int_64)-1
	*(($0 + [128])) = [0]
	*(($0 + [132])) = [0]
	*(($0 + [136])) = [0]
	*(($0 + [140])) = [0]
	*($0 + [144]) = $3
	*(($0 + [152])) = $3
	*(($0 + [160])) = (int_64)-1
	*(($0 + [168])) = [0]
	*(($0 + [172])) = [0]
	*(($0 + [176])) = [0]
	*($0 + [184]) = $3
	*(($0 + [192])) = $3
	*(($0 + [200])) = (int_64)-1
	*(($0 + [208])) = [0]
	*(($0 + [212])) = [0]
	*(($0 + [216])) = [0]
	*($0 + [224]) = $3
	*(($0 + [232])) = $3
	*(($0 + [240])) = (int_64)-1
	*(($0 + [248])) = [0]
	*(($0 + [252])) = [0]
	*(($0 + [256])) = [0]
	*(($0 + [260])) = [0]
	*($0 + [264]) = $3
	*(($0 + [272])) = $3
	*(($0 + [280])) = (int_64)-1
	*(($0 + [288])) = [0]
	*(($0 + [292])) = [0]
	*(($0 + [296])) = [0]
	*($0 + [304]) = $3
	*(($0 + [312])) = $3
	*(($0 + [320])) = (int_64)-1
	*(($0 + [328])) = [0]
	*(($0 + [332])) = [0]
	*(($0 + [336])) = [0]
	$3 = *($0 + [16])
	*($0 + [344]) = $3
	*(($0 + [352])) = $3
	*(($0 + [360])) = (int_64)-1
	*(($0 + [368])) = [0]
	*(($0 + [372])) = [0]
	*(($0 + [376])) = [0]
	*(($0 + [380])) = [0]
	$2 = ($0 + [224])
	*(($1 = CALL $428([32])) + [4]) = $2
	*($1) = $0
	*($1 + [8]) = [0]
	*($1 + [12]) = $2
	*($1 + [24]) = [0]
	*($1 + [16]) = *($0 + [16])
	*($0 + [8]) = $1
	return $0
}

void .FUNC _ZN11CTournament15CreateStructureEv (int_32 $0)
{
	if ( CALL _ZN15CTournStructure15CreateStructureEv(*($0 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [5488])
	
.LABEL $label$1
}

int_32 .FUNC _ZN11CTournament20PayedHonorPointTournEP3pvpy (int_32 $0, int_64 $1)
{
	$0 = *(CALL _ZN11CTournament7FactoryEP3pvpy($0, $1) + [4])
	return ((uint_64)*($0 + [176]) >= (uint_64)*($0 + [64]))
}

void .FUNC _ZN11CTournament10UpdateInfoEv (int_32 $0)
{
	*(*($0 + [4]) + [160]) = [120]
	CALL _ZN11CTournament10updateInfoEv($0)
}

int_32 .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $124($0, ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN3pvp29initPhenotypeFightRoundMinMaxERK12fight_wizardRKhRhS5_i (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = [0]
	$2 = ((uint_32)*($2) % (uint_32)[10])
	$6 = *($1 + [20])
	$1 = *(($6 + ( ($2 + [20]) ? $2 : ((uint_32)(*(($1 + [24])) - $6) > (uint_32)[20]) )))
	if ( ((uint_32)$1 > (uint_32)[7]) ){ goto $label$1 }
	$8 = (([8] - $1) & [255])
	
.LABEL $label$1
	$1 = ((int_32)$8 * (int_32)$5)
	*($4) = $1
	$7 = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($0 + [48]) = $7
	*($3) = ((uint_64)$7 % (uint_64)(CASTING uint_64)(uint_32 (($1 & [255]) + [1])))
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

void .FUNC $272 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$2 = *($0)
	$6 = *(*($0 + [4]))
	*(($3 = (($9 = $10) + [24]))) = *(($6 + [24]))
	*(($4 = ($9 + [16]))) = *(($6 + [16]))
	*(($5 = ($9 + [8]))) = *(($6 + [8]))
	*($9) = *($6)
	$8 = ($9 + [32])
	CALL $446($8, ($6 + [32]))
	*(($1 + [24])) = *($3)
	*(($1 + [16])) = *($4)
	*(($1 + [8])) = *($5)
	*($1) = *($9)
	$6 = ($1 + [32])
	if ( (*($1 + [32]) & [1]) ){ goto $label$2 }
	*($6) = [0]
	$3 = ($1 + [36])
	goto $label$1 
	
.LABEL $label$2
	*(*(($1 + [40]))) = [0]
	*(($3 = ($1 + [36]))) = [0]
	
.LABEL $label$1
	CALL $435($6, [0])
	*(($6 + [8])) = *(($8 + [8]))
	*($6) = *($8)
	$6 = *($6)
	$8 = ( *($3) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($8 + [32])
	$7 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($6 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL $273($9, $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($2 + [8]), (int_64)6138858854829391872, *(*($0 + [8])), $7, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [48])
}

int_32 .FUNC $426 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [16694]) == 0) ){ goto $label$2 }
	$7 = *([0] + [16696])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [16694]) = [1]
	$7 = ($7 << [16])
	*([0] + [16696]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [16696])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [16696]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [16694]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [16694]) = [1]
	$3 = ($3 << [16])
	*([0] + [16696]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [16696])
	
.LABEL $label$8
	*([0] + [16696]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $428([64])
	$4 = CALL $101($6)
	*($6 + [48]) = $0
	CALL $111(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $112(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [20])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [24])) = $7
	CALL $430($7)
	
.LABEL $label$10
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [12])) = $7
	CALL $430($7)
	
.LABEL $label$11
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [16596])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [16404]
	$1 = (((int_32)$2 * (int_32)[12]) + [16404])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $425([8212], $0)
}

int_32 .FUNC $425 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $426($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [16608])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $344 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	CALL $351($1)
	$3 = *(($1 + [88]))
	*($0 + [8]) = $3
	$2 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($1 + [80])) * (float_64)(float_64)0.1))
	*($0) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1056])
	$6 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [1120])
	$5 = *(($1 + [88]))
	$7 = *($1 + [160])
	CALL eosio_assert([1], [1056])
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	$4 = (CASTING uint_64)(uint_32 ((uint_32)[2000000] / (uint_32)$7))
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$1 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$1 = [0]
	
.LABEL $label$6
	CALL eosio_assert($1, [1120])
	CALL eosio_assert(((int_64)$5 == (int_64)$3), [4384])
	$6 = ((int_64)$2 + (int_64)$4)
	*($0) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [4432])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [4464])
}

void .FUNC $228 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$8 = [8]
	$4 = *($1)
	$3 = *(($3 + [4]))
	$6 = ($1 + [12])
	$5 = ($1 + [8])
	CALL $201($5, *(( $5 ? $6 : *(*($3)) )), *($3), *($3 + [4]))
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = *($1 + [8])
	$3 = *($6)
	$7 = ($3 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$2 }
	$8 = (($7 & [-8]) + $8)
	
.LABEL $label$2
	$6 = ($8 + [8])
	if ( ($6 <= [513]) ){ goto $label$4 }
	$3 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$3 = ($11 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$3
	*($10) = $3
	*($10 + [8]) = ($3 + $6)
	CALL eosio_assert(((int_32)($8 + [8]) > (int_32)[7]), [592])
	CALL memcpy($3, $1, [8])
	*($10 + [4]) = ($3 + [8])
	$8 = CALL $210($10, $5)
	CALL eosio_assert(((int_32)(*($8 + [8]) - *($8 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($8 + [4]), ($1 + [24]), [8])
	*($8 + [4]) = (*($8 + [4]) + [8])
	CALL db_update_i64(*($1 + [36]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($3)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

int_64 .FUNC _ZN15CTournStructure12create_blockENSt3__16vectorIyNS0_9allocatorIyEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	$2 = *($0)
	$4 = *($0 + [16])
	*($6 + [4]) = $1
	*($6) = $0
	*($6 + [40]) = $4
	CALL eosio_assert(((int_64)*($2 + [184]) == (int_64)CALL $fimport$15()), [528])
	$1 = ($2 + [184])
	*($6 + [16]) = $1
	*($6 + [20]) = $6
	*($6 + [24]) = ($6 + [40])
	*(($0 = CALL $428([48])) + [16]) = [0]
	*($0 + [8 align=4]) = (int_64)0
	*($0 + [32]) = $1
	CALL $232(($6 + [16]), $0)
	*($6 + [32]) = $0
	$4 = *($0)
	*($6 + [16]) = $4
	$3 = *($0 + [36])
	*($6 + [12]) = $3
	$5 = ($2 + [212])
	$1 = *($5)
	if ( ((uint_32)$1 >= (uint_32)*(($2 + [216]))) ){ goto $label$2 }
	*($1 + [8]) = $4
	*($1 + [16]) = $3
	*($6 + [32]) = [0]
	*($1) = $0
	*($5) = ($1 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $149(($2 + [208]), ($6 + [32]), ($6 + [16]), ($6 + [12]))
	
.LABEL $label$1
	$2 = *($6 + [32])
	*($6 + [32]) = [0]
	if ( ($2 == 0) ){ goto $label$3 }
	$1 = *($2 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($2 + [12])) = $1
	CALL $430($1)
	
.LABEL $label$4
	CALL $430($2)
	
.LABEL $label$3
	$4 = *($0)
	*([0] + [4]) = ($6 + [48])
	return $4
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [592])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [592])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [592])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [592])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

void .FUNC $224 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	*(($11 + [24])) = [0]
	*($11 + [16]) = (int_64)0
	$7 = CALL strlen($1)
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$4 }
	*($11 + [16]) = ($7 << [1])
	$10 = (($11 + [16]) | [1])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($7 + [16]) & [-16])
	$10 = CALL $428($8)
	*($11 + [16]) = ($8 | [1])
	*($11 + [24]) = $10
	*($11 + [20]) = $7
	
.LABEL $label$3
	CALL memcpy($10, $1, $7)
	
.LABEL $label$2
	*(($10 + $7)) = [0]
	CALL $252($11, $2, $3, $4, $5, $6)
	$7 = *($11)
	$10 = ($7 & [1])
	$7 = CALL $436(($11 + [16]), ( *($11 + [8]) ? ($11 | [1]) : $10 ), ( *($11 + [4]) ? uint_32($7 >> [1]) : $10 ))
	$9 = *($7)
	*($7) = (int_64)0
	*($0) = $9
	$7 = ($7 + [8])
	*(($0 + [8])) = *($7)
	*($7) = [0]
	if ( ((*($11) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($11 + [8])))
	
.LABEL $label$5
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($11 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($11 + [16]))
}

void .FUNC _ZN15CTournStructure12create_layerEiNSt3__16vectorIyNS0_9allocatorIyEEEE (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($8 + [8]) = [0]
	*($8) = (int_64)0
	$5 = (*($3 + [4]) - *($3))
	$4 = int_32($5 >> [3])
	if ( ($4 == 0) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = CALL $428($5)
	*(($8 + [8])) = ($5 + ($4 << [3]))
	*($8) = $5
	*($8 + [4]) = $5
	$6 = *($3)
	$4 = (*(($3 + [4])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($5, $6, $4)
	*($8 + [4]) = ($5 + $4)
	
.LABEL $label$2
	$7 = CALL _ZN15CTournStructure12create_blockENSt3__16vectorIyNS0_9allocatorIyEEEE($1, $8)
	*($0) = $7
	*($0 + [8]) = $7
	$5 = *($8)
	if ( ($5 == 0) ){ goto $label$3 }
	*($8 + [4]) = $5
	CALL $430($5)
	
.LABEL $label$3
	*($0 + [24]) = $2
	*($0 + [16]) = (CASTING uint_64)(uint_32 int_32((*(($3 + [4])) - *($3)) >> [3]))
	*([0] + [4]) = ($8 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $445($8)
}

void .FUNC $226 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	*(($9 = $10) + [24]) = *(($1 + [8]))
	$3 = *($3)
	$4 = *($1)
	$5 = ($1 + [20])
	$8 = *($5)
	if ( ((int_32)$8 == (int_32)*(($1 + [24]))) ){ goto $label$2 }
	*($8) = *($3)
	*(($8 + [24])) = *(($3 + [24]))
	*(($8 + [16])) = *(($3 + [16]))
	*(($8 + [8])) = *(($3 + [8]))
	*($5) = (*($5) + [32])
	$5 = ($1 + [16])
	goto $label$1 
	
.LABEL $label$2
	$5 = ($1 + [16])
	CALL $251($5, $3)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$5 = *($5)
	$8 = *(($1 + [20]))
	$6 = ($8 - $5)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [5]))
	$3 = [41]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$5 }
	$3 = (((int_32)uint_32(($6 + [-32]) >> [5]) * (int_32)[25]) + $3)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 + [-25])
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$7 }
	$8 = CALL malloc($3)
	goto $label$6 
	
.LABEL $label$7
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$6
	*($9 + [12]) = $8
	*($9 + [8]) = $8
	*($9 + [16]) = ($8 + $3)
	CALL $208(($9 + [8]), $1)
	CALL db_update_i64(*($1 + [32]), $2, $8, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($8)
	
.LABEL $label$8
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($9 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($9 + [24]), ($9 + [40]), [8]) == 0) ){ goto $label$10 }
	$3 = *($1 + [36])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$11 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3659885105376759808, ($9 + [32]), $4)
	*(($1 + [36])) = $3
	
.LABEL $label$11
	CALL db_idx64_update($3, $2, ($9 + [40]))
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [48])
}

void .FUNC $227 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	*(($11 + [24])) = [0]
	*($11 + [16]) = (int_64)0
	$7 = CALL strlen($1)
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$4 }
	*($11 + [16]) = ($7 << [1])
	$10 = (($11 + [16]) | [1])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($7 + [16]) & [-16])
	$10 = CALL $428($8)
	*($11 + [16]) = ($8 | [1])
	*($11 + [24]) = $10
	*($11 + [20]) = $7
	
.LABEL $label$3
	CALL memcpy($10, $1, $7)
	
.LABEL $label$2
	*(($10 + $7)) = [0]
	CALL $247($11, $2, $3, $4, $5, $6)
	$7 = *($11)
	$10 = ($7 & [1])
	$7 = CALL $436(($11 + [16]), ( *($11 + [8]) ? ($11 | [1]) : $10 ), ( *($11 + [4]) ? uint_32($7 >> [1]) : $10 ))
	$9 = *($7)
	*($7) = (int_64)0
	*($0) = $9
	$7 = ($7 + [8])
	*(($0 + [8])) = *($7)
	*($7) = [0]
	if ( ((*($11) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($11 + [8])))
	
.LABEL $label$5
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($11 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($11 + [16]))
}

void .FUNC _ZN3pvp14pickAttributesERib (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = CALL $428([32])
	*($0) = $4
	*($4) = (int_64)0
	*($4 + [8 align=4]) = (int_64)0
	*($4 + [16 align=4]) = (int_64)0
	$8 = [0]
	*($4 + [24]) = [0]
	$5 = ($4 + [32])
	*($0 + [8]) = $5
	*($4 + [28]) = [0]
	*($0 + [4]) = $5
	if ( ($3 == 0) ){ goto $label$2 }
	$3 = ($1 + [48])
	$9 = *($3)
	
.LOOP $label$3:
	$9 = ((uint_64)((int_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$9) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($3) = $9
	*(($4 + $8)) = ((CASTING uint_32)(uint_64 $9) & [7])
	$8 = ($8 + [4])
	if ( ((int_32)$8 != (int_32)[32]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($4) = (int_64)4294967296
	*($4 + [8 align=4]) = (int_64)12884901890
	*($4 + [16 align=4]) = (int_64)21474836484
	*($4 + [24 align=4]) = (int_64)30064771078
	$9 = *(($1 + [48]))
	
.LABEL $label$1
	$9 = ((uint_64)((int_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$9) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*(($3 = ($1 + [48]))) = $9
	$8 = ($4 + (((CASTING uint_32)(uint_64 $9) & [7]) << [2]))
	$6 = ($8 + [4])
	$7 = ($5 - $6)
	$5 = int_32($7 >> [2])
	if ( ($5 == 0) ){ goto $label$4 }
	CALL memmove($8, $6, $7)
	$9 = *($3)
	
.LABEL $label$4
	$8 = ($8 + ($5 << [2]))
	*(($0 + [4])) = $8
	$9 = ((uint_64)((int_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$9) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($3) = $9
	$3 = ($4 + ((CASTING uint_32)(uint_64 ((uint_64)$9 % (uint_64)(CASTING uint_64)(uint_32 int_32(($8 - $4) >> [2])))) << [2]))
	$5 = ($3 + [4])
	$6 = ($8 - $5)
	$8 = int_32($6 >> [2])
	if ( ($8 == 0) ){ goto $label$5 }
	CALL memmove($3, $5, $6)
	$9 = *(($1 + [48]))
	
.LABEL $label$5
	$8 = ($3 + ($8 << [2]))
	*(($5 = ($0 + [4]))) = $8
	$9 = ((uint_64)((int_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$9) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*(($1 = ($1 + [48]))) = $9
	$3 = ($4 + ((CASTING uint_32)(uint_64 ((uint_64)$9 % (uint_64)(CASTING uint_64)(uint_32 int_32(($8 - $4) >> [2])))) << [2]))
	$6 = ($3 + [4])
	$7 = ($8 - $6)
	$8 = int_32($7 >> [2])
	if ( ($8 == 0) ){ goto $label$6 }
	CALL memmove($3, $6, $7)
	$9 = *($1)
	
.LABEL $label$6
	$3 = ($3 + ($8 << [2]))
	*($5) = $3
	$9 = ((uint_64)((int_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$9) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($1) = $9
	$8 = ($4 + ((CASTING uint_32)(uint_64 ((uint_64)$9 % (uint_64)(CASTING uint_64)(uint_32 int_32(($3 - $4) >> [2])))) << [2]))
	*($2) = *($8)
	$1 = ($8 + [4])
	$3 = ($3 - $1)
	$4 = int_32($3 >> [2])
	if ( ($4 == 0) ){ goto $label$7 }
	CALL memmove($8, $1, $3)
	
.LABEL $label$7
	*(($0 + [4])) = ($8 + ($4 << [2]))
}

void .FUNC _ZN3pvp21runFightRoundGenotypeERK12fight_wizardS2_RiS3_S3_S3_R9fight_logi (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($9 + [24]) = (int_64)0
	CALL _ZN3pvp22initFightRoundGenotypeER13fight_round_sRK12fight_wizardS4_Rii($0, ($9 + [24]), $1, $2, $5, $8)
	*($9 + [16]) = (int_64)0
	CALL _ZN3pvp22initFightRoundGenotypeER13fight_round_sRK12fight_wizardS4_Rii($0, ($9 + [16]), $2, $1, $6, $8)
	$0 = [0]
	*($9 + [31]) = [0]
	$1 = [0]
	$8 = *($9 + [27])
	$2 = *($9 + [25])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$1 }
	$1 = ( [2] ? [1] : ((uint_32)$2 > (uint_32)($8 + [8])) )
	*($9 + [31]) = $1
	
.LABEL $label$1
	*($4) = (*($4) + ($1 & [255]))
	*($9 + [23]) = [0]
	$1 = *($9 + [19])
	$4 = *($9 + [17])
	if ( ((uint_32)$4 <= (uint_32)$1) ){ goto $label$2 }
	$0 = ( [2] ? [1] : ((uint_32)$4 > (uint_32)($1 + [8])) )
	*($9 + [23]) = $0
	
.LABEL $label$2
	*($3) = (*($3) + ($0 & [255]))
	*($9) = *($9 + [24])
	*($9 + [8]) = *($9 + [16])
	$3 = ($7 + [12])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)*(($7 + [16]))) ){ goto $label$4 }
	*($4) = *($9)
	*(($4 + [8])) = *(($9 + [8]))
	*($3) = (*($3) + [16])
	goto $label$3 
	
.LABEL $label$4
	CALL $219(($7 + [8]), $9)
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [32])
}

void .FUNC _ZN3pvp22initFightRoundGenotypeER13fight_round_sRK12fight_wizardS4_Rii (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ((*((*($2 + [8]) + *($4))) << [24]) + [-838860800])
	$6 = int_32($2 >> [24])
	if ( ((int_32)$2 < (int_32)[-16777215]) ){ goto $label$2 }
	$2 = ($6 + [8])
	goto $label$1 
	
.LABEL $label$2
	$2 = ([8] - ((int_32)$6 / (int_32)[2]))
	
.LABEL $label$1
	$5 = ((int_32)($2 & [255]) * (int_32)$5)
	*($1 + [2]) = $5
	$7 = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*($0 + [48]) = $7
	*($1 + [1]) = ((int_64)((uint_64)$7 % (uint_64)(CASTING uint_64)(uint_32 ($5 & [255]))) + (int_64)1)
	$3 = ((*((*($3 + [8]) + *($4))) << [24]) + [-838860800])
	$5 = int_32($3 >> [24])
	if ( ((int_32)$3 < (int_32)[-16777215]) ){ goto $label$4 }
	$3 = (((int_32)$5 / (int_32)[2]) + [8])
	goto $label$3 
	
.LABEL $label$4
	$3 = ([8] - $5)
	
.LABEL $label$3
	*($1 + [4]) = $3
	$8 = CALL current_time()
	$5 = CALL tapos_block_prefix()
	*($1 + [5]) = [0]
	*($1 + [6]) = [0]
	*($1) = *($4)
	$7 = ((uint_64)((int_64)((int_64)((int_64)((int_64)((uint_64)$8 / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$7) + (int_64)(CASTING int_64)(int_32 $5)) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	*(($0 + [48])) = $7
	*($1 + [3]) = ((int_64)((uint_64)$7 % (uint_64)(CASTING uint_64)(uint_32 ($3 & [255]))) + (int_64)1)
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $428(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $430($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $430($1)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC _ZN3pvp11createFightEyRK6wizardyS2_RN5eosio5assetES5_hm (int_32 $0, int_64 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	$9 = (*([0] + [4]) - [256])
	*([0] + [4]) = $9
	*($9 + [208]) = $1
	*($9 + [200]) = $3
	*($9 + [199]) = $7
	*($9 + [192]) = $8
	$8 = CALL $94(($9 + [48]))
	*($9 + [12]) = $2
	*($9 + [8]) = $0
	*($9 + [20]) = $5
	*($9 + [24]) = $6
	*($9 + [16]) = ($9 + [208])
	*($9 + [28]) = ($9 + [199])
	*($9 + [32]) = ($9 + [192])
	*($9 + [36]) = $4
	*($9 + [40]) = ($9 + [200])
	*($9 + [44]) = $8
	*($9 + [248]) = $1
	CALL eosio_assert(((int_64)*($0 + [96]) == (int_64)CALL $fimport$15()), [528])
	$6 = ($0 + [96])
	*($9 + [224]) = $6
	*($9 + [228]) = ($9 + [8])
	*($9 + [232]) = ($9 + [248])
	$4 = CALL $428([160])
	CALL $94($4)
	*($4 + [144]) = $6
	CALL $390(($9 + [224]), $4)
	*($9 + [240]) = $4
	$1 = *($4)
	*($9 + [224]) = $1
	$5 = *($4 + [148])
	*($9 + [220]) = $5
	$2 = ($0 + [124])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [128]))) ){ goto $label$2 }
	*($6 + [8]) = $1
	*($6 + [16]) = $5
	*($9 + [240]) = [0]
	*($6) = $4
	*($2) = ($6 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $96(($0 + [120]), ($9 + [240]), ($9 + [224]), ($9 + [220]))
	
.LABEL $label$1
	$4 = *($9 + [240])
	*($9 + [240]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$6 = *(($4 + [68]))
	if ( ($6 == 0) ){ goto $label$4 }
	*(($4 + [72])) = $6
	CALL $430($6)
	
.LABEL $label$4
	$6 = *(($4 + [56]))
	if ( ($6 == 0) ){ goto $label$5 }
	*(($4 + [60])) = $6
	CALL $430($6)
	
.LABEL $label$5
	$6 = *(($4 + [28]))
	if ( ($6 == 0) ){ goto $label$6 }
	*(($4 + [32])) = $6
	CALL $430($6)
	
.LABEL $label$6
	$6 = *(($4 + [16]))
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [20])) = $6
	CALL $430($6)
	
.LABEL $label$7
	CALL $430($4)
	
.LABEL $label$3
	CALL _ZN3pvp15logregistrationERK5fight($0, $8)
	$0 = *(($8 + [68]))
	if ( ($0 == 0) ){ goto $label$8 }
	*(($8 + [72])) = $0
	CALL $430($0)
	
.LABEL $label$8
	$0 = *(($8 + [56]))
	if ( ($0 == 0) ){ goto $label$9 }
	*(($8 + [60])) = $0
	CALL $430($0)
	
.LABEL $label$9
	$0 = *(($8 + [28]))
	if ( ($0 == 0) ){ goto $label$10 }
	*(($8 + [32])) = $0
	CALL $430($0)
	
.LABEL $label$10
	$0 = *(($8 + [16]))
	if ( ($0 == 0) ){ goto $label$11 }
	*(($8 + [20])) = $0
	CALL $430($0)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [256])
}

void .FUNC $388 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 <= (uint_32)($8 - $4)) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$5 }
	*($0 + [4]) = $4
	CALL $430($4)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = [2147483647]
	if ( ((uint_32)$8 > (uint_32)[1073741822]) ){ goto $label$6 }
	$8 = ($8 << [1])
	$4 = ( $3 ? $8 : ($8 <= $3) )
	
.LABEL $label$6
	$8 = CALL $428($4)
	*($0) = $8
	*($0 + [4]) = $8
	*(($0 + [8])) = ($8 + $4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($8) = *($1)
	$8 = (*($0) + [1])
	*($0) = $8
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$5 = (*($0 + [4]) - $4)
	$8 = ($1 + $5)
	$6 = ( $8 ? $2 : ((uint_32)$3 > (uint_32)$5) )
	$7 = ($6 - $1)
	if ( ($7 == 0) ){ goto $label$8 }
	CALL memmove($4, $1, $7)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$5) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$3 }
	$1 = ($0 + [4])
	$0 = *($1)
	
.LOOP $label$9:
	*($0) = *($8)
	$0 = (*($1) + [1])
	*($1) = $0
	$8 = ($8 + [1])
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($4 + $7)
	return (unreachable)
	
.LABEL $label$1
	CALL $445($0)
}

void .FUNC $383 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [144])
	*([0] + [4]) = $2
	*($2) = *($1)
	CALL $192(($2 + [8]), ($1 + [8]))
	*(($2 + [40])) = *(($1 + [40]))
	CALL $192(($2 + [48]), ($1 + [48]))
	*(($2 + [80])) = *(($1 + [80]))
	*(($2 + [104])) = *(($1 + [104]))
	*(($2 + [100])) = *(($1 + [100]))
	*(($2 + [96])) = *(($1 + [96]))
	*(($2 + [92])) = *(($1 + [92]))
	*($2 + [88]) = *($1 + [88])
	CALL memcpy(($2 + [108]), ($1 + [108]), [36])
	CALL $384($0, $2)
	$1 = *(($2 + [68]))
	if ( ($1 == 0) ){ goto $label$1 }
	*(($2 + [72])) = $1
	CALL $430($1)
	
.LABEL $label$1
	$1 = *(($2 + [56]))
	if ( ($1 == 0) ){ goto $label$2 }
	*(($2 + [60])) = $1
	CALL $430($1)
	
.LABEL $label$2
	$1 = *(($2 + [28]))
	if ( ($1 == 0) ){ goto $label$3 }
	*(($2 + [32])) = $1
	CALL $430($1)
	
.LABEL $label$3
	$1 = *(($2 + [16]))
	if ( ($1 == 0) ){ goto $label$4 }
	*(($2 + [20])) = $1
	CALL $430($1)
	
.LABEL $label$4
	*([0] + [4]) = ($2 + [144])
}

int_32 .FUNC $382 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [28]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [7760])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-1734277135947792384)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [7696])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [7696])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $358(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $381 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	$11 = $12
	*([0] + [4]) = $12
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [152])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [136])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [144])), (int_64)-1734277135947792384, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $358($5, $6)
	*($11 + [12]) = [0]
	*($11 + [8]) = $5
	$7 = *(*(CALL $382(($11 + [8])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [152])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [7632])
	*($1) = *($8)
	*($1 + [16]) = *(*($3 + [4]))
	*($1 + [8]) = *(*($3 + [8]))
	$12 = $12
	$3 = ($12 + [-32])
	*([0] + [4]) = $3
	CALL eosio_assert([1], [592])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert([1], [592])
	$4 = ($1 + [8])
	CALL memcpy(($12 + [-24]), $4, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($12 + [-16]), ($1 + [16]), [8])
	$7 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-1734277135947792384, *(*($0 + [8])), $7, $3, [24])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$7 = *(($2 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($11 + [8]) = *($4)
	*($1 + [32]) = CALL db_idx64_store($7, (int_64)-1734277135947792384, $9, $10, ($11 + [8]))
	*([0] + [4]) = ($11 + [16])
}

void .FUNC _ZN3pvp11setCooldownEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*($8 + [32]) = $1
	*($8 + [24]) = $2
	$4 = ($0 + [136])
	*($8 + [16]) = $4
	CALL $363(($8 + [48]), ($8 + [16]), ($8 + [32]))
	$5 = *($8 + [52])
	if ( ($5 == 0) ){ goto $label$2 }
	$5 = ((int_64)*($8 + [32]) != (int_64)*($5 + [8]))
	goto $label$1 
	
.LABEL $label$2
	$5 = [1]
	
.LABEL $label$1
	CALL eosio_assert($5, [7568])
	*($8 + [4]) = ($8 + [24])
	*($8 + [8]) = ($8 + [32])
	*($8) = $0
	*($8 + [72]) = $3
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$15()), [528])
	*($8 + [48]) = $4
	*($8 + [52]) = $8
	*($8 + [56]) = ($8 + [72])
	*(($5 = CALL $428([40])) + [24]) = $4
	CALL $381(($8 + [48]), $5)
	*($8 + [64]) = $5
	$3 = *($5)
	*($8 + [48]) = $3
	$6 = *($5 + [28])
	*($8 + [44]) = $6
	$7 = ($0 + [164])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [168]))) ){ goto $label$4 }
	*($4 + [8]) = $3
	*($4 + [16]) = $6
	*($8 + [64]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $360(($0 + [160]), ($8 + [64]), ($8 + [48]), ($8 + [44]))
	
.LABEL $label$3
	$0 = *($8 + [64])
	*($8 + [64]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	CALL $430($0)
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $387 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($3 + [32]), *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [816])
	CALL memcpy(($3 + [40]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [816])
	CALL memcpy(($0 + [48]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [816])
	CALL memcpy(($0 + [52]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
}

void .FUNC _ZN3pvp11claimhpsidsEyNSt3__16vectorIyNS0_9allocatorIyEEEE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$26 = (*([0] + [4]) - [80])
	*([0] + [4]) = $26
	CALL require_auth($1)
	$21 = *($2 + [4])
	$23 = *($2)
	if ( ((int_32)$23 == (int_32)$21) ){ goto $label$2 }
	$6 = ($0 + [200])
	$4 = ($0 + [176])
	$3 = ($0 + [216])
	$5 = (($26 + [64]) | [8])
	$11 = ($0 + [240])
	$12 = ($0 + [244])
	$13 = ($0 + [224])
	$18 = ($26 + [20])
	$20 = ($26 + [12])
	$19 = ($26 + [24])
	$14 = ($0 + [204])
	$15 = ($0 + [184])
	$16 = ($0 + [192])
	$17 = ($0 + [208])
	$22 = [0]
	
.LOOP $label$3:
	$7 = *($23)
	CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($0, $1, $7, CALL $101($26), [1])
	$25 = *($11)
	$24 = *($12)
	if ( ((int_32)$24 == (int_32)$25) ){ goto $label$4 }
	$0 = ($24 + [-24])
	$8 = ([0] - $25)
	
.LOOP $label$5:
	if ( ((int_64)*(*($0)) == (int_64)$7) ){ goto $label$4 }
	$24 = $0
	$9 = ($0 + [-24])
	$0 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ((int_32)$24 == (int_32)$25) ){ goto $label$14 }
	$25 = *(($24 + [-24]))
	CALL eosio_assert(((int_32)*($25 + [24]) == (int_32)$3), [320])
	if ( $25 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$0 = CALL db_find_i64(*($3), *($13), (int_64)-3111684726404022272, $7)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$12 }
	$25 = CALL $100($3, $0)
	CALL eosio_assert(((int_32)*($25 + [24]) == (int_32)$3), [320])
	
.LABEL $label$13
	$10 = *($6)
	$24 = *($14)
	if ( ((int_32)$24 == (int_32)$10) ){ goto $label$15 }
	$0 = ($24 + [-24])
	$8 = ([0] - $10)
	
.LOOP $label$16:
	if ( ((int_64)*(*($0)) == (int_64)$7) ){ goto $label$15 }
	$24 = $0
	$9 = ($0 + [-24])
	$0 = $9
	if ( ((int_32)($9 + $8) != (int_32)[-24]) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ((int_32)$24 == (int_32)$10) ){ goto $label$11 }
	$0 = *(($24 + [-24]))
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$4), [320])
	if ( $0 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$22 = ($22 + [1])
	$0 = *($18)
	if ( $0 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$11
	$0 = CALL db_find_i64(*($4), *($15), (int_64)7865338659113693184, $7)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	$0 = CALL $103($4, $0)
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$4), [320])
	
.LABEL $label$10
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($0 + [16]) == (int_32)$4), [880])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$15()), [928])
	*($0 + [8]) = ((int_64)*($0 + [8]) + (int_64)*($25 + [8]))
	$7 = *($0)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [592])
	CALL memcpy(($26 + [64]), $0, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy($5, ($0 + [8]), [8])
	CALL db_update_i64(*($0 + [20]), $1, ($26 + [64]), [16])
	if ( (uint_64)($7 <= *($16)) ){ goto $label$8 }
	*($16) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$15()), [528])
	*(($0 = CALL $428([32])) + [16]) = $4
	*($0) = $7
	*($0 + [8]) = *($25 + [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($26 + [64]), $0, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy($5, ($0 + [8]), [8])
	$7 = *($0)
	$24 = CALL db_store_i64(*($15), (int_64)7865338659113693184, $1, $7, ($26 + [64]), [16])
	*($0 + [20]) = $24
	if ( (uint_64)($7 <= *($16)) ){ goto $label$17 }
	*($16) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	*($26 + [56]) = $0
	$7 = *($0)
	*($26 + [64]) = $7
	*($26 + [52]) = $24
	$9 = *($14)
	if ( ((uint_32)$9 >= (uint_32)*($17)) ){ goto $label$19 }
	*($9 + [8]) = $7
	*($9 + [16]) = $24
	*($26 + [56]) = [0]
	*($9) = $0
	*($14) = ($9 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $104($6, ($26 + [56]), ($26 + [64]), ($26 + [52]))
	
.LABEL $label$18
	$0 = *($26 + [56])
	*($26 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $430($0)
	
.LABEL $label$8
	CALL eosio_assert([1], [448])
	CALL eosio_assert([1], [496])
	$0 = CALL db_next_i64(*($25 + [28]), ($26 + [64]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$20 }
	CALL $100($3, $0)
	
.LABEL $label$20
	CALL $105($3, $25)
	$0 = *($18)
	if ( ($0 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	*($19) = $0
	CALL $430($0)
	
.LABEL $label$6
	$0 = *(($26 + [8]))
	if ( ($0 == 0) ){ goto $label$21 }
	*($20) = $0
	CALL $430($0)
	
.LABEL $label$21
	$23 = ($23 + [8])
	if ( ((int_32)$23 != (int_32)$21) ){ goto $label$3 }
	$21 = *(($2 + [4]))
	$23 = *($2)
	goto $label$1 
	
.LABEL $label$2
	$22 = [0]
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$22 != (int_32)int_32(($21 - $23) >> [3])), [1280])
	*([0] + [4]) = ($26 + [80])
}

void .FUNC $385 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)*($3 + [8]) != (int_32)*($3 + [4])), [816])
	CALL memcpy(($0 + [32]), *($3 + [4]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
}

void .FUNC $384 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$2 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($2) + $0))
	
.LABEL $label$1
	*($4) = *($1)
	CALL $192(($4 + [8]), ($1 + [8]))
	*(($4 + [40])) = *(($1 + [40]))
	CALL $192(($4 + [48]), ($1 + [48]))
	*(($4 + [80])) = *(($1 + [80]))
	*(($4 + [104])) = *(($1 + [104]))
	*(($4 + [100])) = *(($1 + [100]))
	*(($4 + [96])) = *(($1 + [96]))
	*(($4 + [92])) = *(($1 + [92]))
	*($4 + [88]) = *($1 + [88])
	CALL memcpy(($4 + [108]), ($1 + [108]), [36])
	CALL void $2((int_32 $4), (int_32 $0))
	$1 = *(($4 + [68]))
	if ( ($1 == 0) ){ goto $label$2 }
	*(($4 + [72])) = $1
	CALL $430($1)
	
.LABEL $label$2
	$1 = *(($4 + [56]))
	if ( ($1 == 0) ){ goto $label$3 }
	*(($4 + [60])) = $1
	CALL $430($1)
	
.LABEL $label$3
	$1 = *(($4 + [28]))
	if ( ($1 == 0) ){ goto $label$4 }
	*(($4 + [32])) = $1
	CALL $430($1)
	
.LABEL $label$4
	$1 = *(($4 + [16]))
	if ( ($1 == 0) ){ goto $label$5 }
	*(($4 + [20])) = $1
	CALL $430($1)
	
.LABEL $label$5
	*([0] + [4]) = ($4 + [144])
}

void .FUNC $72 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [1056])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $73(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [816])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $74(*($1), *($0 + [12]))
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $428($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $430($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [816])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [816])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [816])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [1152])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [816])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [1152])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $75($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $435($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $428($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $435($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $430($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $432($7)
	return (unreachable)
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $76($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [816])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [1152])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $81($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $430($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $430($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [816])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [816])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $75(CALL $82($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $80($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $430($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [816])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $75($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $259 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [8])
	$3 = *($0 + [4])
	if ( ((uint_32)$3 >= (uint_32)$7) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$5 }
	$8 = ($3 - ($1 + [8]))
	$5 = int_32($8 >> [3])
	$7 = ($3 + [-8])
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$7 }
	$4 = uint_32((($3 - ($5 << [3])) + ((int_32)$1 ^ (int_32)[-1])) >> [3])
	$6 = $3
	
.LOOP $label$8:
	*($6) = *($7)
	$6 = ($6 + [8])
	$7 = ($7 + [8])
	if ( ($7 <= $3) ){ goto $label$8 }
	*(($0 + [4])) = (($3 + ($4 << [3])) + [8])
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$9 }
	CALL memmove(($3 - ($5 << [3])), $1, $8)
	
.LABEL $label$9
	if ( ((uint_32)$1 > (uint_32)$2) ){ goto $label$10 }
	$2 = ( ($2 + [8]) ? $2 : ((uint_32)*(($0 + [4])) > (uint_32)$2) )
	
.LABEL $label$10
	*($1) = *($2)
	return $1
	
.LABEL $label$6
	$6 = *($0)
	$5 = (int_32(($3 - $6) >> [3]) + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$7 = ($7 - $6)
	if ( ((uint_32)int_32($7 >> [3]) >= (uint_32)[268435455]) ){ goto $label$12 }
	$3 = int_32(($1 - $6) >> [3])
	$7 = int_32($7 >> [2])
	$6 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ($6 <= [536870912]) ){ goto $label$11 }
	goto $label$1 
	
.LABEL $label$12
	$3 = int_32(($1 - $6) >> [3])
	$6 = [536870911]
	
.LABEL $label$11
	$5 = CALL $428(($6 << [3]))
	goto $label$2 
	
.LABEL $label$5
	*(($0 + [4])) = ($1 + [8])
	*($1) = *($2)
	return $1
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	$8 = ($5 + ($6 << [3]))
	$7 = ($5 + ($3 << [3]))
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$13 }
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$14 }
	$7 = ($7 + (((int_32)($3 + [1]) / (int_32)[-2]) << [3]))
	goto $label$13 
	
.LABEL $label$14
	$7 = ( ($3 << [1]) ? [1] : $3 )
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$1 }
	$6 = ($7 << [3])
	$3 = CALL $428($6)
	$8 = ($3 + $6)
	$7 = ($3 + (($7 << [1]) & [-8]))
	if ( ($5 == 0) ){ goto $label$13 }
	CALL $430($5)
	
.LABEL $label$13
	*($7) = *($2)
	$2 = *($0)
	$6 = ($1 - $2)
	$3 = ($7 - $6)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$15 }
	CALL memcpy($3, $2, $6)
	
.LABEL $label$15
	$6 = ($7 + [8])
	$5 = ($0 + [4])
	$2 = (*($5) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($6, $1, $2)
	$6 = ($6 + $2)
	
.LABEL $label$16
	*($5) = $6
	$6 = *($0)
	*($0) = $3
	*(($0 + [8])) = $8
	if ( ($6 == 0) ){ goto $label$17 }
	CALL $430($6)
	
.LABEL $label$17
	return $7
	
.LABEL $label$1
	CALL abort()
	(unreachable)
	return (unreachable)
}

void .FUNC $258 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [16])
	$10 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [20]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$8 = [8]
	$4 = *($1)
	$5 = ($1 + [8])
	CALL $259($5, *($1 + [8]), *($3))
	$6 = ($1 + [12])
	$7 = *($6)
	if ( ((uint_32)int_32(($7 - *($1 + [8])) >> [3]) <= (uint_32)*(*($3 + [4]))) ){ goto $label$1 }
	*($6) = ($7 + [-8])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	$6 = *($5)
	$3 = *($6)
	$7 = ($3 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$2:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$3 }
	$8 = (($7 & [-8]) + $8)
	
.LABEL $label$3
	if ( ($8 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($8)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($11 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($10) = $3
	*($10 + [8]) = ($3 + $8)
	CALL eosio_assert(((int_32)$8 > (int_32)[7]), [592])
	CALL memcpy($3, $1, [8])
	*($10 + [4]) = ($3 + [8])
	CALL $210($10, $5)
	CALL db_update_i64(*($1 + [24]), $2, $3, $8)
	if ( ($8 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $428([40])) + [16]) = [0]
	*($6 + [8 align=4]) = (int_64)0
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [816])
	CALL memcpy($6, $4, [8])
	*($8 + [36]) = ($4 + [8])
	$4 = CALL $180(($8 + [32]), ($6 + [8]))
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[3]), [816])
	CALL memcpy(($6 + [20]), *($4 + [4]), [4])
	*($6 + [28]) = $1
	*($4 + [4]) = (*($4 + [4]) + [4])
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $313(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [12])) = $7
	CALL $430($7)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $313 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$11
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $430($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC _ZN3pvp29checkFirstTransferTransactionEyyb (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [192])
	*([0] + [4]) = $13
	CALL eosio_assert([1], [1056])
	$9 = [0]
	$8 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1120])
	CALL _ZN3pvp21getCurrentTransactionEv(($13 + [112]), $9)
	$5 = *($13 + [148])
	$9 = (*((($13 + [112]) + [40])) - $5)
	if ( ((int_32)$9 != (int_32)[40]) ){ goto $label$11 }
	if ( $4 ){ goto $label$11 }
	if ( (int_64)($3 == 0) ){ goto $label$12 }
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)$3), [4496])
	
.LABEL $label$12
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [1056])
	$8 = (int_64)5459781
	$9 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$13 }
	goto $label$9 
	
.LABEL $label$11
	CALL eosio_assert(((int_32)$9 == (int_32)[80]), [4560])
	$7 = *(*(($13 + [148])) + [40])
	$8 = (int_64)0
	$12 = (int_64)59
	$9 = [304]
	$10 = (int_64)0
	
.LOOP $label$16:
	$11 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$17 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$5 = ($5 + [165])
	goto $label$18 
	
.LABEL $label$19
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$17
	$9 = ($9 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$16 }
	CALL eosio_assert(((int_64)$7 == (int_64)$10), [4688])
	$8 = *((*(($13 + [148])) + [48]))
	*($13 + [88]) = $3
	CALL $107(($13 + [176]), ($13 + [88]))
	$9 = CALL $438(($13 + [176]), [0], [4816])
	$4 = ($9 + [8])
	*(($5 = (($13 + [8]) + [8]))) = *($4)
	*($13 + [8]) = *($9)
	*($9) = [0]
	*(($9 + [4])) = [0]
	*($4) = [0]
	CALL eosio_assert(((int_64)$8 == (int_64)$3), ( *($5) ? (($13 + [8]) | [1]) : (*($13 + [8]) & [1]) ))
	if ( ((*($13 + [8]) & [1]) == 0) ){ goto $label$20 }
	CALL $430(*($5))
	
.LABEL $label$20
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$21 }
	CALL $430(*($13 + [184]))
	
.LABEL $label$21
	$4 = *(($13 + [148]))
	$3 = *($4)
	$8 = (int_64)0
	$11 = (int_64)59
	$9 = [272]
	$10 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$27 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$5 = ($5 + [165])
	goto $label$25 
	
.LABEL $label$27
	$12 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$23
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$10 = ((int_64)$12 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$22 }
	$9 = [0]
	if ( ((int_64)$3 != (int_64)$10) ){ goto $label$28 }
	$3 = *($4 + [8])
	$8 = (int_64)0
	$11 = (int_64)59
	$9 = [288]
	$10 = (int_64)0
	
.LOOP $label$29:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$34 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$5 = ($5 + [165])
	goto $label$32 
	
.LABEL $label$34
	$12 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$33
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$31
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$30
	$9 = ($9 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$12 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$29 }
	$9 = ((int_64)$3 == (int_64)$10)
	
.LABEL $label$28
	CALL eosio_assert($9, [4896])
	$5 = ($1 + [392])
	$9 = *(($1 + [420]))
	if ( ((int_32)$9 == (int_32)*(($1 + [416]))) ){ goto $label$8 }
	$4 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [32]) == (int_32)$5), [320])
	goto $label$7 
	
.LABEL $label$10
	$5 = [0]
	
.LABEL $label$9
	CALL eosio_assert($5, [1120])
	goto $label$6 
	
.LABEL $label$8
	$4 = [0]
	$9 = CALL db_find_i64(*($5), *(($1 + [400])), (int_64)8516495933114040320, (int_64)8516495933114040320)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	$4 = CALL $66($5, $9)
	CALL eosio_assert(((int_32)*($4 + [32]) == (int_32)$5), [320])
	
.LABEL $label$7
	$9 = [0]
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [4976])
	$4 = *(($1 + [420]))
	if ( ((int_32)$4 == (int_32)*(($1 + [416]))) ){ goto $label$36 }
	$9 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [320])
	goto $label$35 
	
.LABEL $label$36
	$4 = CALL db_find_i64(*(($1 + [392])), *(($1 + [400])), (int_64)8516495933114040320, (int_64)8516495933114040320)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$35 }
	$9 = CALL $66($5, $4)
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [320])
	
.LABEL $label$35
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [5040])
	$7 = *($9 + [24])
	$3 = *($9 + [16])
	$6 = *($9 + [8])
	$8 = *($9)
	$9 = *(($1 + [420]))
	if ( ((int_32)$9 == (int_32)*(($1 + [416]))) ){ goto $label$39 }
	$9 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [320])
	if ( $9 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$9 = CALL db_find_i64(*(($1 + [392])), *(($1 + [400])), (int_64)8516495933114040320, (int_64)8516495933114040320)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$37 }
	$9 = CALL $66($5, $9)
	CALL eosio_assert(((int_32)*($9 + [32]) == (int_32)$5), [320])
	
.LABEL $label$38
	CALL eosio_assert([1], [448])
	CALL eosio_assert([1], [496])
	$1 = CALL db_next_i64(*($9 + [36]), ($13 + [8]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$40 }
	CALL $66($5, $1)
	
.LABEL $label$40
	CALL $336($5, $9)
	
.LABEL $label$37
	CALL eosio_assert(((int_64)$8 == (int_64)CALL $fimport$16()), [5072])
	$8 = (int_64)0
	$11 = (int_64)59
	$9 = [272]
	$10 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$46 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$5 = ($5 + [165])
	goto $label$44 
	
.LABEL $label$46
	$12 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$42
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$10 = ((int_64)$12 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$41 }
	$9 = [0]
	if ( ((int_64)$3 != (int_64)$10) ){ goto $label$47 }
	$8 = (int_64)0
	$11 = (int_64)59
	$9 = [288]
	$10 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$53 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$5 = ($5 + [165])
	goto $label$51 
	
.LABEL $label$53
	$12 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$49
	$9 = ($9 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$12 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$48 }
	$9 = [0]
	if ( ((int_64)$7 != (int_64)$10) ){ goto $label$47 }
	$8 = (int_64)0
	$12 = (int_64)59
	$9 = [304]
	$10 = (int_64)0
	
.LOOP $label$54:
	$11 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$55 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$5 = ($5 + [165])
	goto $label$56 
	
.LABEL $label$57
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$55
	$9 = ($9 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$54 }
	$9 = ((int_64)$6 == (int_64)$10)
	
.LABEL $label$47
	*($13 + [104]) = $3
	CALL $107(($13 + [176]), ($13 + [104]))
	*($13 + [80]) = $7
	CALL $107(($13 + [88]), ($13 + [80]))
	*($13 + [56]) = $6
	CALL $107(($13 + [64]), ($13 + [56]))
	CALL $337(($13 + [8]), [5104], ($13 + [176]), [5152], ($13 + [88]), [5168], ($13 + [64]))
	$5 = (*($13 + [8]) & [1])
	$4 = *($13 + [16])
	$1 = ( $4 ? (($13 + [8]) | [1]) : $5 )
	if ( ($5 == 0) ){ goto $label$58 }
	CALL $430($4)
	
.LABEL $label$58
	CALL eosio_assert($9, $1)
	if ( ((*($13 + [64]) & [1]) == 0) ){ goto $label$59 }
	CALL $430(*($13 + [72]))
	
.LABEL $label$59
	if ( ((*($13 + [88]) & [1]) == 0) ){ goto $label$60 }
	CALL $430(*($13 + [96]))
	
.LABEL $label$60
	if ( ((*($13 + [176]) & [1]) == 0) ){ goto $label$61 }
	CALL $430(*($13 + [184]))
	
.LABEL $label$61
	$9 = *(($13 + [148]))
	$5 = *($9 + [28])
	*($13 + [88]) = $5
	*($13 + [92]) = $5
	*($13 + [96]) = *(($9 + [32]))
	*((($13 + [8]) + [24])) = (int_64)1398362884
	*($13 + [24]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$8 = (int_64)5462355
	$9 = [0]
	
.LOOP $label$64:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$63 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$65 }
	
.LOOP $label$66:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$63 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$66 }
	
.LABEL $label$65
	$5 = [1]
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[7]) ){ goto $label$64 }
	goto $label$62 
	
.LABEL $label$63
	$5 = [0]
	
.LABEL $label$62
	CALL eosio_assert($5, [1120])
	*(($13 + [48])) = [0]
	$8 = (int_64)0
	*($13 + [40]) = (int_64)0
	*($13 + [64]) = ($13 + [88])
	$9 = ($13 + [16])
	*($13 + [180]) = $9
	*($13 + [188]) = ($13 + [40])
	*($13 + [176]) = ($13 + [8])
	$5 = ($13 + [24])
	*($13 + [184]) = $5
	CALL $73(($13 + [176]), ($13 + [64]))
	$3 = *(($13 + [32]))
	$7 = *($5)
	if ( (int_64)($2 == 0) ){ goto $label$67 }
	CALL eosio_assert(((int_64)*($13 + [8]) == (int_64)$2), [5184])
	
.LABEL $label$67
	$2 = *($9)
	$12 = (int_64)59
	$9 = [304]
	$10 = (int_64)0
	
.LOOP $label$68:
	$11 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$69 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$5 = ($5 + [165])
	goto $label$70 
	
.LABEL $label$71
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$69
	$9 = ($9 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$68 }
	CALL eosio_assert(((int_64)$2 == (int_64)$10), [5216])
	CALL eosio_assert(((int_64)$7 > (int_64)0), [5264])
	CALL eosio_assert(((int_64)$3 == (int_64)1397703940), [5312])
	*($0 + [8]) = $3
	*($0) = $7
	if ( ((*(($13 + [40])) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*(($13 + [48])))
	
.LABEL $label$6
	CALL $65(($13 + [112]))
	*([0] + [4]) = ($13 + [192])
}

void .FUNC _ZN11CTournament11EnterWizardEN5eosio5assetEyRK12fight_wizard (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	$18 = (*([0] + [4]) - [336])
	*([0] + [4]) = $18
	*($18 + [184]) = $2
	$13 = *($0 + [4])
	CALL eosio_assert(((uint_64)*($13 + [168]) <= (uint_64)*(*($13 + [144]))), [3616])
	CALL eosio_assert(((uint_64)*(*($0 + [4]) + [40]) <= (uint_64)CALL $fimport$16()), [3680])
	CALL eosio_assert(((uint_64)*(*($0 + [4]) + [48]) >= (uint_64)CALL $fimport$16()), [3728])
	*($18 + [183]) = [1]
	*(($13 = (($18 + [144]) + [8]))) = *(($1 + [8]))
	$15 = *($1)
	*((($18 + [56]) + [12])) = *((($18 + [144]) + [12]))
	*((($18 + [56]) + [8])) = *($13)
	*($18 + [144]) = $15
	*($18 + [60]) = *($18 + [148])
	*($18 + [56]) = *($18 + [144])
	CALL _ZN11CTournament10enter_userEN5eosio5assetEyRK12fight_wizardRb(($18 + [160]), $0, ($18 + [56]), $2, $3, ($18 + [183]))
	CALL eosio_assert(((uint_64)*($18 + [160]) <= (uint_64)*(*(*($0 + [4]) + [144]) + [24])), [3776])
	$17 = *($18 + [168])
	CALL eosio_assert(((uint_64)$17 <= (uint_64)*(*(*($0 + [4]) + [144]) + [32])), [3872])
	$4 = ($0 + [104])
	*($18 + [136]) = $4
	$2 = *(*($0 + [4]))
	$15 = *($3)
	*(($13 = CALL $428([16])) + [8]) = $15
	*($13) = $2
	$8 = CALL $429([16])
	CALL memcpy($8, $13, [16])
	CALL sha1($8, [16], ($18 + [240]))
	if ( ($8 == 0) ){ goto $label$1 }
	CALL $431($8)
	
.LABEL $label$1
	*($18 + [304]) = *($18 + [240])
	CALL $307(($18 + [192]), ($18 + [136]), ($18 + [304]))
	$12 = [0]
	$8 = *($18 + [196])
	if ( ($8 == 0) ){ goto $label$2 }
	$2 = *($8 + [8])
	$15 = *($8 + [24])
	$16 = *($18 + [304])
	*(($8 = CALL $428([16])) + [8]) = $15
	*($8) = $2
	$14 = CALL $429([16])
	CALL memcpy($14, $8, [16])
	CALL sha1($14, [16], ($18 + [240]))
	if ( ($14 == 0) ){ goto $label$3 }
	CALL $431($14)
	
.LABEL $label$3
	$2 = *($18 + [240])
	if ( ($8 == 0) ){ goto $label$4 }
	CALL $430($8)
	
.LABEL $label$4
	if ( ((int_64)$16 != (int_64)$2) ){ goto $label$2 }
	$12 = *($18 + [196])
	
.LABEL $label$2
	if ( ($13 == 0) ){ goto $label$5 }
	CALL $430($13)
	
.LABEL $label$5
	$5 = ($0 + [144])
	if ( ($12 == 0) ){ goto $label$9 }
	$2 = *($12 + [80])
	$6 = *(($0 + [168]))
	$14 = *(($0 + [172]))
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$10 }
	$13 = ($14 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$11:
	if ( ((int_64)*(*($13)) == (int_64)$2) ){ goto $label$10 }
	$14 = $13
	$8 = ($13 + [-24])
	$13 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	$13 = ($12 + [80])
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$8 }
	$8 = *(($14 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [12]) == (int_32)$5), [320])
	goto $label$7 
	
.LABEL $label$9
	$8 = [0]
	goto $label$6 
	
.LABEL $label$8
	$8 = [0]
	$14 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)-2035737192754708480, $2)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $161($5, $14)
	CALL eosio_assert(((int_32)*($8 + [12]) == (int_32)$5), [320])
	
.LABEL $label$7
	CALL $317(($18 + [240]), [3952], $12, [3984], $13)
	$14 = (*($18 + [240]) & [1])
	$13 = (($18 + [240]) | [1])
	$9 = *($18 + [248])
	$7 = ( $9 ? $13 : $14 )
	$6 = ((int_32)$8 != (int_32)[0])
	if ( ($14 == 0) ){ goto $label$12 }
	CALL $430($9)
	
.LABEL $label$12
	CALL eosio_assert($6, $7)
	$14 = *($8 + [10])
	CALL $318(($18 + [240]), [4016], $3, [4032], *(($0 + [4])), [4064])
	$7 = (*($18 + [240]) & [1])
	$6 = *($18 + [248])
	$13 = ( $6 ? $13 : $7 )
	$14 = ((int_32)$14 == (int_32)[1])
	if ( ($7 == 0) ){ goto $label$13 }
	CALL $430($6)
	
.LABEL $label$13
	CALL eosio_assert($14, $13)
	
.LABEL $label$6
	$13 = *(($0 + [4]))
	$14 = *($13 + [144])
	if ( (int_64)(*($14 + [16]) == 0) ){ goto $label$15 }
	if ( $12 ){ goto $label$15 }
	if ( (*($18 + [183]) & [255]) ){ goto $label$14 }
	
.LABEL $label$15
	if ( ((uint_64)$17 <= (uint_64)*($14 + [8])) ){ goto $label$14 }
	CALL eosio_assert(((int_64)*($1 + [8]) == (int_64)*(($13 + [120]))), [4080])
	$2 = *($13 + [112])
	$15 = *($1)
	$13 = *(($0 + [4]))
	*(($14 = (($18 + [120]) + [12]))) = *(($13 + [124]))
	*(($7 = (($18 + [120]) + [8]))) = *(($13 + [120]))
	*($18 + [120]) = *($13 + [112])
	*($18 + [124]) = *(($13 + [116]))
	*((($18 + [40]) + [12])) = *($14)
	*((($18 + [40]) + [8])) = *($7)
	*($18 + [44]) = *($18 + [124])
	*($18 + [40]) = *($18 + [120])
	CALL _Z19EOS_asset_to_stringN5eosio5assetE(($18 + [192]), ($18 + [40]))
	CALL $319(($18 + [240]), [4144], ($18 + [192]))
	$13 = (*($18 + [240]) & [1])
	$1 = *($18 + [248])
	$14 = ( $1 ? (($18 + [240]) | [1]) : $13 )
	$7 = ((int_64)$15 >= (int_64)$2)
	if ( ($13 == 0) ){ goto $label$16 }
	CALL $430($1)
	
.LABEL $label$16
	CALL eosio_assert($7, $14)
	if ( ((*($18 + [192]) & [1]) == 0) ){ goto $label$17 }
	CALL $430(*($18 + [200]))
	
.LABEL $label$17
	$2 = (int_64)0
	$7 = ($0 + [4])
	$13 = *($7)
	$15 = *($13 + [112])
	CALL __multi3(($18 + [24]), $15, (int_64)$15 >> (int_64)63), *($13 + [128]), (int_64)0)
	$10 = *(($13 + [120]))
	$17 = *(($18 + [32]))
	$15 = *($18 + [24])
	CALL eosio_assert(( (uint_64)($15 <= (int_64)4611686018427387904) ? ((int_64)$17 < (int_64)0) : (int_64)($17 == 0) ), [2848])
	CALL eosio_assert(( ((uint_64)$15 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$17 > (int_64)-1) : ((int_64)$17 == (int_64)-1) ), [2880])
	CALL eosio_assert([1], [2912])
	CALL eosio_assert([1], [2928])
	$11 = ((int_64)$15 / (int_64)100)
	if ( ((int_64)$15 < (int_64)100) ){ goto $label$18 }
	$15 = (int_64)59
	$13 = [304]
	$16 = (int_64)0
	
.LOOP $label$19:
	$17 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$20 }
	$14 = *($13)
	if ( ((uint_32)(($14 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$14 = ($14 + [165])
	goto $label$21 
	
.LABEL $label$22
	$14 = ( ($14 + [208]) ? [0] : ((($14 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($14 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$20
	$13 = ($13 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$19 }
	*($18 + [104]) = $11
	*($18 + [112]) = $10
	$13 = *(($0 + [4]))
	$2 = *($13 + [136])
	*($18 + [192]) = *($18 + [184])
	CALL $107(($18 + [240]), ($18 + [192]))
	CALL $320(($18 + [88]), [4192], $13, [4256], ($18 + [240]))
	*(($18 + [16])) = *($18 + [112])
	*($18 + [8]) = *($18 + [104])
	CALL _ZN3pvp8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($16, $2, ($18 + [8]), ($18 + [88]))
	if ( ((*($18 + [88]) & [1]) == 0) ){ goto $label$23 }
	CALL $430(*($18 + [96]))
	
.LABEL $label$23
	if ( ((*($18 + [240]) & [1]) == 0) ){ goto $label$18 }
	CALL $430(*($18 + [248]))
	
.LABEL $label$18
	$13 = *($7)
	$2 = *($13 + [112])
	$15 = *(($13 + [120]))
	CALL eosio_assert(((int_64)$10 == (int_64)$15), [4272])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($2 - $11)) > (int_64)-4611686018427387904), [4320])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [4352])
	$13 = *($7)
	CALL eosio_assert(((int_64)$15 == (int_64)*(($13 + [88]))), [4384])
	$2 = ((int_64)*($13 + [80]) + (int_64)$2)
	*($13 + [80]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [4432])
	CALL eosio_assert(((int_64)*($13 + [80]) < (int_64)4611686018427387904), [4464])
	CALL _ZN11CTournament10updateInfoEv($0)
	
.LABEL $label$14
	if ( ($12 == 0) ){ goto $label$25 }
	$15 = *($0 + [16])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [832])
	CALL eosio_assert(((int_32)*($8 + [12]) == (int_32)$5), [880])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$15()), [928])
	*($8 + [10]) = [0]
	$2 = *($8)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [592])
	CALL memcpy(($18 + [304]), $8, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy((($18 + [304]) | [8]), ($8 + [8]), [2])
	CALL eosio_assert([1], [592])
	CALL memcpy((($18 + [304]) | [10]), ($8 + [10]), [2])
	CALL db_update_i64(*($8 + [16]), $15, ($18 + [304]), [12])
	$13 = ($0 + [160])
	if ( (uint_64)($2 <= *($13)) ){ goto $label$26 }
	*($13) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$26
	$2 = *($18 + [184])
	*($18 + [244]) = $3
	*($18 + [240]) = ($18 + [184])
	CALL eosio_assert([1], [832])
	CALL $322(*($18 + [136]), $12, $2, ($18 + [240]))
	$2 = *($12)
	goto $label$24 
	
.LABEL $label$25
	if ( (*($18 + [183]) == 0) ){ goto $label$27 }
	*(($13 = *(($0 + [4]))) + [168]) = ((int_64)*($13 + [168]) + (int_64)1)
	CALL _ZN11CTournament10updateInfoEv($0)
	
.LABEL $label$27
	$2 = *($0 + [16])
	*(($18 + [232])) = [0]
	*($18 + [224]) = (int_64)0
	*($18 + [192]) = (int_64)0
	*($18 + [200]) = (int_64)0
	*($18 + [208]) = (int_64)0
	*($18 + [216]) = (int_64)0
	$8 = ($0 + [24])
	CALL $235(($18 + [240]), $8, $2, ($18 + [192]))
	$13 = *($18 + [224])
	if ( ($13 == 0) ){ goto $label$28 }
	*(($18 + [228])) = $13
	CALL $430($13)
	
.LABEL $label$28
	$2 = ((int_64)*($18 + [264]) + (int_64)1)
	*($18 + [264]) = $2
	$14 = ($0 + [16])
	CALL $237($8, ($18 + [240]), *($14))
	$13 = *($18 + [272])
	if ( ($13 == 0) ){ goto $label$29 }
	*(($18 + [276])) = $13
	CALL $430($13)
	
.LABEL $label$29
	*($18 + [192]) = $2
	*($18 + [200]) = [0]
	$15 = *($14)
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$15()), [528])
	*(($8 = CALL $428([24])) + [12]) = $5
	*(($13 = (($18 + [240]) + [8]))) = *($18 + [200])
	$2 = *($18 + [192])
	*($8) = $2
	*(($14 = ($8 + [8]))) = *($13)
	*($18 + [240]) = $2
	CALL eosio_assert([1], [592])
	CALL memcpy(($18 + [304]), $8, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy((($18 + [304]) | [8]), $14, [2])
	CALL eosio_assert([1], [592])
	CALL memcpy((($18 + [304]) | [10]), ($8 + [10]), [2])
	$2 = *($8)
	$14 = CALL db_store_i64(*(($0 + [152])), (int_64)-2035737192754708480, $15, $2, ($18 + [304]), [12])
	*($8 + [16]) = $14
	$13 = ($0 + [160])
	if ( (uint_64)($2 <= *($13)) ){ goto $label$30 }
	*($13) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$30
	*($18 + [304]) = $8
	$2 = *($8)
	*($18 + [240]) = $2
	*($18 + [328]) = $14
	$12 = ($0 + [172])
	$13 = *($12)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [176]))) ){ goto $label$32 }
	*($13 + [8]) = $2
	*($13 + [16]) = $14
	*($18 + [304]) = [0]
	*($13) = $8
	*($12) = ($13 + [24])
	goto $label$31 
	
.LABEL $label$32
	CALL $162(($0 + [168]), ($18 + [304]), ($18 + [240]), ($18 + [328]))
	
.LABEL $label$31
	$13 = *($18 + [304])
	*($18 + [304]) = [0]
	if ( ($13 == 0) ){ goto $label$33 }
	CALL $430($13)
	
.LABEL $label$33
	$2 = *($18 + [184])
	*($18 + [248]) = $3
	*($18 + [244]) = ($18 + [184])
	*($18 + [252]) = ($18 + [192])
	*($18 + [240]) = $0
	*($18 + [328]) = $2
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$15()), [528])
	*($18 + [304]) = $4
	*($18 + [308]) = ($18 + [240])
	*($18 + [312]) = ($18 + [328])
	$13 = CALL $428([112])
	CALL $163($13)
	*($13 + [88]) = $4
	CALL $321(($18 + [304]), $13)
	*($18 + [320]) = $13
	$2 = *($13)
	*($18 + [304]) = $2
	$12 = *($13 + [92])
	*($18 + [300]) = $12
	$7 = ($0 + [132])
	$14 = *($7)
	if ( ((uint_32)$14 >= (uint_32)*(($0 + [136]))) ){ goto $label$35 }
	*($14 + [8]) = $2
	*($14 + [16]) = $12
	*($18 + [320]) = [0]
	*($14) = $13
	*($7) = ($14 + [24])
	goto $label$34 
	
.LABEL $label$35
	CALL $165(($0 + [128]), ($18 + [320]), ($18 + [304]), ($18 + [300]))
	
.LABEL $label$34
	$14 = *($18 + [320])
	*($18 + [320]) = [0]
	if ( ($14 == 0) ){ goto $label$36 }
	$12 = *(($14 + [52]))
	if ( ($12 == 0) ){ goto $label$37 }
	*(($14 + [56])) = $12
	CALL $430($12)
	
.LABEL $label$37
	$12 = *(($14 + [40]))
	if ( ($12 == 0) ){ goto $label$38 }
	*(($14 + [44])) = $12
	CALL $430($12)
	
.LABEL $label$38
	CALL $430($14)
	
.LABEL $label$36
	$2 = *($13)
	
.LABEL $label$24
	$8 = *($8 + [8])
	$0 = *($0 + [8])
	*(($13 = CALL $428([8]))) = $2
	*($18 + [72]) = $13
	$13 = ($13 + [8])
	*($18 + [80]) = $13
	*($18 + [76]) = $13
	CALL _ZN15CTournStructure13AddWizToLevelEiNSt3__16vectorIyNS0_9allocatorIyEEEEb($0, $8, ($18 + [72]), [0])
	$13 = *($18 + [72])
	if ( ($13 == 0) ){ goto $label$39 }
	*($18 + [76]) = $13
	CALL $430($13)
	
.LABEL $label$39
	*([0] + [4]) = ($18 + [336])
}

void .FUNC _ZN11CTournament10enter_userEN5eosio5assetEyRK12fight_wizardRb (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [208])
	*([0] + [4]) = $15
	*($5) = [1]
	$6 = ($1 + [64])
	*($15 + [88]) = $6
	$13 = *(*($1 + [4]))
	*(($14 = CALL $428([16])) + [8]) = $3
	*($14) = $13
	$12 = CALL $429([16])
	CALL memcpy($12, $14, [16])
	CALL sha1($12, [16], ($15 + [16]))
	if ( ($12 == 0) ){ goto $label$1 }
	CALL $431($12)
	
.LABEL $label$1
	*($15 + [96]) = *($15 + [16])
	CALL $332(($15 + [144]), ($15 + [88]), ($15 + [96]))
	$12 = [0]
	$8 = *($15 + [148])
	if ( ($8 == 0) ){ goto $label$2 }
	$13 = *($8 + [8])
	$11 = *($8 + [16])
	$7 = *($15 + [96])
	*(($8 = CALL $428([16])) + [8]) = $11
	*($8) = $13
	$9 = CALL $429([16])
	CALL memcpy($9, $8, [16])
	CALL sha1($9, [16], ($15 + [16]))
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $431($9)
	
.LABEL $label$3
	$13 = *($15 + [16])
	if ( ($8 == 0) ){ goto $label$4 }
	CALL $430($8)
	
.LABEL $label$4
	if ( ((int_64)$7 != (int_64)$13) ){ goto $label$2 }
	$12 = *($15 + [148])
	
.LABEL $label$2
	if ( ($14 == 0) ){ goto $label$5 }
	CALL $430($14)
	
.LABEL $label$5
	if ( ($12 == 0) ){ goto $label$10 }
	CALL memcpy(($15 + [16]), $12, [44])
	$1 = [0]
	*(($15 + [68])) = [0]
	*($15 + [60 align=4]) = (int_64)0
	$9 = (($15 + [16]) + [44])
	$8 = (*(($12 + [48])) - *($12 + [44]))
	$14 = int_32($8 >> [3])
	if ( ($14 == 0) ){ goto $label$13 }
	if ( ((uint_32)$14 >= (uint_32)[536870912]) ){ goto $label$6 }
	$1 = CALL $428($8)
	*(($6 = (($15 + [16]) + [44]))) = $1
	*(($15 + [68])) = ($1 + ($14 << [3]))
	*(($14 = (($15 + [16]) + [48]))) = $1
	$10 = *(($12 + [44]))
	$8 = (*(($12 + [48])) - $10)
	if ( ((int_32)$8 <= (int_32)[0]) ){ goto $label$13 }
	CALL memcpy($1, $10, $8)
	$1 = (*($14) + $8)
	*($14) = $1
	*($15 + [72]) = *($12 + [56])
	$14 = *($6)
	if ( ((int_32)$14 == (int_32)$1) ){ goto $label$14 }
	$13 = *($4)
	
.LOOP $label$15:
	if ( ((int_64)*($14) == (int_64)$13) ){ goto $label$12 }
	$14 = ($14 + [8])
	if ( ((int_32)$1 != (int_32)$14) ){ goto $label$15 }
	
.LABEL $label$14
	*($5) = [1]
	goto $label$11 
	
.LABEL $label$13
	*($15 + [72]) = *($12 + [56])
	$14 = $1
	
.LABEL $label$12
	*($5) = ((int_32)$14 == (int_32)$1)
	if ( ((int_32)$14 != (int_32)$1) ){ goto $label$8 }
	
.LABEL $label$11
	if ( ((int_32)$1 == (int_32)*(($15 + [68]))) ){ goto $label$9 }
	*(($15 + [64])) = ($1 + [8])
	*($1) = *($4)
	goto $label$8 
	
.LABEL $label$10
	*(($14 = *(($1 + [4]))) + [176]) = ((int_64)*($14 + [176]) + (int_64)1)
	CALL _ZN11CTournament10updateInfoEv($1)
	*(($15 + [48])) = (int_64)1398362884
	*($15 + [40]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$13 = (int_64)5462355
	$14 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$12 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$12 = [0]
	
.LABEL $label$16
	CALL eosio_assert($12, [1120])
	*(($15 + [68])) = [0]
	*($15 + [60 align=4]) = (int_64)0
	*($15 + [72]) = (int_64)0
	$13 = *($1 + [16])
	*(($15 + [136])) = [0]
	*($15 + [128]) = (int_64)0
	*($15 + [96]) = (int_64)0
	*($15 + [104]) = (int_64)0
	*($15 + [112]) = (int_64)0
	*($15 + [120]) = (int_64)0
	$12 = ($1 + [24])
	CALL $235(($15 + [144]), $12, $13, ($15 + [96]))
	$14 = *($15 + [128])
	if ( ($14 == 0) ){ goto $label$21 }
	*(($15 + [132])) = $14
	CALL $430($14)
	
.LABEL $label$21
	$13 = ((int_64)*($15 + [152]) + (int_64)1)
	*($15 + [152]) = $13
	CALL $237($12, ($15 + [144]), *(($1 + [16])))
	$14 = *($15 + [176])
	if ( ($14 == 0) ){ goto $label$22 }
	*(($15 + [180])) = $14
	CALL $430($14)
	
.LABEL $label$22
	$11 = *(*(($1 + [4])))
	*(($15 + [48])) = *(($2 + [8]))
	*($15 + [16]) = $13
	*($15 + [32]) = $3
	*($15 + [24]) = $11
	*($15 + [40]) = *($2)
	*($15 + [56]) = [1]
	$13 = *($4)
	*(($14 = CALL $428([8]))) = $13
	$12 = ($14 + [8])
	$2 = *($15 + [60])
	if ( ($2 == 0) ){ goto $label$23 }
	*(($15 + [64])) = $2
	CALL $430($2)
	*(($15 + [68])) = [0]
	*(($15 + [60])) = (int_64)0
	
.LABEL $label$23
	*(($15 + [64])) = $12
	*(($15 + [60])) = $14
	*(($15 + [68])) = $12
	*($15 + [8]) = ($15 + [16])
	*($15 + [96]) = $3
	CALL eosio_assert(((int_64)*(($1 + [64])) == (int_64)CALL $fimport$15()), [528])
	*($15 + [144]) = $6
	*($15 + [148]) = ($15 + [8])
	*($15 + [152]) = ($15 + [96])
	$14 = CALL $428([80])
	CALL $167($14)
	*($14 + [64]) = $6
	CALL $333(($15 + [144]), $14)
	*($15 + [200]) = $14
	$13 = *($14)
	*($15 + [144]) = $13
	$2 = *($14 + [68])
	*($15 + [196]) = $2
	$8 = ($1 + [92])
	$12 = *($8)
	if ( ((uint_32)$12 >= (uint_32)*(($1 + [96]))) ){ goto $label$25 }
	*($12 + [8]) = $13
	*($12 + [16]) = $2
	*($15 + [200]) = [0]
	*($12) = $14
	*($8) = ($12 + [24])
	goto $label$24 
	
.LABEL $label$25
	CALL $169(($1 + [88]), ($15 + [200]), ($15 + [144]), ($15 + [196]))
	
.LABEL $label$24
	$14 = *($15 + [200])
	*($15 + [200]) = [0]
	if ( ($14 == 0) ){ goto $label$26 }
	$1 = *($14 + [44])
	if ( ($1 == 0) ){ goto $label$27 }
	*(($14 + [48])) = $1
	CALL $430($1)
	
.LABEL $label$27
	CALL $430($14)
	
.LABEL $label$26
	*($0 + [8]) = *(($15 + [56]))
	$14 = *(($15 + [60]))
	$1 = ($15 + [64])
	*($0) = (CASTING uint_64)(uint_32 int_32((*($1) - $14) >> [3]))
	if ( ($14 == 0) ){ goto $label$7 }
	*($1) = $14
	CALL $430($14)
	goto $label$7 
	
.LABEL $label$9
	CALL $185($9, $4)
	
.LABEL $label$8
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($15 + [48]))), [4384])
	$13 = ((int_64)*($15 + [40]) + (int_64)*($2))
	*($15 + [40]) = $13
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [4432])
	CALL eosio_assert(((int_64)*($15 + [40]) < (int_64)4611686018427387904), [4464])
	*($15 + [56]) = (*($15 + [56]) + [1])
	*($15 + [144]) = ($15 + [16])
	CALL eosio_assert([1], [832])
	CALL $334(*($15 + [88]), $12, $3, ($15 + [144]))
	*($0 + [8]) = *($15 + [56])
	$14 = *(($15 + [60]))
	$1 = ($15 + [64])
	*($0) = (CASTING uint_64)(uint_32 int_32((*($1) - $14) >> [3]))
	if ( ($14 == 0) ){ goto $label$7 }
	*($1) = $14
	CALL $430($14)
	
.LABEL $label$7
	*([0] + [4]) = ($15 + [208])
	return (unreachable)
	
.LABEL $label$6
	CALL $445($9)
}

void .FUNC $317 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$5 = CALL strlen($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [16]) = ($5 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $428($6)
	*($9 + [16]) = ($6 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($8, $1, $5)
	
.LABEL $label$2
	*(($8 + $5)) = [0]
	CALL $330($9, $2, $3, $4)
	$5 = *($9)
	$8 = ($5 & [1])
	$5 = CALL $436(($9 + [16]), ( *($9 + [8]) ? ($9 | [1]) : $8 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $8 ))
	$7 = *($5)
	*($5) = (int_64)0
	*($0) = $7
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($9 + [8])))
	
.LABEL $label$5
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($9 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($9 + [16]))
}

void .FUNC $251 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$6 = *($0 + [4])
	$2 = int_32(($6 - $5) >> [5])
	$3 = ($2 + [1])
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	$4 = [134217727]
	$7 = (*($0 + [8]) - $5)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$4 = int_32($7 >> [4])
	$4 = ( $3 ? $4 : ($4 <= $3) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $428(($4 << [5]))
	$6 = *(($0 + [4]))
	$5 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($3 = ($7 + ($2 << [5])))) = *($1)
	*(($3 + [24])) = *(($1 + [24]))
	*(($3 + [16])) = *(($1 + [16]))
	*(($3 + [8])) = *(($1 + [8]))
	$1 = ($6 - $5)
	$6 = ($3 - $1)
	$4 = ($7 + ($4 << [5]))
	$3 = ($3 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($6, $5, $1)
	$5 = *($0)
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $4
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $430($5)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $250 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

void .FUNC $253 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$5 = CALL strlen($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [16]) = ($5 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $428($6)
	*($9 + [16]) = ($6 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($8, $1, $5)
	
.LABEL $label$2
	*(($8 + $5)) = [0]
	CALL $254($9, $2, $3, $4)
	$5 = *($9)
	$8 = ($5 & [1])
	$5 = CALL $436(($9 + [16]), ( *($9 + [8]) ? ($9 | [1]) : $8 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $8 ))
	$7 = *($5)
	*($5) = (int_64)0
	*($0) = $7
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($9 + [8])))
	
.LABEL $label$5
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($9 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($9 + [16]))
}

void .FUNC $252 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL _ZNSt3__19to_stringEi(($7 + [16]), *($1))
	CALL $253($7, $2, $3, $4, $5)
	$2 = *($7)
	$3 = ($2 & [1])
	$2 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $3 ), ( *($7 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$6 = *($2)
	*($2) = (int_64)0
	*($0) = $6
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$1
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $255 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEi($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

void .FUNC $254 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL _ZNSt3__19to_stringEy(($5 + [16]), *($1))
	CALL $255($5, $2, $3)
	$2 = *($5)
	$3 = ($2 & [1])
	$2 = CALL $436(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $3 ), ( *($5 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$4 = *($2)
	*($2) = (int_64)0
	*($0) = $4
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($5 + [8])))
	
.LABEL $label$1
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($5 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $257 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	*($1) = *(*((*(*($0 + [4])) + [4])))
	$7 = [8]
	$2 = *($0)
	$3 = ($1 + [8])
	CALL $260($3, [0], [0])
	$5 = *($1 + [8])
	$4 = *(($1 + [12]))
	$6 = ($4 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	$7 = (($6 & [-8]) + $7)
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($7)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10) = $9
	*($10 + [8]) = ($9 + $7)
	CALL eosio_assert(((int_32)$7 > (int_32)[7]), [592])
	CALL memcpy($9, $1, [8])
	*($10 + [4]) = ($9 + [8])
	CALL $210($10, $3)
	$8 = *($1)
	*($1 + [24]) = CALL db_store_i64(*($2 + [8]), (int_64)-8524864589369311232, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

void .FUNC _ZN11CTournament10DropWizardERKy (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	$1 = CALL _ZN11CTournament16WizardByWizInTIdERKy($0, $1)
	*((($8 + [8]) + [24])) = *(($1 + [24]))
	*((($8 + [8]) + [16])) = *(($1 + [16]))
	*((($8 + [8]) + [8])) = *(($1 + [8]))
	*($8 + [8]) = *($1)
	CALL $192((($8 + [8]) + [32]), ($1 + [32]))
	*((($8 + [8]) + [72])) = *(($1 + [72]))
	$2 = *(($1 + [80]))
	*($8 + [88]) = $2
	*($8 + [72]) = *($1 + [64])
	$3 = *(($0 + [168]))
	$7 = *(($0 + [172]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$5 = ($1 + [-24])
	$1 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [144])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$5), [320])
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	$7 = CALL db_find_i64(*(($0 + [144])), *(($0 + [152])), (int_64)-2035737192754708480, $2)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $161($5, $7)
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$5), [320])
	
.LABEL $label$3
	$7 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($7, [2608])
	CALL eosio_assert(((int_32)*($1 + [10]) != (int_32)[1]), [2688])
	$6 = *($0 + [16])
	CALL eosio_assert($7, [832])
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$5), [880])
	CALL eosio_assert(((int_64)*(($0 + [144])) == (int_64)CALL $fimport$15()), [928])
	*($1 + [10]) = [1]
	$2 = *($1)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [592])
	CALL memcpy(($8 + [96]), $1, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy((($8 + [96]) | [8]), ($1 + [8]), [2])
	CALL eosio_assert([1], [592])
	CALL memcpy((($8 + [96]) | [10]), ($1 + [10]), [2])
	CALL db_update_i64(*($1 + [16]), $6, ($8 + [96]), [12])
	$1 = ($0 + [160])
	if ( (uint_64)($2 <= *($1)) ){ goto $label$5 }
	*($1) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$1 = *(($8 + [60]))
	if ( ($1 == 0) ){ goto $label$6 }
	*(($8 + [64])) = $1
	CALL $430($1)
	
.LABEL $label$6
	$1 = *(($8 + [48]))
	if ( ($1 == 0) ){ goto $label$7 }
	*(($8 + [52])) = $1
	CALL $430($1)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [112])
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [2]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [2])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$6 }
	$6 = int_32($7 >> [1])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $428(($6 << [2]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = [0]
	$6 = ($6 + [4])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [2]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [2]))
	$2 = ($7 + ($4 << [2]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [4])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [2]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $430($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC _ZN15CTournStructure8block_atEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($5 + [8]) = $2
	CALL $407($0, (*($1) + [184]), $2)
	$0 = *($0 + [4])
	CALL $147(($5 + [16]), [1616], ($5 + [8]))
	$1 = (*($5 + [16]) & [1])
	$3 = *($5 + [24])
	$4 = ( $3 ? (($5 + [16]) | [1]) : $1 )
	$0 = ((int_32)$0 != (int_32)[0])
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $430($3)
	
.LABEL $label$1
	CALL eosio_assert($0, $4)
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [2])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $181($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [2]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	$2 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*($2) - $7) > (uint_32)[3]), [816])
	CALL memcpy($4, *($5), [4])
	$7 = (*($5) + [4])
	*($5) = $7
	$4 = ($4 + [4])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $428([48])) + [32]) = $0
	CALL $158(($8 + [32]), $6)
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $159(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $139 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $430($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC $428 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [16700])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $369 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL $371(*($1), *($0))
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($0 + [32]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($0 + [40]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($0 + [48]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	*($3 + [8]) = $0
	CALL $372(($3 + [8]), $1)
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $269 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $124($0, ($1 + [48]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN11CTournament9ClearDataEyth (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	*([0] + [4]) = $16
	CALL eosio_assert(((int_64)*(*($0 + [4]) + [72]) != (int_64)0), [1456])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1488])
	if ( ((uint_32)$3 > (uint_32)[4]) ){ goto $label$1 }
	goto $label$38 
	
.LABEL $label$38
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$29 }
	*(($16 + [40])) = (int_64)1398362884
	*($16 + [32]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$11 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$39:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$40 }
	
.LOOP $label$41:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$41 }
	
.LABEL $label$40
	$5 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$39 }
	goto $label$32 
	
.LABEL $label$37
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$28 }
	*(($16 + [48])) = (int_64)0
	*(($16 + [56])) = (int_64)0
	*(($16 + [64])) = (int_64)0
	*(($16 + [80])) = (int_64)1398362884
	*($16 + [72]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$11 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$31 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$5 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$42 }
	goto $label$30 
	
.LABEL $label$36
	$11 = *(*(($0 + [4])))
	$9 = *(($0 + [328]))
	$8 = *(($0 + [332]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$45 }
	$3 = ($8 + [-24])
	$6 = ([0] - $9)
	
.LOOP $label$46:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$45 }
	$8 = $3
	$5 = ($3 + [-24])
	$3 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$46 }
	
.LABEL $label$45
	$14 = ($0 + [304])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$26 }
	$3 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$14), [320])
	if ( $3 ){ goto $label$25 }
	goto $label$17 
	
.LABEL $label$35
	$11 = *(*(($0 + [4])))
	$9 = *(($0 + [288]))
	$8 = *(($0 + [292]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$47 }
	$3 = ($8 + [-24])
	$6 = ([0] - $9)
	
.LOOP $label$48:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$47 }
	$8 = $3
	$5 = ($3 + [-24])
	$3 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$48 }
	
.LABEL $label$47
	$14 = ($0 + [264])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$24 }
	$3 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [20]) == (int_32)$14), [320])
	if ( $3 ){ goto $label$23 }
	goto $label$14 
	
.LABEL $label$34
	CALL _ZN15CTournStructure14ClearStructureEv(*($0 + [8]))
	goto $label$1 
	
.LABEL $label$33
	$5 = [0]
	
.LABEL $label$32
	CALL eosio_assert($5, [1120])
	*(($16 + [60])) = [0]
	$11 = (int_64)0
	*($16 + [52 align=4]) = (int_64)0
	*($16 + [64]) = (int_64)0
	$4 = *($0 + [16])
	$10 = (int_64)59
	$3 = [1520]
	$12 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$54 }
	$5 = *($3)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$5 = ($5 + [165])
	goto $label$52 
	
.LABEL $label$54
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$50
	$3 = ($3 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$49 }
	$8 = CALL db_lowerbound_i64($4, $4, $12, $1)
	$1 = *(($0 + [16]))
	$11 = (int_64)0
	$10 = (int_64)59
	$3 = [1520]
	$12 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$60 }
	$5 = *($3)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$5 = ($5 + [165])
	goto $label$58 
	
.LABEL $label$60
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$56
	$3 = ($3 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$55 }
	if ( ((int_32)$8 != (int_32)CALL db_end_i64($1, $1, $12)) ){ goto $label$22 }
	$5 = ($0 + [64])
	$11 = (int_64)65535
	goto $label$21 
	
.LABEL $label$31
	$5 = [0]
	
.LABEL $label$30
	CALL eosio_assert($5, [1120])
	$4 = *($0 + [16])
	$11 = (int_64)0
	$10 = (int_64)59
	$3 = [1568]
	$12 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$66 }
	$5 = *($3)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$5 = ($5 + [165])
	goto $label$64 
	
.LABEL $label$66
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$62
	$3 = ($3 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$61 }
	$8 = CALL db_lowerbound_i64($4, $4, $12, $1)
	$1 = *(($0 + [16]))
	$11 = (int_64)0
	$10 = (int_64)59
	$3 = [1568]
	$12 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$11 > (uint_64)(int_64)10) ){ goto $label$72 }
	$5 = *($3)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$5 = ($5 + [165])
	goto $label$70 
	
.LABEL $label$72
	$13 = (int_64)0
	if ( ((int_64)$11 == (int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$68
	$3 = ($3 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$12 = ((int_64)$13 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)1)
	if ( ((int_64)$11 != (int_64)13) ){ goto $label$67 }
	$11 = (int_64)65535
	if ( ((int_32)$8 == (int_32)CALL db_end_i64($1, $1, $12)) ){ goto $label$73 }
	CALL db_get_i64($8, ($16 + [8]), [88])
	$11 = *($16 + [8])
	CALL prints([1536])
	CALL printui($11)
	$3 = *(($16 + [60]))
	if ( ($3 == 0) ){ goto $label$73 }
	*(($16 + [64])) = $3
	CALL $430($3)
	
.LABEL $label$73
	$3 = *(($16 + [48]))
	if ( ($3 == 0) ){ goto $label$74 }
	*(($16 + [52])) = $3
	CALL $430($3)
	
.LABEL $label$74
	$5 = ($0 + [104])
	if ( (int_64)($11 == 0) ){ goto $label$27 }
	$9 = *(($0 + [128]))
	$6 = *(($0 + [132]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$75 }
	$3 = ($6 + [-24])
	$14 = ([0] - $9)
	
.LOOP $label$76:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$75 }
	$6 = $3
	$8 = ($3 + [-24])
	$3 = $8
	if ( ((int_32)($8 + $14) != (int_32)[-24]) ){ goto $label$76 }
	
.LABEL $label$75
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$10 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$5), [320])
	if ( $6 ){ goto $label$3 }
	goto $label$9 
	
.LABEL $label$29
	$5 = ($0 + [64])
	goto $label$20 
	
.LABEL $label$28
	$5 = ($0 + [104])
	
.LABEL $label$27
	$11 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($0 + [104]), *(($0 + [112])), (int_64)-2035932804877062144, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$13 }
	$6 = CALL $134($5, $3)
	goto $label$3 
	
.LABEL $label$26
	$3 = CALL db_find_i64(*(($0 + [304])), *(($0 + [312])), (int_64)-7297066292185632768, $11)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$17 }
	CALL eosio_assert(((int_32)*(CALL $138($14, $3) + [32]) == (int_32)$14), [320])
	
.LABEL $label$25
	$11 = *(*(($0 + [4])))
	$9 = *(($0 + [328]))
	$8 = *(($0 + [332]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$77 }
	$3 = ($8 + [-24])
	$6 = ([0] - $9)
	
.LOOP $label$78:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$77 }
	$8 = $3
	$5 = ($3 + [-24])
	$3 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$78 }
	
.LABEL $label$77
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$19 }
	$3 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$14), [320])
	goto $label$18 
	
.LABEL $label$24
	$3 = CALL db_find_i64(*(($0 + [264])), *(($0 + [272])), (int_64)-8524864589369311232, $11)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert(((int_32)*(CALL $140($14, $3) + [20]) == (int_32)$14), [320])
	
.LABEL $label$23
	$11 = *(*(($0 + [4])))
	$9 = *(($0 + [288]))
	$8 = *(($0 + [292]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$79 }
	$3 = ($8 + [-24])
	$6 = ([0] - $9)
	
.LOOP $label$80:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$79 }
	$8 = $3
	$5 = ($3 + [-24])
	$3 = $5
	if ( ((int_32)($5 + $6) != (int_32)[-24]) ){ goto $label$80 }
	
.LABEL $label$79
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$16 }
	$3 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [20]) == (int_32)$14), [320])
	goto $label$15 
	
.LABEL $label$22
	CALL db_get_i64($8, ($16 + [8]), [64])
	$11 = *($16 + [8])
	CALL prints([1536])
	CALL printui($11)
	$3 = *(($16 + [52]))
	if ( ($3 == 0) ){ goto $label$81 }
	*(($16 + [56])) = $3
	CALL $430($3)
	
.LABEL $label$81
	$5 = ($0 + [64])
	if ( (int_64)($11 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	$9 = *(($0 + [88]))
	$6 = *(($0 + [92]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$82 }
	$3 = ($6 + [-24])
	$14 = ([0] - $9)
	
.LOOP $label$83:
	if ( ((int_64)*(*($3)) == (int_64)$11) ){ goto $label$82 }
	$6 = $3
	$8 = ($3 + [-24])
	$3 = $8
	if ( ((int_32)($8 + $14) != (int_32)[-24]) ){ goto $label$83 }
	
.LABEL $label$82
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$12 }
	$6 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$5), [320])
	if ( $6 ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$20
	$11 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($0 + [64]), *(($0 + [72])), (int_64)-5952938580782551040, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$6 = CALL $131($5, $3)
	goto $label$11 
	
.LABEL $label$19
	$3 = [0]
	$5 = CALL db_find_i64(*(($0 + [304])), *(($0 + [312])), (int_64)-7297066292185632768, $11)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$18 }
	$3 = CALL $138($14, $5)
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$14), [320])
	
.LABEL $label$18
	$5 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($5, [448])
	CALL eosio_assert($5, [496])
	$5 = CALL db_next_i64(*($3 + [36]), ($16 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$84 }
	CALL $138($14, $5)
	
.LABEL $label$84
	CALL $139($14, $3)
	
.LABEL $label$17
	CALL _ZN11CTournament9SendClearEyth($0, (int_64)0, $2, [3])
	goto $label$1 
	
.LABEL $label$16
	$3 = [0]
	$5 = CALL db_find_i64(*(($0 + [264])), *(($0 + [272])), (int_64)-8524864589369311232, $11)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$15 }
	$3 = CALL $140($14, $5)
	CALL eosio_assert(((int_32)*($3 + [20]) == (int_32)$14), [320])
	
.LABEL $label$15
	$5 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($5, [448])
	CALL eosio_assert($5, [496])
	$5 = CALL db_next_i64(*($3 + [24]), ($16 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$85 }
	CALL $140($14, $5)
	
.LABEL $label$85
	CALL $141($14, $3)
	
.LABEL $label$14
	CALL _ZN11CTournament9SendClearEyth($0, (int_64)0, $2, [4])
	goto $label$1 
	
.LABEL $label$13
	$15 = [2]
	goto $label$2 
	
.LABEL $label$12
	$3 = CALL db_find_i64(*($0 + [64]), *(($0 + [72])), (int_64)-5952938580782551040, $11)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$7 }
	$6 = CALL $131($5, $3)
	CALL eosio_assert(((int_32)*($6 + [64]) == (int_32)$5), [320])
	
.LABEL $label$11
	$8 = ($0 + [4])
	$14 = [0]
	
.LOOP $label$86:
	if ( ((int_32)$14 >= (int_32)$2) ){ goto $label$8 }
	if ( ((int_64)*($6 + [8]) != (int_64)*(*($8))) ){ goto $label$89 }
	$3 = $6
	goto $label$88 
	
.LABEL $label$89
	$3 = $6
	
.LOOP $label$90:
	CALL eosio_assert([1], [496])
	$3 = CALL db_next_i64(*($3 + [68]), ($16 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$87 }
	$3 = CALL $131($5, $3)
	if ( ((int_64)*($3 + [8]) != (int_64)*(*($8))) ){ goto $label$90 }
	
.LABEL $label$88
	$6 = [0]
	$9 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($9, [448])
	CALL eosio_assert($9, [496])
	$9 = CALL db_next_i64(*($3 + [68]), ($16 + [8]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$91 }
	$6 = CALL $131($5, $9)
	
.LABEL $label$91
	CALL $132($5, $3)
	$14 = ($14 + [1])
	if ( $6 ){ goto $label$86 }
	goto $label$5 
	
.LABEL $label$87
	$6 = [0]
	if ( ($14 == 0) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$10
	$3 = CALL db_find_i64(*(($0 + [104])), *(($0 + [112])), (int_64)-2035932804877062144, $11)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$9 }
	$6 = CALL $134($5, $3)
	CALL eosio_assert(((int_32)*($6 + [88]) == (int_32)$5), [320])
	goto $label$3 
	
.LABEL $label$9
	$15 = [2]
	$11 = (int_64)0
	goto $label$2 
	
.LABEL $label$8
	$2 = *($6)
	if ( $14 ){ goto $label$5 }
	
.LABEL $label$7
	$11 = (int_64)0
	
.LABEL $label$6
	$3 = [1]
	goto $label$4 
	
.LABEL $label$5
	$11 = *($6)
	$3 = [0]
	
.LABEL $label$4
	CALL _ZN11CTournament9SendClearEyth($0, $11, ($2 & [65535]), $3)
	goto $label$1 
	
.LABEL $label$3
	$15 = [2]
	$11 = (int_64)0
	if ( ($2 == 0) ){ goto $label$2 }
	$14 = ($0 + [144])
	$8 = ($0 + [4])
	$9 = [0]
	
.LOOP $label$92:
	if ( ((int_64)*($6 + [8]) != (int_64)*(*($8))) ){ goto $label$94 }
	$3 = $6
	goto $label$93 
	
.LABEL $label$94
	$3 = $6
	
.LOOP $label$95:
	CALL eosio_assert([1], [496])
	$3 = CALL db_next_i64(*($3 + [92]), ($16 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $134($5, $3)
	if ( ((int_64)*($3 + [8]) != (int_64)*(*($8))) ){ goto $label$95 }
	
.LABEL $label$93
	CALL $136($14, CALL $135($14, *($3 + [80]), [1584]))
	$6 = [0]
	$7 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($7, [448])
	CALL eosio_assert($7, [496])
	$7 = CALL db_next_i64(*($3 + [92]), ($16 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$96 }
	$6 = CALL $134($5, $7)
	
.LABEL $label$96
	CALL $137($5, $3)
	if ( ($6 == 0) ){ goto $label$97 }
	$9 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)$2) ){ goto $label$92 }
	
.LABEL $label$97
	$11 = *($6)
	$15 = [1]
	
.LABEL $label$2
	CALL _ZN11CTournament9SendClearEyth($0, $11, $2, ($15 & [255]))
	
.LABEL $label$1
	*([0] + [4]) = ($16 + [96])
	$3
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $428([80])
	$4 = CALL $167($6)
	*($6 + [64]) = $0
	CALL $168(($8 + [32]), $4)
	*($6 + [72]) = [-1]
	*($6 + [68]) = $1
	*($6 + [76]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [68])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $169(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [44])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [48])) = $7
	CALL $430($7)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [44])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [48])) = $6
	CALL $430($6)
	
.LABEL $label$7
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [44])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [48])) = $6
	CALL $430($6)
	
.LABEL $label$10
	CALL $430($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
	$7 = *(($1 + [72]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5952938580782551040, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	$7 = *(($1 + [76]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5952938580782551039, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx64_remove($7)
	
.LABEL $label$13
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN11CTournament9SendClearEyth (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [176])
	*([0] + [4]) = $13
	$9 = CALL current_time()
	*(($13 + [108])) = [0]
	*(($13 + [112])) = [0]
	*($13 + [92]) = [0]
	*($13 + [96]) = [0]
	*($13 + [100]) = [0]
	*($13 + [104]) = [0]
	*($13 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000)) + [60])
	*($13 + [116]) = [0]
	*(($13 + [120])) = [0]
	*(($13 + [124])) = [0]
	*($13 + [128]) = [0]
	*(($13 + [132])) = [0]
	*(($13 + [136])) = [0]
	$5 = ($13 + [116])
	$4 = *($0 + [16])
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1232]
	$10 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$9 > (uint_64)(int_64)5) ){ goto $label$6 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$6 = ($6 + [165])
	goto $label$4 
	
.LABEL $label$6
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [1824]
	$12 = (int_64)0
	
.LOOP $label$7:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$8 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$6 = ($6 + [165])
	goto $label$9 
	
.LABEL $label$10
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$8
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$8 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$7 }
	*($13 + [16]) = $1
	*($13 + [8]) = *(*($0 + [4]))
	*($13 + [24]) = $2
	*($13 + [26]) = $3
	*($13 + [40]) = $12
	*($13 + [32]) = $4
	*(($7 = CALL $428([16]))) = $4
	*($7 + [8]) = $10
	*(($6 = ($13 + [64]))) = [0]
	$2 = ($7 + [16])
	*(($13 + [56])) = $2
	*(($13 + [52])) = $2
	*($13 + [48]) = $7
	*($13 + [60]) = [0]
	*(($13 + [68])) = [0]
	CALL $76(($13 + [60]), [19])
	$7 = *($6)
	$2 = *($13 + [60])
	*($13 + [148]) = $2
	*($13 + [144]) = $2
	*($13 + [152]) = $7
	*($13 + [160]) = ($13 + [144])
	*($13 + [168]) = ($13 + [8])
	CALL $166(($13 + [168]), ($13 + [160]))
	CALL $86($5, ($13 + [32]))
	$7 = *($13 + [60])
	if ( ($7 == 0) ){ goto $label$11 }
	*($6) = $7
	CALL $430($7)
	
.LABEL $label$11
	$7 = *($13 + [48])
	if ( ($7 == 0) ){ goto $label$12 }
	*(($13 + [52])) = $7
	CALL $430($7)
	
.LABEL $label$12
	*(($13 + [100])) = [1]
	$12 = *(($0 + [16]))
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [1824]
	$10 = (int_64)0
	
.LOOP $label$13:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$14 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$6 = ($6 + [165])
	goto $label$15 
	
.LABEL $label$16
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$14
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$8 | (int_64)$10)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$13 }
	$9 = *(*(($0 + [4])))
	*($13 + [40]) = (int_64)0
	$9 = ((int_64)$9 + (int_64)((int_64)$10 + (int_64)$12))
	*($13 + [32]) = $9
	CALL cancel_deferred(($13 + [32]))
	*($13 + [40]) = (int_64)0
	*($13 + [32]) = $9
	$9 = *(($0 + [16]))
	CALL $87(($13 + [8]), ($13 + [80]))
	$7 = *($13 + [8])
	CALL send_deferred(($13 + [32]), $9, $7, (*($13 + [12]) - $7), [0])
	$7 = *($13 + [8])
	if ( ($7 == 0) ){ goto $label$17 }
	*($13 + [12]) = $7
	CALL $430($7)
	
.LABEL $label$17
	CALL $65(($13 + [80]))
	*([0] + [4]) = ($13 + [176])
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [784])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $428([112])
	$4 = CALL $163($6)
	*($6 + [88]) = $0
	CALL $164(($8 + [32]), $4)
	*($6 + [96]) = [-1]
	*($6 + [92]) = $1
	*($6 + [100]) = [-1]
	*($6 + [104]) = [-1]
	*($6 + [108]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $165(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *(($4 + [52]))
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [56])) = $7
	CALL $430($7)
	
.LABEL $label$10
	$7 = *(($4 + [40]))
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [44])) = $7
	CALL $430($7)
	
.LABEL $label$11
	CALL $430($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $135 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [12]) == (int_32)$0), [320])
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-2035737192754708480, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$6 = CALL $161($0, $5)
	CALL eosio_assert(((int_32)*($6 + [12]) == (int_32)$0), [320])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), $2)
	return $6
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $430($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $430($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [16]))
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$3 = *($0 + [24])
	$4 = ($0 + [28])
	$7 = *($4)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$5 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$8 = ($6 + [-24])
	$6 = $8
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [720])
	$8 = ($7 + [-24])
	$6 = *($4)
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$3 = ([0] - $6)
	$6 = $8
	
.LOOP $label$5:
	$8 = ($6 + [24])
	$5 = *($8)
	*($8) = [0]
	$7 = *($6)
	*($6) = $5
	if ( ($7 == 0) ){ goto $label$6 }
	$5 = *(($7 + [52]))
	if ( ($5 == 0) ){ goto $label$7 }
	*(($7 + [56])) = $5
	CALL $430($5)
	
.LABEL $label$7
	$5 = *(($7 + [40]))
	if ( ($5 == 0) ){ goto $label$8 }
	*(($7 + [44])) = $5
	CALL $430($5)
	
.LABEL $label$8
	CALL $430($7)
	
.LABEL $label$6
	*(($6 + [16])) = *(($6 + [40]))
	*(($6 + [8])) = *(($6 + [32]))
	$6 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$10 }
	$5 = *(($6 + [52]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($6 + [56])) = $5
	CALL $430($5)
	
.LABEL $label$11
	$5 = *(($6 + [40]))
	if ( ($5 == 0) ){ goto $label$12 }
	*(($6 + [44])) = $5
	CALL $430($5)
	
.LABEL $label$12
	CALL $430($6)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $160(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]))
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN3pvp10cleanwizcdEt (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	$5 = CALL db_lowerbound_i64(*($0 + [136]), *(($0 + [144])), (int_64)-1734277135947792384, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [136])
	$5 = CALL $358($2, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [144])
	$4 = ($0 + [136])
	
.LOOP $label$2:
	if ( ((uint_64)*($5 + [16]) > (uint_64)CALL current_time()) ){ goto $label$1 }
	CALL eosio_assert([1], [448])
	CALL eosio_assert([1], [496])
	$0 = CALL db_next_i64(*($5 + [28]), ($6 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	CALL $358($2, $0)
	
.LABEL $label$3
	CALL $359($2, $5)
	$5 = CALL db_lowerbound_i64(*($4), *($3), (int_64)-1734277135947792384, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $358($2, $5)
	$1 = ($1 + [-1])
	if ( ($1 & [65535]) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $368 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL _ZNSt3__19to_stringEy(($6 + [16]), *($1))
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$1 = CALL strlen($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($6) = ($1 << [1])
	$4 = ($6 | [1])
	$5 = $4
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($1 + [16]) & [-16])
	$5 = CALL $428($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $1
	$4 = ($6 | [1])
	
.LABEL $label$3
	CALL memcpy($5, $2, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	$1 = *($6)
	$5 = ($1 & [1])
	$1 = CALL $436(($6 + [16]), ( *($6 + [8]) ? $4 : $5 ), ( *($6 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$3 = *($1)
	*($1) = (int_64)0
	*($0) = $3
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($6 + [8])))
	
.LABEL $label$5
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($6 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432($6)
}

int_32 .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $210($0, ($1 + [184]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $124(CALL $124($0, ($1 + [8])), ($1 + [20]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $301($0, ($1 + [96]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [136]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $210($0, ($1 + [144]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [156]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [160]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [164]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [168]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [176]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $429 (int_32 $0)
{
	return CALL $428($0)
}

int_32 .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$4 = (*($0 + [4]) + [8])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$5 = (*($0 + [4]) + [8])
	*($0 + [4]) = $5
	$6 = (CASTING uint_64)(uint_32 int_32((*(($1 + [20])) - *($1 + [16])) >> [5]))
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [592])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $3 ){ goto $label$1 }
	$5 = *(($1 + [20]))
	$4 = *(($1 + [16]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL $209($0, $4)
	$4 = ($4 + [32])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $209 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $202 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [16])
	$14 = $15
	*([0] + [4]) = $15
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$4 = *($1)
	$13 = $4
	if ( (*(*($3)) == 0) ){ goto $label$1 }
	$11 = [0]
	$8 = ($3 + [4])
	$9 = ($1 + [8])
	$10 = ($1 + [12])
	
.LOOP $label$2:
	$12 = *($9)
	$5 = *($8)
	$6 = *($5 + [4])
	if ( ((int_32)$6 == (int_32)*($5 + [8])) ){ goto $label$4 }
	*(($5 + [4])) = ($6 + [8])
	*($6) = *($12)
	goto $label$3 
	
.LABEL $label$4
	CALL $185($5, $12)
	$12 = *($9)
	
.LABEL $label$3
	$6 = ($12 + [8])
	$7 = (*($10) - $6)
	$5 = int_32($7 >> [3])
	if ( ($5 == 0) ){ goto $label$5 }
	CALL memmove($12, $6, $7)
	
.LABEL $label$5
	*($10) = ($12 + ($5 << [3]))
	$11 = ($11 + [1])
	if ( ($11 <= *(*($3))) ){ goto $label$2 }
	$13 = *($1)
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)$13), [992])
	$12 = [8]
	$11 = ($1 + [8])
	$6 = *($1 + [8])
	$5 = *(($1 + [12]))
	$10 = ($5 - $6)
	$13 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	
.LOOP $label$6:
	$12 = ($12 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$7 }
	$12 = (($10 & [-8]) + $12)
	
.LABEL $label$7
	$6 = ($12 + [8])
	if ( ($6 <= [513]) ){ goto $label$9 }
	$5 = CALL malloc($6)
	goto $label$8 
	
.LABEL $label$9
	$5 = ($15 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$8
	*($14) = $5
	*($14 + [8]) = ($5 + $6)
	CALL eosio_assert(((int_32)($12 + [8]) > (int_32)[7]), [592])
	CALL memcpy($5, $1, [8])
	*($14 + [4]) = ($5 + [8])
	$12 = CALL $210($14, $11)
	CALL eosio_assert(((int_32)(*($12 + [8]) - *($12 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($12 + [4]), ($1 + [24]), [8])
	*($12 + [4]) = (*($12 + [4]) + [8])
	CALL db_update_i64(*($1 + [36]), $2, $5, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL free($5)
	
.LABEL $label$10
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($14 + [16])
}

void .FUNC $203 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	*(($10 = $9) + [24]) = *(($1 + [8]))
	$4 = *($1)
	*(($6 = (*($1 + [16]) + (*(*($3)) << [5]))) + [16]) = (int_64))(*($6 + [16]) - *(*(($3 + [4]))))
	CALL eosio_assert([1], [992])
	$5 = *($1 + [16])
	$6 = *(($1 + [20]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [5]))
	$3 = [41]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$3 = (((int_32)uint_32(($7 + [-32]) >> [5]) * (int_32)[25]) + $3)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($3 + [-25])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $3)
	CALL $208(($10 + [8]), $1)
	CALL db_update_i64(*($1 + [32]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($9)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($10 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($10 + [24]), ($10 + [40]), [8]) == 0) ){ goto $label$8 }
	$3 = *($1 + [36])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3659885105376759808, ($10 + [32]), $4)
	*(($1 + [36])) = $3
	
.LABEL $label$9
	CALL db_idx64_update($3, $2, ($10 + [40]))
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC _ZN15CTournStructure16remove_from_headEiiRNSt3__16vectorIyNS0_9allocatorIyEEEE (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	*($11 + [20]) = $1
	*($11 + [16]) = $2
	$8 = *(*(($0 + [8])) + [16])
	$4 = *(($8 + ($1 << [5])) + [16])
	if ( ((uint_64)$4 >= (uint_64)(CASTING int_64)(int_32 $2)) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $4)
	*($11 + [16]) = $2
	
.LABEL $label$1
	if ( ($2 == 0) ){ goto $label$5 }
	$4 = *(($8 + ($1 << [5])))
	*($11 + [24]) = $4
	$6 = *(($5 + [208]))
	$5 = *($0)
	$10 = *(($5 + [212]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$6 }
	$1 = ($10 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$7:
	if ( ((int_64)*(*($1)) == (int_64)$4) ){ goto $label$6 }
	$10 = $1
	$8 = ($1 + [-24])
	$1 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = ($5 + [184])
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$4 }
	$1 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$7), [320])
	goto $label$3 
	
.LABEL $label$5
	$1 = [0]
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	$8 = CALL db_find_i64(*(($5 + [184])), *(($5 + [192])), (int_64)-3659885401779982336, $4)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $146($7, $8)
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$7), [320])
	
.LABEL $label$3
	CALL $147(($11 + [32]), [1616], ($11 + [24]))
	$10 = (*($11 + [32]) & [1])
	$6 = *($11 + [40])
	$5 = ( $6 ? (($11 + [32]) | [1]) : $10 )
	$8 = ((int_32)$1 != (int_32)[0])
	if ( ($10 == 0) ){ goto $label$8 }
	CALL $430($6)
	$2 = *($11 + [16])
	
.LABEL $label$8
	CALL eosio_assert($8, $5)
	$6 = *($1 + [8])
	$5 = *(($1 + [12]))
	$10 = int_32(($5 - $6) >> [3])
	*($11 + [12]) = $10
	if ( ((uint_32)$10 <= (uint_32)$2) ){ goto $label$9 }
	$4 = *($0 + [16])
	$10 = *($0)
	*($11 + [36]) = $3
	*($11 + [32]) = ($11 + [16])
	CALL eosio_assert($8, [832])
	CALL $202(($10 + [184]), $1, $4, ($11 + [32]))
	$1 = *(($0 + [8]))
	$4 = *($0 + [16])
	$8 = *($0 + [12])
	*($11 + [36]) = ($11 + [16])
	*($11 + [32]) = ($11 + [20])
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [832])
	CALL $203($8, $1, $4, ($11 + [32]))
	$1 = *($11 + [16])
	goto $label$2 
	
.LABEL $label$9
	$4 = *($1 + [24])
	*($11 + [24]) = $4
	CALL $204($3, *($3 + [4]), $6, $5)
	$10 = *(($0 + [8]))
	$9 = *($0 + [16])
	$2 = *($0 + [12])
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$11 }
	*($11 + [36]) = ($11 + [24])
	*($11 + [32]) = ($11 + [20])
	*($11 + [40]) = ($11 + [12])
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [832])
	CALL $207($2, $10, $9, ($11 + [32]))
	$10 = *($0)
	CALL eosio_assert($8, [448])
	CALL eosio_assert($8, [496])
	$8 = ($10 + [184])
	$10 = CALL db_next_i64(*($1 + [36]), ($11 + [32]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	CALL $146($7, $10)
	
.LABEL $label$12
	CALL $148($8, $1)
	goto $label$10 
	
.LABEL $label$11
	*($11 + [36]) = ($11 + [12])
	*($11 + [32]) = ($11 + [20])
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [832])
	CALL $205($2, $10, $9, ($11 + [32]))
	$4 = *(($0 + [16]))
	$10 = *($0)
	CALL eosio_assert($8, [832])
	CALL $206(($10 + [184]), $1, $4)
	
.LABEL $label$10
	$1 = *($11 + [12])
	$1 = ($1 + CALL _ZN15CTournStructure16remove_from_headEiiRNSt3__16vectorIyNS0_9allocatorIyEEEE($0, *($11 + [20]), (*($11 + [16]) - $1), $3))
	
.LABEL $label$2
	*([0] + [4]) = ($11 + [48])
	return $1
}

int_32 .FUNC $201 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = ($3 - $2)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$1 }
	$5 = *($0 + [4])
	$10 = *($0 + [8])
	$4 = int_32($10 >> [3])
	if ( ((int_32)$4 <= (int_32)int_32(($10 - $5) >> [3])) ){ goto $label$7 }
	$8 = *($0)
	$5 = (int_32(($5 - $8) >> [3]) + $4)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = ($10 - $8)
	if ( ((uint_32)int_32($4 >> [3]) >= (uint_32)[268435455]) ){ goto $label$6 }
	$10 = int_32(($1 - $8) >> [3])
	$8 = int_32($4 >> [2])
	$5 = ( $5 ? $8 : ($8 <= $5) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ($5 <= [536870912]) ){ goto $label$5 }
	CALL abort()
	
.LABEL $label$7
	$6 = ($5 - $1)
	$10 = int_32($6 >> [3])
	if ( ((int_32)$4 <= (int_32)$10) ){ goto $label$9 }
	$8 = $5
	$9 = ($2 + ($10 << [3]))
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$10 }
	$7 = (($3 + [-8]) - $9)
	$10 = $5
	$8 = $9
	
.LOOP $label$11:
	*($10) = *($8)
	$10 = ($10 + [8])
	$8 = ($8 + [8])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$11 }
	$8 = (($5 + ($7 & [-8])) + [8])
	*(($0 + [4])) = $8
	
.LABEL $label$10
	if ( ((int_32)$6 >= (int_32)[1]) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	$8 = $5
	$9 = $3
	
.LABEL $label$8
	$10 = ($4 << [3])
	$6 = ($8 - ($1 + $10))
	$4 = int_32($6 >> [3])
	$10 = ($8 - $10)
	if ( ((uint_32)$10 >= (uint_32)$5) ){ goto $label$12 }
	$7 = uint_32((($5 - ($4 << [3])) + ((int_32)$1 ^ (int_32)[-1])) >> [3])
	$3 = $8
	
.LOOP $label$13:
	*($3) = *($10)
	$3 = ($3 + [8])
	$10 = ($10 + [8])
	if ( ($10 <= $5) ){ goto $label$13 }
	*(($0 + [4])) = (($8 + ($7 << [3])) + [8])
	
.LABEL $label$12
	if ( ($4 == 0) ){ goto $label$14 }
	CALL memmove(($8 - ($4 << [3])), $1, $6)
	
.LABEL $label$14
	$10 = ($9 - $2)
	if ( ($10 == 0) ){ goto $label$1 }
	CALL memmove($1, $2, $10)
	return $1
	
.LABEL $label$6
	$10 = int_32(($1 - $8) >> [3])
	$5 = [536870911]
	
.LABEL $label$5
	$4 = CALL $428(($5 << [3]))
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	$4 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	$8 = ($4 + ($10 << [3]))
	$10 = $8
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$15 }
	$9 = uint_32((($3 + [-8]) - $2) >> [3])
	$10 = $8
	
.LOOP $label$16:
	*($10) = *($2)
	$10 = ($10 + [8])
	$2 = ($2 + [8])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$16 }
	$10 = (($8 + ($9 << [3])) + [8])
	
.LABEL $label$15
	$5 = ($5 << [3])
	$9 = *($0)
	$2 = ($1 - $9)
	$3 = ($8 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($3, $9, $2)
	
.LABEL $label$17
	$5 = ($4 + $5)
	$4 = ($0 + [4])
	$2 = (*($4) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($10, $1, $2)
	$10 = ($10 + $2)
	
.LABEL $label$18
	*($4) = $10
	$2 = *($0)
	*($0) = $3
	*(($0 + [8])) = $5
	if ( ($2 == 0) ){ goto $label$19 }
	CALL $430($2)
	
.LABEL $label$19
	$1 = $8
	
.LABEL $label$1
	(unreachable)
	(unreachable)
	return $1
}

void .FUNC $206 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$10 = (*([0] + [4]) - [16])
	$11 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	*(($6 = ($1 + [12]))) = *($1 + [8])
	$3 = *($1)
	CALL eosio_assert([1], [992])
	$8 = [8]
	$4 = ($1 + [8])
	$5 = *($1 + [8])
	$6 = *($6)
	$7 = ($6 - $5)
	$9 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	$8 = (($7 & [-8]) + $8)
	
.LABEL $label$2
	$6 = ($8 + [8])
	if ( ($6 <= [513]) ){ goto $label$4 }
	$10 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$10 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$3
	*($11) = $10
	*($11 + [8]) = ($10 + $6)
	CALL eosio_assert(((int_32)($8 + [8]) > (int_32)[7]), [592])
	CALL memcpy($10, $1, [8])
	*($11 + [4]) = ($10 + [8])
	$8 = CALL $210($11, $4)
	CALL eosio_assert(((int_32)(*($8 + [8]) - *($8 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($8 + [4]), ($1 + [24]), [8])
	*($8 + [4]) = (*($8 + [4]) + [8])
	CALL db_update_i64(*($1 + [36]), $2, $10, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [16])
}

void .FUNC $207 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	*(($10 = $9) + [24]) = *(($1 + [8]))
	*((($6 = *($1 + [16])) + (*(*($3)) << [5]))) = *(*($3 + [4]))
	$4 = *($1)
	*(($6 = ($6 + (*(*($3)) << [5]))) + [16]) = (int_64))(*($6 + [16]) - *(*($3 + [8])))
	CALL eosio_assert([1], [992])
	$5 = *($1 + [16])
	$6 = *(($1 + [20]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [5]))
	$3 = [41]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$3 = (((int_32)uint_32(($7 + [-32]) >> [5]) * (int_32)[25]) + $3)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($3 + [-25])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $3)
	CALL $208(($10 + [8]), $1)
	CALL db_update_i64(*($1 + [32]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($9)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($10 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($10 + [24]), ($10 + [40]), [8]) == 0) ){ goto $label$8 }
	$3 = *($1 + [36])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3659885105376759808, ($10 + [32]), $4)
	*(($1 + [36])) = $3
	
.LABEL $label$9
	CALL db_idx64_update($3, $2, ($10 + [40]))
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC $204 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = ($3 - $2)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$8 }
	$5 = *($0 + [4])
	$10 = *($0 + [8])
	$4 = int_32($10 >> [3])
	if ( ((int_32)$4 <= (int_32)int_32(($10 - $5) >> [3])) ){ goto $label$7 }
	$8 = *($0)
	$5 = (int_32(($5 - $8) >> [3]) + $4)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$2 }
	$4 = ($10 - $8)
	if ( ((uint_32)int_32($4 >> [3]) >= (uint_32)[268435455]) ){ goto $label$6 }
	$10 = int_32(($1 - $8) >> [3])
	$8 = int_32($4 >> [2])
	$5 = ( $5 ? $8 : ($8 <= $5) )
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ($5 <= [536870912]) ){ goto $label$5 }
	CALL abort()
	
.LABEL $label$8
	return $1
	
.LABEL $label$7
	$6 = ($5 - $1)
	$10 = int_32($6 >> [3])
	if ( ((int_32)$4 <= (int_32)$10) ){ goto $label$10 }
	$8 = $5
	$9 = ($2 + ($10 << [3]))
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$11 }
	$7 = (($3 + [-8]) - $9)
	$10 = $5
	$8 = $9
	
.LOOP $label$12:
	*($10) = *($8)
	$10 = ($10 + [8])
	$8 = ($8 + [8])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$12 }
	$8 = (($5 + ($7 & [-8])) + [8])
	*(($0 + [4])) = $8
	
.LABEL $label$11
	if ( ((int_32)$6 >= (int_32)[1]) ){ goto $label$9 }
	return $1
	
.LABEL $label$10
	$8 = $5
	$9 = $3
	
.LABEL $label$9
	$10 = ($4 << [3])
	$6 = ($8 - ($1 + $10))
	$4 = int_32($6 >> [3])
	$10 = ($8 - $10)
	if ( ((uint_32)$10 >= (uint_32)$5) ){ goto $label$13 }
	$7 = uint_32((($5 - ($4 << [3])) + ((int_32)$1 ^ (int_32)[-1])) >> [3])
	$3 = $8
	
.LOOP $label$14:
	*($3) = *($10)
	$3 = ($3 + [8])
	$10 = ($10 + [8])
	if ( ($10 <= $5) ){ goto $label$14 }
	*(($0 + [4])) = (($8 + ($7 << [3])) + [8])
	
.LABEL $label$13
	if ( ($4 == 0) ){ goto $label$15 }
	CALL memmove(($8 - ($4 << [3])), $1, $6)
	
.LABEL $label$15
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$4 }
	$3 = ($9 - $2)
	$10 = [0]
	
.LOOP $label$16:
	*(($1 + $10)) = *(($2 + $10))
	$10 = ($10 + [8])
	if ( ((int_32)$3 != (int_32)$10) ){ goto $label$16 }
	return $1
	
.LABEL $label$6
	$10 = int_32(($1 - $8) >> [3])
	$5 = [536870911]
	
.LABEL $label$5
	$4 = CALL $428(($5 << [3]))
	goto $label$1 
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$8 = ($4 + ($10 << [3]))
	$10 = $8
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$17 }
	$9 = uint_32((($3 + [-8]) - $2) >> [3])
	$10 = $8
	
.LOOP $label$18:
	*($10) = *($2)
	$10 = ($10 + [8])
	$2 = ($2 + [8])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$18 }
	$10 = (($8 + ($9 << [3])) + [8])
	
.LABEL $label$17
	$5 = ($5 << [3])
	$9 = *($0)
	$2 = ($1 - $9)
	$3 = ($8 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$19 }
	CALL memcpy($3, $9, $2)
	
.LABEL $label$19
	$5 = ($4 + $5)
	$4 = ($0 + [4])
	$2 = (*($4) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$20 }
	CALL memcpy($10, $1, $2)
	$10 = ($10 + $2)
	
.LABEL $label$20
	*($4) = $10
	$2 = *($0)
	*($0) = $3
	*(($0 + [8])) = $5
	if ( ($2 == 0) ){ goto $label$21 }
	CALL $430($2)
	
.LABEL $label$21
	(unreachable)
	(unreachable)
	return $8
}

void .FUNC $205 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [28]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	*(($10 = $9) + [24]) = *(($1 + [8]))
	$4 = *($1)
	*(($6 = (*($1 + [16]) + (*(*($3)) << [5]))) + [16]) = (int_64))(*($6 + [16]) - *(*(($3 + [4]))))
	CALL eosio_assert([1], [992])
	$5 = *($1 + [16])
	$6 = *(($1 + [20]))
	$7 = ($6 - $5)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [5]))
	$3 = [41]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$3 = (((int_32)uint_32(($7 + [-32]) >> [5]) * (int_32)[25]) + $3)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($3 + [-25])
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($3)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $3)
	CALL $208(($10 + [8]), $1)
	CALL db_update_i64(*($1 + [32]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$6 }
	CALL free($9)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($10 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp(($10 + [24]), ($10 + [40]), [8]) == 0) ){ goto $label$8 }
	$3 = *($1 + [36])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3659885105376759808, ($10 + [32]), $4)
	*(($1 + [36])) = $3
	
.LABEL $label$9
	CALL db_idx64_update($3, $2, ($10 + [40]))
	
.LABEL $label$8
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC _Z7getLog2m (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = [0]
	
.LOOP $label$1:
	$1 = $2
	$2 = ($1 + [1])
	$0 = uint_32($0 >> [1])
	if ( $0 ){ goto $label$1 }
	return ($1 & [255])
}

int_64 .FUNC _Z7getPow2h (int_32 $0)
{
	return (CASTING int_64)(int_32 ([1] << $0))
}

int_64 .FUNC _Z18getFilterWithHash2yyhh (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*($4 + [72]) = $0
	*($4 + [64]) = $1
	*($4 + [63]) = $2
	*($4 + [62]) = $3
	CALL memcpy(($4 + [32]), ($4 + [72]), [8])
	CALL memcpy((($4 + [32]) | [8]), ($4 + [64]), [8])
	CALL memcpy(($4 + [48]), ($4 + [62]), [1])
	CALL memcpy(($4 + [49]), ($4 + [63]), [1])
	CALL sha1(($4 + [32]), [18], $4)
	$1 = *($4)
	*([0] + [4]) = ($4 + [80])
	return $1
}

void .FUNC _Z6formatv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL strlen([16])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($1 << [1])
	$3 = ($0 + [1])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$2 = (($1 + [16]) & [-16])
	$3 = CALL $428($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $3
	*($0 + [4]) = $1
	
.LABEL $label$3
	CALL memcpy($3, [16], $1)
	
.LABEL $label$2
	*(($3 + $1)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL $432($0)
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_64 .FUNC _Z13getVectorHashNSt3__16vectorIyNS_9allocatorIyEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$2 = (*($0 + [4]) - *($0))
	$1 = CALL $429($2)
	CALL memcpy($1, *($0), $2)
	CALL sha1($1, $2, $4)
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $431($1)
	
.LABEL $label$1
	$3 = *($4)
	*([0] + [4]) = ($4 + [32])
	return $3
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $14 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $395($0, $1)
	*(($2 = ($0 + [64]))) = [0]
	*($0 + [56 align=4]) = (int_64)0
	$3 = CALL $428([3])
	*($0 + [56]) = $3
	*($3) = [4366]
	*($3 + [2]) = [15]
	*($0 + [68]) = [0]
	$3 = ($3 + [3])
	*($2) = $3
	*(($0 + [60])) = $3
	*(($2 = ($0 + [72]))) = [0]
	*(($4 = ($0 + [76]))) = [0]
	$3 = CALL $428([3])
	*($0 + [68]) = $3
	*($3) = [3083]
	*($3 + [2]) = [13]
	*($0 + [80]) = [0]
	$3 = ($3 + [3])
	*($4) = $3
	*($2) = $3
	*(($2 = ($0 + [84]))) = [0]
	*(($4 = ($0 + [88]))) = [0]
	$3 = CALL $428([3])
	*($0 + [80]) = $3
	*($3) = [4106]
	*($3 + [2]) = [18]
	$3 = ($3 + [3])
	*($4) = $3
	*($2) = $3
	$1 = *($0)
	*($0 + [96]) = $1
	*(($0 + [104])) = $1
	*(($0 + [112])) = (int_64)-1
	*(($0 + [120])) = [0]
	*(($0 + [124])) = [0]
	*(($0 + [128])) = [0]
	*(($0 + [132])) = [0]
	*($0 + [136]) = $1
	*(($0 + [144])) = $1
	*(($0 + [152])) = (int_64)-1
	*(($0 + [160])) = [0]
	*(($0 + [164])) = [0]
	*(($0 + [168])) = [0]
	*(($0 + [172])) = [0]
	*($0 + [176]) = $1
	*(($0 + [184])) = $1
	*(($0 + [192])) = (int_64)-1
	*(($0 + [200])) = [0]
	*(($0 + [204])) = [0]
	*(($0 + [208])) = [0]
	*($0 + [216]) = $1
	*(($0 + [224])) = $1
	*(($0 + [232])) = (int_64)-1
	*(($0 + [240])) = [0]
	*(($0 + [244])) = [0]
	*(($0 + [248])) = [0]
	*(($0 + [252])) = [0]
	*($0 + [256]) = $1
	*(($0 + [264])) = $1
	*(($0 + [272])) = (int_64)-1
	*(($0 + [280])) = [0]
	*(($0 + [284])) = [0]
	*(($0 + [288])) = [0]
	*($0 + [296]) = (int_64)0
	*(($0 + [304])) = [0]
	*($0 + [312]) = $1
	*(($0 + [320])) = $1
	*(($0 + [328])) = (int_64)-1
	*(($0 + [336])) = [0]
	*(($0 + [340])) = [0]
	*(($0 + [344])) = [0]
	*($0 + [352]) = $1
	*(($0 + [360])) = $1
	*(($0 + [368])) = (int_64)-1
	*(($0 + [376])) = [0]
	*(($0 + [380])) = [0]
	*(($0 + [384])) = [0]
	*($0 + [392]) = $1
	*(($0 + [400])) = $1
	*(($0 + [408])) = (int_64)-1
	*(($0 + [416])) = [0]
	*(($0 + [420])) = [0]
	*(($0 + [424])) = [0]
	$1 = *($0)
	*($0 + [432]) = $1
	*(($0 + [440])) = $1
	*(($0 + [448])) = (int_64)-1
	*(($0 + [456])) = [0]
	*(($0 + [460])) = [0]
	*(($0 + [464])) = [0]
	*($0 + [472]) = [0]
	return $0
}

void .FUNC $15 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$3 = [1]
	if ( CALL has_auth(*($0)) ){ goto $label$1 }
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [6464]
	$6 = (int_64)0
	
.LOOP $label$2:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$3 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$3
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$2 }
	$3 = CALL has_auth($6)
	
.LABEL $label$1
	CALL eosio_assert($3, [8080])
	*($0 + [48]) = ((int_64)*($0 + [48]) + (int_64)$1)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [816])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC _ZN3pvp11regstrfightEyyyyN5eosio5assetEhm (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	$17 = (*([0] + [4]) - [112])
	*([0] + [4]) = $17
	CALL require_auth($1)
	CALL eosio_assert(((int_64)$2 != (int_64)$4), [7856])
	CALL eosio_assert(($6 <= [3]), [7904])
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [8032]
	$13 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$6 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$8 = ($8 + [165])
	goto $label$4 
	
.LABEL $label$6
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$2
	$10 = ($10 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$1 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [8048]
	$15 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$12 }
	$8 = *($10)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$8 = ($8 + [165])
	goto $label$10 
	
.LABEL $label$12
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$8
	$10 = ($10 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$15 = ((int_64)$14 | (int_64)$15)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$7 }
	$10 = [0]
	CALL _ZN3pvp29checkFirstTransferTransactionEyyb(($17 + [96]), $0, $1, ( $13 ? $15 : ((int_64)$4 != (int_64)0) ), [0])
	$9 = CALL $101(($17 + [48]))
	CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($10, $1, $2, $9, [1])
	$8 = CALL $101($17)
	if ( (int_64)($3 == 0) ){ goto $label$14 }
	CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($10, $3, $4, $8, [1])
	goto $label$13 
	
.LABEL $label$14
	CALL $388(($8 + [8]), [0], [0])
	CALL $388(($8 + [20]), [0], [0])
	*($8) = (int_64)0
	CALL eosio_assert([1], [1056])
	$12 = (int_64)5459781
	
.LOOP $label$16:
	$16 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$15 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$16 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$16 }
	
.LABEL $label$15
	CALL eosio_assert($16, [1120])
	*(($8 + [40])) = (int_64)1397703940
	*($8 + [32]) = (int_64)0
	
.LABEL $label$13
	CALL _ZN3pvp11createFightEyRK6wizardyS2_RN5eosio5assetES5_hm($0, $1, $9, $3, $8, ($17 + [96]), $5, $6, $7)
	*($0 + [48]) = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	CALL $362($0)
	$10 = *($8 + [20])
	if ( ($10 == 0) ){ goto $label$19 }
	*(($8 + [24])) = $10
	CALL $430($10)
	
.LABEL $label$19
	$10 = *($8 + [8])
	if ( ($10 == 0) ){ goto $label$20 }
	*(($8 + [12])) = $10
	CALL $430($10)
	
.LABEL $label$20
	$10 = *($9 + [20])
	if ( ($10 == 0) ){ goto $label$21 }
	*(($9 + [24])) = $10
	CALL $430($10)
	
.LABEL $label$21
	$10 = *($9 + [8])
	if ( ($10 == 0) ){ goto $label$22 }
	*(($9 + [12])) = $10
	CALL $430($10)
	
.LABEL $label$22
	*([0] + [4]) = ($17 + [112])
}

void .FUNC _Z19EOS_asset_to_stringN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_64)*($1 + [8]) == (int_64)1397703940), [96])
	$2 = *($1)
	*($4 + [8]) = ((int_64)$2 / (int_64)10000)
	CALL $12($0, ($4 + [8]), [160])
	$2 = ((int_64)$2 % (int_64)10000)
	*($4 + [24]) = $2
	if ( ((uint_64)$2 > (uint_64)(int_64)9) ){ goto $label$2 }
	CALL $437($0, [32])
	goto $label$1 
	
.LABEL $label$2
	if ( ((uint_64)$2 > (uint_64)(int_64)99) ){ goto $label$3 }
	CALL $437($0, [48])
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_64)$2 > (uint_64)(int_64)999) ){ goto $label$1 }
	CALL $437($0, [64])
	
.LABEL $label$1
	CALL $11(($4 + [8]), ($4 + [24]), [80])
	$1 = *($4 + [8])
	$3 = ($1 & [1])
	CALL $436($0, ( *($4 + [16]) ? (($4 + [8]) | [1]) : $3 ), ( *($4 + [12]) ? uint_32($1 >> [1]) : $3 ))
	if ( ((*($4 + [8]) & [1]) == 0) ){ goto $label$4 }
	CALL $430(*(($4 + [16])))
	
.LABEL $label$4
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $11 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL _ZNSt3__19to_stringEy(($6 + [16]), *($1))
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$1 = CALL strlen($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($6) = ($1 << [1])
	$4 = ($6 | [1])
	$5 = $4
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($1 + [16]) & [-16])
	$5 = CALL $428($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $1
	$4 = ($6 | [1])
	
.LABEL $label$3
	CALL memcpy($5, $2, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	$1 = *($6)
	$5 = ($1 & [1])
	$1 = CALL $436(($6 + [16]), ( *($6 + [8]) ? $4 : $5 ), ( *($6 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$3 = *($1)
	*($1) = (int_64)0
	*($0) = $3
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($6 + [8])))
	
.LABEL $label$5
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($6 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432($6)
}

void .FUNC $12 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	CALL _ZNSt3__19to_stringEx(($6 + [16]), *($1))
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$1 = CALL strlen($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($6) = ($1 << [1])
	$4 = ($6 | [1])
	$5 = $4
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($1 + [16]) & [-16])
	$5 = CALL $428($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $1
	$4 = ($6 | [1])
	
.LABEL $label$3
	CALL memcpy($5, $2, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	$1 = *($6)
	$5 = ($1 & [1])
	$1 = CALL $436(($6 + [16]), ( *($6 + [8]) ? $4 : $5 ), ( *($6 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$3 = *($1)
	*($1) = (int_64)0
	*($0) = $3
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($6 + [8])))
	
.LABEL $label$5
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($6 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432($6)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [896])
	*([0] + [4]) = $10
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [176]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$8 != (int_64)$2) ){ goto $label$7 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [192]
	$8 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$7 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$9
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$8 == (int_64)$1), [208])
	
.LABEL $label$7
	$4 = CALL $14(($10 + [416]), $0)
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$40 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [176]
	$8 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$7 > (uint_64)(int_64)6) ){ goto $label$46 }
	$3 = *($5)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$3 = ($3 + [165])
	goto $label$44 
	
.LABEL $label$46
	$9 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$42
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$41 }
	if ( ((int_64)$8 != (int_64)$2) ){ goto $label$39 }
	
.LABEL $label$40
	if ( ((int_64)$2 > (int_64)4730614991850533375) ){ goto $label$47 }
	if ( ((int_64)$2 <= (int_64)-4994327966670491857) ){ goto $label$38 }
	if ( ((int_64)$2 <= (int_64)-3075276112958986753) ){ goto $label$36 }
	if ( ((int_64)$2 > (int_64)3607571201365691391) ){ goto $label$32 }
	if ( ((int_64)$2 == (int_64)-3075276112958986752) ){ goto $label$30 }
	if ( ((int_64)$2 != (int_64)-3000217680247521280) ){ goto $label$14 }
	*($10 + [212]) = [0]
	*($10 + [208]) = [1]
	*($10 + [200 align=4]) = *($10 + [208])
	CALL $24($4, ($10 + [200]))
	goto $label$14 
	
.LABEL $label$47
	if ( ((int_64)$2 <= (int_64)4923678932291138143) ){ goto $label$37 }
	if ( ((int_64)$2 <= (int_64)5379520865027751935) ){ goto $label$35 }
	if ( ((int_64)$2 > (int_64)7335797400557383551) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)5379520865027751936) ){ goto $label$29 }
	if ( ((int_64)$2 != (int_64)6121143850458591024) ){ goto $label$14 }
	*($10 + [300]) = [0]
	*($10 + [296]) = [2]
	*($10 + [112 align=4]) = *($10 + [296])
	CALL $27($4, ($10 + [112]))
	goto $label$14 
	
.LABEL $label$39
	CALL _ZN3pvp5applyEyyy($4, $0, $1, $2)
	goto $label$14 
	
.LABEL $label$38
	if ( ((int_64)$2 > (int_64)-5920724024824536577) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-7694773619997540352) ){ goto $label$28 }
	if ( ((int_64)$2 == (int_64)-7297066292195466752) ){ goto $label$27 }
	if ( ((int_64)$2 != (int_64)-6215853354602463232) ){ goto $label$14 }
	*($10 + [348]) = [0]
	*($10 + [344]) = [3]
	*($10 + [64 align=4]) = *($10 + [344])
	CALL $30($4, ($10 + [64]))
	goto $label$14 
	
.LABEL $label$37
	if ( ((int_64)$2 > (int_64)4921564913423728639) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)4730614991850533376) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)4851652721243209728) ){ goto $label$25 }
	if ( ((int_64)$2 != (int_64)4921564791516786688) ){ goto $label$14 }
	*($10 + [220]) = [0]
	*($10 + [216]) = [4]
	*($10 + [192 align=4]) = *($10 + [216])
	CALL $27($4, ($10 + [192]))
	goto $label$14 
	
.LABEL $label$36
	if ( ((int_64)$2 == (int_64)-4994327966670491856) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)-4994301831921123328) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)-4848187132149862608) ){ goto $label$14 }
	*($10 + [284]) = [0]
	*($10 + [280]) = [5]
	*($10 + [128 align=4]) = *($10 + [280])
	CALL $27($4, ($10 + [128]))
	goto $label$14 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)4923678932291138144) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)5031766156102650880) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)5031766166261327360) ){ goto $label$14 }
	*($10 + [308]) = [0]
	*($10 + [304]) = [6]
	*($10 + [104 align=4]) = *($10 + [304])
	CALL $38($4, ($10 + [104]))
	goto $label$14 
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)-5920724024824536576) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)-5915323230477691536) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)-5000811028550553088) ){ goto $label$14 }
	*($10 + [404]) = [0]
	*($10 + [400]) = [7]
	*($10 + [8 align=4]) = *($10 + [400])
	CALL $18($4, ($10 + [8]))
	goto $label$14 
	
.LABEL $label$33
	if ( ((int_64)$2 == (int_64)4921564913423728640) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)4921564914041122816) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)4923676780176490496) ){ goto $label$14 }
	*($10 + [324]) = [0]
	*($10 + [320]) = [8]
	*($10 + [88 align=4]) = *($10 + [320])
	CALL $34($4, ($10 + [88]))
	goto $label$14 
	
.LABEL $label$32
	if ( ((int_64)$2 == (int_64)3607571201365691392) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)3607571203900011008) ){ goto $label$14 }
	*($10 + [372]) = [0]
	*($10 + [368]) = [9]
	*($10 + [40 align=4]) = *($10 + [368])
	CALL $24($4, ($10 + [40]))
	goto $label$14 
	
.LABEL $label$31
	if ( ((int_64)$2 == (int_64)7335797400557383552) ){ goto $label$15 }
	if ( ((int_64)$2 != (int_64)7612940079960424448) ){ goto $label$14 }
	*($10 + [388]) = [0]
	*($10 + [384]) = [10]
	*($10 + [24 align=4]) = *($10 + [384])
	CALL $22($4, ($10 + [24]))
	goto $label$14 
	
.LABEL $label$30
	*($10 + [292]) = [0]
	*($10 + [288]) = [11]
	*($10 + [120 align=4]) = *($10 + [288])
	CALL $24($4, ($10 + [120]))
	goto $label$14 
	
.LABEL $label$29
	*($10 + [356]) = [0]
	*($10 + [352]) = [12]
	*($10 + [56 align=4]) = *($10 + [352])
	CALL $24($4, ($10 + [56]))
	goto $label$14 
	
.LABEL $label$28
	*($10 + [412]) = [0]
	*($10 + [408]) = [13]
	*($10) = *($10 + [408])
	CALL $16($4, $10)
	goto $label$14 
	
.LABEL $label$27
	*($10 + [268]) = [0]
	*($10 + [264]) = [14]
	*($10 + [144 align=4]) = *($10 + [264])
	CALL $24($4, ($10 + [144]))
	goto $label$14 
	
.LABEL $label$26
	*($10 + [380]) = [0]
	*($10 + [376]) = [15]
	*($10 + [32 align=4]) = *($10 + [376])
	CALL $24($4, ($10 + [32]))
	goto $label$14 
	
.LABEL $label$25
	*($10 + [332]) = [0]
	*($10 + [328]) = [16]
	*($10 + [80 align=4]) = *($10 + [328])
	CALL $24($4, ($10 + [80]))
	goto $label$14 
	
.LABEL $label$24
	*($10 + [276]) = [0]
	*($10 + [272]) = [17]
	*($10 + [136 align=4]) = *($10 + [272])
	CALL $24($4, ($10 + [136]))
	goto $label$14 
	
.LABEL $label$23
	*($10 + [340]) = [0]
	*($10 + [336]) = [18]
	*($10 + [72 align=4]) = *($10 + [336])
	CALL $24($4, ($10 + [72]))
	goto $label$14 
	
.LABEL $label$22
	*($10 + [252]) = [0]
	*($10 + [248]) = [19]
	*($10 + [160 align=4]) = *($10 + [248])
	CALL $47($4, ($10 + [160]))
	goto $label$14 
	
.LABEL $label$21
	*($10 + [396]) = [0]
	*($10 + [392]) = [20]
	*($10 + [16 align=4]) = *($10 + [392])
	CALL $20($4, ($10 + [16]))
	goto $label$14 
	
.LABEL $label$20
	*($10 + [260]) = [0]
	*($10 + [256]) = [21]
	*($10 + [152 align=4]) = *($10 + [256])
	CALL $45($4, ($10 + [152]))
	goto $label$14 
	
.LABEL $label$19
	*($10 + [244]) = [0]
	*($10 + [240]) = [22]
	*($10 + [168 align=4]) = *($10 + [240])
	CALL $49($4, ($10 + [168]))
	goto $label$14 
	
.LABEL $label$18
	*($10 + [316]) = [0]
	*($10 + [312]) = [23]
	*($10 + [96 align=4]) = *($10 + [312])
	CALL $36($4, ($10 + [96]))
	goto $label$14 
	
.LABEL $label$17
	*($10 + [228]) = [0]
	*($10 + [224]) = [24]
	*($10 + [184 align=4]) = *($10 + [224])
	CALL $53($4, ($10 + [184]))
	goto $label$14 
	
.LABEL $label$16
	*($10 + [364]) = [0]
	*($10 + [360]) = [25]
	*($10 + [48 align=4]) = *($10 + [360])
	CALL $27($4, ($10 + [48]))
	goto $label$14 
	
.LABEL $label$15
	*($10 + [236]) = [0]
	*($10 + [232]) = [26]
	*($10 + [176 align=4]) = *($10 + [232])
	CALL $51($4, ($10 + [176]))
	
.LABEL $label$14
	CALL $57($4)
	*([0] + [4]) = ($10 + [896])
}

void .FUNC _ZN3pvp12entertotournEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [176])
	*([0] + [4]) = $11
	CALL require_auth($2)
	$4 = CALL _ZN11CTournament7FactoryEP3pvpy($0, $1)
	$1 = (int_64)0
	$8 = (int_64)59
	$7 = [3600]
	$9 = (int_64)0
	
.LOOP $label$1:
	$10 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$2 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$5 = ($5 + [165])
	goto $label$3 
	
.LABEL $label$4
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	CALL _ZN3pvp29checkFirstTransferTransactionEyyb(($11 + [160]), $0, $2, $9, [0])
	$7 = CALL $101(($11 + [112]))
	CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($7, $2, $3, $7, [1])
	*(($6 = (($11 + [96]) + [8]))) = *((($11 + [160]) + [8]))
	*($11 + [96]) = *($11 + [160])
	$0 = CALL $303(($11 + [16]), $7)
	$5 = CALL _ZN12fight_wizardC2E6wizard(($11 + [64]), $0)
	*(($11 + [8])) = *($6)
	*($11) = *($11 + [96])
	CALL _ZN11CTournament11EnterWizardEN5eosio5assetEyRK12fight_wizard($4, $11, $2, $5)
	$6 = *($5 + [20])
	if ( ($6 == 0) ){ goto $label$5 }
	*(($5 + [24])) = $6
	CALL $430($6)
	
.LABEL $label$5
	$6 = *($5 + [8])
	if ( ($6 == 0) ){ goto $label$6 }
	*(($5 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$6
	$5 = *($0 + [20])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($0 + [24])) = $5
	CALL $430($5)
	
.LABEL $label$7
	$5 = *($0 + [8])
	if ( ($5 == 0) ){ goto $label$8 }
	*(($0 + [12])) = $5
	CALL $430($5)
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $430(CALL $306($4))
	
.LABEL $label$9
	$5 = *($7 + [20])
	if ( ($5 == 0) ){ goto $label$10 }
	*(($7 + [24])) = $5
	CALL $430($5)
	
.LABEL $label$10
	$5 = *($7 + [8])
	if ( ($5 == 0) ){ goto $label$11 }
	*(($7 + [12])) = $5
	CALL $430($5)
	
.LABEL $label$11
	*([0] + [4]) = ($11 + [176])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$10 = (*([0] + [4]) - [128])
	$12 = $10
	*([0] + [4]) = $10
	$2 = *($1 + [4])
	$11 = *($1)
	$1 = [0]
	$8 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$8 = ($10 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $3)
	
.LABEL $label$1
	*(($12 + [64])) = (int_64)1398362884
	*($12 + [32]) = (int_64)0
	*($12 + [24]) = (int_64)0
	*($12 + [40]) = (int_64)0
	*($12 + [48]) = (int_64)0
	*($12 + [56]) = (int_64)0
	CALL eosio_assert([1], [1056])
	$9 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$10 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$10 = [0]
	
.LABEL $label$4
	CALL eosio_assert($10, [1120])
	*($12 + [76]) = [0]
	*($12 + [72]) = [0]
	*($12 + [116]) = $8
	*($12 + [112]) = $8
	*($12 + [120]) = ($8 + $3)
	*($12 + [80]) = ($12 + [112])
	*($12 + [96]) = ($12 + [24])
	CALL $386(($12 + [96]), ($12 + [80]))
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL free($8)
	
.LABEL $label$9
	$9 = *((($12 + [24]) + [8]))
	*(($12 + [92])) = *(($12 + [68]))
	*(($1 = (($12 + [80]) + [8]))) = *(($12 + [64]))
	$4 = *($12 + [24])
	*($12 + [80]) = *($12 + [56])
	*($12 + [84]) = *(($12 + [60]))
	$6 = *(($12 + [48]))
	$5 = *(($12 + [40]))
	$8 = *(($12 + [76]))
	$10 = *(($12 + [72]))
	*((($12 + [96]) + [8])) = *($1)
	*($12 + [96]) = *($12 + [80])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$10 }
	$11 = *((*($1) + $11))
	
.LABEL $label$10
	$7 = *((($12 + [96]) + [8]))
	*((($12 + [112]) + [8])) = $7
	*((($12 + [8]) + [8])) = $7
	$7 = *($12 + [96])
	*($12 + [112]) = $7
	*($12 + [8]) = $7
	CALL void $1((int_32 $4), (int_64 $9), (int_64 $5), (int_64 $6), (int_64 ($12 + [8])), (int_32 ($10 & [255])), (int_32 $8), (int_32 $11))
	*([0] + [4]) = ($12 + [128])
	return [1]
}

void .FUNC _ZN3pvp11createarenaEyyN5eosio5assetEh (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$5 = *(($3 + [8]))
	*((($7 + [16]) + [8])) = $5
	$6 = *($3)
	*(($7 + [8])) = $5
	*($7 + [16]) = $6
	*($7 + [4]) = *($7 + [20])
	*($7) = *($7 + [16])
	CALL _ZN3pvp11regstrfightEyyyyN5eosio5assetEhm($0, $1, $2, (int_64)0, (int_64)0, $7, $4, [0])
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $338 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL $446($7, $1)
	CALL $446(($7 + [32]), $7)
	$1 = (($7 + [32]) + [8])
	*((($7 + [16]) + [8])) = *($1)
	*($7 + [16]) = *($7 + [32])
	CALL $339(($7 + [32]), $2, $3, $4, $5)
	$2 = *($7 + [32])
	$3 = ($2 & [1])
	$2 = CALL $436(($7 + [16]), ( *($7 + [40]) ? (($7 + [32]) | [1]) : $3 ), ( *($7 + [36]) ? uint_32($2 >> [1]) : $3 ))
	$6 = *($2)
	*($2) = (int_64)0
	*($0) = $6
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*($1))
	
.LABEL $label$1
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$2
	if ( ((*($7) & [1]) == 0) ){ goto $label$3 }
	CALL $430(*($7 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $339 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$5 = CALL strlen($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($9 + [16]) = ($5 << [1])
	$8 = (($9 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($5 + [16]) & [-16])
	$8 = CALL $428($6)
	*($9 + [16]) = ($6 | [1])
	*($9 + [24]) = $8
	*($9 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($8, $1, $5)
	
.LABEL $label$2
	*(($8 + $5)) = [0]
	CALL $340($9, $2, $3, $4)
	$5 = *($9)
	$8 = ($5 & [1])
	$5 = CALL $436(($9 + [16]), ( *($9 + [8]) ? ($9 | [1]) : $8 ), ( *($9 + [4]) ? uint_32($5 >> [1]) : $8 ))
	$7 = *($5)
	*($5) = (int_64)0
	*($0) = $7
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($9) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($9 + [8])))
	
.LABEL $label$5
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($9 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($9 + [16]))
}

void .FUNC $336 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [608])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [656])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [720])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $430($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $430($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $337 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	*(($11 + [24])) = [0]
	*($11 + [16]) = (int_64)0
	$7 = CALL strlen($1)
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$4 }
	*($11 + [16]) = ($7 << [1])
	$10 = (($11 + [16]) | [1])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($7 + [16]) & [-16])
	$10 = CALL $428($8)
	*($11 + [16]) = ($8 | [1])
	*($11 + [24]) = $10
	*($11 + [20]) = $7
	
.LABEL $label$3
	CALL memcpy($10, $1, $7)
	
.LABEL $label$2
	*(($10 + $7)) = [0]
	CALL $338($11, $2, $3, $4, $5, $6)
	$7 = *($11)
	$10 = ($7 & [1])
	$7 = CALL $436(($11 + [16]), ( *($11 + [8]) ? ($11 | [1]) : $10 ), ( *($11 + [4]) ? uint_32($7 >> [1]) : $10 ))
	$9 = *($7)
	*($7) = (int_64)0
	*($0) = $9
	$7 = ($7 + [8])
	*(($0 + [8])) = *($7)
	*($7) = [0]
	if ( ((*($11) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($11 + [8])))
	
.LABEL $label$5
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($11 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($11 + [16]))
}

void .FUNC $334 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [112])
	*([0] + [4]) = $13
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$5 = *(($1 + [8]))
	$11 = *(($1 + [16]))
	*(($4 = CALL $428([16])) + [8]) = $11
	*($4) = $5
	$8 = CALL $429([16])
	CALL memcpy($8, $4, [16])
	$12 = $13
	CALL sha1($8, [16], ($12 + [32]))
	if ( ($8 == 0) ){ goto $label$1 }
	CALL $431($8)
	
.LABEL $label$1
	$5 = *($12 + [32])
	if ( ($4 == 0) ){ goto $label$2 }
	CALL $430($4)
	
.LABEL $label$2
	*($12 + [24]) = $5
	*($12 + [16]) = $11
	$5 = *($1)
	$4 = *($3)
	CALL memcpy(($12 + [32]), $4, [44])
	$3 = [0]
	*(($12 + [84])) = [0]
	*($12 + [76 align=4]) = (int_64)0
	$10 = [0]
	$8 = [0]
	$6 = (*(($4 + [48])) - *($4 + [44]))
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$3 }
	$8 = CALL $428($6)
	*((($12 + [32]) + [44])) = $8
	$3 = ($8 + ($7 << [3]))
	*(($12 + [84])) = $3
	*(($7 = (($12 + [32]) + [48]))) = $8
	$6 = *(($4 + [44]))
	$10 = (*(($4 + [48])) - $6)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($8, $6, $10)
	$10 = ($8 + $10)
	*($7) = $10
	goto $label$4 
	
.LABEL $label$5
	$10 = $8
	
.LABEL $label$4
	$11 = *($4 + [56])
	*($12 + [88]) = $11
	$4 = CALL memcpy($1, ($12 + [32]), [44])
	$1 = *($4 + [44])
	if ( ($1 == 0) ){ goto $label$7 }
	*(($4 + [48])) = $1
	CALL $430($1)
	*(($1 = ($4 + [52]))) = [0]
	*(($4 + [44])) = (int_64)0
	goto $label$6 
	
.LABEL $label$7
	$1 = ($4 + [52])
	
.LABEL $label$6
	$7 = ($12 + [24])
	*($1) = $3
	*($4 + [56]) = $11
	*(($3 = ($4 + [48]))) = $10
	$1 = [44]
	*(($10 = ($4 + [44]))) = $8
	CALL eosio_assert(((int_64)$5 == (int_64)*($4)), [992])
	$3 = *($10)
	$8 = *($3)
	$10 = ($8 - $3)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	
.LOOP $label$8:
	$1 = ($1 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$9 }
	$1 = (($10 & [-8]) + $1)
	
.LABEL $label$9
	$8 = ($1 + [8])
	if ( ($8 <= [513]) ){ goto $label$11 }
	$1 = CALL malloc($8)
	goto $label$10 
	
.LABEL $label$11
	$1 = ($13 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$10
	*($12 + [4]) = $1
	*($12) = $1
	*($12 + [8]) = ($1 + $8)
	CALL $335($12, $4)
	CALL db_update_i64(*($4 + [68]), $2, $1, $8)
	if ( ($8 <= [513]) ){ goto $label$12 }
	CALL free($1)
	
.LABEL $label$12
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$13 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$13
	$1 = ($4 + [16])
	*($12 + [32]) = *($1)
	if ( (CALL memcmp(($12 + [16]), ($12 + [32]), [8]) == 0) ){ goto $label$14 }
	$3 = ($4 + [72])
	$8 = *($3)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$15 }
	$8 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5952938580782551040, ($12 + [104]), $5)
	*($3) = $8
	
.LABEL $label$15
	CALL db_idx64_update($8, $2, ($12 + [32]))
	
.LABEL $label$14
	$11 = *(($4 + [8]))
	$9 = *($1)
	*(($1 = CALL $428([16])) + [8]) = $9
	*($1) = $11
	$8 = CALL $429([16])
	CALL memcpy($8, $1, [16])
	CALL sha1($8, [16], ($12 + [32]))
	if ( ($8 == 0) ){ goto $label$16 }
	CALL $431($8)
	
.LABEL $label$16
	$11 = *($12 + [32])
	if ( ($1 == 0) ){ goto $label$17 }
	CALL $430($1)
	
.LABEL $label$17
	*($12 + [32]) = $11
	if ( (CALL memcmp($7, ($12 + [32]), [8]) == 0) ){ goto $label$18 }
	$4 = ($4 + [76])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$19 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-5952938580782551039, ($12 + [104]), $5)
	*($4) = $1
	
.LABEL $label$19
	CALL db_idx64_update($1, $2, ($12 + [32]))
	
.LABEL $label$18
	*([0] + [4]) = ($12 + [112])
	return (unreachable)
	
.LABEL $label$3
	CALL $445((($12 + [32]) + [44]))
}

int_32 .FUNC $335 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	$0 = CALL $210($0, ($1 + [44]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $332 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-5952938580782551039, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$4), [320])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $131($4, CALL $fimport$18(*($4), *($4 + [8]), (int_64)-5952938580782551040, $5))
	CALL eosio_assert(((int_32)*($2 + [64]) == (int_32)$4), [320])
	
.LABEL $label$4
	*(($2 + [76])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $333 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [80])
	*([0] + [4]) = $15
	$3 = *($0)
	$12 = *(*($0 + [4]))
	$14 = $15
	CALL memcpy(($14 + [16]), $12, [44])
	$9 = [0]
	*(($14 + [68])) = [0]
	*($14 + [60 align=4]) = (int_64)0
	$10 = [0]
	$11 = [0]
	$4 = (*(($12 + [48])) - *($12 + [44]))
	$2 = int_32($4 >> [3])
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	$11 = CALL $428($4)
	*((($14 + [16]) + [44])) = $11
	$9 = ($11 + ($2 << [3]))
	*(($14 + [68])) = $9
	*(($4 = (($14 + [16]) + [48]))) = $11
	$10 = *(($12 + [44]))
	$2 = (*(($12 + [48])) - $10)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($11, $10, $2)
	$10 = ($11 + $2)
	*($4) = $10
	goto $label$2 
	
.LABEL $label$3
	$10 = $11
	
.LABEL $label$2
	$13 = *($12 + [56])
	*($14 + [72]) = $13
	$2 = CALL memcpy($1, ($14 + [16]), [44])
	$12 = *($2 + [44])
	if ( ($12 == 0) ){ goto $label$5 }
	*(($2 + [48])) = $12
	CALL $430($12)
	*(($12 = ($2 + [52]))) = [0]
	*(($2 + [44])) = (int_64)0
	goto $label$4 
	
.LABEL $label$5
	$12 = ($2 + [52])
	
.LABEL $label$4
	*($12) = $9
	*($2 + [56]) = $13
	*(($2 + [48])) = $10
	$12 = [44]
	*(($2 + [44])) = $11
	$9 = ($10 - $11)
	$13 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$6:
	$12 = ($12 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$7 }
	$12 = (($9 & [-8]) + $12)
	
.LABEL $label$7
	$11 = ($12 + [8])
	if ( ($11 <= [513]) ){ goto $label$9 }
	$12 = CALL malloc($11)
	goto $label$8 
	
.LABEL $label$9
	$12 = ($15 - (($11 + [15]) & [-16]))
	*([0] + [4]) = $12
	
.LABEL $label$8
	*($14 + [4]) = $12
	*($14) = $12
	*($14 + [8]) = ($12 + $11)
	CALL $335($14, $2)
	$13 = *($2)
	*($2 + [68]) = CALL db_store_i64(*($3 + [8]), (int_64)-5952938580782551040, *(*($0 + [8])), $13, $12, $11)
	if ( ($11 <= [513]) ){ goto $label$10 }
	CALL free($12)
	
.LABEL $label$10
	if ( (uint_64)($13 <= *($3 + [16])) ){ goto $label$11 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$12 = ($3 + [8])
	$13 = *($12)
	$11 = *(($0 + [8]))
	$5 = *($11)
	$6 = *($2)
	*($14 + [16]) = *($2 + [16])
	*($2 + [72]) = CALL db_idx64_store($13, (int_64)-5952938580782551040, $5, $6, ($14 + [16]))
	$13 = *($11)
	$5 = *($12)
	$6 = *($2)
	$7 = *($2 + [8])
	$8 = *($2 + [16])
	*(($12 = CALL $428([16])) + [8]) = $8
	*($12) = $7
	$11 = CALL $429([16])
	CALL memcpy($11, $12, [16])
	CALL sha1($11, [16], ($14 + [16]))
	if ( ($11 == 0) ){ goto $label$12 }
	CALL $431($11)
	
.LABEL $label$12
	$7 = *($14 + [16])
	if ( ($12 == 0) ){ goto $label$13 }
	CALL $430($12)
	
.LABEL $label$13
	*($14 + [16]) = $7
	*(($2 + [76])) = CALL db_idx64_store($5, (int_64)-5952938580782551039, $13, $6, ($14 + [16]))
	*([0] + [4]) = ($14 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $445((($14 + [16]) + [44]))
}

void .FUNC $330 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL _ZNSt3__19to_stringEy(($5 + [16]), *($1))
	CALL $331($5, $2, $3)
	$2 = *($5)
	$3 = ($2 & [1])
	$2 = CALL $436(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $3 ), ( *($5 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$4 = *($2)
	*($2) = (int_64)0
	*($0) = $4
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($5 + [8])))
	
.LABEL $label$1
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($5 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $331 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [1])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $119($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [1]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	$2 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*($2) - $7) > (uint_32)[1]), [816])
	CALL memcpy($4, *($5), [2])
	$7 = (*($5) + [2])
	*($5) = $7
	$4 = ($4 + [2])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $117 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($6 + [16]) = (int_64)0
	*($6 + [24]) = [0]
	$2 = *($1)
	$4 = (*(($1 + [12])) - *($1 + [8]))
	$3 = int_32($4 >> [3])
	if ( ($3 == 0) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$2 }
	$4 = CALL $428($4)
	*((($6 + [16]) + [8])) = ($4 + ($3 << [3]))
	*($6 + [16]) = $4
	*($6 + [20]) = $4
	$5 = *(($1 + [8]))
	$3 = (*(($1 + [12])) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($4, $5, $3)
	*($6 + [20]) = ($4 + $3)
	
.LABEL $label$3
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	$4 = (*(($1 + [24])) - *($1 + [20]))
	$3 = int_32($4 >> [1])
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = CALL $428($4)
	*(($6 + [8])) = ($4 + ($3 << [1]))
	*($6) = $4
	*($6 + [4]) = $4
	$3 = *(($1 + [20]))
	$1 = (*(($1 + [24])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($4, $3, $1)
	*($6 + [4]) = ($4 + $1)
	
.LABEL $label$4
	CALL $118($0, $2, ($6 + [16]), $6)
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$5 }
	*($6 + [4]) = $1
	CALL $430($1)
	
.LABEL $label$5
	$1 = *($6 + [16])
	if ( ($1 == 0) ){ goto $label$6 }
	*($6 + [20]) = $1
	CALL $430($1)
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $445(($6 + [16]))
	
.LABEL $label$1
	CALL $445($6)
	(unreachable)
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $115($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [816])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [3])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($7 >> [2])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $428(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $445($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [3]))
	$2 = ($7 + ($4 << [3]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [3]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $430($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $112 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [20])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $6
	CALL $430($6)
	
.LABEL $label$11
	$6 = *($1 + [8])
	if ( ($6 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $6
	CALL $430($6)
	
.LABEL $label$12
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $430($2)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $113 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $428(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $430($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $430($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

int_32 .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy($1, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $98(CALL $98($0, ($1 + [8])), ($1 + [20]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [816])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_64 .FUNC trunc (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	$1 = (CASTING int_64)(float_64 $0)
	$2 = (((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)) & [2047]) + [-1011]
	if ( ((int_32)$2) > (int_32)[63]) ){ goto $label$1 }
	$3 = ( (int_64)9223372036854775807 ? (uint_64)(int_64)-1 >> (uint_64)(CASTING uint_64)(uint_32 $2)) : ((int_32)$2 < (int_32)[12]) 
	if ( (int_64)(((int_64)$3) & (int_64)$1) == 0) ){ goto $label$1 }
	*($4 + [8]) = ((float_64)$0 + (float_64)(float_64)1329227995784915872903807e12)
	$0 = (CASTING float_64)(int_64 ((int_64)$1 & (int_64)((int_64)$3 ^ (int_64)-1)))
	
.LABEL $label$1
	return $0
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

void .FUNC $118 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$4 = (*(*($0)) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($4) + $0))
	
.LABEL $label$1
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = (*($2 + [4]) - *($2))
	$5 = int_32($6 >> [3])
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = CALL $428($6)
	*(($7 + [24])) = ($6 + ($5 << [3]))
	*($7 + [16]) = $6
	*($7 + [20]) = $6
	$5 = *($2)
	$2 = (*(($2 + [4])) - $5)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($6, $5, $2)
	*($7 + [20]) = ($6 + $2)
	
.LABEL $label$4
	*($7 + [8]) = [0]
	*($7) = (int_64)0
	$2 = (*($3 + [4]) - *($3))
	$6 = int_32($2 >> [1])
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$2 = CALL $428($2)
	*(($7 + [8])) = ($2 + ($6 << [1]))
	*($7) = $2
	*($7 + [4]) = $2
	$6 = *($3)
	$3 = (*(($3 + [4])) - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $6, $3)
	*($7 + [4]) = ($2 + $3)
	
.LABEL $label$5
	CALL void $4((int_32 $1), (int_64 ($7 + [16])), (int_32 $7), (int_32 $0))
	$2 = *($7)
	if ( ($2 == 0) ){ goto $label$6 }
	*($7 + [4]) = $2
	CALL $430($2)
	
.LABEL $label$6
	$2 = *($7 + [16])
	if ( ($2 == 0) ){ goto $label$7 }
	*($7 + [20]) = $2
	CALL $430($2)
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$3
	CALL $445(($7 + [16]))
	
.LABEL $label$2
	CALL $445($7)
	(unreachable)
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [1]) >= (uint_32)$1) ){ goto $label$3 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [1])
	$2 = ($4 + $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [0]
	$7 = ($7 - $3)
	$7 = ( ( $2 ? $7 : ($7 <= $2) ) ? [2147483647] : (int_32($7 >> [1]) <= [1073741823]) )
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL $428(($7 << [1]))
	
.LABEL $label$4
	$3 = ($6 + ($7 << [1]))
	$2 = ($6 + ($4 << [1]))
	$6 = $2
	$7 = $1
	
.LOOP $label$5:
	*($6) = [0]
	$6 = ($6 + [2])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$5 }
	$4 = ($2 + ($1 << [1]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$7 }
	CALL $430($6)
	
.LABEL $label$7
	return (unreachable)
	
.LABEL $label$3
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [2])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	*(($0 + [4])) = ($2 + ($1 << [1]))
	return (unreachable)
	
.LABEL $label$2
	CALL $445($0)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$6 = (*($0) + [8])
	*($0) = $6
	$3 = *($1 + [8])
	$5 = (CASTING uint_64)(uint_32 ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$3 = *(($1 + [8]))
	$3 = ( *(($1 + [12])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$2 }
	$6 = ($3 + $6)
	*($0) = $6
	
.LABEL $label$2
	$3 = *($1 + [20])
	$5 = (CASTING uint_64)(uint_32 ( *(($1 + [24])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	$3 = *(($1 + [20]))
	$3 = ( *(($1 + [24])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = ($3 + $6)
	*($0) = $6
	
.LABEL $label$4
	$6 = ($6 + [60])
	*($0) = $6
	$2 = *($1 + [96])
	$3 = *(($1 + [100]))
	$4 = ($3 - $2)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [2]))
	
.LOOP $label$5:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$6 }
	$6 = (($4 & [-4]) + $6)
	
.LABEL $label$6
	$6 = ($6 + [25])
	*($0) = $6
	$2 = *($1 + [144])
	$3 = *(($1 + [148]))
	$4 = ($3 - $2)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [3]))
	
.LOOP $label$7:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	$6 = (($4 & [-8]) + $6)
	
.LABEL $label$8
	$6 = ($6 + [28])
	*($0) = $6
	$1 = *($1 + [184])
	$3 = *(($1 + [188]))
	$2 = ($3 - $1)
	$5 = (CASTING uint_64)(uint_32 int_32($2 >> [3]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$10 }
	$6 = (($2 & [-8]) + $6)
	
.LABEL $label$10
	*($0) = $6
	return $0
}

int_32 .FUNC $298 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = *($1)
	$3 = ($1 + [8])
	$2 = ($0 + [8])
	if ( (*($0 + [8]) & [1]) ){ goto $label$2 }
	*($2) = [0]
	goto $label$1 
	
.LABEL $label$2
	*(*(($0 + [16]))) = [0]
	*(($0 + [12])) = [0]
	
.LABEL $label$1
	CALL $435($2, [0])
	*(($2 + [8])) = *(($3 + [8]))
	*($2) = *($3)
	*(($1 + [12])) = [0]
	*(($1 + [8])) = [0]
	*(($1 + [16])) = [0]
	$3 = ($1 + [20])
	$2 = ($0 + [20])
	if ( (*($0 + [20]) & [1]) ){ goto $label$4 }
	*($2) = [0]
	goto $label$3 
	
.LABEL $label$4
	*(*(($0 + [28]))) = [0]
	*(($0 + [24])) = [0]
	
.LABEL $label$3
	CALL $435($2, [0])
	*(($2 + [8])) = *(($3 + [8]))
	*($2) = *($3)
	*(($1 + [24])) = [0]
	*(($1 + [20])) = [0]
	*(($1 + [28])) = [0]
	CALL memcpy(($0 + [32]), ($1 + [32]), [64])
	$2 = *($0 + [96])
	if ( ($2 == 0) ){ goto $label$6 }
	*(($0 + [100])) = $2
	CALL $430($2)
	*(($2 = ($0 + [104]))) = [0]
	*(($0 + [96])) = (int_64)0
	goto $label$5 
	
.LABEL $label$6
	$2 = ($0 + [104])
	
.LABEL $label$5
	$3 = ($1 + [96])
	*(($0 + [96])) = *($3)
	*(($0 + [100])) = *(($1 + [100]))
	$4 = ($1 + [104])
	*($2) = *($4)
	*($4) = [0]
	*($3) = (int_64)0
	*(($0 + [136])) = *(($1 + [136]))
	*(($0 + [128])) = *(($1 + [128]))
	*(($0 + [120])) = *(($1 + [120]))
	*($0 + [112]) = *($1 + [112])
	$2 = *($0 + [144])
	if ( ($2 == 0) ){ goto $label$8 }
	*(($0 + [148])) = $2
	CALL $430($2)
	*(($2 = ($0 + [152]))) = [0]
	*(($0 + [144])) = (int_64)0
	goto $label$7 
	
.LABEL $label$8
	$2 = ($0 + [152])
	
.LABEL $label$7
	$3 = ($1 + [144])
	*(($0 + [144])) = *($3)
	*(($0 + [148])) = *(($1 + [148]))
	$4 = ($1 + [152])
	*($2) = *($4)
	*($4) = [0]
	*($3) = (int_64)0
	*(($0 + [180])) = *(($1 + [180]))
	*(($0 + [172])) = *(($1 + [172]))
	*(($0 + [164])) = *(($1 + [164]))
	*($0 + [156 align=4]) = *($1 + [156 align=4])
	$2 = *($0 + [184])
	if ( ($2 == 0) ){ goto $label$10 }
	*(($0 + [188])) = $2
	CALL $430($2)
	*(($2 = ($0 + [192]))) = [0]
	*(($0 + [184])) = (int_64)0
	goto $label$9 
	
.LABEL $label$10
	$2 = ($0 + [192])
	
.LABEL $label$9
	$3 = ($1 + [184])
	*(($0 + [184])) = *($3)
	*(($0 + [188])) = *(($1 + [188]))
	$1 = ($1 + [192])
	*($2) = *($1)
	*($1) = [0]
	*($3) = (int_64)0
	return $0
}

void .FUNC $295 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

int_32 .FUNC $294 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [1]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [592])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [8])
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[1]), [592])
	CALL memcpy(*($2), $5, [2])
	$7 = (*($2) + [2])
	*($2) = $7
	$5 = ($5 + [2])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $297 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [208])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [196]) == (int_32)$0), [880])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$15()), [928])
	$4 = *($1)
	$6 = $7
	$3 = CALL $172(($6 + [8]), *((*($3) + [4])))
	CALL $298($1, $3)
	$5 = *($3 + [184])
	if ( ($5 == 0) ){ goto $label$1 }
	*(($3 + [188])) = $5
	CALL $430($5)
	
.LABEL $label$1
	$5 = *($3 + [144])
	if ( ($5 == 0) ){ goto $label$2 }
	*(($3 + [148])) = $5
	CALL $430($5)
	
.LABEL $label$2
	$5 = *($3 + [96])
	if ( ($5 == 0) ){ goto $label$3 }
	*(($3 + [100])) = $5
	CALL $430($5)
	
.LABEL $label$3
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$4 }
	CALL $430(*(($3 + [28])))
	
.LABEL $label$4
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($3 + [16])))
	
.LABEL $label$5
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [992])
	*($6 + [8]) = [0]
	CALL $299(($6 + [8]), $1)
	$5 = *($6 + [8])
	if ( ($5 <= [513]) ){ goto $label$7 }
	$3 = CALL malloc($5)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($7 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$6
	*($6 + [12]) = $3
	*($6 + [8]) = $3
	*($6 + [16]) = ($3 + $5)
	CALL $300(($6 + [8]), $1)
	CALL db_update_i64(*($1 + [200]), $2, $3, $5)
	if ( ($5 <= [513]) ){ goto $label$8 }
	CALL free($3)
	
.LABEL $label$8
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [208])
}

void .FUNC $296 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

void .FUNC $291 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$8 = *(*($0 + [4]))
	*($1) = *($8)
	$6 = [8]
	$3 = ($1 + [8])
	$2 = *($0)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$1 }
	CALL $234($3, *($8 + [8]), *(($8 + [12])))
	
.LABEL $label$1
	$4 = *($3)
	$8 = *(($1 + [12]))
	$5 = ($8 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$3 }
	$6 = (($5 & [-8]) + $6)
	
.LABEL $label$3
	if ( ($6 <= [513]) ){ goto $label$5 }
	$8 = CALL malloc($6)
	goto $label$4 
	
.LABEL $label$5
	$8 = ($10 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$4
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL eosio_assert(((int_32)$6 > (int_32)[7]), [592])
	CALL memcpy($8, $1, [8])
	*($9 + [4]) = ($8 + [8])
	CALL $210($9, $3)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)-7047450998071099392, *(*($0 + [8])), (int_64)-7047450998071099392, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$6 }
	CALL free($8)
	
.LABEL $label$6
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)-7047450998071099392) ){ goto $label$7 }
	*(($2 + [16])) = (int_64)-7047450998071099391
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $290 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [528])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $428([40])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3) = (int_64)0
	CALL $260(($3 + [8]), [3120], [3152])
	*($3 + [24]) = $1
	CALL $291(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)-7047450998071099392
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)-7047450998071099392
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $289(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($3 + [12])) = $1
	CALL $430($1)
	
.LABEL $label$4
	CALL $430($3)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $293 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($3 << [1])
	$6 = (($7 + [16]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [16]) = ($4 | [1])
	*($7 + [24]) = $6
	*($7 + [20]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL _ZNSt3__19to_stringEy($7, *($2))
	$3 = *($7)
	$6 = ($3 & [1])
	$3 = CALL $436(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $6 ), ( *($7 + [4]) ? uint_32($3 >> [1]) : $6 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [24]))
	
.LABEL $label$6
	*([0] + [4]) = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [16]))
}

void .FUNC $292 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL _ZNSt3__19to_stringEy(($5 + [16]), *($1))
	CALL $293($5, $2, $3)
	$2 = *($5)
	$3 = ($2 & [1])
	$2 = CALL $436(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $3 ), ( *($5 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$4 = *($2)
	*($2) = (int_64)0
	*($0) = $4
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*(($5 + [8])))
	
.LABEL $label$1
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($5 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $407 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($1 + [24])
	$7 = *(($1 + [28]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$4 = ([0] - $3)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$2) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$6 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$1), [320])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-3659885401779982336, $2)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL $146($1, $6)
	CALL eosio_assert(((int_32)*($6 + [32]) == (int_32)$1), [320])
	*($0 + [4]) = $6
	*($0) = $1
	return 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($2 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($2 + [24]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($1 + [4]), ($2 + [32]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

void .FUNC $349 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	$2 = *($0)
	$9 = *($0 + [4])
	*($1) = CALL _ZN11CTournament6nextIdEi(*(*($9)), [5])
	$7 = *($9 + [4])
	*(((($10 = $11) + [8]) + [24])) = *(($7 + [24]))
	*((($10 + [8]) + [16])) = *(($7 + [16]))
	*((($10 + [8]) + [8])) = *(($7 + [8]))
	*($10 + [8]) = *($7)
	CALL $350(($1 + [16]), ($10 + [8]), ($10 + [40]))
	*($1 + [8]) = *(*($9 + [8]))
	$3 = *($1 + [16])
	$9 = *(($1 + [20]))
	$4 = ($9 - $3)
	$8 = (CASTING uint_64)(uint_32 int_32($4 >> [5]))
	$7 = [41]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$3 }
	$7 = (((int_32)uint_32(($4 + [-32]) >> [5]) * (int_32)[25]) + $7)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($7 + [-25])
	
.LABEL $label$2
	if ( ($7 <= [513]) ){ goto $label$5 }
	$9 = CALL malloc($7)
	goto $label$4 
	
.LABEL $label$5
	$9 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$4
	*($10 + [12]) = $9
	*($10 + [8]) = $9
	*($10 + [16]) = ($9 + $7)
	CALL $208(($10 + [8]), $1)
	$8 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($2 + [8]), (int_64)-3659885105376759808, *(*($0 + [8])), $8, $9, $7)
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL free($9)
	
.LABEL $label$6
	if ( (uint_64)($8 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$8 = *(($2 + [8]))
	$5 = *(*(($0 + [8])))
	$6 = *($1)
	*($10 + [40]) = *(($1 + [8]))
	*($1 + [36]) = CALL db_idx64_store($8, (int_64)-3659885105376759808, $5, $6, ($10 + [40]))
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC _ZN15CTournStructure15CreateStructureEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [128])
	*([0] + [4]) = $7
	*($7 + [80]) = *(*(*($0) + [4]))
	*($7 + [72]) = *($0 + [12])
	CALL $154(($7 + [40]), ($7 + [72]), ($7 + [80]))
	$1 = *($7 + [44])
	if ( ($1 == 0) ){ goto $label$2 }
	$2 = [0]
	if ( ((int_64)*($7 + [80]) == (int_64)*($1 + [8])) ){ goto $label$1 }
	
.LABEL $label$2
	*($7 + [32]) = [0]
	*($7 + [24]) = (int_64)0
	CALL _ZN15CTournStructure12create_layerEiNSt3__16vectorIyNS0_9allocatorIyEEEE(($7 + [40]), $0, [0], ($7 + [24]))
	$1 = *(($0 + [12]))
	$5 = *($0 + [16])
	*($7 + [8]) = $0
	*($7 + [12]) = ($7 + [40])
	*($7 + [16]) = ($7 + [80])
	*($7 + [120]) = $5
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [528])
	*($7 + [96]) = $1
	*($7 + [100]) = ($7 + [8])
	*($7 + [104]) = ($7 + [120])
	*(($2 = CALL $428([40])) + [24]) = [0]
	*($2 + [16 align=4]) = (int_64)0
	*($2 + [28]) = $1
	CALL $349(($7 + [96]), $2)
	*($7 + [112]) = $2
	$5 = *($2)
	*($7 + [96]) = $5
	$3 = *($2 + [32])
	*($7 + [92]) = $3
	$6 = ($1 + [28])
	$4 = *($6)
	if ( ((uint_32)$4 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($4 + [8]) = $5
	*($4 + [16]) = $3
	*($7 + [112]) = [0]
	*($4) = $2
	*($6) = ($4 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $151(($1 + [24]), ($7 + [112]), ($7 + [96]), ($7 + [92]))
	
.LABEL $label$3
	$4 = *($7 + [112])
	*($7 + [112]) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	$3 = *($4 + [16])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($4 + [20])) = $3
	CALL $430($3)
	
.LABEL $label$6
	CALL $430($4)
	
.LABEL $label$5
	*(($0 + [8])) = $2
	*($0 + [4]) = $1
	$2 = [1]
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [128])
	return $2
}

void .FUNC $347 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [208])
	*([0] + [4]) = $7
	$2 = *($0)
	$6 = $7
	$3 = CALL $172(($6 + [8]), *(*(*($0 + [4]))))
	CALL $298($1, $3)
	$4 = *($3 + [184])
	if ( ($4 == 0) ){ goto $label$1 }
	*(($3 + [188])) = $4
	CALL $430($4)
	
.LABEL $label$1
	$4 = *($3 + [144])
	if ( ($4 == 0) ){ goto $label$2 }
	*(($3 + [148])) = $4
	CALL $430($4)
	
.LABEL $label$2
	$4 = *($3 + [96])
	if ( ($4 == 0) ){ goto $label$3 }
	*(($3 + [100])) = $4
	CALL $430($4)
	
.LABEL $label$3
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$4 }
	CALL $430(*(($3 + [28])))
	
.LABEL $label$4
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($3 + [16])))
	
.LABEL $label$5
	*($6 + [8]) = [0]
	CALL $299(($6 + [8]), $1)
	$4 = *($6 + [8])
	if ( ($4 <= [513]) ){ goto $label$7 }
	$3 = CALL malloc($4)
	goto $label$6 
	
.LABEL $label$7
	$3 = ($7 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$6
	*($6 + [12]) = $3
	*($6 + [8]) = $3
	*($6 + [16]) = ($3 + $4)
	CALL $300(($6 + [8]), $1)
	$5 = *($1)
	*($1 + [200]) = CALL db_store_i64(*($2 + [8]), (int_64)-3659885111347970048, *(*($0 + [8])), $5, $3, $4)
	if ( ($4 <= [513]) ){ goto $label$8 }
	CALL free($3)
	
.LABEL $label$8
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$9 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = ($6 + [208])
}

void .FUNC _ZN11CTournament16CreateTournamentEP3pvpP9tourninfo (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [560])
	*([0] + [4]) = $5
	*($5 + [444]) = $1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), CALL $170([1840]))
	*((($5 + [400]) + [32])) = [0]
	*($5 + [416]) = (int_64)-1
	*($5 + [424]) = (int_64)0
	$2 = *($0)
	*($5 + [400]) = $2
	*($5 + [408]) = $2
	*((($5 + [16]) + [32])) = $2
	*((($5 + [16]) + [40])) = (int_64)-1
	*(($5 + [64])) = [0]
	*($5 + [20]) = $1
	*($5 + [16]) = $0
	*($5 + [32]) = $2
	*($5 + [40]) = $2
	*(($5 + [68])) = [0]
	*(($5 + [72])) = [0]
	*($5 + [80]) = $2
	*(($5 + [88])) = $2
	*(($5 + [96])) = (int_64)-1
	*(($5 + [104])) = [0]
	*(($5 + [108])) = [0]
	*(($5 + [112])) = [0]
	*(($5 + [116])) = [0]
	*($5 + [120]) = $2
	*(($5 + [128])) = $2
	*(($5 + [136])) = (int_64)-1
	*(($5 + [144])) = [0]
	*(($5 + [148])) = [0]
	*(($5 + [152])) = [0]
	*(($5 + [156])) = [0]
	*($5 + [160]) = $2
	*(($5 + [168])) = $2
	*(($5 + [176])) = (int_64)-1
	*(($5 + [184])) = [0]
	*(($5 + [188])) = [0]
	*(($5 + [192])) = [0]
	*($5 + [200]) = $2
	*(($5 + [208])) = $2
	*(($5 + [216])) = (int_64)-1
	*(($5 + [224])) = [0]
	*(($5 + [228])) = [0]
	*(($5 + [232])) = [0]
	*($5 + [240]) = $2
	*(($5 + [248])) = $2
	*(($5 + [256])) = (int_64)-1
	*(($5 + [264])) = [0]
	*(($5 + [268])) = [0]
	*(($5 + [272])) = [0]
	*(($5 + [276])) = [0]
	*($5 + [280]) = $2
	*(($5 + [288])) = $2
	*(($5 + [296])) = (int_64)-1
	*(($5 + [304])) = [0]
	*(($5 + [308])) = [0]
	*(($5 + [312])) = [0]
	*($5 + [320]) = $2
	*(($5 + [328])) = $2
	*(($5 + [336])) = (int_64)-1
	*(($5 + [344])) = [0]
	*(($5 + [348])) = [0]
	*(($5 + [352])) = [0]
	$2 = *($5 + [32])
	*($5 + [360]) = $2
	*(($5 + [368])) = $2
	*(($5 + [376])) = (int_64)-1
	*(($5 + [384])) = [0]
	*(($5 + [388])) = [0]
	*(($5 + [392])) = [0]
	*(($5 + [396])) = [0]
	$1 = ($5 + [240])
	*(($0 = CALL $428([32])) + [4]) = $1
	*($0 + [8]) = [0]
	*($0 + [12]) = $1
	*($0 + [16]) = $2
	*($0 + [24]) = [0]
	*($0) = ($5 + [16])
	*($5 + [24]) = $0
	*((($5 + [448]) + [40])) = [0]
	*($5 + [480]) = (int_64)0
	*($5 + [448]) = (int_64)0
	*($5 + [456]) = (int_64)0
	*($5 + [464]) = (int_64)0
	*($5 + [472]) = (int_64)0
	$1 = ($5 + [40])
	CALL $235(($5 + [496]), $1, $2, ($5 + [448]))
	$0 = *($5 + [480])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($5 + [484])) = $0
	CALL $430($0)
	
.LABEL $label$1
	$2 = ((int_64)*($5 + [496]) + (int_64)1)
	*($5 + [496]) = $2
	$3 = ($5 + [32])
	CALL $237($1, ($5 + [496]), *($3))
	$0 = *($5 + [528])
	if ( ($0 == 0) ){ goto $label$2 }
	*(($5 + [532])) = $0
	CALL $430($0)
	
.LABEL $label$2
	*(*($5 + [444])) = $2
	$2 = *($3)
	*($5 + [8]) = ($5 + [444])
	*($5 + [448]) = $2
	CALL eosio_assert(((int_64)*($5 + [400]) == (int_64)CALL $fimport$15()), [528])
	*($5 + [500]) = ($5 + [8])
	*($5 + [496]) = ($5 + [400])
	*($5 + [504]) = ($5 + [448])
	$0 = CALL $428([208])
	CALL $176($0)
	*($0 + [196]) = ($5 + [400])
	CALL $347(($5 + [496]), $0)
	*($5 + [552]) = $0
	$2 = *($0)
	*($5 + [496]) = $2
	$3 = *($0 + [200])
	*($5 + [548]) = $3
	$4 = ($5 + [428])
	$1 = *($4)
	if ( ((uint_32)$1 >= (uint_32)*(($5 + [432]))) ){ goto $label$4 }
	*($1 + [8]) = $2
	*($1 + [16]) = $3
	*($5 + [552]) = [0]
	*($1) = $0
	*($4) = ($1 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $178(($5 + [424]), ($5 + [552]), ($5 + [496]), ($5 + [548]))
	
.LABEL $label$3
	$0 = *($5 + [552])
	*($5 + [552]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	$1 = *($0 + [184])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($0 + [188])) = $1
	CALL $430($1)
	
.LABEL $label$6
	$1 = *($0 + [144])
	if ( ($1 == 0) ){ goto $label$7 }
	*(($0 + [148])) = $1
	CALL $430($1)
	
.LABEL $label$7
	$1 = *($0 + [96])
	if ( ($1 == 0) ){ goto $label$8 }
	*(($0 + [100])) = $1
	CALL $430($1)
	
.LABEL $label$8
	if ( ((*($0 + [20]) & [1]) == 0) ){ goto $label$9 }
	CALL $430(*(($0 + [28])))
	
.LABEL $label$9
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$10 }
	CALL $430(*(($0 + [16])))
	
.LABEL $label$10
	CALL $430($0)
	
.LABEL $label$5
	if ( CALL _ZN15CTournStructure15CreateStructureEv(*(($5 + [24]))) ){ goto $label$11 }
	CALL eosio_assert([0], [5488])
	
.LABEL $label$11
	CALL _ZN11CTournamentD2Ev(($5 + [16]))
	CALL $174(($5 + [424]))
	*([0] + [4]) = ($5 + [560])
}

void .FUNC $345 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [32]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [32]) = ($3 << [1])
	$6 = (($7 + [32]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [32]) = ($4 | [1])
	*($7 + [40]) = $6
	*($7 + [36]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $446($7, $2)
	CALL $446(($7 + [48]), $7)
	*(($6 = (($7 + [16]) + [8]))) = *((($7 + [48]) + [8]))
	*($7 + [16]) = *($7 + [48])
	$3 = *($7 + [16])
	$1 = ($3 & [1])
	$3 = CALL $436(($7 + [32]), ( *($6) ? (($7 + [16]) | [1]) : $1 ), ( *($7 + [20]) ? uint_32($3 >> [1]) : $1 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*($6))
	
.LABEL $label$5
	if ( ((*($7) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [8]))
	
.LABEL $label$6
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $430(*($7 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [32]))
}

int_32 .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [592])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	return $0
}

void .FUNC $343 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [208])
	*([0] + [4]) = $5
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$2 = (*(*($0)) + int_32($3 >> [1]))
	$4 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$4 = *((*($2) + $4))
	
.LABEL $label$1
	$0 = CALL $172(($5 + [8]), $1)
	CALL void $2((int_32 $0), (int_32 $4))
	$4 = *($0 + [184])
	if ( ($4 == 0) ){ goto $label$2 }
	*(($0 + [188])) = $4
	CALL $430($4)
	
.LABEL $label$2
	$4 = *($0 + [144])
	if ( ($4 == 0) ){ goto $label$3 }
	*(($0 + [148])) = $4
	CALL $430($4)
	
.LABEL $label$3
	$4 = *($0 + [96])
	if ( ($4 == 0) ){ goto $label$4 }
	*(($0 + [100])) = $4
	CALL $430($4)
	
.LABEL $label$4
	if ( ((*($0 + [20]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($0 + [28])))
	
.LABEL $label$5
	if ( ((*($0 + [8]) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*(($0 + [16])))
	
.LABEL $label$6
	*([0] + [4]) = ($5 + [208])
}

void .FUNC $342 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [208])
	*([0] + [4]) = $2
	$1 = CALL $172(($2 + [8]), $1)
	CALL $343($0, $1)
	$0 = *($1 + [184])
	if ( ($0 == 0) ){ goto $label$1 }
	*(($1 + [188])) = $0
	CALL $430($0)
	
.LABEL $label$1
	$0 = *($1 + [144])
	if ( ($0 == 0) ){ goto $label$2 }
	*(($1 + [148])) = $0
	CALL $430($0)
	
.LABEL $label$2
	$0 = *($1 + [96])
	if ( ($0 == 0) ){ goto $label$3 }
	*(($1 + [100])) = $0
	CALL $430($0)
	
.LABEL $label$3
	if ( ((*($1 + [20]) & [1]) == 0) ){ goto $label$4 }
	CALL $430(*(($1 + [28])))
	
.LABEL $label$4
	if ( ((*($1 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*(($1 + [16])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [208])
}

void .FUNC $341 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	*(($7 + [40])) = [0]
	*($7 + [32]) = (int_64)0
	$3 = CALL strlen($1)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [32]) = ($3 << [1])
	$6 = (($7 + [32]) | [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($3 + [16]) & [-16])
	$6 = CALL $428($4)
	*($7 + [32]) = ($4 | [1])
	*($7 + [40]) = $6
	*($7 + [36]) = $3
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $446($7, $2)
	CALL $446(($7 + [48]), $7)
	*(($6 = (($7 + [16]) + [8]))) = *((($7 + [48]) + [8]))
	*($7 + [16]) = *($7 + [48])
	$3 = *($7 + [16])
	$1 = ($3 & [1])
	$3 = CALL $436(($7 + [32]), ( *($6) ? (($7 + [16]) | [1]) : $1 ), ( *($7 + [20]) ? uint_32($3 >> [1]) : $1 ))
	$5 = *($3)
	*($3) = (int_64)0
	*($0) = $5
	$3 = ($3 + [8])
	*(($0 + [8])) = *($3)
	*($3) = [0]
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $430(*($6))
	
.LABEL $label$5
	if ( ((*($7) & [1]) == 0) ){ goto $label$6 }
	CALL $430(*($7 + [8]))
	
.LABEL $label$6
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$7 }
	CALL $430(*($7 + [40]))
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [64])
	return (unreachable)
	
.LABEL $label$1
	CALL $432(($7 + [32]))
}

void .FUNC $340 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL $446($5, $1)
	CALL $446(($5 + [32]), $5)
	$1 = (($5 + [32]) + [8])
	*((($5 + [16]) + [8])) = *($1)
	*($5 + [16]) = *($5 + [32])
	CALL $341(($5 + [32]), $2, $3)
	$2 = *($5 + [32])
	$3 = ($2 & [1])
	$2 = CALL $436(($5 + [16]), ( *($5 + [40]) ? (($5 + [32]) | [1]) : $3 ), ( *($5 + [36]) ? uint_32($2 >> [1]) : $3 ))
	$4 = *($2)
	*($2) = (int_64)0
	*($0) = $4
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $430(*($1))
	
.LABEL $label$1
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $430(*($5 + [24]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $430(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [48])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [240])
	*([0] + [4]) = $3
	*(($2 = $3) + [220]) = $0
	*($2 + [208]) = *($1)
	*($2 + [212]) = *($1 + [4])
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	$3 = CALL $176(($2 + [8]))
	*($2 + [228]) = $1
	*($2 + [224]) = $1
	*($2 + [232]) = ($1 + $0)
	CALL $177(($2 + [224]), $3)
	if ( ($0 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*($2 + [228]) = ($2 + [208])
	*($2 + [224]) = ($2 + [220])
	CALL $342(($2 + [224]), ($2 + [8]))
	$1 = *($2 + [192])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($2 + [196])) = $1
	CALL $430($1)
	
.LABEL $label$6
	$1 = *($2 + [152])
	if ( ($1 == 0) ){ goto $label$7 }
	*(($2 + [156])) = $1
	CALL $430($1)
	
.LABEL $label$7
	$1 = *($2 + [104])
	if ( ($1 == 0) ){ goto $label$8 }
	*(($2 + [108])) = $1
	CALL $430($1)
	
.LABEL $label$8
	if ( ((*($2 + [28]) & [1]) == 0) ){ goto $label$9 }
	CALL $430(*(($2 + [36])))
	
.LABEL $label$9
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL $430(*(($2 + [24])))
	
.LABEL $label$10
	*([0] + [4]) = ($2 + [240])
	return [1]
}

void .FUNC $283 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [528])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $428([32])
	CALL $284($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)-4157503053760561152
	$4 = *($3 + [20])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)-4157503053760561152
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $282(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $430($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [816])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [816])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

void .FUNC _ZN3pvp11createtournE9tourninfo (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [96])
	*([0] + [4]) = $10
	$8 = (int_64)0
	$9 = (int_64)59
	$5 = [1328]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	$5 = [1]
	if ( CALL has_auth($6) ){ goto $label$5 }
	$8 = (int_64)0
	$9 = (int_64)59
	$5 = [304]
	$6 = (int_64)0
	
.LOOP $label$6:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$7 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$2 = ($2 + [165])
	goto $label$8 
	
.LABEL $label$9
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$7
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$6 }
	$5 = [1]
	if ( CALL has_auth($6) ){ goto $label$5 }
	$8 = (int_64)0
	$9 = (int_64)59
	$5 = [5360]
	$6 = (int_64)0
	
.LOOP $label$10:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$11 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$2 = ($2 + [165])
	goto $label$12 
	
.LABEL $label$13
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$11
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	$5 = [1]
	if ( CALL has_auth($6) ){ goto $label$5 }
	$8 = (int_64)0
	$9 = (int_64)59
	$5 = [5376]
	$6 = (int_64)0
	
.LOOP $label$14:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$15 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$2 = ($2 + [165])
	goto $label$16 
	
.LABEL $label$17
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$15
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$14 }
	$5 = CALL has_auth($6)
	
.LABEL $label$5
	CALL eosio_assert($5, [5392])
	$8 = (int_64)0
	$7 = (int_64)59
	$5 = [5408]
	$6 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$23 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$2 = ($2 + [165])
	goto $label$21 
	
.LABEL $label$23
	$9 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$19
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$6 = ((int_64)$9 | (int_64)$6)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$18 }
	$8 = (int_64)0
	CALL _ZN3pvp29checkFirstTransferTransactionEyyb(($10 + [64]), $0, (int_64)0, $6, [0])
	$7 = *($10 + [64])
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$24 }
	$9 = (int_64)59
	$5 = [1328]
	$6 = (int_64)0
	
.LOOP $label$25:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$26 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$2 = ($2 + [165])
	goto $label$27 
	
.LABEL $label$28
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$26
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$25 }
	if ( CALL has_auth($6) ){ goto $label$29 }
	$8 = (int_64)0
	$9 = (int_64)59
	$5 = [304]
	$6 = (int_64)0
	
.LOOP $label$30:
	$7 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$31 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$2 = ($2 + [165])
	goto $label$32 
	
.LABEL $label$33
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$31
	$5 = ($5 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$30 }
	$7 = (int_64)0
	if ( (CALL has_auth($6) == 0) ){ goto $label$24 }
	
.LABEL $label$29
	CALL eosio_assert([1], [1056])
	$8 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$36:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$35 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	
.LOOP $label$38:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$35 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$38 }
	
.LABEL $label$37
	$2 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	CALL eosio_assert($2, [1120])
	*($10 + [72]) = (int_64)1397703940
	$7 = (int_64)4000000
	*($10 + [64]) = (int_64)4000000
	
.LABEL $label$24
	CALL $344(($10 + [48]), $1)
	$8 = *($10 + [48])
	$9 = *($10 + [56])
	$5 = ($1 + [88])
	CALL eosio_assert(((int_64)*($5) == (int_64)$9), [4384])
	$8 = ((int_64)$8 + (int_64)*($1 + [80]))
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [4432])
	CALL eosio_assert(((int_64)$8 < (int_64)4611686018427387904), [4464])
	CALL eosio_assert(((int_64)$9 == (int_64)*($10 + [72])), [4080])
	$9 = *($10 + [56])
	*(($2 = (($10 + [16]) + [8]))) = $9
	*($10 + [16]) = *($10 + [48])
	CALL eosio_assert(((int_64)$9 == (int_64)*($5)), [4384])
	$9 = ((int_64)*($10 + [16]) + (int_64)*($1 + [80]))
	*($10 + [16]) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [4432])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [4464])
	*(($10 + [8])) = *($2)
	*($10) = *($10 + [16])
	CALL _Z19EOS_asset_to_stringN5eosio5assetE(($10 + [32]), _Z19EOS_asset_to_stringN5eosio5assetE)
	CALL $345(($10 + [80]), [5424], ($10 + [32]))
	$5 = (*($10 + [80]) & [1])
	$4 = *($10 + [88])
	$2 = ( $4 ? (($10 + [80]) | [1]) : $5 )
	$3 = ((int_64)$8 <= (int_64)$7)
	if ( ($5 == 0) ){ goto $label$39 }
	CALL $430($4)
	
.LABEL $label$39
	CALL eosio_assert($3, $2)
	if ( ((*($10 + [32]) & [1]) == 0) ){ goto $label$40 }
	CALL $430(*($10 + [40]))
	
.LABEL $label$40
	CALL _ZN11CTournament16CreateTournamentEP3pvpP9tourninfo($0, $1)
	*([0] + [4]) = ($10 + [96])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[1]), [816])
	CALL memcpy(($5 + [8]), $3, [2])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 ($6 & [65535])), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

void .FUNC _ZN3pvp10claimhonorEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [80])
	*([0] + [4]) = $12
	CALL require_auth($1)
	$3 = CALL $101($12)
	CALL _ZN3pvp17checkAndGetWizardEyyR6wizardb($9, $1, $2, $3, [1])
	$11 = *(($0 + [240]))
	$10 = *(($0 + [244]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$1 }
	$9 = ($10 + [-24])
	$5 = ([0] - $11)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$2) ){ goto $label$1 }
	$10 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [216])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$4 }
	$11 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$4), [320])
	goto $label$3 
	
.LABEL $label$4
	$11 = [0]
	$9 = CALL db_find_i64(*(($0 + [216])), *(($0 + [224])), (int_64)-3111684726404022272, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	$11 = CALL $100($4, $9)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$4), [320])
	
.LABEL $label$3
	$7 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($7, [6416])
	$8 = *(($0 + [200]))
	$10 = *(($0 + [204]))
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$5 }
	$9 = ($10 + [-24])
	$5 = ([0] - $8)
	
.LOOP $label$6:
	if ( ((int_64)*(*($9)) == (int_64)$2) ){ goto $label$5 }
	$10 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$6 }
	
.LABEL $label$5
	$6 = ($0 + [176])
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$10 }
	$9 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)$6), [320])
	if ( $9 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = CALL db_find_i64(*(($0 + [176])), *(($0 + [184])), (int_64)7865338659113693184, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$8 }
	$9 = CALL $103($6, $9)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)$6), [320])
	
.LABEL $label$9
	CALL eosio_assert([1], [832])
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)$6), [880])
	CALL eosio_assert(((int_64)*(($0 + [176])) == (int_64)CALL $fimport$15()), [928])
	*($9 + [8]) = ((int_64)*($9 + [8]) + (int_64)*($11 + [8]))
	$2 = *($9)
	CALL eosio_assert([1], [992])
	CALL eosio_assert([1], [592])
	CALL memcpy(($12 + [64]), $9, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy((($12 + [64]) | [8]), ($9 + [8]), [8])
	CALL db_update_i64(*($9 + [20]), $1, ($12 + [64]), [16])
	$9 = ($0 + [192])
	if ( (uint_64)($2 <= *($9)) ){ goto $label$7 }
	*($9) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert(((int_64)*(($0 + [176])) == (int_64)CALL $fimport$15()), [528])
	*(($9 = CALL $428([32])) + [16]) = $6
	*($9) = $2
	*($9 + [8]) = *($11 + [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($12 + [64]), $9, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy((($12 + [64]) | [8]), ($9 + [8]), [8])
	$2 = *($9)
	$10 = CALL db_store_i64(*(($0 + [184])), (int_64)7865338659113693184, $1, $2, ($12 + [64]), [16])
	*($9 + [20]) = $10
	$6 = ($0 + [192])
	if ( (uint_64)($2 <= *($6)) ){ goto $label$11 }
	*($6) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($12 + [56]) = $9
	$2 = *($9)
	*($12 + [64]) = $2
	*($12 + [52]) = $10
	$5 = ($0 + [204])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [208]))) ){ goto $label$13 }
	*($6 + [8]) = $2
	*($6 + [16]) = $10
	*($12 + [56]) = [0]
	*($6) = $9
	*($5) = ($6 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $104(($0 + [200]), ($12 + [56]), ($12 + [64]), ($12 + [52]))
	
.LABEL $label$12
	$9 = *($12 + [56])
	*($12 + [56]) = [0]
	if ( ($9 == 0) ){ goto $label$7 }
	CALL $430($9)
	
.LABEL $label$7
	CALL eosio_assert($7, [448])
	CALL eosio_assert($7, [496])
	$9 = CALL db_next_i64(*($11 + [28]), ($12 + [64]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$14 }
	CALL $100($4, $9)
	
.LABEL $label$14
	CALL $105($4, $11)
	$9 = *($3 + [20])
	if ( ($9 == 0) ){ goto $label$15 }
	*(($3 + [24])) = $9
	CALL $430($9)
	
.LABEL $label$15
	$9 = *($3 + [8])
	if ( ($9 == 0) ){ goto $label$16 }
	*(($3 + [12])) = $9
	CALL $430($9)
	
.LABEL $label$16
	*([0] + [4]) = ($12 + [80])
}

void .FUNC _ZN3pvp10checkwizcdEy (int_32 $0, int_64 $1)
{
	CALL _ZN3pvp18checkCooldownInnerEyb($0, $1, [1])
	*($0 + [48]) = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	CALL $362($0)
}

void .FUNC $280 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$15()), [528])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $428([32])
	CALL $281($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)-4157503053760561152
	$4 = *($3 + [20])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)-4157503053760561152
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $282(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $430($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = (*([0] + [4]) - [160])
	*([0] + [4]) = $3
	*(($4 = $3) + [124]) = $0
	*($4 + [112]) = *($1)
	*($4 + [116]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*($4 + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)0
	*($4 + [24]) = [0]
	*($4 + [32]) = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [48]) = (int_64)0
	*($4 + [56]) = (int_64)0
	*($4 + [64]) = [0]
	*($4 + [72]) = (int_64)0
	*(($4 + [104])) = (int_64)0
	*(($2 = ($4 + [96]))) = (int_64)0
	*(($3 = ($4 + [88]))) = (int_64)0
	*($4 + [80]) = (int_64)0
	*($3) = [0]
	*(($4 + [92])) = [0]
	*($2) = [0]
	*($4 + [132]) = $1
	*($4 + [128]) = $1
	*($4 + [136]) = ($1 + $0)
	*($4 + [144]) = ($4 + [128])
	*($4 + [152]) = $4
	CALL $369(($4 + [152]), ($4 + [144]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($4 + [132]) = ($4 + [112])
	*($4 + [128]) = ($4 + [124])
	CALL $370(($4 + [128]), $4)
	$1 = *($3)
	if ( ($1 == 0) ){ goto $label$5 }
	*(($4 + [92])) = $1
	CALL $430($1)
	
.LABEL $label$5
	*([0] + [4]) = ($4 + [160])
	return [1]
}

void .FUNC _ZN3pvp10resetwizcdEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [112])
	*([0] + [4]) = $10
	*($10 + [104]) = $1
	*($10 + [96]) = ($0 + [136])
	CALL $363(($10 + [80]), ($10 + [96]), ($10 + [104]))
	$4 = ($10 + [96])
	$6 = *($10 + [84])
	if ( ($6 == 0) ){ goto $label$2 }
	$5 = [0]
	if ( ((int_64)*($10 + [104]) != (int_64)*($6 + [8])) ){ goto $label$1 }
	$4 = *($10 + [80])
	$5 = $6
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [6688])
	$1 = (int_64)0
	$7 = (int_64)59
	$6 = [304]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$4 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$2 = ($2 + [165])
	goto $label$5 
	
.LABEL $label$6
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$4
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$3 }
	if ( (CALL has_auth($8) == 0) ){ goto $label$9 }
	*($10 + [80]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4))
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [448])
	CALL $365(($10 + [80]))
	CALL $359(*($10 + [96]), $5)
	*($0 + [48]) = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	goto $label$8 
	
.LABEL $label$9
	$1 = (int_64)0
	$9 = (int_64)59
	$6 = [6736]
	$8 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$15 }
	$2 = *($6)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$2 = ($2 + [165])
	goto $label$13 
	
.LABEL $label$15
	$7 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$11
	$6 = ($6 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$8 = ((int_64)$7 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	CALL _ZN3pvp29checkFirstTransferTransactionEyyb(($10 + [80]), $0, (int_64)0, $8, [1])
	if ( (uint_64)(*($5 + [16]) <= CALL current_time()) ){ goto $label$16 }
	$1 = *(($5 + [16]))
	$9 = CALL current_time()
	$7 = *($10 + [88])
	CALL eosio_assert([1], [1056])
	$9 = (int_64))($1 - $9)
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	
.LOOP $label$21:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	$2 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$2 = [0]
	
.LABEL $label$17
	CALL eosio_assert($2, [1120])
	*(($10 + [56])) = [0]
	*($10 + [48]) = (int_64)0
	$1 = ((uint_64)$9 / (uint_64)(int_64)6000000)
	$6 = CALL strlen([6752])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$24 }
	*($10 + [48]) = ($6 << [1])
	$2 = (($10 + [48]) | [1])
	if ( $6 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$3 = (($6 + [16]) & [-16])
	$2 = CALL $428($3)
	*($10 + [48]) = ($3 | [1])
	*($10 + [56]) = $2
	*($10 + [52]) = $6
	
.LABEL $label$23
	CALL memcpy($2, [6752], $6)
	
.LABEL $label$22
	*(($2 + $6)) = [0]
	*($10 + [24]) = $7
	*(($10 + [8])) = $7
	*($10 + [16]) = $1
	*($10) = $1
	CALL _Z19EOS_asset_to_stringN5eosio5assetE(($10 + [32]), _Z19EOS_asset_to_stringN5eosio5assetE)
	$6 = *($10 + [32])
	$2 = ($6 & [1])
	$6 = CALL $436(($10 + [48]), ( *($10 + [40]) ? (($10 + [32]) | [1]) : $2 ), ( *($10 + [36]) ? uint_32($6 >> [1]) : $2 ))
	$2 = ($6 + [8])
	*((($10 + [64]) + [8])) = *($2)
	*($10 + [64]) = *($6)
	*($6) = [0]
	*(($6 + [4])) = [0]
	*($2) = [0]
	if ( ((*($10 + [32]) & [1]) == 0) ){ goto $label$25 }
	CALL $430(*((($10 + [32]) + [8])))
	
.LABEL $label$25
	if ( ((*($10 + [48]) & [1]) == 0) ){ goto $label$26 }
	CALL $430(*($10 + [56]))
	
.LABEL $label$26
	CALL eosio_assert(((int_64)*((($10 + [80]) + [8])) == (int_64)$7), [4080])
	CALL eosio_assert(((int_64)*($10 + [80]) >= (int_64)$1), ( *($10 + [72]) ? (($10 + [64]) | [1]) : (*($10 + [64]) & [1]) ))
	if ( ((*($10 + [64]) & [1]) == 0) ){ goto $label$16 }
	CALL $430(*((($10 + [64]) + [8])))
	
.LABEL $label$16
	*($10 + [64]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4))
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [448])
	CALL $365(($10 + [64]))
	CALL $359(*($10 + [96]), $5)
	*($0 + [48]) = ((uint_64)((int_64)((int_64)((int_64)*($0 + [48]) + (int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) + (int_64)(CASTING int_64)(int_32 CALL $fimport$47())) * (int_64)2543657) % (uint_64)(int_64)1147797411054223359)
	
.LABEL $label$8
	CALL $362($0)
	*([0] + [4]) = ($10 + [112])
	return (unreachable)
	
.LABEL $label$7
	CALL $432(($10 + [48]))
}

int_32 .FUNC $281 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = $1
	$1 = *($2)
	$3 = *(*($2 + [4]))
	*($0) = *($3)
	*($0 + [8]) = *(($3 + [8]))
	CALL eosio_assert([1], [592])
	CALL memcpy($4, $0, [8])
	CALL eosio_assert([1], [592])
	CALL memcpy(($4 | [8]), ($0 + [8]), [4])
	*($0 + [20]) = CALL db_store_i64(*($1 + [8]), (int_64)-4157503053760561152, *(*($2 + [8])), (int_64)-4157503053760561152, $4, [12])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-4157503053760561152) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-4157503053760561151
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	return $0
}