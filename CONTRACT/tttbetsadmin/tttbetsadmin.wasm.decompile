(data (i32.const 8192) " &&\00\00\01\02\04\07\03\06\05\00")
(data (i32.const 8205) "&&\00stoi\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8299) "invalid first pos\00")
(data (i32.const 8317) "parse memo error\00")
(data (i32.const 8334) "transfer\00")
(data (i32.const 8343) "tttbetstoken\00: no conversion\00")
(data (i32.const 8372) "tttbet2token\00: out of range\00")
(data (i32.const 8400) "tttbetsadmin\00")
(data (i32.const 8413) "In emergency state!\00")
(data (i32.const 8433) "crongldtoeos\00")
(data (i32.const 8446) "cronreveal\00")
(data (i32.const 8457) " Human only! \00")
(data (i32.const 8471) "uugame\00")
(data (i32.const 8478) " please use eos uudog or uufish token \00")
(data (i32.const 8517) "uufish\00")
(data (i32.const 8524) "UUFISH\00")
(data (i32.const 8531) "issue_token overflow!\00")
(data (i32.const 8553) "active\00")
(data (i32.const 8560) "issue\00")
(data (i32.const 8566) "UUDOG back into UUFISH\00")
(data (i32.const 8589) "buy type does not exist!\00")
(data (i32.const 8614) "gold\00")
(data (i32.const 8619) "cron\00")
(data (i32.const 8624) "not uufish player!\00")
(data (i32.const 8643) "more than you have\00")
(data (i32.const 8662) "EEOS\00")
(data (i32.const 8667) "transfer token overflow!\00")
(data (i32.const 8692) "gold back into EOS\00")
(data (i32.const 8711) "has been processed!\00")
(data (i32.const 8731) "not uufish player\00")
(data (i32.const 8749) "mining UUFISH\00")
(data (i32.const 8763) "bprowintopool overflow!\00")
(data (i32.const 8787) "tttbets2pool\00")
(data (i32.const 8800) "uufish back to uugames2pool 50/100 banker probability win\00")
(data (i32.const 8858) "tttbets4draw\00")
(data (i32.const 8871) "uufish back to uugamesreser 40/100 banker probability win\00")
(data (i32.const 8929) "tttbetsgroup\00")
(data (i32.const 8942) "uufish back to uugamesgroup 10/100 banker probability win\00")
(data (i32.const 9000) "tttbetsstake\00")
(data (i32.const 9013) "updatectrbu\00")
(data (i32.const 9025) "fishreceipt\00")
(data (i32.const 9037) "set a wrong state!\00")
(data (i32.const 9056) "have init already!\00")
(data (i32.const 9075) "string is too long to be a valid name\00")
(data (i32.const 9113) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 9180) "character is not in allowed character set for names\00")
(data (i32.const 9232) "get_action size failed\00")
(data (i32.const 9255) "get_action failed\00")
(data (i32.const 9273) "get\00")
(data (i32.const 9277) "read\00")
(data (i32.const 9282) "UUDOG\00")
(data (i32.const 9288) "invalid memo\00")
(data (i32.const 9301) "no uu game id\00")
(data (i32.const 9315) " gameid \00")
(data (i32.const 9324) "wrong game id\00")
(data (i32.const 9338) "no buytype\00")
(data (i32.const 9349) " buytype \00")
(data (i32.const 9359) "buy gold 10 at least\00")
(data (i32.const 9380) " buynum \00")
(data (i32.const 9389) "can\'t buy use this token!\00")
(data (i32.const 9415) "payamount isn\'t right!\00")
(data (i32.const 9438) "gun\00")
(data (i32.const 9442) " guntype \00")
(data (i32.const 9452) "shell grade wrong\00")
(data (i32.const 9470) "shell upgrade level wrong\00")
(data (i32.const 9496) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9556) "X%\00\00")
(data (i32.const 9560) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 9593) "string is too long to be a valid symbol_code\00")
(data (i32.const 9638) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9691) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9740) "invalid symbol name\00")
(data (i32.const 9760) "write\00")
(data (i32.const 9766) "cannot create objects in table of another contract\00")
(data (i32.const 9817) "buy bill not found\00")
(data (i32.const 9836) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 9887) "error reading iterator\00")
(data (i32.const 9910) "cannot pass end iterator to erase\00")
(data (i32.const 9944) "cannot increment end iterator\00")
(data (i32.const 9974) "object passed to erase is not in multi_index\00")
(data (i32.const 10019) "cannot erase objects in table of another contract\00")
(data (i32.const 10069) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10122) "multiplication overflow\00")
(data (i32.const 10146) "multiplication underflow\00")
(data (i32.const 10171) "cannot pass end iterator to modify\00")
(data (i32.const 10206) "object passed to modify is not in multi_index\00")
(data (i32.const 10252) "cannot modify objects in table of another contract\00")
(data (i32.const 10303) "next primary key in table is at autoincrement limit\00")
(data (i32.const 10355) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 10409) "cannot decrement iterator at beginning of table\00")
(data (i32.const 10457) "gunten\00")
(data (i32.const 10464) "guntwty\00")
(data (i32.const 10472) "gunthity\00")
(data (i32.const 10481) "gunforty\00")
(data (i32.const 10490) "gunfifty\00")
(data (i32.const 10499) "gunsixty\00")
(data (i32.const 10508) "gunsevty\00")
(data (i32.const 10517) "guneigty\00")
(data (i32.const 10526) "gunninty\00")
(data (i32.const 10535) "gunhudred\00")
(data (i32.const 10545) "autofire24h\00")
(data (i32.const 10557) "aimfire15s\00")
(data (i32.const 10568) "speedfiretws\00")
(data (i32.const 19008) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(import "env" "memcpy" (func $fimport$0 (param i32 i32 i32) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "ripemd160" (func $fimport$4 (param i32 i32 i32)))
(import "env" "action_data_size" (func $fimport$5 (result i32)))
(import "env" "read_action_data" (func $fimport$6 (param i32 i32) (result i32)))
(import "env" "db_find_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "require_auth" (func $fimport$8 (param i64)))
(import "env" "current_time" (func $fimport$9 (result i64)))
(import "env" "current_receiver" (func $fimport$10 (result i64)))
(import "env" "require_auth2" (func $fimport$11 (param i64 i64)))
(import "env" "__multi3" (func $fimport$12 (param i32 i64 i64 i64 i64)))
(import "env" "db_lowerbound_i64" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$14 (param i32 i32) (result i32)))
(import "env" "require_recipient" (func $fimport$15 (param i64)))
(import "env" "eosio_exit" (func $fimport$16 (param i32)))
(import "env" "get_action" (func $fimport$17 (param i32 i32 i32 i32) (result i32)))
(import "env" "prints" (func $fimport$18 (param i32)))
(import "env" "printui" (func $fimport$19 (param i64)))
(import "env" "send_inline" (func $fimport$20 (param i32 i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$21 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$22))
(import "env" "db_store_i64" (func $fimport$23 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$24 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$25 (param i32)))
(import "env" "db_idx64_find_primary" (func $fimport$26 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$27 (param i32)))
(import "env" "db_update_i64" (func $fimport$28 (param i32 i64 i32 i32)))
(import "env" "db_idx64_update" (func $fimport$29 (param i32 i64 i32)))
(import "env" "db_idx64_store" (func $fimport$30 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$32 (param i64 i64 i64) (result i32)))
(import "env" "send_deferred" (func $fimport$33 (param i32 i64 i32 i32 i32)))
(import "env" "prints_l" (func $fimport$34 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$35 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$36 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$37 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$38 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$39 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$40 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$41 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$42 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$43 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$44 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$45 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$46 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$47 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$48 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$49 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$50 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$51 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$52 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$53 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $78))
(export "_Znwj" (func $116))
(export "_ZdlPv" (func $118))
(export "_Znaj" (func $117))
(export "_ZdaPv" (func $119))
(export "_ZnwjSt11align_val_t" (func $120))
(export "_ZnajSt11align_val_t" (func $121))
(export "_ZdlPvSt11align_val_t" (func $122))
(export "_ZdaPvSt11align_val_t" (func $123))
(table $0 9 9 anyfunc)
(elem (i32.const 1) $8 $10 $12 $14 $16 $18 $20 $22)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 19265))
(global $global$2 i32 (i32.const 19265))


void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [40])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $77(*($1), ($4 + [48]))
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9277])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $140($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9760])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9760])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9760])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $140($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $138 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

int_32 .FUNC $115 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [52]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10409])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-5915095480504680448)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10355])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10355])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $81(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $157($0)
	
.LABEL $label$1
}

int_32 .FUNC $130 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $127($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $131 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $132 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $149(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

int_32 .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $150(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $134 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $151([8208])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [8208], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $142())
	*(CALL $142()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$0 = CALL $148($4, ($3 + [12]), $2)
	$5 = CALL $142()
	$2 = *($5)
	*($5) = $6
	if ( ((int_32)$2 == (int_32)[34]) ){ goto $label$2 }
	$5 = *($3 + [12])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($5 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $135($3)
	
.LABEL $label$1
	CALL $136($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

void .FUNC $136 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $137($1, $0, [8356])
	CALL $139()
	(unreachable)
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $151($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($5 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$1 = *($0)
	$5 = ($1 & [1])
	if ( $5 ){ goto $label$9 }
	$3 = [10]
	$1 = uint_32($1 >> [1])
	if ( (([10] - $1) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$1 = *(($0 + [4]))
	$3 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($3 - $1) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $127($0, $3, (($1 + $4) - $3), $1, $1, [0], $4, $2)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$3 = ( *(($0 + [8])) ? ($0 + [1]) : $5 )
	CALL memcpy(($3 + $1), $2, $4)
	$1 = ($1 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $1
	*(($3 + $1)) = [0]
	(unreachable)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $152(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [10584])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $152(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9887])
	
.LABEL $label$5
	$4 = CALL $154($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([40])) + [16]) = (int_64)100
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = [0]
	*($5 + [28]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $101(($3 + [32]), ($3 + [24]))
	*($5 + [36]) = [-1]
	*($5 + [32]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $37(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $157($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $126 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10464]
	*($3 + [28]) = CALL $151([10464])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [20]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)5500000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10457]
	*($3 + [28]) = CALL $151([10457])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [10]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)50000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $43 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [216]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [220])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [216]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [176]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *(($0 + [136]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [140])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL _ZdlPv($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [136]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$16 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL _ZdlPv($4)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($0 + [96]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $1
	
.LABEL $label$17
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$16
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$21 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$23 }
	
.LOOP $label$24:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL _ZdlPv($4)
	
.LABEL $label$25
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$24 }
	$3 = *(($0 + [56]))
	goto $label$22 
	
.LABEL $label$23
	$3 = $1
	
.LABEL $label$22
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$21
	return $0
}

int_32 .FUNC $42 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [272])
	$global$0 = $4
	*(($5 = (($4 + [256]) + [8]))) = *(($3 + [8]))
	*($4 + [256]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [104]) + [8])) = $3
	$2 = *($4 + [256])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [104]) = $2
	*($4 + [240]) = [8400]
	*($4 + [244]) = CALL $151([8400])
	*($4 + [80]) = *($4 + [240])
	$3 = CALL $5(($4 + [248]), ($4 + [80]))
	*($4 + [232]) = [8400]
	*($4 + [236]) = CALL $151([8400])
	*($4 + [72]) = *($4 + [232])
	CALL $5(($4 + [104]), ($4 + [72]))
	*(($0 + [40])) = (int_64)-3570662469203616464
	*(($0 + [48])) = (int_64)-1
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [32]) = *($3)
	*($4 + [216]) = [8400]
	*($4 + [220]) = CALL $151([8400])
	*($4 + [64]) = *($4 + [216])
	$3 = CALL $5(($4 + [224]), ($4 + [64]))
	*($4 + [208]) = [8400]
	*($4 + [212]) = CALL $151([8400])
	*($4 + [56]) = *($4 + [208])
	CALL $5(($4 + [104]), ($4 + [56]))
	*(($0 + [80])) = (int_64)-3570662469203616464
	*(($0 + [88])) = (int_64)-1
	*(($0 + [96])) = (int_64)0
	*(($0 + [104])) = [0]
	*(($0 + [108])) = [0]
	*($0 + [72]) = *($3)
	*($4 + [192]) = [8400]
	*($4 + [196]) = CALL $151([8400])
	*($4 + [48]) = *($4 + [192])
	$3 = CALL $5(($4 + [200]), ($4 + [48]))
	*($4 + [184]) = [8400]
	*($4 + [188]) = CALL $151([8400])
	*($4 + [40]) = *($4 + [184])
	CALL $5(($4 + [104]), ($4 + [40]))
	*(($0 + [120])) = (int_64)-3570662469203616464
	*(($0 + [128])) = (int_64)-1
	*(($0 + [136])) = (int_64)0
	*(($0 + [144])) = [0]
	*($0 + [112]) = *($3)
	*($4 + [168]) = [8400]
	*($4 + [172]) = CALL $151([8400])
	*($4 + [32]) = *($4 + [168])
	$3 = CALL $5(($4 + [176]), ($4 + [32]))
	*($4 + [160]) = [8400]
	*($4 + [164]) = CALL $151([8400])
	*($4 + [24]) = *($4 + [160])
	CALL $5(($4 + [104]), ($4 + [24]))
	*(($0 + [160])) = (int_64)-3570662469203616464
	*(($0 + [168])) = (int_64)-1
	*(($0 + [176])) = (int_64)0
	*(($0 + [184])) = [0]
	*(($0 + [188])) = [0]
	*($0 + [152]) = *($3)
	*($4 + [144]) = [8400]
	*($4 + [148]) = CALL $151([8400])
	*($4 + [16]) = *($4 + [144])
	$3 = CALL $5(($4 + [152]), ($4 + [16]))
	*($4 + [136]) = [8400]
	*($4 + [140]) = CALL $151([8400])
	*($4 + [8]) = *($4 + [136])
	CALL $5(($4 + [104]), ($4 + [8]))
	*(($0 + [200])) = (int_64)-3570662469203616464
	*(($0 + [208])) = (int_64)-1
	*(($0 + [216])) = (int_64)0
	*(($0 + [224])) = [0]
	*(($0 + [228])) = [0]
	*($0 + [192]) = *($3)
	*($4 + [88]) = [8400]
	*($4 + [92]) = CALL $151([8400])
	*($4) = *($4 + [88])
	CALL $5(($4 + [96]), $4)
	*($0 + [28]) = ($4 + [104])
	$global$0 = ($4 + [272])
	return $0
}

void .FUNC $41 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $72($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $80(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [24])
	$4 = ( *(($1 + [28])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-24] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	$6 = ($1 + [24])
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $72($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	
.LABEL $label$2
	*($2 + [12]) = $3
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	$0 = ($4 - $3)
	if ( ((int_32)$0 > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$4
	CALL memcpy($3, $1, [8])
	$4 = ($3 + [8])
	*($2 + [12]) = $4
	$7 = ($1 + [8])
	if ( ((int_32)($0 + [-8]) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = ($3 + [16])
	*($2 + [12]) = $4
	*($2 + [24]) = *(($1 + [16]))
	if ( ((int_32)($0 + [-16]) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [24]), [8])
	*($2 + [12]) = ($3 + [24])
	CALL $100(($2 + [8]), $6)
	$global$0 = ($2 + [32])
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [8614]
	*($3 + [28]) = CALL $151([8614])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	$5 = CALL $151([8662])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8661]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)10
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $140($0)
	
.LABEL $label$1
	$8 = *($2)
	$2 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($9 = ((int_32)$5 * (int_32)[24]))))) = $2
	*($1 + [8]) = $8
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $9) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [8517]
	*($3 + [28]) = CALL $151([8517])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	$5 = CALL $151([9282])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [9281]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8372]
	*($3 + [44]) = CALL $151([8372])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)1
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [16]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $25($0, $4)
	if ( ((int_32)*($4 + [16]) == (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$2
	*($3) = $1
	CALL $85($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $86($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $124 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [64])
	$global$0 = $2
	*(($2 + [56])) = (int_64)0
	*($2 + [48]) = (int_64)0
	$3 = ($0 + [32])
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [16]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	$4 = ($2 + [48])
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$4 = CALL $25($3, $4)
	if ( ((int_32)*($4 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	goto $label$1 
	
.LABEL $label$4
	$4 = ($2 + [48])
	
.LABEL $label$1
	CALL $2((*($4 + [1]) == 0), [8413], [20008])
	*($2 + [40]) = [8400]
	*($2 + [44]) = CALL $151([8400])
	*($2 + [16]) = *($2 + [40])
	CALL $5(($2 + [48]), ($2 + [16]))
	*($2 + [24]) = [8619]
	*($2 + [28]) = CALL $151([8619])
	*($2 + [8]) = *($2 + [24])
	CALL $5(($2 + [32]), ($2 + [8]))
	CALL require_auth2((int_64)-3570662469203616464, (int_64)5037610434748743680)
	CALL $61($0, *($1))
	$global$0 = ($2 + [64])
}

int_32 .FUNC $9 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $154($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [272]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9277])
	
.LABEL $label$5
	CALL memcpy(($4 + [272]), $2, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [28]) = ($2 + [8])
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $42(($4 + [40]), $0, $1, ($4 + [8]))
	*($4 + [280]) = *($4 + [272])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($4 + [280])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $157($2)
	
.LABEL $label$7
	CALL $43($8)
	$global$0 = ($4 + [288])
	return [1]
}

void .FUNC $6 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $154($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [12]) = $1
	*($2 + [8]) = $1
	*($2 + [16]) = ($1 + $3)
	*($2 + [24]) = ($2 + [8])
	*($2 + [36]) = ($0 + [8])
	*($2 + [32]) = $0
	*($2 + [40]) = ($0 + [16])
	*($2 + [44]) = ($0 + [32])
	CALL $24(($2 + [32]), ($2 + [24]))
	$global$0 = ($2 + [48])
}

void .FUNC $7 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$5 = ($global$0 - [592])
	$global$0 = $5
	*($5 + [544]) = $1
	*(($5 + [512])) = (int_64)0
	*($5 + [504]) = (int_64)0
	$6 = ($0 + [32])
	$7 = *(($0 + [60]))
	if ( ((int_32)$7 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$7 = *(($7 + [-24]))
	if ( ((int_32)*($7 + [16]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$3
	if ( $7 ){ goto $label$1 }
	$7 = ($5 + [504])
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL db_find_i64(*($6), *(($0 + [40])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $25($6, $7)
	if ( ((int_32)*($7 + [16]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	goto $label$1 
	
.LABEL $label$4
	$7 = ($5 + [504])
	
.LABEL $label$1
	CALL $2((*($7 + [1]) == 0), [8413], [20008])
	CALL require_auth($1)
	CALL $26(($5 + [504]), [1], [0])
	*($5 + [496]) = [8433]
	*($5 + [500]) = CALL $151([8433])
	*($5 + [128]) = *($5 + [496])
	$7 = CALL $5(($5 + [336]), ($5 + [128]))
	if ( ((int_64)*($5 + [512]) == (int_64)*($7)) ){ goto $label$8 }
	*($5 + [480]) = [8446]
	*($5 + [484]) = CALL $151([8446])
	*($5 + [120]) = *($5 + [480])
	$7 = CALL $5(($5 + [488]), ($5 + [120]))
	[0]
	[1]
	if ( ((int_64)*(($5 + [512])) != (int_64)*($7)) ){ goto $label$7 }
	
.LABEL $label$8
	*($5 + [464]) = [8400]
	*($5 + [468]) = CALL $151([8400])
	*($5 + [112]) = *($5 + [464])
	$7 = CALL $5(($5 + [472]), ($5 + [112]))
	if ( ((int_64)*($5 + [504]) != (int_64)*($7)) ){ goto $label$9 }
	CALL $2([1], [8457], [20025])
	goto $label$5 
	
.LABEL $label$9
	[1]
	goto $label$6 
	
.LABEL $label$7
	[1]
	
.LABEL $label$6
	*($5 + [456]) = [8334]
	*($5 + [460]) = CALL $151([8334])
	*($5 + [104]) = *($5 + [456])
	$7 = CALL $5(($5 + [232]), ($5 + [104]))
	if ( ((int_64)*(($5 + [512])) != (int_64)*($7)) ){ goto $label$11 }
	*($5 + [448]) = [8343]
	*($5 + [452]) = CALL $151([8343])
	*($5 + [96]) = *($5 + [448])
	$7 = CALL $5(($5 + [560]), ($5 + [96]))
	if ( ((int_64)*($5 + [504]) != (int_64)*($7)) ){ goto $label$10 }
	CALL $2([1], [8457], [20025])
	goto $label$5 
	
.LABEL $label$11
	CALL $2([0], [8457], [20025])
	goto $label$5 
	
.LABEL $label$10
	*($5 + [440]) = [8372]
	*($5 + [444]) = CALL $151([8372])
	*($5 + [88]) = *($5 + [440])
	$7 = CALL $5(($5 + [584]), ($5 + [88]))
	if ( ((int_64)*($5 + [504]) != (int_64)*($7)) ){ goto $label$12 }
	CALL $2([1], [8457], [20025])
	goto $label$5 
	
.LABEL $label$12
	*($5 + [424]) = [8343]
	*($5 + [428]) = CALL $151([8343])
	*($5 + [80]) = *($5 + [424])
	$7 = CALL $5(($5 + [432]), ($5 + [80]))
	CALL $2(((int_64)*($5 + [504]) == (int_64)*($7)), [8457], [20025])
	
.LABEL $label$5
	*($5 + [416]) = [8400]
	*($5 + [420]) = CALL $151([8400])
	*($5 + [72]) = *($5 + [416])
	$7 = CALL $5(($5 + [336]), ($5 + [72]))
	if ( ((int_64)*($5 + [544]) == (int_64)*($7)) ){ goto $label$15 }
	*($5 + [408]) = [8400]
	*($5 + [412]) = CALL $151([8400])
	*($5 + [64]) = *($5 + [408])
	if ( ((int_64)*(CALL $5(($5 + [232]), ($5 + [64]))) != (int_64)$2) ){ goto $label$15 }
	$7 = CALL $126(($5 + [336]), $4, [0], [6], $4)
	$6 = [1]
	$9 = ($9 & [1])
	$9 = *($5 + [336])
	$8 = CALL $151([8471])
	if ( ((int_32)$8 != (int_32)( *($7 + [4]) ? uint_32($9 >> [1]) : $9 )) ){ goto $label$16 }
	$6 = ((int_32)CALL $133($7, [0], [-1], [8471], $8) != (int_32)[0])
	$9 = (*($5 + [336]) & [1])
	
.LABEL $label$16
	if ( ($9 == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$17
	if ( $6 ){ goto $label$15 }
	$7 = [1]
	if ( CALL $27($0, $3) ){ goto $label$18 }
	$7 = [1]
	if ( CALL $28($0, $3) ){ goto $label$18 }
	$7 = CALL $29($0, $3)
	
.LABEL $label$18
	CALL $2($7, [8478], [20002])
	*($5 + [432]) = (int_64)0
	$7 = CALL $125(($5 + [376]), $4)
	CALL $30($0, $7, ($5 + [407]), ($5 + [432]), ($5 + [392]), *($3))
	if ( ((*($7) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*($7 + [8]))
	
.LABEL $label$19
	CALL $31($0, ($5 + [544]), ($5 + [432]), ($5 + [392]), $3)
	$1 = *($5 + [432])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$23 }
	$6 = [0]
	$4 = *([0] + [9556])
	
.LOOP $label$25:
	*((($5 + [336]) + ($7 = $6))) = *(($4 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$6 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$24 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$25 }
	
.LABEL $label$24
	*(($5 + [240])) = [0]
	*($5 + [232]) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$22 }
	*($5 + [232]) = ($6 << [1])
	$4 = (($5 + [232]) | [1])
	goto $label$21 
	
.LABEL $label$23
	*(($5 + [240])) = [0]
	*($5 + [232]) = (int_64)0
	*($5 + [232]) = [0]
	$6 = (($5 + [232]) | [1])
	goto $label$20 
	
.LABEL $label$22
	$9 = (($6 + [16]) & [-16])
	$4 = CALL _Znwj($9)
	*($5 + [232]) = ($9 | [1])
	*($5 + [240]) = $4
	*($5 + [236]) = $6
	
.LABEL $label$21
	$9 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$26:
	*(($4 + $7)) = *((($5 + [336]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$26 }
	$6 = ($4 + $6)
	
.LABEL $label$20
	$7 = [0]
	*($6) = [0]
	$6 = ($6 & [1])
	$6 = *($5 + [232])
	$4 = CALL $151([8517])
	if ( ((int_32)$4 != (int_32)( *($5 + [236]) ? uint_32($6 >> [1]) : $6 )) ){ goto $label$27 }
	$7 = (CALL $133(($5 + [232]), [0], [-1], [8517], $4) == 0)
	$6 = (*($5 + [232]) & [1])
	
.LABEL $label$27
	if ( ($6 == 0) ){ goto $label$28 }
	CALL _ZdlPv(*($5 + [240]))
	
.LABEL $label$28
	if ( ($7 == 0) ){ goto $label$37 }
	$10 = *($3)
	$7 = CALL $151([8524])
	if ( ($7 <= [8]) ){ goto $label$36 }
	CALL eosio_assert([0], [9593])
	goto $label$35 
	
.LABEL $label$37
	*($5 + [336]) = CALL $32($0)
	*($5 + [344]) = *($5 + [544])
	$1 = CALL current_time()
	*($5 + [360]) = *($5 + [432])
	*($5 + [368]) = *($5 + [392])
	*($5 + [352]) = ((int_64)((uint_64)$1 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($5 + [560]) = [8400]
	*($5 + [564]) = CALL $151([8400])
	*($5 + [56]) = *($5 + [560])
	$7 = CALL $5(($5 + [232]), ($5 + [56]))
	*($5 + [224]) = ($5 + [336])
	CALL $33(($5 + [584]), ($0 + [112]), *($7), ($5 + [224]))
	*($5 + [224]) = *($5 + [544])
	*($5 + [216]) = (int_64)0
	*($5 + [208]) = ($0 + [72])
	CALL $34(($5 + [200]), ($5 + [208]), ($5 + [432]))
	CALL $2(((int_64)*(*($5 + [204]) + [8]) == (int_64)*($5 + [432])), [8589], [20003])
	*($5 + [199]) = *(*($5 + [204]) + [16])
	*($5 + [184]) = [8614]
	*($5 + [188]) = CALL $151([8614])
	*($5 + [48]) = *($5 + [184])
	$7 = CALL $5(($5 + [232]), ($5 + [48]))
	if ( ((int_64)*($5 + [432]) != (int_64)*($7)) ){ goto $label$38 }
	*($5 + [216]) = *(($5 + [368]))
	
.LABEL $label$38
	$3 = ($0 + [152])
	*($5 + [176]) = $3
	CALL $35(($5 + [168]), ($5 + [176]), ($5 + [224]))
	$7 = *($5 + [172])
	if ( ((int_64)*($7 + [8]) != (int_64)*($5 + [224])) ){ goto $label$34 }
	$1 = *($7)
	$6 = *(($0 + [180]))
	$9 = *(($0 + [176]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$31 }
	
.LOOP $label$39:
	$7 = ($6 + [-24])
	$4 = *($7)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$32 }
	$6 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$39 }
	goto $label$31 
	
.LABEL $label$36
	if ( ($7 == 0) ){ goto $label$33 }
	
.LABEL $label$35
	$1 = (int_64)0
	
.LOOP $label$40:
	$6 = *(($7 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$41 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$41
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$40 }
	$11 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$29 
	
.LABEL $label$34
	*($5 + [136]) = [8400]
	*($5 + [140]) = CALL $151([8400])
	*($5 + [40]) = *($5 + [136])
	$7 = CALL $5(($5 + [144]), ($5 + [40]))
	*($5 + [236]) = ($5 + [224])
	*($5 + [240]) = ($5 + [216])
	*($5 + [244]) = ($5 + [199])
	*($5 + [232]) = $0
	*($5 + [584]) = *($7)
	if ( ((int_64)*($3) == (int_64)CALL current_receiver()) ){ goto $label$42 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$42
	*($5 + [560]) = $3
	*($5 + [564]) = ($5 + [232])
	*($5 + [568]) = ($5 + [584])
	*(($7 = CALL _Znwj([40])) + [16]) = (int_64)100
	*($7 + [8]) = (int_64)0
	*($7 + [24]) = [0]
	*($7 + [28]) = $3
	CALL $36(($5 + [560]), $7)
	*($5 + [576]) = $7
	$1 = *($7)
	*($5 + [560]) = $1
	$4 = *($7 + [32])
	*($5 + [556]) = $4
	$9 = ($0 + [180])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [184]))) ){ goto $label$44 }
	*($6 + [8]) = $1
	*($6 + [16]) = $4
	*($5 + [576]) = [0]
	*($6) = $7
	*($9) = ($6 + [24])
	$7 = *($5 + [576])
	*($5 + [576]) = [0]
	if ( $7 ){ goto $label$43 }
	goto $label$15 
	
.LABEL $label$44
	CALL $37(($0 + [176]), ($5 + [576]), ($5 + [560]), ($5 + [556]))
	$7 = *($5 + [576])
	*($5 + [576]) = [0]
	if ( ($7 == 0) ){ goto $label$15 }
	
.LABEL $label$43
	CALL _ZdlPv($7)
	$7 = *($5 + [532])
	if ( $7 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$33
	$11 = (int_64)4
	goto $label$29 
	
.LABEL $label$32
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$31 }
	if ( ((int_32)*(($4 + [28])) == (int_32)$3) ){ goto $label$30 }
	CALL eosio_assert([0], [9836])
	goto $label$30 
	
.LABEL $label$31
	$4 = [0]
	$7 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-3020381105861820416, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$30 }
	$4 = CALL $38($3, $7)
	if ( ((int_32)*($4 + [28]) == (int_32)$3) ){ goto $label$30 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$30
	*($5 + [152]) = [8400]
	*($5 + [156]) = CALL $151([8400])
	*($5 + [32]) = *($5 + [152])
	$7 = CALL $5(($5 + [160]), ($5 + [32]))
	*($5 + [236]) = ($5 + [168])
	*($5 + [232]) = ($5 + [199])
	*($5 + [240]) = ($5 + [216])
	$1 = *($7)
	if ( $4 ){ goto $label$45 }
	CALL eosio_assert([0], [10171])
	
.LABEL $label$45
	CALL $39($3, $4, $1, ($5 + [232]))
	$7 = *($5 + [532])
	if ( $7 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$29
	if ( (uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$46 }
	CALL eosio_assert([0], [9691])
	
.LABEL $label$46
	$1 = (uint_64)$11 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$49:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$48 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$50 }
	$1 = $2
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$50
	$1 = $2
	
.LOOP $label$51:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$48 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$0 = ($7 + [1])
	$7 = $0
	if ( $6 ){ goto $label$51 }
	$7 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$48
	CALL eosio_assert([0], [9740])
	
.LABEL $label$47
	CALL $2(((int_64)$10 < (int_64)10000000000000000), [8531], [20013])
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$15 }
	*($5 + [320]) = [8343]
	*($5 + [324]) = CALL $151([8343])
	*($5 + [24]) = *($5 + [320])
	$7 = CALL $5(($5 + [328]), ($5 + [24]))
	*($5 + [304]) = [8553]
	*($5 + [308]) = CALL $151([8553])
	*($5 + [16]) = *($5 + [304])
	$6 = CALL $5(($5 + [312]), ($5 + [16]))
	*($5 + [288]) = [8343]
	$1 = *($6)
	$2 = *($7)
	*($5 + [292]) = CALL $151([8343])
	*($5 + [8]) = *($5 + [288])
	$0 = CALL $5(($5 + [296]), ($5 + [8]))
	*($5 + [272]) = [8560]
	*($5 + [276]) = CALL $151([8560])
	*($5) = *($5 + [272])
	$4 = CALL $5(($5 + [280]), $5)
	*(($5 + [568])) = [0]
	*($5 + [560]) = (int_64)0
	$7 = CALL $151([8566])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$52 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$55 }
	*($5 + [560]) = ($7 << [1])
	$6 = (($5 + [560]) | [1])
	if ( $7 ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$55
	$9 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($9)
	*($5 + [560]) = ($9 | [1])
	*($5 + [568]) = $6
	*($5 + [564]) = $7
	
.LABEL $label$54
	CALL memcpy($6, [8566], $7)
	
.LABEL $label$53
	*(($6 + $7)) = [0]
	*((($5 + [232]) + [16])) = $11
	$7 = ($5 + [568])
	*((($5 + [232]) + [32])) = *($7)
	*($7) = [0]
	*($5 + [240]) = $10
	*($5 + [232]) = *($5 + [544])
	*($5 + [256]) = *($5 + [560])
	*($5 + [560]) = (int_64)0
	*($5 + [336]) = *($0)
	*($5 + [344]) = *($4)
	*(($7 = CALL _Znwj([16]))) = $2
	*($7 + [8]) = $1
	$6 = ($7 + [16])
	*(($5 + [360])) = $6
	*(($5 + [356])) = $6
	*($5 + [352]) = $7
	CALL $40(($5 + [364]), ($5 + [232]))
	CALL $41(($5 + [336]))
	$7 = *($5 + [364])
	if ( ($7 == 0) ){ goto $label$56 }
	*((($5 + [336]) + [32])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$56
	$7 = *($5 + [352])
	if ( ($7 == 0) ){ goto $label$57 }
	*(($5 + [356])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$57
	if ( ((*(($5 + [256])) & [1]) == 0) ){ goto $label$58 }
	CALL _ZdlPv(*(($5 + [264])))
	
.LABEL $label$58
	if ( ((*($5 + [560]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*(($5 + [568])))
	$7 = *($5 + [532])
	if ( $7 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$52
	CALL $124(($5 + [560]))
	
.LABEL $label$15
	$7 = *($5 + [532])
	if ( ($7 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	*(($5 + [536])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$13
	$7 = *($5 + [520])
	if ( ($7 == 0) ){ goto $label$59 }
	*(($5 + [524])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$59
	$global$0 = ($5 + [592])
	(unreachable)
}

void .FUNC $4 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [576])
	$global$0 = $3
	*($3 + [552]) = [8334]
	*($3 + [556]) = CALL $151([8334])
	*($3 + [192]) = *($3 + [552])
	if ( ((int_64)*(CALL $5(($3 + [464]), ($3 + [192]))) != (int_64)$2) ){ goto $label$2 }
	*($3 + [544]) = [8343]
	*($3 + [548]) = CALL $151([8343])
	*($3 + [184]) = *($3 + [544])
	if ( ((int_64)*(CALL $5(($3 + [560]), ($3 + [184]))) == (int_64)$1) ){ goto $label$3 }
	*($3 + [528]) = [8372]
	*($3 + [532]) = CALL $151([8372])
	*($3 + [176]) = *($3 + [528])
	if ( ((int_64)*(CALL $5(($3 + [536]), ($3 + [176]))) == (int_64)$1) ){ goto $label$3 }
	*($3 + [512]) = [8343]
	*($3 + [516]) = CALL $151([8343])
	*($3 + [168]) = *($3 + [512])
	if ( ((int_64)*(CALL $5(($3 + [520]), ($3 + [168]))) != (int_64)$1) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $6(($3 + [464]))
	*(($4 = (($3 + [424]) + [8]))) = *(($3 + [488]))
	*($3 + [424]) = *($3 + [480])
	$2 = *($3 + [472])
	$5 = *($3 + [464])
	$6 = *($4)
	*((($3 + [560]) + [8])) = $6
	*(($7 = (($3 + [440]) + [8]))) = $6
	*($3 + [456]) = $1
	$1 = *($3 + [424])
	*($3 + [440]) = $1
	*($3 + [560]) = $1
	$8 = ($3 + [496])
	$4 = CALL $125(($3 + [408]), $8)
	*(($3 + [16])) = *($3 + [456])
	*(($3 + [8])) = *($7)
	*($3) = *($3 + [440])
	CALL $7($0, $5, $2, $3, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$4
	if ( ((*($8) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($3 + [504])))
	$global$0 = ($3 + [576])
	return 
	
.LABEL $label$2
	*($3 + [400]) = [8400]
	*($3 + [404]) = CALL $151([8400])
	*($3 + [160]) = *($3 + [400])
	if ( ((int_64)*(CALL $5(($3 + [464]), ($3 + [160]))) != (int_64)$1) ){ goto $label$1 }
	*($3 + [392]) = [8400]
	*($3 + [396]) = CALL $151([8400])
	*($3 + [152]) = *($3 + [392])
	if ( ((int_64)*(CALL $5(($3 + [464]), ($3 + [152]))) != (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$2 > (int_64)5037623814286126591) ){ goto $label$11 }
	if ( ((int_64)$2 > (int_64)5037617329138215295) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-3841130677495922688) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)5037615557860310400) ){ goto $label$1 }
	*($3 + [352]) = [8400]
	*($3 + [356]) = CALL $151([8400])
	*($3 + [48]) = *($3 + [352])
	$4 = CALL $5(($3 + [360]), ($3 + [48]))
	*($3 + [348]) = [0]
	*($3 + [344]) = [1]
	$2 = *($4)
	*($3 + [40]) = *($3 + [344])
	CALL $9($2, $1, ($3 + [40]))
	$global$0 = ($3 + [576])
	return 
	
.LABEL $label$11
	if ( ((int_64)$2 > (int_64)6607022172596223999) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)5037623814286126592) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)6607022172423942656) ){ goto $label$1 }
	*($3 + [232]) = [8400]
	*($3 + [236]) = CALL $151([8400])
	*($3 + [128]) = *($3 + [232])
	$4 = CALL $5(($3 + [240]), ($3 + [128]))
	*($3 + [228]) = [0]
	*($3 + [224]) = [2]
	$2 = *($4)
	*($3 + [120]) = *($3 + [224])
	CALL $11($2, $1, ($3 + [120]))
	$global$0 = ($3 + [576])
	return 
	
.LABEL $label$10
	if ( ((int_64)$2 == (int_64)5037617329138215296) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)5037623265597865984) ){ goto $label$1 }
	*($3 + [256]) = [8400]
	*($3 + [260]) = CALL $151([8400])
	*($3 + [112]) = *($3 + [256])
	$4 = CALL $5(($3 + [264]), ($3 + [112]))
	*($3 + [252]) = [0]
	*($3 + [248]) = [3]
	$2 = *($4)
	*($3 + [104]) = *($3 + [248])
	CALL $13($2, $1, ($3 + [104]))
	$global$0 = ($3 + [576])
	return 
	
.LABEL $label$9
	if ( ((int_64)$2 == (int_64)6607022172596224000) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$1 }
	*($3 + [376]) = [8400]
	*($3 + [380]) = CALL $151([8400])
	*($3 + [32]) = *($3 + [376])
	$4 = CALL $5(($3 + [384]), ($3 + [32]))
	*($3 + [372]) = [0]
	*($3 + [368]) = [4]
	$2 = *($4)
	*($3 + [24]) = *($3 + [368])
	CALL $15($2, $1, ($3 + [24]))
	$global$0 = ($3 + [576])
	return 
	
.LABEL $label$8
	*($3 + [280]) = [8400]
	*($3 + [284]) = CALL $151([8400])
	*($3 + [96]) = *($3 + [280])
	$4 = CALL $5(($3 + [288]), ($3 + [96]))
	*($3 + [276]) = [0]
	*($3 + [272]) = [5]
	$2 = *($4)
	*($3 + [88]) = *($3 + [272])
	CALL $17($2, $1, ($3 + [88]))
	$global$0 = ($3 + [576])
	return 
	
.LABEL $label$7
	*($3 + [328]) = [8400]
	*($3 + [332]) = CALL $151([8400])
	*($3 + [64]) = *($3 + [328])
	$4 = CALL $5(($3 + [336]), ($3 + [64]))
	*($3 + [324]) = [0]
	*($3 + [320]) = [6]
	$2 = *($4)
	*($3 + [56]) = *($3 + [320])
	CALL $19($2, $1, ($3 + [56]))
	$global$0 = ($3 + [576])
	return 
	
.LABEL $label$6
	*($3 + [304]) = [8400]
	*($3 + [308]) = CALL $151([8400])
	*($3 + [80]) = *($3 + [304])
	$4 = CALL $5(($3 + [312]), ($3 + [80]))
	*($3 + [300]) = [0]
	*($3 + [296]) = [7]
	$2 = *($4)
	*($3 + [72]) = *($3 + [296])
	CALL $21($2, $1, ($3 + [72]))
	$global$0 = ($3 + [576])
	return 
	
.LABEL $label$5
	*($3 + [208]) = [8400]
	*($3 + [212]) = CALL $151([8400])
	*($3 + [144]) = *($3 + [208])
	$4 = CALL $5(($3 + [216]), ($3 + [144]))
	*($3 + [204]) = [0]
	*($3 + [200]) = [8]
	$2 = *($4)
	*($3 + [136]) = *($3 + [200])
	CALL $23($2, $1, ($3 + [136]))
	
.LABEL $label$1
	$global$0 = ($3 + [576])
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [9075])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [9180])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9113])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [9180])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $2 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $151($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $129(($3 + [16]), [8192])
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	$5 = ($3 | [1])
	$7 = (CASTING uint_64)(uint_32 $2)
	
.LOOP $label$5:
	$8 = ((uint_64)$7 / (uint_64)(int_64)10)
	$4 = (CASTING uint_32)(uint_64 (int_64))($7 - ((int_64)$8 * (int_64)10))
	CALL $1(($3 + [32]), int_32((( ($4) | [48]) ? ($4 + [55]) : ($4 <= [10]) ) << [24]) >> [24]), $3)
	if ( (*($3) & [1]) ){ goto $label$7 }
	*($3) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($3 + [8]))) = [0]
	*($3 + [4]) = [0]
	
.LABEL $label$6
	CALL $128($3, [0])
	*(($3 + [8])) = *((($3 + [32]) + [8]))
	*($3) = *($3 + [32])
	$4 = ((uint_64)$7 > (uint_64)(int_64)9)
	$7 = $8
	if ( $4 ){ goto $label$5 }
	$4 = *($3)
	$1 = ($4 & [1])
	$2 = ($3 + [8])
	CALL $130(($3 + [16]), ( *($2) ? $5 : $1 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $1 ))
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($2))
	
.LABEL $label$8
	CALL $129(($3 + [16]), [8205])
	CALL eosio_assert($0, ( *($3 + [24]) ? (($3 + [16]) | [1]) : (*($3 + [16]) & [1]) ))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($3 + [24])))
	
.LABEL $label$9
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $124(($3 + [16]))
}

int_32 .FUNC $3 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [16])
	$global$0 = $5
	CALL $2(((int_32)*($3) != (int_32)[-1]), [8299], [20000])
	$2 = CALL $132($0, *($2), *($3))
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$3 }
	$3 = *($3)
	CALL $126($5, $0, $3, ($2 - $3), $0)
	if ( (*($1) & [1]) ){ goto $label$2 }
	*($1) = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $2(((int_32)*($4) ^ (int_32)[1]), [8317], [20000])
	$global$0 = ($5 + [16])
	return $2
	
.LABEL $label$2
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$1
	CALL $128($1, [0])
	*(($1 + [8])) = *(($5 + [8]))
	*($1) = *($5)
	$global$0 = ($5 + [16])
	return $2
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	*($3 + [15]) = $1
	$1 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($4 + [1])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[10]) ){ goto $label$3 }
	*($0) = [2]
	$1 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = (($4 + [17]) & [-16])
	$1 = CALL _Znwj($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $1
	*(($0 + [4])) = [1]
	
.LABEL $label$2
	CALL memcpy($1, ($3 + [15]), [1])
	*($1 + [1]) = [0]
	CALL $130($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	$global$0 = ($3 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $124($0)
}

void .FUNC $14 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [480])
	$global$0 = $1
	*($1 + [440]) = [8400]
	*($1 + [444]) = CALL $151([8400])
	*($1 + [136]) = *($1 + [440])
	CALL require_auth(*(CALL $5(($1 + [448]), ($1 + [136]))))
	*(($1 + [416])) = (int_64)0
	*($1 + [408]) = (int_64)0
	$2 = ($0 + [32])
	$3 = *(($0 + [60]))
	if ( ((int_32)$3 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [16]) == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$3
	if ( $3 ){ goto $label$1 }
	$3 = ($1 + [408])
	goto $label$1 
	
.LABEL $label$2
	$3 = CALL db_find_i64(*($2), *(($0 + [40])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $25($2, $3)
	if ( ((int_32)*($3 + [16]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	goto $label$1 
	
.LABEL $label$4
	$3 = ($1 + [408])
	
.LABEL $label$1
	*(($4 = (($1 + [424]) + [8]))) = *(($3 + [8]))
	*($1 + [424]) = *($3)
	CALL $2(((int_32)*($1 + [424]) != (int_32)[1]), [9056], [20009])
	*($4) = (int_64)0
	*($1 + [424]) = [1]
	*($1 + [392]) = [8400]
	*($1 + [396]) = CALL $151([8400])
	*($1 + [128]) = *($1 + [392])
	CALL $44($2, ($1 + [424]), *(CALL $5(($1 + [400]), ($1 + [128]))))
	*($1 + [376]) = [8400]
	*($1 + [380]) = CALL $151([8400])
	*($1 + [120]) = *($1 + [376])
	$3 = CALL $5(($1 + [384]), ($1 + [120]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($3)
	$3 = ($0 + [72])
	if ( ((int_64)*($0 + [72]) == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$5
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $45(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$8 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv($2)
	
.LABEL $label$6
	*($1 + [352]) = [8400]
	*($1 + [356]) = CALL $151([8400])
	*($1 + [112]) = *($1 + [352])
	$2 = CALL $5(($1 + [360]), ($1 + [112]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$9 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$9
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $47(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv($2)
	
.LABEL $label$10
	*($1 + [336]) = [8400]
	*($1 + [340]) = CALL $151([8400])
	*($1 + [104]) = *($1 + [336])
	$2 = CALL $5(($1 + [344]), ($1 + [104]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$13 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$13
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $48(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL _ZdlPv($2)
	
.LABEL $label$14
	*($1 + [320]) = [8400]
	*($1 + [324]) = CALL $151([8400])
	*($1 + [96]) = *($1 + [320])
	$2 = CALL $5(($1 + [328]), ($1 + [96]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$17 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$17
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $49(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$20 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	CALL _ZdlPv($2)
	
.LABEL $label$18
	*($1 + [304]) = [8400]
	*($1 + [308]) = CALL $151([8400])
	*($1 + [88]) = *($1 + [304])
	$2 = CALL $5(($1 + [312]), ($1 + [88]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$21 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$21
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $50(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$24 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL _ZdlPv($2)
	
.LABEL $label$22
	*($1 + [288]) = [8400]
	*($1 + [292]) = CALL $151([8400])
	*($1 + [80]) = *($1 + [288])
	$2 = CALL $5(($1 + [296]), ($1 + [80]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$25 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$25
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $51(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$28 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	CALL _ZdlPv($2)
	
.LABEL $label$26
	*($1 + [272]) = [8400]
	*($1 + [276]) = CALL $151([8400])
	*($1 + [72]) = *($1 + [272])
	$2 = CALL $5(($1 + [280]), ($1 + [72]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$29 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$29
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $52(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$32 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	CALL _ZdlPv($2)
	
.LABEL $label$30
	*($1 + [256]) = [8400]
	*($1 + [260]) = CALL $151([8400])
	*($1 + [64]) = *($1 + [256])
	$2 = CALL $5(($1 + [264]), ($1 + [64]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$33 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$33
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $53(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$36 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$34 }
	
.LABEL $label$35
	CALL _ZdlPv($2)
	
.LABEL $label$34
	*($1 + [240]) = [8400]
	*($1 + [244]) = CALL $151([8400])
	*($1 + [56]) = *($1 + [240])
	$2 = CALL $5(($1 + [248]), ($1 + [56]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$37 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$37
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $54(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$40 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$38 }
	
.LABEL $label$39
	CALL _ZdlPv($2)
	
.LABEL $label$38
	*($1 + [224]) = [8400]
	*($1 + [228]) = CALL $151([8400])
	*($1 + [48]) = *($1 + [224])
	$2 = CALL $5(($1 + [232]), ($1 + [48]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$41 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$41
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $55(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$44 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$42 }
	
.LABEL $label$43
	CALL _ZdlPv($2)
	
.LABEL $label$42
	*($1 + [208]) = [8400]
	*($1 + [212]) = CALL $151([8400])
	*($1 + [40]) = *($1 + [208])
	$2 = CALL $5(($1 + [216]), ($1 + [40]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$45 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$45
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $56(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$48 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$46 }
	
.LABEL $label$47
	CALL _ZdlPv($2)
	
.LABEL $label$46
	*($1 + [192]) = [8400]
	*($1 + [196]) = CALL $151([8400])
	*($1 + [32]) = *($1 + [192])
	$2 = CALL $5(($1 + [200]), ($1 + [32]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$49 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$49
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $57(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$52 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$52
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$50 }
	
.LABEL $label$51
	CALL _ZdlPv($2)
	
.LABEL $label$50
	*($1 + [176]) = [8400]
	*($1 + [180]) = CALL $151([8400])
	*($1 + [24]) = *($1 + [176])
	$2 = CALL $5(($1 + [184]), ($1 + [24]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$53 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$53
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $58(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$56 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$54 }
	
.LABEL $label$55
	CALL _ZdlPv($2)
	
.LABEL $label$54
	*($1 + [160]) = [8400]
	*($1 + [164]) = CALL $151([8400])
	*($1 + [16]) = *($1 + [160])
	$2 = CALL $5(($1 + [168]), ($1 + [16]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$57 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$57
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $59(($1 + [408]), $2)
	*($1 + [464]) = $2
	$5 = *($2)
	*($1 + [463]) = $5
	$6 = *($2 + [52])
	*($1 + [408]) = $6
	$7 = ($0 + [100])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [104]))) ){ goto $label$60 }
	*($4 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	*($4 + [16]) = $6
	*($1 + [464]) = [0]
	*($4) = $2
	*($7) = ($4 + [24])
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $2 ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$60
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$2 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($2 == 0) ){ goto $label$58 }
	
.LABEL $label$59
	CALL _ZdlPv($2)
	
.LABEL $label$58
	*($1 + [144]) = [8400]
	*($1 + [148]) = CALL $151([8400])
	*($1 + [8]) = *($1 + [144])
	$2 = CALL $5(($1 + [152]), ($1 + [8]))
	*($1 + [368]) = $0
	*($1 + [472]) = *($2)
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$61 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$61
	*($1 + [408]) = $3
	*($1 + [412]) = ($1 + [368])
	*($1 + [416]) = ($1 + [472])
	*(($2 = CALL _Znwj([64])) + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = $3
	CALL $60(($1 + [408]), $2)
	*($1 + [464]) = $2
	$4 = *($2)
	*($1 + [463]) = $4
	$5 = *($2 + [52])
	*($1 + [408]) = $5
	$6 = ($0 + [100])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [104]))) ){ goto $label$64 }
	*($3 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $4) & (int_64)255)
	*($3 + [16]) = $5
	*($1 + [464]) = [0]
	*($3) = $2
	*($6) = ($3 + [24])
	$0 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( $0 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	CALL $46(($0 + [96]), ($1 + [464]), ($1 + [463]), ($1 + [408]))
	$0 = *($1 + [464])
	*($1 + [464]) = [0]
	if ( ($0 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	CALL _ZdlPv($0)
	
.LABEL $label$62
	$global$0 = ($1 + [480])
}

int_32 .FUNC $15 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $154($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [16])) = $3
	*($4 + [28]) = $2
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $42(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $157($2)
	
.LABEL $label$6
	CALL $43($8)
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $16 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [8]) = [8400]
	*($2 + [12]) = CALL $151([8400])
	*($2) = *($2 + [8])
	CALL require_auth(*(CALL $5(($2 + [16]), $2)))
	$3 = CALL db_lowerbound_i64(*($0 + [192]), *(($0 + [200])), (int_64)-4995815906127904768, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$4 = ($0 + [192])
	$3 = CALL $64($4, $3)
	
.LOOP $label$2:
	$0 = [0]
	$5 = CALL db_next_i64(*($3 + [28]), ($2 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $64($4, $5)
	
.LABEL $label$3
	CALL $65($4, $3)
	$3 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($2 + [32])
}

int_32 .FUNC $17 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $154($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [264]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9277])
	
.LABEL $label$5
	CALL memcpy(($4 + [264]), $2, [8])
	*(($4 + [8])) = $3
	*($4 + [20]) = ($2 + [8])
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $42(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [264])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $157($2)
	
.LABEL $label$7
	CALL $43($8)
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $10 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($5 + [16]) = [8400]
	*($5 + [20]) = CALL $151([8400])
	*($5 + [8]) = *($5 + [16])
	CALL require_auth(*(CALL $5(($5 + [24]), ($5 + [8]))))
	CALL require_recipient(*($1))
	$global$0 = ($5 + [32])
}

int_32 .FUNC $11 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [368])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $154($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [320])) = [0]
	*($4 + [296]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [276]) = $2
	*($4 + [272]) = $2
	*($4 + [280]) = ($2 + $7)
	*($4 + [328]) = ($4 + [272])
	*($4 + [40]) = ($4 + [288])
	CALL $76(($4 + [40]), ($4 + [328]))
	$3 = *($4 + [280])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$8 = *($4 + [272])
	*($4 + [8]) = $8
	*($4 + [24]) = $8
	$9 = CALL $42(($4 + [40]), $0, $1, ($4 + [8]))
	$0 = *($4 + [304])
	$1 = *($4 + [288])
	$8 = *($4 + [296])
	$3 = CALL $125(($4 + [328]), ($4 + [312]))
	*($4 + [352]) = $8
	*($4 + [360]) = $1
	*($4 + [344]) = $0
	$10 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($10) + $6))
	
.LABEL $label$4
	CALL void $10((int_32 ($4 + [360])), (int_32 ($4 + [352])), (int_32 ($4 + [344])), (int_32 $3), (int_32 $6))
	if ( ((*($4 + [328]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$5
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $157($2)
	
.LABEL $label$6
	CALL $43($9)
	if ( ((*($4 + [312]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*(($4 + [320])))
	
.LABEL $label$7
	$global$0 = ($4 + [368])
	return [1]
}

void .FUNC $12 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	float_64 $19
	int_64 $20
	int_64 $21
	$8 = ($global$0 - [944])
	$global$0 = $8
	*(($8 + [888])) = (int_64)0
	*($8 + [880]) = (int_64)0
	$9 = ($0 + [32])
	$10 = *(($0 + [60]))
	if ( ((int_32)$10 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$10 = *(($10 + [-24]))
	if ( ((int_32)*($10 + [16]) == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$3
	if ( $10 ){ goto $label$1 }
	$10 = ($8 + [880])
	goto $label$1 
	
.LABEL $label$2
	$10 = CALL db_find_i64(*($9), *(($0 + [40])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$4 }
	$10 = CALL $25($9, $10)
	if ( ((int_32)*($10 + [16]) == (int_32)$9) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	goto $label$1 
	
.LABEL $label$4
	$10 = ($8 + [880])
	
.LABEL $label$1
	CALL $2((*($10 + [1]) == 0), [8413], [20008])
	*($8 + [840]) = [8400]
	*($8 + [844]) = CALL $151([8400])
	*($8 + [272]) = *($8 + [840])
	CALL $5(($8 + [880]), ($8 + [272]))
	*($8 + [832]) = [8619]
	*($8 + [836]) = CALL $151([8619])
	*($8 + [264]) = *($8 + [832])
	CALL $5(($8 + [664]), ($8 + [264]))
	CALL require_auth2((int_64)-3570662469203616464, (int_64)5037610434748743680)
	$11 = ($0 + [192])
	*($8 + [824]) = $11
	CALL $68(($8 + [816]), ($8 + [824]), $1)
	CALL $2(((int_64)*(*($8 + [820]) + [8]) != (int_64)*($1)), [8711], [20016])
	$12 = [0]
	$10 = CALL db_lowerbound_i64(*($0 + [192]), *(($0 + [200])), (int_64)-4995815906127904768, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$5 }
	$10 = CALL $64($11, $10)
	
.LOOP $label$6:
	$13 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	if ( ((uint_32)$12 > (uint_32)[19]) ){ goto $label$5 }
	if ( (uint_64)((int_64))(((int_64)$13 & (int_64)4294967295) - *($10 + [16])) <= (int_64)3601) ){ goto $label$5 }
	$9 = [0]
	$14 = CALL db_next_i64(*($10 + [28]), ($8 + [880]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $64($11, $14)
	
.LABEL $label$7
	CALL $65($11, $10)
	$12 = ($12 + [1])
	$10 = $9
	if ( $9 ){ goto $label$6 }
	
.LABEL $label$5
	*($8 + [800]) = [8400]
	*($8 + [804]) = CALL $151([8400])
	*($8 + [256]) = *($8 + [800])
	$10 = CALL $5(($8 + [808]), ($8 + [256]))
	*($8 + [668]) = $3
	*($8 + [664]) = $1
	*($8 + [672]) = $0
	*($8 + [864]) = *($10)
	if ( ((int_64)*($11) == (int_64)CALL current_receiver()) ){ goto $label$8 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$8
	*($8 + [880]) = $11
	*($8 + [884]) = ($8 + [664])
	*($8 + [888]) = ($8 + [864])
	*(($10 = CALL _Znwj([40])) + [24]) = $11
	CALL $69(($8 + [880]), $10)
	*($8 + [344]) = $10
	$13 = *($10)
	*($8 + [880]) = $13
	$12 = *($10 + [28])
	*($8 + [856]) = $12
	$11 = ($0 + [220])
	$9 = *($11)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [224]))) ){ goto $label$11 }
	*($9 + [8]) = $13
	*($9 + [16]) = $12
	*($8 + [344]) = [0]
	*($9) = $10
	*($11) = ($9 + [24])
	$10 = *($8 + [344])
	*($8 + [344]) = [0]
	if ( $10 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $70(($0 + [216]), ($8 + [344]), ($8 + [880]), ($8 + [856]))
	$10 = *($8 + [344])
	*($8 + [344]) = [0]
	if ( ($10 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv($10)
	
.LABEL $label$9
	$14 = ($0 + [152])
	*($8 + [792]) = $14
	CALL $35(($8 + [784]), ($8 + [792]), $2)
	CALL $2(((int_64)*(*($8 + [788]) + [8]) == (int_64)*($2)), [8731], [20011])
	$13 = *(*($8 + [788]))
	$9 = *(($0 + [180]))
	$11 = *(($0 + [176]))
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$13 }
	
.LOOP $label$15:
	$10 = ($9 + [-24])
	$12 = *($10)
	if ( ((int_64)*($12) == (int_64)$13) ){ goto $label$14 }
	$9 = $10
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$13 }
	if ( ((int_32)*(($12 + [28])) == (int_32)$14) ){ goto $label$12 }
	CALL eosio_assert([0], [9836])
	goto $label$12 
	
.LABEL $label$13
	$12 = [0]
	$10 = CALL db_find_i64(*($14), *(($0 + [160])), (int_64)-3020381105861820416, $13)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$12 = CALL $38($14, $10)
	if ( ((int_32)*($12 + [28]) == (int_32)$14) ){ goto $label$12 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$12
	*($8 + [768]) = [8400]
	*($8 + [772]) = CALL $151([8400])
	*($8 + [248]) = *($8 + [768])
	$10 = CALL $5(($8 + [776]), ($8 + [248]))
	*($8 + [880]) = $4
	$13 = *($10)
	if ( $12 ){ goto $label$16 }
	CALL eosio_assert([0], [10171])
	
.LABEL $label$16
	CALL $71($14, $12, $13, ($8 + [880]))
	$15 = *($5)
	if ( (int_64)($15 == 0) ){ goto $label$23 }
	$10 = CALL $151([8524])
	if ( ($10 <= [8]) ){ goto $label$27 }
	CALL eosio_assert([0], [9593])
	goto $label$26 
	
.LABEL $label$27
	if ( ($10 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	$13 = (int_64)0
	
.LOOP $label$28:
	$9 = *(($10 + [8523]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$29 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$29
	$13 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$28 }
	$13 = ((int_64)$13 << (int_64)8)
	goto $label$24 
	
.LABEL $label$25
	$13 = (int_64)0
	
.LABEL $label$24
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$30 }
	CALL eosio_assert([0], [9691])
	
.LABEL $label$30
	$16 = ((int_64)$13 | (int_64)4)
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$17 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$13 = $17
	$9 = $10
	$10 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$34
	$13 = $17
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$9 = ((int_32)$10 < (int_32)[6])
	$12 = ($10 + [1])
	$10 = $12
	if ( $9 ){ goto $label$35 }
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	CALL eosio_assert([0], [9740])
	
.LABEL $label$31
	*($8 + [752]) = [8343]
	*($8 + [756]) = CALL $151([8343])
	*($8 + [240]) = *($8 + [752])
	$10 = CALL $5(($8 + [760]), ($8 + [240]))
	*($8 + [736]) = [8553]
	*($8 + [740]) = CALL $151([8553])
	*($8 + [232]) = *($8 + [736])
	$9 = CALL $5(($8 + [744]), ($8 + [232]))
	*($8 + [720]) = [8343]
	$13 = *($9)
	$17 = *($10)
	*($8 + [724]) = CALL $151([8343])
	*($8 + [224]) = *($8 + [720])
	$12 = CALL $5(($8 + [728]), ($8 + [224]))
	*($8 + [704]) = [8560]
	*($8 + [708]) = CALL $151([8560])
	*($8 + [216]) = *($8 + [704])
	$11 = CALL $5(($8 + [712]), ($8 + [216]))
	*(($8 + [872])) = [0]
	*($8 + [864]) = (int_64)0
	$15 = ((int_64)$15 / (int_64)10)
	$10 = CALL $151([8749])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$22 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$38 }
	*($8 + [864]) = ($10 << [1])
	$9 = (($8 + [864]) | [1])
	if ( $10 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	$14 = (($10 + [16]) & [-16])
	$9 = CALL _Znwj($14)
	*($8 + [864]) = ($14 | [1])
	*($8 + [872]) = $9
	*($8 + [868]) = $10
	
.LABEL $label$37
	CALL memcpy($9, [8749], $10)
	
.LABEL $label$36
	*(($9 + $10)) = [0]
	*((($8 + [664]) + [16])) = $16
	*(($9 = ($8 + [904]))) = [0]
	$10 = ($8 + [872])
	*((($8 + [664]) + [32])) = *($10)
	*($10) = [0]
	*($8 + [672]) = $15
	*($8 + [896]) = (int_64)0
	*($8 + [664]) = *($2)
	*($8 + [688]) = *($8 + [864])
	*($8 + [864]) = (int_64)0
	*($8 + [880]) = *($12)
	*($8 + [888]) = *($11)
	*(($10 = CALL _Znwj([16]))) = $17
	*($10 + [8]) = $13
	$12 = ($10 + [16])
	*($9) = $12
	*(($8 + [900])) = $12
	*($8 + [896]) = $10
	CALL $40(($8 + [908]), ($8 + [664]))
	CALL $41(($8 + [880]))
	$10 = *($8 + [908])
	if ( ($10 == 0) ){ goto $label$39 }
	*((($8 + [880]) + [32])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$39
	$10 = *($8 + [896])
	if ( ($10 == 0) ){ goto $label$40 }
	*(($8 + [900])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$40
	if ( ((*(($8 + [688])) & [1]) == 0) ){ goto $label$41 }
	CALL _ZdlPv(*(($8 + [696])))
	
.LABEL $label$41
	if ( ((*($8 + [864]) & [1]) == 0) ){ goto $label$23 }
	CALL _ZdlPv(*(($8 + [872])))
	
.LABEL $label$23
	$15 = *($6)
	if ( (int_64)($15 == 0) ){ goto $label$20 }
	$10 = CALL $151([8662])
	if ( ($10 <= [8]) ){ goto $label$44 }
	CALL eosio_assert([0], [9593])
	goto $label$43 
	
.LABEL $label$44
	if ( ($10 == 0) ){ goto $label$42 }
	
.LABEL $label$43
	$13 = (int_64)0
	
.LOOP $label$45:
	$9 = *(($10 + [8661]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$46 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$46
	$13 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$45 }
	$13 = ((int_64)$13 << (int_64)8)
	goto $label$21 
	
.LABEL $label$42
	$13 = (int_64)0
	goto $label$21 
	
.LABEL $label$22
	CALL $124(($8 + [864]))
	
.LABEL $label$21
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$47 }
	CALL eosio_assert([0], [9691])
	
.LABEL $label$47
	$18 = ((int_64)$13 | (int_64)4)
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$50:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$49 }
	$17 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$51 }
	$13 = $17
	$9 = $10
	$10 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$51
	$13 = $17
	
.LOOP $label$52:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$49 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$9 = ((int_32)$10 < (int_32)[6])
	$12 = ($10 + [1])
	$10 = $12
	if ( $9 ){ goto $label$52 }
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$50 }
	goto $label$48 
	
.LABEL $label$49
	CALL eosio_assert([0], [9740])
	
.LABEL $label$48
	$17 = *($6)
	$10 = CALL $151([8662])
	$19 = ((float_64)(CASTING float_64)(int_64 ((int_64)$15 * (int_64)40)) / (float_64)(float_64)100)
	if ( ((float_64)(float_64)|$19| < (float_64)(float_64)9223372036854775808) ){ goto $label$54 }
	$16 = (int_64)-9223372036854775808
	goto $label$53 
	
.LABEL $label$54
	$16 = (Rounds 0)($19)
	
.LABEL $label$53
	$9 = ($10 <= [8])
	$19 = ((float_64)(CASTING float_64)(int_64 ((int_64)$15 * (int_64)50)) / (float_64)(float_64)100)
	if ( ((float_64)(float_64)|$19| < (float_64)(float_64)9223372036854775808) ){ goto $label$59 }
	$20 = (int_64)-9223372036854775808
	if ( ($9 == 0) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$20 = (Rounds 0)($19)
	if ( $9 ){ goto $label$57 }
	
.LABEL $label$58
	CALL eosio_assert([0], [9593])
	goto $label$56 
	
.LABEL $label$57
	if ( $10 ){ goto $label$56 }
	$13 = (int_64)0
	goto $label$55 
	
.LABEL $label$56
	$13 = (int_64)0
	
.LOOP $label$60:
	$9 = *(($10 + [8661]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$61 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$61
	$13 = ((int_64)((int_64)$13 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$60 }
	$13 = ((int_64)$13 << (int_64)8)
	
.LABEL $label$55
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$62 }
	CALL eosio_assert([0], [9691])
	
.LABEL $label$62
	$21 = ((int_64)$13 | (int_64)4)
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$65:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$64 }
	$17 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$66 }
	$13 = $17
	$9 = $10
	$10 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$65 }
	goto $label$63 
	
.LABEL $label$66
	$13 = $17
	
.LOOP $label$67:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$64 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$9 = ((int_32)$10 < (int_32)[6])
	$12 = ($10 + [1])
	$10 = $12
	if ( $9 ){ goto $label$67 }
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$65 }
	goto $label$63 
	
.LABEL $label$64
	CALL eosio_assert([0], [9740])
	
.LABEL $label$63
	CALL $2(((int_64)$15 < (int_64)10000000000000000), [8763], [20018])
	if ( ((int_64)$20 < (int_64)1) ){ goto $label$68 }
	*($8 + [648]) = [8400]
	*($8 + [652]) = CALL $151([8400])
	*($8 + [208]) = *($8 + [648])
	$10 = CALL $5(($8 + [656]), ($8 + [208]))
	*($8 + [632]) = [8553]
	*($8 + [636]) = CALL $151([8553])
	*($8 + [200]) = *($8 + [632])
	$9 = CALL $5(($8 + [640]), ($8 + [200]))
	*($8 + [864]) = *($10)
	*($8 + [872]) = *($9)
	*($8 + [616]) = [8343]
	*($8 + [620]) = CALL $151([8343])
	*($8 + [192]) = *($8 + [616])
	$12 = CALL $5(($8 + [624]), ($8 + [192]))
	*($8 + [600]) = [8334]
	*($8 + [604]) = CALL $151([8334])
	*($8 + [184]) = *($8 + [600])
	$11 = CALL $5(($8 + [608]), ($8 + [184]))
	*($8 + [592]) = [8400]
	*($8 + [596]) = CALL $151([8400])
	*($8 + [176]) = *($8 + [592])
	$14 = CALL $5(($8 + [856]), ($8 + [176]))
	*($8 + [584]) = [8787]
	*($8 + [588]) = CALL $151([8787])
	*($8 + [168]) = *($8 + [584])
	$1 = CALL $5(($8 + [848]), ($8 + [168]))
	*(($8 + [352])) = [0]
	*($8 + [344]) = (int_64)0
	$10 = CALL $151([8800])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$71 }
	*($8 + [344]) = ($10 << [1])
	$9 = (($8 + [344]) | [1])
	if ( $10 ){ goto $label$70 }
	goto $label$69 
	
.LABEL $label$71
	$3 = (($10 + [16]) & [-16])
	$9 = CALL _Znwj($3)
	*($8 + [344]) = ($3 | [1])
	*($8 + [352]) = $9
	*($8 + [348]) = $10
	
.LABEL $label$70
	CALL memcpy($9, [8800], $10)
	
.LABEL $label$69
	*(($9 + $10)) = [0]
	*(($8 + [904])) = $18
	$10 = ($8 + [352])
	*(($8 + [920])) = *($10)
	*($10) = [0]
	*($8 + [896]) = $20
	*($8 + [880]) = *($14)
	*($8 + [888]) = *($1)
	*($8 + [912]) = *($8 + [344])
	*($8 + [344]) = (int_64)0
	$10 = CALL $62(($8 + [664]), ($8 + [864]), *($12), *($11), ($8 + [880]))
	CALL $41($10)
	$9 = *($10 + [28])
	if ( ($9 == 0) ){ goto $label$72 }
	*(($10 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$72
	$9 = *($10 + [16])
	if ( ($9 == 0) ){ goto $label$73 }
	*(($10 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$73
	if ( ((*(($8 + [912])) & [1]) == 0) ){ goto $label$74 }
	CALL _ZdlPv(*(($8 + [920])))
	
.LABEL $label$74
	if ( ((*($8 + [344]) & [1]) == 0) ){ goto $label$68 }
	CALL _ZdlPv(*(($8 + [352])))
	
.LABEL $label$68
	if ( ((int_64)$16 < (int_64)1) ){ goto $label$75 }
	*($8 + [568]) = [8400]
	*($8 + [572]) = CALL $151([8400])
	*($8 + [160]) = *($8 + [568])
	$10 = CALL $5(($8 + [576]), ($8 + [160]))
	*($8 + [552]) = [8553]
	*($8 + [556]) = CALL $151([8553])
	*($8 + [152]) = *($8 + [552])
	$9 = CALL $5(($8 + [560]), ($8 + [152]))
	*($8 + [864]) = *($10)
	*($8 + [872]) = *($9)
	*($8 + [536]) = [8343]
	*($8 + [540]) = CALL $151([8343])
	*($8 + [144]) = *($8 + [536])
	$12 = CALL $5(($8 + [544]), ($8 + [144]))
	*($8 + [520]) = [8334]
	*($8 + [524]) = CALL $151([8334])
	*($8 + [136]) = *($8 + [520])
	$11 = CALL $5(($8 + [528]), ($8 + [136]))
	*($8 + [512]) = [8400]
	*($8 + [516]) = CALL $151([8400])
	*($8 + [128]) = *($8 + [512])
	$14 = CALL $5(($8 + [856]), ($8 + [128]))
	*($8 + [504]) = [8858]
	*($8 + [508]) = CALL $151([8858])
	*($8 + [120]) = *($8 + [504])
	$1 = CALL $5(($8 + [848]), ($8 + [120]))
	*(($8 + [352])) = [0]
	*($8 + [344]) = (int_64)0
	$10 = CALL $151([8871])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$78 }
	*($8 + [344]) = ($10 << [1])
	$9 = (($8 + [344]) | [1])
	if ( $10 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	$3 = (($10 + [16]) & [-16])
	$9 = CALL _Znwj($3)
	*($8 + [344]) = ($3 | [1])
	*($8 + [352]) = $9
	*($8 + [348]) = $10
	
.LABEL $label$77
	CALL memcpy($9, [8871], $10)
	
.LABEL $label$76
	*(($9 + $10)) = [0]
	*(($8 + [904])) = $18
	$10 = ($8 + [352])
	*(($8 + [920])) = *($10)
	*($10) = [0]
	*($8 + [896]) = $16
	*($8 + [880]) = *($14)
	*($8 + [888]) = *($1)
	*($8 + [912]) = *($8 + [344])
	*($8 + [344]) = (int_64)0
	$10 = CALL $62(($8 + [664]), ($8 + [864]), *($12), *($11), ($8 + [880]))
	CALL $41($10)
	$9 = *($10 + [28])
	if ( ($9 == 0) ){ goto $label$79 }
	*(($10 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$79
	$9 = *($10 + [16])
	if ( ($9 == 0) ){ goto $label$80 }
	*(($10 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$80
	if ( ((*(($8 + [912])) & [1]) == 0) ){ goto $label$81 }
	CALL _ZdlPv(*(($8 + [920])))
	
.LABEL $label$81
	if ( ((*($8 + [344]) & [1]) == 0) ){ goto $label$75 }
	CALL _ZdlPv(*(($8 + [352])))
	
.LABEL $label$75
	$13 = (int_64)
	if ( ((int_64)$13((int_64))($15 - $20) - $16)) < (int_64)1) ){ goto $label$82 }
	*($8 + [488]) = [8400]
	*($8 + [492]) = CALL $151([8400])
	*($8 + [112]) = *($8 + [488])
	$10 = CALL $5(($8 + [496]), ($8 + [112]))
	*($8 + [472]) = [8553]
	*($8 + [476]) = CALL $151([8553])
	*($8 + [104]) = *($8 + [472])
	$9 = CALL $5(($8 + [480]), ($8 + [104]))
	*($8 + [864]) = *($10)
	*($8 + [872]) = *($9)
	*($8 + [456]) = [8343]
	*($8 + [460]) = CALL $151([8343])
	*($8 + [96]) = *($8 + [456])
	$12 = CALL $5(($8 + [464]), ($8 + [96]))
	*($8 + [440]) = [8334]
	*($8 + [444]) = CALL $151([8334])
	*($8 + [88]) = *($8 + [440])
	$11 = CALL $5(($8 + [448]), ($8 + [88]))
	*($8 + [432]) = [8400]
	*($8 + [436]) = CALL $151([8400])
	*($8 + [80]) = *($8 + [432])
	$14 = CALL $5(($8 + [856]), ($8 + [80]))
	*($8 + [424]) = [8929]
	*($8 + [428]) = CALL $151([8929])
	*($8 + [72]) = *($8 + [424])
	$1 = CALL $5(($8 + [848]), ($8 + [72]))
	*(($8 + [352])) = [0]
	*($8 + [344]) = (int_64)0
	$10 = CALL $151([8942])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$85 }
	*($8 + [344]) = ($10 << [1])
	$9 = (($8 + [344]) | [1])
	if ( $10 ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	$3 = (($10 + [16]) & [-16])
	$9 = CALL _Znwj($3)
	*($8 + [344]) = ($3 | [1])
	*($8 + [352]) = $9
	*($8 + [348]) = $10
	
.LABEL $label$84
	CALL memcpy($9, [8942], $10)
	
.LABEL $label$83
	*(($9 + $10)) = [0]
	*(($8 + [904])) = $21
	$10 = ($8 + [352])
	*(($8 + [920])) = *($10)
	*($10) = [0]
	*($8 + [896]) = $13
	*($8 + [880]) = *($14)
	*($8 + [888]) = *($1)
	*($8 + [912]) = *($8 + [344])
	*($8 + [344]) = (int_64)0
	$10 = CALL $62(($8 + [664]), ($8 + [864]), *($12), *($11), ($8 + [880]))
	CALL $41($10)
	$9 = *($10 + [28])
	if ( ($9 == 0) ){ goto $label$86 }
	*(($10 + [32])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$86
	$9 = *($10 + [16])
	if ( ($9 == 0) ){ goto $label$87 }
	*(($10 + [20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$87
	if ( ((*(($8 + [912])) & [1]) == 0) ){ goto $label$88 }
	CALL _ZdlPv(*(($8 + [920])))
	
.LABEL $label$88
	if ( ((*($8 + [344]) & [1]) == 0) ){ goto $label$82 }
	CALL _ZdlPv(*(($8 + [352])))
	
.LABEL $label$82
	*($8 + [408]) = [9000]
	*($8 + [412]) = CALL $151([9000])
	*($8 + [64]) = *($8 + [408])
	$10 = CALL $5(($8 + [416]), ($8 + [64]))
	*($8 + [392]) = [8553]
	*($8 + [396]) = CALL $151([8553])
	*($8 + [56]) = *($8 + [392])
	$9 = CALL $5(($8 + [400]), ($8 + [56]))
	*($8 + [376]) = [9000]
	$13 = *($9)
	$17 = *($10)
	*($8 + [380]) = CALL $151([9000])
	*($8 + [48]) = *($8 + [376])
	$10 = CALL $5(($8 + [384]), ($8 + [48]))
	*($8 + [360]) = [9013]
	*($8 + [364]) = CALL $151([9013])
	*($8 + [40]) = *($8 + [360])
	$9 = CALL $5(($8 + [368]), ($8 + [40]))
	*($8 + [664]) = *($2)
	*($8 + [672]) = *($6)
	*($8 + [880]) = *($10)
	*($8 + [888]) = *($9)
	*(($10 = CALL _Znwj([16]))) = $17
	*($10 + [8]) = $13
	*(($8 + [916])) = [0]
	$9 = ($10 + [16])
	*(($8 + [904])) = $9
	*(($8 + [900])) = $9
	*($8 + [896]) = $10
	*($8 + [908 align=4]) = (int_64)0
	CALL $72(($8 + [908]), [16])
	$10 = *($8 + [908])
	$9 = (*(($8 + [912])) - $10)
	if ( ((int_32)$9 > (int_32)[7]) ){ goto $label$89 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$89
	$12 = (($8 + [664]) + [8])
	CALL memcpy($10, ($8 + [664]), [8])
	$10 = ($10 + [8])
	if ( ((int_32)($9 + [-8]) > (int_32)[7]) ){ goto $label$90 }
	CALL eosio_assert([0], [9760])
	
.LABEL $label$90
	CALL memcpy($10, $12, [8])
	CALL $41(($8 + [880]))
	$10 = *($8 + [908])
	if ( ($10 == 0) ){ goto $label$91 }
	*(($8 + [912])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$91
	$10 = *($8 + [896])
	if ( ($10 == 0) ){ goto $label$20 }
	*(($8 + [900])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$20
	*($8 + [328]) = [8400]
	*($8 + [332]) = CALL $151([8400])
	*($8 + [32]) = *($8 + [328])
	$10 = CALL $5(($8 + [336]), ($8 + [32]))
	*($8 + [312]) = [8553]
	*($8 + [316]) = CALL $151([8553])
	*($8 + [24]) = *($8 + [312])
	$9 = CALL $5(($8 + [320]), ($8 + [24]))
	*($8 + [344]) = *($10)
	*($8 + [352]) = *($9)
	*($8 + [296]) = [8400]
	*($8 + [300]) = CALL $151([8400])
	*($8 + [16]) = *($8 + [296])
	$10 = CALL $5(($8 + [304]), ($8 + [16]))
	*($8 + [280]) = [9025]
	*($8 + [284]) = CALL $151([9025])
	*($8 + [8]) = *($8 + [280])
	$9 = CALL $5(($8 + [288]), ($8 + [8]))
	*($8 + [664]) = *($2)
	*($8 + [672]) = *($4)
	*($8 + [680]) = *($6)
	CALL $125(($8 + [688]), $7)
	$13 = CALL current_time()
	*(($8 + [908])) = (int_64)0
	*(($8 + [924])) = (int_64)0
	*(($8 + [932])) = (int_64)0
	*($8 + [892]) = [0]
	*($8 + [896]) = [0]
	*($8 + [900 align=4]) = (int_64)0
	*($8 + [916 align=4]) = (int_64)0
	*($8 + [880]) = ((CASTING uint_32)(uint_64 ((uint_64)$13 / (uint_64)(int_64)1000000)) + [60])
	CALL $73(($8 + [916]), ($8 + [344]), $10, $9, ($8 + [664]))
	*($8 + [900]) = [1]
	$13 = CALL $32($0)
	*($8 + [872]) = (int_64)0
	*($8 + [864]) = $13
	*($8 + [848]) = [8400]
	*($8 + [852]) = CALL $151([8400])
	*($8) = *($8 + [848])
	CALL $74(($8 + [880]), ($8 + [864]), *(CALL $5(($8 + [856]), $8)), [0])
	CALL $75(($8 + [880]))
	if ( ((*($8 + [688]) & [1]) == 0) ){ goto $label$92 }
	CALL _ZdlPv(*(($8 + [696])))
	
.LABEL $label$92
	$global$0 = ($8 + [944])
	return (unreachable)
	
.LABEL $label$19
	CALL $124(($8 + [344]))
	
.LABEL $label$18
	CALL $124(($8 + [344]))
	
.LABEL $label$17
	CALL $124(($8 + [344]))
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $13 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [368])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $154($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [352])) = [0]
	*($4 + [304]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [284]) = $2
	*($4 + [280]) = $2
	*($4 + [288]) = ($2 + $5)
	*($4 + [24]) = ($4 + [280])
	*($4 + [48]) = ($4 + [296])
	CALL $66(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [288])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [280])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $42(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [360])
	CALL $67(($4 + [24]), ($4 + [296]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $157($2)
	
.LABEL $label$4
	CALL $43($3)
	if ( ((*($4 + [344]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [352])))
	
.LABEL $label$5
	$global$0 = ($4 + [368])
	return [1]
}

int_32 .FUNC $75 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [96])
	$global$0 = $2
	*($2 + [88]) = [8400]
	*($2 + [92]) = CALL $151([8400])
	*($2 + [24]) = *($2 + [88])
	CALL $5(($2 + [64]), ($2 + [24]))
	*($2 + [80]) = [8619]
	*($2 + [84]) = CALL $151([8619])
	*($2 + [16]) = *($2 + [80])
	CALL $5(($2 + [48]), ($2 + [16]))
	CALL require_auth2((int_64)-3570662469203616464, (int_64)5037610434748743680)
	CALL $2((*($1) <= [2]), [9037], [20010])
	*(($2 + [56])) = (int_64)0
	*($2 + [48]) = (int_64)0
	$3 = ($0 + [32])
	$4 = *(($0 + [60]))
	if ( ((int_32)$4 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$0 = *(($4 + [-24]))
	if ( ((int_32)*($0 + [16]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$3
	if ( $0 ){ goto $label$1 }
	$0 = ($2 + [48])
	goto $label$1 
	
.LABEL $label$2
	$0 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $25($3, $0)
	if ( ((int_32)*($0 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	goto $label$1 
	
.LABEL $label$4
	$0 = ($2 + [48])
	
.LABEL $label$1
	*((($2 + [64]) + [8])) = *(($0 + [8]))
	*($2 + [64]) = *($0)
	*($2 + [65]) = *($1)
	*($2 + [32]) = [8400]
	*($2 + [36]) = CALL $151([8400])
	*($2 + [8]) = *($2 + [32])
	CALL $44($3, ($2 + [64]), *(CALL $5(($2 + [40]), ($2 + [8]))))
	$global$0 = ($2 + [96])
}

int_32 .FUNC $19 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $154($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	*($4 + [264]) = [0]
	CALL eosio_assert([0], [9277])
	$3 = ($4 + [264])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	*($4 + [264]) = [0]
	$3 = ($4 + [264])
	
.LABEL $label$1
	CALL memcpy($3, $2, [1])
	$3 = ($2 + $7)
	*(($4 + [8])) = $3
	*($4 + [20]) = ($2 + [1])
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $42(($4 + [32]), $0, $1, $4)
	*($4 + [271]) = *($4 + [264])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($4 + [271])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $157($2)
	
.LABEL $label$6
	CALL $43($8)
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10545]
	*($3 + [28]) = CALL $151([10545])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)10000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10557]
	*($3 + [28]) = CALL $151([10557])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)2000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10472]
	*($3 + [28]) = CALL $151([10472])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [30]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)90000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10481]
	*($3 + [28]) = CALL $151([10481])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [40]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)130000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10490]
	*($3 + [28]) = CALL $151([10490])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [50]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)170000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10499]
	*($3 + [28]) = CALL $151([10499])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [60]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)220000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10508]
	*($3 + [28]) = CALL $151([10508])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [70]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)300000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-5915095480504680448, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)$6 == (int_64)*($4)) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9836])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $81($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-5915095480504680448, $6))
	if ( ((int_32)*($4 + [48]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$2
	*(($4 + [56])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10526]
	*($3 + [28]) = CALL $151([10526])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [90]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)380000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10535]
	*($3 + [28]) = CALL $151([10535])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [100]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)500000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $154($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10584])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $154($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-3020381105861820416, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*(($4 + [28])) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9836])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $38($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-3020381105861820416, $6))
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$2
	*($4 + [36]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*($1 + [8]) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $114(*($1), *($0 + [12]))
}

int_32 .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [9760])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $91($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	CALL $112(*($1), *($0 + [12]))
}

void .FUNC $139 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $157($0)
	
.LABEL $label$1
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

int_32 .FUNC $152 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $142())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $153($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

int_32 .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $154($1)
	
.LABEL $label$2
	*(CALL $142()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $154(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $157($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $150 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $151 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $156 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10596]) == 0) ){ goto $label$2 }
	$2 = *([0] + [10600])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [10596]) = [1]
	$2 = ($2 << [16])
	*([0] + [10600]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10600])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [10600]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [10596]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [10596]) = [1]
	$3 = ($3 << [16])
	*([0] + [10600]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10600])
	
.LABEL $label$10
	*([0] + [10600]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $157 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [18988])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [18796]
	$3 = (((int_32)$1 * (int_32)[12]) + [18796])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $154 (int_32 $0)
{
	return CALL $155([10604], $0)
}

int_32 .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $156($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8213])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = [8343]
	*($2 + [20]) = CALL $151([8343])
	*($2 + [8]) = *($2 + [16])
	$3 = CALL $5(($2 + [24]), ($2 + [8]))
	if ( ((int_64)*($1 + [16]) != (int_64)*($3)) ){ goto $label$5 }
	$3 = CALL $151([8524])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9593])
	goto $label$3 
	
.LABEL $label$5
	$global$0 = ($2 + [32])
	return [0]
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$6:
	$5 = *(($3 + [8523]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$7
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)4
	
.LABEL $label$1
	$6 = *($1 + [8])
	$global$0 = ($2 + [32])
	return ((int_64)$6 == (int_64)$4)
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = [8372]
	*($2 + [20]) = CALL $151([8372])
	*($2 + [8]) = *($2 + [16])
	$3 = CALL $5(($2 + [24]), ($2 + [8]))
	if ( ((int_64)*($1 + [16]) != (int_64)*($3)) ){ goto $label$5 }
	$3 = CALL $151([9282])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9593])
	goto $label$3 
	
.LABEL $label$5
	$global$0 = ($2 + [32])
	return [0]
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$6:
	$5 = *(($3 + [9281]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$7
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)4
	
.LABEL $label$1
	$6 = *($1 + [8])
	$global$0 = ($2 + [32])
	return ((int_64)$6 == (int_64)$4)
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10517]
	*($3 + [28]) = CALL $151([10517])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	*($1 + [16]) = [80]
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)330000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $109($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $80($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9760])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $80($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $110($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $21 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $154($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [280]) = (int_64)0
	*($4 + [272]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [9277])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [272]) + [8])
	CALL memcpy(($4 + [272]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9277])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [24]) = $2
	*($4 + [28]) = ($2 + [16])
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $42(($4 + [40]), $0, $1, ($4 + [8]))
	$0 = *($4 + [272])
	*($4 + [288]) = *((($4 + [272]) + [8]))
	*($4 + [296]) = $0
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 ($4 + [296])), (int_32 ($4 + [288])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $157($2)
	
.LABEL $label$8
	CALL $43($8)
	$global$0 = ($4 + [304])
	return [1]
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$3 = ($global$0 - [368])
	$global$0 = $3
	*(($3 + [152])) = (int_64)0
	*($3 + [144]) = (int_64)0
	$4 = ($0 + [32])
	$5 = *(($0 + [60]))
	if ( ((int_32)$5 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [16]) == (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$3
	if ( $5 ){ goto $label$1 }
	$5 = ($3 + [144])
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $25($4, $5)
	if ( ((int_32)*($5 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	goto $label$1 
	
.LABEL $label$4
	$5 = ($3 + [144])
	
.LABEL $label$1
	CALL $2((*($5 + [1]) == 0), [8413], [20008])
	*($3 + [360]) = [8400]
	*($3 + [364]) = CALL $151([8400])
	*($3 + [88]) = *($3 + [360])
	CALL $5(($3 + [144]), ($3 + [88]))
	*($3 + [352]) = [8619]
	*($3 + [356]) = CALL $151([8619])
	*($3 + [80]) = *($3 + [352])
	CALL $5(($3 + [272]), ($3 + [80]))
	CALL require_auth2((int_64)-3570662469203616464, (int_64)5037610434748743680)
	$6 = ($0 + [152])
	*($3 + [344]) = $6
	CALL $35(($3 + [336]), ($3 + [344]), $1)
	CALL $2(((int_64)*(*($3 + [340]) + [8]) == (int_64)*($1)), [8624], [20011])
	CALL $2(((uint_64)((int_64)*(*($3 + [340]) + [16]) + (int_64)-100) >= (uint_64)*($2)), [8643], [20012])
	*($3 + [328]) = ($0 + [72])
	*($3 + [312]) = [8614]
	*($3 + [316]) = CALL $151([8614])
	*($3 + [72]) = *($3 + [312])
	CALL $34(($3 + [320]), ($3 + [328]), CALL $5(($3 + [144]), ($3 + [72])))
	$7 = *($2)
	$8 = *(*($3 + [324]) + [24])
	$5 = CALL $151([8662])
	if ( ($5 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9593])
	goto $label$7 
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$9 = (int_64)0
	
.LOOP $label$9:
	$4 = *(($5 + [8661]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$10
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$9 }
	$9 = ((int_64)$9 << (int_64)8)
	goto $label$5 
	
.LABEL $label$6
	$9 = (int_64)0
	
.LABEL $label$5
	if ( (uint_64)(((int_64)$7 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$11 }
	CALL eosio_assert([0], [9691])
	
.LABEL $label$11
	$10 = ((int_64)$9 | (int_64)4)
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$11 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$9 = $11
	$4 = $5
	$5 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$9 = $11
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$4 = ((int_32)$5 < (int_32)[6])
	$12 = ($5 + [1])
	$5 = $12
	if ( $4 ){ goto $label$16 }
	$5 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [9740])
	
.LABEL $label$12
	CALL __multi3(($3 + [56]), $7, (int_64)$7 >> (int_64)63), $8, (int_64)$8 >> (int_64)63))
	$11 = *(($3 + [64]))
	$9 = *($3 + [56])
	if ( (( (uint_64)($9 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$18 }
	if ( ( ((uint_64)$9 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) ){ goto $label$17 }
	CALL eosio_assert([0], [10146])
	goto $label$17 
	
.LABEL $label$18
	CALL eosio_assert([0], [10122])
	
.LABEL $label$17
	CALL $2(((int_64)$9 < (int_64)10000000000000000), [8667], [20014])
	if ( ((int_64)$9 < (int_64)1) ){ goto $label$20 }
	*($3 + [240]) = [8400]
	*($3 + [244]) = CALL $151([8400])
	*($3 + [48]) = *($3 + [240])
	$5 = CALL $5(($3 + [248]), ($3 + [48]))
	*($3 + [224]) = [8553]
	*($3 + [228]) = CALL $151([8553])
	*($3 + [40]) = *($3 + [224])
	$4 = CALL $5(($3 + [232]), ($3 + [40]))
	*($3 + [256]) = *($5)
	*($3 + [264]) = *($4)
	*($3 + [208]) = [8343]
	*($3 + [212]) = CALL $151([8343])
	*($3 + [32]) = *($3 + [208])
	$12 = CALL $5(($3 + [216]), ($3 + [32]))
	*($3 + [192]) = [8334]
	*($3 + [196]) = CALL $151([8334])
	*($3 + [24]) = *($3 + [192])
	$13 = CALL $5(($3 + [200]), ($3 + [24]))
	*($3 + [128]) = [8400]
	*($3 + [132]) = CALL $151([8400])
	*($3 + [16]) = *($3 + [128])
	$14 = CALL $5(($3 + [136]), ($3 + [16]))
	*(($3 + [120])) = [0]
	*($3 + [112]) = (int_64)0
	$5 = CALL $151([8692])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$19 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$23 }
	*($3 + [112]) = ($5 << [1])
	$4 = (($3 + [112]) | [1])
	if ( $5 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$15 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($15)
	*($3 + [112]) = ($15 | [1])
	*($3 + [120]) = $4
	*($3 + [116]) = $5
	
.LABEL $label$22
	CALL memcpy($4, [8692], $5)
	
.LABEL $label$21
	*(($4 + $5)) = [0]
	*(($3 + [168])) = $10
	$5 = ($3 + [120])
	*(($3 + [184])) = *($5)
	*($5) = [0]
	*($3 + [160]) = $9
	*($3 + [144]) = *($14)
	*($3 + [152]) = *($1)
	*($3 + [176]) = *($3 + [112])
	*($3 + [112]) = (int_64)0
	$5 = CALL $62(($3 + [272]), ($3 + [256]), *($12), *($13), ($3 + [144]))
	CALL $41($5)
	$4 = *($5 + [28])
	if ( ($4 == 0) ){ goto $label$24 }
	*(($5 + [32])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$24
	$4 = *($5 + [16])
	if ( ($4 == 0) ){ goto $label$25 }
	*(($5 + [20])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$25
	if ( ((*(($3 + [176])) & [1]) == 0) ){ goto $label$26 }
	CALL _ZdlPv(*(($3 + [184])))
	
.LABEL $label$26
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*(($3 + [120])))
	
.LABEL $label$27
	$9 = *(*($3 + [340]))
	$4 = *(($0 + [180]))
	$1 = *(($0 + [176]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$29 }
	
.LOOP $label$31:
	$5 = ($4 + [-24])
	$12 = *($5)
	if ( ((int_64)*($12) == (int_64)$9) ){ goto $label$30 }
	$4 = $5
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$29 }
	if ( ((int_32)*(($12 + [28])) == (int_32)$6) ){ goto $label$28 }
	CALL eosio_assert([0], [9836])
	goto $label$28 
	
.LABEL $label$29
	$12 = [0]
	$5 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)-3020381105861820416, $9)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$28 }
	$12 = CALL $38($6, $5)
	if ( ((int_32)*($12 + [28]) == (int_32)$6) ){ goto $label$28 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$28
	*($3 + [96]) = [8400]
	*($3 + [100]) = CALL $151([8400])
	*($3 + [8]) = *($3 + [96])
	$5 = CALL $5(($3 + [104]), ($3 + [8]))
	*($3 + [144]) = $2
	$9 = *($5)
	if ( $12 ){ goto $label$32 }
	CALL eosio_assert([0], [10171])
	
.LABEL $label$32
	CALL $63($6, $12, $9, ($3 + [144]))
	
.LABEL $label$20
	$global$0 = ($3 + [368])
	return (unreachable)
	
.LABEL $label$19
	CALL $124(($3 + [112]))
}

int_32 .FUNC $23 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $154($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [304])) = [0]
	*($4 + [288]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [276]) = $2
	*($4 + [272]) = $2
	*($4 + [280]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9277])
	$3 = *($4 + [276])
	
.LABEL $label$4
	CALL memcpy(($4 + [288]), $3, [8])
	*($4 + [276]) = ($3 + [8])
	$3 = (($4 + [288]) + [8])
	CALL $77(($4 + [272]), $3)
	$8 = *((($4 + [272]) + [8]))
	*((($4 + [24]) + [8])) = $8
	*((($4 + [8]) + [8])) = $8
	$9 = *($4 + [272])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	$10 = CALL $42(($4 + [40]), $0, $1, ($4 + [8]))
	$0 = *($4 + [288])
	$3 = CALL $125(($4 + [312]), $3)
	*($4 + [328]) = $0
	$8 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	CALL void $8((int_32 ($4 + [328])), (int_32 $3), (int_32 $6))
	if ( ((*($4 + [312]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$6
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $157($2)
	
.LABEL $label$7
	CALL $43($10)
	if ( ((*($4 + [296]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($4 + [304])))
	
.LABEL $label$8
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [32]) = [8400]
	*($3 + [36]) = CALL $151([8400])
	*($3 + [8]) = *($3 + [32])
	CALL $5(($3 + [40]), ($3 + [8]))
	*($3 + [16]) = [8619]
	*($3 + [20]) = CALL $151([8619])
	*($3) = *($3 + [16])
	CALL $5(($3 + [24]), $3)
	CALL require_auth2((int_64)-3570662469203616464, (int_64)5037610434748743680)
	CALL require_recipient(*($1))
	$global$0 = ($3 + [48])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9887])
	
.LABEL $label$5
	$4 = CALL $154($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [1])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [8])
	CALL $96(($3 + [32]), ($3 + [24]))
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	*($3 + [32]) = (int_64)7235159537265672192
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = (int_64)7235159537265672192
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $97(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $157($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9277])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $77(*($1), *($0 + [12]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = [8343]
	*($2 + [20]) = CALL $151([8343])
	*($2 + [8]) = *($2 + [16])
	$3 = CALL $5(($2 + [24]), ($2 + [8]))
	if ( ((int_64)*($1 + [16]) != (int_64)*($3)) ){ goto $label$5 }
	$3 = CALL $151([8662])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9593])
	goto $label$3 
	
.LABEL $label$5
	$global$0 = ($2 + [32])
	return [0]
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$6:
	$5 = *(($3 + [8661]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$7
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)4
	
.LABEL $label$1
	$6 = *($1 + [8])
	$global$0 = ($2 + [32])
	return ((int_64)$6 == (int_64)$4)
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	$5 = CALL get_action($1, $2, [0], [0])
	if ( ((int_32)$5 <= (int_32)[0]) ){ goto $label$5 }
	if ( ($5 <= [513]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL eosio_assert([0], [9232])
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $3
	if ( ((int_32)$5 == (int_32)CALL get_action($1, $2, $3, $5)) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$3 = CALL $154($5)
	if ( ((int_32)$5 == (int_32)CALL get_action($1, $2, $3, $5)) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9255])
	
.LABEL $label$1
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [32])) = (int_64)0
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $5)
	CALL $79($4, $0)
	$global$0 = ($4 + [16])
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [9760])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [9760])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [9760])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $135 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $137($1, $0, [8385])
	CALL $138()
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1 + [8]) = *(*($4))
	*($1 + [16]) = *(*(($4 + [4])))
	$5 = ($1 + [16])
	$6 = ($1 + [8])
	$7 = *($0)
	$4 = *(($4 + [8]))
	$8 = *(($4 + [208]))
	if ( ((int_64)$8 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$8 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = (int_64)0
	$9 = ($4 + [192])
	$10 = CALL db_lowerbound_i64(*($9), *(($4 + [200])), (int_64)-4995815906127904768, (int_64)0)
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $64($9, $10)
	*($3 + [36]) = [0]
	*($3 + [32]) = $9
	$8 = *(*(CALL $104(($3 + [32])) + [4]))
	$8 = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	*(($4 + [208])) = $8
	if ( (uint_64)($8 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$8 = *(($4 + [208]))
	goto $label$1 
	
.LABEL $label$2
	*(($4 + [208])) = (int_64)0
	
.LABEL $label$1
	*($1) = $8
	$4 = $2
	$2 = ($4 + [-32])
	$global$0 = $2
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($4 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = $5
	CALL $105(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($7 + [8]), (int_64)-4995815906127904768, *(*($0 + [8])), $8, $2, [24])
	if ( (uint_64)($8 <= *($7 + [16])) ){ goto $label$5 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$8 = *(($7 + [8]))
	$11 = *(*(($0 + [8])))
	$12 = *($1)
	*($3 + [32]) = *(($1 + [8]))
	*($1 + [32]) = CALL db_idx64_store($8, (int_64)-4995815906127904768, $11, $12, ($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-4995815906127904768, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [24]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9836])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $64($7, CALL $fimport$7(*($7), *($7 + [8]), (int_64)-4995815906127904768, $6))
	if ( ((int_32)*($4 + [24]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$2
	*(($4 + [32])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $100(*($1), ($0 + [24]))
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10019])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10069])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$9 = *(($1 + [32]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4995815906127904768, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9887])
	
.LABEL $label$5
	$4 = CALL $154($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([40])) + [24]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $95(($3 + [32]), ($3 + [24]))
	*($5 + [32]) = [-1]
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $70(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $157($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = *($1 + [40])
	$4 = *($1 + [32])
	$5 = *($1 + [24])
	$6 = *($1 + [16])
	$7 = *($1 + [8])
	$8 = *($1)
	$1 = CALL $125($2, ($1 + [48]))
	*($2 + [48]) = $8
	*($2 + [56]) = $7
	*($2 + [40]) = $6
	*($2 + [32]) = $5
	*($2 + [24]) = $4
	*($2 + [16]) = $3
	$0 = *($0 + [4])
	$9 = *($0 + [4])
	$10 = (*($0) + int_32($9 >> [1]))
	$0 = *($0)
	if ( (($9 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($10) + $0))
	
.LABEL $label$1
	CALL void $10((int_32 ($2 + [48])), (int_32 ($2 + [56])), (int_32 ($2 + [40])), (int_32 ($2 + [32])), (int_32 ($2 + [24])), (int_32 ($2 + [16])), (int_32 $1), (int_32 $0))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$2
	$global$0 = ($2 + [64])
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9277])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $99(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $61 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [112])
	$5 = *(($0 + [140]))
	$4 = *(($0 + [136]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [40]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)-3020380518303662080, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $82($3, $6)
	if ( ((int_32)*($7 + [40]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$1
	CALL $2(((int_32)$7 != (int_32)[0]), [9817], [20024])
	if ( $7 ){ goto $label$5 }
	CALL eosio_assert([0], [9910])
	CALL eosio_assert([0], [9944])
	
.LABEL $label$5
	$6 = CALL db_next_i64(*($7 + [44]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	CALL $82($3, $6)
	
.LABEL $label$6
	CALL $83($3, $7)
	$global$0 = ($2 + [16])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = ($5 + [88])
	$7 = *($6)
	if ( ((int_64)$7 == (int_64)-2) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$6 = CALL db_lowerbound_i64(*(($5 + [72])), *(($5 + [80])), (int_64)-5915095480504680448, (int_64)0)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = ($5 + [72])
	CALL $81($8, $6)
	*($3 + [52]) = [0]
	*($3 + [48]) = $8
	$7 = ((int_64)*(*(CALL $115(($3 + [48])) + [4])) + (int_64)1)
	*(($5 + [88])) = $7
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *($6)
	goto $label$1 
	
.LABEL $label$2
	*(($5 + [88])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($3 + [24]) = [10568]
	*($3 + [28]) = CALL $151([10568])
	*($3 + [16]) = *($3 + [24])
	*($1 + [8]) = *(CALL $5(($3 + [48]), ($3 + [16])))
	$5 = CALL $151([8524])
	if ( ($5 <= [8]) ){ goto $label$7 }
	CALL eosio_assert([0], [9593])
	goto $label$6 
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = (int_64)0
	
.LOOP $label$8:
	$6 = *(($5 + [8523]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$9 }
	CALL eosio_assert([0], [9638])
	
.LABEL $label$9
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$8 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$4 
	
.LABEL $label$5
	$9 = (int_64)4
	
.LABEL $label$4
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$7 = $10
	$6 = $5
	$5 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$7 = $10
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $6 ){ goto $label$14 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [9740])
	
.LABEL $label$10
	*($3 + [40]) = [8343]
	*($3 + [44]) = CALL $151([8343])
	*($3 + [8]) = *($3 + [40])
	$5 = CALL $5(($3 + [48]), ($3 + [8]))
	*($1 + [24]) = (int_64)2000000
	*(($1 + [32])) = $9
	*(($1 + [40])) = *($5)
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [28]) = $5
	*($3 + [24]) = $5
	*($3 + [32]) = ($6 + [-14])
	*($3 + [40]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [52]) = $6
	*($3 + [48]) = $1
	*($3 + [56]) = ($1 + [16])
	*($3 + [60]) = ($1 + [24])
	CALL $113(($3 + [48]), ($3 + [40]))
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($4 + [8]), (int_64)-5915095480504680448, *(*($0 + [8])), $7, $5, [34])
	if ( ((uint_64)*($4 + [16]) > (uint_64)$7) ){ goto $label$15 }
	*(($4 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$15
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$9 = *($1)
	*($3 + [48]) = *($6)
	*($1 + [56]) = CALL db_idx64_store($7, (int_64)-5915095480504680448, $10, $9, ($3 + [48]))
	$global$0 = ($3 + [64])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [28])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10206])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10252])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [16]) = *($6)
	*($1 + [16]) = (int_64))(*($1 + [16]) - *(*($3)))
	$7 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-7])
	*($5 + [24]) = $5
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	CALL $102(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [32]), $2, $4, [25])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [32]) = *($6)
	if ( (CALL $150(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$4 }
	$4 = *($1 + [36])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020381105861820416, ($5 + [24]), $7)
	*(($1 + [36])) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, $2, ($5 + [32]))
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

int_32 .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL _Znwj([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $72($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $84(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [9277])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $1, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

int_32 .FUNC $100 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [9760])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $103 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [32]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10409])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-3020381105861820416)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10355])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10355])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $38(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [9760])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $104 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [28]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10409])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-4995815906127904768)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [10355])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [10355])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $64(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL _Znwj(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $140($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [4]))
	$3 = ($2 + ($3 << [4]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [4]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL _ZdlPv($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9273])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $72($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [9277])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [9273])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [4])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $89($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [9277])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [9277])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [8]), $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [64])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([32])) + [16]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($6 = ($5 + [8]))) = *(($3 + [8]))
	*($4 + [32]) = ($4 | [10])
	*($4 + [28]) = $4
	*($4 + [24]) = $4
	*($4 + [40]) = ($4 + [24])
	*($4 + [52]) = ($5 + [1])
	*($4 + [48]) = $5
	*($4 + [56]) = $6
	CALL $98(($4 + [48]), ($4 + [40]))
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)7235159537265672192, $2, (int_64)7235159537265672192, $4, [10])
	*($5 + [20]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$2
	*($4 + [24]) = $5
	*($4 + [48]) = (int_64)7235159537265672192
	*($4) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)7235159537265672192
	*($3 + [16]) = $6
	*($4 + [24]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $97(($1 + [24]), ($4 + [24]), ($4 + [48]), $4)
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$1 = *($4 + [24])
	*($4 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$global$0 = ($4 + [64])
}

void .FUNC $85 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10206])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10252])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($6 = ($1 + [8]))) = *(($3 + [8]))
	$3 = $4
	$4 = ($3 + [-16])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-6])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [1])
	*($5 + [32]) = $1
	*($5 + [40]) = $6
	CALL $98(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [20]), $2, $4, [10])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9760])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [9760])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $100(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9974])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10019])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10069])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [44]))
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9887])
	
.LABEL $label$5
	$4 = CALL $154($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([56])) + [24]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $94(($3 + [40]), ($3 + [32]))
	*($5 + [44]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $93(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $157($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [9887])
	
.LABEL $label$5
	$4 = CALL $154($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL _Znwj([64])) + [16]) = [0]
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	CALL $111(($3 + [32]), ($3 + [24]))
	*($5 + [56]) = [-1]
	*($5 + [52]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [7]) = $7
	*($3 + [24]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = ((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255)
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $46(($0 + [24]), ($3 + [32]), ($3 + [7]), ($3 + [24]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $157($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $91(CALL $90($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9760])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9760])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $149 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $148 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $145($3, (int_64)0)
	$4 = CALL $147($3, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return (CASTING uint_32)(uint_64 $4)
}

void .FUNC $145 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $144 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $143($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_64 .FUNC $147 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $146($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $142()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $146($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [19009]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $145($0, (int_64)0)
	*(CALL $142()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $146($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $146($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $146($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $146($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [19009])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [19009]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [19009]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $146($0)
	$5 = *(($6 + [19009]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $146($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [19009]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8196]))
	$8 = (int_64)0
	$5 = *(($6 + [19009]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [19009]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $146($0)
	$5 = *(($6 + [19009]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $146($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [19009]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $145($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [19009]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [19009]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $146($0) + [19009]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $142()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $142()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $142()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

int_32 .FUNC $146 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $144($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

int_32 .FUNC $141 (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

void .FUNC $140 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $143 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $142 ()
{
	return [10588]
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $140($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL _Znwj(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $140($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL _Znwj([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	$2 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [24])
	$10 = (CASTING uint_64)(uint_32 $1)
	$11 = ($6 + ((int_32)$9 * (int_32)[40]))
	$1 = ($7 + [32])
	$9 = ($7 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $72($9, $2)
	$1 = *($1)
	$2 = *($9)
	goto $label$6 
	
.LABEL $label$7
	$1 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($5 + [4]) = $2
	*($5) = $2
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$12 = ($7 + [40])
	CALL $108(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$9 }
	$13 = ($2 - $8)
	$9 = [0]
	
.LOOP $label$10:
	$4 = ($8 + $9)
	*((($2 = ($7 + $9)) + [-32])) = *(($4 + [-32]))
	*(($2 + [-40])) = *(($4 + [-40]))
	*(($1 = ($2 + [-24]))) = (int_64)0
	*(($6 = ($2 + [-16]))) = [0]
	$3 = ($4 + [-24])
	*($1) = *($3)
	$1 = ($4 + [-16])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$6 = ($4 + [-12])
	*($1) = *($6)
	*($3) = (int_64)0
	$4 = ($4 + [-4])
	*($2) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$9 = ($9 + [-40])
	if ( ((int_32)$13 != (int_32)$9) ){ goto $label$10 }
	$7 = ($7 + $9)
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$1 = $2
	
.LABEL $label$8
	*($0) = $7
	*(($0 + [4])) = $12
	*(($0 + [8])) = $11
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = *(($2 + [-12]))
	if ( ($4 == 0) ){ goto $label$13 }
	*(($2 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$13
	$4 = ($2 + [-40])
	$9 = *(($2 + [-24]))
	if ( ($9 == 0) ){ goto $label$14 }
	*(($2 + [-20])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$14
	$2 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($1 == 0) ){ goto $label$15 }
	CALL _ZdlPv($1)
	
.LABEL $label$15
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $140($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $71 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [28])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10206])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10252])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [16]) = *($6)
	*($1 + [16]) = *(*($3))
	$7 = *($1)
	$3 = $4
	$4 = ($3 + [-32])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-7])
	*($5 + [24]) = $5
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	CALL $102(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [32]), $2, $4, [25])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [32]) = *($6)
	if ( (CALL $150(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$4 }
	$4 = *($1 + [36])
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$5 }
	$4 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020381105861820416, ($5 + [24]), $7)
	*(($1 + [36])) = $4
	
.LABEL $label$5
	CALL db_idx64_update($4, $2, ($5 + [32]))
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = *($0)
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [9277])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $77(*($1), ($0 + [24]))
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $88($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $128($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $128($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $124($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $106(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $72($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $107(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

void .FUNC $39 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [28])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10206])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10252])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [16]) = *($6)
	$7 = *(*(*(($3 + [4])) + [4]) + [24])
	$8 = *(*($3))
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*(*(($3 + [8]))))
	*($1 + [24]) = ( $8 ? $7 : ((uint_32)$8 > (uint_32)$7) )
	$9 = *($1)
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-7])
	*($5 + [24]) = $5
	*($5 + [36]) = $6
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	CALL $102(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [32]), $2, $3, [25])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($5 + [32]) = *($6)
	if ( (CALL $150(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$4 }
	$3 = *($1 + [36])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3020381105861820416, ($5 + [24]), $9)
	*(($1 + [36])) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, $2, ($5 + [32]))
	
.LABEL $label$4
	$global$0 = ($5 + [48])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *(($6 + [168]))
	if ( ((int_64)$7 == (int_64)-1) ){ goto $label$4 }
	if ( ((uint_64)$7 >= (uint_64)(int_64)-2) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$7 = (int_64)0
	$8 = ($6 + [152])
	$9 = CALL db_lowerbound_i64(*($8), *(($6 + [160])), (int_64)-3020381105861820416, (int_64)0)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $38($8, $9)
	*($3 + [36]) = [0]
	*($3 + [32]) = $8
	$7 = *(*(CALL $103(($3 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	*(($6 + [168])) = $7
	if ( (uint_64)($7 <= (int_64)-2) ){ goto $label$1 }
	
.LABEL $label$3
	CALL eosio_assert([0], [10303])
	$7 = *(($6 + [168]))
	goto $label$1 
	
.LABEL $label$2
	*(($6 + [168])) = (int_64)0
	
.LABEL $label$1
	*($1) = $7
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	*($1 + [24]) = *(*($5 + [12]))
	$2 = $2
	$5 = ($2 + [-32])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-7])
	*($3 + [24]) = ($3 + [8])
	$2 = ($1 + [8])
	*($3 + [36]) = $2
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = ($1 + [24])
	CALL $102(($3 + [32]), ($3 + [24]))
	$7 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($4 + [8]), (int_64)-3020381105861820416, *(*($0 + [8])), $7, $5, [25])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = *(($4 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [32]) = *($2)
	*($1 + [36]) = CALL db_idx64_store($7, (int_64)-3020381105861820416, $10, $11, ($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $140($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [272])
	$global$0 = $3
	CALL memory()
	*(($3 + [16])) = [0]
	*($3 + [32]) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	CALL $4(CALL $42(($3 + [40]), $0, $1, ($3 + [8])), $1, $2)
	CALL eosio_exit([0])
	(unreachable)
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $88(CALL $87($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [9277])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [9277])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	return *($2) = (*($2) + [8])
}

int_64 .FUNC $32 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	$1 = ($global$0 - [64])
	$global$0 = $1
	*(($1 + [40])) = (int_64)0
	*($1 + [32]) = (int_64)0
	$2 = ($0 + [32])
	$3 = *(($0 + [60]))
	if ( ((int_32)$3 == (int_32)*(($0 + [56]))) ){ goto $label$2 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [16]) == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [9836])
	
.LABEL $label$3
	if ( $3 ){ goto $label$1 }
	$3 = ($1 + [32])
	goto $label$1 
	
.LABEL $label$2
	$0 = CALL db_find_i64(*($2), *(($0 + [40])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $25($2, $0)
	if ( ((int_32)*($3 + [16]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [9836])
	goto $label$1 
	
.LABEL $label$4
	$3 = ($1 + [32])
	
.LABEL $label$1
	*(($0 = (($1 + [48]) + [8]))) = *(($3 + [8]))
	*($1 + [48]) = *($3)
	*($0) = ((int_64)*($0) + (int_64)1)
	*($1 + [16]) = [8400]
	*($1 + [20]) = CALL $151([8400])
	*($1 + [8]) = *($1 + [16])
	CALL $44($2, ($1 + [48]), *(CALL $5(($1 + [24]), ($1 + [8]))))
	$4 = *($0)
	$global$0 = ($1 + [64])
	return $4
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [9766])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([56])) + [24]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [40]) = $1
	$3 = *($3)
	*($5) = *($3)
	*($5 + [8]) = *($3 + [8])
	*($5 + [16]) = *($3 + [16])
	*($5 + [24]) = *($3 + [24])
	*($5 + [32]) = *($3 + [32])
	*($4 + [56]) = ($4 + [40])
	*($4 + [52]) = $4
	*($4 + [48]) = $4
	*($4 + [64]) = ($4 + [48])
	*($4 + [76]) = ($5 + [8])
	*($4 + [72]) = $5
	*($4 + [80]) = ($5 + [16])
	*($4 + [84]) = ($5 + [24])
	*($4 + [88]) = ($5 + [32])
	CALL $92(($4 + [72]), ($4 + [64]))
	$6 = *($5)
	$7 = CALL db_store_i64(*($1 + [8]), (int_64)-3020380518303662080, $2, $6, $4, [40])
	*($5 + [44]) = $7
	if ( (uint_64)($6 <= *($1 + [16])) ){ goto $label$2 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($4 + [72]) = $5
	$6 = *($5)
	*($4) = $6
	*($4 + [48]) = $7
	$8 = ($1 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = $6
	*($3 + [16]) = $7
	*($4 + [72]) = [0]
	*($3) = $5
	*($8) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $93(($1 + [24]), ($4 + [72]), $4, ($4 + [48]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [72])
	*($4 + [72]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$global$0 = ($4 + [96])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$6 = ($global$0 - [64])
	$global$0 = $6
	$7 = *($1)
	if ( ($7 & [1]) ){ goto $label$6 }
	$7 = uint_32($7 >> [1])
	$8 = ($1 + [1])
	$9 = ($8 + $7)
	if ( $7 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$7 = *($1 + [4])
	$8 = *($1 + [8])
	$9 = ($8 + $7)
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$7:
	if ( CALL $141(*($8)) ){ goto $label$4 }
	$8 = ($8 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	$8 = $9
	$9 = [1]
	$10 = *($1)
	if ( (($10 & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$7 = ($8 + [1])
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( (CALL $141(*($7)) == 0) ){ goto $label$10 }
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($8) = *($7)
	$8 = ($8 + [1])
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	$9 = [1]
	$10 = *($1)
	if ( ($10 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = ($1 + $9)
	$9 = ($7 + uint_32($10 >> $9))
	goto $label$1 
	
.LABEL $label$2
	$7 = *($1 + [8])
	$9 = ($7 + *($1 + [4]))
	
.LABEL $label$1
	CALL $131($1, ($8 - $7), ($9 - $8))
	$9 = *($1)
	if ( ($9 & [1]) ){ goto $label$13 }
	$8 = ($1 + [1])
	$10 = [0]
	$7 = [0]
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$8 = *($1 + [8])
	$10 = [0]
	$7 = [0]
	$9 = *($1 + [4])
	if ( ($9 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$7 = [0]
	
.LOOP $label$14:
	$7 = ($7 + ((int_32)*($8) == (int_32)[45]))
	$8 = ($8 + [1])
	$9 = ($9 + [-1])
	if ( $9 ){ goto $label$14 }
	
.LABEL $label$11
	CALL $2(((int_32)$7 == (int_32)[3]), [9288], [20000])
	*($6 + [40]) = $10
	*($6 + [32]) = (int_64)0
	*($6 + [8]) = [45]
	*($6 + [48]) = $10
	*($6 + [44]) = [1]
	*($6 + [44]) = (CALL $3($1, ($6 + [32]), ($6 + [8]), ($6 + [48]), ($6 + [44])) + [1])
	*($6 + [48]) = [45]
	*($6 + [8]) = [1]
	$7 = CALL $3($1, ($6 + [32]), ($6 + [48]), ($6 + [44]), ($6 + [8]))
	$8 = *($6 + [32])
	CALL $2(((int_32)( *($6 + [36]) ? uint_32($8 >> [1]) : ($8 & [1]) ) != (int_32)$10), [9301], [20000])
	$9 = *($6 + [40])
	$11 = *($6 + [32])
	CALL prints([9315])
	$8 = (($6 + [32]) | [1])
	CALL prints(( $9 ? $8 : ($11 & [1]) ))
	$9 = CALL $134(($6 + [32]), $10, [10])
	*($2) = $9
	CALL $2(((int_32)($9 & [255]) == (int_32)[2]), [9324], [20000])
	*($6 + [44]) = ($7 + [1])
	*($6 + [48]) = [45]
	*($6 + [8]) = [1]
	$7 = CALL $3($1, ($6 + [32]), ($6 + [48]), ($6 + [44]), ($6 + [8]))
	$9 = *($6 + [32])
	CALL $2(((int_32)( *($6 + [36]) ? uint_32($9 >> [1]) : ($9 & [1]) ) != (int_32)$10), [9338], [20000])
	$9 = *($6 + [40])
	$10 = *($6 + [32])
	CALL prints([9349])
	CALL prints(( $9 ? $8 : ($10 & [1]) ))
	$8 = ( *($6 + [40]) ? $8 : (*($6 + [32]) & [1]) )
	*($6 + [24]) = $8
	*($6 + [28]) = CALL $151($8)
	*($6) = *($6 + [24])
	*($3) = *(CALL $5(($6 + [48]), $6))
	$8 = ($7 + [1])
	*($6 + [44]) = $8
	CALL $126(($6 + [48]), $1, $8, [-1], $1)
	if ( (*($6 + [32]) & [1]) ){ goto $label$16 }
	*($6 + [32]) = [0]
	goto $label$15 
	
.LABEL $label$16
	*(*(($6 + [40]))) = [0]
	*($6 + [36]) = [0]
	
.LABEL $label$15
	CALL $128(($6 + [32]), [0])
	*((($6 + [32]) + [8])) = *((($6 + [48]) + [8]))
	*($6 + [32]) = *($6 + [48])
	$8 = *($6 + [32])
	if ( (( *($6 + [36]) ? uint_32($8 >> [1]) : ($8 & [1]) ) == 0) ){ goto $label$18 }
	$12 = (CASTING int_64)(int_32 CALL $134(($6 + [32]), [0], [10]))
	goto $label$17 
	
.LABEL $label$18
	$12 = *($3)
	if ( ((int_64)$12 == (int_64)0) ){ goto $label$22 }
	$7 = [0]
	$9 = *([0] + [9556])
	
.LOOP $label$24:
	*((($6 + [48]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$12 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$23 }
	$12 = ((int_64)$12 << (int_64)5)
	if ( ((int_64)$12 != (int_64)0) ){ goto $label$24 }
	
.LABEL $label$23
	*(($6 + [16])) = [0]
	*($6 + [8]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$21 }
	*($6 + [8]) = ($7 << [1])
	$9 = (($6 + [8]) | [1])
	goto $label$20 
	
.LABEL $label$22
	*(($6 + [16])) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [8]) = [0]
	$7 = (($6 + [8]) | [1])
	goto $label$19 
	
.LABEL $label$21
	$1 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($1)
	*($6 + [8]) = ($1 | [1])
	*($6 + [16]) = $9
	*($6 + [12]) = $7
	
.LABEL $label$20
	$1 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$25:
	*(($9 + $8)) = *((($6 + [48]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$25 }
	$7 = ($9 + $7)
	
.LABEL $label$19
	$8 = [0]
	*($7) = [0]
	$7 = ($7 & [1])
	$7 = *($6 + [8])
	$9 = CALL $151([8614])
	if ( ((int_32)$9 != (int_32)( *($6 + [12]) ? uint_32($7 >> [1]) : $7 )) ){ goto $label$26 }
	$8 = (CALL $133(($6 + [8]), [0], [-1], [8614], $9) == 0)
	$7 = (*($6 + [8]) & [1])
	
.LABEL $label$26
	if ( ($7 == 0) ){ goto $label$27 }
	CALL _ZdlPv(*($6 + [16]))
	
.LABEL $label$27
	if ( ($8 == 0) ){ goto $label$28 }
	CALL $2(((uint_64)$5 > (uint_64)(int_64)99), [9359], [20015])
	$12 = ((uint_64)$5 / (uint_64)(int_64)10)
	goto $label$17 
	
.LABEL $label$28
	$12 = *($3)
	if ( ((int_64)$12 == (int_64)0) ){ goto $label$32 }
	$7 = [0]
	$9 = *([0] + [9556])
	
.LOOP $label$34:
	*((($6 + [48]) + ($8 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$12 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$8 == (int_32)[12]) )))))
	$7 = ($8 + [1])
	if ( ((uint_32)$8 > (uint_32)[11]) ){ goto $label$33 }
	$12 = ((int_64)$12 << (int_64)5)
	if ( ((int_64)$12 != (int_64)0) ){ goto $label$34 }
	
.LABEL $label$33
	*(($6 + [16])) = [0]
	*($6 + [8]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$31 }
	*($6 + [8]) = ($7 << [1])
	$9 = (($6 + [8]) | [1])
	goto $label$30 
	
.LABEL $label$32
	*(($6 + [16])) = [0]
	*($6 + [8]) = (int_64)0
	*($6 + [8]) = [0]
	$8 = (($6 + [8]) | [1])
	goto $label$29 
	
.LABEL $label$31
	$1 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($1)
	*($6 + [8]) = ($1 | [1])
	*($6 + [16]) = $9
	*($6 + [12]) = $7
	
.LABEL $label$30
	$1 = ($8 + [1])
	$8 = [0]
	
.LOOP $label$35:
	*(($9 + $8)) = *((($6 + [48]) + $8))
	$8 = ($8 + [1])
	if ( ((int_32)$1 != (int_32)$8) ){ goto $label$35 }
	$8 = ($9 + $7)
	
.LABEL $label$29
	*($8) = [0]
	$12 = (int_64)1
	$8 = ($8 & [1])
	$8 = *($6 + [8])
	$7 = CALL $151([8517])
	if ( ((int_32)$7 != (int_32)( *($6 + [12]) ? uint_32($8 >> [1]) : $8 )) ){ goto $label$36 }
	$12 = ( (int_64)1 ? $5 : CALL $133(($6 + [8]), [0], [-1], [8517], $7) )
	$8 = (*($6 + [8]) & [1])
	
.LABEL $label$36
	if ( ($8 == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($6 + [16]))
	
.LABEL $label$17
	*($4) = $12
	CALL prints([9380])
	CALL printui(*($4))
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$37 }
	CALL _ZdlPv(*(($6 + [40])))
	
.LABEL $label$37
	$global$0 = ($6 + [64])
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [64])
	$global$0 = $5
	*($5 + [40]) = ($0 + [72])
	CALL $34(($5 + [32]), ($5 + [40]), $2)
	CALL $2(((int_64)*(*($5 + [36]) + [8]) == (int_64)*($2)), [8589], [20003])
	$6 = *($5 + [36])
	$7 = *($6 + [24])
	$8 = *(($6 + [32]))
	CALL $2((((int_64)*($4 + [16]) == (int_64)*(($6 + [40]))) & ((int_64)*($4 + [8]) == (int_64)$8)), [9389], [20004])
	$7 = ((int_64)$7 * (int_64)*($3))
	if ( ((int_64)$8 == (int_64)*($4 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [9496])
	
.LABEL $label$1
	CALL $2(((int_64)*($4) == (int_64)$7), [9415], [20005])
	$7 = *($2)
	if ( ((int_64)$7 == (int_64)0) ){ goto $label$5 }
	$2 = [0]
	$6 = *([0] + [9556])
	
.LOOP $label$7:
	*((($5 + [48]) + ($4 = $2))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$7 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$2 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$6 }
	$7 = ((int_64)$7 << (int_64)5)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$7 }
	
.LABEL $label$6
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($2 << [1])
	$6 = (($5 + [16]) | [1])
	goto $label$3 
	
.LABEL $label$5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	*($5 + [16]) = [0]
	$9 = (($5 + [16]) | [1])
	$4 = $9
	goto $label$2 
	
.LABEL $label$4
	$3 = (($2 + [16]) & [-16])
	$6 = CALL _Znwj($3)
	*($5 + [16]) = ($3 | [1])
	*($5 + [24]) = $6
	*($5 + [20]) = $2
	
.LABEL $label$3
	$3 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$8:
	*(($6 + $4)) = *((($5 + [48]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$8 }
	$4 = ($6 + $2)
	$9 = (($5 + [16]) | [1])
	
.LABEL $label$2
	$10 = [0]
	*($4) = [0]
	$2 = *($5 + [16])
	$11 = *($5 + [24])
	$6 = *($5 + [20])
	$3 = [0]
	$4 = CALL $151([9438])
	if ( ($4 == 0) ){ goto $label$10 }
	$3 = ($2 & [1])
	$2 = ( $6 ? uint_32($2 >> [1]) : $3 )
	if ( ((int_32)$2 < (int_32)$4) ){ goto $label$9 }
	$9 = ( $11 ? $9 : $3 )
	$3 = ($9 + $2)
	$6 = $9
	
.LOOP $label$11:
	$2 = (($2 - $4) + [1])
	if ( ($2 == 0) ){ goto $label$9 }
	$2 = CALL $149($6, [103], $2)
	if ( ($2 == 0) ){ goto $label$9 }
	if ( (CALL $150($2, [9438], $4) == 0) ){ goto $label$12 }
	$6 = ($2 + [1])
	$2 = ($3 - $6)
	if ( ((int_32)$2 >= (int_32)$4) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$9 }
	$3 = ($2 - $9)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$9 }
	
.LABEL $label$10
	$4 = CALL $126(($5 + [48]), ($5 + [16]), ($3 + [1]), [-1], ($5 + [16]))
	$2 = *($4 + [8])
	$6 = *($5 + [48])
	CALL prints([9442])
	CALL prints(( $2 ? ($4 + [1]) : ($6 & [1]) ))
	$2 = *($5 + [48])
	if ( (( *($4 + [4]) ? uint_32($2 >> [1]) : ($2 & [1]) ) == 0) ){ goto $label$13 }
	$10 = (CALL $134($4, [0], [10]) & [255])
	
.LABEL $label$13
	CALL $2((($10 + [-1]) <= [100]), [9452], [20006])
	*($5 + [8]) = ($0 + [152])
	CALL $35($5, ($5 + [8]), $1)
	$2 = [10]
	$6 = *($5 + [4])
	if ( ((int_64)*($6 + [8]) != (int_64)*($1)) ){ goto $label$14 }
	$2 = (*($6 + [24]) + [10])
	
.LABEL $label$14
	CALL $2(((int_32)$10 == (int_32)$2), [9470], [20007])
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$9
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*(($5 + [24])))
	
.LABEL $label$15
	$global$0 = ($5 + [64])
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $151($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $127($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $127 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}