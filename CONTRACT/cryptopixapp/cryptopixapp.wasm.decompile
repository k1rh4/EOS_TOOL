(data (i32.const 4) "\c0R\00\00")
(data (i32.const 16) "Game is paused\00")
(data (i32.const 32) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 96) "cannot create objects in table of another contract\00")
(data (i32.const 160) "cannot pass end iterator to modify\00")
(data (i32.const 208) "object passed to modify is not in multi_index\00")
(data (i32.const 256) "cannot modify objects in table of another contract\00")
(data (i32.const 320) "updater cannot change primary key when modifying an object\00")
(data (i32.const 384) "write\00")
(data (i32.const 400) "error reading iterator\00")
(data (i32.const 432) "read\00")
(data (i32.const 448) "get\00")
(data (i32.const 464) "Game has not started.\00")
(data (i32.const 496) "invalid symbol name\00")
(data (i32.const 528) "active\00")
(data (i32.const 544) "pxstokensapp\00")
(data (i32.const 560) "transfer\00")
(data (i32.const 576) "CryptoPIX winner participation reward\00")
(data (i32.const 624) "cannot pass end iterator to erase\00")
(data (i32.const 672) "cannot increment end iterator\00")
(data (i32.const 704) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 768) "object passed to erase is not in multi_index\00")
(data (i32.const 816) "cannot erase objects in table of another contract\00")
(data (i32.const 880) "attempt to remove object that was not in multi_index\00")
(data (i32.const 944) "divide by zero\00")
(data (i32.const 960) "signed division overflow\00")
(data (i32.const 1008) "singleton does not exist\00")
(data (i32.const 1040) "Submission is too small\00")
(data (i32.const 1072) "Need to paint more before creating this submission\00")
(data (i32.const 1136) "start_x coordinate out of bounds\00")
(data (i32.const 1184) "start_y coordinate out of bounds\00")
(data (i32.const 1232) "end_x coordinate out of bounds\00")
(data (i32.const 1264) "end_y coordinate out of bounds\00")
(data (i32.const 1296) "next primary key in table is at autoincrement limit\00")
(data (i32.const 1360) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 1424) "cannot decrement iterator at beginning of table\00")
(data (i32.const 1472) "You havent participated in the last cycle\00")
(data (i32.const 1520) "No submissions in last cycle\00")
(data (i32.const 1552) "The submission doesn\'t exist\00")
(data (i32.const 1584) "No votes left\00")
(data (i32.const 1600) "invalid quantity\00")
(data (i32.const 1632) "must withdraw positive quantity\00")
(data (i32.const 1664) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 1728) "insufficient balance\00")
(data (i32.const 1760) "attempt to subtract asset with different symbol\00")
(data (i32.const 1808) "subtraction underflow\00")
(data (i32.const 1840) "subtraction overflow\00")
(data (i32.const 1872) "cryptopix withdraw\00")
(data (i32.const 1904) "invalid token\00")
(data (i32.const 1920) "User already has account\00")
(data (i32.const 1952) "all\00")
(data (i32.const 1968) "canvas\00")
(data (i32.const 1984) "account\00")
(data (i32.const 2000) "game\00")
(data (i32.const 2016) "attempt to add asset with different symbol\00")
(data (i32.const 2064) "addition underflow\00")
(data (i32.const 2096) "addition overflow\00")
(data (i32.const 2128) "Total stake was missing \00")
(data (i32.const 2160) " PXS.\00")
(data (i32.const 2176) "Total stake was over by \00")
(data (i32.const 2208) "canvas in use\00")
(data (i32.const 2224) "deposit\00")
(data (i32.const 2240) "Invalid token transfer\00")
(data (i32.const 2272) "Quantity must be positive\00")
(data (i32.const 2304) "must deposit PXS token\00")
(data (i32.const 2336) "onerror\00")
(data (i32.const 2352) "eosio\00")
(data (i32.const 2368) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 2432) "eosio.token\00")
(data (i32.const 10848) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "abort" (func $fimport$0))
(import "env" "action_data_size" (func $fimport$1 (result i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "current_time" (func $fimport$3 (result i64)))
(import "env" "db_end_i64" (func $fimport$4 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$5 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "db_idx128_find_primary" (func $fimport$7 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx128_lowerbound" (func $fimport$8 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx128_next" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_idx128_remove" (func $fimport$10 (param i32)))
(import "env" "db_idx128_store" (func $fimport$11 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx128_update" (func $fimport$12 (param i32 i64 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$13 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$14 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$15 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$16 (param i32)))
(import "env" "db_idx64_store" (func $fimport$17 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$18 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$19 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$20 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$21 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$22 (param i32)))
(import "env" "db_store_i64" (func $fimport$23 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$24 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$25 (param i32 i32)))
(import "env" "memcpy" (func $fimport$26 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$27 (param i32 i32 i32) (result i32)))
(import "env" "printdf" (func $fimport$28 (param f64)))
(import "env" "prints" (func $fimport$29 (param i32)))
(import "env" "read_action_data" (func $fimport$30 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$31 (param i64)))
(import "env" "require_auth2" (func $fimport$32 (param i64 i64)))
(import "env" "send_inline" (func $fimport$33 (param i32 i32)))
(export "memory" (memory $0))
(export "now" (func $0))
(export "_ZeqRK11checksum256S1_" (func $1))
(export "_ZeqRK11checksum160S1_" (func $2))
(export "_ZneRK11checksum160S1_" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_Z11combine_idsRKyS0_" (func $5))
(export "_Z11combine_idsRKmS0_" (func $6))
(export "_Z11combine_idsRKtS0_" (func $7))
(export "_Z7getTimev" (func $8))
(export "_Z13getCyclesTimev" (func $9))
(export "_Z10getCycleOfm" (func $10))
(export "_Z8getCyclev" (func $11))
(export "_Z9isInCyclemt" (func $12))
(export "_ZN9cryptopix4drawEyNSt3__16vectorI3segNS0_9allocatorIS2_EEEE" (func $13))
(export "_ZN9cryptopix13createAccountEy" (func $16))
(export "_ZN9cryptopix14checkGameStateEhb" (func $17))
(export "_ZN9cryptopix12createCanvasEv" (func $35))
(export "_ZN9cryptopix10setWinnersEhN5eosio5assetERNSt3__15stackI10submissionNS2_5dequeIS4_NS2_9allocatorIS4_EEEEEEy" (func $38))
(export "_ZN9cryptopix16getParticipationEhRK6winnerRK6canvas" (func $49))
(export "_ZN9cryptopix8cooldownEN5eosio5assetE" (func $93))
(export "_ZN9cryptopix9createsubEy4area" (func $94))
(export "_ZN9cryptopix7votesubEyy" (func $99))
(export "_ZN9cryptopix8withdrawEyN5eosio5assetE" (func $107))
(export "_ZN9cryptopix9createaccEy" (func $118))
(export "_ZN9cryptopix10proccanvasEv" (func $119))
(export "_ZN9cryptopix4initEv" (func $120))
(export "_ZN9cryptopix5tokenExN5eosio11symbol_typeE" (func $121))
(export "_ZN9cryptopix12createcanvasEv" (func $122))
(export "_ZN9cryptopix11setgamedimsEtt" (func $123))
(export "_ZN9cryptopix11toggledebugEv" (func $124))
(export "_ZN9cryptopix11togglepauseEv" (func $125))
(export "_ZN9cryptopix10setrewardsENSt3__16vectorIN5eosio5assetENS0_9allocatorIS3_EEEE" (func $126))
(export "_ZN9cryptopix11cleartablesENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEh" (func $127))
(export "_ZN9cryptopix10checkstakeEv" (func $135))
(export "_ZN9cryptopix11redowinnersEy" (func $136))
(export "_ZN9cryptopix11clearcanvasEyh" (func $137))
(export "_ZN9cryptopix10wincatchupEyymNSt3__16vectorI7supportNS0_9allocatorIS2_EEEE" (func $138))
(export "_ZN9cryptopix7depositEv" (func $139))
(export "_ZN9cryptopix7isInSubEttRK10submission" (func $147))
(export "apply" (func $148))
(export "floor" (func $179))
(export "fmax" (func $180))
(export "fmin" (func $181))
(export "memchr" (func $182))
(export "memcmp" (func $183))
(export "strlen" (func $184))
(export "malloc" (func $185))
(export "free" (func $188))
(table $0 18 18 anyfunc)
(elem (i32.const 0) $189 $13 $136 $135 $125 $122 $126 $127 $138 $94 $120 $119 $107 $124 $118 $123 $137 $99)



void .FUNC $174 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_64 .FUNC _Z11combine_idsRKmS0_ (int_32 $0, int_32 $1)
{
	return ((int_64)((int_64)*($0) << (int_64)32) | (int_64)*($1))
}

int_32 .FUNC $176 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC $177 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [448])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [2])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $171($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [2]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	$3 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((int_32)*($3) != (int_32)$6), [432])
	CALL memcpy($7, *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[1]), [432])
	CALL memcpy(($7 + [2]), *($4), [2])
	$6 = (*($4) + [2])
	*($4) = $6
	$7 = ($7 + [4])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [2]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [2])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$4 }
	$6 = [1073741823]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$7 }
	$6 = int_32($2 >> [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $172(($6 << [2]))
	goto $label$2 
	
.LABEL $label$6
	
.LOOP $label$8:
	*($6) = [0]
	$6 = (*($6) + [4])
	*(($6 = ($0 + [4]))) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $177($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [2]))
	$5 = ($2 + ($3 << [2]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = [0]
	$6 = ($6 + [4])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $173($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $172 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [2444])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _Z11combine_idsRKtS0_ (int_32 $0, int_32 $1)
{
	return ((*($0) << [16]) | *($1))
}

int_32 .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $172($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _Z11combine_idsRKyS0_ (int_32 $0, int_32 $1, int_32 $2)
{
	*(($0 + [8])) = *($1)
	*($0) = *($2)
}

void .FUNC _ZN9cryptopix11cleartablesENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEh (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$21 = (*([0] + [4]) - [208])
	*([0] + [4]) = $21
	CALL require_auth(*($0))
	$19 = [0]
	$20 = *($1)
	$8 = CALL strlen([1952])
	if ( ((int_32)$8 != (int_32)( *($1 + [4]) ? uint_32($20 >> [1]) : ($20 & [1]) )) ){ goto $label$1 }
	$19 = (CALL $176($1, [0], [-1], [1952], $8) == 0)
	
.LABEL $label$1
	if ( ($2 == 0) ){ goto $label$2 }
	if ( $19 ){ goto $label$9 }
	$20 = *($1)
	if ( ($20 & [1]) ){ goto $label$11 }
	$8 = uint_32($20 >> [1])
	$18 = ($1 + [1])
	goto $label$10 
	
.LABEL $label$11
	$8 = *(($1 + [4]))
	$18 = *($1 + [8])
	
.LABEL $label$10
	$20 = CALL strlen([1968])
	if ( ($20 == 0) ){ goto $label$9 }
	if ( ((int_32)$8 < (int_32)$20) ){ goto $label$7 }
	$17 = ($18 + $8)
	$7 = $18
	
.LOOP $label$12:
	$8 = (($8 - $20) + [1])
	if ( ($8 == 0) ){ goto $label$8 }
	$8 = CALL memchr($7, [99], $8)
	if ( ($8 == 0) ){ goto $label$8 }
	if ( (CALL memcmp($8, [1968], $20) == 0) ){ goto $label$13 }
	$7 = ($8 + [1])
	$8 = ($17 - $7)
	if ( ((int_32)$8 >= (int_32)$20) ){ goto $label$12 }
	goto $label$8 
	
.LABEL $label$13
	if ( ((int_32)$8 == (int_32)$17) ){ goto $label$8 }
	if ( ((int_32)($8 - $18) == (int_32)[-1]) ){ goto $label$8 }
	
.LABEL $label$9
	$3 = ($0 + [48])
	$20 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)4730947158474227712, (int_64)0)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$14 }
	$4 = CALL $31($3, $20)
	$11 = (($21 + [168]) + [28])
	$5 = (($21 + [128]) + [36])
	$13 = ($5 + [2])
	
.LOOP $label$15:
	*((($21 + [168]) + [8])) = *($4)
	*((($21 + [168]) + [16])) = (int_64)-1
	*(($9 = (($21 + [168]) + [24]))) = [0]
	$10 = *($0)
	*($21 + [168]) = $10
	*($11) = [0]
	*((($21 + [168]) + [32])) = [0]
	*((($21 + [168]) + [36])) = [0]
	*((($21 + [128]) + [16])) = (int_64)-1
	*(($12 = (($21 + [128]) + [24]))) = (int_64)0
	*((($21 + [128]) + [32])) = [0]
	*((($21 + [128]) + [8])) = *($4)
	*($13) = [0]
	*($5) = [0]
	*($21 + [128]) = $10
	*(($14 = (($21 + [88]) + [24]))) = (int_64)0
	*((($21 + [88]) + [32])) = [0]
	$15 = *($4)
	*((($21 + [88]) + [8])) = $15
	*((($21 + [88]) + [16])) = (int_64)-1
	*((($21 + [88]) + [36])) = [0]
	*($21 + [88]) = $10
	*((($21 + [48]) + [16])) = (int_64)-1
	*(($16 = (($21 + [48]) + [24]))) = (int_64)0
	*((($21 + [48]) + [32])) = [0]
	*((($21 + [48]) + [8])) = *($4)
	*((($21 + [48]) + [36])) = [0]
	*($21 + [48]) = $10
	$20 = CALL db_lowerbound_i64($10, $15, (int_64)-4139046226129272832, (int_64)0)
	if ( ((int_32)$20 < (int_32)[0]) ){ goto $label$16 }
	$6 = CALL $62(($21 + [88]), $20)
	if ( (($2 & [255]) == 0) ){ goto $label$16 }
	
.LOOP $label$17:
	*((($21 + [8]) + [16])) = (int_64)-1
	*((($21 + [8]) + [8])) = ((int_64)*($6) | (int_64)((int_64)*($4) << (int_64)32))
	*($21 + [8]) = *($0)
	*(($17 = (($21 + [8]) + [24]))) = [0]
	*(($18 = (($21 + [8]) + [28]))) = [0]
	*((($21 + [8]) + [32])) = [0]
	$2 = CALL $128(($21 + [8]), ($2 & [255]))
	$7 = *($17)
	if ( ($7 == 0) ){ goto $label$18 }
	$20 = *($18)
	if ( ((int_32)$20 == (int_32)$7) ){ goto $label$20 }
	
.LOOP $label$21:
	$20 = ($20 + [-24])
	$8 = *($20)
	*($20) = [0]
	if ( ($8 == 0) ){ goto $label$22 }
	CALL $173($8)
	
.LABEL $label$22
	if ( ((int_32)$7 != (int_32)$20) ){ goto $label$21 }
	$20 = *($17)
	goto $label$19 
	
.LABEL $label$20
	$20 = $7
	
.LABEL $label$19
	*($18) = $7
	CALL $173($20)
	
.LABEL $label$18
	if ( $2 ){ goto $label$17 }
	$2 = [0]
	
.LABEL $label$16
	$2 = CALL $129(($21 + [168]), CALL $55(($21 + [88]), CALL $51(($21 + [128]), CALL $56(($21 + [48]), ($2 & [255])))))
	$7 = *($16)
	if ( ($7 == 0) ){ goto $label$23 }
	$17 = (($21 + [48]) + [28])
	$20 = *($17)
	if ( ((int_32)$20 == (int_32)$7) ){ goto $label$25 }
	
.LOOP $label$26:
	$20 = ($20 + [-24])
	$8 = *($20)
	*($20) = [0]
	if ( ($8 == 0) ){ goto $label$27 }
	CALL $173($8)
	
.LABEL $label$27
	if ( ((int_32)$7 != (int_32)$20) ){ goto $label$26 }
	$20 = *($16)
	goto $label$24 
	
.LABEL $label$25
	$20 = $7
	
.LABEL $label$24
	*($17) = $7
	CALL $173($20)
	
.LABEL $label$23
	$7 = *($14)
	if ( ($7 == 0) ){ goto $label$28 }
	$17 = (($21 + [88]) + [28])
	$20 = *($17)
	if ( ((int_32)$20 == (int_32)$7) ){ goto $label$30 }
	
.LOOP $label$31:
	$20 = ($20 + [-24])
	$8 = *($20)
	*($20) = [0]
	if ( ($8 == 0) ){ goto $label$32 }
	CALL $173($8)
	
.LABEL $label$32
	if ( ((int_32)$7 != (int_32)$20) ){ goto $label$31 }
	$20 = *($14)
	goto $label$29 
	
.LABEL $label$30
	$20 = $7
	
.LABEL $label$29
	*($17) = $7
	CALL $173($20)
	
.LABEL $label$28
	$7 = *($12)
	if ( ($7 == 0) ){ goto $label$33 }
	$17 = (($21 + [128]) + [28])
	$20 = *($17)
	if ( ((int_32)$20 == (int_32)$7) ){ goto $label$35 }
	
.LOOP $label$36:
	$20 = ($20 + [-24])
	$8 = *($20)
	*($20) = [0]
	if ( ($8 == 0) ){ goto $label$37 }
	CALL $173($8)
	
.LABEL $label$37
	if ( ((int_32)$7 != (int_32)$20) ){ goto $label$36 }
	$20 = *($12)
	goto $label$34 
	
.LABEL $label$35
	$20 = $7
	
.LABEL $label$34
	*($17) = $7
	CALL $173($20)
	
.LABEL $label$33
	$17 = *($9)
	if ( ($17 == 0) ){ goto $label$38 }
	$20 = *($11)
	if ( ((int_32)$20 == (int_32)$17) ){ goto $label$40 }
	
.LOOP $label$41:
	$20 = ($20 + [-24])
	$8 = *($20)
	*($20) = [0]
	if ( ($8 == 0) ){ goto $label$42 }
	$7 = *($8 + [12])
	if ( ($7 == 0) ){ goto $label$43 }
	*(($8 + [16])) = $7
	CALL $173($7)
	
.LABEL $label$43
	CALL $173($8)
	
.LABEL $label$42
	if ( ((int_32)$17 != (int_32)$20) ){ goto $label$41 }
	$20 = *($9)
	goto $label$39 
	
.LABEL $label$40
	$20 = $17
	
.LABEL $label$39
	*($11) = $17
	CALL $173($20)
	
.LABEL $label$38
	if ( $2 ){ goto $label$15 }
	$2 = [0]
	
.LABEL $label$14
	$2 = CALL $130($3, $2)
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$2 }
	if ( $19 ){ goto $label$6 }
	
.LABEL $label$7
	$20 = *($1)
	if ( ($20 & [1]) ){ goto $label$45 }
	$8 = uint_32($20 >> [1])
	$18 = ($1 + [1])
	goto $label$44 
	
.LABEL $label$45
	$8 = *(($1 + [4]))
	$18 = *($1 + [8])
	
.LABEL $label$44
	$20 = CALL strlen([1984])
	if ( ($20 == 0) ){ goto $label$6 }
	if ( ((int_32)$8 < (int_32)$20) ){ goto $label$4 }
	$17 = ($18 + $8)
	$7 = $18
	
.LOOP $label$46:
	$8 = (($8 - $20) + [1])
	if ( ($8 == 0) ){ goto $label$5 }
	$8 = CALL memchr($7, [97], $8)
	if ( ($8 == 0) ){ goto $label$5 }
	if ( (CALL memcmp($8, [1984], $20) == 0) ){ goto $label$47 }
	$7 = ($8 + [1])
	$8 = ($17 - $7)
	if ( ((int_32)$8 >= (int_32)$20) ){ goto $label$46 }
	goto $label$5 
	
.LABEL $label$47
	if ( ((int_32)$8 == (int_32)$17) ){ goto $label$5 }
	if ( ((int_32)($8 - $18) == (int_32)[-1]) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $131(($0 + [88]), $2)
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$2 }
	if ( $19 ){ goto $label$3 }
	
.LABEL $label$4
	$20 = *($1)
	if ( ($20 & [1]) ){ goto $label$49 }
	$8 = uint_32($20 >> [1])
	$17 = ($1 + [1])
	goto $label$48 
	
.LABEL $label$49
	$8 = *(($1 + [4]))
	$17 = *($1 + [8])
	
.LABEL $label$48
	$20 = CALL strlen([2000])
	if ( ($20 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 < (int_32)$20) ){ goto $label$2 }
	$2 = ($17 + $8)
	$7 = $17
	
.LOOP $label$50:
	$8 = (($8 - $20) + [1])
	if ( ($8 == 0) ){ goto $label$2 }
	$8 = CALL memchr($7, [103], $8)
	if ( ($8 == 0) ){ goto $label$2 }
	if ( (CALL memcmp($8, [2000], $20) == 0) ){ goto $label$51 }
	$7 = ($8 + [1])
	$8 = ($2 - $7)
	if ( ((int_32)$8 >= (int_32)$20) ){ goto $label$50 }
	goto $label$2 
	
.LABEL $label$51
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$2 }
	if ( ((int_32)($8 - $17) == (int_32)[-1]) ){ goto $label$2 }
	
.LABEL $label$3
	$20 = ($0 + [8])
	$8 = *(($0 + [36]))
	if ( ((int_32)$8 == (int_32)*(($0 + [32]))) ){ goto $label$53 }
	$8 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [56]) == (int_32)$20), [32])
	if ( $8 ){ goto $label$52 }
	goto $label$2 
	
.LABEL $label$53
	$8 = CALL db_find_i64(*($20), *(($0 + [16])), (int_64)7035924439720001536, (int_64)7035924439720001536)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	$8 = CALL $85($20, $8)
	CALL eosio_assert(((int_32)*($8 + [56]) == (int_32)$20), [32])
	
.LABEL $label$52
	CALL eosio_assert([1], [624])
	CALL eosio_assert([1], [672])
	$7 = CALL db_next_i64(*($8 + [60]), ($21 + [168]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$54 }
	CALL $85($20, $7)
	
.LABEL $label$54
	CALL $132($20, $8)
	
.LABEL $label$2
	*([0] + [4]) = ($21 + [208])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

void .FUNC $189 ()
{
	(unreachable)
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10832])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10640]
	$1 = (((int_32)$2 * (int_32)[12]) + [10640])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC _ZN9cryptopix16getParticipationEhRK6winnerRK6canvas (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	float_64 $22
	int_32 $23
	int_32 $24
	int_32 $25
	$25 = (*([0] + [4]) - [176])
	*([0] + [4]) = $25
	*($25 + [120]) = (int_64)-1
	*($25 + [128]) = [0]
	$11 = *($1)
	*($25 + [104]) = $11
	$13 = *($4)
	*($25 + [112]) = $13
	*(($25 + [132])) = [0]
	*((($25 + [104]) + [32])) = [0]
	*($25 + [140]) = [0]
	*((($25 + [64]) + [32])) = [0]
	*($25 + [72]) = $13
	*($25 + [64]) = $11
	*($25 + [80]) = (int_64)-1
	*($25 + [88]) = (int_64)0
	*($25 + [100]) = [0]
	$5 = [0]
	$9 = CALL db_find_i64($11, $13, (int_64)-4139046226129272832, *($3))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $62(($25 + [104]), $9)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($25 + [104])), [32])
	
.LABEL $label$1
	$12 = *($5 + [26])
	$6 = (((*($5 + [30]) + [1]) - $12) & [65535])
	$9 = *($5 + [28])
	$7 = ((int_32)(((*($5 + [32]) + [1]) - $9) & [65535]) * (int_32)$6)
	$23 = ($7 - *($3 + [36]))
	$22 = CALL floor((CASTING float_64)(uint_32 ((uint_32)$23 / (uint_32)$6)))
	*($25 + [56]) = [0]
	*($25 + [52]) = [0]
	$8 = (($25 + [48]) | [4])
	*($25 + [48]) = $8
	$12 = ($12 + ((uint_32)$23 % (uint_32)$6))
	$10 = ($9 + (CASTING uint_32)(float_64 $22))
	$22 = CALL floor((CASTING float_64)(int_32 ((uint_32)(((int_32)*($4 + [12]) * (int_32)($10 & [65535])) + ($12 & [65535])) / (uint_32)[50])))
	$11 = (CASTING uint_64)(uint_32 (CASTING uint_32)(float_64 $22))
	$9 = CALL $19(($25 + [64]), CALL $fimport$19(*($25 + [64]), *((($25 + [64]) + [8])), (int_64)4730947171533193216, $11))
	$13 = *($9)
	if ( ((int_64)$13 == (int_64)$11) ){ goto $label$2 }
	$12 = ($4 + [12])
	$10 = (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)((int_64)$13 * (int_64)50) / (uint_64)*($12)))))
	$12 = (CASTING uint_32)(uint_64 ((uint_64)((int_64)*($9) * (int_64)50) % (uint_64)*($12)))
	
.LABEL $label$2
	$23 = [-11]
	$14 = ($4 + [8])
	$15 = ($5 + [26])
	$16 = ($5 + [30])
	$17 = ($5 + [28])
	$18 = ($5 + [32])
	$21 = ($4 + [12])
	
.LOOP $label$7:
	if ( ((int_32)*($14) != (int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*($9 + [8]) / (uint_32)[86400]))))) ){ goto $label$8 }
	$20 = ($12 & [65535])
	if ( (($20 + [49]) <= *($15)) ){ goto $label$8 }
	$24 = *($16)
	if ( ($24 <= $20) ){ goto $label$8 }
	$20 = ($10 & [65535])
	if ( ((uint_32)*($17) > (uint_32)$20) ){ goto $label$8 }
	if ( ((uint_32)*($18) >= (uint_32)$20) ){ goto $label$4 }
	
.LABEL $label$8
	$20 = *($18)
	$10 = ($10 & [65535])
	if ( (((uint_32)$10 >= (uint_32)$20) & ((uint_32)($12 & [65535]) > (uint_32)*($16))) ){ goto $label$6 }
	if ( ((uint_32)$10 > (uint_32)$20) ){ goto $label$6 }
	$23 = ($23 + [1])
	if ( ($23 == 0) ){ goto $label$5 }
	CALL eosio_assert([1], [672])
	$12 = *($9 + [28])
	$9 = [0]
	$12 = CALL db_next_i64($12, ($25 + [8]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$9 }
	$9 = CALL $19(($25 + [64]), $12)
	
.LABEL $label$9
	$22 = CALL floor((CASTING float_64)(uint_64 ((uint_64)((int_64)*($9) * (int_64)50) / (uint_64)*($21))))
	$12 = ((uint_32)((CASTING uint_32)(uint_64 ((int_64)*($9) * (int_64)50)) & [65534]) % (uint_32)*($21))
	$10 = (CASTING uint_32)(float_64 $22)
	if ( $9 ){ goto $label$7 }
	*($0 + [4]) = [0]
	*($0) = *($3 + [32])
	goto $label$3 
	
.LABEL $label$6
	*($0 + [4]) = [0]
	*($0) = *($3 + [32])
	goto $label$3 
	
.LABEL $label$5
	$22 = CALL floor((CASTING float_64)(uint_64 ((uint_64)((int_64)*($9) * (int_64)50) / (uint_64)*(($4 + [12])))))
	*($0) = *($3 + [32])
	$9 = (CASTING uint_32)(float_64 ((float_64)(CASTING float_64)(int_32 $6) * (float_64)(float_64))($22 - (CASTING float_64)(uint_32 *(($5 + [28])))))
	*($0 + [4]) = ( ($7 - $9)) ? [0] : ((uint_32)$7 > (uint_32)$9) )
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 <= [2]) ){ goto $label$11 }
	$21 = ((uint_32)($12 & [65535]) % (uint_32)[50])
	$14 = ($9 + [12])
	$18 = ($5 + [30])
	$15 = ($5 + [26])
	$19 = ($25 + [56])
	$17 = [0]
	
.LOOP $label$12:
	$9 = ($12 & [65535])
	if ( ((uint_32)$9 > (uint_32)($24 & [65535])) ){ goto $label$13 }
	$11 = *((*($14) + ($21 << [4])))
	if ( (int_64)($11 == 0) ){ goto $label$14 }
	if ( ($9 <= (*($15) & [65535])) ){ goto $label$14 }
	$9 = *($25 + [52])
	if ( ($9 == 0) ){ goto $label$16 }
	$16 = $8
	$23 = $9
	
.LOOP $label$18:
	if ( (uint_64)(*($23 + [16]) <= $11) ){ goto $label$19 }
	$16 = $23
	$20 = *($23)
	$23 = $20
	if ( $20 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$23 = *($23 + [4])
	if ( $23 ){ goto $label$18 }
	
.LABEL $label$17
	if ( ((int_32)$16 == (int_32)$8) ){ goto $label$16 }
	if ( ((uint_64)$11 >= (uint_64)*($16 + [16])) ){ goto $label$15 }
	
.LABEL $label$16
	$16 = $8
	
.LABEL $label$15
	if ( ($9 == 0) ){ goto $label$24 }
	$23 = $8
	
.LOOP $label$25:
	$13 = *($9 + [16])
	if ( ((uint_64)$11 >= (uint_64)$13) ){ goto $label$27 }
	$20 = *($9)
	if ( $20 ){ goto $label$26 }
	goto $label$23 
	
.LABEL $label$27
	if ( ((uint_64)$13 >= (uint_64)$11) ){ goto $label$22 }
	$23 = ($9 + [4])
	$20 = *($9 + [4])
	if ( ($20 == 0) ){ goto $label$22 }
	$9 = $23
	
.LABEL $label$26
	$23 = $9
	$9 = $20
	goto $label$25 
	
.LABEL $label$24
	$9 = $8
	$23 = $8
	$20 = *($23)
	if ( $20 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$23
	$23 = $9
	
.LABEL $label$22
	$20 = *($23)
	if ( $20 ){ goto $label$20 }
	
.LABEL $label$21
	*(($20 = CALL $172([32]))) = (int_64)0
	*($20 + [8]) = $9
	*($23) = $20
	*($20 + [24]) = [0]
	*($20 + [16]) = $11
	$9 = $20
	$24 = *(*($25 + [48]))
	if ( ($24 == 0) ){ goto $label$28 }
	*($25 + [48]) = $24
	$9 = *($23)
	
.LABEL $label$28
	CALL $70(*($25 + [52]), $9)
	*($19) = (*($19) + [1])
	
.LABEL $label$20
	if ( ((int_32)$16 == (int_32)$8) ){ goto $label$30 }
	*(($9 = ($20 + [24]))) = (*($9) + [1])
	goto $label$29 
	
.LABEL $label$30
	*(($20 + [24])) = [1]
	$2 = ($2 + [-1])
	
.LABEL $label$29
	$17 = ($17 + [1])
	
.LABEL $label$14
	$12 = ($12 + [1])
	
.LABEL $label$13
	$21 = ($21 + [1])
	if ( ((uint_32)$21 > (uint_32)[49]) ){ goto $label$10 }
	if ( (($2 & [255]) <= [2]) ){ goto $label$10 }
	$24 = *($18)
	goto $label$12 
	
.LABEL $label$11
	$17 = [0]
	
.LABEL $label$10
	*($25 + [24]) = (int_64)-1
	*($25 + [8]) = *($1)
	*($25 + [16]) = ((int_64)*($5) | (int_64)((int_64)*($4) << (int_64)32))
	*($25 + [32]) = [0]
	*(($14 = ($25 + [36]))) = [0]
	*(($24 = (($25 + [8]) + [32]))) = [0]
	$16 = *($25 + [48])
	if ( ((int_32)$16 == (int_32)$8) ){ goto $label$32 }
	$15 = (($25 + [8]) + [24])
	$4 = (($25 + [144]) | [8])
	$18 = [0]
	$20 = [0]
	
.LOOP $label$33:
	$11 = *($16 + [16])
	if ( ((int_32)$20 == (int_32)$18) ){ goto $label$34 }
	$9 = ($20 + [-24])
	$21 = ([0] - $18)
	
.LOOP $label$35:
	if ( ((int_64)*(*($9)) == (int_64)$11) ){ goto $label$34 }
	$20 = $9
	$23 = ($9 + [-24])
	$9 = $23
	if ( ((int_32)($23 + $21) != (int_32)[-24]) ){ goto $label$35 }
	
.LABEL $label$34
	if ( ((int_32)$20 == (int_32)$18) ){ goto $label$43 }
	$9 = *(($20 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($25 + [8])), [32])
	$11 = *($1)
	if ( $9 ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$43
	$9 = CALL db_find_i64(*($25 + [8]), *((($25 + [8]) + [8])), (int_64)-4131108868577034240, $11)
	if ( ((int_32)$9 <= (int_32)[-1]) ){ goto $label$41 }
	$9 = CALL $43(($25 + [8]), $9)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($25 + [8])), [32])
	$11 = *($1)
	
.LABEL $label$42
	CALL eosio_assert([1], [160])
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($25 + [8])), [208])
	CALL eosio_assert(((int_64)*($25 + [8]) == (int_64)CALL $fimport$2()), [256])
	*($9 + [8]) = (*($9 + [8]) + *(($16 + [24])))
	$13 = *($9)
	CALL eosio_assert([1], [320])
	CALL eosio_assert([1], [384])
	CALL memcpy(($25 + [144]), $9, [8])
	CALL eosio_assert([1], [384])
	CALL memcpy($4, ($9 + [8]), [4])
	CALL db_update_i64(*($9 + [20]), $11, ($25 + [144]), [12])
	$9 = (($25 + [8]) + [16])
	if ( (uint_64)($13 <= *($9)) ){ goto $label$39 }
	*($9) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	$9 = *($16 + [4])
	if ( $9 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$41
	$11 = *($1)
	
.LABEL $label$40
	CALL eosio_assert(((int_64)*($25 + [8]) == (int_64)CALL $fimport$2()), [96])
	*(($9 = CALL $172([32])) + [16]) = ($25 + [8])
	*($9) = *(($16 + [16]))
	*($9 + [8]) = *($16 + [24])
	CALL eosio_assert([1], [384])
	CALL memcpy(($25 + [144]), $9, [8])
	CALL eosio_assert([1], [384])
	CALL memcpy($4, ($9 + [8]), [4])
	$13 = *($9)
	$20 = CALL db_store_i64(*((($25 + [8]) + [8])), (int_64)-4131108868577034240, $11, $13, ($25 + [144]), [12])
	*($9 + [20]) = $20
	$23 = (($25 + [8]) + [16])
	if ( (uint_64)($13 <= *($23)) ){ goto $label$44 }
	*($23) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	
.LABEL $label$44
	*($25 + [168]) = $9
	$11 = *($9)
	*($25 + [144]) = $11
	*($25 + [164]) = $20
	$23 = *($14)
	if ( ((uint_32)$23 >= (uint_32)*($24)) ){ goto $label$46 }
	*($23 + [8]) = $11
	*($23 + [16]) = $20
	*($25 + [168]) = [0]
	*($23) = $9
	*($14) = ($23 + [24])
	goto $label$45 
	
.LABEL $label$46
	CALL $71($15, ($25 + [168]), ($25 + [144]), ($25 + [164]))
	
.LABEL $label$45
	$9 = *($25 + [168])
	*($25 + [168]) = [0]
	if ( ($9 == 0) ){ goto $label$39 }
	CALL $173($9)
	
.LABEL $label$39
	$9 = *($16 + [4])
	if ( ($9 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	
.LOOP $label$47:
	$23 = $9
	$9 = *($23)
	if ( $9 ){ goto $label$47 }
	goto $label$36 
	
.LABEL $label$37
	$23 = *($16 + [8])
	if ( ((int_32)*($23) == (int_32)$16) ){ goto $label$36 }
	$20 = ($16 + [8])
	
.LOOP $label$48:
	$9 = *($20)
	$20 = ($9 + [8])
	$23 = *($9 + [8])
	if ( ((int_32)$9 != (int_32)*($23)) ){ goto $label$48 }
	
.LABEL $label$36
	if ( ((int_32)$23 == (int_32)$8) ){ goto $label$49 }
	$18 = *($15)
	$20 = *($14)
	$16 = $23
	goto $label$33 
	
.LABEL $label$49
	$20 = ($25 + [32])
	$23 = *($25 + [32])
	goto $label$31 
	
.LABEL $label$32
	$20 = ($25 + [32])
	$23 = [0]
	
.LABEL $label$31
	*($0) = (*($3 + [32]) + $17)
	$9 = (((int_32)(($10 & [65535]) - *(($5 + [28]))) * (int_32)$6) + (($12 & [65535]) - *(($5 + [26]))))
	*($0 + [4]) = ( ($7 - $9) ? [0] : ((uint_32)$7 > (uint_32)$9) )
	if ( ($23 == 0) ){ goto $label$3 }
	$12 = $23
	$9 = *((($25 + [8]) + [28]))
	if ( ((int_32)$9 == (int_32)$23) ){ goto $label$50 }
	
.LOOP $label$51:
	$9 = ($9 + [-24])
	$12 = *($9)
	*($9) = [0]
	if ( ($12 == 0) ){ goto $label$52 }
	CALL $173($12)
	
.LABEL $label$52
	if ( ((int_32)$23 != (int_32)$9) ){ goto $label$51 }
	$12 = *($20)
	
.LABEL $label$50
	*(($25 + [36])) = $23
	CALL $173($12)
	
.LABEL $label$3
	CALL $72(($25 + [48]), *($25 + [52]))
	$23 = *($25 + [88])
	if ( ($23 == 0) ){ goto $label$53 }
	$20 = ($25 + [92])
	$9 = *($20)
	if ( ((int_32)$9 == (int_32)$23) ){ goto $label$55 }
	
.LOOP $label$56:
	$9 = ($9 + [-24])
	$12 = *($9)
	*($9) = [0]
	if ( ($12 == 0) ){ goto $label$57 }
	$10 = *($12 + [12])
	if ( ($10 == 0) ){ goto $label$58 }
	*(($12 + [16])) = $10
	CALL $173($10)
	
.LABEL $label$58
	CALL $173($12)
	
.LABEL $label$57
	if ( ((int_32)$23 != (int_32)$9) ){ goto $label$56 }
	$9 = *(($25 + [88]))
	goto $label$54 
	
.LABEL $label$55
	$9 = $23
	
.LABEL $label$54
	*($20) = $23
	CALL $173($9)
	
.LABEL $label$53
	$10 = *($25 + [128])
	if ( ($10 == 0) ){ goto $label$59 }
	$23 = ($25 + [132])
	$9 = *($23)
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$61 }
	
.LOOP $label$62:
	$9 = ($9 + [-24])
	$12 = *($9)
	*($9) = [0]
	if ( ($12 == 0) ){ goto $label$63 }
	CALL $173($12)
	
.LABEL $label$63
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$62 }
	$9 = *(($25 + [128]))
	goto $label$60 
	
.LABEL $label$61
	$9 = $10
	
.LABEL $label$60
	*($23) = $10
	CALL $173($9)
	
.LABEL $label$59
	*([0] + [4]) = ($25 + [176])
}

int_32 .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC memory ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [400])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $172([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [432])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [432])
	CALL memcpy(($6 + [8]), ($7 + [8]), [4])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $71(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $173($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $42 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-2042605236735967232, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $58($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)-2042605236735967232, $5))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [32])
	
.LABEL $label$4
	*(($2 + [48])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $41 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [672])
	$6 = *($0 + [4])
	$7 = *(($6 + [52]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272831, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [52])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$2), [32])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $62($2, CALL $fimport$5(*($2), *($2 + [8]), (int_64)-4139046226129272832, $3))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$2), [32])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [52])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $40 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	$10 = *($0 + [16])
	if ( ($10 <= [102]) ){ goto $label$7 }
	*(($0 + [16])) = ($10 + [-102])
	$10 = *($0 + [4])
	$1 = *($10)
	$9 = ($10 + [4])
	*($0 + [4]) = $9
	$3 = *($0 + [12])
	$10 = *($0 + [8])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$5 }
	$4 = *($0)
	if ( ((uint_32)$9 <= (uint_32)$4) ){ goto $label$6 }
	$4 = (((int_32)(int_32(($9 - $4) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$3 = ($9 + $4)
	$5 = ($10 - $9)
	$10 = int_32($5 >> [2])
	if ( ($10 == 0) ){ goto $label$8 }
	CALL memmove($3, $9, $5)
	$9 = *(($0 + [4]))
	
.LABEL $label$8
	*(($0 + [4])) = ($9 + $4)
	$10 = ($3 + ($10 << [2]))
	*(($0 + [8])) = $10
	goto $label$5 
	
.LABEL $label$7
	$9 = *($0 + [12])
	$3 = ($9 - *($0))
	$10 = *($0 + [8])
	$1 = ($10 - *($0 + [4]))
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$10 }
	if ( ((int_32)$9 != (int_32)$10) ){ goto $label$9 }
	*($11 + [8]) = CALL $172([4080])
	CALL $77($0, ($11 + [8]))
	$10 = ($0 + [4])
	$9 = *($10)
	$4 = *($9)
	$9 = ($9 + [4])
	*($10) = $9
	$3 = *(($0 + [12]))
	$1 = ($0 + [8])
	$10 = *($1)
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$3 }
	$5 = *($0)
	if ( ((uint_32)$9 <= (uint_32)$5) ){ goto $label$4 }
	$5 = (((int_32)(int_32(($9 - $5) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$3 = ($9 + $5)
	$2 = ($10 - $9)
	$10 = int_32($2 >> [2])
	if ( ($10 == 0) ){ goto $label$11 }
	CALL memmove($3, $9, $2)
	$9 = *(($0 + [4]))
	
.LABEL $label$11
	*(($0 + [4])) = ($9 + $5)
	$10 = ($3 + ($10 << [2]))
	*(($0 + [8])) = $10
	goto $label$3 
	
.LABEL $label$10
	*(($11 + [24])) = ($0 + [12])
	*($11 + [20]) = [0]
	$10 = int_32($3 >> [1])
	$10 = ( $10 ? [1] : $10 )
	if ( ((uint_32)$10 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$9 = ($10 << [2])
	$10 = CALL $172($9)
	*((($11 + [8]) + [12])) = ($10 + $9)
	*($11 + [8]) = $10
	$10 = ($10 + $1)
	*($11 + [16]) = $10
	*($11 + [12]) = $10
	*($11 + [4]) = CALL $172([4080])
	CALL $78(($11 + [8]), ($11 + [4]))
	$3 = ($0 + [4])
	$9 = *($3)
	$4 = ($0 + [8])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($10 + [-4])
	CALL $79(($11 + [8]), $10)
	$9 = *($3)
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$13 }
	$10 = *(($0 + [8]))
	
.LABEL $label$12
	$1 = *($0)
	*($0) = *($11 + [8])
	*($3) = *($11 + [12])
	*($11 + [8]) = $1
	*($11 + [12]) = $9
	$3 = (($11 + [8]) + [8])
	$5 = *($3)
	*($3) = $10
	*($4) = $5
	$0 = ($0 + [12])
	$3 = *($0)
	$4 = (($11 + [8]) + [12])
	*($0) = *($4)
	*($4) = $3
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$14 }
	*(($11 + [16])) = ($10 + (((int_32)(($10 + [-4]) - $9) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$14
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $173($1)
	goto $label$1 
	
.LABEL $label$9
	*($11 + [8]) = CALL $172([4080])
	CALL $76($0, ($11 + [8]))
	goto $label$1 
	
.LABEL $label$6
	$10 = int_32(($3 - $4) >> [1])
	$10 = ( $10 ? [1] : $10 )
	if ( ((uint_32)$10 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$9 = ($10 << [2])
	$4 = CALL $172($9)
	$2 = ($4 + $9)
	$5 = ($4 + ($10 & [-4]))
	$10 = $5
	$7 = ($0 + [8])
	$3 = *($7)
	$8 = ($0 + [4])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$15 }
	$10 = $5
	
.LOOP $label$16:
	*($10) = *($9)
	$10 = ($10 + [4])
	$9 = ($9 + [4])
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$16 }
	
.LABEL $label$15
	*($8) = $5
	$9 = *($0)
	*($0) = $4
	*($7) = $10
	*(($0 + [12])) = $2
	if ( ($9 == 0) ){ goto $label$5 }
	CALL $173($9)
	$10 = *(($0 + [8]))
	
.LABEL $label$5
	*($10) = $1
	*(($10 = ($0 + [8]))) = (*($10) + [4])
	goto $label$1 
	
.LABEL $label$4
	$10 = int_32(($3 - $5) >> [1])
	$10 = ( $10 ? [1] : $10 )
	if ( ((uint_32)$10 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$9 = ($10 << [2])
	$5 = CALL $172($9)
	$8 = ($5 + $9)
	$2 = ($5 + ($10 & [-4]))
	$10 = $2
	$6 = ($0 + [8])
	$3 = *($6)
	$7 = ($0 + [4])
	$9 = *($7)
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$17 }
	$10 = $2
	
.LOOP $label$18:
	*($10) = *($9)
	$10 = ($10 + [4])
	$9 = ($9 + [4])
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$18 }
	
.LABEL $label$17
	*($7) = $2
	$9 = *($0)
	*($0) = $5
	*($6) = $10
	*(($0 + [12])) = $8
	if ( ($9 == 0) ){ goto $label$3 }
	CALL $173($9)
	$10 = *(($0 + [8]))
	
.LABEL $label$3
	*($10) = $4
	*($1) = (*($1) + [4])
	goto $label$1 
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [32])
	(unreachable)
}

void .FUNC $47 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [816])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [880])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $173($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $173($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $44($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [384])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [384])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $74(CALL $73($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [384])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [384])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [384])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $75(*($1), ($0 + [32]))
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $172($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $177($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $173($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $167 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$2 = *($1)
	$3 = CALL $168($7, ($1 + [8]))
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$1 = (*(*($0)) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	$4 = CALL $168(($7 + [16]), $3)
	CALL void $1((int_32 $2), (int_64 $4), (int_32 $0))
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$2 }
	$0 = *($4 + [4])
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	$6 = ([0] - $5)
	$0 = ($0 + [-12])
	
.LOOP $label$5:
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$6 }
	*(($0 + [4])) = $1
	CALL $173($1)
	
.LABEL $label$6
	$0 = ($0 + [-16])
	if ( ((int_32)($0 + $6) != (int_32)[-12]) ){ goto $label$5 }
	$0 = *($4)
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*(($4 + [4])) = $5
	CALL $173($0)
	
.LABEL $label$2
	$4 = *($3)
	if ( ($4 == 0) ){ goto $label$7 }
	$0 = *($3 + [4])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	$6 = ([0] - $4)
	$0 = ($0 + [-12])
	
.LOOP $label$10:
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$11 }
	*(($0 + [4])) = $1
	CALL $173($1)
	
.LABEL $label$11
	$0 = ($0 + [-16])
	if ( ((int_32)($0 + $6) != (int_32)[-12]) ){ goto $label$10 }
	$0 = *($3)
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*(($3 + [4])) = $4
	CALL $173($0)
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [448])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $169($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $173($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[3]), [432])
	CALL memcpy($4, *($5), [4])
	*($5) = (*($5) + [4])
	CALL $170($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [432])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [432])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[1]), [432])
	CALL memcpy($3, *($2 + [4]), [2])
	*($2 + [4]) = (*($2 + [4]) + [2])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[1]), [432])
	CALL memcpy($2, *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
}

void .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL $178($4, $1)
	$2 = *($1 + [12])
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $178(($4 + [16]), $4)
	CALL void $1((int_32 ($4 + [16])), (int_32 ($2 & [255])), (int_32 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $173(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $173(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

void .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$4 }
	$6 = [268435455]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$6 = int_32($2 >> [3])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $172(($6 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = (*($0) + [16])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $177($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [4]))
	$5 = ($2 + ($3 << [4]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $173($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10) = (int_64)0
	$7 = [0]
	*($10 + [8]) = [0]
	$4 = *($1 + [16])
	$3 = *($1 + [8])
	$2 = *($1)
	$8 = (*(($1 + [24])) - *($1 + [20]))
	$5 = int_32($8 >> [4])
	if ( ($5 == 0) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$8 = CALL $172($8)
	*(($10 + [8])) = ($8 + ($5 << [4]))
	*($10) = $8
	*($10 + [4]) = $8
	$7 = *(($1 + [20]))
	$1 = (*(($1 + [24])) - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($8, $7, $1)
	$7 = ($8 + $1)
	*($10 + [4]) = $7
	goto $label$4 
	
.LABEL $label$6
	$8 = [0]
	$9 = [0]
	$6 = [0]
	goto $label$3 
	
.LABEL $label$5
	$7 = $8
	
.LABEL $label$4
	$9 = $8
	$6 = $8
	
.LABEL $label$3
	$1 = *($0 + [4])
	$0 = *($1 + [4])
	$5 = (*(*($0)) + int_32($0 >> [1]))
	$1 = *($1)
	if ( (($0 & [1]) == 0) ){ goto $label$7 }
	$1 = *((*($5) + $1))
	
.LABEL $label$7
	*($10 + [24]) = [0]
	*($10 + [16]) = (int_64)0
	$0 = ($7 - $6)
	$6 = int_32($0 >> [4])
	if ( ($6 == 0) ){ goto $label$8 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$1 }
	$0 = CALL $172($0)
	*(($10 + [24])) = ($0 + ($6 << [4]))
	*($10 + [16]) = $0
	*($10 + [20]) = $0
	$7 = ($7 - $9)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($0, $8, $7)
	*($10 + [20]) = ($0 + $7)
	
.LABEL $label$8
	CALL void $5((int_32 $2), (int_64 $3), (int_64 $4), (int_32 ($10 + [16])), (int_32 $1))
	$1 = *($10 + [16])
	if ( ($1 == 0) ){ goto $label$9 }
	*($10 + [20]) = $1
	CALL $173($1)
	
.LABEL $label$9
	$1 = *($10)
	if ( ($1 == 0) ){ goto $label$10 }
	*($10 + [4]) = $1
	CALL $173($1)
	
.LABEL $label$10
	*([0] + [4]) = ($10 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $177($10)
	
.LABEL $label$1
	CALL $177(($10 + [16]))
	(unreachable)
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [448])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $163($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [432])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[3]), [432])
	CALL memcpy(($7 + [8]), *($4), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*([0] + [4]) - [64])
	*([0] + [4]) = $2
	*(($4 = $2) + [44]) = $0
	*($4 + [32]) = *($1)
	*($4 + [36]) = *($1 + [4])
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$4 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($2 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($4 + [24])) = (int_64)0
	*($4 + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = (int_64)0
	*($4 + [48]) = $1
	$2 = ($1 + $0)
	*($4 + [56]) = $2
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [432])
	CALL memcpy($4, $1, [8])
	$3 = ($1 + [8])
	CALL eosio_assert(((uint_32)($2 - $3) > (uint_32)[7]), [432])
	CALL memcpy(($4 + [8]), $3, [8])
	$3 = ($1 + [16])
	CALL eosio_assert(((uint_32)($2 - $3) > (uint_32)[3]), [432])
	CALL memcpy(($4 + [16]), $3, [4])
	*($4 + [52]) = ($1 + [20])
	$2 = ($4 + [20])
	CALL $161(($4 + [48]), $2)
	if ( ($0 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	*($4 + [52]) = ($4 + [32])
	*($4 + [48]) = ($4 + [44])
	CALL $162(($4 + [48]), $4)
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$6 }
	*(($4 + [24])) = $1
	CALL $173($1)
	
.LABEL $label$6
	*([0] + [4]) = ($4 + [64])
	return [1]
}

void .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$6 = int_32(($7 - $4) >> [4])
	$5 = ($6 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$4 }
	$7 = [268435455]
	$8 = ($8 - $4)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$7 = int_32($8 >> [3])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$5 }
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$8 = CALL $172(($7 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$8 = ($0 + [4])
	
.LOOP $label$8:
	*($7) = (int_64)0
	*(($7 + [8])) = (int_64)0
	$7 = (*($8) + [16])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $177($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$2 = ($8 + ($7 << [4]))
	$8 = ($8 + ($6 << [4]))
	$7 = $8
	
.LOOP $label$9:
	*($7) = (int_64)0
	*(($7 + [8])) = (int_64)0
	$7 = ($7 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$11 }
	$3 = ([0] - $1)
	$1 = ($4 + [-16])
	
.LOOP $label$12:
	*(($4 = ($8 + [-12]))) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [4])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [8]))
	$4 = ($1 + [12])
	*($5) = *($4)
	*(($8 + [-16])) = *($1)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-16])
	$1 = ($1 + [-16])
	if ( ((int_32)($1 + $3) != (int_32)[-16]) ){ goto $label$12 }
	$1 = *(($0 + [4]))
	$4 = *($0)
	goto $label$10 
	
.LABEL $label$11
	$4 = $1
	
.LABEL $label$10
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$13 }
	$8 = ([0] - $4)
	$1 = ($1 + [-12])
	
.LOOP $label$14:
	$7 = *($1)
	if ( ($7 == 0) ){ goto $label$15 }
	*(($1 + [4])) = $7
	CALL $173($7)
	
.LABEL $label$15
	$1 = ($1 + [-16])
	if ( ((int_32)($1 + $8) != (int_32)[-12]) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ($4 == 0) ){ goto $label$1 }
	CALL $173($4)
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	$9 = (*($1 + [4]) - *($1))
	$10 = int_32($9 >> [4])
	if ( ($10 == 0) ){ goto $label$3 }
	if ( ((uint_32)$10 >= (uint_32)[268435456]) ){ goto $label$1 }
	$9 = CALL $172($9)
	*(($6 = ($0 + [4]))) = $9
	*(($0 + [8])) = ($9 + ($10 << [4]))
	*($0) = $9
	$2 = *(($1 + [4]))
	$10 = *($1)
	if ( ((int_32)$10 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	*($9 + [4]) = [0]
	*(($1 = ($9 + [8]))) = (int_64)0
	*($9) = *($10)
	$7 = ($10 + [4])
	$8 = ($10 + [8])
	$5 = (*($8) - *($7))
	$4 = int_32($5 >> [2])
	if ( ($4 == 0) ){ goto $label$5 }
	$3 = ($9 + [4])
	if ( ((uint_32)$4 >= (uint_32)[1073741824]) ){ goto $label$2 }
	$5 = CALL $172($5)
	*($3) = $5
	*(($9 + [12])) = ($5 + ($4 << [2]))
	*($1) = $5
	$4 = *($7)
	$9 = (*($8) - $4)
	if ( ((int_32)$9 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $4, $9)
	*($1) = (*($1) + $9)
	
.LABEL $label$5
	$9 = (*($6) + [16])
	*($6) = $9
	$10 = ($10 + [16])
	if ( ((int_32)$2 != (int_32)$10) ){ goto $label$4 }
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	CALL $177($3)
	
.LABEL $label$1
	CALL $177($0)
	(unreachable)
	return (unreachable)
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $172(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $173($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [400])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $172([56])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [704])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [496])
	*($4 + [40]) = $0
	CALL $60(($8 + [32]), $4)
	*($4 + [48]) = [-1]
	*($4 + [44]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [44])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $61($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $173($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [816])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [880])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $173($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $173($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
	$7 = *(($1 + [48]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-2042605236735967232, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [400])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $172([56])) + [32]) = $0
	CALL $68(($8 + [32]), $6)
	*($6 + [40]) = [-1]
	*($6 + [36]) = $1
	*($6 + [44]) = [-1]
	*($6 + [48]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [36])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $69(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $173($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)-2507766120631500800, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $50($0, $3)
	if ( ($1 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = [0]
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [624])
	CALL eosio_assert($2, [672])
	$2 = CALL db_next_i64(*($3 + [36]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $50($0, $2)
	
.LABEL $label$3
	CALL $66($0, $3)
	$1 = ($1 + [-1])
	if ( ($4 == 0) ){ goto $label$1 }
	$3 = $4
	if ( ($1 & [255]) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return ($1 & [255])
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-4139046226129272830, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $62($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)-4139046226129272832, $5))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [32])
	
.LABEL $label$4
	*(($2 + [56])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $53 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [672])
	$6 = *($0 + [4])
	$7 = *(($6 + [56]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272830, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [56])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$2), [32])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $62($2, CALL $fimport$5(*($2), *($2 + [8]), (int_64)-4139046226129272832, $3))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$2), [32])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [56])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [816])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [880])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $173($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $173($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $65(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]))
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)-4139046226129272832, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $62($0, $3)
	if ( ($1 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = [0]
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [624])
	CALL eosio_assert($2, [672])
	$2 = CALL db_next_i64(*($3 + [44]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $62($0, $2)
	
.LABEL $label$3
	CALL $54($0, $3)
	$1 = ($1 + [-1])
	if ( ($4 == 0) ){ goto $label$1 }
	$3 = $4
	if ( ($1 & [255]) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return ($1 & [255])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)-2042605236735967232, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $58($0, $3)
	if ( ($1 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = [0]
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [624])
	CALL eosio_assert($2, [672])
	$2 = CALL db_next_i64(*($3 + [44]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $58($0, $2)
	
.LABEL $label$3
	CALL $59($0, $3)
	$1 = ($1 + [-1])
	if ( ($4 == 0) ){ goto $label$1 }
	$3 = $4
	if ( ($1 & [255]) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return ($1 & [255])
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [816])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [880])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $173($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $173($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
	$7 = *(($1 + [24]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730947158474227712, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [28]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730947158474227713, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $173 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [432])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [432])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $153 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [704])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [496])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [432])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [432])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [432])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($5 = $3) + [44]) = $0
	*($5 + [32]) = *($1)
	*($5 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($5 + [24])) = [0]
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [56]) = ($1 + $0)
	*($5 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [432])
	CALL memcpy(($5 + [8]), $1, [8])
	*($5 + [52]) = ($1 + [8])
	CALL $166(($5 + [48]), (($5 + [8]) + [8]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($5 + [52]) = ($5 + [32])
	*($5 + [48]) = ($5 + [44])
	CALL $167(($5 + [48]), ($5 + [8]))
	$2 = *($5 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	$4 = ($5 + [20])
	$1 = *($4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$7 }
	$3 = ([0] - $2)
	$1 = ($1 + [-12])
	
.LOOP $label$8:
	$0 = *($1)
	if ( ($0 == 0) ){ goto $label$9 }
	*(($1 + [4])) = $0
	CALL $173($0)
	
.LABEL $label$9
	$1 = ($1 + [-16])
	if ( ((int_32)($1 + $3) != (int_32)[-12]) ){ goto $label$8 }
	$1 = *(($5 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$1 = $2
	
.LABEL $label$6
	*($4) = $2
	CALL $173($1)
	
.LABEL $label$5
	*([0] + [4]) = ($5 + [64])
	return [1]
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [64])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [16]) = (int_64)0
	*($8 + [8]) = (int_64)0
	*($8 + [28]) = $6
	*($8 + [24]) = $6
	*($8 + [32]) = ($6 + $1)
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [432])
	CALL memcpy(($8 + [8]), *($8 + [28]), [8])
	*($8 + [28]) = (*($8 + [28]) + [8])
	*($8 + [40]) = ($8 + [24])
	*($8 + [52]) = ($8 + [18])
	$5 = (($8 + [8]) + [8])
	*($8 + [48]) = $5
	*($8 + [56]) = ($8 + [20])
	*($8 + [60]) = ($8 + [22])
	CALL $165(($8 + [48]), ($8 + [40]))
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	*($8 + [48]) = $4
	*($8) = $4
	CALL void $1((int_32 $3), (int_64 $8), (int_32 $7))
	*([0] + [4]) = ($8 + [64])
	return [1]
}

int_32 .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[1]), [432])
	CALL memcpy(($5 + [8]), $3, [2])
	CALL eosio_assert(((int_32)($1 & [-2]) != (int_32)[2]), [432])
	CALL memcpy((($5 + [8]) | [2]), ($3 + [2]), [2])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *($5 + [10])
	$6 = *($5 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 ($6 & [65535])), (int_32 ($3 & [65535])), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $89(($5 + [32]), $5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($5 + [16]) = (int_64)0
	$1 = [0]
	*($5 + [24]) = [0]
	$6 = (*($5 + [4]) - *($5))
	$3 = int_32($6 >> [4])
	if ( ($3 == 0) ){ goto $label$7 }
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$6 }
	$1 = CALL $172($6)
	*(($5 + [24])) = ($1 + ($3 << [4]))
	*($5 + [16]) = $1
	*($5 + [20]) = $1
	$6 = *($5)
	$3 = (*($5 + [4]) - $6)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($1, $6, $3)
	$1 = (*($5 + [20]) + $3)
	*($5 + [20]) = $1
	
.LABEL $label$7
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$8 }
	$4 = *((*($3) + $4))
	
.LABEL $label$8
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = [0]
	$1 = ($1 - *($5 + [16]))
	$2 = int_32($1 >> [4])
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$5 }
	$1 = CALL $172($1)
	*(($5 + [40])) = ($1 + ($2 << [4]))
	*($5 + [32]) = $1
	*($5 + [36]) = $1
	$6 = *($5 + [16])
	$2 = (*($5 + [20]) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	*($5 + [36]) = ($1 + $2)
	
.LABEL $label$9
	CALL void $3((int_32 ($5 + [32])), (int_32 $4))
	$1 = *($5 + [32])
	if ( ($1 == 0) ){ goto $label$10 }
	*($5 + [36]) = $1
	CALL $173($1)
	
.LABEL $label$10
	$1 = *($5 + [16])
	if ( ($1 == 0) ){ goto $label$11 }
	*($5 + [20]) = $1
	CALL $173($1)
	
.LABEL $label$11
	$1 = *($5)
	if ( ($1 == 0) ){ goto $label$12 }
	*($5 + [4]) = $1
	CALL $173($1)
	
.LABEL $label$12
	*([0] + [4]) = ($5 + [48])
	return [1]
	
.LABEL $label$6
	CALL $177(($5 + [16]))
	
.LABEL $label$5
	CALL $177(($5 + [32]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [432])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [48])
	*([0] + [4]) = $3
	*(($2 = $3) + [28]) = $0
	*($2 + [16]) = *($1)
	*($2 + [20]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*($2 + [8]) = [0]
	*($2) = (int_64)0
	*($2 + [12]) = [0]
	*($2 + [36]) = $1
	*($2 + [32]) = $1
	*($2 + [40]) = ($1 + $0)
	CALL $145(($2 + [32]), $2)
	CALL eosio_assert(((int_32)*($2 + [40]) != (int_32)*($2 + [36])), [432])
	CALL memcpy(($2 + [12]), *($2 + [36]), [1])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [36]) = ($2 + [16])
	*($2 + [32]) = ($2 + [28])
	CALL $164(($2 + [32]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$5 }
	CALL $173(*(($2 + [8])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [48])
	return [1]
}

int_32 .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [432])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [432])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [1])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 ($4 & [255])), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_64 .FUNC floor (float_64 $0)
{
	int_64 $1
	int_32 $2
	float_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	if ( ((float_64)$0 == (float_64)(float_64)0) ){ goto $label$1 }
	$1 = (CASTING int_64)(float_64 $0)
	$2 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)) & [2047]
	if ( ((uint_32)$2) > (uint_32)[1074]) ){ goto $label$1 }
	$4 = ((int_64)$1 < (int_64)0)
	$3 = (float_64))(((float_64)( (float_64)4503599627370496 ? (float_64)-4503599627370496 : $4 ) + (float_64)((float_64)( (float_64)-4503599627370496 ? (float_64)4503599627370496 : $4 ) + (float_64)$0)) - $0)
	if ( ((uint_32)$2 > (uint_32)[1022]) ){ goto $label$2 }
	*($5 + [8]) = $3
	return (CASTING float_64)(int_32 (CASTING uint_32)(uint_64 (int_64)$1 >> (int_64)63)))
	
.LABEL $label$2
	$0 = ((float_64)$3 + (float_64)$0)
	if ( (((float_64)$3 <= (float_64)(float_64)0) | ((float_64)$3 != (float_64)$3)) ){ goto $label$1 }
	$0 = ((float_64)$0 + (float_64)(float_64)-1)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $172(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $177($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $173($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $173($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = *($0)
	$5 = *($6 + [4])
	$7 = *($5 + [48])
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$2 }
	$7 = *($6)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272832, $8, *($5))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($7)
	
.LABEL $label$1
	$6 = *($0)
	$5 = *($6 + [4])
	$7 = *(($5 + [52]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$4 }
	$7 = *($6)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272831, $8, *($5))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($7)
	
.LABEL $label$3
	$6 = *($0)
	$5 = *($6 + [4])
	$7 = *(($5 + [56]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$6 }
	$7 = *($6)
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272830, $8, *($5))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($7)
	
.LABEL $label$5
	$7 = *($0)
	$6 = *($7 + [4])
	$0 = *(($6 + [60]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$8 }
	$0 = *($7)
	$0 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-4139046226129272829, $8, *($6))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx128_remove($0)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $172(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $177($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $173($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $173($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = *($0)
	$4 = *($5 + [4])
	$6 = *($4 + [40])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = *($5)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-2507766120631500800, $7, *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($6)
	
.LABEL $label$1
	$5 = *($0)
	$4 = *($5 + [4])
	$6 = *(($4 + [44]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$4 }
	$6 = *($5)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-2507766120631500799, $7, *($4))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($6)
	
.LABEL $label$3
	$6 = *($0)
	$5 = *($6 + [4])
	$0 = *(($5 + [48]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$6 }
	$0 = *($6)
	$0 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-2507766120631500798, $7, *($5))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx128_remove($0)
	
.LABEL $label$5
	*([0] + [4]) = ($7 + [16])
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [816])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [880])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $173($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $173($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
	*($9 + [4]) = $1
	*($9) = $0
	*($9 + [8]) = $9
	CALL $67(($9 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]))
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $172(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $177($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $173($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $173($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [432])
	CALL memcpy(($1 + [8]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [432])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [432])
	CALL memcpy(($1 + [36]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [432])
	CALL memcpy(($1 + [24]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [26]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [28]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [30]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [32]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

int_32 .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [400])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $172([64])) + [40]) = $0
	CALL $63(($8 + [32]), $6)
	*($6 + [48]) = [-1]
	*($6 + [44]) = $1
	*($6 + [52]) = [-1]
	*($6 + [56]) = [-1]
	*($6 + [60]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [44])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $64(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $173($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC _ZeqRK11checksum256S1_ (int_32 $0, int_32 _ZeqRK11checksum256S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [448])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $92($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [432])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [432])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $172(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $177($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [44])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [48])) = $6
	CALL $173($6)
	
.LABEL $label$11
	$6 = *($1 + [32])
	if ( ($6 == 0) ){ goto $label$12 }
	*(($1 + [36])) = $6
	CALL $173($6)
	
.LABEL $label$12
	CALL $173($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $173($2)
	
.LABEL $label$13
	(unreachable)
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [432])
	CALL memcpy(($3 + [14]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [24]) = ((int_32)*($3 + [14]) != (int_32)[0])
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [432])
	CALL memcpy(($3 + [15]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($1 + [25]) = ((int_32)*($3 + [15]) != (int_32)[0])
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [26]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [28]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = CALL $90(CALL $89($0, ($1 + [32])), ($1 + [44]))
	*([0] + [4]) = ($3 + [16])
	return $0
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	*(($0 + [28])) = *(($1 + [28]))
	*(($0 + [24])) = *(($1 + [24]))
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
	*($0 + [32]) = [0]
	*(($0 + [36])) = [0]
	*(($0 + [40])) = [0]
	$3 = (*(($1 + [36])) - *($1 + [32]))
	$2 = int_32($3 >> [4])
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$2 }
	$3 = CALL $172($3)
	*(($0 + [32])) = $3
	*(($0 + [40])) = ($3 + ($2 << [4]))
	*(($2 = ($0 + [36]))) = $3
	$4 = *(($1 + [32]))
	$5 = (*(($1 + [36])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $4, $5)
	*($2) = (*($2) + $5)
	
.LABEL $label$3
	*($0 + [44 align=4]) = (int_64)0
	*(($0 + [52])) = [0]
	$3 = (*(($1 + [48])) - *($1 + [44]))
	$2 = int_32($3 >> [3])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	$3 = CALL $172($3)
	*(($0 + [44])) = $3
	*(($0 + [52])) = ($3 + ($2 << [3]))
	*(($2 = ($0 + [48]))) = $3
	$5 = *(($1 + [44]))
	$1 = (*(($1 + [48])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $5, $1)
	*($2) = (*($2) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $177(($0 + [32]))
	
.LABEL $label$1
	CALL $177(($0 + [44]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [400])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $172([72])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [704])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [496])
	*($4 + [32 align=4]) = (int_64)0
	*($4 + [40 align=4]) = (int_64)0
	*($4 + [48 align=4]) = (int_64)0
	*($4 + [56]) = $0
	CALL $87(($8 + [32]), $4)
	*($4 + [60]) = $1
	*($8 + [24]) = $4
	*($8 + [16]) = (int_64)7035924439720001536
	$6 = *($4 + [60])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = (int_64)7035924439720001536
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $88($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = *($5 + [44])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($5 + [48])) = $6
	CALL $173($6)
	
.LABEL $label$15
	$6 = *($5 + [32])
	if ( ($6 == 0) ){ goto $label$16 }
	*(($5 + [36])) = $6
	CALL $173($6)
	
.LABEL $label$16
	CALL $173($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [2]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [2])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$6 }
	$6 = int_32($7 >> [1])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $172(($6 << [2]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = [0]
	$6 = ($6 + [4])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [2]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $177($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [2]))
	$2 = ($7 + ($4 << [2]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [4])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [2]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $173($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [448])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [2])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $84($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [2]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	$2 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*($2) - $7) > (uint_32)[3]), [432])
	CALL memcpy($4, *($5), [4])
	$7 = (*($5) + [4])
	*($5) = $7
	$4 = ($4 + [4])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $83($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [432])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [432])
	CALL memcpy(($1 + [12]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [432])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $172(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $177($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [32])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [36])) = $6
	CALL $173($6)
	
.LABEL $label$11
	CALL $173($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $173($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	*($1) = *(*(*($0 + [4])))
	$2 = *($0)
	*($1 + [8]) = (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000))))
	CALL eosio_assert([1], [704])
	$6 = (int_64)5462096
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [496])
	*(($1 + [24])) = (int_64)1398296580
	*($1 + [16]) = (int_64)0
	$5 = [32]
	CALL $25(($1 + [32]), [988], [996])
	$3 = *($1 + [32])
	$7 = *(($1 + [36]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [2]))
	
.LOOP $label$6:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$7 }
	$5 = (($4 & [-4]) + $5)
	
.LABEL $label$7
	if ( ($5 <= [513]) ){ goto $label$9 }
	$7 = CALL malloc($5)
	goto $label$8 
	
.LABEL $label$9
	$7 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$8
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $5)
	CALL $26($8, $1)
	$6 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($2 + [8]), (int_64)3607749778735104000, *(*($0 + [8])), $6, $7, $5)
	if ( ($5 <= [513]) ){ goto $label$10 }
	CALL free($7)
	
.LABEL $label$10
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC $149 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [116])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$6 }
	*(($5 + [36])) = $2
	CALL $173($2)
	
.LABEL $label$6
	CALL $173($5)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [112]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $173($3)
	
.LABEL $label$1
	$2 = *(($0 + [72]))
	if ( ($2 == 0) ){ goto $label$7 }
	$1 = ($0 + [76])
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$11 }
	CALL $173($5)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [72]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $2
	
.LABEL $label$8
	*($1) = $2
	CALL $173($3)
	
.LABEL $label$7
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [36])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$16 }
	$2 = *($3 + [44])
	if ( ($2 == 0) ){ goto $label$17 }
	*(($3 + [48])) = $2
	CALL $173($2)
	
.LABEL $label$17
	$2 = *($3 + [32])
	if ( ($2 == 0) ){ goto $label$18 }
	*(($3 + [36])) = $2
	CALL $173($2)
	
.LABEL $label$18
	CALL $173($3)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$15 }
	$3 = *(($0 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $173($3)
	
.LABEL $label$12
	return $0
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [400])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2336]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2352]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [2368])
	
.LABEL $label$7
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [544]
	$7 = (int_64)0
	
.LOOP $label$14:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$15 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$3 = ($3 + [165])
	goto $label$16 
	
.LABEL $label$17
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$15
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$14 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$18 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [560]
	$7 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$24 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$3 = ($3 + [165])
	goto $label$22 
	
.LABEL $label$24
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$20
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$19 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$18 }
	*(($9 + [288])) = $0
	*(($9 + [296])) = (int_64)-1
	*(($9 + [304])) = (int_64)0
	*(($9 + [312])) = [0]
	*($9 + [280]) = $0
	*($9 + [272]) = $0
	*($9 + [320]) = $0
	*(($9 + [328])) = $0
	*(($9 + [336])) = (int_64)-1
	*(($9 + [344])) = [0]
	*(($9 + [348])) = [0]
	*(($9 + [352])) = [0]
	*(($9 + [356])) = [0]
	*($9 + [360]) = $0
	*(($9 + [368])) = $0
	*(($9 + [376])) = (int_64)-1
	*(($9 + [384])) = [0]
	*(($9 + [388])) = [0]
	*(($9 + [392])) = [0]
	CALL _ZN9cryptopix7depositEv(($9 + [272]))
	CALL $149(($9 + [272]))
	
.LABEL $label$18
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$27 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [560]
	$7 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$33 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$3 = ($3 + [165])
	goto $label$31 
	
.LABEL $label$33
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$29
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$28 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$26 }
	
.LABEL $label$27
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2432]
	$7 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$39 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$3 = ($3 + [165])
	goto $label$37 
	
.LABEL $label$39
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$35
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$34 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$40 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [560]
	$7 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$46 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$3 = ($3 + [165])
	goto $label$44 
	
.LABEL $label$46
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$42
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$41 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$26 }
	
.LABEL $label$40
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2336]
	$7 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$52 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$3 = ($3 + [165])
	goto $label$50 
	
.LABEL $label$52
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$48
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$47 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$25 }
	
.LABEL $label$26
	*(($9 + [288])) = $0
	*(($9 + [296])) = (int_64)-1
	*(($9 + [304])) = (int_64)0
	*(($9 + [312])) = [0]
	*($9 + [280]) = $0
	*($9 + [272]) = $0
	*($9 + [320]) = $0
	*(($9 + [328])) = $0
	*(($9 + [336])) = (int_64)-1
	*(($9 + [344])) = [0]
	*(($9 + [348])) = [0]
	*(($9 + [352])) = [0]
	*(($9 + [356])) = [0]
	*($9 + [360]) = $0
	*(($9 + [368])) = $0
	*(($9 + [376])) = (int_64)-1
	*(($9 + [384])) = [0]
	*(($9 + [388])) = [0]
	*(($9 + [392])) = [0]
	if ( ((int_64)$2 <= (int_64)-2039333636196532225) ){ goto $label$69 }
	if ( ((int_64)$2 <= (int_64)5031766155849629695) ){ goto $label$68 }
	if ( ((int_64)$2 <= (int_64)5031766165814771711) ){ goto $label$66 }
	if ( ((int_64)$2 == (int_64)5031766165814771712) ){ goto $label$62 }
	if ( ((int_64)$2 == (int_64)8421045207927095296) ){ goto $label$61 }
	if ( ((int_64)$2 != (int_64)5606348217378668544) ){ goto $label$53 }
	*($9 + [268]) = [0]
	*($9 + [264]) = [1]
	*($9) = *($9 + [264])
	CALL $150(($9 + [272]), $9)
	goto $label$53 
	
.LABEL $label$69
	if ( ((int_64)$2 > (int_64)-3667961267609495553) ){ goto $label$67 }
	if ( ((int_64)$2 > (int_64)-4417253564964622337) ){ goto $label$65 }
	if ( ((int_64)$2 == (int_64)-5915332861279993856) ){ goto $label$60 }
	if ( ((int_64)$2 != (int_64)-5002568748128407552) ){ goto $label$53 }
	*($9 + [164]) = [0]
	*($9 + [160]) = [2]
	*($9 + [104 align=4]) = *($9 + [160])
	CALL $154(($9 + [272]), ($9 + [104]))
	goto $label$53 
	
.LABEL $label$68
	if ( ((int_64)$2 > (int_64)4923678631115993087) ){ goto $label$64 }
	if ( ((int_64)$2 == (int_64)-2039333636196532224) ){ goto $label$59 }
	if ( ((int_64)$2 != (int_64)4851652658014093312) ){ goto $label$53 }
	*($9 + [172]) = [0]
	*($9 + [168]) = [3]
	*($9 + [96 align=4]) = *($9 + [168])
	CALL $155(($9 + [272]), ($9 + [96]))
	goto $label$53 
	
.LABEL $label$67
	if ( ((int_64)$2 > (int_64)-2507752476057272321) ){ goto $label$63 }
	if ( ((int_64)$2 == (int_64)-3667961267609495552) ){ goto $label$58 }
	if ( ((int_64)$2 != (int_64)-3667961261224225792) ){ goto $label$53 }
	*($9 + [204]) = [0]
	*($9 + [200]) = [4]
	*($9 + [64 align=4]) = *($9 + [200])
	CALL $155(($9 + [272]), ($9 + [64]))
	goto $label$53 
	
.LABEL $label$66
	if ( ((int_64)$2 == (int_64)5031766155849629696) ){ goto $label$57 }
	if ( ((int_64)$2 != (int_64)5031766156896030080) ){ goto $label$53 }
	*($9 + [220]) = [0]
	*($9 + [216]) = [5]
	*($9 + [48 align=4]) = *($9 + [216])
	CALL $155(($9 + [272]), ($9 + [48]))
	goto $label$53 
	
.LABEL $label$65
	if ( ((int_64)$2 == (int_64)-4417253564964622336) ){ goto $label$56 }
	if ( ((int_64)$2 != (int_64)-4417057682011324416) ){ goto $label$53 }
	*($9 + [188]) = [0]
	*($9 + [184]) = [6]
	*($9 + [80 align=4]) = *($9 + [184])
	CALL $157(($9 + [272]), ($9 + [80]))
	goto $label$53 
	
.LABEL $label$64
	if ( ((int_64)$2 == (int_64)4923678631115993088) ){ goto $label$55 }
	if ( ((int_64)$2 != (int_64)4923678922967265280) ){ goto $label$53 }
	*($9 + [180]) = [0]
	*($9 + [176]) = [7]
	*($9 + [88 align=4]) = *($9 + [176])
	CALL $158(($9 + [272]), ($9 + [88]))
	goto $label$53 
	
.LABEL $label$63
	if ( ((int_64)$2 == (int_64)-2507752476057272320) ){ goto $label$54 }
	if ( ((int_64)$2 != (int_64)-2042800910918926336) ){ goto $label$53 }
	*($9 + [140]) = [0]
	*($9 + [136]) = [8]
	*($9 + [128 align=4]) = *($9 + [136])
	CALL $160(($9 + [272]), ($9 + [128]))
	goto $label$53 
	
.LABEL $label$62
	*($9 + [260]) = [0]
	*($9 + [256]) = [9]
	*($9 + [8 align=4]) = *($9 + [256])
	CALL $151(($9 + [272]), ($9 + [8]))
	goto $label$53 
	
.LABEL $label$61
	*($9 + [228]) = [0]
	*($9 + [224]) = [10]
	*($9 + [40 align=4]) = *($9 + [224])
	CALL $155(($9 + [272]), ($9 + [40]))
	goto $label$53 
	
.LABEL $label$60
	*($9 + [156]) = [0]
	*($9 + [152]) = [11]
	*($9 + [112 align=4]) = *($9 + [152])
	CALL $155(($9 + [272]), ($9 + [112]))
	goto $label$53 
	
.LABEL $label$59
	*($9 + [244]) = [0]
	*($9 + [240]) = [12]
	*($9 + [24 align=4]) = *($9 + [240])
	CALL $153(($9 + [272]), ($9 + [24]))
	goto $label$53 
	
.LABEL $label$58
	*($9 + [196]) = [0]
	*($9 + [192]) = [13]
	*($9 + [72 align=4]) = *($9 + [192])
	CALL $155(($9 + [272]), ($9 + [72]))
	goto $label$53 
	
.LABEL $label$57
	*($9 + [236]) = [0]
	*($9 + [232]) = [14]
	*($9 + [32 align=4]) = *($9 + [232])
	CALL $154(($9 + [272]), ($9 + [32]))
	goto $label$53 
	
.LABEL $label$56
	*($9 + [212]) = [0]
	*($9 + [208]) = [15]
	*($9 + [56 align=4]) = *($9 + [208])
	CALL $156(($9 + [272]), ($9 + [56]))
	goto $label$53 
	
.LABEL $label$55
	*($9 + [148]) = [0]
	*($9 + [144]) = [16]
	*($9 + [120 align=4]) = *($9 + [144])
	CALL $159(($9 + [272]), ($9 + [120]))
	goto $label$53 
	
.LABEL $label$54
	*($9 + [252]) = [0]
	*($9 + [248]) = [17]
	*($9 + [16 align=4]) = *($9 + [248])
	CALL $152(($9 + [272]), ($9 + [16]))
	
.LABEL $label$53
	CALL $149(($9 + [272]))
	
.LABEL $label$25
	*([0] + [4]) = ($9 + [400])
}

int_32 .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $146($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $175($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $172($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $175($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $173($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $174($7)
	return (unreachable)
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [432])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $145(*($1), *($0 + [12]))
}

int_32 .FUNC _ZN9cryptopix7isInSubEttRK10submission (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = [0]
	if ( (($1 + [49]) <= *($3 + [26])) ){ goto $label$1 }
	if ( (*($3 + [30]) <= $1) ){ goto $label$1 }
	if ( ((uint_32)*($3 + [28]) > (uint_32)$2) ){ goto $label$1 }
	$4 = ((uint_32)*($3 + [32]) >= (uint_32)$2)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [448])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $44($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [432])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$8 = (*([0] + [4]) - [16])
	$9 = $8
	*([0] + [4]) = $8
	$6 = *($0 + [4])
	*($1) = *(*($6))
	$2 = *($0)
	*($1 + [8]) = (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000))))
	$6 = *($6 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [24])) = *(($6 + [8]))
	$6 = [32]
	CALL $25(($1 + [32]), [2328], [2336])
	$4 = *($1 + [32])
	$3 = *(($1 + [36]))
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [2]))
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$6 = (($5 & [-4]) + $6)
	
.LABEL $label$2
	if ( ($6 <= [513]) ){ goto $label$4 }
	$8 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$8 = ($8 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$3
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = ($8 + $6)
	CALL $26($9, $1)
	$7 = *($1)
	*($1 + [48]) = CALL db_store_i64(*($2 + [8]), (int_64)3607749778735104000, *(*($0 + [8])), $7, $8, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$6 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $140 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *([0] + [4])
	$3 = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	CALL $143($0, $2, $1)
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = $3
}

void .FUNC $143 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [704])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [496])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $144(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $142 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [208])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [256])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))), [2016])
	$8 = ((int_64)*($1 + [16]) + (int_64)*($3))
	*($1 + [16]) = $8
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [2064])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [2096])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [320])
	$6 = *($1 + [32])
	$5 = *(($1 + [36]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [2]))
	$3 = [32]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-4]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $26($10, $1)
	CALL db_update_i64(*($1 + [48]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $72($0, *($1))
	CALL $72($0, *($1 + [4]))
	CALL $173($1)
	
.LABEL $label$1
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [384])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [384])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [384])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $172(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $177($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $173($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $173($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0 + [12])
	$9 = *($0 + [8])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$2 }
	$2 = *($0)
	$8 = *($0 + [4])
	if ( ((uint_32)$8 <= (uint_32)$2) ){ goto $label$3 }
	$2 = (((int_32)(int_32(($8 - $2) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$4 = ($8 + $2)
	$5 = ($9 - $8)
	$9 = int_32($5 >> [2])
	if ( ($9 == 0) ){ goto $label$4 }
	CALL memmove($4, $8, $5)
	$8 = *(($0 + [4]))
	
.LABEL $label$4
	*(($0 + [4])) = ($8 + $2)
	$9 = ($4 + ($9 << [2]))
	*(($0 + [8])) = $9
	goto $label$2 
	
.LABEL $label$3
	$9 = int_32(($4 - $2) >> [1])
	$9 = ( $9 ? [1] : $9 )
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$8 = ($9 << [2])
	$2 = CALL $172($8)
	$3 = ($2 + $8)
	$5 = ($2 + ($9 & [-4]))
	$9 = $5
	$6 = ($0 + [8])
	$4 = *($6)
	$7 = ($0 + [4])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$5 }
	$9 = $5
	
.LOOP $label$6:
	*($9) = *($8)
	$9 = ($9 + [4])
	$8 = ($8 + [4])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$6 }
	
.LABEL $label$5
	*($7) = $5
	$8 = *($0)
	*($0) = $2
	*($6) = $9
	*(($0 + [12])) = $3
	if ( ($8 == 0) ){ goto $label$2 }
	CALL $173($8)
	$9 = *(($0 + [8]))
	
.LABEL $label$2
	*($9) = *($1)
	*(($9 = ($0 + [8]))) = (*($9) + [4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$8 = *($0 + [4])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$9 = $8
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [12])
	$7 = *($0 + [8])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$4 }
	$4 = (((int_32)(int_32(($9 - $7) >> [2]) + [1]) / (int_32)[2]) << [2])
	$9 = ($7 + $4)
	$2 = ($7 - $8)
	$3 = int_32($2 >> [2])
	if ( ($3 == 0) ){ goto $label$5 }
	$9 = ($9 - ($3 << [2]))
	CALL memmove($9, $8, $2)
	$7 = *(($0 + [8]))
	
.LABEL $label$5
	*(($0 + [4])) = $9
	*(($0 + [8])) = ($7 + $4)
	goto $label$2 
	
.LABEL $label$4
	$8 = int_32(($9 - $4) >> [1])
	$8 = ( $8 ? [1] : $8 )
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = ($8 << [2])
	$2 = CALL $172($7)
	$3 = ($2 + $7)
	$9 = ($2 + (($8 + [3]) & [-4]))
	$8 = $9
	$5 = ($0 + [8])
	$4 = *($5)
	$6 = ($0 + [4])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$8 = $9
	
.LOOP $label$7:
	*($8) = *($7)
	$8 = ($8 + [4])
	$7 = ($7 + [4])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$6
	*($6) = $9
	$7 = *($0)
	*($0) = $2
	*($5) = $8
	*(($0 + [12])) = $3
	if ( ($7 == 0) ){ goto $label$2 }
	CALL $173($7)
	$9 = *(($0 + [4]))
	
.LABEL $label$2
	*(($9 + [-4])) = *($1)
	*(($8 = ($0 + [4]))) = (*($8) + [-4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [384])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [384])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [384])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [384])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0 + [12])
	$9 = *($0 + [8])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$2 }
	$2 = *($0)
	$8 = *($0 + [4])
	if ( ((uint_32)$8 <= (uint_32)$2) ){ goto $label$3 }
	$2 = (((int_32)(int_32(($8 - $2) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$4 = ($8 + $2)
	$5 = ($9 - $8)
	$9 = int_32($5 >> [2])
	if ( ($9 == 0) ){ goto $label$4 }
	CALL memmove($4, $8, $5)
	$8 = *(($0 + [4]))
	
.LABEL $label$4
	*(($0 + [4])) = ($8 + $2)
	$9 = ($4 + ($9 << [2]))
	*(($0 + [8])) = $9
	goto $label$2 
	
.LABEL $label$3
	$9 = int_32(($4 - $2) >> [1])
	$9 = ( $9 ? [1] : $9 )
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$8 = ($9 << [2])
	$2 = CALL $172($8)
	$3 = ($2 + $8)
	$5 = ($2 + ($9 & [-4]))
	$9 = $5
	$6 = ($0 + [8])
	$4 = *($6)
	$7 = ($0 + [4])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$5 }
	$9 = $5
	
.LOOP $label$6:
	*($9) = *($8)
	$9 = ($9 + [4])
	$8 = ($8 + [4])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$6 }
	
.LABEL $label$5
	*($7) = $5
	$8 = *($0)
	*($0) = $2
	*($6) = $9
	*(($0 + [12])) = $3
	if ( ($8 == 0) ){ goto $label$2 }
	CALL $173($8)
	$9 = *(($0 + [8]))
	
.LABEL $label$2
	*($9) = *($1)
	*(($9 = ($0 + [8]))) = (*($9) + [4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$8 = *($0 + [4])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$9 = $8
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [12])
	$7 = *($0 + [8])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$4 }
	$4 = (((int_32)(int_32(($9 - $7) >> [2]) + [1]) / (int_32)[2]) << [2])
	$9 = ($7 + $4)
	$2 = ($7 - $8)
	$3 = int_32($2 >> [2])
	if ( ($3 == 0) ){ goto $label$5 }
	$9 = ($9 - ($3 << [2]))
	CALL memmove($9, $8, $2)
	$7 = *(($0 + [8]))
	
.LABEL $label$5
	*(($0 + [4])) = $9
	*(($0 + [8])) = ($7 + $4)
	goto $label$2 
	
.LABEL $label$4
	$8 = int_32(($9 - $4) >> [1])
	$8 = ( $8 ? [1] : $8 )
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = ($8 << [2])
	$2 = CALL $172($7)
	$3 = ($2 + $7)
	$9 = ($2 + (($8 + [3]) & [-4]))
	$8 = $9
	$5 = ($0 + [8])
	$4 = *($5)
	$6 = ($0 + [4])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$8 = $9
	
.LOOP $label$7:
	*($8) = *($7)
	$8 = ($8 + [4])
	$7 = ($7 + [4])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$6
	*($6) = $9
	$7 = *($0)
	*($0) = $2
	*($5) = $8
	*(($0 + [12])) = $3
	if ( ($7 == 0) ){ goto $label$2 }
	CALL $173($7)
	$9 = *(($0 + [4]))
	
.LABEL $label$2
	*(($9 + [-4])) = *($1)
	*(($8 = ($0 + [4]))) = (*($8) + [-4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $98 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [44]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1424])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-4139046226129272832)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1360])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1360])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $62(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC _ZN9cryptopix7votesubEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [336])
	*([0] + [4]) = $10
	*($10 + [184]) = $1
	CALL $14(($10 + [128]), ($0 + [8]))
	CALL eosio_assert(((int_32)*($10 + [152]) ^ (int_32)[1]), [16])
	$3 = *(($0 + [112]))
	$5 = *(($0 + [116]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$1 }
	$9 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($9)) == (int_64)$1) ){ goto $label$1 }
	$5 = $9
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [88])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$4 }
	$9 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [44]) == (int_32)$6), [32])
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	$5 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $15($6, $5)
	CALL eosio_assert(((int_32)*($9 + [44]) == (int_32)$6), [32])
	
.LABEL $label$3
	*($10 + [124]) = [0]
	if ( ((int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*($9 + [8]) / (uint_32)[86400])))) != (int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400]))))) ){ goto $label$8 }
	$9 = *(*($9 + [32]) + [4])
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*(($9 + [8])) / (uint_32)[86400])))) != (int_32)((CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400])))) + [-1])) ){ goto $label$6 }
	$9 = *(*($9 + [32]))
	
.LABEL $label$7
	*($10 + [124]) = $9
	goto $label$5 
	
.LABEL $label$6
	$9 = *($10 + [124])
	
.LABEL $label$5
	$6 = [0]
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [1472])
	CALL require_auth(*($10 + [184]))
	CALL _ZN9cryptopix14checkGameStateEhb($0, [10], [1])
	*($10 + [120]) = ($0 + [48])
	*($10 + [80]) = ((int_64)(CASTING uint_64)(uint_32 (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400]))))) + (int_64)-1)
	CALL $100(($10 + [256]), ($10 + [120]), ($10 + [80]))
	$9 = *($10 + [260])
	if ( ($9 == 0) ){ goto $label$10 }
	if ( ((int_64)*($10 + [80]) != (int_64)*($9 + [8])) ){ goto $label$10 }
	if ( ($9 == 0) ){ goto $label$11 }
	$5 = ((int_32)*($9 + [10]) == (int_32)[1])
	$6 = $9
	goto $label$9 
	
.LABEL $label$11
	$6 = [0]
	
.LABEL $label$10
	$5 = [0]
	
.LABEL $label$9
	CALL eosio_assert($5, [1520])
	*($10 + [96]) = (int_64)-1
	$9 = [0]
	*($10 + [104]) = [0]
	$1 = *($0)
	*($10 + [80]) = $1
	$7 = *($6)
	*($10 + [88]) = $7
	*(($10 + [108])) = [0]
	*(($10 + [112])) = [0]
	*($10 + [116]) = [0]
	$5 = CALL db_find_i64($1, $7, (int_64)-4139046226129272832, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$13 }
	$9 = CALL $62(($10 + [80]), $5)
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)($10 + [80])), [32])
	*($10 + [76]) = $9
	*($10 + [72]) = ($10 + [80])
	$5 = (($10 + [72]) | [4])
	$9 = (*($9 + [24]) == 0)
	goto $label$12 
	
.LABEL $label$13
	*($10 + [76]) = [0]
	*($10 + [72]) = ($10 + [80])
	$5 = (($10 + [72]) | [4])
	
.LABEL $label$12
	CALL eosio_assert($9, [1552])
	*($10 + [48]) = (int_64)-1
	$9 = [0]
	*($10 + [56]) = [0]
	*($10 + [32]) = *($0)
	*($10 + [40]) = *($6)
	*(($10 + [60])) = [0]
	*(($10 + [64])) = [0]
	*(($10 + [70])) = [0]
	*($10 + [68]) = [0]
	*($10 + [24]) = ($10 + [32])
	CALL $101(($10 + [16]), ($10 + [24]), ($10 + [184]))
	$6 = *($10 + [20])
	if ( ($6 == 0) ){ goto $label$14 }
	$9 = [0]
	
.LOOP $label$15:
	if ( ((int_64)*($6 + [16]) != (int_64)*($10 + [184])) ){ goto $label$14 }
	$9 = ($9 + [1])
	CALL $102(($10 + [16]))
	$6 = *($10 + [20])
	if ( $6 ){ goto $label$15 }
	
.LABEL $label$14
	*($10 + [8]) = ($10 + [32])
	*($10 + [256]) = *($10 + [184])
	*($10 + [264]) = *(*($5))
	CALL $103(($10 + [192]), ($10 + [8]), ($10 + [256]))
	$6 = *($10 + [196])
	if ( ($6 == 0) ){ goto $label$19 }
	if ( ((int_64)(((int_64)((int_64)*($10 + [256]) ^ (int_64)*($6 + [16])) | (int_64)((int_64)*($10 + [264]) ^ (int_64)*($6 + [8]))) == 0) == 0) ){ goto $label$19 }
	if ( ($6 == 0) ){ goto $label$19 }
	*($10 + [256]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)32) | (int_64)*($10 + [192]))
	CALL eosio_assert([1], [624])
	CALL $104(($10 + [256]))
	CALL $66(*($10 + [8]), $6)
	$1 = *($0)
	$9 = *($10 + [76])
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [160])
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)($10 + [80])), [208])
	CALL eosio_assert(((int_64)*($10 + [80]) == (int_64)CALL $fimport$2()), [256])
	$6 = ($9 + [8])
	$2 = *($6)
	*($10 + [256]) = $2
	$7 = *(($9 + [24]))
	*($10 + [272]) = $7
	$5 = ($9 + [16])
	$8 = *($5)
	*($10 + [264]) = ((int_64)$8 ^ (int_64)-1)
	*(($10 + [296])) = $2
	*($10 + [288]) = $7
	$2 = *($9)
	*($5) = (int_64))($8 - *($10 + [124]))
	CALL eosio_assert([1], [320])
	*($10 + [248]) = (($10 + [192]) + [33])
	*($10 + [244]) = ($10 + [192])
	*($10 + [240]) = ($10 + [192])
	CALL $39(($10 + [240]), $9)
	CALL db_update_i64(*($9 + [44]), $1, ($10 + [192]), [33])
	$5 = (($10 + [80]) + [16])
	if ( (uint_64)($2 <= *($5)) ){ goto $label$20 }
	*($5) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$20
	$5 = (($10 + [256]) | [8])
	*($10 + [320]) = *($6)
	if ( (CALL memcmp(($10 + [256]), ($10 + [320]), [8]) == 0) ){ goto $label$21 }
	$0 = ($9 + [48])
	$6 = *($0)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$22 }
	$6 = CALL db_idx64_find_primary(*($10 + [80]), *(($10 + [88])), (int_64)-4139046226129272832, ($10 + [304]), $2)
	*($0) = $6
	
.LABEL $label$22
	CALL db_idx64_update($6, $1, ($10 + [320]))
	
.LABEL $label$21
	$6 = (($10 + [256]) + [16])
	*($10 + [320]) = ((int_64)*(($9 + [16])) ^ (int_64)-1)
	if ( (CALL memcmp($5, ($10 + [320]), [8]) == 0) ){ goto $label$23 }
	$0 = ($9 + [52])
	$5 = *($0)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$24 }
	$5 = CALL db_idx64_find_primary(*($10 + [80]), *(($10 + [88])), (int_64)-4139046226129272831, ($10 + [304]), $2)
	*($0) = $5
	
.LABEL $label$24
	CALL db_idx64_update($5, $1, ($10 + [320]))
	
.LABEL $label$23
	$5 = ($10 + [288])
	$0 = ($9 + [24])
	*($10 + [320]) = *($0)
	if ( (CALL memcmp($6, ($10 + [320]), [8]) == 0) ){ goto $label$25 }
	$4 = ($9 + [56])
	$6 = *($4)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$26 }
	$6 = CALL db_idx64_find_primary(*($10 + [80]), *(($10 + [88])), (int_64)-4139046226129272830, ($10 + [304]), $2)
	*($4) = $6
	
.LABEL $label$26
	CALL db_idx64_update($6, $1, ($10 + [320]))
	
.LABEL $label$25
	*($10 + [328]) = *(($9 + [8]))
	*($10 + [320]) = *($0)
	if ( (CALL memcmp($5, ($10 + [320]), [16]) == 0) ){ goto $label$18 }
	$6 = ($9 + [60])
	$9 = *($6)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$27 }
	$9 = CALL db_idx128_find_primary(*($10 + [80]), *(($10 + [88])), (int_64)-4139046226129272829, ($10 + [304]), $2)
	*($6) = $9
	
.LABEL $label$27
	CALL db_idx128_update($9, $1, ($10 + [320]))
	$5 = *($10 + [56])
	if ( $5 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	CALL eosio_assert(((int_32)$9 < (int_32)[5]), [1584])
	$1 = *($0)
	*($10 + [260]) = ($10 + [72])
	*($10 + [256]) = ($10 + [32])
	*($10 + [264]) = ($10 + [184])
	*($10 + [268]) = ($10 + [124])
	*($10 + [320]) = $1
	CALL eosio_assert(((int_64)*($10 + [32]) == (int_64)CALL $fimport$2()), [96])
	*($10 + [196]) = ($10 + [256])
	*($10 + [192]) = ($10 + [32])
	*($10 + [200]) = ($10 + [320])
	*(($9 = CALL $172([56])) + [32]) = ($10 + [32])
	CALL $105(($10 + [192]), $9)
	*($10 + [304]) = $9
	$1 = *($9)
	*($10 + [192]) = $1
	$5 = *($9 + [36])
	*($10 + [240]) = $5
	$4 = ($10 + [60])
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*(($10 + [64]))) ){ goto $label$29 }
	*($6 + [8]) = $1
	*($6 + [16]) = $5
	*($10 + [304]) = [0]
	*($6) = $9
	*($4) = ($6 + [24])
	goto $label$28 
	
.LABEL $label$29
	CALL $69(($10 + [56]), ($10 + [304]), ($10 + [192]), ($10 + [240]))
	
.LABEL $label$28
	$9 = *($10 + [304])
	*($10 + [304]) = [0]
	if ( ($9 == 0) ){ goto $label$30 }
	CALL $173($9)
	
.LABEL $label$30
	$1 = *($0)
	$9 = *($10 + [76])
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [160])
	CALL eosio_assert(((int_32)*($9 + [40]) == (int_32)($10 + [80])), [208])
	CALL eosio_assert(((int_64)*($10 + [80]) == (int_64)CALL $fimport$2()), [256])
	$6 = ($9 + [8])
	$2 = *($6)
	*($10 + [256]) = $2
	$7 = *(($9 + [24]))
	*($10 + [272]) = $7
	$5 = ($9 + [16])
	$8 = *($5)
	*($10 + [264]) = ((int_64)$8 ^ (int_64)-1)
	*(($10 + [296])) = $2
	*($10 + [288]) = $7
	$2 = *($9)
	*($5) = ((int_64)$8 + (int_64)*($10 + [124]))
	CALL eosio_assert([1], [320])
	*($10 + [248]) = (($10 + [192]) + [33])
	*($10 + [244]) = ($10 + [192])
	*($10 + [240]) = ($10 + [192])
	CALL $39(($10 + [240]), $9)
	CALL db_update_i64(*($9 + [44]), $1, ($10 + [192]), [33])
	$5 = (($10 + [80]) + [16])
	if ( (uint_64)($2 <= *($5)) ){ goto $label$31 }
	*($5) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$31
	$5 = (($10 + [256]) | [8])
	*($10 + [320]) = *($6)
	if ( (CALL memcmp(($10 + [256]), ($10 + [320]), [8]) == 0) ){ goto $label$32 }
	$0 = ($9 + [48])
	$6 = *($0)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$33 }
	$6 = CALL db_idx64_find_primary(*($10 + [80]), *(($10 + [88])), (int_64)-4139046226129272832, ($10 + [304]), $2)
	*($0) = $6
	
.LABEL $label$33
	CALL db_idx64_update($6, $1, ($10 + [320]))
	
.LABEL $label$32
	$6 = (($10 + [256]) + [16])
	*($10 + [320]) = ((int_64)*(($9 + [16])) ^ (int_64)-1)
	if ( (CALL memcmp($5, ($10 + [320]), [8]) == 0) ){ goto $label$34 }
	$0 = ($9 + [52])
	$5 = *($0)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$35 }
	$5 = CALL db_idx64_find_primary(*($10 + [80]), *(($10 + [88])), (int_64)-4139046226129272831, ($10 + [304]), $2)
	*($0) = $5
	
.LABEL $label$35
	CALL db_idx64_update($5, $1, ($10 + [320]))
	
.LABEL $label$34
	$5 = ($10 + [288])
	$0 = ($9 + [24])
	*($10 + [320]) = *($0)
	if ( (CALL memcmp($6, ($10 + [320]), [8]) == 0) ){ goto $label$36 }
	$4 = ($9 + [56])
	$6 = *($4)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$37 }
	$6 = CALL db_idx64_find_primary(*($10 + [80]), *(($10 + [88])), (int_64)-4139046226129272830, ($10 + [304]), $2)
	*($4) = $6
	
.LABEL $label$37
	CALL db_idx64_update($6, $1, ($10 + [320]))
	
.LABEL $label$36
	*($10 + [328]) = *(($9 + [8]))
	*($10 + [320]) = *($0)
	if ( (CALL memcmp($5, ($10 + [320]), [16]) == 0) ){ goto $label$18 }
	$6 = ($9 + [60])
	$9 = *($6)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$38 }
	$9 = CALL db_idx128_find_primary(*($10 + [80]), *(($10 + [88])), (int_64)-4139046226129272829, ($10 + [304]), $2)
	*($6) = $9
	
.LABEL $label$38
	CALL db_idx128_update($9, $1, ($10 + [320]))
	
.LABEL $label$18
	$5 = *($10 + [56])
	if ( ($5 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$0 = ($10 + [60])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$40 }
	
.LOOP $label$41:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$42 }
	CALL $173($6)
	
.LABEL $label$42
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$41 }
	$9 = *(($10 + [56]))
	goto $label$39 
	
.LABEL $label$40
	$9 = $5
	
.LABEL $label$39
	*($0) = $5
	CALL $173($9)
	
.LABEL $label$16
	$5 = *($10 + [104])
	if ( ($5 == 0) ){ goto $label$43 }
	$0 = ($10 + [108])
	$9 = *($0)
	if ( ((int_32)$9 == (int_32)$5) ){ goto $label$45 }
	
.LOOP $label$46:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$47 }
	CALL $173($6)
	
.LABEL $label$47
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$46 }
	$9 = *(($10 + [104]))
	goto $label$44 
	
.LABEL $label$45
	$9 = $5
	
.LABEL $label$44
	*($0) = $5
	CALL $173($9)
	
.LABEL $label$43
	$9 = *($10 + [172])
	if ( ($9 == 0) ){ goto $label$48 }
	*(($10 + [176])) = $9
	CALL $173($9)
	
.LABEL $label$48
	$9 = *($10 + [160])
	if ( ($9 == 0) ){ goto $label$49 }
	*(($10 + [164])) = $9
	CALL $173($9)
	
.LABEL $label$49
	*([0] + [4]) = ($10 + [336])
}

void .FUNC _ZN9cryptopix9createsubEy4area (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	float_64 $8
	float_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [272])
	*([0] + [4]) = $14
	*($14 + [120]) = $1
	CALL $14(($14 + [64]), ($0 + [8]))
	CALL eosio_assert(((int_32)*($14 + [88]) ^ (int_32)[1]), [16])
	$11 = *(($0 + [112]))
	$6 = *(($0 + [116]))
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$1 }
	$13 = ($6 + [-24])
	$3 = ([0] - $11)
	
.LOOP $label$2:
	if ( ((int_64)*(*($13)) == (int_64)$1) ){ goto $label$1 }
	$6 = $13
	$7 = ($13 + [-24])
	$13 = $7
	if ( ((int_32)($7 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$13 = ($0 + [88])
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$5 }
	$11 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [44]) == (int_32)$13), [32])
	if ( $11 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$7 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$11 = CALL $15($13, $7)
	CALL eosio_assert(((int_32)*($11 + [44]) == (int_32)$13), [32])
	goto $label$3 
	
.LABEL $label$4
	CALL _ZN9cryptopix13createAccountEy(($14 + [192]), $0, *($14 + [120]))
	$11 = *($14 + [196])
	
.LABEL $label$3
	$8 = (CASTING float_64)(uint_32 *($2 + [4]))
	$9 = (CASTING float_64)(uint_32 *($2))
	$7 = (CASTING uint_32)(float_64 CALL fmin($9, $8))
	*($14 + [62]) = $7
	$6 = (CASTING uint_32)(float_64 CALL fmax($9, $8))
	*($14 + [60]) = $6
	$8 = (CASTING float_64)(uint_32 *($2 + [6]))
	$9 = (CASTING float_64)(uint_32 *($2 + [2]))
	$3 = (CASTING uint_32)(float_64 CALL fmin($9, $8))
	*($14 + [58]) = $3
	$2 = (CASTING uint_32)(float_64 CALL fmax($9, $8))
	*($14 + [56]) = $2
	CALL eosio_assert(((int_32)((int_32)(($2 + [1]) - $3) * (int_32)(($6 + [1]) - $7)) > (int_32)[624]), [1040])
	$4 = (((($6 + [2]) - $7) + $2) - $3)
	$13 = [0]
	$12 = [0]
	if ( ((int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*($11 + [8]) / (uint_32)[86400])))) != (int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400]))))) ){ goto $label$6 }
	$12 = *(*($11 + [32]))
	
.LABEL $label$6
	CALL eosio_assert(((uint_32)$12 >= (uint_32)($4 & [65535])), [1072])
	$1 = *($14 + [120])
	CALL require_auth($1)
	CALL _ZN9cryptopix14checkGameStateEhb($0, [10], [1])
	*($14 + [48]) = ($0 + [48])
	*($14 + [8]) = (int_64)0
	CALL $18(($14 + [192]), ($14 + [48]), ($14 + [8]))
	$11 = *($14 + [196])
	if ( ($11 == 0) ){ goto $label$7 }
	$13 = ( $11 ? [0] : ((int_64)*($14 + [8]) == (int_64)*($11 + [10])) )
	
.LABEL $label$7
	CALL eosio_assert(($7 <= *($13 + [12])), [1136])
	CALL eosio_assert(($3 <= *($13 + [14])), [1184])
	CALL eosio_assert(($6 <= *($13 + [12])), [1232])
	CALL eosio_assert(($2 <= *($13 + [14])), [1264])
	*($14 + [24]) = (int_64)-1
	*($14 + [32]) = [0]
	*($14 + [8]) = *($0)
	*($14 + [16]) = *($13)
	*(($14 + [36])) = [0]
	*(($14 + [40])) = [0]
	*($14 + [44]) = [0]
	*($14) = ($14 + [8])
	*($14 + [200]) = $1
	*($14 + [192]) = (int_64)0
	CALL $95(($14 + [128]), $14, ($14 + [192]))
	$13 = *($14 + [132])
	if ( ($13 == 0) ){ goto $label$8 }
	if ( ((int_64)(((int_64)((int_64)*($14 + [192]) ^ (int_64)*($13 + [24])) | (int_64)((int_64)*($14 + [200]) ^ (int_64)*($13 + [8]))) == 0) == 0) ){ goto $label$8 }
	if ( ($13 == 0) ){ goto $label$8 }
	if ( ((int_64)*($13 + [16]) == (int_64)0) ){ goto $label$9 }
	$1 = *($0)
	CALL eosio_assert([1], [160])
	$7 = *($14)
	CALL eosio_assert(((int_32)*($13 + [40]) == (int_32)$7), [208])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$2()), [256])
	$6 = ($13 + [8])
	$5 = *($6)
	*($14 + [192]) = $5
	$3 = ($13 + [24])
	$10 = *($3)
	*($14 + [208]) = $10
	*($14 + [200]) = ((int_64)*(($13 + [16])) ^ (int_64)-1)
	*(($14 + [232])) = $5
	*($14 + [224]) = $10
	$5 = *($13)
	*($3) = [1]
	CALL eosio_assert([1], [320])
	*($14 + [184]) = (($14 + [128]) + [33])
	*($14 + [180]) = ($14 + [128])
	*($14 + [176]) = ($14 + [128])
	CALL $39(($14 + [176]), $13)
	CALL db_update_i64(*($13 + [44]), $1, ($14 + [128]), [33])
	if ( (uint_64)($5 <= *($7 + [16])) ){ goto $label$10 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$3 = (($14 + [192]) | [8])
	*($14 + [256]) = *($6)
	if ( (CALL memcmp(($14 + [192]), ($14 + [256]), [8]) == 0) ){ goto $label$11 }
	$2 = ($13 + [48])
	$6 = *($2)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$12 }
	$6 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272832, ($14 + [240]), $5)
	*($2) = $6
	
.LABEL $label$12
	CALL db_idx64_update($6, $1, ($14 + [256]))
	
.LABEL $label$11
	$6 = (($14 + [192]) + [16])
	*($14 + [256]) = ((int_64)*(($13 + [16])) ^ (int_64)-1)
	if ( (CALL memcmp($3, ($14 + [256]), [8]) == 0) ){ goto $label$13 }
	$2 = ($13 + [52])
	$3 = *($2)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$14 }
	$3 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272831, ($14 + [240]), $5)
	*($2) = $3
	
.LABEL $label$14
	CALL db_idx64_update($3, $1, ($14 + [256]))
	
.LABEL $label$13
	$3 = ($14 + [224])
	$2 = ($13 + [24])
	*($14 + [256]) = *($2)
	if ( (CALL memcmp($6, ($14 + [256]), [8]) == 0) ){ goto $label$15 }
	$11 = ($13 + [56])
	$6 = *($11)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$16 }
	$6 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272830, ($14 + [240]), $5)
	*($11) = $6
	
.LABEL $label$16
	CALL db_idx64_update($6, $1, ($14 + [256]))
	
.LABEL $label$15
	*($14 + [264]) = *(($13 + [8]))
	*($14 + [256]) = *($2)
	if ( (CALL memcmp($3, ($14 + [256]), [16]) == 0) ){ goto $label$8 }
	$6 = ($13 + [60])
	$13 = *($6)
	if ( ((int_32)$13 > (int_32)[-1]) ){ goto $label$17 }
	$13 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272829, ($14 + [240]), $5)
	*($6) = $13
	
.LABEL $label$17
	CALL db_idx128_update($13, $1, ($14 + [256]))
	goto $label$8 
	
.LABEL $label$9
	*($14 + [192]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)32) | (int_64)*($14 + [128]))
	CALL eosio_assert([1], [624])
	CALL $96(($14 + [192]))
	CALL $54(*($14), $13)
	
.LABEL $label$8
	$1 = *($0)
	*($14 + [196]) = ($14 + [120])
	*($14 + [192]) = ($14 + [8])
	*($14 + [200]) = ($14 + [62])
	*($14 + [204]) = ($14 + [58])
	*($14 + [208]) = ($14 + [60])
	*($14 + [212]) = ($14 + [56])
	*($14 + [256]) = $1
	CALL eosio_assert(((int_64)*($14 + [8]) == (int_64)CALL $fimport$2()), [96])
	*($14 + [132]) = ($14 + [192])
	*($14 + [128]) = ($14 + [8])
	*($14 + [136]) = ($14 + [256])
	*(($13 = CALL $172([64])) + [40]) = ($14 + [8])
	CALL $97(($14 + [128]), $13)
	*($14 + [240]) = $13
	$1 = *($13)
	*($14 + [128]) = $1
	$6 = *($13 + [44])
	*($14 + [176]) = $6
	$3 = ($14 + [36])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($14 + [40]))) ){ goto $label$19 }
	*($7 + [8]) = $1
	*($7 + [16]) = $6
	*($14 + [240]) = [0]
	*($7) = $13
	*($3) = ($7 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $64(($14 + [32]), ($14 + [240]), ($14 + [128]), ($14 + [176]))
	
.LABEL $label$18
	$13 = *($14 + [240])
	*($14 + [240]) = [0]
	if ( ($13 == 0) ){ goto $label$20 }
	CALL $173($13)
	
.LABEL $label$20
	$6 = *($14 + [32])
	if ( ($6 == 0) ){ goto $label$21 }
	$3 = ($14 + [36])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$6) ){ goto $label$23 }
	
.LOOP $label$24:
	$13 = ($13 + [-24])
	$7 = *($13)
	*($13) = [0]
	if ( ($7 == 0) ){ goto $label$25 }
	CALL $173($7)
	
.LABEL $label$25
	if ( ((int_32)$6 != (int_32)$13) ){ goto $label$24 }
	$13 = *(($14 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$13 = $6
	
.LABEL $label$22
	*($3) = $6
	CALL $173($13)
	
.LABEL $label$21
	$13 = *($14 + [108])
	if ( ($13 == 0) ){ goto $label$26 }
	*(($14 + [112])) = $13
	CALL $173($13)
	
.LABEL $label$26
	$13 = *($14 + [96])
	if ( ($13 == 0) ){ goto $label$27 }
	*(($14 + [100])) = $13
	CALL $173($13)
	
.LABEL $label$27
	*([0] + [4]) = ($14 + [272])
}

void .FUNC $95 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-4139046226129272829, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $62($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)-4139046226129272832, $5))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [32])
	
.LABEL $label$4
	*(($2 + [60])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC $96 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [672])
	$6 = *($0 + [4])
	$7 = *(($6 + [60]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-4139046226129272829, $9, *($6))
	*((*(($0 + [4])) + [60])) = $7
	
.LABEL $label$1
	*($9) = (int_64)0
	$1 = CALL db_idx128_next($7, $9)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9)
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$2), [32])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $62($2, CALL $fimport$5(*($2), *($2 + [8]), (int_64)-4139046226129272832, $3))
	CALL eosio_assert(((int_32)*($7 + [40]) == (int_32)$2), [32])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [60])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$6 = *($4 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$5 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-4139046226129272832, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	CALL $62($4, $5)
	*($9 + [20]) = [0]
	*($9 + [16]) = $4
	$6 = *(*(CALL $98(($9 + [16])) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [1296])
	*($1) = *(($4 + [16]))
	$4 = *($3 + [4])
	*($1 + [24]) = [0]
	$6 = *($4)
	*($1 + [16]) = (int_64)0
	*($1 + [8]) = $6
	*($1 + [26]) = *(*($3 + [8]))
	*($1 + [28]) = *(*($3 + [12]))
	*($1 + [30]) = *(*($3 + [16]))
	*($1 + [32]) = *(*($3 + [20]))
	$4 = $10
	$3 = ($4 + [-48])
	*([0] + [4]) = $3
	*($9 + [4]) = $3
	*($9) = $3
	*($9 + [8]) = ($4 + [-15])
	CALL $39($9, $1)
	$6 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($2 + [8]), (int_64)-4139046226129272832, *(*($0 + [8])), $6, $3, [33])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$3 = ($2 + [8])
	$6 = *($3)
	$0 = *(($0 + [8]))
	$7 = *($0)
	$8 = *($1)
	$2 = ($1 + [8])
	*($9 + [16]) = *($2)
	*($1 + [48]) = CALL db_idx64_store($6, (int_64)-4139046226129272832, $7, $8, ($9 + [16]))
	$6 = *($0)
	$7 = *($3)
	$8 = *($1)
	*($9 + [16]) = ((int_64)*(($1 + [16])) ^ (int_64)-1)
	*(($1 + [52])) = CALL db_idx64_store($7, (int_64)-4139046226129272831, $6, $8, ($9 + [16]))
	$6 = *($0)
	$7 = *($3)
	$8 = *($1)
	$4 = ($1 + [24])
	*($9 + [16]) = *($4)
	*(($1 + [56])) = CALL db_idx64_store($7, (int_64)-4139046226129272830, $6, $8, ($9 + [16]))
	$6 = *($0)
	$7 = *($3)
	$8 = *($1)
	*($9 + [24]) = *($2)
	*($9 + [16]) = *($4)
	*(($1 + [60])) = CALL db_idx128_store($7, (int_64)-4139046226129272829, $6, $8, ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [448])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [3])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $91($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [3]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $7) > (uint_32)[7]), [432])
	CALL memcpy($4, *($5), [8])
	$7 = (*($5) + [8])
	*($5) = $7
	$4 = ($4 + [8])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [3])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($7 >> [2])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $172(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $177($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [3]))
	$2 = ($7 + ($4 << [3]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [3]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $173($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $6) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$8 = *($0)
	$2 = int_32(($6 - $8) >> [4])
	$3 = ($2 + $1)
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$4 }
	$6 = [268435455]
	$7 = ($7 - $8)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$6 = int_32($7 >> [3])
	$6 = ( $3 ? $6 : ($6 <= $3) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$7 = CALL $172(($6 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$8 = ($0 + [4])
	
.LOOP $label$8:
	*($6 + [8]) = (int_64)1398362884
	*($6) = (int_64)0
	CALL eosio_assert([1], [704])
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$7 = [0]
	
.LABEL $label$9
	CALL eosio_assert($7, [496])
	$6 = (*($8) + [16])
	*($8) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $177($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$3 = ($7 + ($6 << [4]))
	$2 = ($7 + ($2 << [4]))
	$8 = $2
	
.LOOP $label$14:
	*($8 + [8]) = (int_64)1398362884
	*($8) = (int_64)0
	CALL eosio_assert([1], [704])
	$5 = (uint_64)*($8 + [8]) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$7 = [0]
	
.LABEL $label$15
	CALL eosio_assert($7, [496])
	$8 = ($8 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$14 }
	$6 = *($0)
	$4 = ($0 + [4])
	$7 = (*($4) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$20 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$20
	*($0) = $1
	*($4) = $8
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$1 }
	CALL $173($6)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_64 .FUNC _ZN9cryptopix8cooldownEN5eosio5assetE (int_32 $0, int_32 $1)
{
	float_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	CALL $14(($3 + [8]), ($0 + [8]))
	$2 = ((float_64)(CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) % (uint_32)[86400])) / (float_64)(float_64)86400)
	$2 = ((float_64)((float_64)(CASTING float_64)(int_64 *($1)) / (float_64)CALL fmax((CASTING float_64)(int_64 *($3 + [16])), (float_64)1)) * (float_64)((float_64)((float_64)((float_64)$2 * (float_64)((float_64)$2 * (float_64)(float_64)-0.5)) + (float_64)(float_64)1) * (float_64)(float_64)20))
	$1 = *($3 + [52])
	if ( ($1 == 0) ){ goto $label$1 }
	*(($3 + [56])) = $1
	CALL $173($1)
	
.LABEL $label$1
	$2 = ((float_64)(float_64)1 / (float_64)$2)
	$1 = *($3 + [40])
	if ( ($1 == 0) ){ goto $label$2 }
	*(($3 + [44])) = $1
	CALL $173($1)
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [64])
	return $2
}

void .FUNC _ZN9cryptopix10wincatchupEyymNSt3__16vectorI7supportNS0_9allocatorIS2_EEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [160])
	*([0] + [4]) = $13
	CALL require_auth(*($0))
	*((($13 + [40]) + [32])) = [0]
	*($13 + [48]) = ((int_64)((int_64)$2 & (int_64)4294967295) | (int_64)((int_64)$1 << (int_64)32))
	*($13 + [56]) = (int_64)-1
	*($13 + [64]) = (int_64)0
	*($13 + [40]) = *($0)
	CALL $128(($13 + [40]), [100])
	*(($13 + [32])) = [0]
	*($13 + [8]) = $1
	*($13 + [16]) = (int_64)-1
	*($13 + [24]) = (int_64)0
	$10 = *($0)
	*($13) = $10
	*($13 + [36]) = [0]
	$8 = [0]
	$9 = CALL db_find_i64($10, $1, (int_64)-2042605236735967232, $2)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $58($13, $9)
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$13), [32])
	
.LABEL $label$1
	$2 = *($0)
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [160])
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$13), [208])
	CALL eosio_assert(((int_64)*($13) == (int_64)CALL $fimport$2()), [256])
	*($8 + [36]) = [0]
	*($8 + [32]) = $3
	$3 = ($8 + [8])
	*($13 + [136]) = *($3)
	$1 = *($8)
	CALL eosio_assert([1], [320])
	*($13 + [128]) = (($13 + [80]) + [33])
	*($13 + [124]) = ($13 + [80])
	*($13 + [120]) = ($13 + [80])
	CALL $48(($13 + [120]), $8)
	CALL db_update_i64(*($8 + [44]), $2, ($13 + [80]), [33])
	$9 = ($13 + [16])
	if ( (uint_64)($1 <= *($9)) ){ goto $label$2 }
	*($9) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($13 + [152]) = *($3)
	if ( (CALL memcmp(($13 + [136]), ($13 + [152]), [8]) == 0) ){ goto $label$3 }
	$3 = ($8 + [48])
	$8 = *($3)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$4 }
	$8 = CALL db_idx64_find_primary(*($13), *(($13 + [8])), (int_64)-2042605236735967232, ($13 + [144]), $1)
	*($3) = $8
	
.LABEL $label$4
	CALL db_idx64_update($8, $2, ($13 + [152]))
	
.LABEL $label$3
	$5 = *($4 + [4])
	$3 = *($4)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$7 = (($13 + [40]) + [24])
	$6 = (($13 + [80]) | [8])
	$11 = (($13 + [40]) + [16])
	$12 = ($13 + [68])
	
.LOOP $label$6:
	$4 = *(($3 + [8]))
	$2 = *($0)
	$1 = *($3)
	CALL eosio_assert(((int_64)*($13 + [40]) == (int_64)CALL $fimport$2()), [96])
	*(($8 = CALL $172([32])) + [16]) = ($13 + [40])
	*($8 + [8]) = $4
	*($8) = $1
	CALL eosio_assert([1], [384])
	CALL memcpy(($13 + [80]), $8, [8])
	CALL eosio_assert([1], [384])
	CALL memcpy($6, ($8 + [8]), [4])
	$1 = *($8)
	$9 = CALL db_store_i64(*((($13 + [40]) + [8])), (int_64)-4131108868577034240, $2, $1, ($13 + [80]), [12])
	*($8 + [20]) = $9
	if ( (uint_64)($1 <= *($11)) ){ goto $label$7 }
	*($11) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($13 + [120]) = $8
	$1 = *($8)
	*($13 + [80]) = $1
	*($13 + [152]) = $9
	$4 = *($12)
	if ( ((uint_32)$4 >= (uint_32)*((($13 + [40]) + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $1
	*($4 + [16]) = $9
	*($13 + [120]) = [0]
	*($4) = $8
	*($12) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $71($7, ($13 + [120]), ($13 + [80]), ($13 + [152]))
	
.LABEL $label$8
	$8 = *($13 + [120])
	*($13 + [120]) = [0]
	if ( ($8 == 0) ){ goto $label$10 }
	CALL $173($8)
	
.LABEL $label$10
	$3 = ($3 + [16])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$5
	$4 = *($13 + [24])
	if ( ($4 == 0) ){ goto $label$11 }
	$9 = ($13 + [28])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$3 = *($8)
	*($8) = [0]
	if ( ($3 == 0) ){ goto $label$15 }
	CALL $173($3)
	
.LABEL $label$15
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($13 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $4
	
.LABEL $label$12
	*($9) = $4
	CALL $173($8)
	
.LABEL $label$11
	$4 = *($13 + [64])
	if ( ($4 == 0) ){ goto $label$16 }
	$9 = ($13 + [68])
	$8 = *($9)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$18 }
	
.LOOP $label$19:
	$8 = ($8 + [-24])
	$3 = *($8)
	*($8) = [0]
	if ( ($3 == 0) ){ goto $label$20 }
	CALL $173($3)
	
.LABEL $label$20
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$19 }
	$8 = *(($13 + [64]))
	goto $label$17 
	
.LABEL $label$18
	$8 = $4
	
.LABEL $label$17
	*($9) = $4
	CALL $173($8)
	
.LABEL $label$16
	*([0] + [4]) = ($13 + [160])
}

void .FUNC _ZN9cryptopix7depositEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [208])
	*([0] + [4]) = $11
	CALL $140(($11 + [144]))
	$1 = *($11 + [144])
	*($11 + [136]) = $1
	*(($11 + [128])) = *(($11 + [168]))
	*($11 + [120]) = *($11 + [160])
	$7 = *($0)
	if ( ((int_64)$1 == (int_64)$7) ){ goto $label$3 }
	if ( ((int_64)*($11 + [152]) != (int_64)$7) ){ goto $label$3 }
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [544]
	$8 = (int_64)0
	
.LOOP $label$4:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$5 }
	$2 = *($5)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$2 = ($2 + [165])
	goto $label$6 
	
.LABEL $label$7
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$5
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$4 }
	if ( ((int_64)$1 == (int_64)$8) ){ goto $label$3 }
	CALL prints([2224])
	CALL require_auth(*($11 + [136]))
	CALL eosio_assert(((int_64)*($11 + [128]) == (int_64)1398296580), [2304])
	$2 = [0]
	if ( ((uint_64)((int_64)*($11 + [120]) + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$8 }
	$7 = (uint_64)*(($11 + [128])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$2 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$2 = [0]
	
.LABEL $label$8
	CALL eosio_assert($2, [2240])
	CALL eosio_assert(((int_64)*($11 + [120]) > (int_64)0), [2272])
	$7 = *($11 + [136])
	$3 = *(($0 + [112]))
	$10 = *(($0 + [116]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$13 }
	$5 = ($10 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$14:
	if ( ((int_64)*(*($5)) == (int_64)$7) ){ goto $label$13 }
	$10 = $5
	$2 = ($5 + [-24])
	$5 = $2
	if ( ((int_32)($2 + $4) != (int_32)[-24]) ){ goto $label$14 }
	
.LABEL $label$13
	$2 = ($0 + [88])
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$19 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [44]) == (int_32)$2), [32])
	$7 = *($0)
	if ( $5 ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$5 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)3607749778735104000, $7)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$17 }
	$5 = CALL $15($2, $5)
	CALL eosio_assert(((int_32)*($5 + [44]) == (int_32)$2), [32])
	$7 = *($0)
	
.LABEL $label$18
	*($11 + [56]) = ($11 + [120])
	CALL eosio_assert([1], [160])
	CALL $142($2, $5, $7, ($11 + [56]))
	goto $label$15 
	
.LABEL $label$17
	$7 = *($0)
	
.LABEL $label$16
	*($11 + [116]) = ($11 + [120])
	*($11 + [112]) = ($11 + [136])
	*($11) = $7
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$2()), [96])
	*($11 + [56]) = $2
	*($11 + [60]) = ($11 + [112])
	*($11 + [64]) = $11
	*(($10 = CALL $172([56])) + [24]) = (int_64)1398362884
	*($10 + [16]) = (int_64)0
	CALL eosio_assert([1], [704])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$23 }
	
.LOOP $label$24:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$24 }
	
.LABEL $label$23
	$4 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$4 = [0]
	
.LABEL $label$20
	CALL eosio_assert($4, [496])
	*($10 + [40]) = [0]
	*($10 + [32 align=4]) = (int_64)0
	*($10 + [44]) = $2
	CALL $141(($11 + [56]), $10)
	*($11 + [200]) = $10
	$7 = *($10)
	*($11 + [56]) = $7
	$2 = *($10 + [48])
	*($11 + [196]) = $2
	$4 = ($0 + [116])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [120]))) ){ goto $label$26 }
	*($5 + [8]) = $7
	*($5 + [16]) = $2
	*($11 + [200]) = [0]
	*($5) = $10
	*($4) = ($5 + [24])
	goto $label$25 
	
.LABEL $label$26
	CALL $81(($0 + [112]), ($11 + [200]), ($11 + [56]), ($11 + [196]))
	
.LABEL $label$25
	$5 = *($11 + [200])
	*($11 + [200]) = [0]
	if ( ($5 == 0) ){ goto $label$15 }
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$27 }
	*(($5 + [36])) = $2
	CALL $173($2)
	
.LABEL $label$27
	CALL $173($5)
	
.LABEL $label$15
	$10 = ($0 + [8])
	CALL $14(($11 + [56]), $10)
	*(($11 + [20])) = *((($11 + [56]) + [20]))
	*(($5 = ($11 + [16]))) = *((($11 + [56]) + [16]))
	*(($11 + [12])) = *((($11 + [56]) + [12]))
	*($11 + [8]) = *($11 + [64])
	*($11) = *($11 + [56])
	CALL eosio_assert(((int_64)*((($11 + [120]) + [8])) == (int_64)*($5)), [2016])
	$7 = ((int_64)*($11 + [8]) + (int_64)*($11 + [120]))
	*($11 + [8]) = $7
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [2064])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [2096])
	*($11 + [24]) = *($11 + [80])
	*($11 + [25]) = *($11 + [81])
	*($11 + [26]) = *($11 + [82])
	*($11 + [28]) = *($11 + [84])
	*($11 + [32]) = [0]
	*(($11 + [36])) = [0]
	*(($11 + [40])) = [0]
	$5 = (*((($11 + [56]) + [36])) - *($11 + [88]))
	$2 = int_32($5 >> [4])
	if ( ($2 == 0) ){ goto $label$28 }
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$2 }
	$5 = CALL $172($5)
	*(($11 + [32])) = $5
	*(($4 = ($11 + [36]))) = $5
	*(($11 + [40])) = ($5 + ($2 << [4]))
	$3 = *((($11 + [56]) + [32]))
	$2 = (*((($11 + [56]) + [36])) - $3)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$28 }
	CALL memcpy($5, $3, $2)
	*($4) = (*($4) + $2)
	
.LABEL $label$28
	*(($11 + [52])) = [0]
	*($11 + [44 align=4]) = (int_64)0
	$5 = (*(($11 + [104])) - *($11 + [100]))
	$2 = int_32($5 >> [3])
	if ( ($2 == 0) ){ goto $label$29 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = CALL $172($5)
	*(($11 + [44])) = $5
	*(($4 = ($11 + [48]))) = $5
	*(($11 + [52])) = ($5 + ($2 << [3]))
	$3 = *((($11 + [56]) + [44]))
	$2 = (*((($11 + [56]) + [48])) - $3)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$29 }
	CALL memcpy($5, $3, $2)
	*($4) = (*($4) + $2)
	
.LABEL $label$29
	CALL $109($10, $11, *($0))
	$5 = *($11 + [44])
	if ( ($5 == 0) ){ goto $label$30 }
	*(($11 + [48])) = $5
	CALL $173($5)
	
.LABEL $label$30
	$5 = *($11 + [32])
	if ( ($5 == 0) ){ goto $label$31 }
	*(($11 + [36])) = $5
	CALL $173($5)
	
.LABEL $label$31
	$5 = *($11 + [100])
	if ( ($5 == 0) ){ goto $label$32 }
	*(($11 + [104])) = $5
	CALL $173($5)
	
.LABEL $label$32
	$5 = *($11 + [88])
	if ( ($5 == 0) ){ goto $label$3 }
	*(($11 + [92])) = $5
	CALL $173($5)
	
.LABEL $label$3
	if ( ((*($11 + [176]) & [1]) == 0) ){ goto $label$33 }
	CALL $173(*(($11 + [184])))
	
.LABEL $label$33
	*([0] + [4]) = ($11 + [208])
	return (unreachable)
	
.LABEL $label$2
	CALL $177(($11 + [32]))
	
.LABEL $label$1
	CALL $177(($11 + [44]))
	(unreachable)
}

int_32 .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)4730947158474227712, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $31($0, $3)
	if ( ($1 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = [0]
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [624])
	CALL eosio_assert($2, [672])
	$2 = CALL db_next_i64(*($3 + [20]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $31($0, $2)
	
.LABEL $label$3
	CALL $57($0, $3)
	$1 = ($1 + [-1])
	if ( ($4 == 0) ){ goto $label$1 }
	$3 = $4
	if ( ($1 & [255]) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return ($1 & [255])
}

int_32 .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)3607749778735104000, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $15($0, $3)
	if ( ($1 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = [0]
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [624])
	CALL eosio_assert($2, [672])
	$2 = CALL db_next_i64(*($3 + [48]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $15($0, $2)
	
.LABEL $label$3
	CALL $133($0, $3)
	$1 = ($1 + [-1])
	if ( ($4 == 0) ){ goto $label$1 }
	$3 = $4
	if ( ($1 & [255]) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return ($1 & [255])
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [816])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [880])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	$3 = *($5 + [44])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($5 + [48])) = $3
	CALL $173($3)
	
.LABEL $label$6
	$3 = *($5 + [32])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($5 + [36])) = $3
	CALL $173($3)
	
.LABEL $label$7
	CALL $173($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$8:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$3 = *($4 + [44])
	if ( ($3 == 0) ){ goto $label$10 }
	*(($4 + [48])) = $3
	CALL $173($3)
	
.LABEL $label$10
	$3 = *($4 + [32])
	if ( ($3 == 0) ){ goto $label$11 }
	*(($4 + [36])) = $3
	CALL $173($3)
	
.LABEL $label$11
	CALL $173($4)
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [60]))
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [816])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [880])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [36])) = $6
	CALL $173($6)
	
.LABEL $label$7
	CALL $173($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [36])) = $6
	CALL $173($6)
	
.LABEL $label$10
	CALL $173($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [768])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [816])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [880])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	$6 = *($4 + [12])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($4 + [16])) = $6
	CALL $173($6)
	
.LABEL $label$7
	CALL $173($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = *($4 + [12])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $6
	CALL $173($6)
	
.LABEL $label$10
	CALL $173($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
	$7 = *(($1 + [32]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730947171533193216, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

void .FUNC _ZN9cryptopix10checkstakeEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	$1 = ($0 + [88])
	$5 = [0]
	$4 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [88]), *(($0 + [96])), (int_64)3607749778735104000, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $15($1, $6)
	
.LABEL $label$1
	CALL eosio_assert([1], [704])
	$7 = (int_64)5462096
	
.LOOP $label$3:
	$6 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	
.LABEL $label$2
	CALL eosio_assert($6, [496])
	$7 = (int_64)0
	if ( ($4 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	CALL eosio_assert(((int_64)*(($4 + [24])) == (int_64)1398296580), [2016])
	$7 = ((int_64)*($4 + [16]) + (int_64)$7)
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [2064])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [2096])
	CALL eosio_assert([1], [672])
	$4 = CALL db_next_i64(*($4 + [48]), ($8 + [56]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$4 = CALL $15($1, $4)
	goto $label$7 
	
.LABEL $label$6
	$1 = ($0 + [8])
	CALL $14(($8 + [56]), $1)
	$4 = ($8 + [72])
	CALL eosio_assert(((int_64)1398296580 == (int_64)*($4)), [1664])
	$2 = *($4)
	if ( ((int_64)$7 <= (int_64)*($8 + [64])) ){ goto $label$9 }
	CALL eosio_assert(((int_64)$2 == (int_64)1398296580), [1760])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($7 - *((($8 + [56]) + [8])))) > (int_64)-4611686018427387904), [1808])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1840])
	CALL prints([2128])
	CALL printdf(((float_64)(CASTING float_64)(int_64 $2) / (float_64)(float_64)1e4))
	CALL prints([2160])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert(((int_64)1398296580 == (int_64)$2), [1664])
	if ( ((int_64)$7 >= (int_64)*((($8 + [56]) + [8]))) ){ goto $label$8 }
	CALL eosio_assert(((int_64)*(($8 + [72])) == (int_64)1398296580), [1760])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($7 - *(($8 + [64])))) > (int_64)-4611686018427387904), [1808])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [1840])
	CALL prints([2176])
	CALL printdf(((float_64)(CASTING float_64)(int_64 $2) / (float_64)(float_64)1e4))
	CALL prints([2160])
	
.LABEL $label$8
	*(($8 + [16])) = (int_64)1398296580
	*($8 + [8]) = $7
	*($8) = *($8 + [56])
	*($8 + [24]) = *($8 + [80])
	*($8 + [25]) = *($8 + [81])
	*($8 + [26]) = *($8 + [82])
	*($8 + [28]) = *($8 + [84])
	*($8 + [32]) = [0]
	*(($8 + [36])) = [0]
	*(($8 + [40])) = [0]
	$4 = (*((($8 + [56]) + [36])) - *($8 + [88]))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$11 }
	$4 = CALL $172($4)
	*(($8 + [32])) = $4
	*(($6 = ($8 + [36]))) = $4
	*(($8 + [40])) = ($4 + ($5 << [4]))
	$3 = *((($8 + [56]) + [32]))
	$5 = (*((($8 + [56]) + [36])) - $3)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$12 }
	CALL memcpy($4, $3, $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$12
	*(($8 + [52])) = [0]
	*($8 + [44 align=4]) = (int_64)0
	$4 = (*(($8 + [104])) - *($8 + [100]))
	$5 = int_32($4 >> [3])
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$10 }
	$4 = CALL $172($4)
	*(($8 + [44])) = $4
	*(($6 = ($8 + [48]))) = $4
	*(($8 + [52])) = ($4 + ($5 << [3]))
	$3 = *((($8 + [56]) + [44]))
	$5 = (*((($8 + [56]) + [48])) - $3)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$13 }
	CALL memcpy($4, $3, $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$13
	CALL $109($1, $8, *($0))
	$4 = *($8 + [44])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($8 + [48])) = $4
	CALL $173($4)
	
.LABEL $label$14
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$15 }
	*(($8 + [36])) = $4
	CALL $173($4)
	
.LABEL $label$15
	$4 = *($8 + [100])
	if ( ($4 == 0) ){ goto $label$16 }
	*(($8 + [104])) = $4
	CALL $173($4)
	
.LABEL $label$16
	$4 = *($8 + [88])
	if ( ($4 == 0) ){ goto $label$17 }
	*(($8 + [92])) = $4
	CALL $173($4)
	
.LABEL $label$17
	*([0] + [4]) = ($8 + [112])
	return (unreachable)
	
.LABEL $label$11
	CALL $177(($8 + [32]))
	
.LABEL $label$10
	CALL $177(($8 + [44]))
	(unreachable)
}

void .FUNC _ZN9cryptopix11redowinnersEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [240])
	*([0] + [4]) = $15
	CALL require_auth(*($0))
	$7 = *(($0 + [72]))
	$2 = *(($0 + [76]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$1 }
	$14 = ($2 + [-24])
	$13 = ([0] - $7)
	
.LOOP $label$2:
	if ( ((int_64)*(*($14)) == (int_64)$1) ){ goto $label$1 }
	$2 = $14
	$3 = ($14 + [-24])
	$14 = $3
	if ( ((int_32)($3 + $13) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$14 = ($0 + [48])
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$5 }
	$12 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$14), [32])
	if ( $12 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4730947158474227712, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$12 = CALL $31($14, $3)
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$14), [32])
	
.LABEL $label$4
	$10 = *($0)
	CALL eosio_assert([1], [160])
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$14), [208])
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$2()), [256])
	$14 = ($12 + [10])
	$4 = *($14)
	*($14) = [2]
	$14 = ($12 + [8])
	*($15 + [160]) = *($14)
	*($15 + [168]) = $4
	$4 = *($12)
	CALL eosio_assert([1], [320])
	*($15 + [16]) = (($15 + [48]) | [15])
	*($15 + [12]) = ($15 + [48])
	*($15 + [8]) = ($15 + [48])
	CALL $34(($15 + [8]), $12)
	CALL db_update_i64(*($12 + [20]), $10, ($15 + [48]), [15])
	$3 = ($0 + [64])
	if ( (uint_64)($4 <= *($3)) ){ goto $label$6 }
	*($3) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	$3 = (($15 + [160]) + [8])
	*($15 + [96]) = *($14)
	if ( (CALL memcmp(($15 + [160]), ($15 + [96]), [8]) == 0) ){ goto $label$7 }
	$2 = ($12 + [24])
	$14 = *($2)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$8 }
	$14 = CALL db_idx64_find_primary(*(($0 + [48])), *(($0 + [56])), (int_64)4730947158474227712, ($15 + [224]), $4)
	*($2) = $14
	
.LABEL $label$8
	CALL db_idx64_update($14, $10, ($15 + [96]))
	
.LABEL $label$7
	*($15 + [96]) = *(($12 + [10]))
	if ( (CALL memcmp($3, ($15 + [96]), [8]) == 0) ){ goto $label$9 }
	$3 = ($12 + [28])
	$14 = *($3)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$10 }
	$14 = CALL db_idx64_find_primary(*(($0 + [48])), *(($0 + [56])), (int_64)4730947158474227713, ($15 + [224]), $4)
	*($3) = $14
	
.LABEL $label$10
	CALL db_idx64_update($14, $10, ($15 + [96]))
	
.LABEL $label$9
	*((($15 + [48]) + [32])) = [0]
	*($15 + [64]) = (int_64)-1
	$4 = *($0)
	*($15 + [48]) = $4
	*($15 + [56]) = $1
	*($15 + [72]) = (int_64)0
	*($15 + [84]) = [0]
	$14 = CALL db_lowerbound_i64($4, $1, (int_64)-2042605236735967232, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$11 }
	$14 = CALL $58(($15 + [48]), $14)
	$5 = ($15 + [176])
	$6 = ($15 + [168])
	$7 = ($15 + [184])
	$8 = ($15 + [188])
	$9 = (($15 + [160]) + [32])
	
.LOOP $label$12:
	*($5) = (int_64)-1
	*($6) = ((int_64)*($14) | (int_64)((int_64)*($12) << (int_64)32))
	*($15 + [160]) = *($0)
	$13 = [0]
	*($7) = [0]
	*($8) = [0]
	*($9) = [0]
	CALL $128(($15 + [160]), [255])
	CALL eosio_assert([1], [672])
	$14 = CALL db_next_i64(*($14 + [44]), ($15 + [8]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$13 }
	$13 = CALL $58(($15 + [48]), $14)
	
.LABEL $label$13
	$2 = *($7)
	if ( ($2 == 0) ){ goto $label$14 }
	$14 = *($8)
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$16 }
	
.LOOP $label$17:
	$14 = ($14 + [-24])
	$3 = *($14)
	*($14) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	CALL $173($3)
	
.LABEL $label$18
	if ( ((int_32)$2 != (int_32)$14) ){ goto $label$17 }
	$14 = *($7)
	goto $label$15 
	
.LABEL $label$16
	$14 = $2
	
.LABEL $label$15
	*($8) = $2
	CALL $173($14)
	
.LABEL $label$14
	$14 = $13
	if ( $13 ){ goto $label$12 }
	
.LABEL $label$11
	CALL $56(($15 + [48]), [255])
	*((($15 + [8]) + [32])) = [0]
	*($15 + [24]) = (int_64)-1
	$4 = *($0)
	*($15 + [8]) = $4
	*($15 + [16]) = $1
	*($15 + [32]) = (int_64)0
	*($15 + [44]) = [0]
	$14 = CALL db_lowerbound_i64($4, $1, (int_64)-4139046226129272832, (int_64)0)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$19 }
	$5 = (($15 + [96]) + [33])
	$13 = ($15 + [192])
	$7 = (($15 + [160]) + [16])
	$6 = (($15 + [160]) | [8])
	$14 = CALL $62(($15 + [8]), $14)
	$9 = ($15 + [200])
	
.LOOP $label$20:
	$3 = ($14 + [24])
	if ( ((int_32)*($3) != (int_32)[2]) ){ goto $label$21 }
	$1 = *($0)
	CALL eosio_assert([1], [160])
	CALL eosio_assert(((int_32)*($14 + [40]) == (int_32)($15 + [8])), [208])
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$2()), [256])
	$4 = *($3)
	*($7) = $4
	$2 = ($14 + [8])
	$10 = *($2)
	*($15 + [160]) = $10
	$8 = ($14 + [16])
	*($15 + [168]) = ((int_64)*($8) ^ (int_64)-1)
	*($9) = $10
	*($13) = $4
	$4 = *($14)
	*($3) = [0]
	CALL eosio_assert([1], [320])
	*((($15 + [144]) + [8])) = $5
	*($15 + [148]) = ($15 + [96])
	*($15 + [144]) = ($15 + [96])
	CALL $39(($15 + [144]), $14)
	CALL db_update_i64(*($14 + [44]), $1, ($15 + [96]), [33])
	$12 = (($15 + [8]) + [16])
	if ( (uint_64)($4 <= *($12)) ){ goto $label$22 }
	*($12) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($15 + [224]) = *($2)
	if ( (CALL memcmp(($15 + [160]), ($15 + [224]), [8]) == 0) ){ goto $label$23 }
	$11 = ($14 + [48])
	$12 = *($11)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$24 }
	$12 = CALL db_idx64_find_primary(*($15 + [8]), *((($15 + [8]) + [8])), (int_64)-4139046226129272832, ($15 + [208]), $4)
	*($11) = $12
	
.LABEL $label$24
	CALL db_idx64_update($12, $1, ($15 + [224]))
	
.LABEL $label$23
	*($15 + [224]) = ((int_64)*($8) ^ (int_64)-1)
	if ( (CALL memcmp($6, ($15 + [224]), [8]) == 0) ){ goto $label$25 }
	$12 = ($14 + [52])
	$8 = *($12)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$26 }
	$8 = CALL db_idx64_find_primary(*($15 + [8]), *((($15 + [8]) + [8])), (int_64)-4139046226129272831, ($15 + [208]), $4)
	*($12) = $8
	
.LABEL $label$26
	CALL db_idx64_update($8, $1, ($15 + [224]))
	
.LABEL $label$25
	*($15 + [224]) = *($3)
	if ( (CALL memcmp($7, ($15 + [224]), [8]) == 0) ){ goto $label$27 }
	$12 = ($14 + [56])
	$8 = *($12)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$28 }
	$8 = CALL db_idx64_find_primary(*($15 + [8]), *((($15 + [8]) + [8])), (int_64)-4139046226129272830, ($15 + [208]), $4)
	*($12) = $8
	
.LABEL $label$28
	CALL db_idx64_update($8, $1, ($15 + [224]))
	
.LABEL $label$27
	*($15 + [232]) = *($2)
	*($15 + [224]) = *($3)
	if ( (CALL memcmp($13, ($15 + [224]), [16]) == 0) ){ goto $label$21 }
	$2 = ($14 + [60])
	$3 = *($2)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$29 }
	$3 = CALL db_idx128_find_primary(*($15 + [8]), *((($15 + [8]) + [8])), (int_64)-4139046226129272829, ($15 + [208]), $4)
	*($2) = $3
	
.LABEL $label$29
	CALL db_idx128_update($3, $1, ($15 + [224]))
	
.LABEL $label$21
	CALL eosio_assert([1], [672])
	$14 = CALL db_next_i64(*(($14 + [44])), ($15 + [160]))
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$19 }
	$14 = CALL $62(($15 + [8]), $14)
	goto $label$20 
	
.LABEL $label$19
	$2 = *($15 + [32])
	if ( ($2 == 0) ){ goto $label$30 }
	$13 = ($15 + [36])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$32 }
	
.LOOP $label$33:
	$14 = ($14 + [-24])
	$3 = *($14)
	*($14) = [0]
	if ( ($3 == 0) ){ goto $label$34 }
	CALL $173($3)
	
.LABEL $label$34
	if ( ((int_32)$2 != (int_32)$14) ){ goto $label$33 }
	$14 = *(($15 + [32]))
	goto $label$31 
	
.LABEL $label$32
	$14 = $2
	
.LABEL $label$31
	*($13) = $2
	CALL $173($14)
	
.LABEL $label$30
	$2 = *($15 + [72])
	if ( ($2 == 0) ){ goto $label$3 }
	$13 = ($15 + [76])
	$14 = *($13)
	if ( ((int_32)$14 == (int_32)$2) ){ goto $label$36 }
	
.LOOP $label$37:
	$14 = ($14 + [-24])
	$3 = *($14)
	*($14) = [0]
	if ( ($3 == 0) ){ goto $label$38 }
	CALL $173($3)
	
.LABEL $label$38
	if ( ((int_32)$2 != (int_32)$14) ){ goto $label$37 }
	$14 = *(($15 + [72]))
	goto $label$35 
	
.LABEL $label$36
	$14 = $2
	
.LABEL $label$35
	*($13) = $2
	CALL $173($14)
	
.LABEL $label$3
	*([0] + [4]) = ($15 + [240])
}

void .FUNC _ZN9cryptopix11clearcanvasEyh (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	$3 = *(($0 + [72]))
	$6 = *(($0 + [76]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	$7 = ($6 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$1) ){ goto $label$1 }
	$6 = $7
	$5 = ($7 + [-24])
	$7 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$4 }
	$7 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$5), [32])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$6 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4730947158474227712, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $31($5, $6)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$5), [32])
	
.LABEL $label$3
	CALL eosio_assert(($7 == 0), [2208])
	*(($8 + [40])) = [0]
	*($8 + [16]) = $1
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	*($8 + [8]) = *($0)
	*($8 + [44]) = [0]
	CALL $129(($8 + [8]), $2)
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$5 }
	$0 = ($8 + [36])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	$6 = *($5 + [12])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $6
	CALL $173($6)
	
.LABEL $label$10
	CALL $173($5)
	
.LABEL $label$9
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	$7 = *(($8 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$7 = $4
	
.LABEL $label$6
	*($0) = $4
	CALL $173($7)
	
.LABEL $label$5
	*([0] + [4]) = ($8 + [48])
}

int_64 .FUNC fmin (float_64 $0, float_64 $1)
{
	int_64 $2
	int_64 $3
	$2 = (CASTING int_64)(float_64 $0)
	if ( ((uint_64)((int_64)$2 & (int_64)9223372036854775807) > (uint_64)(int_64)9218868437227405312) ){ goto $label$2 }
	$3 = (CASTING int_64)(float_64 $1)
	if ( ((uint_64)((int_64)$3 & (int_64)9223372036854775807) <= (uint_64)(int_64)9218868437227405312) ){ goto $label$3 }
	return $0
	
.LABEL $label$3
	if ( ((int_32)(CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)63)) != (int_32)(CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)63))) ){ goto $label$1 }
	$1 = ( $0 ? $1 : ((float_64)$0 < (float_64)$1) )
	
.LABEL $label$2
	return $1
	
.LABEL $label$1
	return ( $0 ? $1 : ((int_64)$2 < (int_64)0) )
}

int_32 .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)4730947171533193216, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $19($0, $3)
	if ( ($1 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = [0]
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [624])
	CALL eosio_assert($2, [672])
	$2 = CALL db_next_i64(*($3 + [28]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $19($0, $2)
	
.LABEL $label$3
	CALL $134($0, $3)
	$1 = ($1 + [-1])
	if ( ($4 == 0) ){ goto $label$1 }
	$3 = $4
	if ( ($1 & [255]) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return ($1 & [255])
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)-4131108868577034240, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $43($0, $3)
	if ( ($1 == 0) ){ goto $label$1 }
	
.LOOP $label$2:
	$4 = [0]
	$2 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($2, [624])
	CALL eosio_assert($2, [672])
	$2 = CALL db_next_i64(*($3 + [20]), ($5 + [8]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $43($0, $2)
	
.LABEL $label$3
	CALL $47($0, $3)
	$1 = ($1 + [-1])
	if ( ($4 == 0) ){ goto $label$1 }
	$3 = $4
	if ( ($1 & [255]) ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return ($1 & [255])
}

int_32 .FUNC _Z7getTimev ()
{
	return (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000))))
}

int_32 .FUNC _Z13getCyclesTimev ()
{
	return ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) % (uint_32)[86400])
}

void .FUNC _ZN9cryptopix11setgamedimsEtt (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [112])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$3 = ($0 + [8])
	CALL $14(($6 + [56]), $3)
	*(($6 + [20])) = *((($6 + [56]) + [20]))
	*(($6 + [16])) = *((($6 + [56]) + [16]))
	*(($6 + [12])) = *((($6 + [56]) + [12]))
	*($6 + [8]) = *($6 + [64])
	*($6) = *($6 + [56])
	*($6 + [24]) = *($6 + [80])
	*($6 + [25]) = *($6 + [81])
	*($6 + [26]) = $1
	*($6 + [28]) = $2
	*($6 + [32]) = [0]
	*(($6 + [36])) = [0]
	*(($6 + [40])) = [0]
	$2 = (*((($6 + [56]) + [36])) - *($6 + [88]))
	$1 = int_32($2 >> [4])
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[268435456]) ){ goto $label$2 }
	$2 = CALL $172($2)
	*(($6 + [32])) = $2
	*(($5 = ($6 + [36]))) = $2
	*(($6 + [40])) = ($2 + ($1 << [4]))
	$4 = *((($6 + [56]) + [32]))
	$1 = (*((($6 + [56]) + [36])) - $4)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($2, $4, $1)
	*($5) = (*($5) + $1)
	
.LABEL $label$3
	*(($6 + [52])) = [0]
	*($6 + [44 align=4]) = (int_64)0
	$2 = (*(($6 + [104])) - *($6 + [100]))
	$1 = int_32($2 >> [3])
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ((uint_32)$1 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL $172($2)
	*(($6 + [44])) = $2
	*(($5 = ($6 + [48]))) = $2
	*(($6 + [52])) = ($2 + ($1 << [3]))
	$4 = *((($6 + [56]) + [44]))
	$1 = (*((($6 + [56]) + [48])) - $4)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $1)
	*($5) = (*($5) + $1)
	
.LABEL $label$4
	CALL $109($3, $6, *($0))
	$0 = *($6 + [44])
	if ( ($0 == 0) ){ goto $label$5 }
	*(($6 + [48])) = $0
	CALL $173($0)
	
.LABEL $label$5
	$0 = *($6 + [32])
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [36])) = $0
	CALL $173($0)
	
.LABEL $label$6
	$0 = *($6 + [100])
	if ( ($0 == 0) ){ goto $label$7 }
	*(($6 + [104])) = $0
	CALL $173($0)
	
.LABEL $label$7
	$0 = *($6 + [88])
	if ( ($0 == 0) ){ goto $label$8 }
	*(($6 + [92])) = $0
	CALL $173($0)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [112])
	return (unreachable)
	
.LABEL $label$2
	CALL $177(($6 + [32]))
	
.LABEL $label$1
	CALL $177(($6 + [44]))
	(unreachable)
}

void .FUNC _ZN9cryptopix12createcanvasEv (int_32 $0)
{
	int_32 $1
	$1 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)4730947158474227712, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL $31(($0 + [48]), $1)
	return 
	
.LABEL $label$1
	CALL _ZN9cryptopix12createCanvasEv($0)
}

void .FUNC _ZN9cryptopix5tokenExN5eosio11symbol_typeE (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	*($0 + [8]) = $3
	*($0) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [704])
	$2 = (uint_64)$3 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [496])
}

void .FUNC _ZN9cryptopix4initEv (int_32 $0)
{
	int_32 $1
	float_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [64])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$2 = CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400])))
	*(($7 + [24])) = (int_64)1398296580
	*($7 + [16]) = (int_64)0
	*($7 + [8]) = (CASTING uint_64)(uint_32 (CASTING uint_32)(float_64 $2))
	CALL eosio_assert([1], [704])
	$1 = ($0 + [8])
	$5 = [0]
	$4 = (int_64)5462096
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [496])
	*(($7 + [44])) = [0]
	*(($7 + [48])) = [0]
	*($7 + [36]) = [1000]
	*($7 + [32]) = [65536000]
	*($7 + [40]) = [0]
	$4 = *($0)
	*(($5 = CALL $172([8]))) = $4
	$6 = ($5 + [8])
	*(($7 + [60])) = $6
	*(($3 = ($7 + [56]))) = $6
	*($7 + [52]) = $5
	CALL $109($1, ($7 + [8]), *($0))
	$5 = *($7 + [52])
	if ( ($5 == 0) ){ goto $label$6 }
	*($3) = $5
	CALL $173($5)
	
.LABEL $label$6
	$5 = *(($7 + [40]))
	if ( ($5 == 0) ){ goto $label$7 }
	*(($7 + [44])) = $5
	CALL $173($5)
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [64])
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN9cryptopix10setrewardsENSt3__16vectorIN5eosio5assetENS0_9allocatorIS3_EEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [112])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$2 = ($0 + [8])
	CALL $14(($6 + [56]), $2)
	*(($6 + [20])) = *((($6 + [56]) + [20]))
	*(($6 + [16])) = *((($6 + [56]) + [16]))
	*(($6 + [12])) = *((($6 + [56]) + [12]))
	*($6 + [8]) = *($6 + [64])
	*($6) = *($6 + [56])
	*($6 + [24]) = *($6 + [80])
	*($6 + [25]) = *($6 + [81])
	*($6 + [26]) = *($6 + [82])
	*($6 + [28]) = *($6 + [84])
	*($6 + [32]) = *($1)
	*(($6 + [36])) = *($1 + [4])
	*($1 + [4]) = [0]
	$3 = *($1 + [8])
	*($1 + [8]) = [0]
	*(($6 + [40])) = $3
	*($1) = [0]
	*($6 + [44]) = [0]
	*(($6 + [48])) = [0]
	*(($6 + [52])) = [0]
	$1 = (*((($6 + [56]) + [48])) - *($6 + [100]))
	$3 = int_32($1 >> [3])
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$1 = CALL $172($1)
	*(($6 + [44])) = $1
	*(($5 = ($6 + [48]))) = $1
	*(($6 + [52])) = ($1 + ($3 << [3]))
	$4 = *((($6 + [56]) + [44]))
	$3 = (*((($6 + [56]) + [48])) - $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($1, $4, $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	CALL $109($2, $6, *($0))
	$1 = *($6 + [44])
	if ( ($1 == 0) ){ goto $label$3 }
	*(($6 + [48])) = $1
	CALL $173($1)
	
.LABEL $label$3
	$1 = *($6 + [32])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($6 + [36])) = $1
	CALL $173($1)
	
.LABEL $label$4
	$1 = *($6 + [100])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($6 + [104])) = $1
	CALL $173($1)
	
.LABEL $label$5
	$1 = *($6 + [88])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($6 + [92])) = $1
	CALL $173($1)
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [112])
	return (unreachable)
	
.LABEL $label$1
	CALL $177(($6 + [44]))
}

void .FUNC _ZN9cryptopix11togglepauseEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [112])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$1 = ($0 + [8])
	CALL $14(($6 + [56]), $1)
	*(($6 + [20])) = *((($6 + [56]) + [20]))
	*(($6 + [16])) = *((($6 + [56]) + [16]))
	*(($6 + [12])) = *((($6 + [56]) + [12]))
	*($6 + [8]) = *($6 + [64])
	*($6) = *($6 + [56])
	*($6 + [24]) = ((int_32)*($6 + [80]) ^ (int_32)[1])
	*($6 + [25]) = *($6 + [81])
	*($6 + [26]) = *($6 + [82])
	*($6 + [28]) = *($6 + [84])
	*($6 + [32]) = [0]
	*(($6 + [36])) = [0]
	*(($6 + [40])) = [0]
	$3 = (*((($6 + [56]) + [36])) - *($6 + [88]))
	$2 = int_32($3 >> [4])
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$2 }
	$3 = CALL $172($3)
	*(($6 + [32])) = $3
	*(($5 = ($6 + [36]))) = $3
	*(($6 + [40])) = ($3 + ($2 << [4]))
	$4 = *((($6 + [56]) + [32]))
	$2 = (*((($6 + [56]) + [36])) - $4)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $4, $2)
	*($5) = (*($5) + $2)
	
.LABEL $label$3
	*(($6 + [52])) = [0]
	*($6 + [44 align=4]) = (int_64)0
	$3 = (*(($6 + [104])) - *($6 + [100]))
	$2 = int_32($3 >> [3])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	$3 = CALL $172($3)
	*(($6 + [44])) = $3
	*(($5 = ($6 + [48]))) = $3
	*(($6 + [52])) = ($3 + ($2 << [3]))
	$4 = *((($6 + [56]) + [44]))
	$2 = (*((($6 + [56]) + [48])) - $4)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $4, $2)
	*($5) = (*($5) + $2)
	
.LABEL $label$4
	CALL $109($1, $6, *($0))
	$0 = *($6 + [44])
	if ( ($0 == 0) ){ goto $label$5 }
	*(($6 + [48])) = $0
	CALL $173($0)
	
.LABEL $label$5
	$0 = *($6 + [32])
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [36])) = $0
	CALL $173($0)
	
.LABEL $label$6
	$0 = *($6 + [100])
	if ( ($0 == 0) ){ goto $label$7 }
	*(($6 + [104])) = $0
	CALL $173($0)
	
.LABEL $label$7
	$0 = *($6 + [88])
	if ( ($0 == 0) ){ goto $label$8 }
	*(($6 + [92])) = $0
	CALL $173($0)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [112])
	return (unreachable)
	
.LABEL $label$2
	CALL $177(($6 + [32]))
	
.LABEL $label$1
	CALL $177(($6 + [44]))
	(unreachable)
}

void .FUNC _ZN9cryptopix11toggledebugEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [112])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$1 = ($0 + [8])
	CALL $14(($6 + [56]), $1)
	*(($6 + [20])) = *((($6 + [56]) + [20]))
	*(($6 + [16])) = *((($6 + [56]) + [16]))
	*(($6 + [12])) = *((($6 + [56]) + [12]))
	*($6 + [8]) = *($6 + [64])
	*($6) = *($6 + [56])
	*($6 + [24]) = *($6 + [80])
	*($6 + [25]) = ((int_32)*($6 + [81]) ^ (int_32)[1])
	*($6 + [26]) = *($6 + [82])
	*($6 + [28]) = *($6 + [84])
	*($6 + [32]) = [0]
	*(($6 + [36])) = [0]
	*(($6 + [40])) = [0]
	$3 = (*((($6 + [56]) + [36])) - *($6 + [88]))
	$2 = int_32($3 >> [4])
	if ( ($2 == 0) ){ goto $label$3 }
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$2 }
	$3 = CALL $172($3)
	*(($6 + [32])) = $3
	*(($5 = ($6 + [36]))) = $3
	*(($6 + [40])) = ($3 + ($2 << [4]))
	$4 = *((($6 + [56]) + [32]))
	$2 = (*((($6 + [56]) + [36])) - $4)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $4, $2)
	*($5) = (*($5) + $2)
	
.LABEL $label$3
	*(($6 + [52])) = [0]
	*($6 + [44 align=4]) = (int_64)0
	$3 = (*(($6 + [104])) - *($6 + [100]))
	$2 = int_32($3 >> [3])
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	$3 = CALL $172($3)
	*(($6 + [44])) = $3
	*(($5 = ($6 + [48]))) = $3
	*(($6 + [52])) = ($3 + ($2 << [3]))
	$4 = *((($6 + [56]) + [44]))
	$2 = (*((($6 + [56]) + [48])) - $4)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $4, $2)
	*($5) = (*($5) + $2)
	
.LABEL $label$4
	CALL $109($1, $6, *($0))
	$0 = *($6 + [44])
	if ( ($0 == 0) ){ goto $label$5 }
	*(($6 + [48])) = $0
	CALL $173($0)
	
.LABEL $label$5
	$0 = *($6 + [32])
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [36])) = $0
	CALL $173($0)
	
.LABEL $label$6
	$0 = *($6 + [100])
	if ( ($0 == 0) ){ goto $label$7 }
	*(($6 + [104])) = $0
	CALL $173($0)
	
.LABEL $label$7
	$0 = *($6 + [88])
	if ( ($0 == 0) ){ goto $label$8 }
	*(($6 + [92])) = $0
	CALL $173($0)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [112])
	return (unreachable)
	
.LABEL $label$2
	CALL $177(($6 + [32]))
	
.LABEL $label$1
	CALL $177(($6 + [44]))
	(unreachable)
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *(($1 + [28]))
	if ( ((int_32)$3 == (int_32)*($1 + [24])) ){ goto $label$2 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$1), [32])
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035924439720001536, (int_64)7035924439720001536)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $85($1, $2)
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$1), [32])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1008])
	CALL $86($0, $3)
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$4 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [400])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$3 = ($0 + [24])
	*(($4 = CALL $172([56])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [704])
	$7 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	
.LABEL $label$8
	CALL eosio_assert($6, [496])
	*($4 + [40]) = [0]
	*($4 + [32 align=4]) = (int_64)0
	*($4 + [44]) = $0
	CALL $82(($8 + [32]), $4)
	*($4 + [48]) = $1
	*($8 + [24]) = $4
	$7 = *($4)
	*($8 + [16]) = $7
	$6 = *($4 + [48])
	*($8 + [12]) = $6
	$1 = ($0 + [28])
	$5 = *($1)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$14 }
	*($5 + [8]) = $7
	*($5 + [16]) = $6
	*($8 + [24]) = [0]
	*($5) = $4
	*($1) = ($5 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $81($3, ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$13
	$5 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = *($5 + [32])
	if ( ($6 == 0) ){ goto $label$15 }
	*(($5 + [36])) = $6
	CALL $173($6)
	
.LABEL $label$15
	CALL $173($5)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $4
}

void .FUNC _ZN9cryptopix13createAccountEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [64])
	*([0] + [4]) = $8
	*($8 + [16]) = $2
	$2 = *($1)
	*($8 + [12]) = $1
	*($8 + [8]) = ($8 + [16])
	*($8 + [56]) = $2
	CALL eosio_assert(((int_64)*($1 + [88]) == (int_64)CALL $fimport$2()), [96])
	$3 = ($1 + [88])
	*($8 + [32]) = $3
	*($8 + [36]) = ($8 + [8])
	*($8 + [40]) = ($8 + [56])
	*(($4 = CALL $172([56])) + [24]) = (int_64)1398362884
	*($4 + [16]) = (int_64)0
	CALL eosio_assert([1], [704])
	$2 = (int_64)5462355
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [496])
	*($4 + [40]) = [0]
	*($4 + [32 align=4]) = (int_64)0
	*($4 + [44]) = $3
	CALL $80(($8 + [32]), $4)
	*($8 + [48]) = $4
	$2 = *($4)
	*($8 + [32]) = $2
	$7 = *($4 + [48])
	*($8 + [28]) = $7
	$5 = ($1 + [116])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($1 + [120]))) ){ goto $label$7 }
	*($6 + [8]) = $2
	*($6 + [16]) = $7
	*($8 + [48]) = [0]
	*($6) = $4
	*($5) = ($6 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $81(($1 + [112]), ($8 + [48]), ($8 + [32]), ($8 + [28]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $3
	$6 = *($8 + [48])
	*($8 + [48]) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	$4 = *($6 + [32])
	if ( ($4 == 0) ){ goto $label$9 }
	*(($6 + [36])) = $4
	CALL $173($4)
	
.LABEL $label$9
	CALL $173($6)
	
.LABEL $label$8
	*([0] + [4]) = ($8 + [64])
}

void .FUNC _ZN9cryptopix14checkGameStateEhb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	float_64 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_64 $39
	int_64 $40
	int_64 $41
	int_64 $42
	int_64 $43
	int_64 $44
	int_32 $45
	$45 = (*([0] + [4]) - [368])
	*([0] + [4]) = $45
	$38 = ($0 + [48])
	$36 = [0]
	$37 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)4730947158474227712, (int_64)0)
	if ( ((int_32)$37 < (int_32)[0]) ){ goto $label$1 }
	CALL $31($38, $37)
	$36 = [1]
	
.LABEL $label$1
	CALL eosio_assert($36, [464])
	$22 = CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400])))
	*($45 + [264]) = $38
	*($45 + [200]) = (int_64)0
	$3 = (CASTING uint_32)(float_64 $22)
	CALL $18(($45 + [256]), ($45 + [264]), ($45 + [200]))
	if ( (*($45 + [260]) == 0) ){ goto $label$4 }
	$17 = ($3 + [-2])
	$6 = ($0 + [8])
	$5 = ($3 + [-1])
	$18 = (($45 + [200]) + [8])
	$16 = (($45 + [120]) + [8])
	$15 = (($45 + [200]) + [36])
	$14 = (($45 + [32]) + [28])
	$13 = (($45 + [200]) + [32])
	$12 = (($45 + [352]) | [1])
	$11 = (($45 + [32]) + [33])
	$10 = (($45 + [288]) + [32])
	$9 = (($45 + [288]) + [16])
	$8 = (($45 + [288]) | [8])
	$7 = (($45 + [288]) + [8])
	$4 = (($45 + [32]) | [15])
	$31 = (($45 + [200]) + [24])
	$28 = (($45 + [160]) + [20])
	$29 = ($45 + [244])
	$30 = (($45 + [200]) + [48])
	
.LOOP $label$5:
	$37 = ($1 & [255])
	if ( ($37 == 0) ){ goto $label$4 }
	$38 = *($45 + [260])
	$36 = *($38 + [10])
	if ( ((uint_32)$36 > (uint_32)[5]) ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$33
	if ( ((int_32)$3 == (int_32)*($38 + [8])) ){ goto $label$34 }
	$42 = *($0)
	CALL eosio_assert([1], [160])
	$36 = *($45 + [264])
	CALL eosio_assert(((int_32)*($38 + [16]) == (int_32)$36), [208])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$2()), [256])
	$35 = ($38 + [10])
	*($18) = *($35)
	*($35) = [1]
	$1 = ($38 + [8])
	*($45 + [200]) = *($1)
	$40 = *($38)
	CALL eosio_assert([1], [320])
	*($7) = $4
	*($45 + [292]) = ($45 + [32])
	*($45 + [288]) = ($45 + [32])
	CALL $34(($45 + [288]), $38)
	CALL db_update_i64(*($38 + [20]), $42, ($45 + [32]), [15])
	if ( (uint_64)($40 <= *($36 + [16])) ){ goto $label$35 }
	*(($36 + [16])) = ( (int_64)-2 ? ((int_64)$40 + (int_64)1) : ((uint_64)$40 > (uint_64)(int_64)-3) )
	
.LABEL $label$35
	*($45 + [120]) = *($1)
	if ( (CALL memcmp(($45 + [200]), ($45 + [120]), [8]) == 0) ){ goto $label$36 }
	$34 = ($38 + [24])
	$1 = *($34)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$37 }
	$1 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227712, ($45 + [160]), $40)
	*($34) = $1
	
.LABEL $label$37
	CALL db_idx64_update($1, $42, ($45 + [120]))
	
.LABEL $label$36
	*($45 + [120]) = *($35)
	if ( (CALL memcmp($18, ($45 + [120]), [8]) == 0) ){ goto $label$38 }
	$35 = ($38 + [28])
	$38 = *($35)
	if ( ((int_32)$38 > (int_32)[-1]) ){ goto $label$39 }
	$38 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227713, ($45 + [160]), $40)
	*($35) = $38
	
.LABEL $label$39
	CALL db_idx64_update($38, $42, ($45 + [120]))
	
.LABEL $label$38
	CALL _ZN9cryptopix12createCanvasEv($0)
	$1 = ($37 + [254])
	
.LABEL $label$34
	$1 = ( $1 ? [0] : $2 )
	CALL $36(($45 + [256]))
	if ( *($45 + [260]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$32
	*($18) = *($38)
	*((($45 + [200]) + [16])) = (int_64)-1
	$35 = [0]
	*($31) = [0]
	*($45 + [200]) = *($0)
	*(($34 = (($45 + [200]) + [28]))) = [0]
	*($13) = [0]
	*($15) = [0]
	$38 = CALL $55(($45 + [200]), ($1 & [255]))
	if ( ($38 == 0) ){ goto $label$18 }
	*($9) = (int_64)-1
	*($7) = *(*($45 + [260]))
	*($45 + [288]) = *($0)
	*(($1 = (($45 + [288]) + [24]))) = [0]
	*(($23 = (($45 + [288]) + [28]))) = [0]
	*($10) = [0]
	*((($45 + [288]) + [36])) = [0]
	$38 = CALL $56(($45 + [288]), $38)
	if ( ($38 == 0) ){ goto $label$23 }
	$40 = *($45 + [256])
	*($45 + [120]) = $40
	$36 = (CASTING uint_32)(uint_64 (uint_64)$40 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$36) != (int_32)[0]), [624])
	CALL $36(($45 + [120]))
	CALL $57(*($45 + [264]), $36)
	*($45 + [256]) = *($45 + [120])
	$35 = ($38 + [-1])
	$37 = *($1)
	if ( $37 ){ goto $label$22 }
	goto $label$18 
	
.LABEL $label$31
	if ( ((int_32)$5 == (int_32)*($38 + [8])) ){ goto $label$40 }
	$42 = *($0)
	CALL eosio_assert([1], [160])
	$36 = *($45 + [264])
	CALL eosio_assert(((int_32)*($38 + [16]) == (int_32)$36), [208])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$2()), [256])
	$37 = ($38 + [10])
	*($18) = *($37)
	*($37) = [2]
	$35 = ($38 + [8])
	*($45 + [200]) = *($35)
	$40 = *($38)
	CALL eosio_assert([1], [320])
	*($7) = $4
	*($45 + [292]) = ($45 + [32])
	*($45 + [288]) = ($45 + [32])
	CALL $34(($45 + [288]), $38)
	CALL db_update_i64(*($38 + [20]), $42, ($45 + [32]), [15])
	if ( (uint_64)($40 <= *($36 + [16])) ){ goto $label$41 }
	*(($36 + [16])) = ( (int_64)-2 ? ((int_64)$40 + (int_64)1) : ((uint_64)$40 > (uint_64)(int_64)-3) )
	
.LABEL $label$41
	*($45 + [120]) = *($35)
	if ( (CALL memcmp(($45 + [200]), ($45 + [120]), [8]) == 0) ){ goto $label$42 }
	$34 = ($38 + [24])
	$35 = *($34)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$43 }
	$35 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227712, ($45 + [160]), $40)
	*($34) = $35
	
.LABEL $label$43
	CALL db_idx64_update($35, $42, ($45 + [120]))
	
.LABEL $label$42
	*($45 + [120]) = *($37)
	if ( (CALL memcmp($18, ($45 + [120]), [8]) == 0) ){ goto $label$44 }
	$37 = ($38 + [28])
	$38 = *($37)
	if ( ((int_32)$38 > (int_32)[-1]) ){ goto $label$45 }
	$38 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227713, ($45 + [160]), $40)
	*($37) = $38
	
.LABEL $label$45
	CALL db_idx64_update($38, $42, ($45 + [120]))
	
.LABEL $label$44
	$1 = ($1 + [-1])
	
.LABEL $label$40
	CALL $36(($45 + [256]))
	if ( *($45 + [260]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$30
	CALL $14(($45 + [200]), $6)
	*(($37 = (($45 + [184]) + [8]))) = [0]
	*($45 + [184]) = (int_64)0
	$38 = (*($15) - *($13))
	$36 = int_32($38 >> [4])
	if ( ($36 == 0) ){ goto $label$46 }
	if ( ((uint_32)$36 >= (uint_32)[268435456]) ){ goto $label$2 }
	$38 = CALL $172($38)
	*($37) = ($38 + ($36 << [4]))
	*($45 + [184]) = $38
	*($45 + [188]) = $38
	$37 = *($13)
	$36 = (*($15) - $37)
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$46 }
	CALL memcpy($38, $37, $36)
	*($45 + [188]) = (*($45 + [188]) + $36)
	
.LABEL $label$46
	*(($23 = (($45 + [160]) + [8]))) = (int_64)0
	*(($24 = (($45 + [160]) + [16]))) = (int_64)0
	*($45 + [160]) = (int_64)0
	*((($45 + [120]) + [16])) = (int_64)-1
	*($16) = *(*($45 + [260]))
	*($45 + [120]) = *($0)
	$36 = [0]
	*(($25 = (($45 + [120]) + [24]))) = [0]
	*(($26 = (($45 + [120]) + [28]))) = [0]
	*((($45 + [120]) + [32])) = [0]
	*((($45 + [120]) + [36])) = [0]
	*($45 + [112]) = ($45 + [120])
	*($45 + [288]) = (int_64)0
	CALL $37(($45 + [104]), ($45 + [112]), ($45 + [288]))
	$38 = *($45 + [108])
	if ( ($38 == 0) ){ goto $label$25 }
	$33 = [0]
	$42 = (int_64)-1
	$36 = [0]
	
.LOOP $label$47:
	$35 = *($45 + [184])
	$34 = *($45 + [188])
	$19 = ($36 & [65535])
	if ( ((uint_32)$19 >= (uint_32)int_32(($34 - $35) >> [4])) ){ goto $label$24 }
	$40 = *($38 + [16])
	if ( (int_64)($40 == 0) ){ goto $label$24 }
	$37 = *($38 + [24])
	if ( ((int_32)$37 == (int_32)[2]) ){ goto $label$51 }
	if ( $37 ){ goto $label$48 }
	if ( ((uint_64)$40 >= (uint_64)$42) ){ goto $label$52 }
	$37 = *($28)
	if ( ($37 == 0) ){ goto $label$53 }
	$35 = ($35 + ($19 << [4]))
	*(($38 = (($45 + [88]) + [8]))) = *(($35 + [8]))
	*($45 + [88]) = *($35)
	$40 = *(*($45 + [260]))
	*((($45 + [16]) + [8])) = *($38)
	*($45 + [16]) = *($45 + [88])
	$36 = ($36 + [1])
	$33 = ($37 + $33)
	$1 = CALL _ZN9cryptopix10setWinnersEhN5eosio5assetERNSt3__15stackI10submissionNS2_5dequeIS4_NS2_9allocatorIS4_EEEEEEy($0, ($1 & [255]), ($45 + [16]), ($45 + [160]), $40)
	if ( ($1 == 0) ){ goto $label$12 }
	$35 = *($45 + [184])
	$34 = *($45 + [188])
	$38 = *($45 + [108])
	
.LABEL $label$53
	$42 = *($38 + [16])
	
.LABEL $label$52
	if ( ((uint_32)($36 & [65535]) >= (uint_32)int_32(($34 - $35) >> [4])) ){ goto $label$48 }
	$40 = *($0)
	CALL eosio_assert(((int_32)$38 != (int_32)[0]), [160])
	$37 = *($45 + [112])
	CALL eosio_assert(((int_32)*($38 + [40]) == (int_32)$37), [208])
	CALL eosio_assert(((int_64)*($37) == (int_64)CALL $fimport$2()), [256])
	$35 = ($38 + [24])
	$39 = *($35)
	*($9) = $39
	$34 = ($38 + [8])
	$41 = *($34)
	*($45 + [288]) = $41
	$19 = ($38 + [16])
	*($45 + [296]) = ((int_64)*($19) ^ (int_64)-1)
	*((($45 + [288]) + [40])) = $41
	*($10) = $39
	$39 = *($38)
	*($35) = [2]
	CALL eosio_assert([1], [320])
	*((($45 + [272]) + [8])) = $11
	*($45 + [276]) = ($45 + [32])
	*($45 + [272]) = ($45 + [32])
	CALL $39(($45 + [272]), $38)
	CALL db_update_i64(*($38 + [44]), $40, ($45 + [32]), [33])
	if ( (uint_64)($39 <= *($37 + [16])) ){ goto $label$54 }
	*(($37 + [16])) = ( (int_64)-2 ? ((int_64)$39 + (int_64)1) : ((uint_64)$39 > (uint_64)(int_64)-3) )
	
.LABEL $label$54
	*($45 + [352]) = *($34)
	if ( (CALL memcmp(($45 + [288]), ($45 + [352]), [8]) == 0) ){ goto $label$55 }
	$27 = ($38 + [48])
	$32 = *($27)
	if ( ((int_32)$32 > (int_32)[-1]) ){ goto $label$56 }
	$32 = CALL db_idx64_find_primary(*($37), *($37 + [8]), (int_64)-4139046226129272832, ($45 + [336]), $39)
	*($27) = $32
	
.LABEL $label$56
	CALL db_idx64_update($32, $40, ($45 + [352]))
	
.LABEL $label$55
	*($45 + [352]) = ((int_64)*($19) ^ (int_64)-1)
	if ( (CALL memcmp($8, ($45 + [352]), [8]) == 0) ){ goto $label$57 }
	$32 = ($38 + [52])
	$19 = *($32)
	if ( ((int_32)$19 > (int_32)[-1]) ){ goto $label$58 }
	$19 = CALL db_idx64_find_primary(*($37), *($37 + [8]), (int_64)-4139046226129272831, ($45 + [336]), $39)
	*($32) = $19
	
.LABEL $label$58
	CALL db_idx64_update($19, $40, ($45 + [352]))
	
.LABEL $label$57
	*($45 + [352]) = *($35)
	if ( (CALL memcmp($9, ($45 + [352]), [8]) == 0) ){ goto $label$59 }
	$32 = ($38 + [56])
	$19 = *($32)
	if ( ((int_32)$19 > (int_32)[-1]) ){ goto $label$60 }
	$19 = CALL db_idx64_find_primary(*($37), *($37 + [8]), (int_64)-4139046226129272830, ($45 + [336]), $39)
	*($32) = $19
	
.LABEL $label$60
	CALL db_idx64_update($19, $40, ($45 + [352]))
	
.LABEL $label$59
	*($45 + [360]) = *($34)
	*($45 + [352]) = *($35)
	if ( (CALL memcmp($10, ($45 + [352]), [16]) == 0) ){ goto $label$61 }
	$35 = ($38 + [60])
	$38 = *($35)
	if ( ((int_32)$38 > (int_32)[-1]) ){ goto $label$62 }
	$38 = CALL db_idx128_find_primary(*($37), *($37 + [8]), (int_64)-4139046226129272829, ($45 + [336]), $39)
	*($35) = $38
	
.LABEL $label$62
	CALL db_idx128_update($38, $40, ($45 + [352]))
	
.LABEL $label$61
	$19 = *($45 + [108])
	$34 = *($24)
	$38 = *($28)
	$37 = *($45 + [164])
	$35 = *($23)
	$38 = int_32(($35 - $37) >> [2])
	if ( ((int_32)( (((int_32)$38 * (int_32)[102]) + [-1]) ? [0] : $38 ) != (int_32)($38 + $34)) ){ goto $label$63 }
	CALL $40(($45 + [160]))
	$35 = *($23)
	$34 = *($24)
	$38 = *($28)
	$37 = *($45 + [164])
	
.LABEL $label$63
	if ( ((int_32)$35 == (int_32)$37) ){ goto $label$50 }
	$35 = ($38 + $34)
	$37 = (*(($37 + (((uint_32)$35 / (uint_32)[102]) << [2]))) + ((int_32)((uint_32)$35 % (uint_32)[102]) * (int_32)[40]))
	goto $label$49 
	
.LABEL $label$51
	$38 = (uint_64)($40 <= $42)
	$42 = ( $40 ? $42 : $38 )
	$36 = ($38 + $36)
	goto $label$48 
	
.LABEL $label$50
	$37 = [0]
	
.LABEL $label$49
	$1 = ($1 + [-1])
	CALL memcpy($37, $19, [40])
	*($28) = ($38 + [1])
	
.LABEL $label$48
	CALL $41(($45 + [104]))
	$38 = *($45 + [108])
	if ( $38 ){ goto $label$47 }
	goto $label$24 
	
.LABEL $label$29
	*($7) = *($38)
	*($9) = (int_64)-1
	*(($24 = (($45 + [288]) + [24]))) = [0]
	*($45 + [288]) = *($0)
	*(($25 = (($45 + [288]) + [28]))) = [0]
	*($10) = [0]
	*((($45 + [288]) + [36])) = [0]
	*($45 + [184]) = ($45 + [288])
	*($45 + [120]) = (int_64)0
	CALL $42(($45 + [200]), ($45 + [184]), ($45 + [120]))
	$34 = *($45 + [204])
	if ( ($34 == 0) ){ goto $label$26 }
	if ( ((int_64)*($45 + [120]) != (int_64)*($34 + [8])) ){ goto $label$26 }
	if ( ($34 == 0) ){ goto $label$26 }
	if ( (*($34 + [36]) == 0) ){ goto $label$13 }
	CALL _ZN9cryptopix16getParticipationEhRK6winnerRK6canvas(($45 + [336]), $0, ($1 & [255]), $34, *($45 + [260]))
	$42 = *($0)
	CALL eosio_assert([1], [160])
	$38 = *($45 + [184])
	CALL eosio_assert(((int_32)*($34 + [40]) == (int_32)$38), [208])
	CALL eosio_assert(((int_64)*($38) == (int_64)CALL $fimport$2()), [256])
	$36 = ($34 + [8])
	*($45 + [352]) = *($36)
	*($34 + [32]) = *($45 + [336])
	$40 = *($34)
	*($34 + [36]) = *($45 + [340])
	CALL eosio_assert([1], [320])
	*($18) = $11
	*($45 + [204]) = ($45 + [32])
	*($45 + [200]) = ($45 + [32])
	CALL $48(($45 + [200]), $34)
	CALL db_update_i64(*($34 + [44]), $42, ($45 + [32]), [33])
	if ( (uint_64)($40 <= *($38 + [16])) ){ goto $label$64 }
	*(($38 + [16])) = ( (int_64)-2 ? ((int_64)$40 + (int_64)1) : ((uint_64)$40 > (uint_64)(int_64)-3) )
	
.LABEL $label$64
	*($45 + [120]) = *($36)
	if ( (CALL memcmp(($45 + [352]), ($45 + [120]), [8]) == 0) ){ goto $label$65 }
	$37 = ($34 + [48])
	$36 = *($37)
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$66 }
	$36 = CALL db_idx64_find_primary(*($38), *($38 + [8]), (int_64)-2042605236735967232, ($45 + [160]), $40)
	*($37) = $36
	
.LABEL $label$66
	CALL db_idx64_update($36, $42, ($45 + [120]))
	
.LABEL $label$65
	$23 = [0]
	goto $label$6 
	
.LABEL $label$28
	$40 = *($38)
	*($18) = $40
	*((($45 + [200]) + [16])) = (int_64)-1
	*($31) = [0]
	$42 = *($0)
	*($45 + [200]) = $42
	*(($35 = (($45 + [200]) + [28]))) = [0]
	*($13) = [0]
	*(($15 + [2])) = [0]
	*($15) = [0]
	$38 = CALL db_lowerbound_i64($42, $40, (int_64)-2507766120631500800, (int_64)0)
	if ( ((int_32)$38 < (int_32)[0]) ){ goto $label$67 }
	CALL $50(($45 + [200]), $38)
	$1 = CALL $51(($45 + [200]), ($1 & [255]))
	if ( ($1 == 0) ){ goto $label$21 }
	
.LABEL $label$67
	*($9) = (int_64)-1
	*($7) = *(*($45 + [260]))
	*($45 + [288]) = *($0)
	*(($34 = (($45 + [288]) + [24]))) = [0]
	*(($23 = (($45 + [288]) + [28]))) = [0]
	*($10) = [0]
	*((($45 + [288]) + [36])) = [0]
	*($45 + [184]) = ($45 + [288])
	*($45 + [120]) = (int_64)0
	CALL $52(($45 + [272]), ($45 + [184]), ($45 + [120]))
	$38 = *($45 + [276])
	if ( ($38 == 0) ){ goto $label$69 }
	if ( ((int_32)*($38 + [24]) != (int_32)[2]) ){ goto $label$68 }
	
.LABEL $label$69
	$42 = *($0)
	$38 = *($45 + [260])
	CALL eosio_assert(((int_32)$38 != (int_32)[0]), [160])
	$36 = *($45 + [264])
	CALL eosio_assert(((int_32)*($38 + [16]) == (int_32)$36), [208])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$2()), [256])
	$37 = ($38 + [10])
	*($16) = *($37)
	*($37) = [5]
	$19 = ($38 + [8])
	*($45 + [120]) = *($19)
	$40 = *($38)
	CALL eosio_assert([1], [320])
	*((($45 + [160]) + [8])) = $4
	*($45 + [164]) = ($45 + [32])
	*($45 + [160]) = ($45 + [32])
	CALL $34(($45 + [160]), $38)
	CALL db_update_i64(*($38 + [20]), $42, ($45 + [32]), [15])
	if ( (uint_64)($40 <= *($36 + [16])) ){ goto $label$70 }
	*(($36 + [16])) = ( (int_64)-2 ? ((int_64)$40 + (int_64)1) : ((uint_64)$40 > (uint_64)(int_64)-3) )
	
.LABEL $label$70
	*($45 + [352]) = *($19)
	if ( (CALL memcmp(($45 + [120]), ($45 + [352]), [8]) == 0) ){ goto $label$71 }
	$24 = ($38 + [24])
	$19 = *($24)
	if ( ((int_32)$19 > (int_32)[-1]) ){ goto $label$72 }
	$19 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227712, ($45 + [336]), $40)
	*($24) = $19
	
.LABEL $label$72
	CALL db_idx64_update($19, $42, ($45 + [352]))
	
.LABEL $label$71
	*($45 + [352]) = *($37)
	if ( (CALL memcmp($16, ($45 + [352]), [8]) == 0) ){ goto $label$73 }
	$37 = ($38 + [28])
	$38 = *($37)
	if ( ((int_32)$38 > (int_32)[-1]) ){ goto $label$74 }
	$38 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227713, ($45 + [336]), $40)
	*($37) = $38
	
.LABEL $label$74
	CALL db_idx64_update($38, $42, ($45 + [352]))
	
.LABEL $label$73
	$1 = ($1 + [-1])
	goto $label$16 
	
.LABEL $label$68
	
.LOOP $label$75:
	if ( (($1 & [255]) == 0) ){ goto $label$17 }
	$40 = *($45 + [272])
	*($45 + [120]) = $40
	$38 = (CASTING uint_32)(uint_64 (uint_64)$40 >> (uint_64)(int_64)32)
	CALL eosio_assert(((int_32)$38) != (int_32)[0]), [624])
	CALL $53(($45 + [120]))
	CALL $54(*($45 + [184]), $38)
	$40 = *($45 + [120])
	*($45 + [272]) = $40
	$1 = ($1 + [-1])
	$38 = (CASTING uint_32)(uint_64 (uint_64)$40 >> (uint_64)(int_64)32)
	if ( ($38) == 0) ){ goto $label$16 }
	if ( ((int_32)*($38 + [24]) != (int_32)[2]) ){ goto $label$75 }
	goto $label$16 
	
.LABEL $label$27
	if ( ((int_32)$17 == (int_32)*($38 + [8])) ){ goto $label$76 }
	$42 = *($0)
	CALL eosio_assert([1], [160])
	$36 = *($45 + [264])
	CALL eosio_assert(((int_32)*($38 + [16]) == (int_32)$36), [208])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$2()), [256])
	$37 = ($38 + [10])
	*($18) = *($37)
	*($37) = [6]
	$35 = ($38 + [8])
	*($45 + [200]) = *($35)
	$40 = *($38)
	CALL eosio_assert([1], [320])
	*($7) = $4
	*($45 + [292]) = ($45 + [32])
	*($45 + [288]) = ($45 + [32])
	CALL $34(($45 + [288]), $38)
	CALL db_update_i64(*($38 + [20]), $42, ($45 + [32]), [15])
	if ( (uint_64)($40 <= *($36 + [16])) ){ goto $label$77 }
	*(($36 + [16])) = ( (int_64)-2 ? ((int_64)$40 + (int_64)1) : ((uint_64)$40 > (uint_64)(int_64)-3) )
	
.LABEL $label$77
	*($45 + [120]) = *($35)
	if ( (CALL memcmp(($45 + [200]), ($45 + [120]), [8]) == 0) ){ goto $label$78 }
	$34 = ($38 + [24])
	$35 = *($34)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$79 }
	$35 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227712, ($45 + [160]), $40)
	*($34) = $35
	
.LABEL $label$79
	CALL db_idx64_update($35, $42, ($45 + [120]))
	
.LABEL $label$78
	*($45 + [120]) = *($37)
	if ( (CALL memcmp($18, ($45 + [120]), [8]) == 0) ){ goto $label$80 }
	$37 = ($38 + [28])
	$38 = *($37)
	if ( ((int_32)$38 > (int_32)[-1]) ){ goto $label$81 }
	$38 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227713, ($45 + [160]), $40)
	*($37) = $38
	
.LABEL $label$81
	CALL db_idx64_update($38, $42, ($45 + [120]))
	
.LABEL $label$80
	$1 = ($1 + [-1])
	
.LABEL $label$76
	CALL $36(($45 + [256]))
	if ( *($45 + [260]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$26
	$42 = *($0)
	$38 = *($45 + [260])
	CALL eosio_assert(((int_32)$38 != (int_32)[0]), [160])
	$36 = *($45 + [264])
	CALL eosio_assert(((int_32)*($38 + [16]) == (int_32)$36), [208])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$2()), [256])
	$37 = ($38 + [10])
	*($18) = *($37)
	*($37) = [4]
	$35 = ($38 + [8])
	*($45 + [200]) = *($35)
	$40 = *($38)
	CALL eosio_assert([1], [320])
	*($16) = $4
	*($45 + [124]) = ($45 + [32])
	*($45 + [120]) = ($45 + [32])
	CALL $34(($45 + [120]), $38)
	CALL db_update_i64(*($38 + [20]), $42, ($45 + [32]), [15])
	if ( (uint_64)($40 <= *($36 + [16])) ){ goto $label$82 }
	*(($36 + [16])) = ( (int_64)-2 ? ((int_64)$40 + (int_64)1) : ((uint_64)$40 > (uint_64)(int_64)-3) )
	
.LABEL $label$82
	*($45 + [160]) = *($35)
	if ( (CALL memcmp(($45 + [200]), ($45 + [160]), [8]) == 0) ){ goto $label$83 }
	$34 = ($38 + [24])
	$35 = *($34)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$84 }
	$35 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227712, ($45 + [352]), $40)
	*($34) = $35
	
.LABEL $label$84
	CALL db_idx64_update($35, $42, ($45 + [160]))
	
.LABEL $label$83
	*($45 + [160]) = *($37)
	if ( (CALL memcmp($18, ($45 + [160]), [8]) == 0) ){ goto $label$85 }
	$37 = ($38 + [28])
	$38 = *($37)
	if ( ((int_32)$38 > (int_32)[-1]) ){ goto $label$86 }
	$38 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227713, ($45 + [352]), $40)
	*($37) = $38
	
.LABEL $label$86
	CALL db_idx64_update($38, $42, ($45 + [160]))
	
.LABEL $label$85
	$23 = ($1 + [-1])
	goto $label$6 
	
.LABEL $label$25
	$33 = [0]
	
.LABEL $label$24
	$38 = *($28)
	if ( ($38 == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$23
	CALL $36(($45 + [256]))
	$35 = [0]
	$37 = *($1)
	if ( ($37 == 0) ){ goto $label$18 }
	
.LABEL $label$22
	$38 = *($23)
	if ( ((int_32)$38 == (int_32)$37) ){ goto $label$20 }
	
.LOOP $label$87:
	$38 = ($38 + [-24])
	$36 = *($38)
	*($38) = [0]
	if ( ($36 == 0) ){ goto $label$88 }
	CALL $173($36)
	
.LABEL $label$88
	if ( ((int_32)$37 != (int_32)$38) ){ goto $label$87 }
	$38 = *($1)
	goto $label$19 
	
.LABEL $label$21
	$1 = [0]
	$34 = [0]
	$37 = *($31)
	if ( $37 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$20
	$38 = $37
	
.LABEL $label$19
	*($23) = $37
	CALL $173($38)
	
.LABEL $label$18
	$37 = *($31)
	if ( ($37 == 0) ){ goto $label$89 }
	$38 = *($34)
	if ( ((int_32)$38 == (int_32)$37) ){ goto $label$91 }
	
.LOOP $label$92:
	$38 = ($38 + [-24])
	$36 = *($38)
	*($38) = [0]
	if ( ($36 == 0) ){ goto $label$93 }
	CALL $173($36)
	
.LABEL $label$93
	if ( ((int_32)$37 != (int_32)$38) ){ goto $label$92 }
	$38 = *($31)
	goto $label$90 
	
.LABEL $label$91
	$38 = $37
	
.LABEL $label$90
	*($34) = $37
	CALL $173($38)
	
.LABEL $label$89
	$1 = $35
	goto $label$9 
	
.LABEL $label$17
	$1 = [0]
	
.LABEL $label$16
	CALL $36(($45 + [256]))
	$37 = *($34)
	if ( ($37 == 0) ){ goto $label$94 }
	$38 = *($23)
	if ( ((int_32)$38 == (int_32)$37) ){ goto $label$96 }
	
.LOOP $label$97:
	$38 = ($38 + [-24])
	$36 = *($38)
	*($38) = [0]
	if ( ($36 == 0) ){ goto $label$98 }
	CALL $173($36)
	
.LABEL $label$98
	if ( ((int_32)$37 != (int_32)$38) ){ goto $label$97 }
	$38 = *($34)
	goto $label$95 
	
.LABEL $label$96
	$38 = $37
	
.LABEL $label$95
	*($23) = $37
	CALL $173($38)
	
.LABEL $label$94
	$34 = [1]
	$37 = *($31)
	if ( ($37 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$38 = *($35)
	if ( ((int_32)$38 == (int_32)$37) ){ goto $label$100 }
	
.LOOP $label$101:
	$38 = ($38 + [-24])
	$36 = *($38)
	*($38) = [0]
	if ( ($36 == 0) ){ goto $label$102 }
	CALL $173($36)
	
.LABEL $label$102
	if ( ((int_32)$37 != (int_32)$38) ){ goto $label$101 }
	$38 = *($31)
	goto $label$99 
	
.LABEL $label$100
	$38 = $37
	
.LABEL $label$99
	*($35) = $37
	CALL $173($38)
	
.LABEL $label$14
	if ( $34 ){ goto $label$9 }
	goto $label$4 
	
.LABEL $label$13
	$40 = ((int_64)*($34) | (int_64)((int_64)*(*($45 + [260])) << (int_64)32))
	*($16) = $40
	$42 = *($0)
	*($45 + [120]) = $42
	*((($45 + [120]) + [16])) = (int_64)-1
	$35 = [0]
	*(($26 = (($45 + [120]) + [24]))) = [0]
	*(($32 = (($45 + [120]) + [28]))) = [0]
	*((($45 + [120]) + [32])) = [0]
	$38 = CALL db_lowerbound_i64($42, $40, (int_64)-4131108868577034240, (int_64)0)
	if ( ((int_32)$38 < (int_32)[0]) ){ goto $label$103 }
	$35 = CALL $43(($45 + [120]), $38)
	
.LABEL $label$103
	
.LOOP $label$106:
	if ( ($35 == 0) ){ goto $label$105 }
	$21 = (Rounds 0)(CALL floor(((float_64)(CASTING float_64)(int_64 *(($34 + [16]))) * (float_64)((float_64)(CASTING float_64)(uint_32 *($35 + [8])) / (float_64)(CASTING float_64)(uint_32 *(($34 + [32])))))))
	CALL eosio_assert((uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [704])
	$40 = (int_64)5462096
	$38 = [0]
	
.LOOP $label$109:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $40) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$108 }
	$40 = (uint_64)$40 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$40) & (int_64)255) != (int_64)0) ){ goto $label$110 }
	
.LOOP $label$111:
	$40 = (uint_64)$40 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$40) & (int_64)255) != (int_64)0) ){ goto $label$108 }
	$38 = ($38 + [1])
	if ( ((int_32)$38 < (int_32)[7]) ){ goto $label$111 }
	
.LABEL $label$110
	$36 = [1]
	$38 = ($38 + [1])
	if ( ((int_32)$38 < (int_32)[7]) ){ goto $label$109 }
	goto $label$107 
	
.LABEL $label$108
	$36 = [0]
	
.LABEL $label$107
	CALL eosio_assert($36, [496])
	$20 = *($0)
	$40 = (int_64)0
	$39 = (int_64)59
	$38 = [528]
	$41 = (int_64)0
	
.LOOP $label$112:
	if ( ((uint_64)$40 > (uint_64)(int_64)5) ){ goto $label$117 }
	$36 = *($38)
	if ( ((uint_32)(($36 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$116 }
	$36 = ($36 + [165])
	goto $label$115 
	
.LABEL $label$117
	$42 = (int_64)0
	if ( ((uint_64)$40 <= (uint_64)(int_64)11) ){ goto $label$114 }
	goto $label$113 
	
.LABEL $label$116
	$36 = ( ($36 + [208]) ? [0] : ((($36 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$115
	$42 = (int_64)((int_64)(CASTING uint_64)(uint_32 $36) << (int_64)56) >> (int_64)56)
	
.LABEL $label$114
	$42 = ((int_64)((int_64)$42 & (int_64)31) << (int_64)((int_64)$39 & (int_64)4294967295))
	
.LABEL $label$113
	$38 = ($38 + [1])
	$40 = ((int_64)$40 + (int_64)1)
	$41 = ((int_64)$42 | (int_64)$41)
	$39 = ((int_64)$39 + (int_64)-5)
	if ( ((int_64)$39 != (int_64)-6) ){ goto $label$112 }
	$40 = (int_64)0
	$42 = (int_64)59
	$38 = [544]
	$43 = (int_64)0
	
.LOOP $label$118:
	$39 = (int_64)0
	if ( ((uint_64)$40 > (uint_64)(int_64)11) ){ goto $label$119 }
	$36 = *($38)
	if ( ((uint_32)(($36 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$36 = ($36 + [165])
	goto $label$120 
	
.LABEL $label$121
	$36 = ( ($36 + [208]) ? [0] : ((($36 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$39 = ((int_64)(CASTING uint_64)(uint_32 ($36 & [31])) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$119
	$38 = ($38 + [1])
	$40 = ((int_64)$40 + (int_64)1)
	$43 = ((int_64)$39 | (int_64)$43)
	$42 = ((int_64)$42 + (int_64)-5)
	if ( ((int_64)$42 != (int_64)-6) ){ goto $label$118 }
	$40 = (int_64)0
	$39 = (int_64)59
	$38 = [560]
	$44 = (int_64)0
	
.LOOP $label$122:
	if ( ((uint_64)$40 > (uint_64)(int_64)7) ){ goto $label$127 }
	$36 = *($38)
	if ( ((uint_32)(($36 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$126 }
	$36 = ($36 + [165])
	goto $label$125 
	
.LABEL $label$127
	$42 = (int_64)0
	if ( ((uint_64)$40 <= (uint_64)(int_64)11) ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$126
	$36 = ( ($36 + [208]) ? [0] : ((($36 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$125
	$42 = (int_64)((int_64)(CASTING uint_64)(uint_32 $36) << (int_64)56) >> (int_64)56)
	
.LABEL $label$124
	$42 = ((int_64)((int_64)$42 & (int_64)31) << (int_64)((int_64)$39 & (int_64)4294967295))
	
.LABEL $label$123
	$38 = ($38 + [1])
	$40 = ((int_64)$40 + (int_64)1)
	$44 = ((int_64)$42 | (int_64)$44)
	$39 = ((int_64)$39 + (int_64)-5)
	if ( ((int_64)$39 != (int_64)-6) ){ goto $label$122 }
	*(($36 = (($45 + [352]) + [8]))) = [0]
	*($45 + [352]) = (int_64)0
	$38 = CALL strlen([576])
	if ( ((uint_32)$38 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$38 >= (uint_32)[11]) ){ goto $label$130 }
	*($45 + [352]) = ($38 << [1])
	$1 = $12
	if ( $38 ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$130
	$23 = (($38 + [16]) & [-16])
	$1 = CALL $172($23)
	*($36) = $1
	*($45 + [352]) = ($23 | [1])
	*($45 + [356]) = $38
	
.LABEL $label$129
	CALL memcpy($1, [576], $38)
	
.LABEL $label$128
	*(($1 + $38)) = [0]
	*($18) = *($35)
	*($31) = (int_64)1398296580
	*((($45 + [200]) + [16])) = $21
	*(($13 + [4])) = *($45 + [356 align=4])
	*($45 + [200]) = *($0)
	*($13) = *($45 + [352])
	*($45 + [352]) = [0]
	*($45 + [356]) = [0]
	*($36) = [0]
	*((($45 + [32]) + [8])) = $44
	*($45 + [32]) = $43
	*(($1 = (($45 + [32]) + [16]))) = [0]
	*(($23 = (($45 + [32]) + [20]))) = [0]
	*(($33 = (($45 + [32]) + [24]))) = [0]
	$38 = CALL $172([16])
	*($1) = $38
	*($38) = $20
	*($38 + [8]) = $41
	*($14) = [0]
	*(($19 = (($45 + [32]) + [32]))) = [0]
	$38 = ($38 + [16])
	*($33) = $38
	*($23) = $38
	*((($45 + [32]) + [36])) = [0]
	$38 = *($13)
	$33 = ( *($15) ? uint_32($38 >> [1]) : ($38 & [1]) )
	$38 = ($33 + [32])
	$40 = (CASTING uint_64)(uint_32 $33)
	
.LOOP $label$131:
	$38 = ($38 + [1])
	$40 = (uint_64)$40 >> (uint_64)(int_64)7
	if ( ((int_64)$40) != (int_64)0) ){ goto $label$131 }
	if ( ($38 == 0) ){ goto $label$133 }
	CALL $44($14, $38)
	$33 = *($19)
	$38 = *($14)
	goto $label$132 
	
.LABEL $label$133
	$33 = [0]
	$38 = [0]
	
.LABEL $label$132
	*((($45 + [160]) + [8])) = $33
	*($45 + [164]) = $38
	*($45 + [160]) = $38
	*($45 + [272]) = ($45 + [160])
	*($45 + [336]) = ($45 + [200])
	CALL $45(($45 + [336]), ($45 + [272]))
	CALL $46(($45 + [160]), ($45 + [32]))
	$38 = *($45 + [160])
	CALL send_inline($38, (*($45 + [164]) - $38))
	$38 = *($45 + [160])
	if ( ($38 == 0) ){ goto $label$134 }
	*($45 + [164]) = $38
	CALL $173($38)
	
.LABEL $label$134
	$38 = *($14)
	if ( ($38 == 0) ){ goto $label$135 }
	*($19) = $38
	CALL $173($38)
	
.LABEL $label$135
	$38 = *($1)
	if ( ($38 == 0) ){ goto $label$136 }
	*($23) = $38
	CALL $173($38)
	
.LABEL $label$136
	if ( ((*($13) & [1]) == 0) ){ goto $label$137 }
	CALL $173(*((($45 + [200]) + [40])))
	
.LABEL $label$137
	if ( ((*($45 + [352]) & [1]) == 0) ){ goto $label$138 }
	CALL $173(*($36))
	
.LABEL $label$138
	CALL eosio_assert([1], [624])
	CALL eosio_assert([1], [672])
	$23 = [0]
	$38 = [0]
	$36 = CALL db_next_i64(*($35 + [20]), ($45 + [200]))
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$139 }
	$38 = CALL $43(($45 + [120]), $36)
	
.LABEL $label$139
	CALL $47(($45 + [120]), $35)
	$35 = $38
	$1 = ($37 + [254])
	$37 = ($1 & [255])
	if ( $37 ){ goto $label$106 }
	goto $label$104 
	
.LABEL $label$105
	$42 = *($0)
	CALL eosio_assert([1], [160])
	$38 = *($45 + [184])
	CALL eosio_assert(((int_32)*($34 + [40]) == (int_32)$38), [208])
	CALL eosio_assert(((int_64)*($38) == (int_64)CALL $fimport$2()), [256])
	$36 = ($34 + [8])
	$40 = *($36)
	*($36) = [1]
	*($45 + [336]) = $40
	$40 = *($34)
	CALL eosio_assert([1], [320])
	*($18) = $11
	*($45 + [204]) = ($45 + [32])
	*($45 + [200]) = ($45 + [32])
	CALL $48(($45 + [200]), $34)
	CALL db_update_i64(*($34 + [44]), $42, ($45 + [32]), [33])
	if ( (uint_64)($40 <= *($38 + [16])) ){ goto $label$140 }
	*(($38 + [16])) = ( (int_64)-2 ? ((int_64)$40 + (int_64)1) : ((uint_64)$40 > (uint_64)(int_64)-3) )
	
.LABEL $label$140
	*($45 + [160]) = *($36)
	if ( (CALL memcmp(($45 + [336]), ($45 + [160]), [8]) == 0) ){ goto $label$141 }
	$37 = ($34 + [48])
	$36 = *($37)
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$142 }
	$36 = CALL db_idx64_find_primary(*($38), *($38 + [8]), (int_64)-2042605236735967232, ($45 + [352]), $40)
	*($37) = $36
	
.LABEL $label$142
	CALL db_idx64_update($36, $42, ($45 + [160]))
	
.LABEL $label$141
	$23 = $1
	
.LABEL $label$104
	$37 = *($26)
	if ( ($37 == 0) ){ goto $label$6 }
	$38 = *($32)
	if ( ((int_32)$38 == (int_32)$37) ){ goto $label$8 }
	
.LOOP $label$143:
	$38 = ($38 + [-24])
	$36 = *($38)
	*($38) = [0]
	if ( ($36 == 0) ){ goto $label$144 }
	CALL $173($36)
	
.LABEL $label$144
	if ( ((int_32)$37 != (int_32)$38) ){ goto $label$143 }
	$38 = *($26)
	goto $label$7 
	
.LABEL $label$12
	$1 = [0]
	$38 = *($28)
	if ( ($38 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$37 = *($45 + [184])
	$36 = ($36 & [65535])
	if ( ((uint_32)$36 >= (uint_32)int_32((*($45 + [188]) - $37) >> [4])) ){ goto $label$10 }
	$36 = ($37 + ($36 << [4]))
	*(($35 = (($45 + [72]) + [8]))) = *(($36 + [8]))
	*($45 + [72]) = *($36)
	$40 = *(*($45 + [260]))
	*(($45 + [8])) = *($35)
	*($45) = *($45 + [72])
	CALL _ZN9cryptopix10setWinnersEhN5eosio5assetERNSt3__15stackI10submissionNS2_5dequeIS4_NS2_9allocatorIS4_EEEEEEy($0, ($1 & [255]), $45, ($45 + [160]), $40)
	$33 = ($38 + $33)
	
.LABEL $label$10
	if ( $33 ){ goto $label$145 }
	$42 = *($0)
	$38 = *($45 + [260])
	CALL eosio_assert(((int_32)$38 != (int_32)[0]), [160])
	$36 = *($45 + [264])
	CALL eosio_assert(((int_32)*($38 + [16]) == (int_32)$36), [208])
	CALL eosio_assert(((int_64)*($36) == (int_64)CALL $fimport$2()), [256])
	$37 = ($38 + [10])
	*($7) = *($37)
	*($37) = [3]
	$35 = ($38 + [8])
	*($45 + [288]) = *($35)
	$40 = *($38)
	CALL eosio_assert([1], [320])
	*((($45 + [352]) + [8])) = $4
	*($45 + [356]) = ($45 + [32])
	*($45 + [352]) = ($45 + [32])
	CALL $34(($45 + [352]), $38)
	CALL db_update_i64(*($38 + [20]), $42, ($45 + [32]), [15])
	if ( (uint_64)($40 <= *($36 + [16])) ){ goto $label$146 }
	*(($36 + [16])) = ( (int_64)-2 ? ((int_64)$40 + (int_64)1) : ((uint_64)$40 > (uint_64)(int_64)-3) )
	
.LABEL $label$146
	*($45 + [336]) = *($35)
	if ( (CALL memcmp(($45 + [288]), ($45 + [336]), [8]) == 0) ){ goto $label$147 }
	$34 = ($38 + [24])
	$35 = *($34)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$148 }
	$35 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227712, ($45 + [272]), $40)
	*($34) = $35
	
.LABEL $label$148
	CALL db_idx64_update($35, $42, ($45 + [336]))
	
.LABEL $label$147
	*($45 + [336]) = *($37)
	if ( (CALL memcmp($7, ($45 + [336]), [8]) == 0) ){ goto $label$149 }
	$37 = ($38 + [28])
	$38 = *($37)
	if ( ((int_32)$38 > (int_32)[-1]) ){ goto $label$150 }
	$38 = CALL db_idx64_find_primary(*($36), *($36 + [8]), (int_64)4730947158474227713, ($45 + [272]), $40)
	*($37) = $38
	
.LABEL $label$150
	CALL db_idx64_update($38, $42, ($45 + [336]))
	
.LABEL $label$149
	$1 = ($1 + [-1])
	
.LABEL $label$145
	CALL $36(($45 + [256]))
	$37 = *($25)
	if ( ($37 == 0) ){ goto $label$151 }
	$38 = *($26)
	if ( ((int_32)$38 == (int_32)$37) ){ goto $label$153 }
	
.LOOP $label$154:
	$38 = ($38 + [-24])
	$36 = *($38)
	*($38) = [0]
	if ( ($36 == 0) ){ goto $label$155 }
	CALL $173($36)
	
.LABEL $label$155
	if ( ((int_32)$37 != (int_32)$38) ){ goto $label$154 }
	$38 = *($25)
	goto $label$152 
	
.LABEL $label$153
	$38 = $37
	
.LABEL $label$152
	*($26) = $37
	CALL $173($38)
	
.LABEL $label$151
	$34 = *($24)
	$38 = *($45 + [164])
	$35 = ($38 + (((uint_32)$34 / (uint_32)[102]) << [2]))
	$37 = *($23)
	if ( ((int_32)$37 == (int_32)$38) ){ goto $label$158 }
	$34 = (*($28) + $34)
	$34 = (*(($38 + (((uint_32)$34 / (uint_32)[102]) << [2]))) + ((int_32)((uint_32)$34 % (uint_32)[102]) * (int_32)[40]))
	$36 = (*($35) + ((int_32)((uint_32)$34 % (uint_32)[102]) * (int_32)[40]))
	if ( ((int_32)$36 != (int_32)$34) ){ goto $label$157 }
	goto $label$156 
	
.LABEL $label$158
	$36 = [0]
	$34 = [0]
	if ( ((int_32)[0] == (int_32)[0]) ){ goto $label$156 }
	
.LABEL $label$157
	
.LOOP $label$159:
	$36 = ($36 + [40])
	if ( ((int_32)($36 - *($35)) != (int_32)[4080]) ){ goto $label$160 }
	$36 = *($35 + [4])
	$35 = ($35 + [4])
	
.LABEL $label$160
	if ( ((int_32)$36 != (int_32)$34) ){ goto $label$159 }
	
.LABEL $label$156
	*($28) = [0]
	$36 = int_32(($37 - $38) >> [2])
	if ( ($36 <= [3]) ){ goto $label$161 }
	
.LOOP $label$162:
	CALL $173(*($38))
	$38 = (*($45 + [164]) + [4])
	*($45 + [164]) = $38
	$37 = *($23)
	$36 = int_32(($37 - $38) >> [2])
	if ( ((uint_32)$36 > (uint_32)[2]) ){ goto $label$162 }
	
.LABEL $label$161
	if ( ((int_32)$36 == (int_32)[2]) ){ goto $label$165 }
	if ( ((int_32)$36 != (int_32)[1]) ){ goto $label$163 }
	$36 = [51]
	goto $label$164 
	
.LABEL $label$165
	$36 = [102]
	
.LABEL $label$164
	*($24) = $36
	
.LABEL $label$163
	if ( ((int_32)$38 == (int_32)$37) ){ goto $label$166 }
	
.LOOP $label$167:
	CALL $173(*($38))
	$38 = ($38 + [4])
	if ( ((int_32)$37 != (int_32)$38) ){ goto $label$167 }
	$36 = *($45 + [164])
	$38 = *($23)
	if ( ((int_32)$38 == (int_32)$36) ){ goto $label$166 }
	*($23) = ($38 + (((int_32)(($38 + [-4]) - $36) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$166
	$38 = *($45 + [160])
	if ( ($38 == 0) ){ goto $label$168 }
	CALL $173($38)
	
.LABEL $label$168
	$38 = *($45 + [184])
	if ( ($38 == 0) ){ goto $label$169 }
	*($45 + [188]) = $38
	CALL $173($38)
	
.LABEL $label$169
	$38 = *($29)
	if ( ($38 == 0) ){ goto $label$170 }
	*($30) = $38
	CALL $173($38)
	
.LABEL $label$170
	$38 = *($13)
	if ( ($38 == 0) ){ goto $label$9 }
	*($15) = $38
	CALL $173($38)
	if ( *($45 + [260]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$9
	if ( *($45 + [260]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	$38 = $37
	
.LABEL $label$7
	*($32) = $37
	CALL $173($38)
	
.LABEL $label$6
	CALL $36(($45 + [256]))
	$37 = *($24)
	if ( ($37 == 0) ){ goto $label$171 }
	$38 = *($25)
	if ( ((int_32)$38 == (int_32)$37) ){ goto $label$173 }
	
.LOOP $label$174:
	$38 = ($38 + [-24])
	$36 = *($38)
	*($38) = [0]
	if ( ($36 == 0) ){ goto $label$175 }
	CALL $173($36)
	
.LABEL $label$175
	if ( ((int_32)$37 != (int_32)$38) ){ goto $label$174 }
	$38 = *($24)
	goto $label$172 
	
.LABEL $label$173
	$38 = $37
	
.LABEL $label$172
	*($25) = $37
	CALL $173($38)
	
.LABEL $label$171
	$1 = $23
	if ( *($45 + [260]) ){ goto $label$5 }
	
.LABEL $label$4
	*([0] + [4]) = ($45 + [368])
	return (unreachable)
	
.LABEL $label$3
	CALL $174(($45 + [352]))
	
.LABEL $label$2
	CALL $177(($45 + [184]))
	$36
	(unreachable)
}

int_32 .FUNC _Z10getCycleOfm (int_32 $0)
{
	return (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)$0 / (uint_32)[86400]))))
}

int_32 .FUNC _Z8getCyclev ()
{
	return (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400]))))
}

int_32 .FUNC _Z9isInCyclemt (int_32 $0, int_32 $1)
{
	return ((int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)$0 / (uint_32)[86400])))) == (int_32)$1)
}

void .FUNC _ZN9cryptopix4drawEyNSt3__16vectorI3segNS0_9allocatorIS2_EEEE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	float_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [224])
	*([0] + [4]) = $22
	$6 = ($0 + [8])
	CALL $14(($22 + [72]), $6)
	CALL eosio_assert(((int_32)*($22 + [96]) ^ (int_32)[1]), [16])
	CALL require_auth($1)
	$11 = *(($0 + [112]))
	$16 = *(($0 + [116]))
	if ( ((int_32)$16 == (int_32)$11) ){ goto $label$1 }
	$19 = ($16 + [-24])
	$12 = ([0] - $11)
	
.LOOP $label$2:
	if ( ((int_64)*(*($19)) == (int_64)$1) ){ goto $label$1 }
	$16 = $19
	$20 = ($19 + [-24])
	$19 = $20
	if ( ((int_32)($20 + $12) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$3 = ($0 + [88])
	if ( ((int_32)$16 == (int_32)$11) ){ goto $label$5 }
	$19 = *(($16 + [-24]))
	CALL eosio_assert(((int_32)*($19 + [44]) == (int_32)$3), [32])
	*($22 + [68]) = $19
	*($22 + [64]) = $3
	$20 = (($22 + [64]) | [4])
	if ( $19 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$19 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$19 <= (int_32)[-1]) ){ goto $label$6 }
	$19 = CALL $15($3, $19)
	CALL eosio_assert(((int_32)*($19 + [44]) == (int_32)$3), [32])
	*($22 + [68]) = $19
	*($22 + [64]) = $3
	$20 = (($22 + [64]) | [4])
	goto $label$3 
	
.LABEL $label$6
	*($22 + [68]) = [0]
	*($22 + [64]) = $3
	$20 = (($22 + [64]) | [4])
	
.LABEL $label$4
	CALL _ZN9cryptopix13createAccountEy(($22 + [128]), $0, $1)
	$10 = *($22 + [128])
	*($22 + [64]) = $10
	$19 = (CASTING uint_32)(uint_64 (uint_64)$10 >> (uint_64)(int_64)32))
	
.LABEL $label$3
	$10 = *($19 + [16])
	CALL $14(($22 + [128]), $6)
	$4 = ((float_64)(CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) % (uint_32)[86400])) / (float_64)(float_64)86400)
	$4 = ((float_64)((float_64)(CASTING float_64)(int_64 $10) / (float_64)CALL fmax((CASTING float_64)(int_64 *($22 + [136])), (float_64)1)) * (float_64)((float_64)((float_64)((float_64)$4 * (float_64)((float_64)$4 * (float_64)(float_64)-0.5)) + (float_64)(float_64)1) * (float_64)(float_64)20))
	$19 = *($22 + [172])
	if ( ($19 == 0) ){ goto $label$7 }
	*(($22 + [176])) = $19
	CALL $173($19)
	
.LABEL $label$7
	$4 = ((float_64)(float_64)1 / (float_64)$4)
	$19 = *($22 + [160])
	if ( ($19 == 0) ){ goto $label$8 }
	*(($22 + [164])) = $19
	CALL $173($19)
	
.LABEL $label$8
	*($22 + [56]) = $4
	$19 = *($20)
	*($22 + [52]) = (CASTING uint_32)(float_64 CALL fmin((float_64)100, CALL $179(((float_64)(CASTING float_64)(uint_32 (((CASTING uint_32)(float_64 CALL $179((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) - *($19 + [8])) + *($19 + [12]))) / (float_64)$4))))
	CALL _ZN9cryptopix14checkGameStateEhb($0, [10], [1])
	*($22 + [48]) = ($0 + [48])
	*($22 + [24]) = (int_64)0
	CALL $18(($22 + [128]), ($22 + [48]), ($22 + [24]))
	$5 = [0]
	$20 = *($22 + [132])
	if ( ($20 == 0) ){ goto $label$9 }
	$5 = ( $20 ? [0] : ((int_64)*($22 + [24]) == (int_64)*($20 + [10])) )
	
.LABEL $label$9
	*($22 + [44]) = [0]
	*($22 + [144]) = (int_64)-1
	*($22 + [152]) = [0]
	$10 = *($0)
	*($22 + [128]) = $10
	*($22 + [136]) = *($5)
	*(($14 = ($22 + [156]))) = [0]
	*(($15 = ($22 + [160]))) = [0]
	*($22 + [164]) = [0]
	$6 = *($2 + [4])
	$20 = *($2)
	if ( ((int_32)$20 == (int_32)$6) ){ goto $label$11 }
	$8 = (($22 + [128]) + [24])
	$7 = (($22 + [24]) | [4])
	$17 = ($5 + [12])
	$18 = ($5 + [14])
	$9 = [0]
	
.LOOP $label$12:
	*(($16 = (($22 + [24]) + [8]))) = (int_64)0
	*($22 + [28]) = [0]
	*($22 + [24]) = *($20)
	$2 = ($20 + [8])
	$19 = (*($2) - *($20 + [4]))
	$12 = int_32($19 >> [2])
	if ( ($12 == 0) ){ goto $label$13 }
	if ( ((uint_32)$12 >= (uint_32)[1073741824]) ){ goto $label$10 }
	$19 = CALL $172($19)
	*((($22 + [24]) + [12])) = ($19 + ($12 << [2]))
	*($16) = $19
	*($22 + [28]) = $19
	$2 = *(($20 + [4]))
	$12 = (*($2) - $2)
	if ( ((int_32)$12 < (int_32)[1]) ){ goto $label$13 }
	CALL memcpy($19, $2, $12)
	*($16) = (*($16) + $12)
	
.LABEL $label$13
	$19 = [3]
	$12 = *($22 + [24])
	if ( ((uint_32)$12 >= (uint_32)((uint_32)((int_32)*($18) * (int_32)*($17)) / (uint_32)[50])) ){ goto $label$14 }
	$19 = [2]
	if ( ((uint_32)$9 > (uint_32)[50]) ){ goto $label$14 }
	if ( ((uint_32)(*($22 + [44]) + [1]) > (uint_32)*($22 + [52])) ){ goto $label$14 }
	$10 = (CASTING uint_64)(uint_32 $12)
	$13 = *($8)
	$2 = *($14)
	if ( ((int_32)$2 == (int_32)$13) ){ goto $label$15 }
	$19 = ($2 + [-24])
	$11 = ([0] - $13)
	
.LOOP $label$16:
	if ( ((int_64)*(*($19)) == (int_64)$10) ){ goto $label$15 }
	$2 = $19
	$12 = ($19 + [-24])
	$19 = $12
	if ( ((int_32)($12 + $11) != (int_32)[-24]) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ((int_32)$2 == (int_32)$13) ){ goto $label$18 }
	$21 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($21 + [24]) == (int_32)($22 + [128])), [32])
	goto $label$17 
	
.LABEL $label$18
	$21 = [0]
	$19 = CALL db_find_i64(*($22 + [128]), *((($22 + [128]) + [8])), (int_64)4730947171533193216, $10)
	if ( ((int_32)$19 < (int_32)[0]) ){ goto $label$17 }
	$21 = CALL $19(($22 + [128]), $19)
	CALL eosio_assert(((int_32)*($21 + [24]) == (int_32)($22 + [128])), [32])
	
.LABEL $label$17
	*(($12 = (($22 + [8]) + [8]))) = [0]
	*($22 + [8]) = (int_64)0
	*(($19 = CALL $172([800]))) = (int_64)0
	$2 = ($19 + [800])
	*($12) = $2
	*(($19 + [8])) = (int_64)0
	*(($19 + [24])) = (int_64)0
	*($19 + [16]) = (int_64)0
	*($22 + [8]) = $19
	*($22 + [12]) = $19
	*(($19 + [40])) = (int_64)0
	*($19 + [32]) = (int_64)0
	*(($19 + [56])) = (int_64)0
	*($19 + [48]) = (int_64)0
	*(($19 + [72])) = (int_64)0
	*($19 + [64]) = (int_64)0
	*(($19 + [88])) = (int_64)0
	*($19 + [80]) = (int_64)0
	*(($19 + [104])) = (int_64)0
	*($19 + [96]) = (int_64)0
	*(($19 + [120])) = (int_64)0
	*($19 + [112]) = (int_64)0
	*(($19 + [136])) = (int_64)0
	*($19 + [128]) = (int_64)0
	*(($19 + [152])) = (int_64)0
	*($19 + [144]) = (int_64)0
	*(($19 + [168])) = (int_64)0
	*($19 + [160]) = (int_64)0
	*(($19 + [184])) = (int_64)0
	*($19 + [176]) = (int_64)0
	*(($19 + [200])) = (int_64)0
	*($19 + [192]) = (int_64)0
	*(($19 + [216])) = (int_64)0
	*($19 + [208]) = (int_64)0
	*(($19 + [232])) = (int_64)0
	*($19 + [224]) = (int_64)0
	*(($19 + [248])) = (int_64)0
	*($19 + [240]) = (int_64)0
	*(($19 + [264])) = (int_64)0
	*($19 + [256]) = (int_64)0
	*(($19 + [280])) = (int_64)0
	*($19 + [272]) = (int_64)0
	*(($19 + [296])) = (int_64)0
	*($19 + [288]) = (int_64)0
	*(($19 + [312])) = (int_64)0
	*($19 + [304]) = (int_64)0
	*(($19 + [328])) = (int_64)0
	*($19 + [320]) = (int_64)0
	*(($19 + [344])) = (int_64)0
	*($19 + [336]) = (int_64)0
	*(($19 + [360])) = (int_64)0
	*($19 + [352]) = (int_64)0
	*(($19 + [376])) = (int_64)0
	*($19 + [368]) = (int_64)0
	*(($19 + [392])) = (int_64)0
	*($19 + [384]) = (int_64)0
	*(($19 + [408])) = (int_64)0
	*($19 + [400]) = (int_64)0
	*(($19 + [424])) = (int_64)0
	*($19 + [416]) = (int_64)0
	*(($19 + [440])) = (int_64)0
	*($19 + [432]) = (int_64)0
	*(($19 + [456])) = (int_64)0
	*($19 + [448]) = (int_64)0
	*(($19 + [472])) = (int_64)0
	*($19 + [464]) = (int_64)0
	*(($19 + [488])) = (int_64)0
	*($19 + [480]) = (int_64)0
	*(($19 + [504])) = (int_64)0
	*($19 + [496]) = (int_64)0
	*(($19 + [520])) = (int_64)0
	*($19 + [512]) = (int_64)0
	*(($19 + [536])) = (int_64)0
	*($19 + [528]) = (int_64)0
	*(($19 + [552])) = (int_64)0
	*($19 + [544]) = (int_64)0
	*(($19 + [568])) = (int_64)0
	*($19 + [560]) = (int_64)0
	*(($19 + [584])) = (int_64)0
	*($19 + [576]) = (int_64)0
	*(($19 + [600])) = (int_64)0
	*($19 + [592]) = (int_64)0
	*(($19 + [616])) = (int_64)0
	*($19 + [608]) = (int_64)0
	*(($19 + [632])) = (int_64)0
	*($19 + [624]) = (int_64)0
	*(($19 + [648])) = (int_64)0
	*($19 + [640]) = (int_64)0
	*(($19 + [664])) = (int_64)0
	*($19 + [656]) = (int_64)0
	*(($19 + [680])) = (int_64)0
	*($19 + [672]) = (int_64)0
	*(($19 + [696])) = (int_64)0
	*($19 + [688]) = (int_64)0
	*(($19 + [712])) = (int_64)0
	*($19 + [704]) = (int_64)0
	*(($19 + [728])) = (int_64)0
	*($19 + [720]) = (int_64)0
	*(($19 + [744])) = (int_64)0
	*($19 + [736]) = (int_64)0
	*(($19 + [760])) = (int_64)0
	*($19 + [752]) = (int_64)0
	*(($19 + [776])) = (int_64)0
	*($19 + [768]) = (int_64)0
	*(($19 + [792])) = (int_64)0
	*($19 + [784]) = (int_64)0
	*($22 + [12]) = $2
	if ( ($21 == 0) ){ goto $label$21 }
	if ( ((int_32)*(($5 + [8])) != (int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*($21 + [8]) / (uint_32)[86400]))))) ){ goto $label$22 }
	$19 = ($21 + [12])
	if ( ((int_32)($22 + [8]) == (int_32)$19) ){ goto $label$22 }
	CALL $22(($22 + [8]), *($19), *(($21 + [16])))
	
.LABEL $label$22
	$2 = *($16)
	$19 = *($22 + [28])
	if ( ((int_32)$19 == (int_32)$2) ){ goto $label$23 }
	
.LOOP $label$24:
	$12 = *($19)
	if ( ((uint_32)$12 > (uint_32)[49]) ){ goto $label$25 }
	$11 = (*($22 + [44]) + [1])
	if ( ((uint_32)$11 > (uint_32)*($22 + [52])) ){ goto $label$23 }
	$13 = *(($19 + [2]))
	$12 = (*($22 + [8]) + ($12 << [4]))
	if ( ((int_32)*($12 + [8]) != (int_32)($13 & [65535])) ){ goto $label$26 }
	if ( ((int_64)*($12) != (int_64)0) ){ goto $label$25 }
	
.LABEL $label$26
	*(($12 + [8])) = $13
	*($12) = $1
	*($12 + [10 align=2]) = *($22 + [192 align=2])
	*(($12 + [14])) = *((($22 + [192]) + [4]))
	*($22 + [44]) = $11
	
.LABEL $label$25
	$19 = ($19 + [4])
	if ( ((int_32)$19 != (int_32)$2) ){ goto $label$24 }
	
.LABEL $label$23
	$10 = *($0)
	*($22 + [192]) = ($22 + [8])
	CALL eosio_assert([1], [160])
	CALL $23(($22 + [128]), $21, $10, ($22 + [192]))
	$19 = *($22 + [8])
	if ( $19 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$2 = *($16)
	$19 = *($22 + [28])
	if ( ((int_32)$19 == (int_32)$2) ){ goto $label$27 }
	
.LOOP $label$28:
	$12 = *($19)
	if ( ((uint_32)$12 > (uint_32)[49]) ){ goto $label$29 }
	$11 = (*($22 + [44]) + [1])
	if ( ((uint_32)$11 > (uint_32)*($22 + [52])) ){ goto $label$27 }
	*(($12 = (*($22 + [8]) + ($12 << [4]))) + [8]) = *(($19 + [2]))
	*($12) = $1
	*($12 + [10 align=2]) = *($22 + [192 align=2])
	*(($12 + [14])) = *((($22 + [192]) + [4]))
	*($22 + [44]) = $11
	
.LABEL $label$29
	$19 = ($19 + [4])
	if ( ((int_32)$19 != (int_32)$2) ){ goto $label$28 }
	
.LABEL $label$27
	$10 = *($0)
	*($22 + [4]) = ($22 + [8])
	*($22) = ($22 + [24])
	*($22 + [216]) = $10
	CALL eosio_assert(((int_64)*($22 + [128]) == (int_64)CALL $fimport$2()), [96])
	*((($22 + [192]) + [8])) = ($22 + [216])
	*($22 + [196]) = $22
	*($22 + [192]) = ($22 + [128])
	*(($19 = CALL $172([40])) + [20]) = [0]
	*($19 + [12 align=4]) = (int_64)0
	*($19 + [24]) = ($22 + [128])
	CALL $20(($22 + [192]), $19)
	*($22 + [208]) = $19
	$10 = *($19)
	*($22 + [192]) = $10
	$2 = *($19 + [28])
	*($22 + [188]) = $2
	$12 = *($14)
	if ( ((uint_32)$12 >= (uint_32)*($15)) ){ goto $label$31 }
	*($12 + [8]) = $10
	*($12 + [16]) = $2
	*($22 + [208]) = [0]
	*($12) = $19
	*($14) = ($12 + [24])
	goto $label$30 
	
.LABEL $label$31
	CALL $21($8, ($22 + [208]), ($22 + [192]), ($22 + [188]))
	
.LABEL $label$30
	$19 = *($22 + [208])
	*($22 + [208]) = [0]
	if ( ($19 == 0) ){ goto $label$32 }
	$12 = *($19 + [12])
	if ( ($12 == 0) ){ goto $label$33 }
	*(($19 + [16])) = $12
	CALL $173($12)
	
.LABEL $label$33
	CALL $173($19)
	
.LABEL $label$32
	$19 = *($22 + [8])
	if ( ($19 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	*($22 + [12]) = $19
	CALL $173($19)
	
.LABEL $label$19
	$9 = ($9 + [1])
	$19 = [0]
	
.LABEL $label$14
	$12 = *($22 + [28])
	if ( ($12 == 0) ){ goto $label$34 }
	*($16) = $12
	CALL $173($12)
	
.LABEL $label$34
	$19 = ($19 & [3])
	if ( ((int_32)$19 == (int_32)[3]) ){ goto $label$36 }
	if ( $19 ){ goto $label$35 }
	
.LABEL $label$36
	$20 = ($20 + [16])
	if ( ((int_32)$20 != (int_32)$6) ){ goto $label$12 }
	
.LABEL $label$35
	$10 = *($0)
	$19 = *($22 + [68])
	
.LABEL $label$11
	*($22 + [28]) = ($22 + [44])
	*($22 + [24]) = ($22 + [64])
	*($22 + [32]) = ($22 + [52])
	*($22 + [36]) = ($22 + [56])
	CALL eosio_assert(((int_32)$19 != (int_32)[0]), [160])
	CALL $24($3, $19, $10, ($22 + [24]))
	$12 = *($22 + [152])
	if ( ($12 == 0) ){ goto $label$37 }
	$2 = ($22 + [156])
	$19 = *($2)
	if ( ((int_32)$19 == (int_32)$12) ){ goto $label$39 }
	
.LOOP $label$40:
	$19 = ($19 + [-24])
	$20 = *($19)
	*($19) = [0]
	if ( ($20 == 0) ){ goto $label$41 }
	$16 = *($20 + [12])
	if ( ($16 == 0) ){ goto $label$42 }
	*(($20 + [16])) = $16
	CALL $173($16)
	
.LABEL $label$42
	CALL $173($20)
	
.LABEL $label$41
	if ( ((int_32)$12 != (int_32)$19) ){ goto $label$40 }
	$19 = *(($22 + [152]))
	goto $label$38 
	
.LABEL $label$39
	$19 = $12
	
.LABEL $label$38
	*($2) = $12
	CALL $173($19)
	
.LABEL $label$37
	$19 = *($22 + [116])
	if ( ($19 == 0) ){ goto $label$43 }
	*(($22 + [120])) = $19
	CALL $173($19)
	
.LABEL $label$43
	$19 = *($22 + [104])
	if ( ($19 == 0) ){ goto $label$44 }
	*(($22 + [108])) = $19
	CALL $173($19)
	
.LABEL $label$44
	*([0] + [4]) = ($22 + [224])
	return (unreachable)
	
.LABEL $label$10
	CALL $177($7)
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $186([2448], $0)
}

void .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4730947158474227713, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $31($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)4730947158474227712, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [32])
	
.LABEL $label$4
	*(($2 + [28])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [400])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	$7 = ($4 + $6)
	*($8 + [40]) = $7
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$7 }
	CALL free($4)
	$7 = *(($8 + [40]))
	$4 = *($8 + [36])
	
.LABEL $label$7
	*(($6 = CALL $172([40])) + [20]) = [0]
	*($6 + [12 align=4]) = (int_64)0
	*($6 + [24]) = $0
	CALL eosio_assert(((uint_32)($7 - $4) > (uint_32)[7]), [432])
	CALL memcpy($6, $4, [8])
	$3 = ($4 + [8])
	CALL eosio_assert(((uint_32)($7 - $3) > (uint_32)[3]), [432])
	CALL memcpy(($6 + [8]), $3, [4])
	*($8 + [36]) = ($4 + [12])
	CALL $29(($8 + [32]), ($6 + [12]))
	*($6 + [32]) = [-1]
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $21(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [12])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [16])) = $7
	CALL $173($7)
	
.LABEL $label$10
	CALL $173($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC $187 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10934]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10936])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10934]) = [1]
	$7 = ($7 << [16])
	*([0] + [10936]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10936])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10936]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10934]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10934]) = [1]
	$3 = ($3 << [16])
	*([0] + [10936]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10936])
	
.LABEL $label$8
	*([0] + [10936]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $187($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10848])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_64 .FUNC fmax (float_64 $0, float_64 $1)
{
	int_64 $2
	int_64 $3
	$2 = (CASTING int_64)(float_64 $0)
	if ( ((uint_64)((int_64)$2 & (int_64)9223372036854775807) > (uint_64)(int_64)9218868437227405312) ){ goto $label$2 }
	$3 = (CASTING int_64)(float_64 $1)
	if ( ((uint_64)((int_64)$3 & (int_64)9223372036854775807) <= (uint_64)(int_64)9218868437227405312) ){ goto $label$3 }
	return $0
	
.LABEL $label$3
	if ( ((int_32)(CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)63)) != (int_32)(CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)63))) ){ goto $label$1 }
	$1 = ( $1 ? $0 : ((float_64)$0 < (float_64)$1) )
	
.LABEL $label$2
	return $1
	
.LABEL $label$1
	return ( $1 ? $0 : ((int_64)$2 < (int_64)0) )
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [384])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [384])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [384])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [384])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$2 = ($0 + [4])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $7) > (int_32)[7]), [384])
	CALL memcpy(*($2), $5, [8])
	$7 = (*($2) + [8])
	*($2) = $7
	$5 = ($5 + [8])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $173($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($8 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL $172($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [3])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $177($0)
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	*($3 + [14]) = *($1 + [24])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [384])
	CALL memcpy(*($0 + [4]), ($3 + [14]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	*($3 + [15]) = *($1 + [25])
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [384])
	CALL memcpy(*($0 + [4]), ($3 + [15]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [26]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	$0 = CALL $117(CALL $116($0, ($1 + [32])), ($1 + [44]))
	*([0] + [4]) = ($3 + [16])
	return $0
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$6 = *(*($0 + [4]))
	*($1) = *($6)
	*(($1 + [28])) = *(($6 + [28]))
	*(($1 + [24])) = *(($6 + [24]))
	*(($1 + [16])) = *(($6 + [16]))
	*(($1 + [8])) = *(($6 + [8]))
	$7 = ($1 + [32])
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$1 }
	CALL $113($7, *($6 + [32]), *(($6 + [36])))
	CALL $114(($1 + [44]), *($6 + [44]), *(($6 + [48])))
	
.LABEL $label$1
	$7 = *($7)
	$3 = *(($1 + [36]))
	$4 = ($3 - $7)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [30]
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$3
	$3 = *($1 + [44])
	$7 = *(($1 + [48]))
	$4 = ($7 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [3]))
	
.LOOP $label$4:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$5 }
	$6 = (($4 & [-8]) + $6)
	
.LABEL $label$5
	if ( ($6 <= [513]) ){ goto $label$7 }
	$7 = CALL malloc($6)
	goto $label$6 
	
.LABEL $label$7
	$7 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$6
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $6)
	CALL $115($8, $1)
	*($1 + [60]) = CALL db_store_i64(*($2 + [8]), (int_64)7035924439720001536, *(*($0 + [8])), (int_64)7035924439720001536, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$8 }
	CALL free($7)
	
.LABEL $label$8
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)7035924439720001536) ){ goto $label$9 }
	*(($2 + [16])) = (int_64)7035924439720001537
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $113 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [4])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $173($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = [268435455]
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [4])
	$5 = CALL $172($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [4])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $177($0)
}

void .FUNC $110 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [208])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [256])
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [28])) = *(($3 + [28]))
	*(($1 + [24])) = *(($3 + [24]))
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	$7 = ($1 + [32])
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$1 }
	CALL $113($7, *($3 + [32]), *(($3 + [36])))
	CALL $114(($1 + [44]), *($3 + [44]), *(($3 + [48])))
	
.LABEL $label$1
	CALL eosio_assert([1], [320])
	$7 = *($7)
	$4 = *(($1 + [36]))
	$5 = ($4 - $7)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	$3 = [30]
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	$3 = (($5 & [-16]) + $3)
	
.LABEL $label$3
	$4 = *($1 + [44])
	$7 = *(($1 + [48]))
	$5 = ($7 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$5 }
	$3 = (($5 & [-8]) + $3)
	
.LABEL $label$5
	if ( ($3 <= [513]) ){ goto $label$7 }
	$7 = CALL malloc($3)
	goto $label$6 
	
.LABEL $label$7
	$7 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$6
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $3)
	CALL $115($8, $1)
	CALL db_update_i64(*($1 + [60]), $2, $7, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($7)
	
.LABEL $label$8
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7035924439720001536) ){ goto $label$9 }
	*(($0 + [16])) = (int_64)7035924439720001537
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [96])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($4 = CALL $172([72])) + [16]) = (int_64)1398362884
	*($4 + [8]) = (int_64)0
	CALL eosio_assert([1], [704])
	$2 = (int_64)5462355
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [496])
	*($4 + [32 align=4]) = (int_64)0
	*($4 + [40 align=4]) = (int_64)0
	*($4 + [48 align=4]) = (int_64)0
	*($4 + [56]) = $1
	CALL $112(($7 + [16]), $4)
	*($7 + [32]) = $4
	*($7 + [16]) = (int_64)7035924439720001536
	$6 = *($4 + [60])
	*($7 + [12]) = $6
	$5 = ($1 + [28])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$7 }
	*($3 + [8]) = (int_64)7035924439720001536
	*($3 + [16]) = $6
	*($7 + [32]) = [0]
	*($3) = $4
	*($5) = ($3 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $88(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$6
	*($0 + [4]) = $4
	*($0) = $1
	$3 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	$4 = *($3 + [44])
	if ( ($4 == 0) ){ goto $label$9 }
	*(($3 + [48])) = $4
	CALL $173($4)
	
.LABEL $label$9
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [36])) = $4
	CALL $173($4)
	
.LABEL $label$10
	CALL $173($3)
	
.LABEL $label$8
	*([0] + [4]) = ($7 + [48])
}

void .FUNC _ZN9cryptopix9createaccEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$2 = *(($0 + [112]))
	$6 = *(($0 + [116]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$5 = ($6 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$2:
	if ( ((int_64)*(*($5)) == (int_64)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = ($0 + [88])
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [44]) == (int_32)$4), [32])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $15($4, $6)
	CALL eosio_assert(((int_32)*($5 + [44]) == (int_32)$4), [32])
	
.LABEL $label$3
	CALL eosio_assert(($5 == 0), [1920])
	CALL _ZN9cryptopix13createAccountEy(($7 + [8]), $0, $1)
	*([0] + [4]) = ($7 + [16])
}

void .FUNC _ZN9cryptopix10proccanvasEv (int_32 $0)
{
	CALL _ZN9cryptopix14checkGameStateEhb($0, [20], [1])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [448])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $30($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [432])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[1]), [432])
	CALL memcpy(($7 + [8]), *($4), [2])
	$6 = (*($4) + [2])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [384])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [384])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[1]), [384])
	CALL memcpy(*($3), ($6 + [8]), [2])
	$5 = (*($3) + [2])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $172(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $177($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [12])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [16])) = $6
	CALL $173($6)
	
.LABEL $label$11
	CALL $173($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $173($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$12 = (*([0] + [4]) - [32])
	$13 = $12
	*([0] + [4]) = $12
	$3 = *($0 + [4])
	*($1) = *(*($3))
	$2 = *($0)
	*($1 + [8]) = (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000))))
	$10 = [12]
	$3 = *($3 + [4])
	$4 = ($1 + [12])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$1 }
	CALL $22($4, *($3), *($3 + [4]))
	
.LABEL $label$1
	$3 = ($1 + [8])
	$6 = *($4)
	$5 = *(($1 + [16]))
	$7 = ($5 - $6)
	$11 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$2:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	$10 = ((((int_32)uint_32(($7 + [-16]) >> [4]) * (int_32)[10]) + $10) + [10])
	
.LABEL $label$3
	if ( ($10 <= [513]) ){ goto $label$5 }
	$12 = CALL malloc($10)
	goto $label$4 
	
.LABEL $label$5
	$12 = ($12 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $12
	
.LABEL $label$4
	*($13 + [8]) = $12
	$5 = ($12 + $10)
	*($13 + [16]) = $5
	CALL eosio_assert(((int_32)$10 > (int_32)[7]), [384])
	CALL memcpy($12, $1, [8])
	$6 = ($12 + [8])
	CALL eosio_assert(((int_32)($5 - $6) > (int_32)[3]), [384])
	CALL memcpy($6, $3, [4])
	*($13 + [12]) = ($12 + [12])
	CALL $28(($13 + [8]), $4)
	$11 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)4730947171533193216, *(*($0 + [8])), $11, $12, $10)
	if ( ($10 <= [513]) ){ goto $label$6 }
	CALL free($12)
	
.LABEL $label$6
	if ( (uint_64)($11 <= *($2 + [16])) ){ goto $label$7 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$11 = *(($2 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($13 + [24]) = *(($1 + [8]))
	*($1 + [32]) = CALL db_idx64_store($11, (int_64)4730947171533193216, $8, $9, ($13 + [24]))
	*([0] + [4]) = ($13 + [32])
}

void .FUNC $23 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$11 = (*([0] + [4]) - [48])
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [208])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [256])
	$4 = ($1 + [8])
	*(($12 = $11) + [24]) = *($4)
	$5 = *($1)
	*($4) = (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000))))
	$9 = [12]
	$3 = *($3)
	$6 = ($1 + [12])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$1 }
	CALL $22($6, *($3), *($3 + [4]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [320])
	$7 = *($6)
	$3 = *(($1 + [16]))
	$8 = ($3 - $7)
	$10 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$2:
	$9 = ($9 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	$9 = ((((int_32)uint_32(($8 + [-16]) >> [4]) * (int_32)[10]) + $9) + [10])
	
.LABEL $label$3
	if ( ($9 <= [513]) ){ goto $label$5 }
	$11 = CALL malloc($9)
	goto $label$4 
	
.LABEL $label$5
	$11 = ($11 - (($9 + [15]) & [-16]))
	*([0] + [4]) = $11
	
.LABEL $label$4
	*($12 + [8]) = $11
	$3 = ($11 + $9)
	*($12 + [16]) = $3
	CALL eosio_assert(((int_32)$9 > (int_32)[7]), [384])
	CALL memcpy($11, $1, [8])
	$7 = ($11 + [8])
	CALL eosio_assert(((int_32)($3 - $7) > (int_32)[3]), [384])
	CALL memcpy($7, $4, [4])
	*($12 + [12]) = ($11 + [12])
	CALL $28(($12 + [8]), $6)
	CALL db_update_i64(*($1 + [28]), $2, $11, $9)
	if ( ($9 <= [513]) ){ goto $label$6 }
	CALL free($11)
	
.LABEL $label$6
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($12 + [40]) = *($4)
	if ( (CALL memcmp(($12 + [24]), ($12 + [40]), [8]) == 0) ){ goto $label$8 }
	$1 = ($1 + [32])
	$9 = *($1)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$9 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)4730947171533193216, ($12 + [32]), $5)
	*($1) = $9
	
.LABEL $label$9
	CALL db_idx64_update($9, $2, ($12 + [40]))
	
.LABEL $label$8
	*([0] + [4]) = ($12 + [48])
}

void .FUNC $22 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$8 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($8 - $5) >> [4])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL $173($5)
	$8 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = [268435455]
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = $4
	$2 = int_32($8 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$5 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [4])
	$5 = CALL $172($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	return 
	
.LABEL $label$4
	$3 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $5)
	$8 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$6 = ($8 - $1)
	$7 = int_32($6 >> [4])
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $8, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ($7 << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $177($0)
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$9 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [2])
	if ( ((uint_32)$3 <= (uint_32)int_32(($9 - $4) >> [2])) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$5 }
	*($0 + [4]) = $4
	CALL $173($4)
	$9 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$4 = [1073741823]
	if ( ((uint_32)int_32($9 >> [2]) > (uint_32)[536870910]) ){ goto $label$6 }
	$4 = $3
	$9 = int_32($9 >> [1])
	if ( ($9 <= $3) ){ goto $label$6 }
	$4 = $9
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	
.LABEL $label$6
	$9 = ($4 << [2])
	$4 = CALL $172($9)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $9)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$3 = (($2 + [-4]) - $1)
	$9 = $4
	
.LOOP $label$7:
	*($9) = *($1)
	$9 = ($9 + [4])
	$1 = ($1 + [4])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	*(($0 + [4])) = (($4 + ($3 & [-4])) + [4])
	return 
	
.LABEL $label$4
	$8 = int_32($8 >> [2])
	$8 = (*($0 + [4]) - $4)
	$9 = ($1 + $8)
	$5 = ( $9 ? $2 : ((uint_32)$3 > (uint_32)$8) )
	$6 = ($5 - $1)
	$7 = int_32($6 >> [2])
	if ( ($7 == 0) ){ goto $label$8 }
	CALL memmove($4, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$8) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$3 }
	$4 = (($2 + [-4]) - $5)
	$3 = *(($0 + [4]))
	$1 = $3
	
.LOOP $label$9:
	*($1) = *($9)
	$1 = ($1 + [4])
	$9 = ($9 + [4])
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$9 }
	*(($0 + [4])) = (($3 + ($4 & [-4])) + [4])
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($4 + ($7 << [2]))
	return (unreachable)
	
.LABEL $label$1
	CALL $177($0)
}

void .FUNC $24 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	float_64 $5
	float_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$11 = (*([0] + [4]) - [16])
	$12 = $11
	*([0] + [4]) = $11
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [208])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [256])
	$4 = *($1)
	if ( ((int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)*(*(*($3) + [4]) + [8]) / (uint_32)[86400])))) != (int_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400]))))) ){ goto $label$2 }
	*(($9 = *($1 + [32]))) = (*($9) + *(*($3 + [4])))
	$8 = ($3 + [4])
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL floor((CASTING float_64)(uint_32 ((uint_32)*(*(*($3) + [4]) + [8]) / (uint_32)[86400])))
	$6 = CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400])))
	$8 = ($3 + [4])
	$9 = *($3 + [4])
	if ( ((int_32)(CASTING uint_32)(float_64 $5) != (int_32)((CASTING uint_32)(float_64 $6) + [-1])) ){ goto $label$3 }
	*($12) = *($9)
	*($12 + [4]) = *(*(*(*($3) + [4]) + [32]))
	CALL $25(($1 + [32]), $12, ($12 + [8]))
	goto $label$1 
	
.LABEL $label$3
	$9 = *($9)
	*($12 + [4]) = [0]
	*($12) = $9
	CALL $25(($1 + [32]), $12, ($12 + [8]))
	
.LABEL $label$1
	*($1 + [8]) = (CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000))))
	$9 = [0]
	$8 = *(*($8))
	$7 = *(*($3 + [8]))
	if ( ((uint_32)$7 <= (uint_32)$8) ){ goto $label$4 }
	$9 = (CASTING uint_32)(float_64 CALL floor(((float_64)(CASTING float_64)(uint_32 ($7 - $8)) * (float_64)*(*($3 + [12])))))
	
.LABEL $label$4
	*($1 + [12]) = $9
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [320])
	$8 = *($1 + [32])
	$9 = *(($1 + [36]))
	$7 = ($9 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($7 >> [2]))
	$3 = [32]
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$6 }
	$3 = (($7 & [-4]) + $3)
	
.LABEL $label$6
	if ( ($3 <= [513]) ){ goto $label$8 }
	$11 = CALL malloc($3)
	goto $label$7 
	
.LABEL $label$8
	$11 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $11
	
.LABEL $label$7
	*($12 + [4]) = $11
	*($12) = $11
	*($12 + [8]) = ($11 + $3)
	CALL $26($12, $1)
	CALL db_update_i64(*($1 + [48]), $2, $11, $3)
	if ( ($3 <= [513]) ){ goto $label$9 }
	CALL free($11)
	
.LABEL $label$9
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	*([0] + [4]) = ($12 + [16])
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [2]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [384])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[3]), [384])
	$2 = ($0 + [4])
	CALL memcpy(*($2), $5, [4])
	$7 = (*($2) + [4])
	*($2) = $7
	$5 = ($5 + [4])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $27($0, ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $101 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-2507766120631500799, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $50($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)-2507766120631500800, $5))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [32])
	
.LABEL $label$4
	*(($2 + [44])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)4730947158474227712, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $31($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)4730947158474227712, $5))
	CALL eosio_assert(((int_32)*($2 + [16]) == (int_32)$4), [32])
	
.LABEL $label$4
	*(($2 + [24])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	*($10 + [24]) = (int_64)0
	*($10 + [8]) = *(($2 + [8]))
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-2507766120631500798, $10, ($10 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [24])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $50($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)-2507766120631500800, $5))
	CALL eosio_assert(((int_32)*($2 + [32]) == (int_32)$4), [32])
	
.LABEL $label$4
	*(($2 + [48])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [32])
}

int_32 .FUNC $102 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [672])
	$6 = *($0 + [4])
	$7 = *(($6 + [44]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-2507766120631500799, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [44])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$2), [32])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $50($2, CALL $fimport$5(*($2), *($2 + [8]), (int_64)-2507766120631500800, $3))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$2), [32])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [44])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$5 = *($4 + [16])
	if ( ((int_64)$5 != (int_64)-1) ){ goto $label$1 }
	$5 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($4), *($4 + [8]), (int_64)-2507766120631500800, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $50($4, $6)
	*($9 + [4]) = [0]
	*($9) = $4
	$5 = *(*(CALL $106($9) + [4]))
	$5 = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [16])) = $5
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($5 <= (int_64)-2), [1296])
	*($1) = *(($4 + [16]))
	*($1 + [8]) = *(*(*($3 + [4]) + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	$3 = $10
	$4 = ($3 + [-32])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [384])
	CALL memcpy($4, $1, [8])
	CALL eosio_assert([1], [384])
	$10 = ($1 + [8])
	CALL memcpy(($3 + [-24]), $10, [8])
	CALL eosio_assert([1], [384])
	$6 = ($1 + [16])
	CALL memcpy(($3 + [-16]), $6, [8])
	CALL eosio_assert([1], [384])
	CALL memcpy(($3 + [-8]), ($1 + [24]), [8])
	$5 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-2507766120631500800, *(*($0 + [8])), $5, $4, [32])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = ($2 + [8])
	$5 = *($2)
	$0 = *(($0 + [8]))
	$7 = *($0)
	$8 = *($1)
	*($9) = *($10)
	*($1 + [40]) = CALL db_idx64_store($5, (int_64)-2507766120631500800, $7, $8, $9)
	$5 = *($0)
	$7 = *($2)
	$8 = *($1)
	*($9) = *($6)
	*(($1 + [44])) = CALL db_idx64_store($7, (int_64)-2507766120631500799, $5, $8, $9)
	$5 = *($0)
	$7 = *($2)
	$8 = *($1)
	*($9 + [8]) = *($10)
	*($9) = *($6)
	*(($1 + [48])) = CALL db_idx128_store($7, (int_64)-2507766120631500798, $5, $8, $9)
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $104 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [672])
	$6 = *($0 + [4])
	$7 = *(($6 + [48]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-2507766120631500798, $9, *($6))
	*((*(($0 + [4])) + [48])) = $7
	
.LABEL $label$1
	*($9) = (int_64)0
	$1 = CALL db_idx128_next($7, $9)
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9)
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$2), [32])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $50($2, CALL $fimport$5(*($2), *($2 + [8]), (int_64)-2507766120631500800, $3))
	CALL eosio_assert(((int_32)*($7 + [32]) == (int_32)$2), [32])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [48])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC _ZN9cryptopix8withdrawEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [208])
	*([0] + [4]) = $15
	$5 = [0]
	if ( ((uint_64)((int_64)*($2) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$10 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [1600])
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [1632])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)1398296580), [1904])
	CALL require_auth($1)
	CALL _ZN9cryptopix14checkGameStateEhb($0, [10], [1])
	$6 = *(($0 + [112]))
	$7 = *(($0 + [116]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$8 = ($7 + [-24])
	$3 = ([0] - $6)
	
.LOOP $label$7:
	if ( ((int_64)*(*($8)) == (int_64)$1) ){ goto $label$6 }
	$7 = $8
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_32)($5 + $3) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = ($0 + [88])
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$11 }
	$8 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [44]) == (int_32)$5), [32])
	if ( $8 ){ goto $label$10 }
	$7 = [0]
	goto $label$9 
	
.LABEL $label$11
	$7 = [0]
	$8 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)3607749778735104000, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$8 = CALL $15($5, $8)
	CALL eosio_assert(((int_32)*($8 + [44]) == (int_32)$5), [32])
	
.LABEL $label$10
	CALL eosio_assert(((int_64)*(($8 + [24])) == (int_64)*(($2 + [8]))), [1664])
	$3 = ((int_64)*($8 + [16]) >= (int_64)*($2))
	$7 = [1]
	goto $label$8 
	
.LABEL $label$9
	$8 = [0]
	$3 = [0]
	
.LABEL $label$8
	CALL eosio_assert($3, [1728])
	$10 = *($0)
	*($15 + [120]) = $2
	CALL eosio_assert($7, [160])
	CALL $108($5, $8, $10, ($15 + [120]))
	$7 = ($0 + [8])
	CALL $14(($15 + [120]), $7)
	*((($15 + [64]) + [20])) = *((($15 + [120]) + [20]))
	*(($8 = (($15 + [64]) + [16]))) = *((($15 + [120]) + [16]))
	*((($15 + [64]) + [12])) = *((($15 + [120]) + [12]))
	*($15 + [72]) = *($15 + [128])
	*($15 + [64]) = *($15 + [120])
	CALL eosio_assert(((int_64)*(($2 + [8])) == (int_64)*($8)), [1760])
	$10 = (int_64)
	*($15 + [72]) = $10(*($15 + [72]) - *($2)))
	CALL eosio_assert(((int_64)$10 > (int_64)-4611686018427387904), [1808])
	CALL eosio_assert(((int_64)$10 < (int_64)4611686018427387904), [1840])
	*($15 + [88]) = *($15 + [144])
	*($15 + [89]) = *($15 + [145])
	*($15 + [90]) = *($15 + [146])
	*($15 + [92]) = *($15 + [148])
	*($15 + [96]) = [0]
	*((($15 + [64]) + [36])) = [0]
	*(($15 + [104])) = [0]
	$8 = (*((($15 + [120]) + [36])) - *($15 + [152]))
	$5 = int_32($8 >> [4])
	if ( ($5 == 0) ){ goto $label$14 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$13 }
	$8 = CALL $172($8)
	*((($15 + [64]) + [32])) = $8
	*(($3 = (($15 + [64]) + [36]))) = $8
	*(($15 + [104])) = ($8 + ($5 << [4]))
	$6 = *((($15 + [120]) + [32]))
	$5 = (*((($15 + [120]) + [36])) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$14 }
	CALL memcpy($8, $6, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$14
	*(($15 + [116])) = [0]
	*($15 + [108 align=4]) = (int_64)0
	$8 = (*(($15 + [168])) - *($15 + [164]))
	$5 = int_32($8 >> [3])
	if ( ($5 == 0) ){ goto $label$15 }
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$12 }
	$8 = CALL $172($8)
	*((($15 + [64]) + [44])) = $8
	*(($3 = (($15 + [64]) + [48]))) = $8
	*(($15 + [116])) = ($8 + ($5 << [3]))
	$6 = *((($15 + [120]) + [44]))
	$5 = (*((($15 + [120]) + [48])) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$15 }
	CALL memcpy($8, $6, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$15
	CALL $109($7, ($15 + [64]), *($0))
	$8 = *($15 + [108])
	if ( ($8 == 0) ){ goto $label$16 }
	*(($15 + [112])) = $8
	CALL $173($8)
	
.LABEL $label$16
	$8 = *($15 + [96])
	if ( ($8 == 0) ){ goto $label$17 }
	*(($15 + [100])) = $8
	CALL $173($8)
	
.LABEL $label$17
	$4 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [528]
	$11 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$23 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$5 = ($5 + [165])
	goto $label$21 
	
.LABEL $label$23
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$19
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$18 }
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [544]
	$13 = (int_64)0
	
.LOOP $label$24:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$25 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$5 = ($5 + [165])
	goto $label$26 
	
.LABEL $label$27
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$25
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$13 = ((int_64)$9 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$24 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [560]
	$14 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$33 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$5 = ($5 + [165])
	goto $label$31 
	
.LABEL $label$33
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$29
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$14 = ((int_64)$12 | (int_64)$14)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$28 }
	*(($15 + [16])) = [0]
	*($15 + [8]) = (int_64)0
	$8 = CALL strlen([1872])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$34 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$37 }
	*($15 + [8]) = ($8 << [1])
	$5 = (($15 + [8]) | [1])
	if ( $8 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$7 = (($8 + [16]) & [-16])
	$5 = CALL $172($7)
	*($15 + [8]) = ($7 | [1])
	*($15 + [16]) = $5
	*($15 + [12]) = $8
	
.LABEL $label$36
	CALL memcpy($5, [1872], $8)
	
.LABEL $label$35
	*(($5 + $8)) = [0]
	*((($15 + [64]) + [28])) = *(($2 + [12]))
	*((($15 + [64]) + [24])) = *(($2 + [8]))
	*((($15 + [64]) + [20])) = *(($2 + [4]))
	*($15 + [72]) = $1
	*($15 + [64]) = *($0)
	*($15 + [80]) = *($2)
	$8 = (($15 + [8]) + [8])
	*(($15 + [104])) = *($8)
	*($15 + [96]) = *($15 + [8])
	*($15 + [8]) = [0]
	*($15 + [12]) = [0]
	*($8) = [0]
	*($15 + [24]) = $13
	*($15 + [32]) = $14
	*(($8 = CALL $172([16]))) = $4
	*($8 + [8]) = $11
	*((($15 + [24]) + [32])) = [0]
	$5 = ($8 + [16])
	*((($15 + [24]) + [24])) = $5
	*((($15 + [24]) + [20])) = $5
	*($15 + [40]) = $8
	*($15 + [52]) = [0]
	*((($15 + [24]) + [36])) = [0]
	$8 = *($15 + [96])
	$5 = ( *((($15 + [64]) + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($5 + [32])
	$10 = (CASTING uint_64)(uint_32 $5)
	$5 = (($15 + [24]) + [28])
	
.LOOP $label$38:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$38 }
	if ( ($8 == 0) ){ goto $label$40 }
	CALL $44($5, $8)
	$5 = *(($15 + [56]))
	$8 = *(($15 + [52]))
	goto $label$39 
	
.LABEL $label$40
	$5 = [0]
	$8 = [0]
	
.LABEL $label$39
	*($15 + [196]) = $8
	*($15 + [192]) = $8
	*($15 + [200]) = $5
	*($15 + [176]) = ($15 + [192])
	*($15 + [184]) = ($15 + [64])
	CALL $45(($15 + [184]), ($15 + [176]))
	CALL $46(($15 + [192]), ($15 + [24]))
	$8 = *($15 + [192])
	CALL send_inline($8, (*($15 + [196]) - $8))
	$8 = *($15 + [192])
	if ( ($8 == 0) ){ goto $label$41 }
	*($15 + [196]) = $8
	CALL $173($8)
	
.LABEL $label$41
	$8 = *($15 + [52])
	if ( ($8 == 0) ){ goto $label$42 }
	*(($15 + [56])) = $8
	CALL $173($8)
	
.LABEL $label$42
	$8 = *($15 + [40])
	if ( ($8 == 0) ){ goto $label$43 }
	*(($15 + [44])) = $8
	CALL $173($8)
	
.LABEL $label$43
	if ( ((*(($15 + [96])) & [1]) == 0) ){ goto $label$44 }
	CALL $173(*(($15 + [104])))
	
.LABEL $label$44
	if ( ((*($15 + [8]) & [1]) == 0) ){ goto $label$45 }
	CALL $173(*(($15 + [16])))
	
.LABEL $label$45
	$8 = *($15 + [164])
	if ( ($8 == 0) ){ goto $label$46 }
	*(($15 + [168])) = $8
	CALL $173($8)
	
.LABEL $label$46
	$8 = *($15 + [152])
	if ( ($8 == 0) ){ goto $label$47 }
	*(($15 + [156])) = $8
	CALL $173($8)
	
.LABEL $label$47
	*([0] + [4]) = ($15 + [208])
	return (unreachable)
	
.LABEL $label$34
	CALL $174(($15 + [8]))
	
.LABEL $label$13
	CALL $177(($15 + [96]))
	
.LABEL $label$12
	CALL $177(($15 + [108]))
	(unreachable)
	(unreachable)
}

int_32 .FUNC $106 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [36]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1424])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-2507766120631500800)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [1360])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [1360])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $50(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $109 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$0), [32])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7035924439720001536, (int_64)7035924439720001536)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $85($0, $3)
	CALL eosio_assert(((int_32)*($3 + [56]) == (int_32)$0), [32])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [160])
	CALL $110($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $111($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$9 = (*([0] + [4]) - [16])
	$10 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [44]) == (int_32)$0), [208])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [256])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [24]))), [1760])
	$8 = (int_64)
	*($1 + [16]) = $8(*($1 + [16]) - *($3)))
	CALL eosio_assert(((int_64)$8 > (int_64)-4611686018427387904), [1808])
	CALL eosio_assert(((int_64)*($1 + [16]) < (int_64)4611686018427387904), [1840])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [320])
	$6 = *($1 + [32])
	$5 = *(($1 + [36]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [2]))
	$3 = [32]
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-4]) + $3)
	
.LABEL $label$2
	if ( ($3 <= [513]) ){ goto $label$4 }
	$9 = CALL malloc($3)
	goto $label$3 
	
.LABEL $label$4
	$9 = ($9 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$3
	*($10 + [4]) = $9
	*($10) = $9
	*($10 + [8]) = ($9 + $3)
	CALL $26($10, $1)
	CALL db_update_i64(*($1 + [48]), $2, $9, $3)
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC _ZN9cryptopix10setWinnersEhN5eosio5assetERNSt3__15stackI10submissionNS2_5dequeIS4_NS2_9allocatorIS4_EEEEEEy (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [112])
	*([0] + [4]) = $22
	*(($15 = ($22 + [40]))) = [0]
	*($22 + [16]) = $4
	*($22 + [24]) = (int_64)-1
	$4 = *($0)
	*($22 + [8]) = $4
	*($22 + [32]) = (int_64)0
	*($22 + [44]) = [0]
	$12 = *($3 + [20])
	CALL eosio_assert(((int_64)$12 != (int_64)0), [944])
	CALL eosio_assert([1], [960])
	*($2) = ((int_64)*($2) / (int_64)$12)
	$20 = *($3 + [20])
	if ( ($20 == 0) ){ goto $label$1 }
	$6 = (($22 + [8]) + [24])
	$5 = (($22 + [48]) + [33])
	$17 = ($3 + [4])
	$18 = ($22 + [36])
	$19 = ($3 + [20])
	
.LOOP $label$2:
	$16 = ($3 + [16])
	$20 = (($20 + *($16)) + [-1])
	$20 = (*((*($17) + (((uint_32)$20 / (uint_32)[102]) << [2]))) + ((int_32)((uint_32)$20 % (uint_32)[102]) * (int_32)[40]))
	$11 = *($20 + [32])
	$10 = *($20 + [30])
	$9 = *($20 + [28])
	$8 = *($20 + [26])
	$7 = *($20)
	$12 = *($0)
	CALL eosio_assert(((int_64)$4 == (int_64)CALL $fimport$2()), [96])
	*(($13 = CALL $172([56])) + [24]) = (int_64)1398362884
	*($13 + [16]) = (int_64)0
	CALL eosio_assert([1], [704])
	$14 = ($13 + [16])
	$4 = (int_64)5462355
	$20 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$21 = [1]
	$20 = ($20 + [1])
	if ( ((int_32)$20 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$21 = [0]
	
.LABEL $label$3
	CALL eosio_assert($21, [496])
	*($13 + [40]) = ($22 + [8])
	*($13) = $7
	*(($14 + [12])) = *(($2 + [12]))
	*(($14 + [8])) = *(($2 + [8]))
	*(($14 + [4])) = *(($2 + [4]))
	*($14) = *($2)
	*($13 + [8]) = [0]
	*($13 + [32]) = [0]
	*($13 + [36]) = ((int_32)(([1] - $9) + $11) * (int_32)(([1] - $8) + $10))
	*((($22 + [88]) + [8])) = $5
	*($22 + [92]) = ($22 + [48])
	*($22 + [88]) = ($22 + [48])
	CALL $48(($22 + [88]), $13)
	$4 = *($13)
	$20 = (($22 + [8]) + [8])
	*($13 + [44]) = CALL db_store_i64(*($20), (int_64)-2042605236735967232, $12, $4, ($22 + [48]), [33])
	$21 = (($22 + [8]) + [16])
	if ( (uint_64)($4 <= *($21)) ){ goto $label$8 }
	*($21) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$4 = *($13)
	$7 = *($20)
	*($22 + [104]) = *(($13 + [8]))
	*($13 + [48]) = CALL db_idx64_store($7, (int_64)-2042605236735967232, $12, $4, ($22 + [104]))
	*($22 + [88]) = $13
	$4 = *($13)
	*($22 + [48]) = $4
	$21 = *(($13 + [44]))
	*($22 + [104]) = $21
	$20 = *($18)
	if ( ((uint_32)$20 >= (uint_32)*($15)) ){ goto $label$10 }
	*($20 + [8]) = $4
	*($20 + [16]) = $21
	*($22 + [88]) = [0]
	*($20) = $13
	*($18) = ($20 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $61($6, ($22 + [88]), ($22 + [48]), ($22 + [104]))
	
.LABEL $label$9
	$20 = *($22 + [88])
	*($22 + [88]) = [0]
	if ( ($20 == 0) ){ goto $label$11 }
	CALL $173($20)
	
.LABEL $label$11
	$13 = *($19)
	$20 = ($13 + [-1])
	*($19) = $20
	$13 = ($3 + [8])
	$14 = *($13)
	$21 = int_32(($14 - *($17)) >> [2])
	if ( (((([1] - $13) - *($16)) + ( (((int_32)$21 * (int_32)[102]) + [-1]) ? [0] : $21 )) <= [204]) ){ goto $label$12 }
	CALL $173(*(($14 + [-4])))
	*($13) = (*($13) + [-4])
	$20 = *($19)
	
.LABEL $label$12
	$1 = ($1 + [-1])
	if ( ($20 == 0) ){ goto $label$13 }
	$4 = *($22 + [8])
	goto $label$2 
	
.LABEL $label$13
	$21 = *($22 + [32])
	if ( ($21 == 0) ){ goto $label$1 }
	$14 = ($22 + [36])
	$20 = *($14)
	if ( ((int_32)$20 == (int_32)$21) ){ goto $label$15 }
	
.LOOP $label$16:
	$20 = ($20 + [-24])
	$13 = *($20)
	*($20) = [0]
	if ( ($13 == 0) ){ goto $label$17 }
	CALL $173($13)
	
.LABEL $label$17
	if ( ((int_32)$21 != (int_32)$20) ){ goto $label$16 }
	$20 = *(($22 + [32]))
	goto $label$14 
	
.LABEL $label$15
	$20 = $21
	
.LABEL $label$14
	*($14) = $21
	CALL $173($20)
	
.LABEL $label$1
	*([0] + [4]) = ($22 + [112])
	return ($1 & [255])
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [26]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [30]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

int_32 .FUNC $36 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [672])
	$6 = *($0 + [4])
	$7 = *(($6 + [28]))
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)4730947158474227713, ($9 + [8]), *($6))
	*((*(($0 + [4])) + [28])) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [32])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $31($2, CALL $fimport$5(*($2), *($2 + [8]), (int_64)4730947158474227712, $3))
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)$2), [32])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [28])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $37 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)-4139046226129272831, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [32])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $62($4, CALL $fimport$5(*($4), *($4 + [8]), (int_64)-4139046226129272832, $5))
	CALL eosio_assert(((int_32)*($2 + [40]) == (int_32)$4), [32])
	
.LABEL $label$4
	*(($2 + [52])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [384])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [10]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [384])
	CALL memcpy(*($0 + [4]), ($1 + [14]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC _ZN9cryptopix12createCanvasEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	float_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [112])
	*([0] + [4]) = $14
	CALL $14(($14 + [8]), ($0 + [8]))
	$1 = ($0 + [48])
	$11 = (int_64)0
	$6 = ($0 + [72])
	$7 = ($0 + [76])
	$8 = ($0 + [56])
	
.LOOP $label$1:
	$2 = *($6)
	$13 = *($7)
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$2 }
	$12 = ($13 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$3:
	if ( ((int_64)*(*($12)) == (int_64)$11) ){ goto $label$2 }
	$13 = $12
	$4 = ($12 + [-24])
	$12 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$13 == (int_32)$2) ){ goto $label$6 }
	$12 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)$1), [32])
	if ( $12 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$12 = CALL db_find_i64(*($1), *($8), (int_64)4730947158474227712, $11)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*(CALL $31($1, $12) + [16]) == (int_32)$1), [32])
	$11 = ((int_64)$11 + (int_64)1)
	goto $label$1 
	
.LABEL $label$5
	$11 = ((int_64)$11 + (int_64)1)
	goto $label$1 
	
.LABEL $label$4
	$5 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$2()), [96])
	*(($12 = CALL $172([32])) + [16]) = $1
	*($12) = $11
	$9 = CALL floor((CASTING float_64)(uint_32 ((uint_32)(CASTING uint_32)(float_64 CALL floor((CASTING float_64)(uint_64 ((uint_64)CALL $fimport$3() / (uint_64)(int_64)1000000)))) / (uint_32)[86400])))
	*($12 + [10]) = [0]
	*($12 + [8]) = (CASTING uint_32)(float_64 $9)
	*($12 + [12]) = *($14 + [34])
	*($12 + [14]) = *($14 + [36])
	*($14 + [96]) = (($14 + [64]) | [15])
	*($14 + [92]) = ($14 + [64])
	*($14 + [88]) = ($14 + [64])
	CALL $34(($14 + [88]), $12)
	$11 = *($12)
	$4 = ($0 + [56])
	*($12 + [20]) = CALL db_store_i64(*($4), (int_64)4730947158474227712, $5, $11, ($14 + [64]), [15])
	$13 = ($0 + [64])
	if ( (uint_64)($11 <= *($13)) ){ goto $label$7 }
	*($13) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$11 = *($4)
	$10 = *($12)
	*($14 + [104]) = *(($12 + [8]))
	*($12 + [24]) = CALL db_idx64_store($11, (int_64)4730947158474227712, $5, $10, ($14 + [104]))
	$11 = *($4)
	$10 = *($12)
	*($14 + [104]) = *(($12 + [10]))
	*($12 + [28]) = CALL db_idx64_store($11, (int_64)4730947158474227713, $5, $10, ($14 + [104]))
	*($14 + [88]) = $12
	$11 = *($12)
	*($14 + [64]) = $11
	$13 = *(($12 + [20]))
	*($14 + [104]) = $13
	$3 = ($0 + [76])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [80]))) ){ goto $label$9 }
	*($4 + [8]) = $11
	*($4 + [16]) = $13
	*($14 + [88]) = [0]
	*($4) = $12
	*($3) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $33(($0 + [72]), ($14 + [88]), ($14 + [64]), ($14 + [104]))
	
.LABEL $label$8
	$12 = *($14 + [88])
	*($14 + [88]) = [0]
	if ( ($12 == 0) ){ goto $label$10 }
	CALL $173($12)
	
.LABEL $label$10
	$12 = *($14 + [52])
	if ( ($12 == 0) ){ goto $label$11 }
	*(($14 + [56])) = $12
	CALL $173($12)
	
.LABEL $label$11
	$12 = *($14 + [40])
	if ( ($12 == 0) ){ goto $label$12 }
	*(($14 + [44])) = $12
	CALL $173($12)
	
.LABEL $label$12
	*([0] + [4]) = ($14 + [112])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [432])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [8]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [432])
	CALL memcpy(($1 + [10]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [12]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [432])
	CALL memcpy(($1 + [14]), *($0 + [4]), [2])
	*($0 + [4]) = (*($0 + [4]) + [2])
	return $0
}

void .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $172(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $177($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $173($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $173($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [4]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$4 }
	$6 = [268435455]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$7 }
	$6 = int_32($2 >> [3])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $172(($6 << [4]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = (*($0) + [16])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $177($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [4]))
	$5 = ($2 + ($3 << [4]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $173($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [400])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $172([32])) + [16]) = $0
	CALL $32(($8 + [32]), $6)
	*($6 + [24]) = [-1]
	*($6 + [20]) = $1
	*($6 + [28]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $33(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $173($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}