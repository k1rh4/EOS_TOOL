(data (i32.const 4) "Pi\00\00")
(data (i32.const 16) "onerror\00")
(data (i32.const 32) "eosio\00")
(data (i32.const 48) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 112) "transfer\00")
(data (i32.const 128) "award\00")
(data (i32.const 144) "gamebet\00")
(data (i32.const 152) "\00\00\00\00\00\00\00\00\06\00\00\00")
(data (i32.const 176) "black\00")
(data (i32.const 192) "white\00")
(data (i32.const 200) "\00\00\00\00\00\00\00\00\07\00\00\00")
(data (i32.const 224) "ctrl.admin\00")
(data (i32.const 240) "eostgcbonus1\00")
(data (i32.const 256) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 320) "No permission\00")
(data (i32.const 336) "pool.unlockt\00")
(data (i32.const 352) "pool.scansec\00")
(data (i32.const 368) "unable to find key\00")
(data (i32.const 400) "cannot pass end iterator to modify\00")
(data (i32.const 448) "cannot increment end iterator\00")
(data (i32.const 480) "active\00")
(data (i32.const 496) "scanunlock\00")
(data (i32.const 512) "autoscan\00")
(data (i32.const 528) "write\00")
(data (i32.const 544) "object passed to modify is not in multi_index\00")
(data (i32.const 592) "cannot modify objects in table of another contract\00")
(data (i32.const 656) "updater cannot change primary key when modifying an object\00")
(data (i32.const 720) "cannot create objects in table of another contract\00")
(data (i32.const 784) "attempt to add asset with different symbol\00")
(data (i32.const 832) "addition underflow\00")
(data (i32.const 864) "addition overflow\00")
(data (i32.const 896) "invalid symbol name\00")
(data (i32.const 928) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 992) "error reading iterator\00")
(data (i32.const 1024) "read\00")
(data (i32.const 1040) "eosio.token\00")
(data (i32.const 1056) "Get EOS\00")
(data (i32.const 1072) "ctrl.token\00")
(data (i32.const 1088) "eostgctoken1\00")
(data (i32.const 1104) "Get TGC\00")
(data (i32.const 1120) "No redeem TGC.\00")
(data (i32.const 1136) "deposit.tgc\00")
(data (i32.const 1152) "Must <= deposit TGC && not INVEST.\00")
(data (i32.const 1200) "Must deposit TGC.\00")
(data (i32.const 1232) "attempt to subtract asset with different symbol\00")
(data (i32.const 1280) "subtraction underflow\00")
(data (i32.const 1312) "subtraction overflow\00")
(data (i32.const 1344) "get\00")
(data (i32.const 1360) "global.state\00")
(data (i32.const 1376) "invest\00")
(data (i32.const 1392) "No allow.\00")
(data (i32.const 1408) "ctrl.payout\00")
(data (i32.const 1424) "Must transfer TGC.\00")
(data (i32.const 1456) "priv.mintgc\00")
(data (i32.const 1472) "priv.maxtgc\00")
(data (i32.const 1488) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 1552) "Amount out of range.\00")
(data (i32.const 1584) "Total invest out of range\00")
(data (i32.const 1616) "Must transfer to self.\00")
(data (i32.const 1648) "Must transfer EOS\00")
(data (i32.const 1680) "logic failed.\00")
(data (i32.const 1696) "disable\00")
(data (i32.const 1712) "contract closed.\00")
(data (i32.const 1744) "default\00")
(data (i32.const 1760) "cannot pass end iterator to erase\00")
(data (i32.const 1808) "User not enough balance.\00")
(data (i32.const 1840) "Unlock TGC.\00")
(data (i32.const 1856) "object passed to erase is not in multi_index\00")
(data (i32.const 1904) "cannot erase objects in table of another contract\00")
(data (i32.const 1968) "attempt to remove object that was not in multi_index\00")
(data (i32.const 2032) "had upgrade\00")
(data (i32.const 2048) "ctrl.priv\00")
(data (i32.const 2064) "eostgcpriv11\00")
(data (i32.const 10480) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "__multi3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__udivti3" (func $fimport$1 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$2))
(import "env" "action_data_size" (func $fimport$3 (result i32)))
(import "env" "current_receiver" (func $fimport$4 (result i64)))
(import "env" "current_time" (func $fimport$5 (result i64)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$10 (param i32)))
(import "env" "db_store_i64" (func $fimport$11 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$12 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$13 (param i32 i32)))
(import "env" "has_auth" (func $fimport$14 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$16 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$17 (param i64)))
(import "env" "require_auth2" (func $fimport$18 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$19 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$20 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "apply" (func $5))
(export "malloc" (func $81))
(export "free" (func $84))
(export "memcmp" (func $91))
(export "strlen" (func $92))
(table $0 8 8 anyfunc)
(elem (i32.const 0) $93 $6 $14 $8 $12 $10 $80 $71)



int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $85($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $93 ()
{
	(unreachable)
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [992])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $85([104])
	CALL $39($6)
	*($6 + [88]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [24])
	*($8 + [44]) = ($6 + [32])
	*($8 + [48]) = ($6 + [48])
	*($8 + [52]) = ($6 + [56])
	*($8 + [56]) = ($6 + [72])
	CALL $40(($8 + [32]), ($8 + [24]))
	*($6 + [92]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [92])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $41(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $86($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $49 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [144])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	$4 = *($1)
	$5 = *($3)
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)*(($1 + [16]))), [1232])
	$6 = (int_64)
	*($1 + [8]) = $6(*($1 + [8]) - *($5)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1280])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [1312])
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))), [784])
	$6 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [832])
	CALL eosio_assert(((int_64)*($1 + [32]) < (int_64)4611686018427387904), [864])
	*($1 + [48]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [656])
	*($7 + [96]) = ($7 + [80])
	*($7 + [92]) = $7
	*($7 + [88]) = $7
	*($7 + [104]) = ($7 + [88])
	*($7 + [116]) = ($1 + [8])
	*($7 + [112]) = $1
	*($7 + [120]) = ($1 + [24])
	*($7 + [124]) = ($1 + [32])
	*($7 + [128]) = ($1 + [48])
	*($7 + [132]) = ($1 + [56])
	*($7 + [136]) = ($1 + [72])
	CALL $37(($7 + [112]), ($7 + [104]))
	CALL db_update_i64(*($1 + [92]), $2, $7, [80])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [144])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [144])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	$4 = *($1)
	CALL $50($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [656])
	*($5 + [96]) = ($5 + [80])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	*($5 + [104]) = ($5 + [88])
	*($5 + [116]) = ($1 + [8])
	*($5 + [112]) = $1
	*($5 + [120]) = ($1 + [24])
	*($5 + [124]) = ($1 + [32])
	*($5 + [128]) = ($1 + [48])
	*($5 + [132]) = ($1 + [56])
	*($5 + [136]) = ($1 + [72])
	CALL $37(($5 + [112]), ($5 + [104]))
	CALL db_update_i64(*($1 + [92]), $2, $5, [80])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [144])
}

void .FUNC $43 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [128])
	*([0] + [4]) = $12
	$5 = *($0 + [8])
	$8 = (int_64)0
	$7 = (int_64)59
	$0 = [480]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$6 }
	$6 = *($0)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$6 = ($6 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	$8 = (int_64)0
	$7 = (int_64)59
	$0 = [112]
	$11 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$12 }
	$6 = *($0)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$12
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	*((($12 + [8]) + [28])) = *(($3 + [12]))
	*((($12 + [8]) + [24])) = *(($3 + [8]))
	*((($12 + [8]) + [20])) = *(($3 + [4]))
	*($12 + [16]) = $2
	*($12 + [8]) = $5
	*($12 + [24]) = *($3)
	CALL $90((($12 + [8]) + [32]), $4)
	*($12 + [64]) = $11
	*($12 + [56]) = $1
	*(($0 = CALL $85([16]))) = $5
	*($0 + [8]) = $9
	*((($12 + [56]) + [32])) = [0]
	$6 = ($0 + [16])
	*((($12 + [56]) + [24])) = $6
	*((($12 + [56]) + [20])) = $6
	*($12 + [72]) = $0
	*($12 + [84]) = [0]
	*((($12 + [56]) + [36])) = [0]
	$0 = *($12 + [40])
	$6 = ( *((($12 + [8]) + [36])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($6 + [32])
	$8 = (CASTING uint_64)(uint_32 $6)
	$6 = (($12 + [56]) + [28])
	
.LOOP $label$13:
	$0 = ($0 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$13 }
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $26($6, $0)
	$6 = *(($12 + [88]))
	$0 = *(($12 + [84]))
	goto $label$14 
	
.LABEL $label$15
	$6 = [0]
	$0 = [0]
	
.LABEL $label$14
	*($12 + [116]) = $0
	*($12 + [112]) = $0
	*($12 + [120]) = $6
	*($12 + [96]) = ($12 + [112])
	*($12 + [104]) = ($12 + [8])
	CALL $45(($12 + [104]), ($12 + [96]))
	CALL $46(($12 + [112]), ($12 + [56]))
	$0 = *($12 + [112])
	CALL send_inline($0, (*($12 + [116]) - $0))
	$0 = *($12 + [112])
	if ( ($0 == 0) ){ goto $label$16 }
	*($12 + [116]) = $0
	CALL $86($0)
	
.LABEL $label$16
	$0 = *($12 + [84])
	if ( ($0 == 0) ){ goto $label$17 }
	*(($12 + [88])) = $0
	CALL $86($0)
	
.LABEL $label$17
	$0 = *($12 + [72])
	if ( ($0 == 0) ){ goto $label$18 }
	*(($12 + [76])) = $0
	CALL $86($0)
	
.LABEL $label$18
	if ( ((*($12 + [40]) & [1]) == 0) ){ goto $label$19 }
	CALL $86(*(($12 + [48])))
	
.LABEL $label$19
	*([0] + [4]) = ($12 + [128])
}

void .FUNC $42 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $85(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $89($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $86($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $86($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $41 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $85(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $89($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $86($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $86($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1024])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1024])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [528])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [528])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $26($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [528])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [528])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $30(CALL $31($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [528])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [528])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [528])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [528])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $47(*($1), ($0 + [32]))
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [144])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	*($1 + [56]) = (int_64)0
	*($1 + [72]) = (int_64)0
	$4 = *($1)
	CALL eosio_assert([1], [656])
	*($5 + [96]) = ($5 + [80])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	*($5 + [104]) = ($5 + [88])
	*($5 + [116]) = ($1 + [8])
	*($5 + [112]) = $1
	*($5 + [120]) = ($1 + [24])
	*($5 + [124]) = ($1 + [32])
	*($5 + [128]) = ($1 + [48])
	*($5 + [132]) = ($1 + [56])
	*($5 + [136]) = ($1 + [72])
	CALL $37(($5 + [112]), ($5 + [104]))
	CALL db_update_i64(*($1 + [92]), $2, $5, [80])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [144])
}

void .FUNC $8 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [144])
	*([0] + [4]) = $16
	*(($9 = (($16 + [128]) + [8]))) = *(($3 + [8]))
	*($16 + [128]) = *($3)
	CALL $90(($16 + [112]), $4)
	*((($16 + [32]) + [8])) = *($9)
	*($16 + [32]) = *($16 + [128])
	$9 = CALL $55($0, $1, $2, ($16 + [32]), ($16 + [112]))
	if ( ((*($16 + [112]) & [1]) == 0) ){ goto $label$1 }
	CALL $86(*($16 + [120]))
	
.LABEL $label$1
	if ( ($9 == 0) ){ goto $label$2 }
	$14 = (int_64)0
	$15 = (int_64)59
	$9 = [1360]
	$10 = (int_64)0
	
.LOOP $label$3:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$4 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$5 = ($5 + [165])
	goto $label$5 
	
.LABEL $label$6
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$4
	$9 = ($9 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$10 = ((int_64)$13 | (int_64)$10)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$3 }
	$7 = *(($0 + [40]))
	$11 = *(($0 + [44]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$7 }
	$9 = ($11 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$8:
	if ( ((int_64)*(*($9)) == (int_64)$10) ){ goto $label$7 }
	$11 = $9
	$5 = ($9 + [-24])
	$9 = $5
	if ( ((int_32)($5 + $8) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$6 = ($0 + [16])
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$12 }
	$9 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [256])
	if ( $9 ){ goto $label$11 }
	$12 = (int_64)0
	goto $label$9 
	
.LABEL $label$12
	$9 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $10)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$10 }
	$9 = CALL $17($6, $9)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [256])
	
.LABEL $label$11
	$12 = *($9 + [8])
	goto $label$9 
	
.LABEL $label$10
	$12 = (int_64)0
	
.LABEL $label$9
	$14 = (int_64)0
	$13 = (int_64)59
	$9 = [1376]
	$10 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$14 > (uint_64)(int_64)5) ){ goto $label$18 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$5 = ($5 + [165])
	goto $label$16 
	
.LABEL $label$18
	$15 = (int_64)0
	if ( ((uint_64)$14 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$14
	$9 = ($9 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$10 = ((int_64)$15 | (int_64)$10)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$13 }
	CALL eosio_assert(((int_64)$12 == (int_64)$10), [1392])
	$14 = (int_64)0
	$13 = (int_64)59
	$9 = [1408]
	$10 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$14 > (uint_64)(int_64)10) ){ goto $label$24 }
	$5 = *($9)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$5 = ($5 + [165])
	goto $label$22 
	
.LABEL $label$24
	$15 = (int_64)0
	if ( ((int_64)$14 == (int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$20
	$9 = ($9 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$10 = ((int_64)$15 | (int_64)$10)
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_64)$14 != (int_64)13) ){ goto $label$19 }
	$7 = *(($0 + [40]))
	$11 = *(($0 + [44]))
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$25 }
	$9 = ($11 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$26:
	if ( ((int_64)*(*($9)) == (int_64)$10) ){ goto $label$25 }
	$11 = $9
	$5 = ($9 + [-24])
	$9 = $5
	if ( ((int_32)($5 + $8) != (int_32)[-24]) ){ goto $label$26 }
	
.LABEL $label$25
	if ( ((int_32)$11 == (int_32)$7) ){ goto $label$31 }
	$9 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [256])
	if ( $9 ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$9 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $10)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$29 }
	$9 = CALL $17($6, $9)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [256])
	
.LABEL $label$30
	if ( ((int_64)*($9 + [8]) == (int_64)$1) ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	if ( ((int_64)0 != (int_64)$1) ){ goto $label$27 }
	
.LABEL $label$28
	*(($9 = (($16 + [96]) + [8]))) = *(($3 + [8]))
	*($16 + [96]) = *($3)
	CALL $90(($16 + [80]), $4)
	*(($16 + [8])) = *($9)
	*($16) = *($16 + [96])
	CALL $56($0, $1, $2, $16, ($16 + [80]))
	if ( ((*($16 + [80]) & [1]) == 0) ){ goto $label$2 }
	CALL $86(*($16 + [88]))
	goto $label$2 
	
.LABEL $label$27
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)1128748036), [1424])
	*(($9 = (($16 + [64]) + [8]))) = *($3 + [8])
	*($16 + [64]) = *($3)
	CALL $90(($16 + [48]), $4)
	*((($16 + [16]) + [8])) = *($9)
	*($16 + [16]) = *($16 + [64])
	CALL $57($0, $1, $2, ($16 + [16]), ($16 + [48]))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$2 }
	CALL $86(*($16 + [56]))
	
.LABEL $label$2
	*([0] + [4]) = ($16 + [144])
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [928])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [896])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $51(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $52(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $86(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC $6 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [112])
	*([0] + [4]) = $18
	*($18 + [96]) = $3
	$17 = [1]
	if ( CALL has_auth(*($0 + [8])) ){ goto $label$1 }
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [224]
	$13 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$12 > (uint_64)(int_64)9) ){ goto $label$7 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$6 = ($6 + [165])
	goto $label$5 
	
.LABEL $label$7
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$3
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$2 }
	$12 = (int_64)0
	$14 = (int_64)59
	$17 = [240]
	$15 = (int_64)0
	
.LOOP $label$8:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$9 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$9
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$11 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$8 }
	$8 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$12 }
	$17 = ($5 + [-24])
	$16 = ([0] - $8)
	
.LOOP $label$13:
	if ( ((int_64)*(*($17)) == (int_64)$13) ){ goto $label$12 }
	$5 = $17
	$6 = ($17 + [-24])
	$17 = $6
	if ( ((int_32)($6 + $16) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$6 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	$17 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$6), [256])
	if ( $17 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$17 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $13)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$14 }
	$17 = CALL $17($6, $17)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$6), [256])
	
.LABEL $label$15
	$15 = *($17 + [8])
	
.LABEL $label$14
	$17 = CALL has_auth($15)
	
.LABEL $label$1
	CALL eosio_assert($17, [320])
	if ( ((int_64)$1 <= (int_64)4941026370714348399) ){ goto $label$23 }
	if ( ((int_64)$1 == (int_64)4941026370714348400) ){ goto $label$22 }
	if ( ((int_64)$1 == (int_64)5075293270630203392) ){ goto $label$24 }
	if ( ((int_64)$1 != (int_64)5075293261768602112) ){ goto $label$18 }
	
.LABEL $label$24
	CALL require_auth(*(($0 + [8])))
	goto $label$18 
	
.LABEL $label$23
	if ( ((int_64)$1 == (int_64)-5918380403134230272) ){ goto $label$21 }
	if ( ((int_64)$1 != (int_64)4923678504440037376) ){ goto $label$18 }
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [1136]
	$13 = (int_64)0
	
.LOOP $label$25:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$30 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$6 = ($6 + [165])
	goto $label$28 
	
.LABEL $label$30
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$29
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$26
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$25 }
	CALL $22($0, $13, (int_64)0)
	$17 = CALL db_lowerbound_i64(*($0 + [144]), *(($0 + [152])), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$17 }
	$4 = ($0 + [144])
	$17 = CALL $18($4, $17)
	$7 = ($18 + [72])
	$8 = ($18 + [80])
	$9 = ($18 + [84])
	$10 = ($18 + [88])
	
.LOOP $label$31:
	$12 = *($17)
	*((($18 + [56]) + [8])) = $12
	*($7) = (int_64)-1
	$6 = [0]
	*($8) = [0]
	$14 = *(($0 + [8]))
	*($18 + [56]) = $14
	*($9) = [0]
	*($10) = [0]
	$5 = CALL db_lowerbound_i64($14, $12, (int_64)3607749779137757184, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$32 }
	$6 = CALL $38(($18 + [56]), $5)
	
.LABEL $label$32
	$5 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($5, [1760])
	CALL eosio_assert($5, [448])
	$5 = CALL db_next_i64(*($6 + [92]), ($18 + [104]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$33 }
	CALL $38(($18 + [56]), $5)
	
.LABEL $label$33
	CALL $64(($18 + [56]), $6)
	$16 = [0]
	$6 = ((int_32)$17 != (int_32)[0])
	CALL eosio_assert($6, [1760])
	CALL eosio_assert($6, [448])
	$6 = CALL db_next_i64(*($17 + [12]), ($18 + [104]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$34 }
	$16 = CALL $18($4, $6)
	
.LABEL $label$34
	CALL $65($4, $17)
	$5 = *($8)
	if ( ($5 == 0) ){ goto $label$35 }
	$17 = *($9)
	if ( ((int_32)$17 == (int_32)$5) ){ goto $label$37 }
	
.LOOP $label$38:
	$17 = ($17 + [-24])
	$6 = *($17)
	*($17) = [0]
	if ( ($6 == 0) ){ goto $label$39 }
	CALL $86($6)
	
.LABEL $label$39
	if ( ((int_32)$5 != (int_32)$17) ){ goto $label$38 }
	$17 = *($8)
	goto $label$36 
	
.LABEL $label$37
	$17 = $5
	
.LABEL $label$36
	*($9) = $5
	CALL $86($17)
	
.LABEL $label$35
	$17 = $16
	if ( $16 ){ goto $label$31 }
	goto $label$17 
	
.LABEL $label$22
	*(($18 + [88])) = [0]
	*($18 + [64]) = $2
	*($18 + [72]) = (int_64)-1
	*($18 + [80]) = (int_64)0
	*($18 + [56]) = *(($0 + [8]))
	CALL $19(($18 + [104]), ($18 + [56]), $2, [368])
	$1 = *($18 + [96])
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [928])
	$12 = (int_64)4409172
	$17 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$6 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$40 }
	goto $label$19 
	
.LABEL $label$21
	$17 = CALL db_lowerbound_i64(*($0 + [144]), *(($0 + [152])), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$17 }
	$10 = ($0 + [144])
	$16 = CALL $18($10, $17)
	$4 = ($18 + [72])
	$8 = ($18 + [80])
	$9 = ($18 + [84])
	$7 = ($18 + [88])
	
.LOOP $label$43:
	$12 = *($16)
	*((($18 + [56]) + [8])) = $12
	*($4) = (int_64)-1
	*($8) = [0]
	*($18 + [56]) = *(($0 + [8]))
	*($9) = [0]
	*($7) = [0]
	CALL $19(($18 + [104]), ($18 + [56]), $12, [368])
	$17 = *($18 + [108])
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [400])
	CALL $66(($18 + [56]), $17, (int_64)0, ($18 + [48]))
	$5 = *($8)
	if ( ($5 == 0) ){ goto $label$44 }
	$17 = *($9)
	if ( ((int_32)$17 != (int_32)$5) ){ goto $label$46 }
	$17 = $5
	goto $label$45 
	
.LABEL $label$46
	
.LOOP $label$47:
	$17 = ($17 + [-24])
	$6 = *($17)
	*($17) = [0]
	if ( ($6 == 0) ){ goto $label$48 }
	CALL $86($6)
	
.LABEL $label$48
	if ( ((int_32)$5 != (int_32)$17) ){ goto $label$47 }
	$17 = *($8)
	
.LABEL $label$45
	*($9) = $5
	CALL $86($17)
	
.LABEL $label$44
	CALL eosio_assert([1], [448])
	$17 = CALL db_next_i64(*($16 + [12]), ($18 + [56]))
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$17 }
	$16 = CALL $18($10, $17)
	goto $label$43 
	
.LABEL $label$20
	$6 = [0]
	
.LABEL $label$19
	CALL eosio_assert($6, [896])
	CALL eosio_assert(((uint_64)*($18 + [96]) <= (uint_64)*(*($18 + [108]) + [8])), [1808])
	$17 = *($18 + [108])
	*($18 + [48]) = ($18 + [96])
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [400])
	$12 = (int_64)0
	CALL $67(($18 + [56]), $17, (int_64)0, ($18 + [48]))
	$11 = (int_64)59
	$17 = [1136]
	$13 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$54 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$6 = ($6 + [165])
	goto $label$52 
	
.LABEL $label$54
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$50
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$49 }
	$9 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$55 }
	$17 = ($5 + [-24])
	$16 = ([0] - $9)
	
.LOOP $label$56:
	if ( ((int_64)*(*($17)) == (int_64)$13) ){ goto $label$55 }
	$5 = $17
	$6 = ($17 + [-24])
	$17 = $6
	if ( ((int_32)($6 + $16) != (int_32)[-24]) ){ goto $label$56 }
	
.LABEL $label$55
	$8 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$60 }
	$17 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$8), [256])
	if ( $17 ){ goto $label$59 }
	$12 = (int_64)0
	goto $label$57 
	
.LABEL $label$60
	$17 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $13)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$58 }
	$17 = CALL $17($8, $17)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$8), [256])
	
.LABEL $label$59
	$12 = *($17 + [8])
	goto $label$57 
	
.LABEL $label$58
	$12 = (int_64)0
	
.LABEL $label$57
	$15 = (int_64))($12 - *($18 + [96]))
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [1136]
	$13 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$66 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$6 = ($6 + [165])
	goto $label$64 
	
.LABEL $label$66
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$62
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$61 }
	CALL $22($0, $13, $15)
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [1072]
	$13 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$12 > (uint_64)(int_64)9) ){ goto $label$72 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$6 = ($6 + [165])
	goto $label$70 
	
.LABEL $label$72
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$68
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$67 }
	$12 = (int_64)0
	$14 = (int_64)59
	$17 = [1088]
	$15 = (int_64)0
	
.LOOP $label$73:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$74 }
	$6 = *($17)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$6 = ($6 + [165])
	goto $label$75 
	
.LABEL $label$76
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$74
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$11 | (int_64)$15)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$73 }
	$9 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$77 }
	$17 = ($5 + [-24])
	$16 = ([0] - $9)
	
.LOOP $label$78:
	if ( ((int_64)*(*($17)) == (int_64)$13) ){ goto $label$77 }
	$5 = $17
	$6 = ($17 + [-24])
	$17 = $6
	if ( ((int_32)($6 + $16) != (int_32)[-24]) ){ goto $label$78 }
	
.LABEL $label$77
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$81 }
	$17 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$8), [256])
	if ( $17 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$17 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $13)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$79 }
	$17 = CALL $17($8, $17)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$8), [256])
	
.LABEL $label$80
	$15 = *($17 + [8])
	
.LABEL $label$79
	$12 = *(*($18 + [108]))
	*($18 + [40]) = (int_64)1128748036
	*(($18 + [24])) = [0]
	*($18 + [32]) = $1
	*($18 + [16]) = (int_64)0
	$17 = CALL strlen([1840])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$82 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$85 }
	*($18 + [16]) = ($17 << [1])
	$6 = (($18 + [16]) | [1])
	if ( $17 ){ goto $label$84 }
	goto $label$83 
	
.LABEL $label$85
	$5 = (($17 + [16]) & [-16])
	$6 = CALL $85($5)
	*($18 + [16]) = ($5 | [1])
	*($18 + [24]) = $6
	*($18 + [20]) = $17
	
.LABEL $label$84
	CALL memcpy($6, [1840], $17)
	
.LABEL $label$83
	*(($6 + $17)) = [0]
	*(($18 + [8])) = *((($18 + [32]) + [8]))
	*($18) = *($18 + [32])
	CALL $43($0, $15, $12, $18, ($18 + [16]))
	if ( ((*($18 + [16]) & [1]) == 0) ){ goto $label$86 }
	CALL $86(*($18 + [24]))
	
.LABEL $label$86
	$5 = *($18 + [80])
	if ( ($5 == 0) ){ goto $label$17 }
	$0 = ($18 + [84])
	$17 = *($0)
	if ( ((int_32)$17 == (int_32)$5) ){ goto $label$88 }
	
.LOOP $label$89:
	$17 = ($17 + [-24])
	$6 = *($17)
	*($17) = [0]
	if ( ($6 == 0) ){ goto $label$90 }
	CALL $86($6)
	
.LABEL $label$90
	if ( ((int_32)$5 != (int_32)$17) ){ goto $label$89 }
	$17 = *(($18 + [80]))
	goto $label$87 
	
.LABEL $label$88
	$17 = $5
	
.LABEL $label$87
	*($0) = $5
	CALL $86($17)
	goto $label$17 
	
.LABEL $label$82
	CALL $87(($18 + [16]))
	
.LABEL $label$18
	CALL $68($0, $1, $2, $3)
	
.LABEL $label$17
	*([0] + [4]) = ($18 + [112])
	(unreachable)
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1024])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [1024])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [1024])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [272])
	*([0] + [4]) = $11
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [16]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$7 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [32]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$9 == (int_64)$1), [48])
	
.LABEL $label$7
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [112]
	$9 = (int_64)0
	
.LOOP $label$16:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$21 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$3 = ($3 + [165])
	goto $label$19 
	
.LABEL $label$21
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$18
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$17
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$16 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$15 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [16]
	$9 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$27 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$3 = ($3 + [165])
	goto $label$25 
	
.LABEL $label$27
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$23
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$15 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [128]
	$9 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$33 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$3 = ($3 + [165])
	goto $label$31 
	
.LABEL $label$33
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$29
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$28 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$15 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [144]
	$9 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$39 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$3 = ($3 + [165])
	goto $label$37 
	
.LABEL $label$39
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$35
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$34 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*(($11 + [112])) = $0
	*(($11 + [120])) = (int_64)-1
	*(($11 + [128])) = [0]
	*(($11 + [132])) = [0]
	*($11 + [88]) = [160]
	*($11 + [96]) = $0
	*($11 + [104]) = $0
	*(($11 + [136])) = [0]
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [176]
	$9 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$45 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$3 = ($3 + [165])
	goto $label$43 
	
.LABEL $label$45
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$41
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$40 }
	*(($11 + [152])) = $9
	*(($11 + [160])) = (int_64)-1
	$8 = (int_64)0
	*(($11 + [168])) = (int_64)0
	*(($11 + [176])) = [0]
	*($11 + [144]) = $0
	$7 = (int_64)59
	$6 = [192]
	$9 = (int_64)0
	
.LOOP $label$46:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$51 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$3 = ($3 + [165])
	goto $label$49 
	
.LABEL $label$51
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$50
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$48
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$47
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$46 }
	*(($11 + [192])) = $9
	*(($11 + [200])) = (int_64)-1
	*(($11 + [208])) = (int_64)0
	*(($11 + [216])) = [0]
	*($11 + [184]) = $0
	*($11 + [224]) = $1
	*($11 + [88]) = [208]
	*($11 + [232]) = $0
	*(($11 + [240])) = $0
	*(($11 + [248])) = (int_64)-1
	*(($11 + [256])) = [0]
	*(($11 + [260])) = [0]
	*(($11 + [264])) = [0]
	if ( ((int_64)$2 <= (int_64)-3617168760277827585) ){ goto $label$56 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$55 }
	if ( ((int_64)$2 == (int_64)7111865926932234240) ){ goto $label$54 }
	if ( ((int_64)$2 != (int_64)4982871454518345728) ){ goto $label$52 }
	*($11 + [84]) = [0]
	*($11 + [80]) = [1]
	*($11 + [8 align=4]) = *($11 + [80])
	CALL $7(($11 + [88]), ($11 + [8]))
	goto $label$52 
	
.LABEL $label$56
	if ( ((int_64)$2 == (int_64)-5002754507398971392) ){ goto $label$53 }
	if ( ((int_64)$2 != (int_64)-4463844249560678400) ){ goto $label$52 }
	*($11 + [52]) = [0]
	*($11 + [48]) = [2]
	*($11 + [40 align=4]) = *($11 + [48])
	CALL $15(($11 + [88]), ($11 + [40]))
	goto $label$52 
	
.LABEL $label$55
	*($11 + [76]) = [0]
	*($11 + [72]) = [3]
	*($11 + [16 align=4]) = *($11 + [72])
	CALL $9(($11 + [88]), ($11 + [16]))
	goto $label$52 
	
.LABEL $label$54
	*($11 + [60]) = [0]
	*($11 + [56]) = [4]
	*($11 + [32 align=4]) = *($11 + [56])
	CALL $13(($11 + [88]), ($11 + [32]))
	goto $label$52 
	
.LABEL $label$53
	*($11 + [68]) = [0]
	*($11 + [64]) = [5]
	*($11 + [24 align=4]) = *($11 + [64])
	CALL $11(($11 + [88]), ($11 + [24]))
	
.LABEL $label$52
	*($11 + [88]) = [208]
	$4 = *(($11 + [256]))
	if ( ($4 == 0) ){ goto $label$57 }
	$5 = ($11 + [260])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$59 }
	
.LOOP $label$60:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$61 }
	CALL $86($3)
	
.LABEL $label$61
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$60 }
	$6 = *(($11 + [256]))
	goto $label$58 
	
.LABEL $label$59
	$6 = $4
	
.LABEL $label$58
	*($5) = $4
	CALL $86($6)
	
.LABEL $label$57
	CALL $16(($11 + [88]))
	
.LABEL $label$14
	*([0] + [4]) = ($11 + [272])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $14 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_64 $18
	int_32 $19
	$19 = (*([0] + [4]) - [112])
	*([0] + [4]) = $19
	$17 = [1]
	if ( CALL has_auth(*($0 + [8])) ){ goto $label$1 }
	$13 = (int_64)0
	$15 = (int_64)59
	$17 = [224]
	$14 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$13 > (uint_64)(int_64)9) ){ goto $label$7 }
	$5 = *($17)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$5 = ($5 + [165])
	goto $label$5 
	
.LABEL $label$7
	$18 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$3
	$17 = ($17 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$18 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$2 }
	$13 = (int_64)0
	$18 = (int_64)59
	$17 = [240]
	$12 = (int_64)0
	
.LOOP $label$8:
	$15 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$9 }
	$5 = *($17)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$5 = ($5 + [165])
	goto $label$10 
	
.LABEL $label$11
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$9
	$17 = ($17 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$12 = ((int_64)$15 | (int_64)$12)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$8 }
	$9 = *(($0 + [40]))
	$4 = *(($0 + [44]))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$12 }
	$17 = ($4 + [-24])
	$16 = ([0] - $9)
	
.LOOP $label$13:
	if ( ((int_64)*(*($17)) == (int_64)$14) ){ goto $label$12 }
	$4 = $17
	$5 = ($17 + [-24])
	$17 = $5
	if ( ((int_32)($5 + $16) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$5 = ($0 + [16])
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$16 }
	$17 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$5), [256])
	if ( $17 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$17 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $14)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$14 }
	$17 = CALL $17($5, $17)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$5), [256])
	
.LABEL $label$15
	$12 = *($17 + [8])
	
.LABEL $label$14
	$17 = CALL has_auth($12)
	
.LABEL $label$1
	$1 = ($0 + [8])
	CALL eosio_assert($17, [320])
	$13 = (int_64)0
	$18 = (int_64)59
	$17 = [336]
	$14 = (int_64)0
	
.LOOP $label$17:
	$15 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$18 }
	$5 = *($17)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$5 = ($5 + [165])
	goto $label$19 
	
.LABEL $label$20
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$18
	$17 = ($17 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$17 }
	$9 = *(($0 + [40]))
	$4 = *(($0 + [44]))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$21 }
	$17 = ($4 + [-24])
	$16 = ([0] - $9)
	
.LOOP $label$22:
	if ( ((int_64)*(*($17)) == (int_64)$14) ){ goto $label$21 }
	$4 = $17
	$5 = ($17 + [-24])
	$17 = $5
	if ( ((int_32)($5 + $16) != (int_32)[-24]) ){ goto $label$22 }
	
.LABEL $label$21
	$2 = ($0 + [16])
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$26 }
	$17 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$2), [256])
	if ( $17 ){ goto $label$25 }
	$15 = (int_64)86400
	goto $label$23 
	
.LABEL $label$26
	$17 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $14)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$24 }
	$17 = CALL $17($2, $17)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$2), [256])
	
.LABEL $label$25
	$15 = *($17 + [8])
	goto $label$23 
	
.LABEL $label$24
	$15 = (int_64)86400
	
.LABEL $label$23
	$18 = CALL current_time()
	$13 = (int_64)0
	$17 = CALL db_lowerbound_i64(*($0 + [144]), *(($0 + [152])), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$27 }
	$3 = ($0 + [144])
	$16 = CALL $18($3, $17)
	$14 = ((int_64)((uint_64)$18 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$7 = ($19 + [40])
	$8 = ($19 + [48])
	$9 = ($19 + [56])
	$10 = ($19 + [60])
	$11 = ($19 + [64])
	
.LOOP $label$28:
	$18 = *($16)
	*($7) = $18
	*($8) = (int_64)-1
	*($9) = [0]
	*($19 + [32]) = *($1)
	*($10) = [0]
	*($11) = [0]
	CALL $19(($19 + [16]), ($19 + [32]), $18, [368])
	$17 = *(*($19 + [20]) + [48])
	if ( ($17 == 0) ){ goto $label$29 }
	if ( ((uint_64)((int_64)(CASTING uint_64)(uint_32 $17) + (int_64)$15) > (uint_64)$14) ){ goto $label$29 }
	$17 = *($19 + [20])
	CALL eosio_assert(((int_32)$17 != (int_32)[0]), [400])
	CALL $20(($19 + [32]), $17, (int_64)0, ($19 + [96]))
	
.LABEL $label$29
	$4 = *($9)
	if ( ($4 == 0) ){ goto $label$30 }
	$17 = *($10)
	if ( ((int_32)$17 != (int_32)$4) ){ goto $label$32 }
	$17 = $4
	goto $label$31 
	
.LABEL $label$32
	
.LOOP $label$33:
	$17 = ($17 + [-24])
	$5 = *($17)
	*($17) = [0]
	if ( ($5 == 0) ){ goto $label$34 }
	CALL $86($5)
	
.LABEL $label$34
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$33 }
	$17 = *($9)
	
.LABEL $label$31
	*($10) = $4
	CALL $86($17)
	
.LABEL $label$30
	CALL eosio_assert([1], [448])
	$17 = CALL db_next_i64(*($16 + [12]), ($19 + [32]))
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$27 }
	$16 = CALL $18($3, $17)
	goto $label$28 
	
.LABEL $label$27
	$18 = (int_64)59
	$17 = [352]
	$14 = (int_64)0
	
.LOOP $label$35:
	$15 = (int_64)0
	if ( ((uint_64)$13 > (uint_64)(int_64)11) ){ goto $label$36 }
	$5 = *($17)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$5 = ($5 + [165])
	goto $label$37 
	
.LABEL $label$38
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$36
	$17 = ($17 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$35 }
	$9 = *(($0 + [40]))
	$4 = *(($0 + [44]))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$39 }
	$17 = ($4 + [-24])
	$16 = ([0] - $9)
	
.LOOP $label$40:
	if ( ((int_64)*(*($17)) == (int_64)$14) ){ goto $label$39 }
	$4 = $17
	$5 = ($17 + [-24])
	$17 = $5
	if ( ((int_32)($5 + $16) != (int_32)[-24]) ){ goto $label$40 }
	
.LABEL $label$39
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$45 }
	$17 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$2), [256])
	if ( $17 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$17 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $14)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$43 }
	$17 = CALL $17($2, $17)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$2), [256])
	
.LABEL $label$44
	$12 = *($17 + [8])
	if ( ((int_64)($12 == 0) == 0) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$12 = (int_64)600
	
.LABEL $label$42
	$13 = CALL current_time()
	*(($19 + [60])) = [0]
	*(($19 + [64])) = [0]
	*($19 + [44]) = [0]
	*($19 + [48]) = [0]
	*($19 + [52]) = [0]
	*($19 + [56]) = [0]
	*($19 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)$13 / (uint_64)(int_64)1000000)) + [60])
	*($19 + [68]) = [0]
	*(($19 + [72])) = [0]
	*(($19 + [76])) = [0]
	*($19 + [80]) = [0]
	*(($19 + [84])) = [0]
	*(($19 + [88])) = [0]
	$4 = ($19 + [68])
	$6 = *($1)
	$13 = (int_64)0
	$15 = (int_64)59
	$17 = [480]
	$14 = (int_64)0
	
.LOOP $label$46:
	if ( ((uint_64)$13 > (uint_64)(int_64)5) ){ goto $label$51 }
	$5 = *($17)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$50 }
	$5 = ($5 + [165])
	goto $label$49 
	
.LABEL $label$51
	$18 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$50
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$49
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$48
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$47
	$17 = ($17 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$18 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$46 }
	*($19 + [24]) = $14
	*($19 + [16]) = $6
	$13 = (int_64)0
	$15 = (int_64)59
	$17 = [496]
	$14 = (int_64)0
	
.LOOP $label$52:
	if ( ((uint_64)$13 > (uint_64)(int_64)9) ){ goto $label$57 }
	$5 = *($17)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$5 = ($5 + [165])
	goto $label$55 
	
.LABEL $label$57
	$18 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$54 }
	goto $label$53 
	
.LABEL $label$56
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$54
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$53
	$17 = ($17 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$18 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$52 }
	*($19 + [96]) = $14
	CALL $21($4, ($19 + [16]), $1, ($19 + [96]), ($19 + [8]))
	*(($19 + [52])) = $12
	$13 = (int_64)0
	$15 = (int_64)59
	$17 = [512]
	$14 = (int_64)0
	
.LOOP $label$58:
	if ( ((uint_64)$13 > (uint_64)(int_64)7) ){ goto $label$63 }
	$5 = *($17)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$5 = ($5 + [165])
	goto $label$61 
	
.LABEL $label$63
	$18 = (int_64)0
	if ( ((uint_64)$13 <= (uint_64)(int_64)11) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$62
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$60
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$59
	$17 = ($17 + [1])
	$13 = ((int_64)$13 + (int_64)1)
	$14 = ((int_64)$18 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$58 }
	$9 = *(($0 + [40]))
	$4 = *(($0 + [44]))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$64 }
	$17 = ($4 + [-24])
	$16 = ([0] - $9)
	
.LOOP $label$65:
	if ( ((int_64)*(*($17)) == (int_64)$14) ){ goto $label$64 }
	$4 = $17
	$5 = ($17 + [-24])
	$17 = $5
	if ( ((int_32)($5 + $16) != (int_32)[-24]) ){ goto $label$65 }
	
.LABEL $label$64
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$69 }
	$17 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$2), [256])
	if ( $17 ){ goto $label$68 }
	$13 = (int_64)1
	goto $label$66 
	
.LABEL $label$69
	$17 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $14)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$67 }
	$17 = CALL $17($2, $17)
	CALL eosio_assert(((int_32)*($17 + [24]) == (int_32)$2), [256])
	
.LABEL $label$68
	$13 = *($17 + [8])
	goto $label$66 
	
.LABEL $label$67
	$13 = (int_64)1
	
.LABEL $label$66
	CALL $22($0, $14, ((int_64)$13 + (int_64)1))
	*($19 + [24]) = $14
	*($19 + [16]) = $13
	$13 = *(($0 + [8]))
	CALL $23(($19 + [96]), ($19 + [32]))
	$17 = *($19 + [96])
	CALL send_deferred(($19 + [16]), $13, $17, (*($19 + [100]) - $17), [0])
	$17 = *($19 + [96])
	if ( ($17 == 0) ){ goto $label$70 }
	*($19 + [100]) = $17
	CALL $86($17)
	
.LABEL $label$70
	CALL $24(($19 + [32]))
	
.LABEL $label$41
	*([0] + [4]) = ($19 + [112])
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC $16 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = [160]
	$1 = *(($0 + [120]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [124])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	CALL $86($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [120]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $86($4)
	
.LABEL $label$1
	$1 = *(($0 + [80]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [84])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $86($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$4 = *(($0 + [80]))
	goto $label$7 
	
.LABEL $label$8
	$4 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $86($4)
	
.LABEL $label$6
	$1 = *(($0 + [40]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [44])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	CALL $86($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($0 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $86($4)
	
.LABEL $label$11
	return $0
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [992])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $85([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [1024])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [1024])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $35(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $86($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $10 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [64])
	*([0] + [4]) = $13
	$8 = [1]
	if ( CALL has_auth($1) ){ goto $label$1 }
	if ( CALL has_auth(*($0 + [8])) ){ goto $label$1 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [224]
	$11 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$7 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$6 = ($6 + [165])
	goto $label$5 
	
.LABEL $label$7
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$3
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$2 }
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [240]
	$7 = (int_64)0
	
.LOOP $label$8:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$9 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$9
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$7 = ((int_64)$9 | (int_64)$7)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$8 }
	$3 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$12 }
	$8 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$13:
	if ( ((int_64)*(*($8)) == (int_64)$11) ){ goto $label$12 }
	$5 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$6 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$16 }
	$8 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [256])
	if ( $8 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$8 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $11)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$14 }
	$8 = CALL $17($6, $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [256])
	
.LABEL $label$15
	$7 = *($8 + [8])
	
.LABEL $label$14
	$8 = CALL has_auth($7)
	
.LABEL $label$1
	CALL eosio_assert($8, [320])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1128748036), [1200])
	*(($13 + [56])) = [0]
	*($13 + [32]) = $1
	*($13 + [40]) = (int_64)-1
	$10 = (int_64)0
	*($13 + [48]) = (int_64)0
	*($13 + [24]) = *($0 + [8])
	CALL $19(($13 + [16]), ($13 + [24]), $1, [368])
	$8 = *($13 + [20])
	$12 = *($2)
	if ( (int_64)($12 == 0) ){ goto $label$27 }
	CALL eosio_assert(((uint_64)*($8 + [8]) >= (uint_64)((int_64)((int_64)*($8 + [24]) * (int_64)10000) + (int_64)$12)), [1152])
	$9 = (int_64)59
	$8 = [1136]
	$11 = (int_64)0
	
.LOOP $label$28:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$33 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$6 = ($6 + [165])
	goto $label$31 
	
.LABEL $label$33
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$32
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$30
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$29
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$28 }
	$3 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$34 }
	$8 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$35:
	if ( ((int_64)*(*($8)) == (int_64)$11) ){ goto $label$34 }
	$5 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$35 }
	
.LABEL $label$34
	$6 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$26 }
	$8 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [256])
	if ( $8 ){ goto $label$25 }
	$7 = (int_64)0
	goto $label$19 
	
.LABEL $label$27
	$10 = (int_64)0
	CALL eosio_assert(((int_64)*($8 + [32]) > (int_64)0), [1120])
	$9 = (int_64)59
	$8 = [1136]
	$11 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$41 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$6 = ($6 + [165])
	goto $label$39 
	
.LABEL $label$41
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$37
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$36 }
	$2 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$42 }
	$8 = ($5 + [-24])
	$4 = ([0] - $2)
	
.LOOP $label$43:
	if ( ((int_64)*(*($8)) == (int_64)$11) ){ goto $label$42 }
	$5 = $8
	$6 = ($8 + [-24])
	$8 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$43 }
	
.LABEL $label$42
	$6 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$24 }
	$8 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [256])
	if ( $8 ){ goto $label$23 }
	$7 = (int_64)0
	goto $label$20 
	
.LABEL $label$26
	$8 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $11)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$22 }
	$8 = CALL $17($6, $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [256])
	
.LABEL $label$25
	$7 = *($8 + [8])
	goto $label$19 
	
.LABEL $label$24
	$8 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $11)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$21 }
	$8 = CALL $17($6, $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)$6), [256])
	
.LABEL $label$23
	$7 = *($8 + [8])
	goto $label$20 
	
.LABEL $label$22
	$7 = (int_64)0
	goto $label$19 
	
.LABEL $label$21
	$7 = (int_64)0
	
.LABEL $label$20
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1136]
	$11 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$49 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$6 = ($6 + [165])
	goto $label$47 
	
.LABEL $label$49
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$45
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$44 }
	CALL $22($0, $11, ((int_64)*(*($13 + [20]) + [32]) + (int_64)$7))
	$8 = *($13 + [20])
	*($13 + [8]) = ($13 + [16])
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [400])
	CALL $48(($13 + [24]), $8, (int_64)0, ($13 + [8]))
	$5 = *($13 + [48])
	if ( ($5 == 0) ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$19
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [1136]
	$11 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$55 }
	$6 = *($8)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$6 = ($6 + [165])
	goto $label$53 
	
.LABEL $label$55
	$12 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$51
	$8 = ($8 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$11 = ((int_64)$12 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$50 }
	CALL $22($0, $11, (int_64))($7 - *($2)))
	$8 = *($13 + [20])
	*($13 + [8]) = $2
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [400])
	CALL $49(($13 + [24]), $8, (int_64)0, ($13 + [8]))
	$5 = *($13 + [48])
	if ( ($5 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	$0 = ($13 + [52])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$57 }
	
.LOOP $label$58:
	$8 = ($8 + [-24])
	$6 = *($8)
	*($8) = [0]
	if ( ($6 == 0) ){ goto $label$59 }
	CALL $86($6)
	
.LABEL $label$59
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$58 }
	$8 = *(($13 + [48]))
	goto $label$56 
	
.LABEL $label$57
	$8 = $5
	
.LABEL $label$56
	*($0) = $5
	CALL $86($8)
	
.LABEL $label$17
	*([0] + [4]) = ($13 + [64])
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [928])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [896])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [1024])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1024])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1024])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC $12 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [160])
	*([0] + [4]) = $13
	$7 = [1]
	if ( CALL has_auth($1) ){ goto $label$1 }
	if ( CALL has_auth(*(($0 + [8]))) ){ goto $label$1 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [224]
	$11 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$9 > (uint_64)(int_64)9) ){ goto $label$7 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$6 = ($6 + [165])
	goto $label$5 
	
.LABEL $label$7
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$3
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$2 }
	$9 = (int_64)0
	$10 = (int_64)59
	$7 = [240]
	$12 = (int_64)0
	
.LOOP $label$8:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$9 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$9
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$8 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$8 }
	$3 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$12 }
	$7 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$13:
	if ( ((int_64)*(*($7)) == (int_64)$11) ){ goto $label$12 }
	$5 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$6 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$16 }
	$7 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [256])
	if ( $7 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$7 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $11)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	$7 = CALL $17($6, $7)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [256])
	
.LABEL $label$15
	$12 = *($7 + [8])
	
.LABEL $label$14
	$7 = CALL has_auth($12)
	
.LABEL $label$1
	CALL eosio_assert($7, [320])
	*(($13 + [152])) = [0]
	*($13 + [128]) = $1
	*($13 + [136]) = (int_64)-1
	$9 = (int_64)0
	*($13 + [144]) = (int_64)0
	*($13 + [120]) = *(($0 + [8]))
	CALL $19(($13 + [112]), ($13 + [120]), $1, [368])
	$5 = *($13 + [116])
	if ( ((int_64)*($5 + [56]) < (int_64)1) ){ goto $label$19 }
	$8 = (int_64)59
	$7 = [1040]
	$11 = (int_64)0
	
.LOOP $label$20:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$25 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$6 = ($6 + [165])
	goto $label$23 
	
.LABEL $label$25
	$10 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$24
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$22
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$21
	$7 = ($7 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$11 = ((int_64)$10 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$20 }
	*((($13 + [96]) + [8])) = *(($5 + [64]))
	*((($13 + [80]) + [8])) = [0]
	*($13 + [96]) = *($5 + [56])
	*($13 + [80]) = (int_64)0
	$7 = CALL strlen([1056])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$18 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$28 }
	*($13 + [80]) = ($7 << [1])
	$6 = (($13 + [80]) | [1])
	if ( $7 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $85($5)
	*($13 + [80]) = ($5 | [1])
	*($13 + [88]) = $6
	*($13 + [84]) = $7
	
.LABEL $label$27
	CALL memcpy($6, [1056], $7)
	
.LABEL $label$26
	*(($6 + $7)) = [0]
	*((($13 + [24]) + [8])) = *((($13 + [96]) + [8]))
	*($13 + [24]) = *($13 + [96])
	CALL $43($0, $11, $1, ($13 + [24]), ($13 + [80]))
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$19 }
	CALL $86(*($13 + [88]))
	
.LABEL $label$19
	if ( ((int_64)*(*($13 + [116]) + [72]) < (int_64)1) ){ goto $label$29 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1072]
	$11 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$9 > (uint_64)(int_64)9) ){ goto $label$35 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$6 = ($6 + [165])
	goto $label$33 
	
.LABEL $label$35
	$10 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$31
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$30 }
	$9 = (int_64)0
	$10 = (int_64)59
	$7 = [1088]
	$12 = (int_64)0
	
.LOOP $label$36:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$37 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$6 = ($6 + [165])
	goto $label$38 
	
.LABEL $label$39
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$37
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$8 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$36 }
	$3 = *(($0 + [40]))
	$5 = *(($0 + [44]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$40 }
	$7 = ($5 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$41:
	if ( ((int_64)*(*($7)) == (int_64)$11) ){ goto $label$40 }
	$5 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $4) != (int_32)[-24]) ){ goto $label$41 }
	
.LABEL $label$40
	$6 = ($0 + [16])
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$44 }
	$7 = *(($5 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [256])
	if ( $7 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$7 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $11)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$42 }
	$7 = CALL $17($6, $7)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [256])
	
.LABEL $label$43
	$12 = *($7 + [8])
	
.LABEL $label$42
	$7 = *($13 + [116])
	*((($13 + [64]) + [8])) = *(($7 + [80]))
	*((($13 + [48]) + [8])) = [0]
	*($13 + [64]) = *($7 + [72])
	*($13 + [48]) = (int_64)0
	$7 = CALL strlen([1104])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$17 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$47 }
	*($13 + [48]) = ($7 << [1])
	$6 = (($13 + [48]) | [1])
	if ( $7 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $85($5)
	*($13 + [48]) = ($5 | [1])
	*($13 + [56]) = $6
	*($13 + [52]) = $7
	
.LABEL $label$46
	CALL memcpy($6, [1104], $7)
	
.LABEL $label$45
	*(($6 + $7)) = [0]
	*((($13 + [8]) + [8])) = *((($13 + [64]) + [8]))
	*($13 + [8]) = *($13 + [64])
	CALL $43($0, $12, $1, ($13 + [8]), ($13 + [48]))
	if ( ((*($13 + [48]) & [1]) == 0) ){ goto $label$29 }
	CALL $86(*($13 + [56]))
	
.LABEL $label$29
	$7 = *($13 + [116])
	if ( ((int_64)*($7 + [56]) != (int_64)0) ){ goto $label$49 }
	if ( (int_64)(*($7 + [72]) == 0) ){ goto $label$48 }
	
.LABEL $label$49
	$7 = *($13 + [116])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [400])
	CALL $44(($13 + [120]), $7, (int_64)0, ($13 + [40]))
	
.LABEL $label$48
	$5 = *($13 + [144])
	if ( ($5 == 0) ){ goto $label$50 }
	$0 = ($13 + [148])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$52 }
	
.LOOP $label$53:
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$54 }
	CALL $86($6)
	
.LABEL $label$54
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$53 }
	$7 = *(($13 + [144]))
	goto $label$51 
	
.LABEL $label$52
	$7 = $5
	
.LABEL $label$51
	*($0) = $5
	CALL $86($7)
	
.LABEL $label$50
	*([0] + [4]) = ($13 + [160])
	return (unreachable)
	
.LABEL $label$18
	CALL $87(($13 + [80]))
	
.LABEL $label$17
	CALL $87(($13 + [48]))
	(unreachable)
}

int_32 .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1024])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [1024])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $75 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [144])
	*([0] + [4]) = $5
	$4 = CALL $39($0)
	*($0 + [88]) = $1
	$1 = *($2)
	CALL $76(*($2 + [4]), $4)
	*($5 + [96]) = ($5 + [80])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	*($5 + [104]) = ($5 + [88])
	*($5 + [116]) = ($0 + [8])
	*($5 + [112]) = $0
	*($5 + [120]) = ($0 + [24])
	*($5 + [124]) = ($0 + [32])
	*($5 + [128]) = ($0 + [48])
	*($5 + [132]) = ($0 + [56])
	*($5 + [136]) = ($0 + [72])
	CALL $37(($5 + [112]), ($5 + [104]))
	$3 = *($0)
	*($0 + [92]) = CALL db_store_i64(*($1 + [8]), (int_64)3607749779137757184, *(*($2 + [8])), $3, $5, [80])
	if ( (uint_64)($3 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [144])
	return $0
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [992])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $85([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [1024])
	CALL memcpy($6, $7, [8])
	*($6 + [12]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [12])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $42(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $86($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $19 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($1 + [24])
	$8 = *(($1 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$1 }
	$5 = ([0] - $4)
	$7 = ($8 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$1 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$1), [256])
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)3607749779137757184, $2)
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), $3)
	$7 = CALL $38($1, $7)
	CALL eosio_assert(((int_32)*($7 + [88]) == (int_32)$1), [256])
	
.LABEL $label$3
	*($0 + [4]) = $7
	*($0) = $1
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [144])
	*([0] + [4]) = $6
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	$4 = *($1)
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))), [784])
	$5 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [832])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [864])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [656])
	*($6 + [96]) = ($6 + [80])
	*($6 + [92]) = $6
	*($6 + [88]) = $6
	*($6 + [104]) = ($6 + [88])
	*($6 + [116]) = ($1 + [8])
	*($6 + [112]) = $1
	*($6 + [120]) = ($1 + [24])
	*($6 + [124]) = ($1 + [32])
	*($6 + [128]) = ($1 + [48])
	*($6 + [132]) = ($1 + [56])
	*($6 + [136]) = ($1 + [72])
	CALL $37(($6 + [112]), ($6 + [104]))
	CALL db_update_i64(*($1 + [92]), $2, $6, [80])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [144])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [720])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $85([104])
	CALL $61($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [92])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $41(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $86($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$0 = *(*($0) + [4])
	CALL eosio_assert(((int_64)*(($0 + [40])) == (int_64)*(($1 + [16]))), [784])
	$2 = ((int_64)*($1 + [8]) + (int_64)*($0 + [32]))
	*($1 + [8]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [832])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [864])
	CALL eosio_assert([1], [928])
	$0 = [0]
	$2 = (int_64)4409172
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [896])
	*(($1 + [40])) = (int_64)1128748036
	*($1 + [32]) = (int_64)0
	*($1 + [48]) = [0]
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1024])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $53(*($1), ($0 + [32]))
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $90(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $90(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $86(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $86(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $54($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $88($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $85($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $88($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $86($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $87($7)
	return (unreachable)
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1344])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $26($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1024])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$2 = *($0)
	*($1 + [16]) = *(*($4 + [4]))
	CALL eosio_assert([1], [528])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [528])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [528])
	CALL memcpy(($5 + [16]), ($1 + [16]), [8])
	$3 = *($1)
	*($1 + [28]) = CALL db_store_i64(*($2 + [8]), (int_64)4982871467403247616, *(*($0 + [8])), $3, $5, [24])
	if ( (uint_64)($3 <= *($2 + [16])) ){ goto $label$1 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

void .FUNC $56 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [96])
	*([0] + [4]) = $18
	$13 = (int_64)0
	$12 = (int_64)59
	$17 = [1136]
	$14 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$6 }
	$7 = *($17)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$7 = ($7 + [165])
	goto $label$4 
	
.LABEL $label$6
	$15 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$2
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$1 }
	$9 = *(($0 + [40]))
	$6 = *(($0 + [44]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$7 }
	$17 = ($6 + [-24])
	$16 = ([0] - $9)
	
.LOOP $label$8:
	if ( ((int_64)*(*($17)) == (int_64)$14) ){ goto $label$7 }
	$6 = $17
	$7 = ($17 + [-24])
	$17 = $7
	if ( ((int_32)($7 + $16) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	$17 = ($0 + [16])
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$12 }
	$7 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$17), [256])
	if ( $7 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$7 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $14)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	$7 = CALL $17($17, $7)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$17), [256])
	
.LABEL $label$11
	$12 = *($7 + [8])
	goto $label$9 
	
.LABEL $label$10
	$12 = (int_64)0
	
.LABEL $label$9
	*($18 + [80]) = (int_64)0
	$13 = *($3 + [8])
	*($18 + [88]) = $13
	CALL eosio_assert([1], [928])
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$7 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$7 = [0]
	
.LABEL $label$13
	CALL eosio_assert($7, [896])
	$17 = CALL db_lowerbound_i64(*($0 + [144]), *(($0 + [152])), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$18 }
	$5 = ($0 + [144])
	$16 = CALL $18($5, $17)
	$8 = ($18 + [56])
	$9 = ($18 + [64])
	$10 = ($18 + [68])
	$11 = ($18 + [72])
	
.LOOP $label$19:
	$13 = *($16)
	*((($18 + [40]) + [8])) = $13
	*($8) = (int_64)-1
	*($9) = [0]
	$15 = *(($0 + [8]))
	*($18 + [40]) = $15
	*($10) = [0]
	*($11) = [0]
	$17 = CALL db_find_i64($15, $13, (int_64)3607749779137757184, $13)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$20 }
	$17 = CALL $38(($18 + [40]), $17)
	CALL eosio_assert(((int_32)*($17 + [88]) == (int_32)($18 + [40])), [256])
	$13 = *($17 + [8])
	$13 = *($3)
	CALL __multi3(($18 + [16]), $13, (int_64)$13 >> (int_64)63), $13, (int_64)$13 >> (int_64)63))
	CALL __udivti3($18, *($18 + [16]), *((($18 + [16]) + [8])), $12, (int_64)0)
	$13 = *($18)
	*($18 + [80]) = $13
	if ( ((int_64)$13 < (int_64)1) ){ goto $label$20 }
	*($18 + [32]) = $3
	*($18 + [36]) = ($18 + [80])
	CALL eosio_assert([1], [400])
	CALL $63(($18 + [40]), $17, (int_64)0, ($18 + [32]))
	
.LABEL $label$20
	$6 = *($9)
	if ( ($6 == 0) ){ goto $label$21 }
	$17 = *($10)
	if ( ((int_32)$17 != (int_32)$6) ){ goto $label$23 }
	$17 = $6
	goto $label$22 
	
.LABEL $label$23
	
.LOOP $label$24:
	$17 = ($17 + [-24])
	$7 = *($17)
	*($17) = [0]
	if ( ($7 == 0) ){ goto $label$25 }
	CALL $86($7)
	
.LABEL $label$25
	if ( ((int_32)$6 != (int_32)$17) ){ goto $label$24 }
	$17 = *($9)
	
.LABEL $label$22
	*($10) = $6
	CALL $86($17)
	
.LABEL $label$21
	CALL eosio_assert([1], [448])
	$17 = CALL db_next_i64(*($16 + [12]), ($18 + [40]))
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$18 }
	$16 = CALL $18($5, $17)
	goto $label$19 
	
.LABEL $label$18
	*([0] + [4]) = ($18 + [96])
}

void .FUNC $57 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [64])
	*([0] + [4]) = $16
	*($16 + [56]) = $1
	*(($16 + [48])) = [0]
	*($16 + [24]) = $1
	*($16 + [32]) = (int_64)-1
	$13 = (int_64)0
	*($16 + [40]) = (int_64)0
	$12 = *($0 + [8])
	*($16 + [16]) = $12
	$10 = [0]
	$11 = CALL db_find_i64($12, $1, (int_64)3607749779137757184, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $38(($16 + [16]), $11)
	CALL eosio_assert(((int_32)*($10 + [88]) == (int_32)($16 + [16])), [256])
	
.LABEL $label$1
	$12 = (int_64)59
	$11 = [1456]
	$14 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$7 }
	$5 = *($11)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$5 = ($5 + [165])
	goto $label$5 
	
.LABEL $label$7
	$1 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$3
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$14 = ((int_64)$1 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$2 }
	$7 = *(($0 + [40]))
	$9 = *(($0 + [44]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$8 }
	$11 = ($9 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$9:
	if ( ((int_64)*(*($11)) == (int_64)$14) ){ goto $label$8 }
	$9 = $11
	$5 = ($11 + [-24])
	$11 = $5
	if ( ((int_32)($5 + $8) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	$6 = ($0 + [16])
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$13 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [256])
	if ( $11 ){ goto $label$12 }
	$15 = (int_64)100000
	goto $label$10 
	
.LABEL $label$13
	$11 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $14)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$11 }
	$11 = CALL $17($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [256])
	
.LABEL $label$12
	$15 = *($11 + [8])
	goto $label$10 
	
.LABEL $label$11
	$15 = (int_64)100000
	
.LABEL $label$10
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1472]
	$14 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$19 }
	$5 = *($11)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$5 = ($5 + [165])
	goto $label$17 
	
.LABEL $label$19
	$1 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$15
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$14 = ((int_64)$1 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$14 }
	$7 = *(($0 + [40]))
	$9 = *(($0 + [44]))
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$20 }
	$11 = ($9 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$21:
	if ( ((int_64)*(*($11)) == (int_64)$14) ){ goto $label$20 }
	$9 = $11
	$5 = ($11 + [-24])
	$11 = $5
	if ( ((int_32)($5 + $8) != (int_32)[-24]) ){ goto $label$21 }
	
.LABEL $label$20
	if ( ((int_32)$9 == (int_32)$7) ){ goto $label$25 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [256])
	if ( $11 ){ goto $label$24 }
	$1 = (int_64)500000000000
	goto $label$22 
	
.LABEL $label$25
	$11 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $14)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$23 }
	$11 = CALL $17($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [256])
	
.LABEL $label$24
	$1 = *($11 + [8])
	goto $label$22 
	
.LABEL $label$23
	$1 = (int_64)500000000000
	
.LABEL $label$22
	CALL eosio_assert((uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [928])
	$13 = (int_64)4409172
	$11 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$5 = [0]
	
.LABEL $label$26
	CALL eosio_assert($5, [896])
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [928])
	$13 = (int_64)4409172
	$11 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$5 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$5 = [0]
	
.LABEL $label$31
	CALL eosio_assert($5, [896])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)1128748036), [1488])
	$11 = [0]
	if ( ((int_64)*($3) < (int_64)$15) ){ goto $label$36 }
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)1128748036), [1488])
	$11 = ((int_64)*($3) <= (int_64)$1)
	
.LABEL $label$36
	CALL eosio_assert($11, [1552])
	if ( ($10 == 0) ){ goto $label$38 }
	$13 = *($10 + [8])
	$12 = *(($10 + [16]))
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)$12), [784])
	$13 = ((int_64)$13 + (int_64)*($3))
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [832])
	CALL eosio_assert(((int_64)$13 < (int_64)4611686018427387904), [864])
	CALL eosio_assert(((int_64)$12 == (int_64)1128748036), [1488])
	CALL eosio_assert(((int_64)$13 <= (int_64)$1), [1584])
	*($16 + [8]) = $3
	CALL eosio_assert([1], [400])
	CALL $58(($16 + [16]), $10, (int_64)0, ($16 + [8]))
	goto $label$37 
	
.LABEL $label$38
	$11 = ($0 + [8])
	$13 = *($11)
	*($16 + [12]) = $3
	*($16 + [8]) = ($16 + [56])
	CALL $59($16, ($16 + [16]), $13, ($16 + [8]))
	$13 = *($11)
	*($16) = ($16 + [56])
	CALL $60(($16 + [8]), ($0 + [144]), $13, $16)
	
.LABEL $label$37
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1136]
	$14 = (int_64)0
	
.LOOP $label$39:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$44 }
	$5 = *($11)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$5 = ($5 + [165])
	goto $label$42 
	
.LABEL $label$44
	$1 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$43
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$41
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$40
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$14 = ((int_64)$1 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$39 }
	$10 = *(($0 + [40]))
	$9 = *(($0 + [44]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$45 }
	$11 = ($9 + [-24])
	$8 = ([0] - $10)
	
.LOOP $label$46:
	if ( ((int_64)*(*($11)) == (int_64)$14) ){ goto $label$45 }
	$9 = $11
	$5 = ($11 + [-24])
	$11 = $5
	if ( ((int_32)($5 + $8) != (int_32)[-24]) ){ goto $label$46 }
	
.LABEL $label$45
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$50 }
	$11 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [256])
	if ( $11 ){ goto $label$49 }
	$15 = (int_64)0
	goto $label$47 
	
.LABEL $label$50
	$11 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $14)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$48 }
	$11 = CALL $17($6, $11)
	CALL eosio_assert(((int_32)*($11 + [24]) == (int_32)$6), [256])
	
.LABEL $label$49
	$15 = *($11 + [8])
	goto $label$47 
	
.LABEL $label$48
	$15 = (int_64)0
	
.LABEL $label$47
	$13 = (int_64)0
	$12 = (int_64)59
	$11 = [1136]
	$14 = (int_64)0
	
.LOOP $label$51:
	if ( ((uint_64)$13 > (uint_64)(int_64)10) ){ goto $label$56 }
	$5 = *($11)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$55 }
	$5 = ($5 + [165])
	goto $label$54 
	
.LABEL $label$56
	$1 = (int_64)0
	if ( ((int_64)$13 == (int_64)11) ){ goto $label$53 }
	goto $label$52 
	
.LABEL $label$55
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$54
	$1 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$53
	$1 = ((int_64)((int_64)$1 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$52
	$11 = ($11 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$14 = ((int_64)$1 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)1)
	if ( ((int_64)$13 != (int_64)13) ){ goto $label$51 }
	CALL $22($0, $14, ((int_64)*($3) + (int_64)$15))
	$9 = *($16 + [40])
	if ( ($9 == 0) ){ goto $label$57 }
	$0 = ($16 + [44])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$9) ){ goto $label$59 }
	
.LOOP $label$60:
	$11 = ($11 + [-24])
	$5 = *($11)
	*($11) = [0]
	if ( ($5 == 0) ){ goto $label$61 }
	CALL $86($5)
	
.LABEL $label$61
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$60 }
	$11 = *(($16 + [40]))
	goto $label$58 
	
.LABEL $label$59
	$11 = $9
	
.LABEL $label$58
	*($0) = $9
	CALL $86($11)
	
.LABEL $label$57
	*([0] + [4]) = ($16 + [64])
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $85(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $89($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $86($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $86($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [528])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [528])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $30($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [528])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [528])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [528])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $30(CALL $31($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $55 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_64 $16
	$10 = [0]
	if ( ((int_64)*($0 + [8]) == (int_64)$1) ){ goto $label$1 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [224]
	$13 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$12 > (uint_64)(int_64)9) ){ goto $label$7 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$5 = ($5 + [165])
	goto $label$5 
	
.LABEL $label$7
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$3
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$2 }
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [240]
	$16 = (int_64)0
	
.LOOP $label$8:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$9 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$5 = ($5 + [165])
	goto $label$10 
	
.LABEL $label$11
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$9
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$11 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$8 }
	$7 = *(($0 + [40]))
	$15 = *(($0 + [44]))
	if ( ((int_32)$15 == (int_32)$7) ){ goto $label$12 }
	$10 = ($15 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$13:
	if ( ((int_64)*(*($10)) == (int_64)$13) ){ goto $label$12 }
	$15 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $8) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$6 = ($0 + [16])
	if ( ((int_32)$15 == (int_32)$7) ){ goto $label$16 }
	$10 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [256])
	if ( $10 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$10 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $13)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$14 }
	$10 = CALL $17($6, $10)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [256])
	
.LABEL $label$15
	$16 = *($10 + [8])
	
.LABEL $label$14
	$10 = [0]
	if ( ((int_64)$16 == (int_64)$1) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)$2), [1616])
	$1 = *($0 + [136])
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1040]
	$13 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$12 > (uint_64)(int_64)10) ){ goto $label$22 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$5 = ($5 + [165])
	goto $label$20 
	
.LABEL $label$22
	$14 = (int_64)0
	if ( ((int_64)$12 == (int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$18
	$10 = ($10 + [1])
	$11 = ((int_64)$11 + (int_64)-5)
	$13 = ((int_64)$14 | (int_64)$13)
	$12 = ((int_64)$12 + (int_64)1)
	if ( ((int_64)$12 != (int_64)13) ){ goto $label$17 }
	$7 = [1]
	$10 = [1]
	if ( ((int_64)$1 == (int_64)$13) ){ goto $label$23 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1072]
	$13 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$12 > (uint_64)(int_64)9) ){ goto $label$29 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$5 = ($5 + [165])
	goto $label$27 
	
.LABEL $label$29
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$25
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$24 }
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [1088]
	$16 = (int_64)0
	
.LOOP $label$30:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$31 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$5 = ($5 + [165])
	goto $label$32 
	
.LABEL $label$33
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$31
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$16 = ((int_64)$11 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$30 }
	$9 = *(($0 + [40]))
	$15 = *(($0 + [44]))
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$34 }
	$10 = ($15 + [-24])
	$8 = ([0] - $9)
	
.LOOP $label$35:
	if ( ((int_64)*(*($10)) == (int_64)$13) ){ goto $label$34 }
	$15 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $8) != (int_32)[-24]) ){ goto $label$35 }
	
.LABEL $label$34
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$38 }
	$10 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [256])
	if ( $10 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	$10 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $13)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$36 }
	$10 = CALL $17($6, $10)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [256])
	
.LABEL $label$37
	$16 = *($10 + [8])
	
.LABEL $label$36
	$10 = ((int_64)$1 == (int_64)$16)
	
.LABEL $label$23
	CALL eosio_assert($10, [1648])
	$12 = *($3 + [8])
	if ( ((int_64)$12 == (int_64)1397703940) ){ goto $label$39 }
	$7 = ((int_64)$12 == (int_64)1128748036)
	
.LABEL $label$39
	CALL eosio_assert($7, [1680])
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [1360]
	$13 = (int_64)0
	
.LOOP $label$40:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$41 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$43 }
	$5 = ($5 + [165])
	goto $label$42 
	
.LABEL $label$43
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$42
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$41
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$40 }
	$7 = *(($0 + [40]))
	$15 = *(($0 + [44]))
	if ( ((int_32)$15 == (int_32)$7) ){ goto $label$44 }
	$10 = ($15 + [-24])
	$8 = ([0] - $7)
	
.LOOP $label$45:
	if ( ((int_64)*(*($10)) == (int_64)$13) ){ goto $label$44 }
	$15 = $10
	$5 = ($10 + [-24])
	$10 = $5
	if ( ((int_32)($5 + $8) != (int_32)[-24]) ){ goto $label$45 }
	
.LABEL $label$44
	if ( ((int_32)$15 == (int_32)$7) ){ goto $label$49 }
	$10 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [256])
	if ( $10 ){ goto $label$48 }
	$16 = (int_64)0
	goto $label$46 
	
.LABEL $label$49
	$10 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $13)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$47 }
	$10 = CALL $17($6, $10)
	CALL eosio_assert(((int_32)*($10 + [24]) == (int_32)$6), [256])
	
.LABEL $label$48
	$16 = *($10 + [8])
	goto $label$46 
	
.LABEL $label$47
	$16 = (int_64)0
	
.LABEL $label$46
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1696]
	$13 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$12 > (uint_64)(int_64)6) ){ goto $label$55 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$5 = ($5 + [165])
	goto $label$53 
	
.LABEL $label$55
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$51
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$50 }
	CALL eosio_assert(((int_64)$16 != (int_64)$13), [1712])
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1744]
	$13 = (int_64)0
	
.LOOP $label$56:
	if ( ((uint_64)$12 > (uint_64)(int_64)6) ){ goto $label$61 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$5 = ($5 + [165])
	goto $label$59 
	
.LABEL $label$61
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$60
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$58
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$57
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$56 }
	$10 = ((int_64)$16 != (int_64)$13)
	
.LABEL $label$1
	return $10
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$8 = ($5 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $85(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $89($0)
	
.LABEL $label$1
	*(($9 = ($8 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $85([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($9 + [32])) = [0]
	*(($9 + [36])) = [0]
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$6 = ($9 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($7 = ($9 + [-16]))) = [0]
	$8 = ($2 + [-4])
	*($1) = *($8)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($7) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($8) = (int_64)0
	*(($7 = ($9 + [-4]))) = [0]
	$8 = ($2 + [8])
	*($1) = *($8)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($7) = *($1)
	*($1) = [0]
	*($8) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$7 = $2
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$8 }
	$1 = ([0] - $7)
	$9 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($9 + [16])) = $2
	CALL $86($2)
	
.LABEL $label$10
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($9 + [4])) = $2
	CALL $86($2)
	
.LABEL $label$11
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $86($7)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $20 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [144])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	$4 = *($1)
	CALL $36($3, $1)
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [656])
	*($5 + [96]) = ($5 + [80])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	*($5 + [104]) = ($5 + [88])
	*($5 + [116]) = ($1 + [8])
	*($5 + [112]) = $1
	*($5 + [120]) = ($1 + [24])
	*($5 + [124]) = ($1 + [32])
	*($5 + [128]) = ($1 + [48])
	*($5 + [132]) = ($1 + [56])
	*($5 + [136]) = ($1 + [72])
	CALL $37(($5 + [112]), ($5 + [104]))
	CALL db_update_i64(*($1 + [92]), $2, $5, [80])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [144])
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $25($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $26($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $27($4, $1)
	CALL $29(CALL $28(CALL $28($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $22 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($8 + [24]) = $1
	*($8 + [16]) = $2
	$3 = *(($0 + [40]))
	$7 = *(($0 + [44]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$6 = ($7 + [-24])
	$4 = ([0] - $3)
	
.LOOP $label$2:
	if ( ((int_64)*(*($6)) == (int_64)$1) ){ goto $label$1 }
	$7 = $6
	$5 = ($6 + [-24])
	$6 = $5
	if ( ((int_32)($5 + $4) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ($0 + [16])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	$5 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [256])
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$5 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $17($6, $5)
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)$6), [256])
	
.LABEL $label$5
	if ( ((int_64)*($5 + [8]) == (int_64)$2) ){ goto $label$3 }
	*($8 + [8]) = ($8 + [16])
	CALL eosio_assert([1], [400])
	CALL $33($6, $5, (int_64)0, ($8 + [8]))
	goto $label$3 
	
.LABEL $label$4
	$1 = *($0 + [8])
	*($8 + [12]) = ($8 + [16])
	*($8 + [8]) = ($8 + [24])
	CALL $32($8, $6, $1, ($8 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $24 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $86($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $86($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $86($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $86($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $86($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $86($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $86($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $86($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [528])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [528])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [528])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [528])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [528])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [528])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $85($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $89($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $86($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1856])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [1904])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1968])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $86($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $86($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $68 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [32])
	*([0] + [4]) = $14
	*($14 + [16]) = $2
	$7 = [1]
	if ( CALL has_auth(*($0 + [8])) ){ goto $label$1 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [224]
	$10 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$9 > (uint_64)(int_64)9) ){ goto $label$7 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$7
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$3
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$2 }
	$9 = (int_64)0
	$11 = (int_64)59
	$7 = [240]
	$13 = (int_64)0
	
.LOOP $label$8:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$9 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$4 = ($4 + [165])
	goto $label$10 
	
.LABEL $label$11
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$9
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$13 = ((int_64)$8 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$8 }
	$5 = *(($0 + [40]))
	$12 = *(($0 + [44]))
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$12 }
	$7 = ($12 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$13:
	if ( ((int_64)*(*($7)) == (int_64)$10) ){ goto $label$12 }
	$12 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$4 = ($0 + [16])
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$16 }
	$7 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$4), [256])
	if ( $7 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$7 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $10)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	$7 = CALL $17($4, $7)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$4), [256])
	
.LABEL $label$15
	$13 = *($7 + [8])
	
.LABEL $label$14
	$7 = CALL has_auth($13)
	
.LABEL $label$1
	CALL eosio_assert($7, [320])
	if ( ((int_64)$1 > (int_64)4941026402438742015) ){ goto $label$31 }
	if ( ((int_64)$1 <= (int_64)4941019022087946239) ){ goto $label$30 }
	if ( ((int_64)$1 == (int_64)4941019022087946240) ){ goto $label$27 }
	if ( ((int_64)$1 == (int_64)4941024698851917824) ){ goto $label$24 }
	if ( ((int_64)$1 != (int_64)4941024699286028288) ){ goto $label$26 }
	$5 = *(($0 + [40]))
	$12 = *(($0 + [44]))
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$32 }
	$7 = ($12 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$33:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$32 }
	$12 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$33 }
	
.LABEL $label$32
	$7 = ($0 + [16])
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$21 }
	$4 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$7), [256])
	if ( $4 ){ goto $label$20 }
	goto $label$17 
	
.LABEL $label$31
	if ( ((int_64)$1 <= (int_64)5075293028667621375) ){ goto $label$29 }
	if ( ((int_64)$1 == (int_64)5075293028667621376) ){ goto $label$28 }
	if ( ((int_64)$1 == (int_64)5075293337764020224) ){ goto $label$28 }
	if ( ((int_64)$1 == (int_64)5075293269245935616) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$30
	if ( ((int_64)$1 == (int_64)4941015199291015168) ){ goto $label$23 }
	if ( ((int_64)$1 != (int_64)4941016443771367424) ){ goto $label$26 }
	$7 = CALL db_lowerbound_i64(*($0 + [16]), *(($0 + [24])), (int_64)4982871467403247616, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$17 }
	$12 = ($0 + [16])
	$4 = CALL $17($12, $7)
	
.LOOP $label$34:
	CALL eosio_assert([1], [1760])
	CALL eosio_assert([1], [448])
	$7 = [0]
	$0 = CALL db_next_i64(*($4 + [28]), ($14 + [24]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$35 }
	$7 = CALL $17($12, $0)
	
.LABEL $label$35
	CALL $69($12, $4)
	$4 = $7
	if ( $7 ){ goto $label$34 }
	goto $label$17 
	
.LABEL $label$29
	if ( ((int_64)$1 == (int_64)4941026402438742016) ){ goto $label$22 }
	if ( ((int_64)$1 != (int_64)5075293005476577280) ){ goto $label$26 }
	
.LABEL $label$28
	CALL require_auth(*(($0 + [8])))
	goto $label$25 
	
.LABEL $label$27
	$3 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	
.LABEL $label$26
	if ( (int_64)($3 == 0) ){ goto $label$25 }
	*($14 + [16]) = $3
	$2 = $3
	
.LABEL $label$25
	CALL $22($0, $1, $2)
	goto $label$17 
	
.LABEL $label$24
	$5 = *(($0 + [80]))
	$12 = *(($0 + [84]))
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$36 }
	$7 = ($12 + [-24])
	$6 = ([0] - $5)
	
.LOOP $label$37:
	if ( ((int_64)*(*($7)) == (int_64)$2) ){ goto $label$36 }
	$12 = $7
	$4 = ($7 + [-24])
	$7 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$37 }
	
.LABEL $label$36
	$7 = ($0 + [56])
	if ( ((int_32)$12 == (int_32)$5) ){ goto $label$19 }
	$4 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [8]) == (int_32)$7), [256])
	if ( $4 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$23
	$9 = *(($0 + [8]))
	*($14 + [8]) = ($14 + [16])
	CALL $70(($14 + [24]), ($0 + [56]), $9, ($14 + [8]))
	goto $label$17 
	
.LABEL $label$22
	CALL void $0((int_32 *(*($0))))
	goto $label$17 
	
.LABEL $label$21
	$4 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$17 }
	$4 = CALL $17($7, $4)
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)$7), [256])
	
.LABEL $label$20
	CALL eosio_assert([1], [1760])
	CALL eosio_assert([1], [448])
	$12 = CALL db_next_i64(*($4 + [28]), ($14 + [24]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$38 }
	CALL $17($7, $12)
	
.LABEL $label$38
	CALL $69($7, $4)
	goto $label$17 
	
.LABEL $label$19
	$4 = CALL db_find_i64(*(($0 + [56])), *(($0 + [64])), (int_64)-3020371635640205312, $2)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$17 }
	$4 = CALL $18($7, $4)
	CALL eosio_assert(((int_32)*($4 + [8]) == (int_32)$7), [256])
	
.LABEL $label$18
	CALL eosio_assert([1], [1760])
	CALL eosio_assert([1], [448])
	$12 = CALL db_next_i64(*($4 + [12]), ($14 + [24]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$39 }
	CALL $18($7, $12)
	
.LABEL $label$39
	CALL $65($7, $4)
	
.LABEL $label$17
	*([0] + [4]) = ($14 + [32])
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1856])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [1904])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1968])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $86($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $86($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [1856])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [1904])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1968])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $86($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $86($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [144])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	*($1 + [8]) = (int_64))(*($1 + [8]) - *(*($3)))
	$4 = *($1)
	*($1 + [24]) = (*($1 + [24]) - (CASTING uint_32)(uint_64 ((uint_64)*(*($3)) / (uint_64)(int_64)10000)))
	CALL eosio_assert([1], [656])
	*($5 + [96]) = ($5 + [80])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	*($5 + [104]) = ($5 + [88])
	*($5 + [116]) = ($1 + [8])
	*($5 + [112]) = $1
	*($5 + [120]) = ($1 + [24])
	*($5 + [124]) = ($1 + [32])
	*($5 + [128]) = ($1 + [48])
	*($5 + [132]) = ($1 + [56])
	*($5 + [136]) = ($1 + [72])
	CALL $37(($5 + [112]), ($5 + [104]))
	CALL db_update_i64(*($1 + [92]), $2, $5, [80])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [144])
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [144])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	*($1 + [24]) = ((int_64)*($1 + [8]) / (int_64)10000)
	$4 = *($1)
	CALL eosio_assert([1], [656])
	*($5 + [96]) = ($5 + [80])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	*($5 + [104]) = ($5 + [88])
	*($5 + [116]) = ($1 + [8])
	*($5 + [112]) = $1
	*($5 + [120]) = ($1 + [24])
	*($5 + [124]) = ($1 + [32])
	*($5 + [128]) = ($1 + [48])
	*($5 + [132]) = ($1 + [56])
	*($5 + [136]) = ($1 + [72])
	CALL $37(($5 + [112]), ($5 + [104]))
	CALL db_update_i64(*($1 + [92]), $2, $5, [80])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [144])
}

int_32 .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [144])
	*([0] + [4]) = $5
	$4 = CALL $39($0)
	*($0 + [88]) = $1
	$1 = *($2)
	CALL $62(*($2 + [4]), $4)
	*($5 + [96]) = ($5 + [80])
	*($5 + [92]) = $5
	*($5 + [88]) = $5
	*($5 + [104]) = ($5 + [88])
	*($5 + [116]) = ($0 + [8])
	*($5 + [112]) = $0
	*($5 + [120]) = ($0 + [24])
	*($5 + [124]) = ($0 + [32])
	*($5 + [128]) = ($0 + [48])
	*($5 + [132]) = ($0 + [56])
	*($5 + [136]) = ($0 + [72])
	CALL $37(($5 + [112]), ($5 + [104]))
	$3 = *($0)
	*($0 + [92]) = CALL db_store_i64(*($1 + [8]), (int_64)3607749779137757184, *(*($2 + [8])), $3, $5, [80])
	if ( (uint_64)($3 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [144])
	return $0
}

void .FUNC $60 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [720])
	*(($4 = CALL $85([24])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [528])
	CALL memcpy(($8 + [16]), $4, [8])
	$5 = *($4)
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-3020371635640205312, $2, $5, ($8 + [16]), [8])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [8]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [12])
	*($8 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [8]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $42(($1 + [24]), ($8 + [8]), ($8 + [16]), ($8 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [8])
	*($8 + [8]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $86($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [144])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [88]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	*(($7 = ( ($6 = ($1 + [56])) ? ($5 = ($1 + [72])) : ((int_64)*(*($3) + [8]) == (int_64)1397703940) ))) = ((int_64)*($7) + (int_64)*(*($3 + [4])))
	$4 = *($1)
	CALL eosio_assert([1], [656])
	*($8 + [96]) = ($8 + [80])
	*($8 + [92]) = $8
	*($8 + [88]) = $8
	*($8 + [104]) = ($8 + [88])
	*($8 + [116]) = ($1 + [8])
	*($8 + [112]) = $1
	*($8 + [120]) = ($1 + [24])
	*($8 + [124]) = ($1 + [32])
	*($8 + [128]) = ($1 + [48])
	*($8 + [132]) = $6
	*($8 + [136]) = $5
	CALL $37(($8 + [112]), ($8 + [104]))
	CALL db_update_i64(*($1 + [92]), $2, $8, [80])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [144])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	*($1) = *(*($0))
	$0 = *($0 + [4])
	*($1 + [8]) = *($0)
	$2 = *(($0 + [8]))
	$0 = [0]
	*($1 + [24]) = [0]
	*(($1 + [16])) = $2
	CALL eosio_assert([1], [928])
	$2 = (int_64)4409172
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [896])
	*(($1 + [40])) = (int_64)1128748036
	*($1 + [32]) = (int_64)0
	*($1 + [48]) = [0]
	CALL eosio_assert([1], [928])
	$2 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [896])
	*(($1 + [64])) = (int_64)1397703940
	*($1 + [56]) = (int_64)0
	CALL eosio_assert([1], [928])
	$2 = (int_64)4409172
	$0 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [896])
	*(($1 + [80])) = (int_64)1128748036
	*($1 + [72]) = (int_64)0
}

void .FUNC $89 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $85(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $86($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $87 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $86 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC $85 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10572])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10464])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [10272]
	$1 = (((int_32)$2 * (int_32)[12]) + [10272])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $83 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10566]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10568])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10566]) = [1]
	$7 = ($7 << [16])
	*([0] + [10568]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10568])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10568]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10566]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10566]) = [1]
	$3 = ($3 << [16])
	*([0] + [10568]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10568])
	
.LABEL $label$8
	*([0] + [10568]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $83($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10480])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $82([2080], $0)
}

void .FUNC $80 (int_32 $0)
{
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [992])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $85([96])
	CALL $77($6)
	*($6 + [80]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [24])
	*($8 + [44]) = ($6 + [40])
	*($8 + [48]) = ($6 + [48])
	*($8 + [52]) = ($6 + [64])
	*($8 + [56]) = ($6 + [72])
	CALL $78(($8 + [32]), ($8 + [24]))
	*($6 + [84]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [84])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $79(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $86($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [720])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $85([104])
	CALL $75($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [92])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $41(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $86($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $70 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [720])
	*(($4 = CALL $85([24])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [528])
	CALL memcpy(($8 + [16]), $4, [8])
	$5 = *($4)
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-3020371635640205312, $2, $5, ($8 + [16]), [8])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [8]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [12])
	*($8 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [8]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $42(($1 + [24]), ($8 + [8]), ($8 + [16]), ($8 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [8])
	*($8 + [8]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $86($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [32])
}

void .FUNC $71 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [112])
	*([0] + [4]) = $16
	$15 = [1]
	if ( CALL has_auth(*($0 + [8])) ){ goto $label$1 }
	$9 = (int_64)0
	$8 = (int_64)59
	$15 = [224]
	$10 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$9 > (uint_64)(int_64)9) ){ goto $label$7 }
	$3 = *($15)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$3 = ($3 + [165])
	goto $label$5 
	
.LABEL $label$7
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$4
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$3
	$15 = ($15 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$2 }
	$9 = (int_64)0
	$11 = (int_64)59
	$15 = [240]
	$12 = (int_64)0
	
.LOOP $label$8:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$9 }
	$3 = *($15)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$3 = ($3 + [165])
	goto $label$10 
	
.LABEL $label$11
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$9
	$15 = ($15 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$8 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$8 }
	$6 = *(($0 + [40]))
	$2 = *(($0 + [44]))
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$12 }
	$15 = ($2 + [-24])
	$5 = ([0] - $6)
	
.LOOP $label$13:
	if ( ((int_64)*(*($15)) == (int_64)$10) ){ goto $label$12 }
	$2 = $15
	$3 = ($15 + [-24])
	$15 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	$15 = ($0 + [16])
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$16 }
	$3 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$15), [256])
	if ( $3 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	$3 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $10)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$14 }
	$3 = CALL $17($15, $3)
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)$15), [256])
	
.LABEL $label$15
	$12 = *($3 + [8])
	
.LABEL $label$14
	$15 = CALL has_auth($12)
	
.LABEL $label$1
	CALL eosio_assert($15, [320])
	$1 = ($0 + [144])
	$9 = (int_64)0
	$15 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [144]), *(($0 + [152])), (int_64)-3020371635640205312, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$17 }
	$15 = CALL $18($1, $3)
	
.LABEL $label$17
	CALL eosio_assert(($15 == 0), [2032])
	$8 = (int_64)59
	$15 = [2048]
	$10 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$9 > (uint_64)(int_64)8) ){ goto $label$23 }
	$3 = *($15)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$3 = ($3 + [165])
	goto $label$21 
	
.LABEL $label$23
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$19
	$15 = ($15 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$18 }
	$9 = (int_64)0
	$11 = (int_64)59
	$15 = [2064]
	$12 = (int_64)0
	
.LOOP $label$24:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$25 }
	$3 = *($15)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$25
	$15 = ($15 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$8 | (int_64)$12)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$24 }
	$4 = *(($0 + [40]))
	$2 = *(($0 + [44]))
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$28 }
	$15 = ($2 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$29:
	if ( ((int_64)*(*($15)) == (int_64)$10) ){ goto $label$28 }
	$2 = $15
	$3 = ($15 + [-24])
	$15 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$29 }
	
.LABEL $label$28
	$6 = ($0 + [16])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$32 }
	$15 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [24]) == (int_32)$6), [256])
	if ( $15 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$15 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $10)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$30 }
	$15 = CALL $17($6, $15)
	CALL eosio_assert(((int_32)*($15 + [24]) == (int_32)$6), [256])
	
.LABEL $label$31
	$12 = *($15 + [8])
	
.LABEL $label$30
	$9 = (int_64)0
	$8 = (int_64)59
	$15 = [2048]
	$10 = (int_64)0
	
.LOOP $label$33:
	if ( ((uint_64)$9 > (uint_64)(int_64)8) ){ goto $label$38 }
	$3 = *($15)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$3 = ($3 + [165])
	goto $label$36 
	
.LABEL $label$38
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$37
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$35
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$34
	$15 = ($15 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$33 }
	$9 = (int_64)0
	$11 = (int_64)59
	$15 = [2064]
	$13 = (int_64)0
	
.LOOP $label$39:
	$8 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$40 }
	$3 = *($15)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$3 = ($3 + [165])
	goto $label$41 
	
.LABEL $label$42
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$40
	$15 = ($15 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$13 = ((int_64)$8 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$39 }
	$4 = *(($0 + [40]))
	$2 = *(($0 + [44]))
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$43 }
	$15 = ($2 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$44:
	if ( ((int_64)*(*($15)) == (int_64)$10) ){ goto $label$43 }
	$2 = $15
	$3 = ($15 + [-24])
	$15 = $3
	if ( ((int_32)($3 + $5) != (int_32)[-24]) ){ goto $label$44 }
	
.LABEL $label$43
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$47 }
	$15 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($15 + [24]) == (int_32)$6), [256])
	if ( $15 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$15 = CALL db_find_i64(*(($0 + [16])), *(($0 + [24])), (int_64)4982871467403247616, $10)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$45 }
	$15 = CALL $17($6, $15)
	CALL eosio_assert(((int_32)*($15 + [24]) == (int_32)$6), [256])
	
.LABEL $label$46
	$13 = *($15 + [8])
	
.LABEL $label$45
	*((($16 + [72]) + [32])) = [0]
	*($16 + [88]) = (int_64)-1
	*($16 + [80]) = $13
	*($16 + [72]) = $12
	$14 = (int_64)0
	*($16 + [96]) = (int_64)0
	$15 = CALL db_lowerbound_i64($12, $13, (int_64)3607749779137757184, (int_64)0)
	if ( ((int_32)$15 <= (int_32)[-1]) ){ goto $label$49 }
	$15 = CALL $72(($16 + [72]), $15)
	*($16 + [68]) = $15
	*($16 + [64]) = ($16 + [72])
	$4 = ($16 + [40])
	$5 = ($16 + [48])
	$6 = ($16 + [52])
	$7 = (($16 + [24]) + [32])
	
.LOOP $label$50:
	*((($16 + [24]) + [8])) = *($15)
	*($4) = (int_64)-1
	*($5) = [0]
	$15 = ($0 + [8])
	$9 = *($15)
	*($16 + [24]) = $9
	*($6) = [0]
	*($7) = [0]
	*($16 + [16]) = ($16 + [64])
	CALL $73(($16 + [8]), ($16 + [24]), $9, ($16 + [16]))
	$9 = *($15)
	*($16 + [16]) = ($16 + [64])
	CALL $74(($16 + [8]), $1, $9, ($16 + [16]))
	$15 = *($16 + [68])
	$9 = *($15 + [24])
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$51 }
	$15 = *($6)
	if ( ((int_32)$15 != (int_32)$2) ){ goto $label$53 }
	$15 = $2
	goto $label$52 
	
.LABEL $label$53
	
.LOOP $label$54:
	$15 = ($15 + [-24])
	$3 = *($15)
	*($15) = [0]
	if ( ($3 == 0) ){ goto $label$55 }
	CALL $86($3)
	
.LABEL $label$55
	if ( ((int_32)$2 != (int_32)$15) ){ goto $label$54 }
	$15 = *($5)
	
.LABEL $label$52
	*($6) = $2
	CALL $86($15)
	$15 = *($16 + [68])
	
.LABEL $label$51
	$14 = ((int_64)$9 + (int_64)$14)
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [448])
	$15 = CALL db_next_i64(*(*($16 + [68]) + [84]), ($16 + [24]))
	if ( ((int_32)$15 <= (int_32)[-1]) ){ goto $label$56 }
	$15 = CALL $72(*($16 + [64]), $15)
	*($16 + [68]) = $15
	goto $label$50 
	
.LABEL $label$56
	*($16 + [68]) = [0]
	goto $label$48 
	
.LABEL $label$49
	*($16 + [68]) = [0]
	*($16 + [64]) = ($16 + [72])
	$14 = (int_64)0
	
.LABEL $label$48
	$9 = (int_64)0
	$8 = (int_64)59
	$15 = [1136]
	$10 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$9 > (uint_64)(int_64)10) ){ goto $label$62 }
	$3 = *($15)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$3 = ($3 + [165])
	goto $label$60 
	
.LABEL $label$62
	$11 = (int_64)0
	if ( ((int_64)$9 == (int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$58
	$15 = ($15 + [1])
	$8 = ((int_64)$8 + (int_64)-5)
	$10 = ((int_64)$11 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)13) ){ goto $label$57 }
	CALL $22($0, $10, $14)
	$2 = *($16 + [96])
	if ( ($2 == 0) ){ goto $label$63 }
	$5 = ($16 + [100])
	$15 = *($5)
	if ( ((int_32)$15 == (int_32)$2) ){ goto $label$65 }
	
.LOOP $label$66:
	$15 = ($15 + [-24])
	$3 = *($15)
	*($15) = [0]
	if ( ($3 == 0) ){ goto $label$67 }
	CALL $86($3)
	
.LABEL $label$67
	if ( ((int_32)$2 != (int_32)$15) ){ goto $label$66 }
	$15 = *(($16 + [96]))
	goto $label$64 
	
.LABEL $label$65
	$15 = $2
	
.LABEL $label$64
	*($5) = $2
	CALL $86($15)
	
.LABEL $label$63
	*([0] + [4]) = ($16 + [112])
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	*($1) = *(*(*($0) + [4]))
	$3 = *(*($0) + [4])
	*($1 + [8]) = *($3 + [24])
	*(($1 + [16])) = *(($3 + [32]))
	*($1 + [24]) = *(*(*($0) + [4]) + [40])
	CALL eosio_assert([1], [928])
	$0 = [0]
	$2 = (int_64)4409172
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [896])
	*(($1 + [40])) = (int_64)1128748036
	*($1 + [32]) = (int_64)0
	*($1 + [48]) = [0]
	CALL eosio_assert([1], [928])
	$2 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [896])
	*(($1 + [64])) = (int_64)1397703940
	*($1 + [56]) = (int_64)0
	CALL eosio_assert([1], [928])
	$2 = (int_64)4409172
	$0 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [896])
	*(($1 + [80])) = (int_64)1128748036
	*($1 + [72]) = (int_64)0
}

int_32 .FUNC $77 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [896])
	return $0
}

void .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [720])
	*(($4 = CALL $85([24])) + [8]) = $1
	*($4) = *(*(*($3) + [4]))
	CALL eosio_assert([1], [528])
	CALL memcpy(($8 + [16]), $4, [8])
	$5 = *($4)
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-3020371635640205312, $2, $5, ($8 + [16]), [8])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [8]) = $4
	$5 = *($4)
	*($8 + [16]) = $5
	$6 = *($4 + [12])
	*($8 + [4]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [8]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $42(($1 + [24]), ($8 + [8]), ($8 + [16]), ($8 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [8])
	*($8 + [8]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $86($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $39 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [896])
	*(($2 = ($0 + [80]))) = (int_64)1398362884
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [928])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [896])
	return $0
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	CALL eosio_assert(((int_64)*(($1 + [40])) == (int_64)*(($1 + [80]))), [784])
	$2 = ((int_64)*($1 + [72]) + (int_64)*($1 + [32]))
	*($1 + [72]) = $2
	CALL eosio_assert(((int_64)$2 > (int_64)-4611686018427387904), [832])
	CALL eosio_assert(((int_64)*($1 + [72]) < (int_64)4611686018427387904), [864])
	CALL eosio_assert([1], [928])
	$3 = [0]
	$2 = (int_64)4409172
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [896])
	*(($1 + [40])) = (int_64)1128748036
	*(($1 + [32])) = (int_64)0
	*($1 + [48]) = [0]
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [528])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [528])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [528])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1024])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1024])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $85(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $89($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $86($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $86($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $32 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [720])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $85([40])) + [24]) = $1
	CALL $34(($7 + [16]), $3)
	*($7 + [32]) = $3
	$2 = *($3)
	*($7 + [16]) = $2
	$4 = *($3 + [28])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $35(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $86($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [544])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [592])
	*($1 + [8]) = *(*($3))
	*($1 + [16]) = *(*($3))
	$4 = *($1)
	CALL eosio_assert([1], [656])
	CALL eosio_assert([1], [528])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [528])
	CALL memcpy(($5 | [8]), ($1 + [8]), [8])
	CALL eosio_assert([1], [528])
	CALL memcpy(($5 + [16]), ($1 + [16]), [8])
	CALL db_update_i64(*($1 + [28]), $2, $5, [24])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [32])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [528])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [528])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [528])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [528])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [528])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}