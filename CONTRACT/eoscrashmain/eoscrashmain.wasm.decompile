(data (i32.const 8220) "failed to allocate pages\00\00\01\02\04\07\03\06\05\00game is not initialised\00")
(data (i32.const 8288) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 8545) "stoi\00game stopped\00")
(data (i32.const 8563) ": no conversion\00Memo.size() must be more or equal 3.\00")
(data (i32.const 8616) ": out of range\00Count table is not initialised.\00")
(data (i32.const 8663) "previous round is not closed\00")
(data (i32.const 8692) "bets is not initialised\00")
(data (i32.const 8716) ":\00")
(data (i32.const 8718) "dice\00")
(data (i32.const 8723) "games..dice\00")
(data (i32.const 8735) "round is not found\00")
(data (i32.const 8754) "round is not active\00")
(data (i32.const 8774) "round does not accept bets any more\00")
(data (i32.const 8810) "Too much players in this round.\00")
(data (i32.const 8842) "player already joined the round\00")
(data (i32.const 8874) "cannot transfer to self\00")
(data (i32.const 8898) "EOS\00")
(data (i32.const 8902) "Contract accepts only the EOS at the moment.\00")
(data (i32.const 8947) "Mimimal bet is 0.2 eos\00")
(data (i32.const 8970) "Max bet is 100 eos\00")
(data (i32.const 8989) "Couldn\'t parse the memo.\00")
(data (i32.const 9014) "Room with this name doesn\'t exist.\00")
(data (i32.const 9049) "Bet size doesn\'t match.\00")
(data (i32.const 9073) "Room is full\00")
(data (i32.const 9086) "Room is closed. Wait next round.\00")
(data (i32.const 9119) "You have already bet in this room.\00")
(data (i32.const 9154) "Read transaction failed.\00")
(data (i32.const 9179) "Count table is not created.\00")
(data (i32.const 9207) "Settings table is not initialised.\00")
(data (i32.const 9242) "Number must be within range [4, 95].\00")
(data (i32.const 9279) "Couldn\'t parse the range_number.\00")
(data (i32.const 9312) "Referral account doesn\'t exist.\00")
(data (i32.const 9344) "Cannot referral yourself.\00")
(data (i32.const 9370) "active\00")
(data (i32.const 9377) "eosio.token\00")
(data (i32.const 9389) "transfer\00")
(data (i32.const 9398) "referrals from username: \00")
(data (i32.const 9424) "crashdividen\00")
(data (i32.const 9437) "dividends\00")
(data (i32.const 9447) "eoscrashhodl\00")
(data (i32.const 9460) "comission rest\00")
(data (i32.const 9475) "Previous game is not finished yet.\00")
(data (i32.const 9510) "Tournament with this name doesn\'t exist.\00")
(data (i32.const 9551) "Registration is closed. Wait next tournament.\00")
(data (i32.const 9597) "You have already registered.\00")
(data (i32.const 9626) "Not setuped!\00")
(data (i32.const 9639) "invalid quantity\00")
(data (i32.const 9656) "must transfer positive quantity\00")
(data (i32.const 9688) "memo has more than 256 bytes\00")
(data (i32.const 9717) "eoscrashpker\00")
(data (i32.const 9730) " Setting must be setup on poker contract\00")
(data (i32.const 9771) "Bet less than min\00")
(data (i32.const 9789) "Bet more than min\00")
(data (i32.const 9807) "eoscrashpkjp\00")
(data (i32.const 9820) "jackpot\00")
(data (i32.const 9828) "start\00")
(data (i32.const 9834) "This bet was did not on DICE\00")
(data (i32.const 9863) "username\00")
(data (i32.const 9872) "Bad part of memo. Here must be username\00")
(data (i32.const 9912) "amount\00")
(data (i32.const 9919) "Bad part of memo. Here must be amount\00")
(data (i32.const 9957) ".\00")
(data (i32.const 9959) "Bad memo. Not EOS symbol \00")
(data (i32.const 9985) "memo\00")
(data (i32.const 9990) "Bad memo. Couldn\'t find local memo \00")
(data (i32.const 10026) "dice:\00")
(data (i32.const 10032) "d:\00")
(data (i32.const 10035) "bet amount is out of range\00")
(data (i32.const 10062) "Game don\'t started0\00")
(data (i32.const 10082) "game was ended!\00")
(data (i32.const 10098) "Game only started!\00")
(data (i32.const 10117) "Resolves don\'t end!\00")
(data (i32.const 10137) "Win on CRASH VIDEO POKER\00")
(data (i32.const 10162) "game:crashpoker,username:\00")
(data (i32.const 10188) ",memo:Win on CRASH VIDEO POKER on DICE\00")
(data (i32.const 10227) "endgame\00")
(data (i32.const 10235) "Room with this name already exists.\00")
(data (i32.const 10271) "Asset precision must equal 4.\00")
(data (i32.const 10301) "Minimal bet is 0.1 EOS.\00")
(data (i32.const 10325) "Nothing to delete.\00")
(data (i32.const 10344) "Game is not closed.\00")
(data (i32.const 10364) "Cound table is not created.\00")
(data (i32.const 10392) "Table is empty\00")
(data (i32.const 10407) "Game is closed.\00")
(data (i32.const 10423) "Game isn\'t closed.\00")
(data (i32.const 10442) "unregister from aurora=(\00")
(data (i32.const 10467) "Bets isn\'t closed.\00")
(data (i32.const 10486) "Cannot delete the tables, game is not closed.\00")
(data (i32.const 10532) "Game is already closed.\00")
(data (i32.const 10556) "qdpayout\00")
(data (i32.const 10565) "You won the bet.\00")
(data (i32.const 10582) "Settings table was initialised.\00")
(data (i32.const 10614) "Count table was initialised.\00")
(data (i32.const 10643) "Fees must be less or equal 40. (40%)\00")
(data (i32.const 10680) "Dividends must be less or equal 95. (95%)\00")
(data (i32.const 10722) "Referrals must be less or equal 95. (95%)\00")
(data (i32.const 10764) "Mining rate must be less or equal 100. (10.0)\00")
(data (i32.const 10810) "Setuped,bitch!\00")
(data (i32.const 10825) "eoscrashtour\00")
(data (i32.const 10838) "This tourament was created.\00")
(data (i32.const 10866) "This tourament wasn\'t created.\00")
(data (i32.const 10897) "Tournament wasn\'t finished.\00")
(data (i32.const 10925) "You can\'t end register.Couse u don\'t do endunreg.\00")
(data (i32.const 10975) "Player played tour.\00")
(data (i32.const 10995) "You can\'t end regestr.Couse u don\'t start reg\00")
(data (i32.const 11041) "Unregestration closed.\00")
(data (i32.const 11064) "Player wasn\'t register\00")
(data (i32.const 11087) "Aurora tournament unregister\00")
(data (i32.const 11116) "Tournament don\'t start.\00")
(data (i32.const 11140) "Round was created\00")
(data (i32.const 11158) "Round doesn\'t close.\00")
(data (i32.const 11179) "Tournament didn\'t exists.\00")
(data (i32.const 11205) "Regestration don\'t finish.\00")
(data (i32.const 11232) "Round wasn\'t created.\00")
(data (i32.const 11254) "Round was started.\00")
(data (i32.const 11273) "Round wasn\'t created\00")
(data (i32.const 11294) "Round was finished.\00")
(data (i32.const 11314) "You can not take bet now.\00")
(data (i32.const 11340) "Player wasn\'t registere.\00")
(data (i32.const 11365) "Player played another tournament.\00")
(data (i32.const 11399) "You haven\'t enough money.\00")
(data (i32.const 11425) "Player don\'t exist\00")
(data (i32.const 11444) "Player play on another table\00")
(data (i32.const 11473) "This player don\'t lose.\00")
(data (i32.const 11497) "Registration don\'t end.\00")
(data (i32.const 11521) "Round didn\'t end\00")
(data (i32.const 11538) "Player was registered.\00")
(data (i32.const 11561) "Not setuped,bitch!\00")
(data (i32.const 11580) "Tournament doesn\'t exists.\00")
(data (i32.const 11607) "U can\'t del tour.Status 3.\00")
(data (i32.const 11634) "Round doesn\'t exist\00")
(data (i32.const 11654) "U can\'t del round.Status tour 3.\00")
(data (i32.const 11687) "Couldn\'t find an action.\00")
(data (i32.const 11712) "string is too long to be a valid name\00")
(data (i32.const 11750) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 11817) "character is not in allowed character set for names\00")
(data (i32.const 11869) "string is too long to be a valid symbol_code\00")
(data (i32.const 11914) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 11967) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 12016) "invalid symbol name\00")
(data (i32.const 12036) "\08/\00\00")
(data (i32.const 12040) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 12073) "write\00")
(data (i32.const 12079) "error reading iterator\00")
(data (i32.const 12102) "cannot pass end iterator to modify\00")
(data (i32.const 12137) "object passed to modify is not in multi_index\00")
(data (i32.const 12183) "cannot modify objects in table of another contract\00")
(data (i32.const 12234) "updater cannot change primary key when modifying an object\00")
(data (i32.const 12293) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 12344) "get\00")
(data (i32.const 12348) "cannot create objects in table of another contract\00")
(data (i32.const 12399) "attempt to add asset with different symbol\00")
(data (i32.const 12442) "addition underflow\00")
(data (i32.const 12461) "addition overflow\00")
(data (i32.const 12479) "cannot pass end iterator to erase\00")
(data (i32.const 12513) "cannot increment end iterator\00")
(data (i32.const 12543) "object passed to erase is not in multi_index\00")
(data (i32.const 12588) "cannot erase objects in table of another contract\00")
(data (i32.const 12638) "attempt to remove object that was not in multi_index\00")
(data (i32.const 12692) "read\00")
(data (i32.const 12697) "unexpected error in fixed_bytes constructor\00")
(data (i32.const 0) "\c81\00\00")
(import "env" "require_auth" (func $fimport$0 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "eosio_assert" (func $fimport$2 (param i32 i32)))
(import "env" "db_find_i64" (func $fimport$3 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$4 (result i64)))
(import "env" "abort" (func $fimport$5))
(import "env" "memset" (func $fimport$6 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$9 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$10 (param i32 i32)))
(import "env" "__multf3" (func $fimport$11 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$12 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$13 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$14 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$15 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$16 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$19 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$20 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$21 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$22 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$23 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$24 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$25 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$26 (param i64 i64) (result i32)))
(import "env" "current_time" (func $fimport$27 (result i64)))
(import "env" "db_next_i64" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "require_recipient" (func $fimport$29 (param i64)))
(import "env" "db_store_i64" (func $fimport$30 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$31 (param i64) (result i32)))
(import "env" "transaction_size" (func $fimport$32 (result i32)))
(import "env" "read_transaction" (func $fimport$33 (param i32 i32) (result i32)))
(import "env" "sha256" (func $fimport$34 (param i32 i32 i32)))
(import "env" "send_inline" (func $fimport$35 (param i32 i32)))
(import "env" "prints" (func $fimport$36 (param i32)))
(import "env" "action_data_size" (func $fimport$37 (result i32)))
(import "env" "read_action_data" (func $fimport$38 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$39 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$40 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$41 (param i32 i64 i32 i32)))
(import "env" "db_remove_i64" (func $fimport$42 (param i32)))
(import "env" "__ashlti3" (func $fimport$43 (param i32 i64 i64 i32)))
(export "apply" (func $193))
(table $0 47 47 anyfunc)
(elem (i32.const 1) $117 $72 $67 $173 $146 $63 $122 $164 $185 $115 $178 $100 $191 $97 $127 $175 $161 $118 $106 $134 $65 $143 $154 $156 $168 $113 $66 $129 $125 $159 $136 $187 $188 $120 $108 $52 $170 $111 $121 $152 $182 $46 $56 $133 $190 $139)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 12741))
(global $global$2 i32 (i32.const 12741))


void .FUNC $335 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_64 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$8 = ($global$0 - [80])
	$global$0 = $8
	$0 = *($0 + [4])
	$9 = *($0 + [4])
	$10 = (*($0) + int_32($9 >> [1]))
	$11 = *($0)
	if ( (($9 & [1]) == 0) ){ goto $label$1 }
	$11 = *((*($10) + $11))
	
.LABEL $label$1
	*(($9 = (($8 + [64]) + [8]))) = *(($3 + [8]))
	*($8 + [64]) = *($3)
	$3 = CALL $25(($8 + [48]), $4)
	$0 = CALL $25(($8 + [32]), $5)
	$4 = CALL $25(($8 + [16]), $6)
	*(($8 + [8])) = *($9)
	*($8) = *($8 + [64])
	CALL void $10((int_32 $1), (int_64 $2), (int_64 $8), (int_32 $3), (int_32 $0), (int_32 $4), (int_32 $7), (int_64 $11))
	if ( (*($4) & [1]) ){ goto $label$6 }
	if ( (*($0) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*($4 + [8]))
	if ( ((*($0) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*($0 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($3) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($8 + [80])
	return 
	
.LABEL $label$2
	CALL $9(*($3 + [8]))
	$global$0 = ($8 + [80])
}

void .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	CALL $219(*($1), ($4 + [12]))
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [32])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = ($4 + [40])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $284 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $185($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $285 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	*($3 + [192]) = (int_64)0
	*($3 + [184]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [184]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [184]) + [8]))) = *($3 + [32])
	*((($3 + [32]) + [24])) = $4
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($4 = ($3 + [88]))) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($6 = ($3 + [128]))) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [24])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	*(($3 + [160])) = (int_64)-1
	*(($2 = ($3 + [168]))) = (int_64)0
	*(($3 + [176])) = [0]
	$0 = *($5)
	*((($3 + [16]) + [8])) = $0
	*(($3 + [8])) = $0
	$0 = *($3 + [184])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $159(($3 + [32]), *($3 + [200]), $3)
	CALL $217($2)
	CALL $218($6)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$8 }
	$6 = ($3 + [92])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $9($4)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [88]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $5
	
.LABEL $label$9
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$8
	$global$0 = ($3 + [208])
}

void .FUNC $317 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $219(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($4, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $174 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)((uint_64)*(*(*($3) + [4]) + [24]) / (uint_64)*(*(($3 + [4])))))
	$6 = *($1 + [16])
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-14])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [40]), $2, $3, [34])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $176 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$6 = ($1 + [80])
	$7 = *($1)
	$9 = *($1 + [80])
	$8 = *(($1 + [84]))
	$10 = int_32(($8 - $9) >> [3])
	$11 = ($10 & [255])
	if ( ($11 == 0) ){ goto $label$6 }
	$12 = *($3)
	$13 = [0]
	$14 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)$10 <= (uint_32)$13) ){ goto $label$5 }
	if ( ((int_64)*(($9 + ($13 << [3]))) == (int_64)*($12)) ){ goto $label$8 }
	$14 = ($14 + [1])
	$13 = ($14 & [255])
	if ( ((uint_32)$11 > (uint_32)$13) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$13 = ($9 + ($13 << [3]))
	$10 = ($13 + [8])
	$14 = ($8 - $10)
	$9 = int_32($14 >> [3])
	if ( ($14 == 0) ){ goto $label$9 }
	CALL memmove($13, $10, $14)
	
.LABEL $label$9
	*(($1 + [84])) = ($13 + ($9 << [3]))
	
.LABEL $label$6
	$14 = *($3)
	$9 = ($1 + [96])
	$13 = *($9)
	if ( ((int_32)$13 == (int_32)*(($1 + [100]))) ){ goto $label$10 }
	*($9) = ($13 + [8])
	*($13) = *($14)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$10
	CALL $323(($1 + [92]), $14)
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $44($6)
	
.LABEL $label$4
	CALL eosio_assert([0], [12234])
	
.LABEL $label$3
	$10 = *(($1 + [80]))
	$14 = *(($1 + [84]))
	$11 = ($14 - $10)
	$15 = (CASTING uint_64)(uint_32 int_32($11 >> [3]))
	$13 = [69]
	
.LOOP $label$11:
	$13 = ($13 + [1])
	$15 = (uint_64)$15 >> (uint_64)(int_64)7
	if ( ((int_64)$15) != (int_64)0) ){ goto $label$11 }
	$9 = ($1 + [92])
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$12 }
	$13 = (($11 & [-8]) + $13)
	
.LABEL $label$12
	$10 = *($9)
	$14 = *(($1 + [96]))
	$11 = ($14 - $10)
	$15 = (CASTING uint_64)(uint_32 int_32($11 >> [3]))
	
.LOOP $label$13:
	$13 = ($13 + [1])
	$15 = (uint_64)$15 >> (uint_64)(int_64)7
	if ( ((int_64)$15) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$10 == (int_32)$14) ){ goto $label$14 }
	$13 = (($11 & [-8]) + $13)
	
.LABEL $label$14
	if ( ($13 <= [513]) ){ goto $label$16 }
	$14 = CALL $1($13)
	goto $label$15 
	
.LABEL $label$16
	$14 = ($4 - (($13 + [15]) & [-16]))
	$global$0 = $14
	
.LABEL $label$15
	*($5 + [4]) = $14
	*($5) = $14
	*($5 + [8]) = ($14 + $13)
	*($5 + [16]) = $5
	*($5 + [56]) = $6
	*($5 + [60]) = $9
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [48])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [72])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $14, $13)
	if ( ((uint_32)$13 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $2($14)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [64])
	(unreachable)
}

void .FUNC $177 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$3 = *(*($3) + [4])
	*($1 + [32]) = uint_32((*(($3 + [84])) - *($3 + [80])) >> [3])
	$6 = *($1 + [16])
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-14])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [40]), $2, $4, [34])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $170 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [240])
	$global$0 = $4
	*(($5 = $4) + [232]) = $2
	CALL require_auth($2)
	$6 = [0]
	*(($5 + [224])) = [0]
	*($5 + [208]) = (int_64)-1
	*($5 + [216]) = (int_64)0
	$2 = *($0)
	*($5 + [192]) = $2
	*($5 + [200]) = $2
	$7 = CALL db_find_i64($2, $2, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL $90(($5 + [192]), $7)
	if ( ((int_32)*($6 + [104]) == (int_32)($5 + [192])) ){ goto $label$3 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$3
	*($5 + [188]) = $6
	*($5 + [184]) = ($5 + [192])
	$7 = (($5 + [184]) | [4])
	$6 = [1]
	goto $label$1 
	
.LABEL $label$2
	*($5 + [188]) = [0]
	*($5 + [184]) = ($5 + [192])
	$7 = (($5 + [184]) | [4])
	
.LABEL $label$1
	CALL eosio_assert($6, [11179])
	$8 = [0]
	*((($5 + [144]) + [32])) = [0]
	*($5 + [160]) = (int_64)-1
	*($5 + [168]) = (int_64)0
	$2 = *($0)
	*($5 + [144]) = $2
	*($5 + [152]) = $2
	$9 = [0]
	$6 = CALL db_find_i64($2, $2, (int_64)-3659882974603116544, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $157(($5 + [144]), $6)
	if ( ((int_32)*($9 + [44]) == (int_32)($5 + [144])) ){ goto $label$4 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [11273])
	CALL eosio_assert((*($9 + [16]) == 0), [11314])
	*((($5 + [104]) + [32])) = [0]
	*($5 + [120]) = (int_64)-1
	*($5 + [128]) = (int_64)0
	$2 = *($0)
	*($5 + [104]) = $2
	*($5 + [112]) = $2
	$6 = CALL db_find_i64($2, $2, (int_64)-3659884136206307328, *($5 + [232]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $148(($5 + [104]), $6)
	if ( ((int_32)*($8 + [36]) == (int_32)($5 + [104])) ){ goto $label$5 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [11340])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)$1), [11365])
	CALL eosio_assert(((uint_64)*($8 + [24]) >= (uint_64)*(*($7) + [48])), [11399])
	$10 = *(($9 + [36]))
	$6 = *($9 + [32])
	if ( ((int_32)$6 == (int_32)$10) ){ goto $label$6 }
	$11 = (($5 + [32]) + [16])
	$7 = (($5 + [32]) + [32])
	$12 = ($7 + [24])
	
.LOOP $label$7:
	*($5 + [32]) = *($6)
	*($5 + [40]) = *(($6 + [8]))
	CALL $25($11, ($6 + [16]))
	*($12) = *(($6 + [56]))
	*(($7 + [16])) = *(($6 + [48]))
	*(($7 + [8])) = *(($6 + [40]))
	*($7) = *(($6 + [32]))
	CALL eosio_assert(((int_64)*($5 + [40]) != (int_64)*($5 + [232])), [9119])
	if ( ((*($11) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*((($5 + [32]) + [24])))
	
.LABEL $label$8
	$6 = ($6 + [64])
	if ( ((int_32)$6 != (int_32)$10) ){ goto $label$7 }
	
.LABEL $label$6
	$1 = *($0)
	*($5 + [32]) = ($5 + [184])
	if ( $8 ){ goto $label$9 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$9
	CALL $171(($5 + [104]), $8, $1, ($5 + [32]))
	$11 = $4
	$6 = CALL transaction_size()
	$7 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $7
	$10 = CALL read_transaction($7, $6)
	CALL eosio_assert(((int_32)$6 == (int_32)$10), [9154])
	CALL sha256($7, $10, ($5 + [32]))
	*($5 + [31]) = (uint_32((*(($9 + [36])) - *(($9 + [32]))) >> [6]) + [1])
	$1 = *($0)
	*($5 + [20]) = $3
	*($5 + [12]) = ($5 + [31])
	*($5 + [8]) = ($5 + [184])
	*($5 + [16]) = ($5 + [232])
	*($5 + [24]) = ($5 + [32])
	if ( $9 ){ goto $label$10 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$10
	CALL $172(($5 + [144]), $9, $1, ($5 + [8]))
	$11
	$11 = *($5 + [128])
	if ( ($11 == 0) ){ goto $label$11 }
	$10 = ($5 + [132])
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$15 }
	CALL $9($7)
	
.LABEL $label$15
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$14 }
	$6 = *(($5 + [128]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $11
	
.LABEL $label$12
	*($10) = $11
	CALL $9($6)
	
.LABEL $label$11
	$9 = *($5 + [168])
	if ( ($9 == 0) ){ goto $label$16 }
	$0 = ($5 + [172])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$18 }
	
.LOOP $label$19:
	$10 = ($10 + [-24])
	$12 = *($10)
	*($10) = [0]
	if ( ($12 == 0) ){ goto $label$20 }
	$11 = *($12 + [32])
	if ( ($11 == 0) ){ goto $label$21 }
	$8 = ($12 + [36])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$23 }
	
.LOOP $label$24:
	$7 = ($6 + [-64])
	if ( ((*(($6 + [-48])) & [1]) == 0) ){ goto $label$25 }
	CALL $9(*(($6 + [-40])))
	
.LABEL $label$25
	$6 = $7
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$24 }
	$6 = *(($12 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$6 = $11
	
.LABEL $label$22
	*($8) = $11
	CALL $9($6)
	
.LABEL $label$21
	CALL $9($12)
	
.LABEL $label$20
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$19 }
	$6 = *(($5 + [168]))
	goto $label$17 
	
.LABEL $label$18
	$6 = $9
	
.LABEL $label$17
	*($0) = $9
	CALL $9($6)
	
.LABEL $label$16
	$10 = *($5 + [216])
	if ( ($10 == 0) ){ goto $label$26 }
	$12 = ($5 + [220])
	$7 = *($12)
	if ( ((int_32)$7 == (int_32)$10) ){ goto $label$28 }
	
.LOOP $label$29:
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$30 }
	$11 = *($6 + [92])
	if ( ($11 == 0) ){ goto $label$31 }
	*(($6 + [96])) = $11
	CALL $9($11)
	
.LABEL $label$31
	$11 = *($6 + [80])
	if ( ($11 == 0) ){ goto $label$32 }
	*(($6 + [84])) = $11
	CALL $9($11)
	
.LABEL $label$32
	CALL $9($6)
	
.LABEL $label$30
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$29 }
	$6 = *(($5 + [216]))
	goto $label$27 
	
.LABEL $label$28
	$6 = $10
	
.LABEL $label$27
	*($12) = $10
	CALL $9($6)
	
.LABEL $label$26
	$global$0 = ($5 + [240])
}

void .FUNC $171 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [24]) = (int_64))(*($1 + [24]) - *(*(*($3) + [4]) + [48]))
	$6 = *($1 + [16])
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-14])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [40]), $2, $4, [34])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $172 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$6 = *($1 + [8])
	*($1 + [20]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)*(*(*($3) + [4]) + [48]))
	*($5 + [32]) = *(*($3 + [4]))
	*($5 + [40]) = *(*($3 + [8]))
	$7 = CALL $25((($5 + [32]) + [16]), *($3 + [12]))
	$3 = *($3 + [16])
	*((($5 + [32]) + [40])) = *(($3 + [8]))
	*((($5 + [32]) + [48])) = *(($3 + [16]))
	*((($5 + [32]) + [56])) = *(($3 + [24]))
	*($5 + [64]) = *($3)
	$8 = ($1 + [36])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [40]))) ){ goto $label$4 }
	*($3) = *($5 + [32])
	*(($3 + [8])) = *($5 + [40])
	*(($3 + [24])) = *(($7 + [8]))
	*($3 + [16 align=4]) = *($7)
	$9 = (($5 + [32]) + [32])
	*(($3 + [56])) = *(($9 + [24]))
	*(($3 + [48])) = *(($9 + [16]))
	*(($3 + [40])) = *(($9 + [8]))
	*($3 + [32]) = *($9)
	*((($5 + [32]) + [20])) = [0]
	*((($5 + [32]) + [24])) = [0]
	*($7) = [0]
	*($8) = (*($8) + [64])
	goto $label$3 
	
.LABEL $label$4
	CALL $312(($1 + [32]), ($5 + [32]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$3 }
	CALL $9(*(($5 + [56])))
	
.LABEL $label$3
	if ( ((int_64)$6 == (int_64)*(($1 + [8]))) ){ goto $label$5 }
	CALL eosio_assert([0], [12234])
	
.LABEL $label$5
	$10 = ($1 + [24])
	$11 = ($1 + [20])
	$12 = ($1 + [32])
	$7 = *($1 + [32])
	$9 = *(($1 + [36]))
	$13 = (CASTING uint_64)(uint_32 int_32(($9 - $7) >> [6]))
	$3 = [29]
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$7 }
	
.LOOP $label$8:
	$8 = *($7 + [16])
	$8 = ( *(($7 + [20])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$3 = (($8 + $3) + [48])
	$13 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$9 }
	$7 = ($7 + [64])
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ($3 <= [513]) ){ goto $label$11 }
	$7 = CALL $1($3)
	goto $label$10 
	
.LABEL $label$11
	$7 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$10
	*($5 + [12]) = $7
	*($5 + [8]) = $7
	*($5 + [16]) = ($7 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $11
	*($5 + [48]) = $10
	*($5 + [52]) = $12
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	CALL $334(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [48]), $2, $7, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $2($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [96])
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $246 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [152])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [152])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [12692])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $46($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $178 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [176])
	$global$0 = $4
	*($4 + [152]) = $3
	*($4 + [160]) = $2
	*($4 + [136]) = [10825]
	*($4 + [140]) = CALL $15([10825])
	*($4 + [8]) = *($4 + [136])
	CALL require_auth(*(CALL $60(($4 + [144]), ($4 + [8]))))
	$5 = [0]
	*((($4 + [96]) + [32])) = [0]
	*($4 + [112]) = (int_64)-1
	*($4 + [120]) = (int_64)0
	$2 = *($0)
	*($4 + [96]) = $2
	*($4 + [104]) = $2
	$6 = [0]
	$7 = CALL db_find_i64($2, $2, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $90(($4 + [96]), $7)
	if ( ((int_32)*($6 + [104]) == (int_32)($4 + [96])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [11179])
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)[2]), [11497])
	*((($4 + [56]) + [32])) = [0]
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	$2 = *($0)
	*($4 + [56]) = $2
	*($4 + [64]) = $2
	$7 = CALL db_find_i64($2, $2, (int_64)-3659882974603116544, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $157(($4 + [56]), $7)
	if ( ((int_32)*($5 + [44]) == (int_32)($4 + [56])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)*($5 + [16]) == (int_32)[1]), [11521])
	*(($4 + [48])) = [0]
	*($4 + [32]) = (int_64)-1
	$2 = *($0)
	*($4 + [16]) = $2
	*($4 + [24]) = $2
	*($4 + [40]) = (int_64)0
	$7 = CALL db_lowerbound_i64($2, $2, (int_64)-3659884136206307328, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $148(($4 + [16]), $7)
	
.LOOP $label$4:
	if ( ((int_64)*($7 + [8]) != (int_64)$1) ){ goto $label$5 }
	if ( $7 ){ goto $label$6 }
	CALL eosio_assert([0], [12479])
	CALL eosio_assert([0], [12513])
	
.LABEL $label$6
	$8 = [0]
	$9 = CALL db_next_i64(*($7 + [40]), ($4 + [168]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	$8 = CALL $148(($4 + [16]), $9)
	
.LABEL $label$7
	CALL $179(($4 + [16]), $7)
	$7 = $8
	if ( $7 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = *($7 + [40])
	$7 = [0]
	$8 = CALL db_next_i64($8, ($4 + [168]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $148(($4 + [16]), $8)
	
.LABEL $label$8
	if ( $7 ){ goto $label$4 }
	
.LABEL $label$3
	$1 = *($0)
	*($4 + [172]) = ($4 + [152])
	*($4 + [168]) = ($4 + [160])
	if ( $6 ){ goto $label$9 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$9
	CALL $180(($4 + [96]), $6, $1, ($4 + [168]))
	$1 = *($0)
	if ( $5 ){ goto $label$10 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$10
	CALL $181(($4 + [56]), $5, $1)
	$9 = *($4 + [40])
	if ( ($9 == 0) ){ goto $label$11 }
	$0 = ($4 + [44])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$13 }
	
.LOOP $label$14:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$14 }
	$7 = *(($4 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$7 = $9
	
.LABEL $label$12
	*($0) = $9
	CALL $9($7)
	
.LABEL $label$11
	$5 = *($4 + [80])
	if ( ($5 == 0) ){ goto $label$16 }
	$10 = ($4 + [84])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$20 }
	$9 = *($6 + [32])
	if ( ($9 == 0) ){ goto $label$21 }
	$11 = ($6 + [36])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$23 }
	
.LOOP $label$24:
	$8 = ($7 + [-64])
	if ( ((*(($7 + [-48])) & [1]) == 0) ){ goto $label$25 }
	CALL $9(*(($7 + [-40])))
	
.LABEL $label$25
	$7 = $8
	if ( ((int_32)$9 != (int_32)$8) ){ goto $label$24 }
	$7 = *(($6 + [32]))
	goto $label$22 
	
.LABEL $label$23
	$7 = $9
	
.LABEL $label$22
	*($11) = $9
	CALL $9($7)
	
.LABEL $label$21
	CALL $9($6)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$19 }
	$7 = *(($4 + [80]))
	goto $label$17 
	
.LABEL $label$18
	$7 = $5
	
.LABEL $label$17
	*($10) = $5
	CALL $9($7)
	
.LABEL $label$16
	$0 = *($4 + [120])
	if ( ($0 == 0) ){ goto $label$26 }
	$6 = ($4 + [124])
	$8 = *($6)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$28 }
	
.LOOP $label$29:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$30 }
	$9 = *($7 + [92])
	if ( ($9 == 0) ){ goto $label$31 }
	*(($7 + [96])) = $9
	CALL $9($9)
	
.LABEL $label$31
	$9 = *($7 + [80])
	if ( ($9 == 0) ){ goto $label$32 }
	*(($7 + [84])) = $9
	CALL $9($9)
	
.LABEL $label$32
	CALL $9($7)
	
.LABEL $label$30
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$29 }
	$7 = *(($4 + [120]))
	goto $label$27 
	
.LABEL $label$28
	$7 = $0
	
.LABEL $label$27
	*($6) = $0
	CALL $9($7)
	
.LABEL $label$26
	$global$0 = ($4 + [176])
}

int_32 .FUNC $4 ()
{
	return [8208]
}

void .FUNC $276 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $168($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $221 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$5 = CALL $25(($2 + [32]), ($1 + [12]))
	*(($6 = (($2 + [16]) + [8]))) = *(($1 + [32]))
	*($2 + [16]) = *($1 + [24])
	$7 = *($1 + [40])
	*((($2 + [48]) + [8])) = *($6)
	*($2 + [48]) = *($2 + [16])
	$1 = *($0 + [4])
	$6 = *($1 + [4])
	$0 = (*($0) + int_32($6 >> [1]))
	$1 = *($1)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$6 = CALL $25(($2 + [80]), $5)
	$8 = *((($2 + [48]) + [8]))
	*((($2 + [64]) + [8])) = $8
	*(($2 + [8])) = $8
	$8 = *($2 + [48])
	*($2) = $8
	*($2 + [64]) = $8
	CALL void $0((int_32 $4), (int_64 $3), (int_32 $6), (int_32 $2), (int_32 $7), (int_64 $1))
	if ( (*($2 + [80]) & [1]) ){ goto $label$4 }
	if ( (*($5) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($5 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $127 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = [0]
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)-5594450192367616000, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $78($1, $3)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [10325])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	if ( (*($0 + [64]) == 0) ){ goto $label$4 }
	$3 = [0]
	$4 = CALL db_next_i64(*($0 + [72]), ($1 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$5 }
	$3 = CALL $78($1, $4)
	
.LABEL $label$5
	CALL $128($1, $0)
	$0 = $3
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = *($0 + [72])
	$0 = [0]
	$3 = CALL db_next_i64($3, ($1 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	$0 = CALL $78($1, $3)
	
.LABEL $label$6
	if ( $0 ){ goto $label$3 }
	
.LABEL $label$2
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$7 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$11 }
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($3 + [40])))
	
.LABEL $label$12
	CALL $9($3)
	
.LABEL $label$11
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($1 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $4
	
.LABEL $label$8
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$7
	$global$0 = ($1 + [48])
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12543])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12588])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$7 }
	$5 = $4
	$6 = *($1 + [8])
	if ( ((int_64)*(*(($4 + [-24])) + [8]) == (int_64)$6) ){ goto $label$8 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$9:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9) + [8]) != (int_64)$6) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$6 }
	$10 = [-24]
	$2 = ($5 + [-24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	CALL eosio_assert([0], [12638])
	$10 = [-24]
	$2 = ($5 + [-24])
	$4 = *($3)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$10:
	$8 = *($5)
	*($5) = [0]
	$3 = *($2)
	*($2) = $8
	if ( ($3 == 0) ){ goto $label$11 }
	$7 = *($3 + [32])
	if ( ($7 == 0) ){ goto $label$12 }
	$11 = ($3 + [36])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = ($8 + [-64])
	if ( ((*(($8 + [-48])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [-40])))
	
.LABEL $label$16
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$15 }
	$8 = *(($3 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $7
	
.LABEL $label$13
	*($11) = $7
	CALL $9($8)
	
.LABEL $label$12
	CALL $9($3)
	
.LABEL $label$11
	*($2 + [8]) = *($5 + [8])
	*(($2 + [16])) = *(($5 + [16]))
	$2 = ($2 + [24])
	$5 = ($5 + [24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$10 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$17:
	$5 = ($5 + $10)
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	$7 = *($3 + [32])
	if ( ($7 == 0) ){ goto $label$19 }
	$4 = ($3 + [36])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$22:
	$9 = ($8 + [-64])
	if ( ((*(($8 + [-48])) & [1]) == 0) ){ goto $label$23 }
	CALL $9(*(($8 + [-40])))
	
.LABEL $label$23
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$22 }
	$8 = *(($3 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$8 = $7
	
.LABEL $label$20
	*($4) = $7
	CALL $9($8)
	
.LABEL $label$19
	CALL $9($3)
	
.LABEL $label$18
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$17 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [48]))
}

void .FUNC $188 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [112])
	$global$0 = $2
	*($2 + [88]) = [10825]
	*($2 + [92]) = CALL $15([10825])
	*($2) = *($2 + [88])
	CALL require_auth(*(CALL $60(($2 + [96]), $2)))
	$3 = [0]
	*((($2 + [48]) + [32])) = [0]
	*($2 + [64]) = (int_64)-1
	*($2 + [72]) = (int_64)0
	$4 = *($0)
	*($2 + [48]) = $4
	*($2 + [56]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-3659882974603116544, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $157(($2 + [48]), $6)
	if ( ((int_32)*($5 + [44]) == (int_32)($2 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [11634])
	*((($2 + [8]) + [32])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $90(($2 + [8]), $0)
	if ( ((int_32)*($3 + [104]) == (int_32)($2 + [8])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [11580])
	CALL eosio_assert(((int_32)*($3 + [24]) == (int_32)[3]), [11654])
	if ( $5 ){ goto $label$3 }
	CALL eosio_assert([0], [12479])
	CALL eosio_assert([0], [12513])
	
.LABEL $label$3
	$3 = CALL db_next_i64(*($5 + [48]), ($2 + [104]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	CALL $157(($2 + [48]), $3)
	
.LABEL $label$4
	CALL $189(($2 + [48]), $5)
	$6 = *($2 + [32])
	if ( ($6 == 0) ){ goto $label$5 }
	$7 = ($2 + [36])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	$0 = *($5 + [92])
	if ( ($0 == 0) ){ goto $label$10 }
	*(($5 + [96])) = $0
	CALL $9($0)
	
.LABEL $label$10
	$0 = *($5 + [80])
	if ( ($0 == 0) ){ goto $label$11 }
	*(($5 + [84])) = $0
	CALL $9($0)
	
.LABEL $label$11
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	$5 = *(($2 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$5 = $6
	
.LABEL $label$6
	*($7) = $6
	CALL $9($5)
	
.LABEL $label$5
	$8 = *($2 + [72])
	if ( ($8 == 0) ){ goto $label$12 }
	$9 = ($2 + [76])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$16 }
	$0 = *($7 + [32])
	if ( ($0 == 0) ){ goto $label$17 }
	$10 = ($7 + [36])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = ($5 + [-64])
	if ( ((*(($5 + [-48])) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*(($5 + [-40])))
	
.LABEL $label$21
	$5 = $3
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$20 }
	$5 = *(($7 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$5 = $0
	
.LABEL $label$18
	*($10) = $0
	CALL $9($5)
	
.LABEL $label$17
	CALL $9($7)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$15 }
	$5 = *(($2 + [72]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $8
	
.LABEL $label$13
	*($9) = $8
	CALL $9($5)
	
.LABEL $label$12
	$global$0 = ($2 + [112])
}

int_32 .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [20]) = $5
	*($3 + [16]) = $5
	*($3 + [24]) = ($5 + $4)
	*(($4 = CALL $7([64]))) = (int_64)0
	*($4 + [40 align=4]) = (int_64)0
	*($4 + [48]) = [0]
	*($4 + [52]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($4 + [8])
	*($3 + [40]) = $4
	*($3 + [48]) = ($4 + [16])
	*($3 + [52]) = ($4 + [24])
	*($3 + [56]) = ($4 + [32])
	*($3 + [60]) = ($4 + [40])
	CALL $293(($3 + [40]), ($3 + [32]))
	*($4 + [56]) = $1
	*($3 + [32]) = $4
	$7 = *($4)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $4
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $51(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$2 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$0 = *($2 + [40])
	if ( ($0 == 0) ){ goto $label$11 }
	$6 = ($2 + [44])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	if ( ((*(($5 + [-28])) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($5 + [-20])))
	
.LABEL $label$15
	$1 = ($5 + [-64])
	if ( ((*(($5 + [-40])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($5 + [-32])))
	
.LABEL $label$16
	$5 = $1
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$14 }
	$5 = *(($2 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $9($5)
	
.LABEL $label$11
	CALL $9($2)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $4
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-64])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-4])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	*($4 + [44]) = ($1 + [24])
	*($4 + [48]) = ($1 + [32])
	*($4 + [52]) = ($1 + [40])
	*($4 + [56]) = ($1 + [48])
	CALL $70(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [68]), $2, $3, [60])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [64])
}

void .FUNC $264 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($5 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($2 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($4 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $127(($3 + [8]))
	CALL $217($4)
	CALL $218($2)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$4 }
	$6 = ($3 + [68])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $9($5)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$4 = *(($3 + [64]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($6) = $2
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($3 + [160])
}

void .FUNC $0 ()
{
	CALL $3()
}

void .FUNC $266 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($5 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($2 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($4 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $129(($3 + [8]))
	CALL $217($4)
	CALL $218($2)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$4 }
	$6 = ($3 + [68])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $9($5)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$4 = *(($3 + [64]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($6) = $2
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($3 + [160])
}

void .FUNC $236 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [2])
	*(($1 = ($1 + [4]))) = (*($1) + [2])
}

void .FUNC $43 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $42 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $41 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $40 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $15($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($5 + [16]) & [-16])
	$5 = CALL $7($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$1 = *($0)
	$5 = ($1 & [1])
	if ( $5 ){ goto $label$9 }
	$3 = [10]
	$1 = uint_32($1 >> [1])
	if ( (([10] - $1) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$1 = *(($0 + [4]))
	$3 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($3 - $1) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $28($0, $3, (($1 + $4) - $3), $1, $1, [0], $4, $2)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$3 = ( *(($0 + [8])) ? ($0 + [1]) : $5 )
	CALL memcpy(($3 + $1), $2, $4)
	$1 = ($1 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $1
	*(($3 + $1)) = [0]
	(unreachable)
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	$5 = CALL $7([80])
	CALL $69($5)
	*($5 + [64]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [40])
	*($3 + [56]) = ($5 + [48])
	CALL $292(($3 + [32]), ($3 + [24]))
	*($5 + [68]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $71(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $46 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	*($2 + [32]) = $1
	CALL require_auth(*($0))
	$3 = ($0 + [32])
	$4 = [0]
	$5 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)-4161326055690338304, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $47($3, $5)
	
.LABEL $label$1
	*($2 + [28]) = $4
	*($2 + [24]) = $3
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [8254])
	CALL eosio_assert((*($4 + [8]) == 0), [8550])
	$1 = *($0)
	if ( $4 ){ goto $label$2 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$2
	CALL $48($3, $4, $1)
	$6 = ($0 + [112])
	$1 = *($0)
	$3 = *(($0 + [140]))
	$7 = *(($0 + [136]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$6:
	$4 = ($3 + [-24])
	$5 = *($4)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$5 }
	$3 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	if ( ((int_32)*($5 + [52]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12293])
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$4 = CALL db_find_i64(*($6), *(($0 + [120])), (int_64)5037744192915243008, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $49($6, $4)
	if ( ((int_32)*($5 + [52]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$3
	CALL eosio_assert(($5 == 0), [8663])
	$1 = *($0)
	*($2 + [8]) = $0
	*($2 + [12]) = ($2 + [32])
	*($2 + [16]) = ($2 + [24])
	*($2 + [72]) = $1
	if ( ((int_64)*(($0 + [112])) == (int_64)CALL current_receiver()) ){ goto $label$7 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$7
	*($2 + [48]) = $6
	*($2 + [52]) = ($2 + [8])
	*($2 + [56]) = ($2 + [72])
	*(($4 = CALL $7([64]))) = (int_64)0
	*($4 + [40 align=4]) = (int_64)0
	*($4 + [48]) = [0]
	*($4 + [52]) = $6
	CALL $50(($2 + [48]), $4)
	*($2 + [64]) = $4
	$1 = *($4)
	*($2 + [48]) = $1
	$5 = *($4 + [56])
	*($2 + [44]) = $5
	$7 = ($0 + [140])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [144]))) ){ goto $label$10 }
	*($3 + [8]) = $1
	*($3 + [16]) = $5
	*($2 + [64]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	$5 = *($2 + [64])
	*($2 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $51(($0 + [136]), ($2 + [64]), ($2 + [48]), ($2 + [44]))
	$5 = *($2 + [64])
	*($2 + [64]) = [0]
	if ( $5 ){ goto $label$8 }
	
.LABEL $label$9
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$8
	$0 = *($5 + [40])
	if ( ($0 == 0) ){ goto $label$11 }
	$7 = ($5 + [44])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	if ( ((*(($4 + [-28])) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($4 + [-20])))
	
.LABEL $label$15
	$3 = ($4 + [-64])
	if ( ((*(($4 + [-40])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($4 + [-32])))
	
.LABEL $label$16
	$4 = $3
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$14 }
	$4 = *(($5 + [40]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $0
	
.LABEL $label$12
	*($7) = $0
	CALL $9($4)
	
.LABEL $label$11
	CALL $9($5)
	$global$0 = ($2 + [80])
}

void .FUNC $45 (int_32 $0)
{
}

void .FUNC $44 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $222 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $219(*($1), ($4 + [32]))
	CALL $219(*($1), ($4 + [44]))
	CALL $219(*($1), ($4 + [56]))
	$0 = ($4 + [72])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $267 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [172])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [172])
	if ( ((uint_32)$4 > (uint_32)[3]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [12692])
	
.LABEL $label$1
	CALL memcpy($5, $2, [4])
	$5 = ($2 + [4])
	$4 = ($4 & [-4])
	if ( ((int_32)$4 != (int_32)[4]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [168]), $5, [4])
	$5 = ($2 + [8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	CALL memcpy(($3 + [164]), $5, [4])
	$5 = ($2 + [12])
	if ( ((int_32)$4 != (int_32)[12]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$8
	CALL memcpy(($3 + [160]), $5, [4])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($4 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($5 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($2 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $134(($3 + [8]), *($3 + [172]), *($3 + [168]), *($3 + [164]), *($3 + [160]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$9 }
	$6 = ($3 + [68])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($3 + [64]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $5
	
.LABEL $label$10
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$9
	$global$0 = ($3 + [176])
}

void .FUNC $234 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $219(*($1), ($4 + [16]))
}

void .FUNC $233 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($4 + [16])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $249 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [156])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [156])
	if ( ((uint_32)$4 > (uint_32)[3]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [12692])
	
.LABEL $label$1
	CALL memcpy($5, $2, [4])
	*(($3 + [20])) = ($2 + [4])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $67($3, *($3 + [156]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $226 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	$2 = ($3 + [8])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $219(*($1), ($3 + [16]))
	CALL $219(*($1), ($3 + [28]))
	CALL $219(*($1), ($3 + [40]))
	$0 = ($3 + [56])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $167 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [24]) = (int_64))(*($1 + [24]) - *(*(*($3) + [4]) + [56]))
	$6 = *($1 + [16])
	$3 = $4
	$4 = ($3 + [-48])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-14])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	CALL $149(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [40]), $2, $4, [34])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $166 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1) = *(*(*($3) + [4]) + [24])
	$6 = *($1 + [8])
	$7 = CALL current_time()
	*($1 + [16]) = [0]
	*($1 + [20]) = ((uint_64)$7 / (uint_64)(int_64)1000000)
	$3 = *(*($3 + [4]) + [4])
	*($1 + [24]) = ((int_64)*($3 + [56]) * (int_64)(CASTING uint_64)(uint_32 int_32((*(($3 + [84])) - *($3 + [80])) >> [3])))
	$8 = ($1 + [36])
	$9 = *($8)
	$3 = *($1 + [32])
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$3 }
	$10 = ($1 + [32])
	
.LOOP $label$4:
	if ( ((int_32)($3 + [64]) == (int_32)$9) ){ goto $label$6 }
	$11 = ($9 + [-64])
	
.LOOP $label$7:
	*(($3 + [8])) = *(($3 + [72]))
	$12 = ($3 + [64])
	*($3) = *($12)
	$13 = ($3 + [16])
	if ( (*($13) & [1]) ){ goto $label$9 }
	*($13) = [0]
	goto $label$8 
	
.LABEL $label$9
	*(*(($3 + [24]))) = [0]
	*(($3 + [20])) = [0]
	
.LABEL $label$8
	CALL $29($13, [0])
	$9 = ($3 + [88])
	*(($13 + [8])) = *($9)
	$14 = ($3 + [80])
	*($13) = *($14)
	*($14) = (int_64)0
	*($9) = [0]
	*(($3 + [32])) = *(($3 + [96]))
	*(($3 + [40])) = *(($3 + [104]))
	*(($3 + [48])) = *(($3 + [112]))
	*(($3 + [56])) = *(($3 + [120]))
	$3 = $12
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$7 }
	$9 = $12
	$3 = *($8)
	if ( ((int_32)$3 != (int_32)$12) ){ goto $label$5 }
	*($8) = $9
	$3 = *($10)
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$12 = $3
	$3 = $9
	
.LABEL $label$5
	
.LOOP $label$10:
	$13 = ($3 + [-64])
	if ( ((*(($3 + [-48])) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($3 + [-40])))
	
.LABEL $label$11
	$3 = $13
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$10 }
	$9 = $12
	*($8) = $9
	$3 = *($10)
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_64)$6 != (int_64)*(($1 + [8]))) ){ goto $label$13 }
	$14 = ($1 + [32])
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [12234])
	$14 = ($1 + [32])
	$9 = *(($1 + [36]))
	$3 = *($1 + [32])
	
.LABEL $label$12
	$11 = ($1 + [24])
	$8 = ($1 + [16])
	$10 = ($1 + [20])
	$7 = (CASTING uint_64)(uint_32 int_32(($9 - $3) >> [6]))
	$13 = [29]
	
.LOOP $label$14:
	$13 = ($13 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$14 }
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$15 }
	
.LOOP $label$16:
	$12 = *($3 + [16])
	$12 = ( *(($3 + [20])) ? uint_32($12 >> [1]) : ($12 & [1]) )
	$13 = (($12 + $13) + [48])
	$7 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$17:
	$13 = ($13 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$17 }
	$3 = ($3 + [64])
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($13 <= [513]) ){ goto $label$19 }
	$3 = CALL $1($13)
	goto $label$18 
	
.LABEL $label$19
	$3 = ($4 - (($13 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$18
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $13)
	*($5 + [16]) = $5
	*($5 + [32]) = $8
	*($5 + [36]) = $10
	*($5 + [40]) = $11
	*($5 + [44]) = $14
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	CALL $334(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [48]), $2, $3, $13)
	if ( ((uint_32)$13 >= (uint_32)[513]) ){ goto $label$22 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	CALL $2($3)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$20 }
	
.LABEL $label$21
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$20
	$global$0 = ($5 + [48])
}

void .FUNC $165 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	CALL $137(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $164 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [208])
	$global$0 = $2
	*($2 + [184]) = [10825]
	*($2 + [188]) = CALL $15([10825])
	*($2) = *($2 + [184])
	CALL require_auth(*(CALL $60(($2 + [192]), $2)))
	$3 = [0]
	*(($2 + [176])) = [0]
	*($2 + [160]) = (int_64)-1
	*($2 + [168]) = (int_64)0
	$4 = *($0)
	*($2 + [144]) = $4
	*($2 + [152]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$3 = CALL $90(($2 + [144]), $5)
	if ( ((int_32)*($3 + [104]) == (int_32)($2 + [144])) ){ goto $label$3 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$3
	*($2 + [140]) = $3
	*($2 + [136]) = ($2 + [144])
	goto $label$1 
	
.LABEL $label$2
	*($2 + [140]) = [0]
	*($2 + [136]) = ($2 + [144])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [11179])
	CALL eosio_assert(((int_32)*(*($2 + [140]) + [24]) == (int_32)[2]), [11205])
	*((($2 + [96]) + [32])) = [0]
	*($2 + [112]) = (int_64)-1
	*($2 + [120]) = (int_64)0
	$4 = *($0)
	*($2 + [96]) = $4
	*($2 + [104]) = $4
	$3 = [0]
	$5 = CALL db_find_i64($4, $4, (int_64)-3659882974603116544, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $157(($2 + [96]), $5)
	if ( ((int_32)*($3 + [44]) == (int_32)($2 + [96])) ){ goto $label$4 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [11232])
	CALL eosio_assert(((int_32)*($3 + [16]) != (int_32)[0]), [11254])
	*((($2 + [56]) + [32])) = [0]
	*($2 + [72]) = (int_64)-1
	$4 = *($0)
	*($2 + [56]) = $4
	*($2 + [64]) = $4
	*($2 + [80]) = (int_64)0
	$5 = CALL db_find_i64($4, $4, (int_64)-3659882349576847360, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	$5 = CALL $91(($2 + [56]), $5)
	if ( ((int_32)*($5 + [40]) == (int_32)($2 + [56])) ){ goto $label$7 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$7
	*($2 + [52]) = $5
	*($2 + [48]) = ($2 + [56])
	$5 = [1]
	goto $label$5 
	
.LABEL $label$6
	$5 = [0]
	*($2 + [52]) = [0]
	*($2 + [48]) = ($2 + [56])
	
.LABEL $label$5
	CALL eosio_assert($5, [9626])
	$4 = *($0)
	$5 = *($2 + [52])
	if ( $5 ){ goto $label$8 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$8
	CALL $165(($2 + [56]), $5, $4)
	$4 = *($0)
	*($2 + [12]) = ($2 + [136])
	*($2 + [8]) = ($2 + [48])
	if ( $3 ){ goto $label$9 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$9
	CALL $166(($2 + [96]), $3, $4, ($2 + [8]))
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $4
	*($2 + [32]) = (int_64)0
	$3 = CALL db_lowerbound_i64($4, $4, (int_64)-3659884136206307328, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$11 }
	$3 = CALL $148(($2 + [8]), $3)
	if ( ((int_64)*($3 + [8]) != (int_64)$1) ){ goto $label$12 }
	$6 = [2]
	goto $label$10 
	
.LABEL $label$12
	$6 = [0]
	goto $label$10 
	
.LABEL $label$11
	$6 = [4]
	
.LABEL $label$10
	
.LOOP $label$13:
	goto $label$93 
	
.LABEL $label$96
	$3 = CALL $148(($2 + [8]), $3)
	if ( ((int_64)*($3 + [8]) != (int_64)$1) ){ goto $label$41 }
	$6 = [2]
	goto $label$13 
	
.LABEL $label$95
	$5 = *($2 + [140])
	if ( (uint_64)(*($3 + [24]) <= ((int_64)*($5 + [56]) + (int_64)*($5 + [48]))) ){ goto $label$42 }
	$6 = [3]
	goto $label$13 
	
.LABEL $label$94
	$4 = *($0)
	*($2 + [200]) = ($2 + [136])
	CALL $167(($2 + [8]), $3, $4, ($2 + [200]))
	$6 = [0]
	goto $label$13 
	
.LABEL $label$93
	$3 = CALL db_next_i64(*($3 + [40]), ($2 + [200]))
	if ( ((int_32)$3 >= (int_32)[0]) ){ goto $label$43 }
	$6 = [4]
	goto $label$13 
	
.LABEL $label$92
	$0 = *($2 + [32])
	if ( ($0 == 0) ){ goto $label$40 }
	$6 = [5]
	goto $label$13 
	
.LABEL $label$91
	$7 = ($2 + [36])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$39 }
	$6 = [6]
	goto $label$13 
	
.LABEL $label$90
	$6 = [7]
	goto $label$13 
	
.LABEL $label$89
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$37 }
	$6 = [8]
	goto $label$13 
	
.LABEL $label$88
	CALL $9($5)
	$6 = [9]
	goto $label$13 
	
.LABEL $label$87
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$38 }
	$6 = [10]
	goto $label$13 
	
.LABEL $label$86
	$3 = *(($2 + [32]))
	goto $label$36 
	
.LABEL $label$85
	$3 = $0
	$6 = [11]
	goto $label$13 
	
.LABEL $label$84
	*($7) = $0
	CALL $9($3)
	$6 = [12]
	goto $label$13 
	
.LABEL $label$83
	$0 = *($2 + [80])
	if ( ($0 == 0) ){ goto $label$35 }
	$6 = [13]
	goto $label$13 
	
.LABEL $label$82
	$7 = ($2 + [84])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$34 }
	$6 = [14]
	goto $label$13 
	
.LABEL $label$81
	$6 = [15]
	goto $label$13 
	
.LABEL $label$80
	$3 = ($3 + [-24])
	$5 = *($3)
	*($3) = [0]
	if ( ($5 == 0) ){ goto $label$32 }
	$6 = [16]
	goto $label$13 
	
.LABEL $label$79
	CALL $9($5)
	$6 = [17]
	goto $label$13 
	
.LABEL $label$78
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$33 }
	$6 = [18]
	goto $label$13 
	
.LABEL $label$77
	$3 = *(($2 + [80]))
	goto $label$31 
	
.LABEL $label$76
	$3 = $0
	$6 = [19]
	goto $label$13 
	
.LABEL $label$75
	*($7) = $0
	CALL $9($3)
	$6 = [20]
	goto $label$13 
	
.LABEL $label$74
	$8 = *($2 + [120])
	if ( ($8 == 0) ){ goto $label$30 }
	$6 = [21]
	goto $label$13 
	
.LABEL $label$73
	$9 = ($2 + [124])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$29 }
	$6 = [22]
	goto $label$13 
	
.LABEL $label$72
	$6 = [23]
	goto $label$13 
	
.LABEL $label$71
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$27 }
	$6 = [24]
	goto $label$13 
	
.LABEL $label$70
	$0 = *($10 + [32])
	if ( ($0 == 0) ){ goto $label$26 }
	$6 = [25]
	goto $label$13 
	
.LABEL $label$69
	$11 = ($10 + [36])
	$3 = *($11)
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$24 }
	$6 = [26]
	goto $label$13 
	
.LABEL $label$68
	$5 = ($3 + [-64])
	if ( ((*(($3 + [-48])) & [1]) == 0) ){ goto $label$23 }
	$6 = [27]
	goto $label$13 
	
.LABEL $label$67
	CALL $9(*(($3 + [-40])))
	$6 = [28]
	goto $label$13 
	
.LABEL $label$66
	$3 = $5
	if ( ((int_32)$0 != (int_32)$5) ){ goto $label$25 }
	$6 = [29]
	goto $label$13 
	
.LABEL $label$65
	$3 = *(($10 + [32]))
	goto $label$22 
	
.LABEL $label$64
	$3 = $0
	$6 = [30]
	goto $label$13 
	
.LABEL $label$63
	*($11) = $0
	CALL $9($3)
	$6 = [31]
	goto $label$13 
	
.LABEL $label$62
	CALL $9($10)
	$6 = [32]
	goto $label$13 
	
.LABEL $label$61
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$28 }
	$6 = [33]
	goto $label$13 
	
.LABEL $label$60
	$3 = *(($2 + [120]))
	goto $label$21 
	
.LABEL $label$59
	$3 = $8
	$6 = [34]
	goto $label$13 
	
.LABEL $label$58
	*($9) = $8
	CALL $9($3)
	$6 = [35]
	goto $label$13 
	
.LABEL $label$57
	$7 = *($2 + [168])
	if ( ($7 == 0) ){ goto $label$20 }
	$6 = [36]
	goto $label$13 
	
.LABEL $label$56
	$10 = ($2 + [172])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$19 }
	$6 = [37]
	goto $label$13 
	
.LABEL $label$55
	$6 = [38]
	goto $label$13 
	
.LABEL $label$54
	$5 = ($5 + [-24])
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	$6 = [39]
	goto $label$13 
	
.LABEL $label$53
	$0 = *($3 + [92])
	if ( ($0 == 0) ){ goto $label$16 }
	$6 = [40]
	goto $label$13 
	
.LABEL $label$52
	*(($3 + [96])) = $0
	CALL $9($0)
	$6 = [41]
	goto $label$13 
	
.LABEL $label$51
	$0 = *($3 + [80])
	if ( ($0 == 0) ){ goto $label$15 }
	$6 = [42]
	goto $label$13 
	
.LABEL $label$50
	*(($3 + [84])) = $0
	CALL $9($0)
	$6 = [43]
	goto $label$13 
	
.LABEL $label$49
	CALL $9($3)
	$6 = [44]
	goto $label$13 
	
.LABEL $label$48
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$18 }
	$6 = [45]
	goto $label$13 
	
.LABEL $label$47
	$3 = *(($2 + [168]))
	goto $label$14 
	
.LABEL $label$46
	$3 = $7
	$6 = [46]
	goto $label$13 
	
.LABEL $label$45
	*($10) = $7
	CALL $9($3)
	$6 = [47]
	goto $label$13 
	
.LABEL $label$44
	$global$0 = ($2 + [208])
	return 
	
.LABEL $label$43
	$6 = [1]
	goto $label$13 
	
.LABEL $label$42
	$6 = [0]
	goto $label$13 
	
.LABEL $label$41
	$6 = [0]
	goto $label$13 
	
.LABEL $label$40
	$6 = [12]
	goto $label$13 
	
.LABEL $label$39
	$6 = [52]
	goto $label$13 
	
.LABEL $label$38
	$6 = [7]
	goto $label$13 
	
.LABEL $label$37
	$6 = [9]
	goto $label$13 
	
.LABEL $label$36
	$6 = [11]
	goto $label$13 
	
.LABEL $label$35
	$6 = [20]
	goto $label$13 
	
.LABEL $label$34
	$6 = [51]
	goto $label$13 
	
.LABEL $label$33
	$6 = [15]
	goto $label$13 
	
.LABEL $label$32
	$6 = [17]
	goto $label$13 
	
.LABEL $label$31
	$6 = [19]
	goto $label$13 
	
.LABEL $label$30
	$6 = [35]
	goto $label$13 
	
.LABEL $label$29
	$6 = [50]
	goto $label$13 
	
.LABEL $label$28
	$6 = [23]
	goto $label$13 
	
.LABEL $label$27
	$6 = [32]
	goto $label$13 
	
.LABEL $label$26
	$6 = [31]
	goto $label$13 
	
.LABEL $label$25
	$6 = [26]
	goto $label$13 
	
.LABEL $label$24
	$6 = [49]
	goto $label$13 
	
.LABEL $label$23
	$6 = [28]
	goto $label$13 
	
.LABEL $label$22
	$6 = [30]
	goto $label$13 
	
.LABEL $label$21
	$6 = [34]
	goto $label$13 
	
.LABEL $label$20
	$6 = [47]
	goto $label$13 
	
.LABEL $label$19
	$6 = [48]
	goto $label$13 
	
.LABEL $label$18
	$6 = [38]
	goto $label$13 
	
.LABEL $label$17
	$6 = [44]
	goto $label$13 
	
.LABEL $label$16
	$6 = [41]
	goto $label$13 
	
.LABEL $label$15
	$6 = [43]
	goto $label$13 
	
.LABEL $label$14
	$6 = [46]
	goto $label$13 
	$6
}

void .FUNC $163 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($5 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$6 = ($4 + ((int_32)$7 * (int_32)[24]))
	$8 = ($1 + [24])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$1 = (($4 + $5) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$4 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$11 }
	$0 = ($3 + [36])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$7 = ($1 + [-64])
	if ( ((*(($1 + [-48])) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($1 + [-40])))
	
.LABEL $label$15
	$1 = $7
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$14 }
	$1 = *(($3 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $4
	
.LABEL $label$12
	*($0) = $4
	CALL $9($1)
	
.LABEL $label$11
	CALL $9($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $9($5)
	
.LABEL $label$16
	(unreachable)
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	*($1 + [8]) = *(*(*($0 + [4])))
	$4 = ($1 + [32])
	$6 = *($1 + [32])
	$5 = *(($1 + [36]))
	$7 = (CASTING uint_64)(uint_32 int_32(($5 - $6) >> [6]))
	$8 = *($0)
	$9 = [29]
	
.LOOP $label$1:
	$9 = ($9 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$3:
	$10 = *($6 + [16])
	$10 = ( *(($6 + [20])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$9 = (($10 + $9) + [48])
	$7 = (CASTING uint_64)(uint_32 $10)
	
.LOOP $label$4:
	$9 = ($9 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$4 }
	$6 = ($6 + [64])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ($9 <= [513]) ){ goto $label$6 }
	$6 = CALL $1($9)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($2 - (($9 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$5
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $9)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [20])
	*($3 + [40]) = ($1 + [24])
	*($3 + [44]) = $4
	CALL $334(($3 + [24]), ($3 + [16]))
	$7 = *($1 + [8])
	*($1 + [48]) = CALL db_store_i64(*($8 + [8]), (int_64)-3659882974603116544, *(*($0 + [8])), $7, $6, $9)
	if ( ((uint_32)$9 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$7 >= (uint_64)*($8 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($6)
	if ( (uint_64)($7 <= *($8 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

void .FUNC $161 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [160])
	$global$0 = $2
	*($2 + [112]) = $1
	*($2 + [96]) = [10825]
	*($2 + [100]) = CALL $15([10825])
	*($2) = *($2 + [96])
	CALL require_auth(*(CALL $60(($2 + [104]), $2)))
	$3 = [0]
	*((($2 + [56]) + [32])) = [0]
	*($2 + [72]) = (int_64)-1
	*($2 + [80]) = (int_64)0
	$4 = *($0)
	*($2 + [56]) = $4
	*($2 + [64]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = [1]
	if ( ((int_32)*(CALL $90(($2 + [56]), $6) + [104]) == (int_32)($2 + [56])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert($5, [11179])
	*((($2 + [16]) + [32])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$4 = *($0)
	*($2 + [16]) = $4
	*($2 + [24]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-3659882974603116544, *($2 + [112]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $157(($2 + [16]), $5)
	if ( ((int_32)*($3 + [44]) == (int_32)($2 + [16])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	CALL eosio_assert(($3 == 0), [11140])
	$4 = *($0)
	*($2 + [8]) = ($2 + [112])
	*($2 + [152]) = $4
	if ( ((int_64)*($2 + [16]) == (int_64)CALL current_receiver()) ){ goto $label$3 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$3
	*($2 + [132]) = ($2 + [8])
	*($2 + [128]) = ($2 + [16])
	*($2 + [136]) = ($2 + [152])
	*(($0 = CALL $7([56])) + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = [1]
	*($0 + [20]) = [0]
	*($0 + [24]) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*($0 + [40]) = [0]
	*($0 + [44]) = ($2 + [16])
	CALL $162(($2 + [128]), $0)
	*($2 + [144]) = $0
	$4 = *($0 + [8])
	*($2 + [128]) = $4
	$5 = *($0 + [48])
	*($2 + [124]) = $5
	$6 = ($2 + [44])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($2 + [48]))) ){ goto $label$6 }
	*($3 + [8]) = $4
	*($3 + [16]) = $5
	*($2 + [144]) = [0]
	*($3) = $0
	*($6) = ($3 + [24])
	$6 = *($2 + [144])
	*($2 + [144]) = [0]
	if ( ($6 == 0) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	CALL $163(($2 + [40]), ($2 + [144]), ($2 + [128]), ($2 + [124]))
	$6 = *($2 + [144])
	*($2 + [144]) = [0]
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$5 = *($6 + [32])
	if ( ($5 == 0) ){ goto $label$7 }
	$7 = ($6 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($0 + [-64])
	if ( ((*(($0 + [-48])) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($0 + [-40])))
	
.LABEL $label$11
	$0 = $3
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$10 }
	$0 = *(($6 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $5
	
.LABEL $label$8
	*($7) = $5
	CALL $9($0)
	
.LABEL $label$7
	CALL $9($6)
	
.LABEL $label$4
	$8 = *($2 + [40])
	if ( ($8 == 0) ){ goto $label$12 }
	$9 = ($2 + [44])
	$6 = *($9)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$16 }
	$5 = *($7 + [32])
	if ( ($5 == 0) ){ goto $label$17 }
	$10 = ($7 + [36])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = ($0 + [-64])
	if ( ((*(($0 + [-48])) & [1]) == 0) ){ goto $label$21 }
	CALL $9(*(($0 + [-40])))
	
.LABEL $label$21
	$0 = $3
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$20 }
	$0 = *(($7 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$0 = $5
	
.LABEL $label$18
	*($10) = $5
	CALL $9($0)
	
.LABEL $label$17
	CALL $9($7)
	
.LABEL $label$16
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$15 }
	$0 = *(($2 + [40]))
	goto $label$13 
	
.LABEL $label$14
	$0 = $8
	
.LABEL $label$13
	*($9) = $8
	CALL $9($0)
	
.LABEL $label$12
	$6 = *($2 + [80])
	if ( ($6 == 0) ){ goto $label$22 }
	$7 = ($2 + [84])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$24 }
	
.LOOP $label$25:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$26 }
	$5 = *($0 + [92])
	if ( ($5 == 0) ){ goto $label$27 }
	*(($0 + [96])) = $5
	CALL $9($5)
	
.LABEL $label$27
	$5 = *($0 + [80])
	if ( ($5 == 0) ){ goto $label$28 }
	*(($0 + [84])) = $5
	CALL $9($5)
	
.LABEL $label$28
	CALL $9($0)
	
.LABEL $label$26
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$25 }
	$0 = *(($2 + [80]))
	goto $label$23 
	
.LABEL $label$24
	$0 = $6
	
.LABEL $label$23
	*($7) = $6
	CALL $9($0)
	
.LABEL $label$22
	$global$0 = ($2 + [160])
}

void .FUNC $160 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$3 = *($3)
	*($1 + [32]) = *($3)
	*(($1 + [40])) = *(($3 + [8]))
	$6 = ($1 + [80])
	$7 = ($1 + [32])
	$9 = *($1 + [80])
	$8 = *(($1 + [84]))
	$10 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	$12 = *($1)
	$3 = [69]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$4 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$4
	$8 = ($1 + [92])
	$10 = *($1 + [92])
	$9 = *(($1 + [96]))
	$13 = ($9 - $10)
	$11 = (CASTING uint_64)(uint_32 int_32($13 >> [3]))
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$6 }
	$3 = (($13 & [-8]) + $3)
	
.LABEL $label$6
	if ( ($3 <= [513]) ){ goto $label$8 }
	$4 = CALL $1($3)
	goto $label$7 
	
.LABEL $label$8
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$7
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [36]) = $7
	*($5 + [56]) = $6
	*($5 + [60]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [24])
	*($5 + [40]) = ($1 + [48])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [72])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$12 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($4)
	if ( (uint_64)($12 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

void .FUNC $289 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $187($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	CALL $219(*($1), ($4 + [32]))
	$3 = ($4 + [44])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$0 = ($4 + [48])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$4 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $4, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $244 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [12344])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $94($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $169 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$6 = CALL current_time()
	*($1 + [16]) = [1]
	*($1 + [20]) = ((uint_64)$6 / (uint_64)(int_64)1000000)
	if ( ((int_64)$5 == (int_64)*($1 + [8])) ){ goto $label$3 }
	CALL eosio_assert([0], [12234])
	
.LABEL $label$3
	$7 = ($1 + [16])
	$8 = ($1 + [20])
	$9 = ($1 + [32])
	$11 = *($1 + [32])
	$10 = *(($1 + [36]))
	$6 = (CASTING uint_64)(uint_32 int_32(($10 - $11) >> [6]))
	$12 = [29]
	
.LOOP $label$4:
	$12 = ($12 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$5 }
	
.LOOP $label$6:
	$13 = *($11 + [16])
	$13 = ( *(($11 + [20])) ? uint_32($13 >> [1]) : ($13 & [1]) )
	$12 = (($13 + $12) + [48])
	$6 = (CASTING uint_64)(uint_32 $13)
	
.LOOP $label$7:
	$12 = ($12 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$7 }
	$11 = ($11 + [64])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ($12 <= [513]) ){ goto $label$9 }
	$11 = CALL $1($12)
	goto $label$8 
	
.LABEL $label$9
	$11 = ($3 - (($12 + [15]) & [-16]))
	$global$0 = $11
	
.LABEL $label$8
	*($4 + [4]) = $11
	*($4) = $11
	*($4 + [8]) = ($11 + $12)
	*($4 + [16]) = $4
	*($4 + [32]) = $7
	*($4 + [36]) = $8
	*($4 + [44]) = $9
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [40]) = ($1 + [24])
	CALL $334(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [48]), $2, $11, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $2($11)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$10
	$global$0 = ($4 + [48])
}

void .FUNC $168 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [112])
	$global$0 = $2
	*($2 + [96]) = [10825]
	*($2 + [100]) = CALL $15([10825])
	*($2 + [8]) = *($2 + [96])
	CALL require_auth(*(CALL $60(($2 + [104]), ($2 + [8]))))
	$3 = [0]
	*((($2 + [56]) + [32])) = [0]
	*($2 + [72]) = (int_64)-1
	*($2 + [80]) = (int_64)0
	$4 = *($0)
	*($2 + [56]) = $4
	*($2 + [64]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = [1]
	if ( ((int_32)*(CALL $90(($2 + [56]), $6) + [104]) == (int_32)($2 + [56])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert($5, [11179])
	*((($2 + [16]) + [32])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$4 = *($0)
	*($2 + [16]) = $4
	*($2 + [24]) = $4
	$5 = CALL db_find_i64($4, $4, (int_64)-3659882974603116544, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $157(($2 + [16]), $5)
	if ( ((int_32)*($3 + [44]) == (int_32)($2 + [16])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [11273])
	CALL eosio_assert((*($3 + [16]) == 0), [11294])
	$4 = *($0)
	if ( $3 ){ goto $label$3 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$3
	CALL $169(($2 + [16]), $3, $4)
	$7 = *($2 + [40])
	if ( ($7 == 0) ){ goto $label$4 }
	$8 = ($2 + [44])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$8 }
	$5 = *($9 + [32])
	if ( ($5 == 0) ){ goto $label$9 }
	$10 = ($9 + [36])
	$3 = *($10)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($3 + [-64])
	if ( ((*(($3 + [-48])) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($3 + [-40])))
	
.LABEL $label$13
	$3 = $0
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$3 = *(($9 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$3 = $5
	
.LABEL $label$10
	*($10) = $5
	CALL $9($3)
	
.LABEL $label$9
	CALL $9($9)
	
.LABEL $label$8
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$7 }
	$3 = *(($2 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$3 = $7
	
.LABEL $label$5
	*($8) = $7
	CALL $9($3)
	
.LABEL $label$4
	$6 = *($2 + [80])
	if ( ($6 == 0) ){ goto $label$14 }
	$9 = ($2 + [84])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	$5 = *($3 + [92])
	if ( ($5 == 0) ){ goto $label$19 }
	*(($3 + [96])) = $5
	CALL $9($5)
	
.LABEL $label$19
	$5 = *($3 + [80])
	if ( ($5 == 0) ){ goto $label$20 }
	*(($3 + [84])) = $5
	CALL $9($5)
	
.LABEL $label$20
	CALL $9($3)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$17 }
	$3 = *(($2 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$3 = $6
	
.LABEL $label$15
	*($9) = $6
	CALL $9($3)
	
.LABEL $label$14
	$global$0 = ($2 + [112])
}

void .FUNC $245 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $97($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $279 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [228]) = $2
	*($3 + [224]) = $2
	$5 = ($2 + $4)
	*($3 + [232]) = $5
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [232]))
	$2 = *($3 + [228])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [228]) = $2
	*($3 + [208]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [228])
	
.LABEL $label$6
	CALL memcpy(($3 + [208]), $2, [8])
	*($3 + [228]) = ($2 + [8])
	*($3 + [200]) = [0]
	*($3 + [192]) = (int_64)0
	CALL $219(($3 + [224]), ($3 + [192]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [224]) + [8]))
	*($3 + [24]) = *($3 + [224])
	$2 = *($2)
	*((($3 + [240]) + [8])) = $2
	*(($4 = (($3 + [256]) + [8]))) = $2
	$6 = *($3 + [24])
	*($3 + [256]) = $6
	*($3 + [240]) = $6
	$2 = *($4)
	*((($3 + [272]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [256])
	*($3 + [56]) = $1
	*($3 + [272]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($4 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($5 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($7 = ($3 + [176]))) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	$2 = CALL $25(($3 + [8]), ($3 + [192]))
	CALL $170(($3 + [40]), *($3 + [216]), *($3 + [208]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$7
	CALL $217($7)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$8 }
	$7 = ($3 + [100])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $9($4)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [96]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $5
	
.LABEL $label$9
	*($7) = $5
	CALL $9($2)
	
.LABEL $label$8
	if ( ((*($3 + [192]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($3 + [200])))
	
.LABEL $label$13
	$global$0 = ($3 + [288])
}

void .FUNC $175 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [128])
	$global$0 = $3
	*($3 + [120]) = $2
	*($3 + [104]) = [10825]
	*($3 + [108]) = CALL $15([10825])
	*($3) = *($3 + [104])
	CALL require_auth(*(CALL $60(($3 + [112]), $3)))
	$4 = [0]
	*(($3 + [96])) = [0]
	*($3 + [80]) = (int_64)-1
	*($3 + [88]) = (int_64)0
	$5 = *($0)
	*($3 + [64]) = $5
	*($3 + [72]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$2 }
	$4 = CALL $90(($3 + [64]), $6)
	if ( ((int_32)*($4 + [104]) == (int_32)($3 + [64])) ){ goto $label$3 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$3
	*($3 + [60]) = $4
	*($3 + [56]) = ($3 + [64])
	$7 = (($3 + [56]) | [4])
	$6 = [1]
	$2 = *($3 + [120])
	goto $label$1 
	
.LABEL $label$2
	*($3 + [60]) = [0]
	*($3 + [56]) = ($3 + [64])
	$7 = (($3 + [56]) | [4])
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [11179])
	*(($3 + [48])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$5 = *($0)
	*($3 + [16]) = $5
	*($3 + [24]) = $5
	$6 = [0]
	$8 = CALL db_find_i64($5, $5, (int_64)-3659884136206307328, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $148(($3 + [16]), $8)
	if ( ((int_32)*($6 + [36]) == (int_32)($3 + [16])) ){ goto $label$5 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$5
	$4 = *($7)
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [11425])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)$1), [11444])
	CALL eosio_assert((uint_64)(*($6 + [24]) <= ((int_64)*($4 + [56]) + (int_64)*($4 + [48]))), [11473])
	$5 = *($0)
	*($3 + [8]) = ($3 + [120])
	if ( $4 ){ goto $label$6 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$6
	CALL $176(($3 + [64]), $4, $5, ($3 + [8]))
	$5 = *($0)
	*($3 + [8]) = ($3 + [56])
	if ( $6 ){ goto $label$7 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$7
	CALL $177(($3 + [16]), $6, $5, ($3 + [8]))
	$0 = *($3 + [40])
	if ( ($0 == 0) ){ goto $label$8 }
	$8 = ($3 + [44])
	$4 = *($8)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$10 }
	
.LOOP $label$11:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$11 }
	$4 = *(($3 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $0
	
.LABEL $label$9
	*($8) = $0
	CALL $9($4)
	
.LABEL $label$8
	$8 = *($3 + [88])
	if ( ($8 == 0) ){ goto $label$13 }
	$7 = ($3 + [92])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = ($6 + [-24])
	$4 = *($6)
	*($6) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	$0 = *($4 + [92])
	if ( ($0 == 0) ){ goto $label$18 }
	*(($4 + [96])) = $0
	CALL $9($0)
	
.LABEL $label$18
	$0 = *($4 + [80])
	if ( ($0 == 0) ){ goto $label$19 }
	*(($4 + [84])) = $0
	CALL $9($0)
	
.LABEL $label$19
	CALL $9($4)
	
.LABEL $label$17
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$16 }
	$4 = *(($3 + [88]))
	goto $label$14 
	
.LABEL $label$15
	$4 = $8
	
.LABEL $label$14
	*($7) = $8
	CALL $9($4)
	
.LABEL $label$13
	$global$0 = ($3 + [128])
}

void .FUNC $242 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $25(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $25(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $288 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [276]) = $2
	*($3 + [272]) = $2
	*($3 + [280]) = ($2 + $4)
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$5
	CALL memcpy(($3 + [264]), $2, [8])
	$2 = (*($3 + [276]) + [8])
	*($3 + [276]) = $2
	*($3 + [256]) = (int_64)0
	$4 = (($3 + [272]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$6
	CALL memcpy(($3 + [256]), $2, [8])
	$2 = (*($3 + [276]) + [8])
	*($3 + [276]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$7
	CALL memcpy(($3 + [248]), $2, [8])
	$2 = (*($3 + [276]) + [8])
	*($3 + [276]) = $2
	$4 = (($3 + [272]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$8
	CALL memcpy(($3 + [244]), $2, [4])
	$2 = (*($3 + [276]) + [4])
	*($3 + [276]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$9
	CALL memcpy(($3 + [232]), $2, [8])
	*($3 + [276]) = (*($3 + [276]) + [8])
	*($3 + [224]) = [0]
	*($3 + [216]) = (int_64)0
	CALL $219(($3 + [272]), ($3 + [216]))
	$2 = *($3 + [276])
	$4 = (($3 + [272]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$10
	CALL memcpy(($3 + [208]), $2, [8])
	$2 = (*($3 + [276]) + [8])
	*($3 + [276]) = $2
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$11 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$11
	CALL memcpy(($3 + [207]), $2, [1])
	$2 = (*($3 + [276]) + [1])
	*($3 + [276]) = $2
	$4 = (($3 + [272]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$12
	CALL memcpy(($3 + [192]), $2, [8])
	*($3 + [276]) = (*($3 + [276]) + [8])
	*(($2 = (($3 + [24]) + [8]))) = *($4)
	*($3 + [24]) = *($3 + [272])
	$2 = *($2)
	*((($3 + [288]) + [8])) = $2
	*(($4 = (($3 + [304]) + [8]))) = $2
	$5 = *($3 + [24])
	*($3 + [304]) = $5
	*($3 + [288]) = $5
	$2 = *($4)
	*((($3 + [320]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [304])
	*($3 + [56]) = $1
	*($3 + [320]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($4 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($6 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($7 = ($3 + [176]))) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	$0 = *($3 + [256])
	$2 = CALL $25(($3 + [8]), ($3 + [216]))
	CALL $191(($3 + [40]), $0, $0, $0, $3, $0, $3, $0, [0], $0)
	if ( ((*($2) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$13
	CALL $217($7)
	CALL $218($6)
	$6 = *($4)
	if ( ($6 == 0) ){ goto $label$14 }
	$7 = ($3 + [100])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$18 }
	CALL $9($4)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($3 + [96]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $6
	
.LABEL $label$15
	*($7) = $6
	CALL $9($2)
	
.LABEL $label$14
	if ( ((*($3 + [216]) & [1]) == 0) ){ goto $label$19 }
	CALL $9(*(($3 + [224])))
	
.LABEL $label$19
	$global$0 = ($3 + [336])
}

void .FUNC $243 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [276]) = $2
	*($3 + [272]) = $2
	$5 = ($2 + $4)
	*($3 + [280]) = $5
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [280]))
	$2 = *($3 + [276])
	
.LABEL $label$5
	CALL memcpy(($3 + [264]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [276]) = $2
	*($3 + [256]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$5 = *((($3 + [272]) + [8]))
	$2 = *($3 + [276])
	
.LABEL $label$6
	CALL memcpy(($3 + [256]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [276]) = $2
	*($3 + [248]) = (int_64)0
	*($3 + [240]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [280]))
	$2 = *($3 + [276])
	
.LABEL $label$7
	CALL memcpy(($3 + [240]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [276]) = $2
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [276])
	
.LABEL $label$8
	CALL memcpy(($3 + [72]), $2, [8])
	*(($5 = (($3 + [240]) + [8]))) = *($3 + [72])
	*($3 + [276]) = ($2 + [8])
	*($3 + [232]) = [0]
	*($3 + [224]) = (int_64)0
	CALL $219(($3 + [272]), ($3 + [224]))
	*(($2 = (($3 + [56]) + [8]))) = *((($3 + [272]) + [8]))
	*($3 + [56]) = *($3 + [272])
	$2 = *($2)
	*((($3 + [288]) + [8])) = $2
	*(($4 = (($3 + [304]) + [8]))) = $2
	$6 = *($3 + [56])
	*($3 + [304]) = $6
	*($3 + [288]) = $6
	$2 = *($4)
	*((($3 + [320]) + [8])) = $2
	*(($3 + [96])) = $2
	*($3 + [72]) = $0
	*($3 + [80]) = $1
	$1 = *($3 + [304])
	*($3 + [88]) = $1
	*($3 + [320]) = $1
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($4 = ($3 + [128]))) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($7 = ($3 + [168]))) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($8 = ($3 + [208]))) = (int_64)0
	*(($3 + [216])) = [0]
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	*($3 + [184]) = $0
	*(($9 = (($3 + [40]) + [8]))) = *($5)
	*($3 + [40]) = *($3 + [240])
	$0 = *($3 + [256])
	$1 = *($3 + [264])
	$2 = CALL $25(($3 + [24]), ($3 + [224]))
	*((($3 + [8]) + [8])) = *($9)
	*($3 + [8]) = *($3 + [40])
	CALL $72(($3 + [72]), $1, $0, ($3 + [8]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$9
	CALL $217($8)
	CALL $218($7)
	$4 = *($4)
	if ( ($4 == 0) ){ goto $label$10 }
	$7 = ($3 + [132])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	CALL $9($5)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$13 }
	$2 = *(($3 + [128]))
	goto $label$11 
	
.LABEL $label$12
	$2 = $4
	
.LABEL $label$11
	*($7) = $4
	CALL $9($2)
	
.LABEL $label$10
	if ( ((*($3 + [224]) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($3 + [232])))
	
.LABEL $label$15
	$global$0 = ($3 + [336])
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$5 = *($1)
	$8 = *($1 + [16])
	$6 = ($1 + [20])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$5:
	if ( ((*(($7 + [-28])) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($7 + [-20])))
	
.LABEL $label$6
	$6 = ($7 + [-64])
	if ( ((*(($7 + [-40])) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($7 + [-32])))
	
.LABEL $label$7
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$5 }
	*(($7 = ($1 + [20]))) = $8
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [12234])
	$8 = *($7)
	goto $label$3 
	
.LABEL $label$4
	*($6) = $8
	
.LABEL $label$3
	$7 = [16]
	$9 = ($1 + [16])
	$10 = *($1 + [16])
	$11 = (CASTING uint_64)(uint_32 int_32(($8 - $10) >> [6]))
	
.LOOP $label$8:
	$7 = ($7 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = *($10 + [24])
	$12 = ( *(($10 + [28])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($12 + $7)
	$7 = ($6 + [41])
	$6 = ($6 + [24])
	$11 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$11:
	$12 = $7
	$7 = ($12 + [1])
	$6 = ($6 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$11 }
	$7 = *($10 + [36])
	$6 = ( *(($10 + [40])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($6 + $12)
	$11 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$12:
	$7 = ($7 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$12 }
	$10 = ($10 + [64])
	if ( ((int_32)$10 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ($7 <= [513]) ){ goto $label$14 }
	$6 = CALL $1($7)
	goto $label$13 
	
.LABEL $label$14
	$6 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$13
	*($4 + [12]) = $6
	*($4 + [8]) = $6
	*($4 + [16]) = ($6 + $7)
	*($4 + [24]) = ($4 + [8])
	*($4 + [40]) = $9
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [8])
	CALL $304(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [32]), $2, $6, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$17 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $2($6)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$15 }
	
.LABEL $label$16
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$15
	$global$0 = ($4 + [48])
}

void .FUNC $59 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$5 = ($global$0 - [80])
	$global$0 = $5
	*($5 + [72]) = $1
	$6 = *($3)
	if ( ($6 & [1]) ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	$7 = ($3 + [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($3 + [4])
	$7 = *($3 + [8])
	
.LABEL $label$1
	$8 = [0]
	$9 = CALL $15([8716])
	if ( ($9 == 0) ){ goto $label$3 }
	$10 = ($7 + $6)
	if ( ((int_32)$6 < (int_32)$9) ){ goto $label$5 }
	$8 = $7
	
.LOOP $label$6:
	$6 = (($6 - $9) + [1])
	if ( ($6 == 0) ){ goto $label$5 }
	$6 = CALL $16($8, [58], $6)
	if ( ($6 == 0) ){ goto $label$5 }
	if ( (CALL $17($6, [8716], $9) == 0) ){ goto $label$4 }
	$8 = ($6 + [1])
	$6 = ($10 - $8)
	if ( ((int_32)$6 >= (int_32)$9) ){ goto $label$6 }
	
.LABEL $label$5
	$6 = $10
	
.LABEL $label$4
	$8 = ( [-1] ? ($6 - $7) : ((int_32)$6 == (int_32)$10) )
	
.LABEL $label$3
	$11 = CALL $26(($5 + [56]), $3, [0], $8, $3)
	$6 = *($5 + [56])
	$9 = CALL $15([8718])
	if ( ((int_32)$9 != (int_32)( *($11 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$9 }
	if ( (CALL $35($11, [0], [-1], [8718], $9) == 0) ){ goto $label$8 }
	$1 = *($5 + [72])
	
.LABEL $label$9
	CALL require_auth($1)
	goto $label$7 
	
.LABEL $label$8
	*($5 + [40]) = [8723]
	*($5 + [44]) = CALL $15([8723])
	*($5) = *($5 + [40])
	CALL require_auth(*(CALL $60(($5 + [48]), $5)))
	
.LABEL $label$7
	$9 = ($0 + [32])
	$6 = [0]
	$8 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)-4161326055690338304, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$6 = CALL $47($9, $8)
	
.LABEL $label$10
	*($5 + [36]) = $6
	*($5 + [32]) = $9
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [8254])
	CALL eosio_assert((*($6 + [8]) == 0), [8550])
	$1 = *($0)
	*($5 + [8]) = $2
	if ( $6 ){ goto $label$11 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$11
	CALL $61($9, $6, $1, ($5 + [8]))
	$12 = ($0 + [112])
	$1 = *($0)
	$9 = *(($0 + [140]))
	$8 = *(($0 + [136]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$13 }
	
.LOOP $label$15:
	$6 = ($9 + [-24])
	$10 = *($6)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$14 }
	$9 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$13 }
	if ( ((int_32)*($10 + [52]) == (int_32)$12) ){ goto $label$12 }
	CALL eosio_assert([0], [12293])
	goto $label$12 
	
.LABEL $label$13
	$10 = [0]
	$6 = CALL db_find_i64(*($12), *(($0 + [120])), (int_64)5037744192915243008, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	$10 = CALL $49($12, $6)
	if ( ((int_32)*($10 + [52]) == (int_32)$12) ){ goto $label$12 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$12
	$6 = [0]
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [8735])
	CALL eosio_assert((*($10 + [24]) == 0), [8754])
	CALL eosio_assert(((uint_64)((int_64)*($10 + [16]) + (int_64)*($10 + [8])) >= (uint_64)((int_64)((uint_64)CALL eosio_assert7() / (uint_64)(int_64)1000000) & (int_64)4294967295)), [8774])
	$7 = ($10 + [44])
	CALL eosio_assert((int_32((*($7) - *($10 + [40])) >> [6]) <= [15]), [8810])
	$9 = *($10 + [40])
	if ( ((int_32)*($7) == (int_32)$9) ){ goto $label$16 }
	$13 = ($10 + [40])
	$8 = [0]
	
.LOOP $label$17:
	CALL eosio_assert(((int_64)*(($9 + $6)) != (int_64)*($5 + [72])), [8842])
	$6 = ($6 + [64])
	$9 = *($13)
	$8 = ($8 + [1])
	if ( ($8 <= int_32((*($7) - $9) >> [6])) ){ goto $label$17 }
	
.LABEL $label$16
	$1 = *($0)
	*($5 + [12]) = $2
	*($5 + [16]) = $3
	*($5 + [20]) = $4
	*($5 + [8]) = ($5 + [72])
	*($5 + [24]) = ($5 + [32])
	if ( $10 ){ goto $label$18 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$18
	CALL $62($12, $10, $1, ($5 + [8]))
	if ( ((*($5 + [56]) & [1]) == 0) ){ goto $label$19 }
	CALL $9(*($11 + [8]))
	
.LABEL $label$19
	$global$0 = ($5 + [80])
}

void .FUNC $271 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $143($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $270 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [288])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [280]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [280]), $2, [8])
	*($3 + [272]) = (int_64)0
	*($3 + [264]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [264]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $5, [8])
	*((($3 + [264]) + [8])) = *($3 + [64])
	*($3 + [256]) = (int_64)0
	*($3 + [248]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$8
	CALL memcpy(($3 + [248]), $5, [8])
	*($3 + [64]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$9
	CALL memcpy(($3 + [64]), $5, [8])
	*((($3 + [248]) + [8])) = *($3 + [64])
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$10
	CALL memcpy(($3 + [240]), $5, [8])
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$11
	CALL memcpy(($3 + [232]), $5, [8])
	$6 = ($2 + [56])
	if ( ((int_32)($4 & [-4]) != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$12
	$5 = ($2 + $4)
	CALL memcpy(($3 + [228]), $6, [4])
	$6 = ($2 + [60])
	if ( ((uint_32)($4 + [-60]) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$13
	CALL memcpy(($3 + [216]), $6, [8])
	*(($3 + [88])) = $5
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($4 = ($3 + [120]))) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($6 = ($3 + [160]))) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*($3 + [80]) = $2
	*(($3 + [84])) = ($2 + [68])
	*($3 + [72]) = $1
	*($3 + [64]) = $0
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	*(($3 + [192])) = (int_64)-1
	*(($2 = ($3 + [200]))) = (int_64)0
	*(($3 + [208])) = [0]
	$0 = *((($3 + [264]) + [8]))
	*((($3 + [48]) + [8])) = $0
	*(($5 = (($3 + [32]) + [8]))) = *((($3 + [248]) + [8]))
	*((($3 + [16]) + [8])) = $0
	$0 = *($3 + [264])
	*($3 + [48]) = $0
	*($3 + [32]) = *($3 + [248])
	*($3 + [16]) = $0
	$0 = *($3 + [280])
	$1 = *($3 + [240])
	$7 = *($3 + [232])
	$8 = *($3 + [228])
	$9 = *($3 + [216])
	*(($3 + [8])) = *($5)
	*($3) = *($3 + [32])
	CALL $139(($3 + [64]), $0, ($3 + [16]), $3, $1, $7, $8, $9)
	CALL $217($2)
	CALL $218($6)
	$6 = *($4)
	if ( ($6 == 0) ){ goto $label$14 }
	$5 = ($3 + [124])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$18 }
	CALL $9($4)
	
.LABEL $label$18
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($3 + [120]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $6
	
.LABEL $label$15
	*($5) = $6
	CALL $9($2)
	
.LABEL $label$14
	$global$0 = ($3 + [288])
}

void .FUNC $277 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($4 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($5 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($2 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $154(($3 + [8]), *($3 + [168]), *($3 + [160]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($3 + [68])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($3 + [64]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($3 + [176])
}

void .FUNC $240 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [32])
	$4 = *($1 + [24])
	$5 = *($1 + [16])
	$6 = *($1 + [8])
	$7 = *($1)
	$8 = CALL $25($2, ($1 + [40]))
	$9 = *($1 + [72])
	$10 = *($1 + [64])
	$11 = *($1 + [56])
	$1 = *($0 + [4])
	$12 = *($1 + [4])
	$0 = (*($0) + int_32($12 >> [1]))
	$1 = *($1)
	if ( (($12 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$12 = CALL $25(($2 + [16]), $8)
	CALL void $0((int_32 $7), (int_64 $6), (int_64 $5), (int_64 $4), (int_32 $3), (int_64 $12), (int_32 $11), (int_64 ($10 & [255])), (int_32 $9), (int_64 $1))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($8) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($12 + [8]))
	if ( ((*($8) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($8 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $275 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $164($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $274 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $161($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	*($1 + [8]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($1 + [24]) = [0]
	*($1 + [16]) = *(*($4 + [4]))
	*($1 + [32]) = *(*(*($4 + [8]) + [4]) + [24])
	$6 = ($1 + [40])
	$7 = ($1 + [32])
	$8 = ($1 + [24])
	$9 = ($1 + [16])
	$10 = ($1 + [8])
	$12 = *($1 + [40])
	$11 = *(($1 + [44]))
	$13 = (CASTING uint_64)(uint_32 int_32(($11 - $12) >> [6]))
	$4 = [33]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$2 }
	
.LOOP $label$3:
	$14 = *($12 + [24])
	$15 = ( *(($12 + [28])) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$14 = ($15 + $4)
	$4 = ($14 + [41])
	$14 = ($14 + [24])
	$13 = (CASTING uint_64)(uint_32 $15)
	
.LOOP $label$4:
	$15 = $4
	$4 = ($15 + [1])
	$14 = ($14 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$4 }
	$4 = *($12 + [36])
	$14 = ( *(($12 + [40])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($14 + $15)
	$13 = (CASTING uint_64)(uint_32 $14)
	
.LOOP $label$5:
	$4 = ($4 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$5 }
	$12 = ($12 + [64])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ($4 <= [513]) ){ goto $label$7 }
	$14 = CALL $1($4)
	goto $label$6 
	
.LABEL $label$7
	$14 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $14
	
.LABEL $label$6
	*($3 + [4]) = $14
	*($3) = $14
	*($3 + [8]) = ($14 + $4)
	*($3 + [16]) = $3
	*($3 + [28]) = $10
	*($3 + [24]) = $1
	*($3 + [32]) = $9
	*($3 + [36]) = $8
	*($3 + [40]) = $7
	*($3 + [44]) = $6
	CALL $298(($3 + [24]), ($3 + [16]))
	$13 = *($1)
	*($1 + [56]) = CALL db_store_i64(*($5 + [8]), (int_64)5037744192915243008, *(*($0 + [8])), $13, $14, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$13 >= (uint_64)*($5 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($14)
	if ( (uint_64)($13 <= *($5 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [48])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $297(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $52 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [16]) = $1
	CALL require_auth(*($0))
	$3 = ($0 + [72])
	$4 = CALL db_lowerbound_i64(*($0 + [72]), *(($0 + [80])), (int_64)4229443000054317056, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	CALL $53($3, $4)
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$1
	$1 = *($0)
	*($2 + [8]) = ($2 + [16])
	*($2 + [56]) = $1
	if ( ((int_64)*($3) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$2
	*($2 + [32]) = $3
	*($2 + [36]) = ($2 + [8])
	*($2 + [40]) = ($2 + [56])
	*(($4 = CALL $7([40])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16 align=4]) = (int_64)0
	*($4 + [24]) = [0]
	*($4 + [28]) = $3
	CALL $54(($2 + [32]), $4)
	*($2 + [48]) = $4
	$1 = *($4)
	*($2 + [32]) = $1
	$5 = *($4 + [32])
	*($2 + [28]) = $5
	$6 = ($0 + [100])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [104]))) ){ goto $label$5 }
	*($3 + [8]) = $1
	*($3 + [16]) = $5
	*($2 + [48]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	$5 = *($2 + [48])
	*($2 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $55(($0 + [96]), ($2 + [48]), ($2 + [32]), ($2 + [28]))
	$5 = *($2 + [48])
	*($2 + [48]) = [0]
	if ( $5 ){ goto $label$3 }
	
.LABEL $label$4
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$3
	$3 = *($5 + [16])
	if ( ($3 == 0) ){ goto $label$6 }
	$6 = ($5 + [20])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( ((*(($0 + [-28])) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($0 + [-20])))
	
.LABEL $label$10
	$4 = ($0 + [-64])
	if ( ((*(($0 + [-40])) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($0 + [-32])))
	
.LABEL $label$11
	$0 = $4
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$9 }
	$0 = *(($5 + [16]))
	goto $label$7 
	
.LABEL $label$8
	$0 = $3
	
.LABEL $label$7
	*($6) = $3
	CALL $9($0)
	
.LABEL $label$6
	CALL $9($5)
	$global$0 = ($2 + [64])
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($5 + $4)
	*(($4 = CALL $7([40])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16 align=4]) = (int_64)0
	*($4 + [24]) = [0]
	*($4 + [28]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($4 + [8])
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + [16])
	CALL $302(($3 + [32]), ($3 + [24]))
	*($4 + [32]) = $1
	*($3 + [24]) = $4
	$7 = *($4)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $4
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $55(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$2 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$0 = *($2 + [16])
	if ( ($0 == 0) ){ goto $label$11 }
	$6 = ($2 + [20])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	if ( ((*(($5 + [-28])) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($5 + [-20])))
	
.LABEL $label$15
	$1 = ($5 + [-64])
	if ( ((*(($5 + [-40])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($5 + [-32])))
	
.LABEL $label$16
	$5 = $1
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$14 }
	$5 = *(($2 + [16]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $9($5)
	
.LABEL $label$11
	CALL $9($2)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $4
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	*($1) = (int_64)0
	*($1 + [8]) = *(*(*($0 + [4])))
	$4 = [16]
	$5 = ($1 + [16])
	$6 = ($1 + [8])
	$8 = *($1 + [16])
	$7 = *(($1 + [20]))
	$9 = (CASTING uint_64)(uint_32 int_32(($7 - $8) >> [6]))
	$10 = *($0)
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$3:
	$11 = *($8 + [24])
	$12 = ( *(($8 + [28])) ? uint_32($11 >> [1]) : ($11 & [1]) )
	$11 = ($12 + $4)
	$4 = ($11 + [41])
	$11 = ($11 + [24])
	$9 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$4:
	$12 = $4
	$4 = ($12 + [1])
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	$4 = *($8 + [36])
	$11 = ( *(($8 + [40])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($11 + $12)
	$9 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$5:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [64])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ($4 <= [513]) ){ goto $label$7 }
	$11 = CALL $1($4)
	goto $label$6 
	
.LABEL $label$7
	$11 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $11
	
.LABEL $label$6
	*($3 + [12]) = $11
	*($3 + [8]) = $11
	*($3 + [16]) = ($11 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	*($3 + [40]) = $5
	CALL $304(($3 + [32]), ($3 + [24]))
	$9 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($10 + [8]), (int_64)4229443000054317056, *(*($0 + [8])), $9, $11, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$9 >= (uint_64)*($10 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($11)
	if ( (uint_64)($9 <= *($10 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($10 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$8
	$global$0 = ($3 + [48])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $303(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $56 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [32]), *(($0 + [40])), (int_64)-4161326055690338304, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $47(($0 + [32]), $3)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [8254])
	CALL eosio_assert((*($2 + [8]) == 0), [8550])
	$4 = ($0 + [72])
	$3 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($3 + [-24])
	$6 = *($2)
	if ( (int_64)(*($6) == 0) ){ goto $label$4 }
	$3 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$3 }
	if ( ((int_32)*($6 + [28]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($4), *(($0 + [80])), (int_64)4229443000054317056, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$6 }
	$6 = CALL $53($4, $2)
	if ( ((int_32)*($6 + [28]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	goto $label$2 
	
.LABEL $label$6
	$6 = [0]
	
.LABEL $label$2
	*($1 + [12]) = $6
	*($1 + [8]) = $4
	$7 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [8692])
	$8 = ($0 + [112])
	$9 = *($0)
	$3 = *(($0 + [140]))
	$6 = *(($0 + [136]))
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$10:
	$2 = ($3 + [-24])
	$5 = *($2)
	if ( ((int_64)*($5) == (int_64)$9) ){ goto $label$9 }
	$3 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$8 }
	if ( ((int_32)*($5 + [52]) == (int_32)$8) ){ goto $label$11 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$11
	$7 = $5
	goto $label$7 
	
.LABEL $label$8
	$2 = CALL db_find_i64(*($8), *(($0 + [120])), (int_64)5037744192915243008, $9)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$7 }
	$7 = CALL $49($8, $2)
	if ( ((int_32)*($7 + [52]) == (int_32)$8) ){ goto $label$7 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [8663])
	$9 = *($0)
	*($1) = ($1 + [8])
	if ( ($7 == 0) ){ goto $label$14 }
	CALL $57($8, $7, $9, $1)
	$9 = *($0)
	$2 = *($1 + [12])
	if ( ($2 == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL eosio_assert([0], [12102])
	CALL $57($8, $7, $9, $1)
	$9 = *($0)
	$2 = *($1 + [12])
	if ( $2 ){ goto $label$12 }
	
.LABEL $label$13
	CALL eosio_assert([0], [12102])
	
.LABEL $label$12
	CALL $58($4, $2, $9)
	$global$0 = ($1 + [16])
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *(*($3) + [4])
	$8 = ($3 + [16])
	$7 = ($1 + [40])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	CALL $305($7, *($8), *(($3 + [20])))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [12234])
	
.LABEL $label$3
	$10 = *($1 + [40])
	$9 = *(($1 + [44]))
	$11 = (CASTING uint_64)(uint_32 int_32(($9 - $10) >> [6]))
	$3 = [33]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$5 }
	
.LOOP $label$6:
	$8 = *($10 + [24])
	$12 = ( *(($10 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($12 + $3)
	$3 = ($8 + [41])
	$8 = ($8 + [24])
	$11 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$7:
	$12 = $3
	$3 = ($12 + [1])
	$8 = ($8 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$7 }
	$3 = *($10 + [36])
	$8 = ( *(($10 + [40])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + $12)
	$11 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$8:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$8 }
	$10 = ($10 + [64])
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ($3 <= [513]) ){ goto $label$10 }
	$8 = CALL $1($3)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$9
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $3)
	*($5 + [16]) = $5
	*($5 + [44]) = $7
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [24])
	*($5 + [40]) = ($1 + [32])
	CALL $298(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [56]), $2, $8, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$13 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $2($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$11 }
	
.LABEL $label$12
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$11
	$global$0 = ($5 + [48])
}

void .FUNC $247 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [272])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*($3 + [212]) = $4
	*($3 + [208]) = $4
	*($3 + [216]) = ($4 + $5)
	*($3 + [200]) = [0]
	*($3 + [192]) = (int_64)0
	CALL $219(($3 + [208]), ($3 + [192]))
	*(($4 = (($3 + [24]) + [8]))) = *($3 + [216])
	*($3 + [24]) = *($3 + [208])
	$4 = *($4)
	*((($3 + [224]) + [8])) = $4
	*(($5 = (($3 + [240]) + [8]))) = $4
	$6 = *($3 + [24])
	*($3 + [240]) = $6
	*($3 + [224]) = $6
	$4 = *($5)
	*((($3 + [256]) + [8])) = $4
	*(($3 + [64])) = $4
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [240])
	*($3 + [56]) = $1
	*($3 + [256]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($7 = ($3 + [176]))) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	$4 = CALL $25(($3 + [8]), ($3 + [192]))
	CALL $63(($3 + [40]), $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	CALL $9(*($4 + [8]))
	
.LABEL $label$4
	CALL $217($7)
	CALL $218($2)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$5 }
	$7 = ($3 + [100])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$7 }
	
.LOOP $label$8:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$8 }
	$4 = *(($3 + [96]))
	goto $label$6 
	
.LABEL $label$7
	$4 = $2
	
.LABEL $label$6
	*($7) = $2
	CALL $9($4)
	
.LABEL $label$5
	if ( ((*($3 + [192]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($3 + [200])))
	
.LABEL $label$10
	$global$0 = ($3 + [272])
}

void .FUNC $173 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [176])
	$global$0 = $4
	*($4 + [174]) = $3
	*($4 + [152]) = [10825]
	*($4 + [156]) = CALL $15([10825])
	*($4 + [8]) = *($4 + [152])
	CALL require_auth(*(CALL $60(($4 + [160]), ($4 + [8]))))
	$3 = [0]
	*((($4 + [112]) + [32])) = [0]
	*($4 + [128]) = (int_64)-1
	*($4 + [136]) = (int_64)0
	$5 = *($0)
	*($4 + [112]) = $5
	*($4 + [120]) = $5
	$6 = [0]
	$7 = CALL db_find_i64($5, $5, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = [1]
	if ( ((int_32)*(CALL $90(($4 + [112]), $7) + [104]) == (int_32)($4 + [112])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert($6, [11179])
	*((($4 + [72]) + [32])) = [0]
	*($4 + [88]) = (int_64)-1
	*($4 + [96]) = (int_64)0
	$5 = *($0)
	*($4 + [72]) = $5
	*($4 + [80]) = $5
	$7 = CALL db_find_i64($5, $5, (int_64)-3659882974603116544, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$6 = [1]
	$3 = CALL $157(($4 + [72]), $7)
	if ( ((int_32)*($3 + [44]) == (int_32)($4 + [72])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	goto $label$2 
	
.LABEL $label$3
	$6 = [0]
	
.LABEL $label$2
	*($4 + [68]) = $3
	*($4 + [64]) = ($4 + [72])
	CALL eosio_assert($6, [11273])
	*(($4 + [56])) = [0]
	*($4 + [40]) = (int_64)-1
	*($4 + [48]) = (int_64)0
	$5 = *($0)
	*($4 + [24]) = $5
	*($4 + [32]) = $5
	$3 = [0]
	$6 = CALL db_find_i64($5, $5, (int_64)-3659884136206307328, $2)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $148(($4 + [24]), $6)
	if ( ((int_32)*($3 + [36]) == (int_32)($4 + [24])) ){ goto $label$4 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$4
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [11425])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)$1), [11444])
	$1 = *($0)
	*($4 + [20]) = ($4 + [174])
	*($4 + [16]) = ($4 + [64])
	if ( $3 ){ goto $label$5 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$5
	CALL $174(($4 + [24]), $3, $1, ($4 + [16]))
	$6 = *($4 + [48])
	if ( ($6 == 0) ){ goto $label$6 }
	$7 = ($4 + [52])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$0 = *($3)
	*($3) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $9($0)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($4 + [48]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $6
	
.LABEL $label$7
	*($7) = $6
	CALL $9($3)
	
.LABEL $label$6
	$8 = *($4 + [96])
	if ( ($8 == 0) ){ goto $label$11 }
	$9 = ($4 + [100])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$14:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$15 }
	$6 = *($10 + [32])
	if ( ($6 == 0) ){ goto $label$16 }
	$11 = ($10 + [36])
	$3 = *($11)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($3 + [-64])
	if ( ((*(($3 + [-48])) & [1]) == 0) ){ goto $label$20 }
	CALL $9(*(($3 + [-40])))
	
.LABEL $label$20
	$3 = $0
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$19 }
	$3 = *(($10 + [32]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $6
	
.LABEL $label$17
	*($11) = $6
	CALL $9($3)
	
.LABEL $label$16
	CALL $9($10)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	$3 = *(($4 + [96]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $8
	
.LABEL $label$12
	*($9) = $8
	CALL $9($3)
	
.LABEL $label$11
	$7 = *($4 + [136])
	if ( ($7 == 0) ){ goto $label$21 }
	$10 = ($4 + [140])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$23 }
	
.LOOP $label$24:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$25 }
	$6 = *($3 + [92])
	if ( ($6 == 0) ){ goto $label$26 }
	*(($3 + [96])) = $6
	CALL $9($6)
	
.LABEL $label$26
	$6 = *($3 + [80])
	if ( ($6 == 0) ){ goto $label$27 }
	*(($3 + [84])) = $6
	CALL $9($6)
	
.LABEL $label$27
	CALL $9($3)
	
.LABEL $label$25
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$24 }
	$3 = *(($4 + [136]))
	goto $label$22 
	
.LABEL $label$23
	$3 = $7
	
.LABEL $label$22
	*($10) = $7
	CALL $9($3)
	
.LABEL $label$21
	$global$0 = ($4 + [176])
}

void .FUNC $152 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [48]) = [10825]
	*($2 + [52]) = CALL $15([10825])
	*($2) = *($2 + [48])
	CALL require_auth(*(CALL $60(($2 + [56]), $2)))
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	$3 = *($0)
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$4 = [0]
	$5 = CALL db_find_i64($3, $3, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $90(($2 + [8]), $5)
	if ( ((int_32)*($4 + [104]) == (int_32)($2 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [10866])
	CALL eosio_assert((*($4 + [24]) == 0), [10995])
	$3 = *($0)
	if ( $4 ){ goto $label$2 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$2
	CALL $153(($2 + [8]), $4, $3)
	$6 = *($2 + [32])
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ($2 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	$5 = *($4 + [92])
	if ( ($5 == 0) ){ goto $label$8 }
	*(($4 + [96])) = $5
	CALL $9($5)
	
.LABEL $label$8
	$5 = *($4 + [80])
	if ( ($5 == 0) ){ goto $label$9 }
	*(($4 + [84])) = $5
	CALL $9($5)
	
.LABEL $label$9
	CALL $9($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$6 }
	$4 = *(($2 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$4 = $6
	
.LABEL $label$4
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$3
	$global$0 = ($2 + [64])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [24]) = [1]
	$5 = ($1 + [80])
	$6 = ($1 + [24])
	$8 = *($1 + [80])
	$7 = *(($1 + [84]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	$11 = *($1)
	$12 = [69]
	
.LOOP $label$3:
	$12 = ($12 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$12 = (($9 & [-8]) + $12)
	
.LABEL $label$4
	$7 = ($1 + [92])
	$9 = *($1 + [92])
	$8 = *(($1 + [96]))
	$13 = ($8 - $9)
	$10 = (CASTING uint_64)(uint_32 int_32($13 >> [3]))
	
.LOOP $label$5:
	$12 = ($12 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$6 }
	$12 = (($13 & [-8]) + $12)
	
.LABEL $label$6
	if ( ($12 <= [513]) ){ goto $label$8 }
	$3 = CALL $1($12)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($3 - (($12 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $12)
	*($4 + [16]) = $4
	*($4 + [32]) = $6
	*($4 + [56]) = $5
	*($4 + [60]) = $7
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [36]) = ($1 + [32])
	*($4 + [40]) = ($1 + [48])
	*($4 + [44]) = ($1 + [56])
	*($4 + [48]) = ($1 + [64])
	*($4 + [52]) = ($1 + [72])
	CALL $324(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $3, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$11 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($3)
	if ( (uint_64)($11 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [64])
}

void .FUNC $150 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $151 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [24]) = [2]
	$5 = ($1 + [80])
	$6 = ($1 + [24])
	$8 = *($1 + [80])
	$7 = *(($1 + [84]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	$11 = *($1)
	$12 = [69]
	
.LOOP $label$3:
	$12 = ($12 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$12 = (($9 & [-8]) + $12)
	
.LABEL $label$4
	$7 = ($1 + [92])
	$9 = *($1 + [92])
	$8 = *(($1 + [96]))
	$13 = ($8 - $9)
	$10 = (CASTING uint_64)(uint_32 int_32($13 >> [3]))
	
.LOOP $label$5:
	$12 = ($12 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$6 }
	$12 = (($13 & [-8]) + $12)
	
.LABEL $label$6
	if ( ($12 <= [513]) ){ goto $label$8 }
	$3 = CALL $1($12)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($3 - (($12 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $12)
	*($4 + [16]) = $4
	*($4 + [32]) = $6
	*($4 + [56]) = $5
	*($4 + [60]) = $7
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [36]) = ($1 + [32])
	*($4 + [40]) = ($1 + [48])
	*($4 + [44]) = ($1 + [56])
	*($4 + [48]) = ($1 + [64])
	*($4 + [52]) = ($1 + [72])
	CALL $324(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $3, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$11 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($3)
	if ( (uint_64)($11 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [64])
}

void .FUNC $156 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [128])
	$global$0 = $4
	*($4 + [112]) = $3
	*($4 + [120]) = $2
	*($4 + [96]) = [10825]
	*($4 + [100]) = CALL $15([10825])
	*($4) = *($4 + [96])
	CALL require_auth(*(CALL $60(($4 + [104]), $4)))
	$5 = [0]
	*((($4 + [56]) + [32])) = [0]
	*($4 + [72]) = (int_64)-1
	*($4 + [80]) = (int_64)0
	$2 = *($0)
	*($4 + [56]) = $2
	*($4 + [64]) = $2
	$6 = [0]
	$7 = CALL db_find_i64($2, $2, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $90(($4 + [56]), $7)
	if ( ((int_32)*($6 + [104]) == (int_32)($4 + [56])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [10866])
	CALL eosio_assert(((int_32)*($6 + [24]) == (int_32)[2]), [11116])
	*((($4 + [16]) + [32])) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [40]) = (int_64)0
	$2 = *($0)
	*($4 + [16]) = $2
	*($4 + [24]) = $2
	$7 = CALL db_find_i64($2, $2, (int_64)-3659882974603116544, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $157(($4 + [16]), $7)
	if ( ((int_32)*($5 + [44]) == (int_32)($4 + [16])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [11140])
	CALL eosio_assert(((int_32)*($5 + [16]) != (int_32)[0]), [11158])
	$2 = *($0)
	*($4 + [12]) = ($4 + [112])
	*($4 + [8]) = ($4 + [120])
	if ( $6 ){ goto $label$3 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$3
	CALL $158(($4 + [56]), $6, $2, ($4 + [8]))
	$8 = *($4 + [40])
	if ( ($8 == 0) ){ goto $label$4 }
	$9 = ($4 + [44])
	$7 = *($9)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$10 = *($7)
	*($7) = [0]
	if ( ($10 == 0) ){ goto $label$8 }
	$5 = *($10 + [32])
	if ( ($5 == 0) ){ goto $label$9 }
	$11 = ($10 + [36])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($6 + [-64])
	if ( ((*(($6 + [-48])) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($6 + [-40])))
	
.LABEL $label$13
	$6 = $0
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$6 = *(($10 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$6 = $5
	
.LABEL $label$10
	*($11) = $5
	CALL $9($6)
	
.LABEL $label$9
	CALL $9($10)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$7 }
	$6 = *(($4 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$6 = $8
	
.LABEL $label$5
	*($9) = $8
	CALL $9($6)
	
.LABEL $label$4
	$7 = *($4 + [80])
	if ( ($7 == 0) ){ goto $label$14 }
	$10 = ($4 + [84])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$18 }
	$5 = *($6 + [92])
	if ( ($5 == 0) ){ goto $label$19 }
	*(($6 + [96])) = $5
	CALL $9($5)
	
.LABEL $label$19
	$5 = *($6 + [80])
	if ( ($5 == 0) ){ goto $label$20 }
	*(($6 + [84])) = $5
	CALL $9($5)
	
.LABEL $label$20
	CALL $9($6)
	
.LABEL $label$18
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$17 }
	$6 = *(($4 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$6 = $7
	
.LABEL $label$15
	*($10) = $7
	CALL $9($6)
	
.LABEL $label$14
	$global$0 = ($4 + [128])
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [20]) = $5
	*($3 + [16]) = $5
	*($3 + [24]) = ($5 + $4)
	*(($4 = CALL $7([56])) + [8]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [16]) = [1]
	*($4 + [20]) = [0]
	*($4 + [24]) = (int_64)0
	*($4 + [32 align=4]) = (int_64)0
	*($4 + [40]) = [0]
	*($4 + [44]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($4 + [8])
	*($3 + [40]) = $4
	*($3 + [48]) = ($4 + [16])
	*($3 + [52]) = ($4 + [20])
	*($3 + [56]) = ($4 + [24])
	*($3 + [60]) = ($4 + [32])
	CALL $333(($3 + [40]), ($3 + [32]))
	*($4 + [48]) = $1
	*($3 + [32]) = $4
	$7 = *($4 + [8])
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $4
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $163(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$2 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$0 = *($2 + [32])
	if ( ($0 == 0) ){ goto $label$11 }
	$6 = ($2 + [36])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($5 + [-64])
	if ( ((*(($5 + [-48])) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($5 + [-40])))
	
.LABEL $label$15
	$5 = $1
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$14 }
	$5 = *(($2 + [32]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $9($5)
	
.LABEL $label$11
	CALL $9($2)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $4
}

void .FUNC $154 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [240])
	$global$0 = $3
	CALL require_auth($2)
	*(($3 + [232])) = [0]
	*($3 + [216]) = (int_64)-1
	*($3 + [224]) = (int_64)0
	$4 = *($0)
	*($3 + [200]) = $4
	*($3 + [208]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $90(($3 + [200]), $6)
	if ( ((int_32)*($5 + [104]) == (int_32)($3 + [200])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [10866])
	CALL eosio_assert((*($5 + [24]) == 0), [11041])
	$7 = *(($5 + [84]))
	$6 = *($5 + [80])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$3:
	if ( ((int_64)*($6) == (int_64)$2) ){ goto $label$2 }
	$6 = ($6 + [8])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$3 }
	$6 = $7
	
.LABEL $label$2
	*($3 + [192]) = $6
	CALL eosio_assert(((int_32)$6 != (int_32)$7), [11064])
	if ( (int_64)(*($5 + [8]) == 0) ){ goto $label$5 }
	$4 = *($0)
	*($3 + [120]) = [9370]
	*($3 + [124]) = CALL $15([9370])
	*($3 + [16]) = *($3 + [120])
	$6 = CALL $60(($3 + [128]), ($3 + [16]))
	*($3 + [136]) = $4
	*($3 + [144]) = *($6)
	*($3 + [104]) = [9377]
	*($3 + [108]) = CALL $15([9377])
	*($3 + [8]) = *($3 + [104])
	$8 = CALL $60(($3 + [112]), ($3 + [8]))
	*($3 + [88]) = [9389]
	*($3 + [92]) = CALL $15([9389])
	*($3) = *($3 + [88])
	$9 = CALL $60(($3 + [96]), $3)
	*((($3 + [24]) + [8])) = [0]
	*($3 + [24]) = (int_64)0
	$6 = CALL $15([11087])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$4 }
	$10 = ($5 + [8])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$8 }
	*($3 + [24]) = ($6 << [1])
	$7 = (($3 + [24]) | [1])
	if ( $6 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$11 = (($6 + [16]) & [-16])
	$7 = CALL $7($11)
	*($3 + [24]) = ($11 | [1])
	*($3 + [32]) = $7
	*($3 + [28]) = $6
	
.LABEL $label$7
	CALL memcpy($7, [11087], $6)
	
.LABEL $label$6
	*(($7 + $6)) = [0]
	*($3 + [48]) = $2
	$2 = *(($10 + [8]))
	$4 = *($10)
	$6 = (($3 + [24]) + [8])
	*(($3 + [80])) = *($6)
	*($6) = [0]
	*(($3 + [64])) = $2
	*($3 + [40]) = *($0)
	$2 = *($3 + [24])
	*($3 + [24]) = (int_64)0
	*($3 + [72]) = $2
	*($3 + [56]) = $4
	$6 = CALL $74(($3 + [152]), ($3 + [136]), *($8), *($9), ($3 + [40]))
	CALL $75($6)
	$7 = *($6 + [28])
	if ( ($7 == 0) ){ goto $label$9 }
	*(($6 + [32])) = $7
	CALL $9($7)
	
.LABEL $label$9
	$7 = *($6 + [16])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($6 + [20])) = $7
	CALL $9($7)
	
.LABEL $label$10
	if ( ((*(($3 + [72])) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($3 + [80])))
	
.LABEL $label$11
	if ( ((*($3 + [24]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($3 + [32])))
	
.LABEL $label$5
	$2 = *($0)
	*($3 + [40]) = ($3 + [192])
	if ( $5 ){ goto $label$12 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$12
	CALL $155(($3 + [200]), $5, $2, ($3 + [40]))
	$0 = *($3 + [224])
	if ( ($0 == 0) ){ goto $label$13 }
	$10 = ($3 + [228])
	$7 = *($10)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$6 = *($7)
	*($7) = [0]
	if ( ($6 == 0) ){ goto $label$17 }
	$5 = *($6 + [92])
	if ( ($5 == 0) ){ goto $label$18 }
	*(($6 + [96])) = $5
	CALL $9($5)
	
.LABEL $label$18
	$5 = *($6 + [80])
	if ( ($5 == 0) ){ goto $label$19 }
	*(($6 + [84])) = $5
	CALL $9($5)
	
.LABEL $label$19
	CALL $9($6)
	
.LABEL $label$17
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$16 }
	$6 = *(($3 + [224]))
	goto $label$14 
	
.LABEL $label$15
	$6 = $0
	
.LABEL $label$14
	*($10) = $0
	CALL $9($6)
	
.LABEL $label$13
	$global$0 = ($3 + [240])
	return (unreachable)
	
.LABEL $label$4
	CALL $24(($3 + [24]))
}

void .FUNC $155 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$3 = *(*($3))
	$7 = ($3 + [8])
	$6 = ($1 + [84])
	$8 = (*($6) - $7)
	$9 = int_32($8 >> [3])
	$10 = *($1)
	if ( ($8 == 0) ){ goto $label$4 }
	CALL memmove($3, $7, $8)
	$8 = ($3 + ($9 << [3]))
	*($6) = $8
	if ( ((int_64)$10 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [12234])
	$8 = *(($1 + [84]))
	goto $label$3 
	
.LABEL $label$4
	$8 = ($3 + ($9 << [3]))
	*($6) = $8
	
.LABEL $label$3
	$6 = ($1 + [80])
	$9 = *($1 + [80])
	$7 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$3 = [69]
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$6 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$6
	$9 = ($1 + [92])
	$7 = *($1 + [92])
	$8 = *(($1 + [96]))
	$12 = ($8 - $7)
	$11 = (CASTING uint_64)(uint_32 int_32($12 >> [3]))
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$3 = (($12 & [-8]) + $3)
	
.LABEL $label$8
	if ( ($3 <= [513]) ){ goto $label$10 }
	$8 = CALL $1($3)
	goto $label$9 
	
.LABEL $label$10
	$8 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$9
	*($5 + [4]) = $8
	*($5) = $8
	*($5 + [8]) = ($8 + $3)
	*($5 + [16]) = $5
	*($5 + [56]) = $6
	*($5 + [60]) = $9
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [48])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [72])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $8, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$13 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $2($8)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$11 }
	
.LABEL $label$12
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$11
	$global$0 = ($5 + [64])
}

void .FUNC $158 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [48]) = *(*($3))
	*($1 + [56]) = *(*(($3 + [4])))
	$6 = ($1 + [80])
	$7 = ($1 + [56])
	$8 = ($1 + [48])
	$10 = *($1 + [80])
	$9 = *(($1 + [84]))
	$11 = ($9 - $10)
	$12 = (CASTING uint_64)(uint_32 int_32($11 >> [3]))
	$13 = *($1)
	$3 = [69]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$4 }
	$3 = (($11 & [-8]) + $3)
	
.LABEL $label$4
	$9 = ($1 + [92])
	$11 = *($1 + [92])
	$10 = *(($1 + [96]))
	$14 = ($10 - $11)
	$12 = (CASTING uint_64)(uint_32 int_32($14 >> [3]))
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$11 == (int_32)$10) ){ goto $label$6 }
	$3 = (($14 & [-8]) + $3)
	
.LABEL $label$6
	if ( ($3 <= [513]) ){ goto $label$8 }
	$4 = CALL $1($3)
	goto $label$7 
	
.LABEL $label$8
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$7
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [40]) = $8
	*($5 + [44]) = $7
	*($5 + [56]) = $6
	*($5 + [60]) = $9
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [32])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [72])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$13 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($4)
	if ( (uint_64)($13 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$13 + (int_64)1) : ((uint_64)$13 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

void .FUNC $159 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [112])
	$global$0 = $3
	*($3 + [96]) = [10825]
	*($3 + [100]) = CALL $15([10825])
	*($3) = *($3 + [96])
	CALL require_auth(*(CALL $60(($3 + [104]), $3)))
	$4 = [0]
	*((($3 + [56]) + [32])) = [0]
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	$5 = *($0)
	*($3 + [56]) = $5
	*($3 + [64]) = $5
	$6 = [0]
	$7 = CALL db_find_i64($5, $5, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $90(($3 + [56]), $7)
	if ( ((int_32)*($6 + [104]) == (int_32)($3 + [56])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [10866])
	CALL eosio_assert(((int_32)*($6 + [24]) != (int_32)[2]), [11116])
	*((($3 + [16]) + [32])) = [0]
	*($3 + [32]) = (int_64)-1
	*($3 + [40]) = (int_64)0
	$5 = *($0)
	*($3 + [16]) = $5
	*($3 + [24]) = $5
	$7 = CALL db_find_i64($5, $5, (int_64)-3659882974603116544, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $157(($3 + [16]), $7)
	if ( ((int_32)*($4 + [44]) == (int_32)($3 + [16])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [11140])
	CALL eosio_assert(((int_32)*($4 + [16]) != (int_32)[0]), [11158])
	$5 = *($0)
	*($3 + [8]) = $2
	if ( $6 ){ goto $label$3 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$3
	CALL $160(($3 + [56]), $6, $5, ($3 + [8]))
	$8 = *($3 + [40])
	if ( ($8 == 0) ){ goto $label$4 }
	$9 = ($3 + [44])
	$2 = *($9)
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$9 }
	$10 = ($7 + [36])
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($6 + [-64])
	if ( ((*(($6 + [-48])) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($6 + [-40])))
	
.LABEL $label$13
	$6 = $0
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$12 }
	$6 = *(($7 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$6 = $4
	
.LABEL $label$10
	*($10) = $4
	CALL $9($6)
	
.LABEL $label$9
	CALL $9($7)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$7 }
	$6 = *(($3 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$6 = $8
	
.LABEL $label$5
	*($9) = $8
	CALL $9($6)
	
.LABEL $label$4
	$2 = *($3 + [80])
	if ( ($2 == 0) ){ goto $label$14 }
	$7 = ($3 + [84])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$18 }
	$4 = *($6 + [92])
	if ( ($4 == 0) ){ goto $label$19 }
	*(($6 + [96])) = $4
	CALL $9($4)
	
.LABEL $label$19
	$4 = *($6 + [80])
	if ( ($4 == 0) ){ goto $label$20 }
	*(($6 + [84])) = $4
	CALL $9($4)
	
.LABEL $label$20
	CALL $9($6)
	
.LABEL $label$18
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$17 }
	$6 = *(($3 + [80]))
	goto $label$15 
	
.LABEL $label$16
	$6 = $2
	
.LABEL $label$15
	*($7) = $2
	CALL $9($6)
	
.LABEL $label$14
	$global$0 = ($3 + [112])
}

void .FUNC $273 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $146($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $272 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $152($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12543])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12588])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [16])
	if ( ((int_64)*(*(($4 + [-24])) + [16]) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9) + [16]) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12638])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [40]))
}

void .FUNC $224 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $1, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $183 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	CALL $137(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

int_32 .FUNC $69 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*($0 + [40]) = (int_64)0
	$1 = CALL $15([8898])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [11869])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($1 + [8897]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*($0 + [48]) = (int_64)0
	*(($0 + [56])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$2 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$11 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	
.LABEL $label$9
	return $0
	
.LABEL $label$7
	CALL eosio_assert([0], [12016])
	return $0
}

void .FUNC $68 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-4])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $70(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [68]), $2, $4, [60])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

void .FUNC $248 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [244]) = $2
	*($3 + [240]) = $2
	$5 = ($2 + $4)
	*($3 + [248]) = $5
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [248]))
	$2 = *($3 + [244])
	
.LABEL $label$5
	CALL memcpy(($3 + [232]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [244]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [244])
	
.LABEL $label$6
	CALL memcpy(($3 + [228]), $2, [4])
	*($3 + [244]) = ($2 + [4])
	*($3 + [224]) = [0]
	*($3 + [216]) = (int_64)0
	CALL $219(($3 + [240]), ($3 + [216]))
	*($3 + [208]) = (int_64)0
	*($3 + [200]) = (int_64)0
	$2 = *($3 + [244])
	if ( ((uint_32)(*((($3 + [240]) + [8])) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [244])
	
.LABEL $label$7
	CALL memcpy(($3 + [200]), $2, [8])
	$2 = (*($3 + [244]) + [8])
	*($3 + [244]) = $2
	*($3 + [40]) = (int_64)0
	$4 = (($3 + [240]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [244])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $2, [8])
	*((($3 + [200]) + [8])) = *($3 + [40])
	$2 = (*($3 + [244]) + [8])
	*($3 + [244]) = $2
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [244])
	
.LABEL $label$9
	CALL memcpy(($3 + [192]), $2, [8])
	*($3 + [244]) = (*($3 + [244]) + [8])
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [240]) + [8]))
	*($3 + [24]) = *($3 + [240])
	$2 = *($2)
	*((($3 + [256]) + [8])) = $2
	*(($4 = (($3 + [272]) + [8]))) = $2
	$6 = *($3 + [24])
	*($3 + [272]) = $6
	*($3 + [256]) = $6
	$2 = *($4)
	*((($3 + [288]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$1 = *($3 + [272])
	*($3 + [56]) = $1
	*($3 + [288]) = $1
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($4 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($5 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($7 = ($3 + [176]))) = (int_64)0
	*(($3 + [184])) = [0]
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	$2 = CALL $25(($3 + [8]), ($3 + [216]))
	CALL require_auth(*($3 + [40]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$10
	CALL $217($7)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$11 }
	$7 = ($3 + [100])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $9($4)
	
.LABEL $label$15
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$14 }
	$2 = *(($3 + [96]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $5
	
.LABEL $label$12
	*($7) = $5
	CALL $9($2)
	
.LABEL $label$11
	if ( ((*($3 + [216]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($3 + [224])))
	
.LABEL $label$16
	$global$0 = ($3 + [304])
}

void .FUNC $225 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($4 + [40])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$4 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $4, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $65 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_64 $5)
{
	CALL require_auth(*($0))
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12543])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12588])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$7 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$8 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$9:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$6 }
	$10 = [-24]
	$2 = ($5 + [-24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	CALL eosio_assert([0], [12638])
	$10 = [-24]
	$2 = ($5 + [-24])
	$4 = *($3)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$10:
	$8 = *($5)
	*($5) = [0]
	$3 = *($2)
	*($2) = $8
	if ( ($3 == 0) ){ goto $label$11 }
	$7 = *($3 + [40])
	if ( ($7 == 0) ){ goto $label$12 }
	$11 = ($3 + [44])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	if ( ((*(($8 + [-28])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [-20])))
	
.LABEL $label$16
	$9 = ($8 + [-64])
	if ( ((*(($8 + [-40])) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*(($8 + [-32])))
	
.LABEL $label$17
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$15 }
	$8 = *(($3 + [40]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $7
	
.LABEL $label$13
	*($11) = $7
	CALL $9($8)
	
.LABEL $label$12
	CALL $9($3)
	
.LABEL $label$11
	*($2 + [8]) = *($5 + [8])
	*(($2 + [16])) = *(($5 + [16]))
	$2 = ($2 + [24])
	$5 = ($5 + [24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$10 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$18:
	$5 = ($5 + $10)
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$19 }
	$7 = *($3 + [40])
	if ( ($7 == 0) ){ goto $label$20 }
	$4 = ($3 + [44])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$23:
	if ( ((*(($8 + [-28])) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*(($8 + [-20])))
	
.LABEL $label$24
	$9 = ($8 + [-64])
	if ( ((*(($8 + [-40])) & [1]) == 0) ){ goto $label$25 }
	CALL $9(*(($8 + [-32])))
	
.LABEL $label$25
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$23 }
	$8 = *(($3 + [40]))
	goto $label$21 
	
.LABEL $label$22
	$8 = $7
	
.LABEL $label$21
	*($4) = $7
	CALL $9($8)
	
.LABEL $label$20
	CALL $9($3)
	
.LABEL $label$19
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$18 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [56]))
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [144])
	$global$0 = $2
	*($2 + [12]) = $1
	CALL require_auth(*($0))
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	
.LOOP $label$5:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( (int_64)(*($7) == 0) ){ goto $label$4 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$3 }
	if ( ((int_32)*($7 + [64]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	goto $label$2 
	
.LABEL $label$3
	$6 = CALL db_find_i64(*($3), *(($0 + [40])), (int_64)-4161326055690338304, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $47($3, $6)
	if ( ((int_32)*($7 + [64]) == (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	$8 = *($0)
	*($2 + [16]) = ($2 + [12])
	CALL $68($3, $7, $8, ($2 + [16]))
	$global$0 = ($2 + [144])
	return 
	
.LABEL $label$1
	$9 = *($0)
	if ( ((int_64)*(($0 + [32])) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$6
	$6 = CALL $7([80])
	CALL $69($6)
	*($6 + [64]) = $3
	*($6 + [8]) = $1
	*($2 + [96]) = (($2 + [16]) + [60])
	*($2 + [92]) = ($2 + [16])
	*($2 + [88]) = ($2 + [16])
	*($2 + [104]) = ($2 + [88])
	*($2 + [116]) = ($6 + [8])
	*($2 + [112]) = $6
	*($2 + [120]) = ($6 + [16])
	*($2 + [124]) = ($6 + [24])
	*($2 + [128]) = ($6 + [32])
	*($2 + [132]) = ($6 + [40])
	*($2 + [136]) = ($6 + [48])
	CALL $70(($2 + [112]), ($2 + [104]))
	$8 = *($6)
	$7 = CALL db_store_i64(*(($0 + [40])), (int_64)-4161326055690338304, $9, $8, ($2 + [16]), [60])
	*($6 + [68]) = $7
	$5 = ($0 + [48])
	if ( (uint_64)($8 <= *($5)) ){ goto $label$7 }
	*($5) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($2 + [112]) = $6
	$8 = *($6)
	*($2 + [16]) = $8
	*($2 + [88]) = $7
	$5 = *(($0 + [60]))
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [64]))) ){ goto $label$10 }
	*($5 + [8]) = $8
	*($5 + [16]) = $7
	*($2 + [112]) = [0]
	*($5) = $6
	*(($0 + [60])) = ($5 + [24])
	$6 = *($2 + [112])
	*($2 + [112]) = [0]
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $71(($0 + [56]), ($2 + [112]), ($2 + [16]), ($2 + [88]))
	$6 = *($2 + [112])
	*($2 + [112]) = [0]
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9($6)
	
.LABEL $label$8
	$global$0 = ($2 + [144])
}

void .FUNC $66 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_64 $7)
{
	CALL require_auth(*($0))
	CALL require_recipient($2)
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$3 }
	CALL eosio_assert([0], [12399])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [48]) + (int_64)*($3))
	*($1 + [48]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	$3 = [16]
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [12442])
	$3 = [16]
	if ( ((int_64)*(($1 + [48])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [12461])
	$3 = ($1 + $3)
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = ($1 + $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12234])
	
.LABEL $label$4
	$8 = $4
	$4 = ($8 + [-64])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($8 + [-4])
	*($5 + [24]) = ($5 + [8])
	*($5 + [40]) = $3
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $70(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [68]), $2, $4, [60])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [11712])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [11817])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [11750])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [11817])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [112])
	$4 = *($0)
	$6 = *(($0 + [140]))
	$5 = *(($0 + [136]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$4) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [52]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [120])), (int_64)5037744192915243008, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $49($3, $7)
	if ( ((int_32)*($8 + [52]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [8735])
	CALL eosio_assert((*($8 + [24]) == 0), [8754])
	if ( $8 ){ goto $label$5 }
	CALL eosio_assert([0], [12479])
	CALL eosio_assert([0], [12513])
	
.LABEL $label$5
	$7 = CALL db_next_i64(*($8 + [56]), ($2 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	CALL $49($3, $7)
	
.LABEL $label$6
	CALL $64($3, $8)
	$global$0 = ($2 + [16])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [52]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$6 = *($1)
	*($5 + [32]) = *(*($3))
	$8 = *($3 + [4])
	*(($7 = (($5 + [32]) + [16]))) = *(($8 + [8]))
	*($5 + [40]) = *($8)
	$8 = CALL $25(($5 + [56]), *($3 + [8]))
	$9 = CALL $25(($5 + [68]), *($3 + [12]))
	*($5 + [80]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($5 + [88]) = *(*(*($3 + [16]) + [4]) + [16])
	$10 = ($1 + [44])
	$3 = *($10)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [48]))) ){ goto $label$7 }
	*($3) = *($5 + [32])
	*(($3 + [16])) = *($7)
	*(($3 + [8])) = *((($5 + [32]) + [8]))
	*(($3 + [32])) = *(($8 + [8]))
	*($3 + [24 align=4]) = *($8)
	*(($5 + [60])) = [0]
	*((($5 + [32]) + [32])) = [0]
	*($8) = [0]
	*(($3 + [44])) = *(($9 + [8]))
	*($3 + [36 align=4]) = *($9)
	*($9) = [0]
	*(($5 + [72])) = [0]
	*((($5 + [32]) + [44])) = [0]
	$9 = (($5 + [32]) + [48])
	*(($3 + [56])) = *(($9 + [8]))
	*($3 + [48]) = *($9)
	*($10) = (*($10) + [64])
	if ( ((*($8) & [1]) == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	CALL $306(($1 + [40]), ($5 + [32]))
	if ( (*($9) & [1]) ){ goto $label$8 }
	if ( (*($8) & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	CALL $9(*(($5 + [76])))
	if ( ((*($8) & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9(*(($5 + [64])))
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [12234])
	
.LABEL $label$3
	$11 = ($1 + [40])
	$10 = *($1 + [40])
	$7 = *(($1 + [44]))
	$12 = (CASTING uint_64)(uint_32 int_32(($7 - $10) >> [6]))
	$3 = [33]
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = *($10 + [24])
	$9 = ( *(($10 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($9 + $3)
	$3 = ($8 + [41])
	$8 = ($8 + [24])
	$12 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$12:
	$9 = $3
	$3 = ($9 + [1])
	$8 = ($8 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$12 }
	$3 = *($10 + [36])
	$8 = ( *(($10 + [40])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + $9)
	$12 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$13:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$13 }
	$10 = ($10 + [64])
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($3 <= [513]) ){ goto $label$15 }
	$8 = CALL $1($3)
	goto $label$14 
	
.LABEL $label$15
	$8 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$14
	*($5 + [12]) = $8
	*($5 + [8]) = $8
	*($5 + [16]) = ($8 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [52]) = $11
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	CALL $298(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [56]), $2, $8, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$18 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $2($8)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	
.LABEL $label$17
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$16
	$global$0 = ($5 + [96])
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8220])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $227 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$global$0 = $2
	$5 = CALL $25($2, ($1 + [40]))
	$4 = CALL $25(($2 + [16]), ($1 + [28]))
	$3 = CALL $25(($2 + [32]), ($1 + [16]))
	CALL $336($0, *($1), *($1 + [8]), $3, $4, $5, *($1 + [56]))
	if ( (*($5) & [1]) ){ goto $label$5 }
	if ( (*($4) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $9(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($3) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	CALL $9(*($3 + [8]))
	$global$0 = ($2 + [48])
}

void .FUNC $228 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $4, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($1 + [8])) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [24])) = *($2 + [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$0 = *($0)
	$2 = ($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = ($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$0 = ($0 + [12])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [4])
	*(($1 = ($1 + [4]))) = (*($1) + [4])
}

void .FUNC $89 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)*(*($3)))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-4])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $70(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [68]), $2, $4, [60])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	CALL $104(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$4 = ($global$0 - [96])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [76]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [60]) = (*($1 + [60]) + [1])
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)*(*($3)))
	$6 = *($1)
	*($5 + [32]) = ((int_64)*(*(*($3 + [4]) + [4]) + [8]) + (int_64)1)
	*($5 + [40]) = *(*($3 + [8]))
	$7 = CALL $25((($5 + [32]) + [16]), *($3 + [12]))
	$3 = *($3 + [16])
	*((($5 + [32]) + [40])) = *(($3 + [8]))
	*((($5 + [32]) + [48])) = *(($3 + [16]))
	*((($5 + [32]) + [56])) = *(($3 + [24]))
	*($5 + [64]) = *($3)
	$8 = ($1 + [68])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [72]))) ){ goto $label$5 }
	*($3) = *($5 + [32])
	*(($3 + [8])) = *($5 + [40])
	*(($3 + [24])) = *(($7 + [8]))
	*($3 + [16 align=4]) = *($7)
	$9 = ($5 + [64])
	*(($3 + [56])) = *(($9 + [24]))
	*(($3 + [48])) = *(($9 + [16]))
	*(($3 + [40])) = *(($9 + [8]))
	*($3 + [32]) = *($9)
	*(($5 + [52])) = [0]
	*((($5 + [32]) + [24])) = [0]
	*($7) = [0]
	*($8) = (*($8) + [64])
	$3 = [60]
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $312(($1 + [64]), ($5 + [32]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($5 + [56])))
	
.LABEL $label$6
	$3 = [60]
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [12234])
	
.LABEL $label$3
	$10 = ($1 + $3)
	$11 = ($1 + [64])
	$7 = *($1 + [64])
	$9 = *(($1 + [68]))
	$12 = (CASTING uint_64)(uint_32 int_32(($9 - $7) >> [6]))
	$3 = [57]
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *($7 + [16])
	$8 = ( *(($7 + [20])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$3 = (($8 + $3) + [48])
	$12 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$10:
	$3 = ($3 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$10 }
	$7 = ($7 + [64])
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 <= [513]) ){ goto $label$12 }
	$7 = CALL $1($3)
	goto $label$11 
	
.LABEL $label$12
	$7 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$11
	*($5 + [12]) = $7
	*($5 + [8]) = $7
	*($5 + [16]) = ($7 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [60]) = $10
	*($5 + [64]) = $11
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [32])
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [52])
	*($5 + [56]) = ($1 + [56])
	CALL $313(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [80]), $2, $7, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $2($7)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [96])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [96])
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([40])) + [24]) = $0
	*($5) = (int_64)0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	CALL $311(($3 + [32]), ($3 + [24]))
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $105(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [20]) = $5
	*($3 + [16]) = $5
	*($3 + [24]) = ($5 + $4)
	$4 = CALL $7([88])
	CALL $101($4)
	*($4 + [76]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($4 + [8])
	*($3 + [40]) = $4
	*($3 + [48]) = ($4 + [16])
	*($3 + [52]) = ($4 + [32])
	*($3 + [56]) = ($4 + [48])
	*($3 + [60]) = ($4 + [52])
	*($3 + [64]) = ($4 + [56])
	*($3 + [68]) = ($4 + [60])
	*($3 + [72]) = ($4 + [64])
	CALL $307(($3 + [40]), ($3 + [32]))
	*($4 + [80]) = $1
	*($3 + [32]) = $4
	$7 = *($4)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $4
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $103(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$2 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	$0 = *($2 + [64])
	if ( ($0 == 0) ){ goto $label$11 }
	$6 = ($2 + [68])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($5 + [-64])
	if ( ((*(($5 + [-48])) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($5 + [-40])))
	
.LABEL $label$15
	$5 = $1
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$14 }
	$5 = *(($2 + [64]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $0
	
.LABEL $label$12
	*($6) = $0
	CALL $9($5)
	
.LABEL $label$11
	CALL $9($2)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $4
}

void .FUNC $84 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [48]) = ((int_64)*($1 + [48]) + (int_64)*(*($3)))
	$6 = *($1)
	$3 = $4
	$4 = ($3 + [-64])
	$global$0 = $4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($3 + [-4])
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = ($1 + [8])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	*($5 + [44]) = ($1 + [24])
	*($5 + [48]) = ($1 + [32])
	*($5 + [52]) = ($1 + [40])
	*($5 + [56]) = ($1 + [48])
	CALL $70(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [68]), $2, $4, [60])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [64])
}

void .FUNC $83 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = $global$0
	$4 = $3
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($6 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $4
}

void .FUNC $82 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [40])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	float_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1 + [8]) = ((int_64)*(*(*($4) + [4]) + [8]) + (int_64)1)
	*($1) = *(*($4 + [4]))
	*($1 + [16]) = *(*($4 + [8]))
	$5 = *($0)
	$6 = ($1 + [32])
	CALL $27($6, *($4 + [12]))
	*($1 + [56]) = (int_64)0
	*($1 + [64]) = [0]
	$7 = ((float_32)*(*($4 + [16])) * (float_32)(float_32)1e4)
	if ( (((float_32)$7 < (float_32)(float_32)18446744073709551615) & ((float_32)$7 >= (float_32)(float_32)0)) ){ goto $label$2 }
	$8 = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$8 = (Rounds 0)($7)
	
.LABEL $label$1
	*($1 + [48]) = $8
	$4 = *($1 + [32])
	$9 = ( *(($1 + [36])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($9 + [52])
	$8 = (CASTING uint_64)(uint_32 $9)
	$9 = ($1 + [64])
	$10 = ($1 + [60])
	$11 = ($1 + [56])
	$12 = ($1 + [48])
	$13 = ($1 + [8])
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ($4 <= [513]) ){ goto $label$5 }
	$2 = CALL $1($4)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [12]) = $2
	*($3 + [8]) = $2
	*($3 + [16]) = ($2 + $4)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $13
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [16])
	*($3 + [44]) = $6
	*($3 + [48]) = $12
	*($3 + [52]) = $11
	*($3 + [56]) = $10
	*($3 + [60]) = $9
	CALL $318(($3 + [32]), ($3 + [24]))
	$8 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($5 + [8]), (int_64)-5594450192367616000, *(*($0 + [8])), $8, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$8 >= (uint_64)*($5 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($2)
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($3 + [64])
}

int_32 .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	*($0) = (int_64)0
	$1 = CALL $15([8898])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [11869])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($1 + [8897]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$11 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [12016])
	
.LABEL $label$7
	*($0 + [32 align=4]) = (int_64)0
	*($0 + [64]) = [0]
	*(($0 + [40])) = [0]
	return $0
}

void .FUNC $182 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [136]) = $2
	CALL require_auth($2)
	*(($3 + [128])) = [0]
	*($3 + [112]) = (int_64)-1
	*($3 + [120]) = (int_64)0
	$2 = *($0)
	*($3 + [96]) = $2
	*($3 + [104]) = $2
	$4 = [0]
	$5 = CALL db_find_i64($2, $2, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $90(($3 + [96]), $5)
	if ( ((int_32)*($4 + [104]) == (int_32)($3 + [96])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [9510])
	CALL eosio_assert((int_64)(*($4 + [8]) == 0), [9049])
	$6 = ($4 + [84])
	CALL eosio_assert((int_32((*($6) - *($4 + [80])) >> [3]) <= *($4 + [64])), [9073])
	CALL eosio_assert(((int_32)*($4 + [24]) != (int_32)[2]), [9551])
	$6 = *($6)
	$5 = *($4 + [80])
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL eosio_assert(((int_64)*($5) != (int_64)*($3 + [136])), [9597])
	$5 = ($5 + [8])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = [0]
	*((($3 + [56]) + [32])) = [0]
	*($3 + [72]) = (int_64)-1
	*($3 + [80]) = (int_64)0
	$2 = *($0)
	*($3 + [56]) = $2
	*($3 + [64]) = $2
	$6 = [0]
	$7 = CALL db_find_i64($2, $2, (int_64)-3659884136206307328, *($3 + [136]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = CALL $148(($3 + [56]), $7)
	if ( ((int_32)*($6 + [36]) == (int_32)($3 + [56])) ){ goto $label$4 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$4
	CALL eosio_assert(($6 == 0), [11538])
	*((($3 + [16]) + [32])) = [0]
	*($3 + [32]) = (int_64)-1
	$2 = *($0)
	*($3 + [16]) = $2
	*($3 + [24]) = $2
	*($3 + [40]) = (int_64)0
	$6 = CALL db_lowerbound_i64($2, $2, (int_64)-3659882349576847360, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $91(($3 + [16]), $6)
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [11561])
	$2 = *($0)
	if ( $5 ){ goto $label$6 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$6
	CALL $183(($3 + [16]), $5, $2)
	$2 = *($0)
	*($3 + [8]) = ($3 + [136])
	if ( $4 ){ goto $label$7 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$7
	CALL $184(($3 + [96]), $4, $2, ($3 + [8]))
	$4 = *($3 + [40])
	if ( ($4 == 0) ){ goto $label$8 }
	$0 = ($3 + [44])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$11 }
	$5 = *(($3 + [40]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $4
	CALL $9($5)
	
.LABEL $label$8
	$4 = *($3 + [80])
	if ( ($4 == 0) ){ goto $label$13 }
	$0 = ($3 + [84])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$16:
	$5 = ($5 + [-24])
	$6 = *($5)
	*($5) = [0]
	if ( ($6 == 0) ){ goto $label$17 }
	CALL $9($6)
	
.LABEL $label$17
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$16 }
	$5 = *(($3 + [80]))
	goto $label$14 
	
.LABEL $label$15
	$5 = $4
	
.LABEL $label$14
	*($0) = $4
	CALL $9($5)
	
.LABEL $label$13
	$0 = *($3 + [120])
	if ( ($0 == 0) ){ goto $label$18 }
	$7 = ($3 + [124])
	$6 = *($7)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$20 }
	
.LOOP $label$21:
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$22 }
	$4 = *($5 + [92])
	if ( ($4 == 0) ){ goto $label$23 }
	*(($5 + [96])) = $4
	CALL $9($4)
	
.LABEL $label$23
	$4 = *($5 + [80])
	if ( ($4 == 0) ){ goto $label$24 }
	*(($5 + [84])) = $4
	CALL $9($4)
	
.LABEL $label$24
	CALL $9($5)
	
.LABEL $label$22
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$21 }
	$5 = *(($3 + [120]))
	goto $label$19 
	
.LABEL $label$20
	$5 = $0
	
.LABEL $label$19
	*($7) = $0
	CALL $9($5)
	
.LABEL $label$18
	$global$0 = ($3 + [144])
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [36]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $332(($3 + [40]), ($3 + [32]))
	*($5 + [40]) = $1
	*($3 + [32]) = $5
	$7 = *($5 + [16])
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $150(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $145 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [24]) = [0]
	$5 = ($1 + [80])
	$6 = ($1 + [24])
	$8 = *($1 + [80])
	$7 = *(($1 + [84]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	$11 = *($1)
	$12 = [69]
	
.LOOP $label$3:
	$12 = ($12 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$12 = (($9 & [-8]) + $12)
	
.LABEL $label$4
	$7 = ($1 + [92])
	$9 = *($1 + [92])
	$8 = *(($1 + [96]))
	$13 = ($8 - $9)
	$10 = (CASTING uint_64)(uint_32 int_32($13 >> [3]))
	
.LOOP $label$5:
	$12 = ($12 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$6 }
	$12 = (($13 & [-8]) + $12)
	
.LABEL $label$6
	if ( ($12 <= [513]) ){ goto $label$8 }
	$3 = CALL $1($12)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($3 - (($12 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $12)
	*($4 + [16]) = $4
	*($4 + [32]) = $6
	*($4 + [56]) = $5
	*($4 + [60]) = $7
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [36]) = ($1 + [32])
	*($4 + [40]) = ($1 + [48])
	*($4 + [44]) = ($1 + [56])
	*($4 + [48]) = ($1 + [64])
	*($4 + [52]) = ($1 + [72])
	CALL $324(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $3, $12)
	if ( ((uint_32)$12 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$11 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($3)
	if ( (uint_64)($11 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [64])
}

void .FUNC $144 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	CALL $137(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $147 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	$4 = ($global$0 - [192])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$6 = ($1 + [80])
	$7 = ($1 + [84])
	$8 = *($7)
	$9 = $8
	$10 = *($1)
	$11 = $10
	if ( ((int_32)$8 == (int_32)*($1 + [80])) ){ goto $label$6 }
	$12 = ($1 + [8])
	$13 = (($5 + [40]) + [32])
	$14 = (($5 + [40]) + [16])
	$15 = (($5 + [24]) | [1])
	$16 = *($3)
	$17 = ($5 + [180])
	$18 = ($5 + [80])
	$19 = ($5 + [172])
	$20 = [0]
	$21 = [0]
	
.LOOP $label$7:
	$11 = *($16)
	*($5 + [120]) = [9370]
	*($5 + [124]) = CALL $15([9370])
	*($5 + [16]) = *($5 + [120])
	CALL $60(($5 + [128]), ($5 + [16]))
	*((($5 + [136]) + [8])) = *($5 + [128])
	*($5 + [136]) = $11
	*($5 + [104]) = [9377]
	*($5 + [108]) = CALL $15([9377])
	*($5 + [8]) = *($5 + [104])
	CALL $60(($5 + [112]), ($5 + [8]))
	*($5 + [88]) = [9389]
	*($5 + [92]) = CALL $15([9389])
	*($5) = *($5 + [88])
	CALL $60(($5 + [96]), $5)
	$22 = *($6)
	if ( ((uint_32)int_32((*($7) - $22) >> [3]) <= (uint_32)$20) ){ goto $label$5 }
	*(($8 = (($5 + [24]) + [8]))) = [0]
	*($5 + [24]) = (int_64)0
	$3 = CALL $15([11087])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$10 }
	*($5 + [24]) = ($3 << [1])
	$9 = $15
	if ( $3 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$23 = (($3 + [16]) & [-16])
	$9 = CALL $7($23)
	*($8) = $9
	*($5 + [24]) = ($23 | [1])
	*($5 + [28]) = $3
	
.LABEL $label$9
	CALL memcpy($9, [11087], $3)
	
.LABEL $label$8
	*(($9 + $3)) = [0]
	$11 = *(($22 + ($20 << [3])))
	$24 = *($16)
	*($14) = *($12)
	*(($14 + [8])) = *(($12 + [8]))
	*($13) = *($5 + [24])
	*(($13 + [8])) = *($8)
	*((($5 + [40]) + [8])) = $11
	*($8) = [0]
	*($5 + [40]) = $24
	*($5 + [24]) = (int_64)0
	CALL $75(CALL $74(($5 + [152]), ($5 + [136]), *($5 + [112]), *($5 + [96]), ($5 + [40])))
	$3 = *($17)
	if ( ($3 == 0) ){ goto $label$11 }
	*((($5 + [152]) + [32])) = $3
	CALL $9($3)
	
.LABEL $label$11
	$3 = *((($5 + [152]) + [16]))
	if ( ($3 == 0) ){ goto $label$12 }
	*($19) = $3
	CALL $9($3)
	
.LABEL $label$12
	if ( ((*($13) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*($18))
	
.LABEL $label$13
	if ( ((*($5 + [24]) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*($8))
	
.LABEL $label$14
	$21 = ($21 + [1])
	$20 = ($21 & [255])
	$8 = *($6)
	$9 = *($7)
	if ( ((uint_32)int_32(($9 - $8) >> [3]) > (uint_32)$20) ){ goto $label$7 }
	$11 = *($1)
	
.LABEL $label$6
	if ( ((int_64)$10 == (int_64)$11) ){ goto $label$15 }
	CALL eosio_assert([0], [12234])
	$8 = *(($1 + [80]))
	$9 = *(($1 + [84]))
	
.LABEL $label$15
	$13 = ($9 - $8)
	$11 = (CASTING uint_64)(uint_32 int_32($13 >> [3]))
	$3 = [69]
	
.LOOP $label$16:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$16 }
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$17 }
	$3 = (($13 & [-8]) + $3)
	
.LABEL $label$17
	$13 = ($1 + [92])
	$20 = *($1 + [92])
	$8 = *(($1 + [96]))
	$9 = ($8 - $20)
	$11 = (CASTING uint_64)(uint_32 int_32($9 >> [3]))
	
.LOOP $label$18:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$18 }
	if ( ((int_32)$20 == (int_32)$8) ){ goto $label$19 }
	$3 = (($9 & [-8]) + $3)
	
.LABEL $label$19
	if ( ($3 <= [513]) ){ goto $label$21 }
	$8 = CALL $1($3)
	goto $label$20 
	
.LABEL $label$21
	$8 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$20
	*($5 + [156]) = $8
	*($5 + [152]) = $8
	*($5 + [160]) = ($8 + $3)
	*($5 + [136]) = ($5 + [152])
	*($5 + [72]) = $6
	*($5 + [76]) = $13
	*($5 + [40]) = $1
	*($5 + [44]) = ($1 + [8])
	*($5 + [48]) = ($1 + [24])
	*($5 + [52]) = ($1 + [32])
	*($5 + [56]) = ($1 + [48])
	*($5 + [60]) = ($1 + [56])
	*($5 + [64]) = ($1 + [64])
	*($5 + [68]) = ($1 + [72])
	CALL $324(($5 + [40]), ($5 + [136]))
	CALL db_update_i64(*($1 + [108]), $2, $8, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$23 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$22 }
	goto $label$3 
	
.LABEL $label$23
	CALL $2($8)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$3 }
	
.LABEL $label$22
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [192])
	return (unreachable)
	
.LABEL $label$5
	CALL $44($6)
	
.LABEL $label$4
	CALL $24(($5 + [24]))
	
.LABEL $label$3
	$global$0 = ($5 + [192])
	(unreachable)
}

void .FUNC $146 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	$2 = ($global$0 - [208])
	$global$0 = $2
	*($2 + [96]) = [10825]
	*($2 + [100]) = CALL $15([10825])
	*($2 + [8]) = *($2 + [96])
	CALL require_auth(*(CALL $60(($2 + [104]), ($2 + [8]))))
	*((($2 + [56]) + [32])) = [0]
	*($2 + [72]) = (int_64)-1
	*($2 + [80]) = (int_64)0
	$3 = *($0)
	*($2 + [56]) = $3
	*($2 + [64]) = $3
	$4 = [0]
	$5 = CALL db_find_i64($3, $3, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $90(($2 + [56]), $5)
	if ( ((int_32)*($4 + [104]) == (int_32)($2 + [56])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [10866])
	CALL eosio_assert(((int_32)*($4 + [24]) == (int_32)[1]), [10925])
	*((($2 + [16]) + [32])) = [0]
	*($2 + [32]) = (int_64)-1
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $3
	$7 = *($4 + [80])
	$6 = *(($4 + [84]))
	$8 = ($6 - $7)
	$5 = int_32($8 >> [3])
	*($2 + [40]) = (int_64)0
	if ( ((int_64)*($4 + [8]) == (int_64)0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[3]) ){ goto $label$3 }
	*($2 + [112]) = $0
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$5
	CALL $147(($2 + [56]), $4, $3, ($2 + [112]))
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)[4]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = (uint_32($8 >> [3]) & [255])
	if ( ($9 == 0) ){ goto $label$2 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	$10 = (($2 + [16]) + [24])
	$11 = (($2 + [112]) + [34])
	$12 = ($2 + [44])
	$13 = (($2 + [16]) + [8])
	$14 = ($4 + [72])
	$15 = ($2 + [196])
	$16 = ($4 + [80])
	$17 = ($4 + [84])
	$18 = [0]
	$5 = [0]
	
.LOOP $label$7:
	$3 = *(($7 + ($5 << [3])))
	$7 = *($12)
	$6 = *($10)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$10 }
	
.LOOP $label$12:
	$5 = ($7 + [-24])
	$8 = *($5)
	if ( ((int_64)*($8 + [16]) == (int_64)$3) ){ goto $label$11 }
	$7 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$10 }
	if ( ((int_32)*(($8 + [36])) != (int_32)($2 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$8 = [0]
	$5 = CALL db_find_i64(*($2 + [16]), *($13), (int_64)-3659884136206307328, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$8 = CALL $148(($2 + [16]), $5)
	if ( ((int_32)*($8 + [36]) == (int_32)($2 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [12293])
	
.LABEL $label$8
	CALL eosio_assert(($8 == 0), [10975])
	$19 = *($0)
	if ( ((int_64)*($2 + [16]) == (int_64)CALL current_receiver()) ){ goto $label$13 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$13
	*(($5 = CALL $7([48])) + [32]) = [0]
	*($5 + [36]) = ($2 + [16])
	*($5 + [8]) = $1
	*($5 + [16]) = $3
	*($5) = ((int_64)(CASTING uint_64)(uint_32 $18) & (int_64)255)
	*($5 + [24]) = *($14)
	*((($2 + [160]) + [8])) = $11
	*($2 + [164]) = ($2 + [112])
	*($2 + [160]) = ($2 + [112])
	*($2 + [176]) = ($2 + [160])
	$7 = ($5 + [16])
	*((($2 + [184]) + [8])) = $7
	*($15) = ($5 + [24])
	*((($2 + [184]) + [16])) = ($5 + [32])
	*($2 + [188]) = ($5 + [8])
	*($2 + [184]) = $5
	CALL $149(($2 + [184]), ($2 + [176]))
	$3 = *($5 + [16])
	$8 = CALL db_store_i64(*($13), (int_64)-3659884136206307328, $19, $3, ($2 + [112]), [34])
	*($5 + [40]) = $8
	$6 = (($2 + [16]) + [16])
	if ( (uint_64)($3 <= *($6)) ){ goto $label$14 }
	*($6) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	*($2 + [184]) = $5
	$3 = *($7)
	*($2 + [112]) = $3
	*($2 + [160]) = $8
	$7 = *($12)
	if ( ((uint_32)$7 >= (uint_32)*((($2 + [16]) + [32]))) ){ goto $label$17 }
	*($7 + [8]) = $3
	*($7 + [16]) = $8
	*($2 + [184]) = [0]
	*($7) = $5
	*($12) = ($7 + [24])
	$5 = *($2 + [184])
	*($2 + [184]) = [0]
	if ( $5 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $150($10, ($2 + [184]), ($2 + [112]), ($2 + [160]))
	$5 = *($2 + [184])
	*($2 + [184]) = [0]
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9($5)
	
.LABEL $label$15
	$18 = ($18 + [1])
	$5 = ($18 & [255])
	if ( ((uint_32)$9 <= (uint_32)$5) ){ goto $label$2 }
	$7 = *($16)
	if ( ((uint_32)int_32((*($17) - $7) >> [3]) > (uint_32)$5) ){ goto $label$7 }
	
.LABEL $label$6
	CALL $44(($4 + [80]))
	
.LABEL $label$2
	$3 = *($0)
	if ( $4 ){ goto $label$18 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$18
	CALL $151(($2 + [56]), $4, $3)
	$8 = *($2 + [40])
	if ( ($8 == 0) ){ goto $label$19 }
	$6 = ($2 + [44])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$21 }
	
.LOOP $label$22:
	$5 = ($5 + [-24])
	$7 = *($5)
	*($5) = [0]
	if ( ($7 == 0) ){ goto $label$23 }
	CALL $9($7)
	
.LABEL $label$23
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$22 }
	$5 = *(($2 + [40]))
	goto $label$20 
	
.LABEL $label$21
	$5 = $8
	
.LABEL $label$20
	*($6) = $8
	CALL $9($5)
	
.LABEL $label$19
	$6 = *($2 + [80])
	if ( ($6 == 0) ){ goto $label$24 }
	$18 = ($2 + [84])
	$7 = *($18)
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$26 }
	
.LOOP $label$27:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$28 }
	$8 = *($5 + [92])
	if ( ($8 == 0) ){ goto $label$29 }
	*(($5 + [96])) = $8
	CALL $9($8)
	
.LABEL $label$29
	$8 = *($5 + [80])
	if ( ($8 == 0) ){ goto $label$30 }
	*(($5 + [84])) = $8
	CALL $9($8)
	
.LABEL $label$30
	CALL $9($5)
	
.LABEL $label$28
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$27 }
	$5 = *(($2 + [80]))
	goto $label$25 
	
.LABEL $label$26
	$5 = $6
	
.LABEL $label$25
	*($18) = $6
	CALL $9($5)
	
.LABEL $label$24
	$global$0 = ($2 + [208])
	(unreachable)
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = *($4 + [4])
	*(($1 + [16])) = *(($6 + [8]))
	*($1 + [8]) = *($6)
	*($1 + [48]) = *(*($4 + [8]))
	*($1 + [64]) = *(*($4 + [12]))
	*($1 + [56]) = *(*($4 + [16]))
	*($1 + [72]) = *(*($4 + [20]))
	$4 = *($4 + [24])
	*($1 + [32]) = *($4)
	*(($1 + [40])) = *(($4 + [8]))
	$6 = ($1 + [80])
	$7 = ($1 + [32])
	$8 = ($1 + [72])
	$9 = ($1 + [56])
	$10 = ($1 + [64])
	$11 = ($1 + [48])
	$12 = ($1 + [8])
	$14 = *($1 + [80])
	$13 = *(($1 + [84]))
	$15 = ($13 - $14)
	$16 = (CASTING uint_64)(uint_32 int_32($15 >> [3]))
	$4 = [69]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$16 = (uint_64)$16 >> (uint_64)(int_64)7
	if ( ((int_64)$16) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$2 }
	$4 = (($15 & [-8]) + $4)
	
.LABEL $label$2
	$13 = ($1 + [92])
	$15 = *($1 + [92])
	$14 = *(($1 + [96]))
	$17 = ($14 - $15)
	$16 = (CASTING uint_64)(uint_32 int_32($17 >> [3]))
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$16 = (uint_64)$16 >> (uint_64)(int_64)7
	if ( ((int_64)$16) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$15 == (int_32)$14) ){ goto $label$4 }
	$4 = (($17 & [-8]) + $4)
	
.LABEL $label$4
	if ( ($4 <= [513]) ){ goto $label$6 }
	$2 = CALL $1($4)
	goto $label$5 
	
.LABEL $label$6
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$5
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	*($3 + [16]) = $3
	*($3 + [28]) = $12
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [24])
	*($3 + [36]) = $7
	*($3 + [40]) = $11
	*($3 + [44]) = $9
	*($3 + [48]) = $10
	*($3 + [52]) = $8
	*($3 + [56]) = $6
	*($3 + [60]) = $13
	CALL $324(($3 + [24]), ($3 + [16]))
	$16 = *($1)
	*($1 + [108]) = CALL db_store_i64(*($5 + [8]), (int_64)-3659885418584850432, *(*($0 + [8])), $16, $2, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$16 >= (uint_64)*($5 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($2)
	if ( (uint_64)($16 <= *($5 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$16 + (int_64)1) : ((uint_64)$16 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [64])
}

int_32 .FUNC $140 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	*($0) = (int_64)0
	$1 = CALL $15([8898])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [11869])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($1 + [8897]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*($0 + [8]) = (int_64)0
	*(($0 + [16])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$11 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [12016])
	
.LABEL $label$7
	*($0 + [24]) = [3]
	$1 = CALL $15([8898])
	if ( ($1 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [11869])
	goto $label$14 
	
.LABEL $label$15
	if ( ($1 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$2 = (int_64)0
	
.LOOP $label$16:
	$3 = *(($1 + [8897]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$17
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$16 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$2 = (int_64)4
	
.LABEL $label$12
	*($0 + [32]) = (int_64)0
	*(($0 + [40])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$2 = $4
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$22 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [12016])
	
.LABEL $label$18
	*($0 + [64]) = [20]
	*($0 + [80 align=4]) = (int_64)0
	*(($0 + [88])) = (int_64)0
	*(($0 + [96])) = (int_64)0
	return $0
}

void .FUNC $143 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [112])
	$global$0 = $2
	*($2 + [96]) = [10825]
	*($2 + [100]) = CALL $15([10825])
	*($2 + [8]) = *($2 + [96])
	CALL require_auth(*(CALL $60(($2 + [104]), ($2 + [8]))))
	$3 = [0]
	*((($2 + [56]) + [32])) = [0]
	*($2 + [72]) = (int_64)-1
	*($2 + [80]) = (int_64)0
	$4 = *($0)
	*($2 + [56]) = $4
	*($2 + [64]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $90(($2 + [56]), $6)
	if ( ((int_32)*($5 + [104]) == (int_32)($2 + [56])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [10866])
	CALL eosio_assert(((int_32)*($5 + [24]) == (int_32)[3]), [10897])
	*((($2 + [16]) + [32])) = [0]
	*($2 + [32]) = (int_64)-1
	$4 = *($0)
	*($2 + [16]) = $4
	*($2 + [24]) = $4
	*($2 + [40]) = (int_64)0
	$6 = CALL db_find_i64($4, $4, (int_64)-3659882349576847360, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $91(($2 + [16]), $6)
	if ( ((int_32)*($3 + [40]) == (int_32)($2 + [16])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [9626])
	$4 = *($0)
	if ( $3 ){ goto $label$3 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$3
	CALL $144(($2 + [16]), $3, $4)
	$4 = *($0)
	if ( $5 ){ goto $label$4 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$4
	CALL $145(($2 + [56]), $5, $4)
	$3 = *($2 + [40])
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($2 + [44])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$9 }
	CALL $9($0)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$8 }
	$5 = *(($2 + [40]))
	goto $label$6 
	
.LABEL $label$7
	$5 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($5)
	
.LABEL $label$5
	$6 = *($2 + [80])
	if ( ($6 == 0) ){ goto $label$10 }
	$7 = ($2 + [84])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	$3 = *($5 + [92])
	if ( ($3 == 0) ){ goto $label$15 }
	*(($5 + [96])) = $3
	CALL $9($3)
	
.LABEL $label$15
	$3 = *($5 + [80])
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [84])) = $3
	CALL $9($3)
	
.LABEL $label$16
	CALL $9($5)
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$13 }
	$5 = *(($2 + [80]))
	goto $label$11 
	
.LABEL $label$12
	$5 = $6
	
.LABEL $label$11
	*($7) = $6
	CALL $9($5)
	
.LABEL $label$10
	$global$0 = ($2 + [112])
}

void .FUNC $142 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [92])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [96])) = $2
	CALL $9($2)
	
.LABEL $label$11
	$2 = *($1 + [80])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [84])) = $2
	CALL $9($2)
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $72 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	int_32 $16
	int_64 $17
	float_64 $18
	int_64 $19
	float_32 $20
	int_64 $21
	float_32 $22
	int_64 $23
	$5 = ($global$0 - [1632])
	$global$0 = $5
	*(($6 = $5) + [1576]) = $1
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [8874])
	CALL require_auth($1)
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$1 }
	if ( ((int_32)*(CALL $31($4, [0])) != (int_32)[97]) ){ goto $label$27 }
	if ( ((int_32)*(CALL $31($4, [1])) != (int_32)[117]) ){ goto $label$27 }
	if ( ((int_32)*(CALL $31($4, [2])) != (int_32)[58]) ){ goto $label$27 }
	CALL $33($4, [0], [3])
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$7 = CALL $15([8898])
	if ( ($7 <= [8]) ){ goto $label$26 }
	CALL eosio_assert([0], [11869])
	goto $label$25 
	
.LABEL $label$27
	if ( ((int_32)*(CALL $31($4, [0])) != (int_32)[113]) ){ goto $label$28 }
	if ( ((int_32)*(CALL $31($4, [1])) != (int_32)[100]) ){ goto $label$28 }
	if ( ((int_32)*(CALL $31($4, [2])) != (int_32)[58]) ){ goto $label$28 }
	CALL $33($4, [0], [3])
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$7 = CALL $15([8898])
	if ( ($7 <= [8]) ){ goto $label$24 }
	CALL eosio_assert([0], [11869])
	goto $label$23 
	
.LABEL $label$28
	if ( ((int_32)*(CALL $31($4, [0])) != (int_32)[116]) ){ goto $label$31 }
	if ( ((int_32)*(CALL $31($4, [1])) != (int_32)[58]) ){ goto $label$31 }
	CALL $33($4, [0], [2])
	$2 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$7 = CALL $15([8898])
	if ( ($7 <= [8]) ){ goto $label$30 }
	CALL eosio_assert([0], [11869])
	goto $label$29 
	
.LABEL $label$31
	if ( ((int_32)*(CALL $31($4, [0])) != (int_32)[118]) ){ goto $label$32 }
	if ( ((int_32)*(CALL $31($4, [1])) != (int_32)[112]) ){ goto $label$32 }
	if ( ((int_32)*(CALL $31($4, [2])) != (int_32)[58]) ){ goto $label$32 }
	$5 = CALL $25(($6 + [1600]), $4)
	$8 = [0]
	CALL $33($4, [0], [3])
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$18 }
	$1 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$1 = $2
	$8 = [1]
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$33 }
	goto $label$18 
	
.LABEL $label$34
	$1 = $2
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$9 = ($7 + [1])
	$7 = $9
	if ( $8 ){ goto $label$35 }
	$8 = [1]
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$33 }
	goto $label$18 
	
.LABEL $label$32
	*($6 + [840]) = [8723]
	*($6 + [844]) = CALL $15([8723])
	*($6 + [456]) = *($6 + [840])
	$7 = CALL $60(($6 + [1440]), ($6 + [456]))
	if ( ((int_64)*($6 + [1576]) != (int_64)*($7)) ){ goto $label$42 }
	*($6 + [832]) = [8723]
	*($6 + [836]) = CALL $15([8723])
	*($6 + [432]) = *($6 + [832])
	$7 = CALL $60(($6 + [1440]), ($6 + [432]))
	CALL eosio_assert(((int_64)*($6 + [1576]) == (int_64)*($7)), [9834])
	$10 = CALL $25(($6 + [1600]), $4)
	$7 = CALL $34($4, [58], [0])
	CALL eosio_assert(((int_32)$7 != (int_32)[-1]), [8989])
	$9 = CALL $26(($6 + [1360]), $4, [0], $7, $4)
	$8 = [0]
	$5 = *($6 + [1360])
	$11 = CALL $15([9863])
	if ( ((int_32)$11 != (int_32)( *($9 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$43 }
	$8 = (CALL $35($9, [0], [-1], [9863], $11) == 0)
	
.LABEL $label$43
	CALL eosio_assert($8, [9872])
	CALL $33($4, [0], ($7 + [1]))
	$8 = CALL $34($4, [44], [0])
	CALL eosio_assert(((int_32)$8 != (int_32)[-1]), [8989])
	$5 = *($7)
	$11 = ($5 & [1])
	$7 = CALL $26(($6 + [808]), $4, [0], $8, $4)
	*($6 + [824]) = ( *($7 + [8]) ? ($7 + [1]) : $11 )
	*($6 + [828]) = ( *($7 + [4]) ? uint_32($5 >> [1]) : $11 )
	*($6 + [424]) = *($6 + [824])
	$12 = CALL $60(($6 + [1392]), ($6 + [424]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$44 }
	CALL $9(*(($7 + [8])))
	
.LABEL $label$44
	CALL $33($4, [0], ($8 + [1]))
	$7 = CALL $34($4, [44], [0])
	CALL eosio_assert(((int_32)$7 != (int_32)[-1]), [8989])
	CALL $33($4, [0], ($7 + [1]))
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$41 }
	$7 = uint_32($7 >> [1])
	$13 = ($4 + [1])
	goto $label$40 
	
.LABEL $label$42
	$8 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$38 }
	$1 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$45:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$14 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$46 }
	$1 = $14
	$8 = [1]
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$45 }
	goto $label$38 
	
.LABEL $label$46
	$1 = $14
	
.LOOP $label$47:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$39 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$9 = ($7 + [1])
	$7 = $9
	if ( $8 ){ goto $label$47 }
	$8 = [1]
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$45 }
	goto $label$38 
	
.LABEL $label$41
	$7 = *($4 + [4])
	$13 = *($4 + [8])
	
.LABEL $label$40
	$5 = [0]
	$8 = CALL $15([8716])
	if ( ($8 == 0) ){ goto $label$48 }
	$11 = ($13 + $7)
	if ( ((int_32)$7 < (int_32)$8) ){ goto $label$50 }
	$5 = $13
	
.LOOP $label$51:
	$7 = (($7 - $8) + [1])
	if ( ($7 == 0) ){ goto $label$50 }
	$7 = CALL $16($5, [58], $7)
	if ( ($7 == 0) ){ goto $label$50 }
	if ( (CALL $17($7, [8716], $8) == 0) ){ goto $label$49 }
	$5 = ($7 + [1])
	$7 = ($11 - $5)
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$51 }
	
.LABEL $label$50
	$7 = $11
	
.LABEL $label$49
	$5 = ( [-1] ? ($7 - $13) : ((int_32)$7 == (int_32)$11) )
	
.LABEL $label$48
	CALL eosio_assert(((int_32)$5 != (int_32)[-1]), [8989])
	CALL $26(($6 + [1440]), $4, [0], $5, $4)
	if ( (*($6 + [1360]) & [1]) ){ goto $label$53 }
	*($9 + [1]) = [0]
	*($6 + [1360]) = [0]
	goto $label$52 
	
.LABEL $label$53
	*(*($9 + [8])) = [0]
	*(($9 + [4])) = [0]
	
.LABEL $label$52
	CALL $29($9, [0])
	*((($6 + [1360]) + [8])) = *((($6 + [1440]) + [8]))
	*($6 + [1360]) = *($6 + [1440])
	$7 = [0]
	$8 = *($6 + [1360])
	$11 = CALL $15([9912])
	if ( ((int_32)$11 != (int_32)( *(($9 + [4])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$54 }
	$7 = (CALL $35($9, [0], [-1], [9912], $11) == 0)
	
.LABEL $label$54
	CALL eosio_assert($7, [9919])
	CALL $33($4, [0], ($5 + [1]))
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$56 }
	$7 = uint_32($7 >> [1])
	$13 = ($4 + [1])
	goto $label$55 
	
.LABEL $label$56
	$7 = *($4 + [4])
	$13 = *($4 + [8])
	
.LABEL $label$55
	$5 = [0]
	$8 = CALL $15([9957])
	if ( ($8 == 0) ){ goto $label$57 }
	$11 = ($13 + $7)
	if ( ((int_32)$7 < (int_32)$8) ){ goto $label$59 }
	$5 = $13
	
.LOOP $label$60:
	$7 = (($7 - $8) + [1])
	if ( ($7 == 0) ){ goto $label$59 }
	$7 = CALL $16($5, [46], $7)
	if ( ($7 == 0) ){ goto $label$59 }
	if ( (CALL $17($7, [9957], $8) == 0) ){ goto $label$58 }
	$5 = ($7 + [1])
	$7 = ($11 - $5)
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$60 }
	
.LABEL $label$59
	$7 = $11
	
.LABEL $label$58
	$5 = ( [-1] ? ($7 - $13) : ((int_32)$7 == (int_32)$11) )
	
.LABEL $label$57
	CALL eosio_assert(((int_32)$5 != (int_32)[-1]), [8989])
	$7 = CALL $26(($6 + [1440]), $4, [0], $5, $4)
	$15 = CALL $37($7, [0], [10])
	if ( ((*($6 + [1440]) & [1]) == 0) ){ goto $label$61 }
	CALL $9(*($7 + [8]))
	
.LABEL $label$61
	CALL $33($4, [0], ($5 + [1]))
	$7 = CALL $34($4, [32], [0])
	CALL eosio_assert(((int_32)$7 != (int_32)[-1]), [8989])
	$8 = CALL $26(($6 + [1440]), $4, [0], $7, $4)
	$16 = CALL $37($8, [0], [10])
	if ( ((*($6 + [1440]) & [1]) == 0) ){ goto $label$62 }
	CALL $9(*($8 + [8]))
	
.LABEL $label$62
	CALL $33($4, [0], ($7 + [1]))
	$7 = CALL $34($4, [44], [0])
	CALL eosio_assert(((int_32)$7 != (int_32)[-1]), [8989])
	CALL $26(($6 + [1440]), $4, [0], $7, $4)
	if ( (*($6 + [1360]) & [1]) ){ goto $label$64 }
	*($9 + [1]) = [0]
	*($6 + [1360]) = [0]
	goto $label$63 
	
.LABEL $label$64
	*(*($9 + [8])) = [0]
	*(($9 + [4])) = [0]
	
.LABEL $label$63
	CALL $29($9, [0])
	*((($6 + [1360]) + [8])) = *((($6 + [1440]) + [8]))
	*($6 + [1360]) = *($6 + [1440])
	$8 = [0]
	$5 = *($6 + [1360])
	$11 = CALL $15([8898])
	if ( ((int_32)$11 != (int_32)( *(($9 + [4])) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$65 }
	$8 = (CALL $35($9, [0], [-1], [8898], $11) == 0)
	
.LABEL $label$65
	CALL eosio_assert($8, [9959])
	CALL $33($4, [0], ($7 + [1]))
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$67 }
	$7 = uint_32($7 >> [1])
	$13 = ($4 + [1])
	goto $label$66 
	
.LABEL $label$67
	$7 = *($4 + [4])
	$13 = *($4 + [8])
	
.LABEL $label$66
	$5 = [0]
	$8 = CALL $15([8716])
	if ( ($8 == 0) ){ goto $label$68 }
	$11 = ($13 + $7)
	if ( ((int_32)$7 < (int_32)$8) ){ goto $label$70 }
	$5 = $13
	
.LOOP $label$71:
	$7 = (($7 - $8) + [1])
	if ( ($7 == 0) ){ goto $label$70 }
	$7 = CALL $16($5, [58], $7)
	if ( ($7 == 0) ){ goto $label$70 }
	if ( (CALL $17($7, [8716], $8) == 0) ){ goto $label$69 }
	$5 = ($7 + [1])
	$7 = ($11 - $5)
	if ( ((int_32)$7 >= (int_32)$8) ){ goto $label$71 }
	
.LABEL $label$70
	$7 = $11
	
.LABEL $label$69
	$5 = ( [-1] ? ($7 - $13) : ((int_32)$7 == (int_32)$11) )
	
.LABEL $label$68
	CALL eosio_assert(((int_32)$5 != (int_32)[-1]), [8989])
	CALL $26(($6 + [1440]), $4, [0], $5, $4)
	if ( (*($6 + [1360]) & [1]) ){ goto $label$73 }
	*($9 + [1]) = [0]
	*($6 + [1360]) = [0]
	goto $label$72 
	
.LABEL $label$73
	*(*($9 + [8])) = [0]
	*(($9 + [4])) = [0]
	
.LABEL $label$72
	$8 = ((int_32)$15 * (int_32)[10000])
	CALL $29($9, [0])
	*((($6 + [1360]) + [8])) = *((($6 + [1440]) + [8]))
	*($6 + [1360]) = *($6 + [1440])
	$7 = [0]
	$11 = *($6 + [1360])
	$13 = CALL $15([9985])
	if ( ((int_32)$13 != (int_32)( *(($9 + [4])) ? uint_32($11 >> [1]) : ($11 & [1]) )) ){ goto $label$74 }
	$7 = (CALL $35($9, [0], [-1], [9985], $13) == 0)
	
.LABEL $label$74
	$1 = (CASTING int_64)(int_32 $8)
	$14 = (CASTING int_64)(int_32 $16)
	CALL eosio_assert($7, [9990])
	CALL $33($4, [0], ($5 + [1]))
	CALL $36(($6 + [1440]), [10026], $4)
	if ( (*($6 + [1360]) & [1]) ){ goto $label$76 }
	*($9 + [1]) = [0]
	*($6 + [1360]) = [0]
	goto $label$75 
	
.LABEL $label$76
	*(*($9 + [8])) = [0]
	*(($9 + [4])) = [0]
	
.LABEL $label$75
	$17 = ((int_64)$14 + (int_64)$1)
	$8 = [0]
	CALL $29($9, [0])
	*((($6 + [1360]) + [8])) = *((($6 + [1440]) + [8]))
	*($6 + [1360]) = *($6 + [1440])
	if ( ((int_32)*(CALL $31($4, [0])) != (int_32)[118]) ){ goto $label$77 }
	if ( ((int_32)*(CALL $31($4, [1])) != (int_32)[112]) ){ goto $label$77 }
	if ( ((int_32)*(CALL $31($4, [2])) != (int_32)[58]) ){ goto $label$77 }
	$3 = [0]
	CALL $33($4, [0], [3])
	*($6 + [792]) = [9717]
	*($6 + [796]) = CALL $15([9717])
	*($6 + [400]) = *($6 + [792])
	$7 = CALL $60(($6 + [800]), ($6 + [400]))
	*($6 + [784]) = [9717]
	*($6 + [788]) = CALL $15([9717])
	*($6 + [392]) = *($6 + [784])
	CALL $60(($6 + [1440]), ($6 + [392]))
	*(($6 + [1544])) = [0]
	*($6 + [1528]) = (int_64)-1
	$1 = *($7)
	*($6 + [1512]) = $1
	*($6 + [1520]) = (int_64)6138559790171559280
	*($6 + [1536]) = (int_64)0
	$7 = CALL db_lowerbound_i64($1, (int_64)6138559790171559280, (int_64)-4417015285706391552, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	$3 = CALL $73(($6 + [1512]), $7)
	goto $label$13 
	
.LABEL $label$77
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$36 }
	$1 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$78:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$14 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$79 }
	$1 = $14
	$8 = [1]
	$5 = $7
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$78 }
	goto $label$36 
	
.LABEL $label$79
	$1 = $14
	
.LOOP $label$80:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$37 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $8 ){ goto $label$80 }
	$8 = [1]
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$78 }
	goto $label$36 
	
.LABEL $label$39
	$8 = [0]
	
.LABEL $label$38
	CALL eosio_assert($8, [9639])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [9656])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$82 }
	$7 = uint_32($7 >> [1])
	goto $label$81 
	
.LABEL $label$82
	$7 = *($4 + [4])
	
.LABEL $label$81
	CALL eosio_assert(($7 <= [257]), [9688])
	$7 = CALL $15([8898])
	if ( ($7 <= [8]) ){ goto $label$84 }
	CALL eosio_assert([0], [11869])
	goto $label$83 
	
.LABEL $label$84
	if ( ($7 == 0) ){ goto $label$22 }
	
.LABEL $label$83
	$1 = (int_64)0
	
.LOOP $label$85:
	$8 = *(($7 + [8897]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$86 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$86
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$85 }
	if ( ((int_64)*($3 + [8]) != (int_64)((int_64)((int_64)$1 << (int_64)8) | (int_64)4)) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$37
	$8 = [0]
	
.LABEL $label$36
	CALL eosio_assert($8, [9639])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [9656])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$88 }
	$7 = uint_32($7 >> [1])
	goto $label$87 
	
.LABEL $label$88
	$7 = *($4 + [4])
	
.LABEL $label$87
	CALL eosio_assert(($7 <= [257]), [9688])
	$7 = CALL $15([8898])
	if ( ($7 <= [8]) ){ goto $label$90 }
	CALL eosio_assert([0], [11869])
	goto $label$89 
	
.LABEL $label$90
	if ( ($7 == 0) ){ goto $label$21 }
	
.LABEL $label$89
	$1 = (int_64)0
	
.LOOP $label$91:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$92 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$92
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$91 }
	if ( ((int_64)*($3 + [8]) != (int_64)((int_64)((int_64)$1 << (int_64)8) | (int_64)4)) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$30
	if ( ($7 == 0) ){ goto $label$20 }
	
.LABEL $label$29
	$1 = (int_64)0
	
.LOOP $label$93:
	$8 = *(($7 + [8897]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$94 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$94
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$93 }
	goto $label$7 
	
.LABEL $label$26
	if ( ($7 == 0) ){ goto $label$17 }
	
.LABEL $label$25
	$1 = (int_64)0
	
.LOOP $label$95:
	$8 = *(($7 + [8897]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$96 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$96
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$95 }
	goto $label$8 
	
.LABEL $label$24
	if ( ($7 == 0) ){ goto $label$16 }
	
.LABEL $label$23
	$1 = (int_64)0
	
.LOOP $label$97:
	$8 = *(($7 + [8897]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$98 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$98
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$97 }
	goto $label$9 
	
.LABEL $label$22
	if ( ((int_64)*($3 + [8]) == (int_64)4) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$21
	if ( ((int_64)*($3 + [8]) == (int_64)4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$20
	$1 = (int_64)0
	goto $label$7 
	
.LABEL $label$19
	$8 = [0]
	
.LABEL $label$18
	CALL eosio_assert($8, [9639])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [9656])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$100 }
	$7 = uint_32($7 >> [1])
	goto $label$99 
	
.LABEL $label$100
	$7 = *($4 + [4])
	
.LABEL $label$99
	CALL eosio_assert(($7 <= [257]), [9688])
	*($6 + [1080]) = [9717]
	*($6 + [1084]) = CALL $15([9717])
	*($6 + [256]) = *($6 + [1080])
	$7 = CALL $60(($6 + [1088]), ($6 + [256]))
	*($6 + [1072]) = [9717]
	*($6 + [1076]) = CALL $15([9717])
	*($6 + [248]) = *($6 + [1072])
	CALL $60(($6 + [1440]), ($6 + [248]))
	*(($6 + [1544])) = [0]
	*($6 + [1528]) = (int_64)-1
	$1 = *($7)
	*($6 + [1512]) = $1
	*($6 + [1520]) = (int_64)6138559790171559280
	*($6 + [1536]) = (int_64)0
	$9 = [0]
	$7 = CALL db_lowerbound_i64($1, (int_64)6138559790171559280, (int_64)-4417015285706391552, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$101 }
	$9 = CALL $73(($6 + [1512]), $7)
	
.LABEL $label$101
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9730])
	CALL eosio_assert(((int_64)*($3) >= (int_64)*($9 + [56])), [9771])
	CALL eosio_assert(((int_64)*($3) <= (int_64)*($9 + [72])), [9789])
	$1 = *($3)
	$4 = *($9 + [32])
	$7 = CALL $15([8898])
	$8 = ($7 <= [8])
	$20 = ((float_32)((float_32)(CASTING float_32)(uint_32 $4) / (float_32)(float_32)100) * (float_32)(CASTING float_32)(int_64 $1))
	if ( ((float_32)(float_32)|$20| < (float_32)(float_32)9223372036854775808) ){ goto $label$103 }
	$17 = (int_64)-9223372036854775808
	if ( $8 ){ goto $label$102 }
	goto $label$12 
	
.LABEL $label$103
	$17 = (Rounds 0)($20)
	if ( ($8 == 0) ){ goto $label$12 }
	
.LABEL $label$102
	if ( ($7 == 0) ){ goto $label$15 }
	goto $label$11 
	
.LABEL $label$17
	$1 = (int_64)0
	goto $label$8 
	
.LABEL $label$16
	$1 = (int_64)0
	goto $label$9 
	
.LABEL $label$15
	$1 = (int_64)0
	goto $label$10 
	
.LABEL $label$14
	CALL eosio_assert([0], [9730])
	
.LABEL $label$13
	$4 = *($3 + [32])
	$7 = CALL $15([8898])
	$8 = ($7 <= [8])
	$20 = (CASTING float_32)(uint_64 $17)
	$22 = ((float_32)((float_32)(CASTING float_32)(uint_32 $4) / (float_32)(float_32)100) * (float_32)$20)
	if ( ((float_32)(float_32)|$22| < (float_32)(float_32)9223372036854775808) ){ goto $label$108 }
	$19 = (int_64)-9223372036854775808
	if ( $8 ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$108
	$19 = (Rounds 0)($22)
	if ( ($8 == 0) ){ goto $label$106 }
	
.LABEL $label$107
	if ( $7 ){ goto $label$105 }
	$1 = (int_64)0
	goto $label$104 
	
.LABEL $label$106
	CALL eosio_assert([0], [11869])
	
.LABEL $label$105
	$1 = (int_64)0
	
.LOOP $label$109:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$110 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$110
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$109 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$104
	if ( (uint_64)(((int_64)$19 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$111 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$111
	$21 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$114:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$113 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$115 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$114 }
	goto $label$112 
	
.LABEL $label$115
	$1 = $2
	
.LOOP $label$116:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$113 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$116 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$114 }
	goto $label$112 
	
.LABEL $label$113
	CALL eosio_assert([0], [12016])
	
.LABEL $label$112
	$4 = *($3 + [36])
	$7 = CALL $15([8898])
	$8 = ($7 <= [8])
	$22 = ((float_32)((float_32)(CASTING float_32)(uint_32 $4) / (float_32)(float_32)100) * (float_32)$20)
	if ( ((float_32)(float_32)|$22| < (float_32)(float_32)9223372036854775808) ){ goto $label$121 }
	$14 = (int_64)-9223372036854775808
	if ( $8 ){ goto $label$120 }
	goto $label$119 
	
.LABEL $label$121
	$14 = (Rounds 0)($22)
	if ( ($8 == 0) ){ goto $label$119 }
	
.LABEL $label$120
	if ( $7 ){ goto $label$118 }
	$1 = (int_64)0
	goto $label$117 
	
.LABEL $label$119
	CALL eosio_assert([0], [11869])
	
.LABEL $label$118
	$1 = (int_64)0
	
.LOOP $label$122:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$123 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$123
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$122 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$117
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$124 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$124
	$23 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$127:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$126 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$128 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$127 }
	goto $label$125 
	
.LABEL $label$128
	$1 = $2
	
.LOOP $label$129:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$126 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$129 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$127 }
	goto $label$125 
	
.LABEL $label$126
	CALL eosio_assert([0], [12016])
	
.LABEL $label$125
	$1 = *($0)
	*($6 + [768]) = [9370]
	*($6 + [772]) = CALL $15([9370])
	*($6 + [384]) = *($6 + [768])
	$7 = CALL $60(($6 + [776]), ($6 + [384]))
	*($6 + [1296]) = $1
	*($6 + [1304]) = *($7)
	*($6 + [752]) = [9377]
	*($6 + [756]) = CALL $15([9377])
	*($6 + [376]) = *($6 + [752])
	$8 = CALL $60(($6 + [760]), ($6 + [376]))
	*($6 + [736]) = [9389]
	*($6 + [740]) = CALL $15([9389])
	*($6 + [368]) = *($6 + [736])
	$5 = CALL $60(($6 + [744]), ($6 + [368]))
	*($6 + [728]) = [9424]
	*($6 + [732]) = CALL $15([9424])
	*($6 + [360]) = *($6 + [728])
	$11 = CALL $60(($6 + [1376]), ($6 + [360]))
	*(($6 + [1592])) = [0]
	*($6 + [1584]) = (int_64)0
	$7 = CALL $15([9437])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$134 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$137 }
	*($6 + [1584]) = ($7 << [1])
	$4 = (($6 + [1584]) | [1])
	if ( $7 ){ goto $label$136 }
	goto $label$135 
	
.LABEL $label$137
	$13 = (($7 + [16]) & [-16])
	$4 = CALL $7($13)
	*($6 + [1584]) = ($13 | [1])
	*($6 + [1592]) = $4
	*($6 + [1588]) = $7
	
.LABEL $label$136
	CALL memcpy($4, [9437], $7)
	
.LABEL $label$135
	*(($4 + $7)) = [0]
	*(($6 + [1464])) = $23
	$7 = ($6 + [1592])
	*(($6 + [1480])) = *($7)
	*($7) = [0]
	*($6 + [1456]) = $14
	*($6 + [1440]) = *($0)
	*($6 + [1448]) = *($11)
	*($6 + [1472]) = *($6 + [1584])
	*($6 + [1584]) = (int_64)0
	$7 = CALL $74(($6 + [1400]), ($6 + [1296]), *($8), *($5), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$138 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$138
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$139 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$139
	if ( ((*(($6 + [1472])) & [1]) == 0) ){ goto $label$140 }
	CALL $9(*(($6 + [1480])))
	
.LABEL $label$140
	if ( ((*($6 + [1584]) & [1]) == 0) ){ goto $label$141 }
	CALL $9(*(($6 + [1592])))
	
.LABEL $label$141
	$1 = *($0)
	*($6 + [712]) = [9370]
	*($6 + [716]) = CALL $15([9370])
	*($6 + [352]) = *($6 + [712])
	$7 = CALL $60(($6 + [720]), ($6 + [352]))
	*($6 + [1296]) = $1
	*($6 + [1304]) = *($7)
	*($6 + [696]) = [9377]
	*($6 + [700]) = CALL $15([9377])
	*($6 + [344]) = *($6 + [696])
	$8 = CALL $60(($6 + [704]), ($6 + [344]))
	*($6 + [680]) = [9389]
	*($6 + [684]) = CALL $15([9389])
	*($6 + [336]) = *($6 + [680])
	$5 = CALL $60(($6 + [688]), ($6 + [336]))
	*($6 + [672]) = [9447]
	*($6 + [676]) = CALL $15([9447])
	*($6 + [328]) = *($6 + [672])
	$11 = CALL $60(($6 + [1376]), ($6 + [328]))
	*(($6 + [1592])) = [0]
	*($6 + [1584]) = (int_64)0
	$7 = CALL $15([9460])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$133 }
	$1 = (int_64))($19 - $14)
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$144 }
	*($6 + [1584]) = ($7 << [1])
	$4 = (($6 + [1584]) | [1])
	if ( $7 ){ goto $label$143 }
	goto $label$142 
	
.LABEL $label$144
	$13 = (($7 + [16]) & [-16])
	$4 = CALL $7($13)
	*($6 + [1584]) = ($13 | [1])
	*($6 + [1592]) = $4
	*($6 + [1588]) = $7
	
.LABEL $label$143
	CALL memcpy($4, [9460], $7)
	
.LABEL $label$142
	*(($4 + $7)) = [0]
	*(($6 + [1464])) = $21
	$7 = ($6 + [1592])
	*(($6 + [1480])) = *($7)
	*($7) = [0]
	*($6 + [1456]) = $1
	*($6 + [1440]) = *($0)
	*($6 + [1448]) = *($11)
	*($6 + [1472]) = *($6 + [1584])
	*($6 + [1584]) = (int_64)0
	$7 = CALL $74(($6 + [1400]), ($6 + [1296]), *($8), *($5), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$145 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$145
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$146 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$146
	if ( ((*(($6 + [1472])) & [1]) == 0) ){ goto $label$147 }
	CALL $9(*(($6 + [1480])))
	
.LABEL $label$147
	if ( ((*($6 + [1584]) & [1]) == 0) ){ goto $label$148 }
	CALL $9(*(($6 + [1592])))
	
.LABEL $label$148
	$1 = *($3 + [24])
	$2 = *($0)
	*($6 + [656]) = [9370]
	*($6 + [660]) = CALL $15([9370])
	*($6 + [320]) = *($6 + [656])
	$7 = CALL $60(($6 + [664]), ($6 + [320]))
	*($6 + [1296]) = $2
	*($6 + [1304]) = *($7)
	*($6 + [640]) = [9377]
	*($6 + [644]) = CALL $15([9377])
	*($6 + [312]) = *($6 + [640])
	$3 = CALL $60(($6 + [648]), ($6 + [312]))
	*($6 + [624]) = [9389]
	*($6 + [628]) = CALL $15([9389])
	*($6 + [304]) = *($6 + [624])
	$5 = CALL $60(($6 + [632]), ($6 + [304]))
	*($6 + [616]) = [9807]
	*($6 + [620]) = CALL $15([9807])
	*($6 + [296]) = *($6 + [616])
	$11 = CALL $60(($6 + [1376]), ($6 + [296]))
	$7 = CALL $15([8898])
	$4 = ($7 <= [8])
	$20 = ((float_32)((float_32)(CASTING float_32)(uint_64 $1) / (float_32)(float_32)1e4) * (float_32)$20)
	if ( ((float_32)(float_32)|$20| < (float_32)(float_32)9223372036854775808) ){ goto $label$150 }
	$14 = (int_64)-9223372036854775808
	if ( $4 ){ goto $label$149 }
	goto $label$132 
	
.LABEL $label$150
	$14 = (Rounds 0)($20)
	if ( ($4 == 0) ){ goto $label$132 }
	
.LABEL $label$149
	if ( $7 ){ goto $label$131 }
	$1 = (int_64)0
	goto $label$130 
	
.LABEL $label$134
	CALL $24(($6 + [1584]))
	
.LABEL $label$133
	CALL $24(($6 + [1584]))
	
.LABEL $label$132
	CALL eosio_assert([0], [11869])
	
.LABEL $label$131
	$1 = (int_64)0
	
.LOOP $label$151:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$152 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$152
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$151 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$130
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$153 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$153
	$19 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$156:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$155 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$157 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$156 }
	goto $label$154 
	
.LABEL $label$157
	$1 = $2
	
.LOOP $label$158:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$155 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$158 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$156 }
	goto $label$154 
	
.LABEL $label$155
	CALL eosio_assert([0], [12016])
	
.LABEL $label$154
	*(($6 + [1592])) = [0]
	*($6 + [1584]) = (int_64)0
	$7 = CALL $15([9820])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$160 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$163 }
	*($6 + [1584]) = ($7 << [1])
	$4 = (($6 + [1584]) | [1])
	if ( $7 ){ goto $label$162 }
	goto $label$161 
	
.LABEL $label$163
	$8 = (($7 + [16]) & [-16])
	$4 = CALL $7($8)
	*($6 + [1584]) = ($8 | [1])
	*($6 + [1592]) = $4
	*($6 + [1588]) = $7
	
.LABEL $label$162
	CALL memcpy($4, [9820], $7)
	
.LABEL $label$161
	*(($4 + $7)) = [0]
	*(($6 + [1464])) = $19
	$7 = ($6 + [1592])
	*(($6 + [1480])) = *($7)
	*($7) = [0]
	*($6 + [1456]) = $14
	*($6 + [1440]) = *($0)
	*($6 + [1448]) = *($11)
	*($6 + [1472]) = *($6 + [1584])
	*($6 + [1584]) = (int_64)0
	$7 = CALL $74(($6 + [1400]), ($6 + [1296]), *($3), *($5), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$164 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$164
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$165 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$165
	if ( ((*(($6 + [1472])) & [1]) == 0) ){ goto $label$166 }
	CALL $9(*(($6 + [1480])))
	
.LABEL $label$166
	if ( ((*($6 + [1584]) & [1]) == 0) ){ goto $label$167 }
	CALL $9(*(($6 + [1592])))
	
.LABEL $label$167
	$1 = *($0)
	*($6 + [600]) = [9370]
	*($6 + [604]) = CALL $15([9370])
	*($6 + [288]) = *($6 + [600])
	$7 = CALL $60(($6 + [608]), ($6 + [288]))
	*($6 + [1296]) = $1
	*($6 + [584]) = [9717]
	*($6 + [1304]) = *($7)
	*($6 + [588]) = CALL $15([9717])
	*($6 + [280]) = *($6 + [584])
	$5 = CALL $60(($6 + [592]), ($6 + [280]))
	*($6 + [568]) = [9828]
	*($6 + [572]) = CALL $15([9828])
	*($6 + [272]) = *($6 + [568])
	$11 = CALL $60(($6 + [576]), ($6 + [272]))
	*($6 + [560]) = [9717]
	*($6 + [564]) = CALL $15([9717])
	*($6 + [264]) = *($6 + [560])
	$13 = CALL $60(($6 + [1352]), ($6 + [264]))
	$7 = CALL $15([8898])
	if ( ($7 <= [8]) ){ goto $label$170 }
	CALL eosio_assert([0], [11869])
	goto $label$169 
	
.LABEL $label$170
	if ( ($7 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$1 = (int_64)0
	
.LOOP $label$171:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$172 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$172
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$171 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$159 
	
.LABEL $label$168
	$1 = (int_64)0
	goto $label$159 
	
.LABEL $label$160
	CALL $24(($6 + [1584]))
	
.LABEL $label$159
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$173 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$173
	$14 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$176:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$175 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$177 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$176 }
	goto $label$174 
	
.LABEL $label$177
	$1 = $2
	
.LOOP $label$178:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$175 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$178 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$176 }
	goto $label$174 
	
.LABEL $label$175
	CALL eosio_assert([0], [12016])
	
.LABEL $label$174
	*(($6 + [1384])) = [0]
	*($6 + [1376]) = (int_64)0
	$7 = CALL $15([10032])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$185 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$188 }
	*($6 + [1376]) = ($7 << [1])
	$8 = (($6 + [1376]) | [1])
	if ( $7 ){ goto $label$187 }
	goto $label$186 
	
.LABEL $label$188
	$4 = (($7 + [16]) & [-16])
	$8 = CALL $7($4)
	*($6 + [1376]) = ($4 | [1])
	*($6 + [1384]) = $8
	*($6 + [1380]) = $7
	
.LABEL $label$187
	CALL memcpy($8, [10032], $7)
	
.LABEL $label$186
	$4 = [0]
	*(($8 + $7)) = [0]
	$1 = *($12)
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$192 }
	$8 = *([0] + [12036])
	
.LOOP $label$194:
	*((($6 + [1440]) + ($7 = $4))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$4 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$193 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$194 }
	
.LABEL $label$193
	*(($6 + [1240])) = [0]
	*($6 + [1232]) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$191 }
	*($6 + [1232]) = ($4 << [1])
	$8 = (($6 + [1232]) | [1])
	goto $label$190 
	
.LABEL $label$192
	*(($6 + [1240])) = [0]
	*($6 + [1232]) = (int_64)0
	*($6 + [1232]) = [0]
	$7 = (($6 + [1232]) | [1])
	$4 = $7
	goto $label$189 
	
.LABEL $label$191
	$3 = (($4 + [16]) & [-16])
	$8 = CALL $7($3)
	*($6 + [1232]) = ($3 | [1])
	*($6 + [1240]) = $8
	*($6 + [1236]) = $4
	
.LABEL $label$190
	$3 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$195:
	*(($8 + $7)) = *((($6 + [1440]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$195 }
	$4 = ($8 + $4)
	$7 = (($6 + [1232]) | [1])
	
.LABEL $label$189
	*($4) = [0]
	$4 = *($6 + [1232])
	$8 = ($4 & [1])
	$7 = CALL $32(($6 + [1376]), ( *($6 + [1240]) ? $7 : $8 ), ( *($6 + [1236]) ? uint_32($4 >> [1]) : $8 ))
	$4 = ($7 + [8])
	*((($6 + [1584]) + [8])) = *($4)
	*($6 + [1584]) = *($7)
	*($7) = (int_64)0
	*($4) = [0]
	$7 = *($6 + [1360])
	$4 = ($7 & [1])
	$7 = CALL $32(($6 + [1584]), ( *($9 + [8]) ? ($9 + [1]) : $4 ), ( *(($9 + [4])) ? uint_32($7 >> [1]) : $4 ))
	$4 = *($7 + [8])
	*($7 + [8]) = [0]
	$1 = *($7)
	*($7) = (int_64)0
	*(($6 + [1464])) = $14
	*(($6 + [1480])) = $4
	*($6 + [1440]) = *($0)
	*($6 + [1448]) = *($13)
	*($6 + [1456]) = $17
	*($6 + [1472]) = $1
	$7 = CALL $74(($6 + [1400]), ($6 + [1296]), *($5), *($11), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$196 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$196
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$197 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$197
	if ( (*($6 + [1472]) & [1]) ){ goto $label$199 }
	if ( (*($6 + [1584]) & [1]) ){ goto $label$198 }
	goto $label$184 
	
.LABEL $label$199
	CALL $9(*(($6 + [1480])))
	if ( ((*($6 + [1584]) & [1]) == 0) ){ goto $label$184 }
	
.LABEL $label$198
	CALL $9(*($6 + [1592]))
	$7 = [1]
	if ( ((*($6 + [1232]) & [1]) == 0) ){ goto $label$183 }
	goto $label$182 
	
.LABEL $label$185
	CALL $24(($6 + [1376]))
	
.LABEL $label$184
	$7 = [1]
	if ( (*($6 + [1232]) & [1]) ){ goto $label$182 }
	
.LABEL $label$183
	if ( (*($6 + [1376]) & $7) ){ goto $label$181 }
	goto $label$180 
	
.LABEL $label$182
	CALL $9(*(($6 + [1240])))
	if ( ((*($6 + [1376]) & $7) == 0) ){ goto $label$180 }
	
.LABEL $label$181
	CALL $9(*($6 + [1384]))
	$8 = *($6 + [1536])
	if ( ($8 == 0) ){ goto $label$5 }
	goto $label$179 
	
.LABEL $label$180
	$8 = *($6 + [1536])
	if ( ($8 == 0) ){ goto $label$5 }
	
.LABEL $label$179
	$0 = ($6 + [1540])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$201 }
	
.LOOP $label$202:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$203 }
	CALL $9($4)
	
.LABEL $label$203
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$202 }
	$7 = *(($6 + [1536]))
	goto $label$200 
	
.LABEL $label$201
	$7 = $8
	
.LABEL $label$200
	*($0) = $8
	CALL $9($7)
	goto $label$5 
	
.LABEL $label$12
	CALL eosio_assert([0], [11869])
	
.LABEL $label$11
	$1 = (int_64)0
	
.LOOP $label$204:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$205 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$205
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$204 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$10
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$206 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$206
	$19 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$209:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$208 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$210 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$209 }
	goto $label$207 
	
.LABEL $label$210
	$1 = $2
	
.LOOP $label$211:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$208 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$211 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$209 }
	goto $label$207 
	
.LABEL $label$208
	CALL eosio_assert([0], [12016])
	
.LABEL $label$207
	$1 = *($3)
	$4 = *($9 + [36])
	$7 = CALL $15([8898])
	$8 = ($7 <= [8])
	$20 = ((float_32)((float_32)(CASTING float_32)(uint_32 $4) / (float_32)(float_32)100) * (float_32)(CASTING float_32)(int_64 $1))
	if ( ((float_32)(float_32)|$20| < (float_32)(float_32)9223372036854775808) ){ goto $label$216 }
	$14 = (int_64)-9223372036854775808
	if ( $8 ){ goto $label$215 }
	goto $label$214 
	
.LABEL $label$216
	$14 = (Rounds 0)($20)
	if ( ($8 == 0) ){ goto $label$214 }
	
.LABEL $label$215
	if ( $7 ){ goto $label$213 }
	$1 = (int_64)0
	goto $label$212 
	
.LABEL $label$214
	CALL eosio_assert([0], [11869])
	
.LABEL $label$213
	$1 = (int_64)0
	
.LOOP $label$217:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$218 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$218
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$217 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$212
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$219 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$219
	$21 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$222:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$221 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$223 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$222 }
	goto $label$220 
	
.LABEL $label$223
	$1 = $2
	
.LOOP $label$224:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$221 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$224 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$222 }
	goto $label$220 
	
.LABEL $label$221
	CALL eosio_assert([0], [12016])
	
.LABEL $label$220
	$1 = *($0)
	*($6 + [1056]) = [9370]
	*($6 + [1060]) = CALL $15([9370])
	*($6 + [240]) = *($6 + [1056])
	$7 = CALL $60(($6 + [1064]), ($6 + [240]))
	*($6 + [1296]) = $1
	*($6 + [1304]) = *($7)
	*($6 + [1040]) = [9377]
	*($6 + [1044]) = CALL $15([9377])
	*($6 + [232]) = *($6 + [1040])
	$8 = CALL $60(($6 + [1048]), ($6 + [232]))
	*($6 + [1024]) = [9389]
	*($6 + [1028]) = CALL $15([9389])
	*($6 + [224]) = *($6 + [1024])
	$11 = CALL $60(($6 + [1032]), ($6 + [224]))
	*($6 + [1016]) = [9424]
	*($6 + [1020]) = CALL $15([9424])
	*($6 + [216]) = *($6 + [1016])
	$13 = CALL $60(($6 + [1584]), ($6 + [216]))
	*(($6 + [1368])) = [0]
	*($6 + [1360]) = (int_64)0
	$7 = CALL $15([9437])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$229 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$232 }
	*($6 + [1360]) = ($7 << [1])
	$4 = (($6 + [1360]) | [1])
	if ( $7 ){ goto $label$231 }
	goto $label$230 
	
.LABEL $label$232
	$15 = (($7 + [16]) & [-16])
	$4 = CALL $7($15)
	*($6 + [1360]) = ($15 | [1])
	*($6 + [1368]) = $4
	*($6 + [1364]) = $7
	
.LABEL $label$231
	CALL memcpy($4, [9437], $7)
	
.LABEL $label$230
	*(($4 + $7)) = [0]
	*(($6 + [1464])) = $21
	$7 = ($6 + [1368])
	*(($6 + [1480])) = *($7)
	*($7) = [0]
	*($6 + [1456]) = $14
	*($6 + [1440]) = *($0)
	*($6 + [1448]) = *($13)
	*($6 + [1472]) = *($6 + [1360])
	*($6 + [1360]) = (int_64)0
	$7 = CALL $74(($6 + [1400]), ($6 + [1296]), *($8), *($11), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$233 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$233
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$234 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$234
	if ( ((*(($6 + [1472])) & [1]) == 0) ){ goto $label$235 }
	CALL $9(*(($6 + [1480])))
	
.LABEL $label$235
	if ( ((*($6 + [1360]) & [1]) == 0) ){ goto $label$236 }
	CALL $9(*(($6 + [1368])))
	
.LABEL $label$236
	$1 = *($0)
	*($6 + [1000]) = [9370]
	*($6 + [1004]) = CALL $15([9370])
	*($6 + [208]) = *($6 + [1000])
	$7 = CALL $60(($6 + [1008]), ($6 + [208]))
	*($6 + [1296]) = $1
	*($6 + [1304]) = *($7)
	*($6 + [984]) = [9377]
	*($6 + [988]) = CALL $15([9377])
	*($6 + [200]) = *($6 + [984])
	$8 = CALL $60(($6 + [992]), ($6 + [200]))
	*($6 + [968]) = [9389]
	*($6 + [972]) = CALL $15([9389])
	*($6 + [192]) = *($6 + [968])
	$11 = CALL $60(($6 + [976]), ($6 + [192]))
	*($6 + [960]) = [9447]
	*($6 + [964]) = CALL $15([9447])
	*($6 + [184]) = *($6 + [960])
	$13 = CALL $60(($6 + [1584]), ($6 + [184]))
	*(($6 + [1368])) = [0]
	*($6 + [1360]) = (int_64)0
	$7 = CALL $15([9460])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$228 }
	$1 = (int_64))($17 - $14)
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$239 }
	*($6 + [1360]) = ($7 << [1])
	$4 = (($6 + [1360]) | [1])
	if ( $7 ){ goto $label$238 }
	goto $label$237 
	
.LABEL $label$239
	$15 = (($7 + [16]) & [-16])
	$4 = CALL $7($15)
	*($6 + [1360]) = ($15 | [1])
	*($6 + [1368]) = $4
	*($6 + [1364]) = $7
	
.LABEL $label$238
	CALL memcpy($4, [9460], $7)
	
.LABEL $label$237
	*(($4 + $7)) = [0]
	*(($6 + [1464])) = $19
	$7 = ($6 + [1368])
	*(($6 + [1480])) = *($7)
	*($7) = [0]
	*($6 + [1456]) = $1
	*($6 + [1440]) = *($0)
	*($6 + [1448]) = *($13)
	*($6 + [1472]) = *($6 + [1360])
	*($6 + [1360]) = (int_64)0
	$7 = CALL $74(($6 + [1400]), ($6 + [1296]), *($8), *($11), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$240 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$240
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$241 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$241
	if ( ((*(($6 + [1472])) & [1]) == 0) ){ goto $label$242 }
	CALL $9(*(($6 + [1480])))
	
.LABEL $label$242
	if ( ((*($6 + [1360]) & [1]) == 0) ){ goto $label$243 }
	CALL $9(*(($6 + [1368])))
	
.LABEL $label$243
	$1 = *($3)
	$2 = *($9 + [24])
	$14 = *($0)
	*($6 + [944]) = [9370]
	*($6 + [948]) = CALL $15([9370])
	*($6 + [176]) = *($6 + [944])
	$7 = CALL $60(($6 + [952]), ($6 + [176]))
	*($6 + [1296]) = $14
	*($6 + [1304]) = *($7)
	*($6 + [928]) = [9377]
	*($6 + [932]) = CALL $15([9377])
	*($6 + [168]) = *($6 + [928])
	$9 = CALL $60(($6 + [936]), ($6 + [168]))
	*($6 + [912]) = [9389]
	*($6 + [916]) = CALL $15([9389])
	*($6 + [160]) = *($6 + [912])
	$11 = CALL $60(($6 + [920]), ($6 + [160]))
	$17 = *($0)
	*($6 + [904]) = [9807]
	*($6 + [908]) = CALL $15([9807])
	*($6 + [152]) = *($6 + [904])
	$13 = CALL $60(($6 + [1584]), ($6 + [152]))
	$7 = CALL $15([8898])
	$4 = ($7 <= [8])
	$20 = ((float_32)((float_32)(CASTING float_32)(uint_64 $2) / (float_32)(float_32)1e4) * (float_32)(CASTING float_32)(int_64 $1))
	if ( ((float_32)(float_32)|$20| < (float_32)(float_32)9223372036854775808) ){ goto $label$245 }
	$14 = (int_64)-9223372036854775808
	if ( $4 ){ goto $label$244 }
	goto $label$227 
	
.LABEL $label$245
	$14 = (Rounds 0)($20)
	if ( ($4 == 0) ){ goto $label$227 }
	
.LABEL $label$244
	if ( $7 ){ goto $label$226 }
	$1 = (int_64)0
	goto $label$225 
	
.LABEL $label$229
	CALL $24(($6 + [1360]))
	
.LABEL $label$228
	CALL $24(($6 + [1360]))
	
.LABEL $label$227
	CALL eosio_assert([0], [11869])
	
.LABEL $label$226
	$1 = (int_64)0
	
.LOOP $label$246:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$247 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$247
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$246 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$225
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$248 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$248
	$19 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$251:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$250 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$252 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$251 }
	goto $label$249 
	
.LABEL $label$252
	$1 = $2
	
.LOOP $label$253:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$250 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$253 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$251 }
	goto $label$249 
	
.LABEL $label$250
	CALL eosio_assert([0], [12016])
	
.LABEL $label$249
	*(($6 + [1368])) = [0]
	*($6 + [1360]) = (int_64)0
	$7 = CALL $15([9820])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$262 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$265 }
	*($6 + [1360]) = ($7 << [1])
	$4 = (($6 + [1360]) | [1])
	if ( $7 ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$265
	$8 = (($7 + [16]) & [-16])
	$4 = CALL $7($8)
	*($6 + [1360]) = ($8 | [1])
	*($6 + [1368]) = $4
	*($6 + [1364]) = $7
	
.LABEL $label$264
	CALL memcpy($4, [9820], $7)
	
.LABEL $label$263
	*(($4 + $7)) = [0]
	*(($6 + [1464])) = $19
	$7 = ($6 + [1368])
	*(($6 + [1480])) = *($7)
	*($7) = [0]
	*($6 + [1440]) = $17
	*($6 + [1456]) = $14
	*($6 + [1448]) = *($13)
	*($6 + [1472]) = *($6 + [1360])
	*($6 + [1360]) = (int_64)0
	$7 = CALL $74(($6 + [1400]), ($6 + [1296]), *($9), *($11), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$266 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$266
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$267 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$267
	if ( ((*(($6 + [1472])) & [1]) == 0) ){ goto $label$268 }
	CALL $9(*(($6 + [1480])))
	
.LABEL $label$268
	if ( ((*($6 + [1360]) & [1]) == 0) ){ goto $label$269 }
	CALL $9(*(($6 + [1368])))
	
.LABEL $label$269
	$1 = *($0)
	*($6 + [888]) = [9370]
	*($6 + [892]) = CALL $15([9370])
	*($6 + [144]) = *($6 + [888])
	$7 = CALL $60(($6 + [896]), ($6 + [144]))
	*($6 + [1296]) = $1
	*($6 + [872]) = [9717]
	*($6 + [1304]) = *($7)
	*($6 + [876]) = CALL $15([9717])
	*($6 + [136]) = *($6 + [872])
	$9 = CALL $60(($6 + [880]), ($6 + [136]))
	*($6 + [856]) = [9828]
	*($6 + [860]) = CALL $15([9828])
	*($6 + [128]) = *($6 + [856])
	$11 = CALL $60(($6 + [864]), ($6 + [128]))
	$2 = *($0)
	*($6 + [848]) = [9717]
	*($6 + [852]) = CALL $15([9717])
	*($6 + [120]) = *($6 + [848])
	$13 = CALL $60(($6 + [1232]), ($6 + [120]))
	$1 = *($6 + [1576])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$273 }
	$4 = [0]
	$8 = *([0] + [12036])
	
.LOOP $label$275:
	*((($6 + [1440]) + ($7 = $4))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$4 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$274 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$275 }
	
.LABEL $label$274
	*(($6 + [1592])) = [0]
	*($6 + [1584]) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$272 }
	*($6 + [1584]) = ($4 << [1])
	$8 = (($6 + [1584]) | [1])
	goto $label$271 
	
.LABEL $label$273
	*(($6 + [1592])) = [0]
	*($6 + [1584]) = (int_64)0
	*($6 + [1584]) = [0]
	$7 = (($6 + [1584]) | [1])
	goto $label$270 
	
.LABEL $label$272
	$0 = (($4 + [16]) & [-16])
	$8 = CALL $7($0)
	*($6 + [1584]) = ($0 | [1])
	*($6 + [1592]) = $8
	*($6 + [1588]) = $4
	
.LABEL $label$271
	$0 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$276:
	*(($8 + $7)) = *((($6 + [1440]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$276 }
	$7 = ($8 + $4)
	
.LABEL $label$270
	*($7) = [0]
	*(($6 + [1384])) = [0]
	*($6 + [1376]) = (int_64)0
	$7 = CALL $15([8716])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$261 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$279 }
	*($6 + [1376]) = ($7 << [1])
	$8 = (($6 + [1376]) | [1])
	$4 = $8
	if ( $7 ){ goto $label$278 }
	goto $label$277 
	
.LABEL $label$279
	$8 = (($7 + [16]) & [-16])
	$4 = CALL $7($8)
	*($6 + [1376]) = ($8 | [1])
	*($6 + [1384]) = $4
	*($6 + [1380]) = $7
	$8 = (($6 + [1376]) | [1])
	
.LABEL $label$278
	CALL memcpy($4, [8716], $7)
	
.LABEL $label$277
	*(($4 + $7)) = [0]
	$7 = *($6 + [1376])
	$4 = ($7 & [1])
	$7 = CALL $32(($6 + [1584]), ( *($6 + [1384]) ? $8 : $4 ), ( *($6 + [1380]) ? uint_32($7 >> [1]) : $4 ))
	$4 = ($7 + [8])
	*((($6 + [1360]) + [8])) = *($4)
	*($6 + [1360]) = *($7)
	*($7) = (int_64)0
	*($4) = [0]
	$7 = *($6 + [1600])
	$4 = ($7 & [1])
	$7 = CALL $32(($6 + [1360]), ( *($5 + [8]) ? ($5 + [1]) : $4 ), ( *($5 + [4]) ? uint_32($7 >> [1]) : $4 ))
	$4 = *($7 + [8])
	*($7 + [8]) = [0]
	$1 = *($7)
	*($7) = (int_64)0
	*(($6 + [1480])) = $4
	*(($6 + [1464])) = *(($3 + [8]))
	*($6 + [1440]) = $2
	*($6 + [1448]) = *($13)
	*($6 + [1472]) = $1
	*($6 + [1456]) = *($3)
	$7 = CALL $74(($6 + [1400]), ($6 + [1296]), *($9), *($11), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$280 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$280
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$281 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$281
	if ( (*($6 + [1472]) & [1]) ){ goto $label$283 }
	if ( (*($6 + [1360]) & [1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$283
	CALL $9(*(($6 + [1480])))
	if ( ((*($6 + [1360]) & [1]) == 0) ){ goto $label$260 }
	
.LABEL $label$282
	CALL $9(*($6 + [1368]))
	$7 = [1]
	if ( ((*($6 + [1376]) & [1]) == 0) ){ goto $label$259 }
	goto $label$258 
	
.LABEL $label$262
	CALL $24(($6 + [1360]))
	
.LABEL $label$261
	CALL $24(($6 + [1376]))
	
.LABEL $label$260
	$7 = [1]
	if ( (*($6 + [1376]) & [1]) ){ goto $label$258 }
	
.LABEL $label$259
	if ( (*($6 + [1584]) & $7) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$258
	CALL $9(*(($6 + [1384])))
	if ( ((*($6 + [1584]) & $7) == 0) ){ goto $label$256 }
	
.LABEL $label$257
	CALL $9(*($6 + [1592]))
	$8 = *($6 + [1536])
	if ( ($8 == 0) ){ goto $label$254 }
	goto $label$255 
	
.LABEL $label$256
	$8 = *($6 + [1536])
	if ( ($8 == 0) ){ goto $label$254 }
	
.LABEL $label$255
	$0 = ($6 + [1540])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$285 }
	
.LOOP $label$286:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$287 }
	CALL $9($4)
	
.LABEL $label$287
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$286 }
	$7 = *(($6 + [1536]))
	goto $label$284 
	
.LABEL $label$285
	$7 = $8
	
.LABEL $label$284
	*($0) = $8
	CALL $9($7)
	
.LABEL $label$254
	if ( ((*($6 + [1600]) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*(($5 + [8])))
	$global$0 = ($6 + [1632])
	return (unreachable)
	
.LABEL $label$9
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [8902])
	CALL eosio_assert(((int_64)*($3) > (int_64)1999), [8947])
	CALL eosio_assert(((int_64)*($3) < (int_64)1000001), [8970])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$289 }
	$7 = uint_32($7 >> [1])
	goto $label$288 
	
.LABEL $label$289
	$7 = *($4 + [4])
	
.LABEL $label$288
	CALL eosio_assert(((uint_32)$7 > (uint_32)[2]), [8579])
	CALL eosio_assert(((int_32)*(CALL $31($4, [0])) != (int_32)[58]), [8989])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$291 }
	$7 = uint_32($7 >> [1])
	goto $label$290 
	
.LABEL $label$291
	$7 = *($4 + [4])
	
.LABEL $label$290
	CALL eosio_assert(((int_32)*(CALL $31($4, ($7 + [-1]))) != (int_32)[58]), [8989])
	*(($6 + [1544])) = [0]
	*($6 + [1528]) = (int_64)-1
	$1 = *($0)
	*($6 + [1512]) = $1
	*($6 + [1520]) = $1
	*($6 + [1536]) = (int_64)0
	$7 = CALL db_find_i64($1, $1, (int_64)-5594450253431554048, (int_64)0)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$293 }
	$7 = CALL $76(($6 + [1512]), $7)
	if ( ((int_32)*($7 + [16]) == (int_32)($6 + [1512])) ){ goto $label$294 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$294
	*($6 + [1396]) = $7
	*($6 + [1392]) = ($6 + [1512])
	goto $label$292 
	
.LABEL $label$293
	*($6 + [1396]) = [0]
	*($6 + [1392]) = ($6 + [1512])
	
.LABEL $label$292
	*(($6 + [1432])) = [0]
	*($6 + [1416]) = (int_64)-1
	$1 = *($0)
	*($6 + [1400]) = $1
	*($6 + [1408]) = $1
	*($6 + [1424]) = (int_64)0
	$11 = [0]
	$7 = CALL db_find_i64($1, $1, (int_64)-5594449976101961728, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$295 }
	$11 = CALL $77(($6 + [1400]), $7)
	if ( ((int_32)*($11 + [24]) == (int_32)($6 + [1400])) ){ goto $label$295 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$295
	CALL eosio_assert(((int_32)*($6 + [1396]) != (int_32)[0]), [8631])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [9207])
	$7 = [1]
	$5 = CALL $26(($6 + [1376]), $4, [0], [3], $4)
	$13 = (((int_32)*(CALL $30($5, [0])) * (int_32)[10]) + *(CALL $30($5, [1])))
	CALL eosio_assert((($13 + [-532]) <= [92]), [9242])
	if ( ((int_32)*(CALL $30($5, [2])) == (int_32)[111]) ){ goto $label$296 }
	$7 = ((int_32)*(CALL $30($5, [2])) == (int_32)[117])
	
.LABEL $label$296
	CALL eosio_assert($7, [9279])
	*((($6 + [1360]) + [8])) = *(($3 + [8]))
	$1 = *($3)
	*($6 + [1360]) = $1
	$8 = *($11 + [8])
	$7 = CALL $15([8898])
	$9 = ($7 <= [8])
	$18 = ((float_64)((float_64)(CASTING float_64)(uint_32 $8) / (float_64)(float_64)100) * (float_64)(CASTING float_64)(int_64 $1))
	if ( ((float_64)(float_64)|$18| < (float_64)(float_64)9223372036854775808) ){ goto $label$301 }
	$14 = (int_64)-9223372036854775808
	if ( ($9 == 0) ){ goto $label$300 }
	goto $label$299 
	
.LABEL $label$301
	$14 = (Rounds 0)($18)
	if ( $9 ){ goto $label$299 }
	
.LABEL $label$300
	CALL eosio_assert([0], [11869])
	goto $label$298 
	
.LABEL $label$299
	if ( $7 ){ goto $label$298 }
	$1 = (int_64)0
	goto $label$297 
	
.LABEL $label$298
	$1 = (int_64)0
	
.LOOP $label$302:
	$8 = *(($7 + [8897]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$303 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$303
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$302 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$297
	if ( (uint_64)(((int_64)$14 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$304 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$304
	$15 = ($13 + [-528])
	$19 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$307:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$306 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$308 }
	$1 = $2
	$8 = $7
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$307 }
	goto $label$305 
	
.LABEL $label$308
	$1 = $2
	
.LOOP $label$309:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$306 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$9 = ($7 + [1])
	$7 = $9
	if ( $8 ){ goto $label$309 }
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$307 }
	goto $label$305 
	
.LABEL $label$306
	CALL eosio_assert([0], [12016])
	
.LABEL $label$305
	*($3) = (int_64))(*($3) - $14)
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$312 }
	if ( ((uint_32)uint_32($7 >> [1]) >= (uint_32)[5]) ){ goto $label$311 }
	goto $label$310 
	
.LABEL $label$312
	if ( (*($4 + [4]) <= [5]) ){ goto $label$310 }
	
.LABEL $label$311
	CALL $33($4, [0], [4])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$314 }
	$7 = uint_32($7 >> [1])
	$4 = ($4 + [1])
	goto $label$313 
	
.LABEL $label$314
	$7 = *($4 + [4])
	$4 = *($4 + [8])
	
.LABEL $label$313
	*($6 + [1348]) = $7
	*($6 + [1344]) = $4
	*($6 + [104]) = *($6 + [1344])
	$9 = CALL $60(($6 + [1352]), ($6 + [104]))
	CALL eosio_assert(CALL $fimport$31(*($9)), [9312])
	CALL eosio_assert(((int_64)*($6 + [1576]) != (int_64)*($9)), [9344])
	$4 = *($11 + [16])
	$7 = CALL $15([8898])
	$8 = ($7 <= [8])
	$18 = ((float_64)((float_64)(CASTING float_64)(uint_32 $4) / (float_64)(float_64)100) * (float_64)(CASTING float_64)(int_64 $14))
	if ( ((float_64)(float_64)|$18| < (float_64)(float_64)9223372036854775808) ){ goto $label$319 }
	$17 = (int_64)-9223372036854775808
	if ( $8 ){ goto $label$318 }
	goto $label$317 
	
.LABEL $label$319
	$17 = (Rounds 0)($18)
	if ( ($8 == 0) ){ goto $label$317 }
	
.LABEL $label$318
	if ( $7 ){ goto $label$316 }
	$1 = (int_64)0
	goto $label$315 
	
.LABEL $label$317
	CALL eosio_assert([0], [11869])
	
.LABEL $label$316
	$1 = (int_64)0
	
.LOOP $label$320:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$321 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$321
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$320 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$315
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$322 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$322
	$21 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$325:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$324 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$326 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$325 }
	goto $label$323 
	
.LABEL $label$326
	$1 = $2
	
.LOOP $label$327:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$324 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$327 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$325 }
	goto $label$323 
	
.LABEL $label$324
	CALL eosio_assert([0], [12016])
	
.LABEL $label$323
	$1 = *($0)
	*($6 + [1280]) = [9370]
	*($6 + [1284]) = CALL $15([9370])
	*($6 + [96]) = *($6 + [1280])
	$7 = CALL $60(($6 + [1288]), ($6 + [96]))
	*($6 + [1600]) = $1
	*($6 + [1608]) = *($7)
	*($6 + [1264]) = [9377]
	*($6 + [1268]) = CALL $15([9377])
	*($6 + [88]) = *($6 + [1264])
	$16 = CALL $60(($6 + [1272]), ($6 + [88]))
	*($6 + [1248]) = [9389]
	*($6 + [1252]) = CALL $15([9389])
	*($6 + [80]) = *($6 + [1248])
	$10 = CALL $60(($6 + [1256]), ($6 + [80]))
	$2 = *($9)
	*(($6 + [1592])) = [0]
	*($6 + [1584]) = (int_64)0
	$7 = CALL $15([9398])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$331 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$334 }
	*($6 + [1584]) = ($7 << [1])
	$8 = (($6 + [1584]) | [1])
	if ( $7 ){ goto $label$333 }
	goto $label$332 
	
.LABEL $label$334
	$4 = (($7 + [16]) & [-16])
	$8 = CALL $7($4)
	*($6 + [1584]) = ($4 | [1])
	*($6 + [1592]) = $8
	*($6 + [1588]) = $7
	
.LABEL $label$333
	CALL memcpy($8, [9398], $7)
	
.LABEL $label$332
	$4 = [0]
	*(($8 + $7)) = [0]
	$1 = *($6 + [1576])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$338 }
	$8 = *([0] + [12036])
	
.LOOP $label$340:
	*((($6 + [1440]) + ($7 = $4))) = *(($8 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$1 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$7 == (int_32)[12]) )))))
	$4 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[11]) ){ goto $label$339 }
	$1 = ((int_64)$1 << (int_64)5)
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$340 }
	
.LABEL $label$339
	*(($6 + [1240])) = [0]
	*($6 + [1232]) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$337 }
	*($6 + [1232]) = ($4 << [1])
	$8 = (($6 + [1232]) | [1])
	goto $label$336 
	
.LABEL $label$338
	*(($6 + [1240])) = [0]
	*($6 + [1232]) = (int_64)0
	*($6 + [1232]) = [0]
	$7 = (($6 + [1232]) | [1])
	$4 = $7
	goto $label$335 
	
.LABEL $label$337
	$9 = (($4 + [16]) & [-16])
	$8 = CALL $7($9)
	*($6 + [1232]) = ($9 | [1])
	*($6 + [1240]) = $8
	*($6 + [1236]) = $4
	
.LABEL $label$336
	$9 = ($7 + [1])
	$7 = [0]
	
.LOOP $label$341:
	*(($8 + $7)) = *((($6 + [1440]) + $7))
	$7 = ($7 + [1])
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$341 }
	$4 = ($8 + $4)
	$7 = (($6 + [1232]) | [1])
	
.LABEL $label$335
	*($4) = [0]
	$4 = *($6 + [1232])
	$8 = ($4 & [1])
	$7 = CALL $32(($6 + [1584]), ( *($6 + [1240]) ? $7 : $8 ), ( *($6 + [1236]) ? uint_32($4 >> [1]) : $8 ))
	$4 = *($7 + [8])
	*($7 + [8]) = [0]
	$1 = *($7)
	*($7) = (int_64)0
	*(($6 + [1464])) = $21
	*(($6 + [1480])) = $4
	*($6 + [1448]) = $2
	*($6 + [1440]) = *($0)
	*($6 + [1456]) = $17
	*($6 + [1472]) = $1
	$7 = CALL $74(($6 + [1296]), ($6 + [1600]), *($16), *($10), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$342 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$342
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$343 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$343
	if ( (*($6 + [1472]) & [1]) ){ goto $label$345 }
	if ( (*($6 + [1232]) & [1]) ){ goto $label$344 }
	goto $label$330 
	
.LABEL $label$345
	CALL $9(*(($6 + [1480])))
	if ( ((*($6 + [1232]) & [1]) == 0) ){ goto $label$330 }
	
.LABEL $label$344
	CALL $9(*(($6 + [1240])))
	if ( (*($6 + [1584]) & [1]) ){ goto $label$329 }
	goto $label$328 
	
.LABEL $label$331
	CALL $24(($6 + [1584]))
	
.LABEL $label$330
	if ( ((*($6 + [1584]) & [1]) == 0) ){ goto $label$328 }
	
.LABEL $label$329
	CALL $9(*($6 + [1592]))
	
.LABEL $label$328
	$14 = (int_64))($14 - $17)
	
.LABEL $label$310
	$4 = *($11 + [12])
	$7 = CALL $15([8898])
	$8 = ($7 <= [8])
	$18 = ((float_64)((float_64)(CASTING float_64)(uint_32 $4) / (float_64)(float_64)100) * (float_64)(CASTING float_64)(int_64 $14))
	if ( ((float_64)(float_64)|$18| < (float_64)(float_64)9223372036854775808) ){ goto $label$350 }
	$17 = (int_64)-9223372036854775808
	if ( ($8 == 0) ){ goto $label$349 }
	goto $label$348 
	
.LABEL $label$350
	$17 = (Rounds 0)($18)
	if ( $8 ){ goto $label$348 }
	
.LABEL $label$349
	CALL eosio_assert([0], [11869])
	goto $label$347 
	
.LABEL $label$348
	if ( $7 ){ goto $label$347 }
	$1 = (int_64)0
	goto $label$346 
	
.LABEL $label$347
	$1 = (int_64)0
	
.LOOP $label$351:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$352 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$352
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$351 }
	$1 = ((int_64)$1 << (int_64)8)
	
.LABEL $label$346
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$353 }
	CALL eosio_assert([0], [11967])
	
.LABEL $label$353
	$21 = ((int_64)$1 | (int_64)4)
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$356:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$355 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$357 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$356 }
	goto $label$354 
	
.LABEL $label$357
	$1 = $2
	
.LOOP $label$358:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$355 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$358 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$356 }
	goto $label$354 
	
.LABEL $label$355
	CALL eosio_assert([0], [12016])
	
.LABEL $label$354
	$1 = *($0)
	*($6 + [1216]) = [9370]
	*($6 + [1220]) = CALL $15([9370])
	*($6 + [72]) = *($6 + [1216])
	$7 = CALL $60(($6 + [1224]), ($6 + [72]))
	*($6 + [1600]) = $1
	*($6 + [1608]) = *($7)
	*($6 + [1200]) = [9377]
	*($6 + [1204]) = CALL $15([9377])
	*($6 + [64]) = *($6 + [1200])
	$8 = CALL $60(($6 + [1208]), ($6 + [64]))
	*($6 + [1184]) = [9389]
	*($6 + [1188]) = CALL $15([9389])
	*($6 + [56]) = *($6 + [1184])
	$9 = CALL $60(($6 + [1192]), ($6 + [56]))
	*($6 + [1176]) = [9424]
	*($6 + [1180]) = CALL $15([9424])
	*($6 + [48]) = *($6 + [1176])
	$11 = CALL $60(($6 + [1232]), ($6 + [48]))
	*(($6 + [1592])) = [0]
	*($6 + [1584]) = (int_64)0
	$7 = CALL $15([9437])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$362 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$365 }
	*($6 + [1584]) = ($7 << [1])
	$4 = (($6 + [1584]) | [1])
	if ( $7 ){ goto $label$364 }
	goto $label$363 
	
.LABEL $label$365
	$16 = (($7 + [16]) & [-16])
	$4 = CALL $7($16)
	*($6 + [1584]) = ($16 | [1])
	*($6 + [1592]) = $4
	*($6 + [1588]) = $7
	
.LABEL $label$364
	CALL memcpy($4, [9437], $7)
	
.LABEL $label$363
	*(($4 + $7)) = [0]
	*(($6 + [1464])) = $21
	$7 = ($6 + [1592])
	*(($6 + [1480])) = *($7)
	*($7) = [0]
	*($6 + [1456]) = $17
	*($6 + [1440]) = *($0)
	*($6 + [1448]) = *($11)
	*($6 + [1472]) = *($6 + [1584])
	*($6 + [1584]) = (int_64)0
	$7 = CALL $74(($6 + [1296]), ($6 + [1600]), *($8), *($9), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$366 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$366
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$367 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$367
	if ( ((*(($6 + [1472])) & [1]) == 0) ){ goto $label$368 }
	CALL $9(*(($6 + [1480])))
	
.LABEL $label$368
	if ( ((*($6 + [1584]) & [1]) == 0) ){ goto $label$369 }
	CALL $9(*(($6 + [1592])))
	
.LABEL $label$369
	$1 = *($0)
	*($6 + [1160]) = [9370]
	*($6 + [1164]) = CALL $15([9370])
	*($6 + [40]) = *($6 + [1160])
	$7 = CALL $60(($6 + [1168]), ($6 + [40]))
	*($6 + [1600]) = $1
	*($6 + [1608]) = *($7)
	*($6 + [1144]) = [9377]
	*($6 + [1148]) = CALL $15([9377])
	*($6 + [32]) = *($6 + [1144])
	$8 = CALL $60(($6 + [1152]), ($6 + [32]))
	*($6 + [1128]) = [9389]
	*($6 + [1132]) = CALL $15([9389])
	*($6 + [24]) = *($6 + [1128])
	$9 = CALL $60(($6 + [1136]), ($6 + [24]))
	*($6 + [1120]) = [9447]
	*($6 + [1124]) = CALL $15([9447])
	*($6 + [16]) = *($6 + [1120])
	$11 = CALL $60(($6 + [1232]), ($6 + [16]))
	*(($6 + [1592])) = [0]
	*($6 + [1584]) = (int_64)0
	$7 = CALL $15([9460])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$361 }
	$1 = (int_64))($14 - $17)
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$372 }
	*($6 + [1584]) = ($7 << [1])
	$4 = (($6 + [1584]) | [1])
	if ( $7 ){ goto $label$371 }
	goto $label$370 
	
.LABEL $label$372
	$16 = (($7 + [16]) & [-16])
	$4 = CALL $7($16)
	*($6 + [1584]) = ($16 | [1])
	*($6 + [1592]) = $4
	*($6 + [1588]) = $7
	
.LABEL $label$371
	CALL memcpy($4, [9460], $7)
	
.LABEL $label$370
	*(($4 + $7)) = [0]
	*(($6 + [1464])) = $19
	$7 = ($6 + [1592])
	*(($6 + [1480])) = *($7)
	*($7) = [0]
	*($6 + [1456]) = $1
	*($6 + [1440]) = *($0)
	*($6 + [1448]) = *($11)
	*($6 + [1472]) = *($6 + [1584])
	*($6 + [1584]) = (int_64)0
	$7 = CALL $74(($6 + [1296]), ($6 + [1600]), *($8), *($9), ($6 + [1440]))
	CALL $75($7)
	$4 = *($7 + [28])
	if ( ($4 == 0) ){ goto $label$373 }
	*(($7 + [32])) = $4
	CALL $9($4)
	
.LABEL $label$373
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$374 }
	*(($7 + [20])) = $4
	CALL $9($4)
	
.LABEL $label$374
	if ( ((*(($6 + [1472])) & [1]) == 0) ){ goto $label$375 }
	CALL $9(*(($6 + [1480])))
	
.LABEL $label$375
	if ( ((*($6 + [1584]) & [1]) == 0) ){ goto $label$376 }
	CALL $9(*(($6 + [1592])))
	
.LABEL $label$376
	$7 = [0]
	*(($6 + [1328])) = [0]
	*($6 + [1312]) = (int_64)-1
	*($6 + [1320]) = (int_64)0
	$1 = *($0)
	*($6 + [1296]) = $1
	*($6 + [1304]) = $1
	$4 = CALL db_find_i64($1, $1, (int_64)-5594450192367616000, *($6 + [1576]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$377 }
	$7 = CALL $78(($6 + [1296]), $4)
	if ( ((int_32)*($7 + [68]) == (int_32)($6 + [1296])) ){ goto $label$377 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$377
	*($6 + [1116]) = ((float_32)((float_32)(float_32)1 / (float_32)(CASTING float_32)(uint_32 ( ([628] - $13) ? $15 : ((int_32)*(CALL $30($5, [2])) == (int_32)[111]) ))) * (float_32)(float_32)100)
	if ( ($7 == 0) ){ goto $label$378 }
	CALL eosio_assert(((int_32)*($7 + [64]) == (int_32)[1]), [9475])
	$1 = *($0)
	*($6 + [1452]) = $5
	*($6 + [1444]) = ($6 + [1576])
	*($6 + [1440]) = ($6 + [1392])
	*($6 + [1448]) = ($6 + [1360])
	*($6 + [1456]) = ($6 + [1116])
	CALL $79(($6 + [1296]), $7, $1, ($6 + [1440]))
	$1 = *($0)
	$7 = *($6 + [1396])
	if ( $7 ){ goto $label$359 }
	goto $label$360 
	
.LABEL $label$378
	$1 = *($0)
	*($6 + [1448]) = $3
	*($6 + [1452]) = $5
	*($6 + [1444]) = ($6 + [1576])
	*($6 + [1440]) = ($6 + [1392])
	*($6 + [1456]) = ($6 + [1116])
	*($6 + [1584]) = $1
	if ( ((int_64)*($6 + [1296]) == (int_64)CALL current_receiver()) ){ goto $label$379 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$379
	*($6 + [1604]) = ($6 + [1440])
	*($6 + [1600]) = ($6 + [1296])
	*($6 + [1608]) = ($6 + [1584])
	$7 = CALL $7([80])
	CALL $80($7)
	*($7 + [68]) = ($6 + [1296])
	CALL $81(($6 + [1600]), $7)
	*($6 + [1232]) = $7
	$1 = *($7)
	*($6 + [1600]) = $1
	$8 = *($7 + [72])
	*($6 + [1352]) = $8
	$9 = ($6 + [1324])
	$4 = *($9)
	if ( ((uint_32)$4 >= (uint_32)*(($6 + [1328]))) ){ goto $label$382 }
	*($4 + [8]) = $1
	*($4 + [16]) = $8
	*($6 + [1232]) = [0]
	*($4) = $7
	*($9) = ($4 + [24])
	$7 = *($6 + [1232])
	*($6 + [1232]) = [0]
	if ( $7 ){ goto $label$381 }
	goto $label$380 
	
.LABEL $label$382
	CALL $82(($6 + [1320]), ($6 + [1232]), ($6 + [1600]), ($6 + [1352]))
	$7 = *($6 + [1232])
	*($6 + [1232]) = [0]
	if ( ($7 == 0) ){ goto $label$380 }
	
.LABEL $label$381
	if ( ((*($7 + [32]) & [1]) == 0) ){ goto $label$383 }
	CALL $9(*(($7 + [40])))
	
.LABEL $label$383
	CALL $9($7)
	
.LABEL $label$380
	$1 = *($0)
	$7 = *($6 + [1396])
	if ( ($7 == 0) ){ goto $label$360 }
	goto $label$359 
	
.LABEL $label$362
	CALL $24(($6 + [1584]))
	
.LABEL $label$361
	CALL $24(($6 + [1584]))
	
.LABEL $label$360
	CALL eosio_assert([0], [12102])
	
.LABEL $label$359
	CALL $83(($6 + [1512]), $7, $1)
	$11 = ($0 + [32])
	$4 = *(($0 + [60]))
	$9 = *(($0 + [56]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$388 }
	
.LOOP $label$390:
	$7 = ($4 + [-24])
	$8 = *($7)
	if ( (int_64)(*($8) == 0) ){ goto $label$389 }
	$4 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$390 }
	goto $label$388 
	
.LABEL $label$389
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$388 }
	if ( ((int_32)*($8 + [64]) == (int_32)$11) ){ goto $label$387 }
	CALL eosio_assert([0], [12293])
	goto $label$387 
	
.LABEL $label$388
	$7 = CALL db_find_i64(*($11), *(($0 + [40])), (int_64)-4161326055690338304, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$386 }
	$8 = CALL $47($11, $7)
	if ( ((int_32)*($8 + [64]) == (int_32)$11) ){ goto $label$387 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$387
	$1 = *($0)
	*($6 + [1440]) = $3
	CALL $84($11, $8, $1, ($6 + [1440]))
	$8 = *($6 + [1320])
	if ( $8 ){ goto $label$385 }
	goto $label$384 
	
.LABEL $label$386
	$2 = *($0)
	if ( ((int_64)*(($0 + [32])) == (int_64)CALL current_receiver()) ){ goto $label$391 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$391
	$7 = CALL $7([80])
	CALL $69($7)
	*($7 + [64]) = $11
	*($7 + [48]) = *($3)
	*($6 + [1592]) = (($6 + [1440]) + [60])
	*($6 + [1588]) = ($6 + [1440])
	*($6 + [1584]) = ($6 + [1440])
	*($6 + [1232]) = ($6 + [1584])
	*($6 + [1604]) = ($7 + [8])
	*($6 + [1600]) = $7
	*($6 + [1608]) = ($7 + [16])
	*($6 + [1612]) = ($7 + [24])
	*($6 + [1616]) = ($7 + [32])
	*($6 + [1620]) = ($7 + [40])
	*($6 + [1624]) = ($7 + [48])
	CALL $70(($6 + [1600]), ($6 + [1232]))
	$1 = *($7)
	$8 = CALL db_store_i64(*(($0 + [40])), (int_64)-4161326055690338304, $2, $1, ($6 + [1440]), [60])
	*($7 + [68]) = $8
	$4 = ($0 + [48])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$392 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$392
	*($6 + [1600]) = $7
	$1 = *($7)
	*($6 + [1440]) = $1
	*($6 + [1584]) = $8
	$4 = *(($0 + [60]))
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [64]))) ){ goto $label$395 }
	*($4 + [8]) = $1
	*($4 + [16]) = $8
	*($6 + [1600]) = [0]
	*($4) = $7
	*(($0 + [60])) = ($4 + [24])
	$7 = *($6 + [1600])
	*($6 + [1600]) = [0]
	if ( ($7 == 0) ){ goto $label$393 }
	goto $label$394 
	
.LABEL $label$395
	CALL $71(($0 + [56]), ($6 + [1600]), ($6 + [1440]), ($6 + [1584]))
	$7 = *($6 + [1600])
	*($6 + [1600]) = [0]
	if ( ($7 == 0) ){ goto $label$393 }
	
.LABEL $label$394
	CALL $9($7)
	
.LABEL $label$393
	$8 = *($6 + [1320])
	if ( ($8 == 0) ){ goto $label$384 }
	
.LABEL $label$385
	$0 = ($6 + [1324])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$397 }
	
.LOOP $label$398:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$399 }
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$400 }
	CALL $9(*(($4 + [40])))
	
.LABEL $label$400
	CALL $9($4)
	
.LABEL $label$399
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$398 }
	$7 = *(($6 + [1320]))
	goto $label$396 
	
.LABEL $label$397
	$7 = $8
	
.LABEL $label$396
	*($0) = $8
	CALL $9($7)
	
.LABEL $label$384
	if ( ((*($6 + [1376]) & [1]) == 0) ){ goto $label$401 }
	CALL $9(*($5 + [8]))
	
.LABEL $label$401
	$8 = *($6 + [1424])
	if ( ($8 == 0) ){ goto $label$402 }
	$0 = ($6 + [1428])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$404 }
	
.LOOP $label$405:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$406 }
	CALL $9($4)
	
.LABEL $label$406
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$405 }
	$7 = *(($6 + [1424]))
	goto $label$403 
	
.LABEL $label$404
	$7 = $8
	
.LABEL $label$403
	*($0) = $8
	CALL $9($7)
	
.LABEL $label$402
	$8 = *($6 + [1536])
	if ( ($8 == 0) ){ goto $label$1 }
	$0 = ($6 + [1540])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$408 }
	
.LOOP $label$409:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$410 }
	CALL $9($4)
	
.LABEL $label$410
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$409 }
	$7 = *(($6 + [1536]))
	goto $label$407 
	
.LABEL $label$408
	$7 = $8
	
.LABEL $label$407
	*($0) = $8
	CALL $9($7)
	$global$0 = ($6 + [1632])
	return 
	
.LABEL $label$8
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [8902])
	CALL eosio_assert(((int_64)*($3) > (int_64)1999), [8947])
	CALL eosio_assert(((int_64)*($3) < (int_64)1000001), [8970])
	CALL eosio_assert(((int_32)*(CALL $31($4, [0])) != (int_32)[58]), [8989])
	$7 = *($4)
	if ( ($7 & [1]) ){ goto $label$412 }
	$7 = uint_32($7 >> [1])
	goto $label$411 
	
.LABEL $label$412
	$7 = *($4 + [4])
	
.LABEL $label$411
	CALL eosio_assert(((int_32)*(CALL $31($4, ($7 + [-1]))) != (int_32)[58]), [8989])
	$7 = CALL $34($4, [58], [0])
	CALL eosio_assert(((int_32)$7 != (int_32)[-1]), [8989])
	$8 = CALL $26(($6 + [1560]), $4, [0], $7, $4)
	$9 = *($8)
	if ( ($9 & [1]) ){ goto $label$414 }
	$8 = ($8 + [1])
	$9 = uint_32($9 >> [1])
	goto $label$413 
	
.LABEL $label$414
	$9 = *($8 + [4])
	$8 = *($8 + [8])
	CALL $9($8)
	
.LABEL $label$413
	CALL $33($4, [0], ($7 + [1]))
	*($6 + [1556]) = $9
	*($6 + [1552]) = $8
	*($6 + [8]) = *($6 + [1552])
	$7 = CALL $60(($6 + [1584]), ($6 + [8]))
	*(($6 + [1544])) = [0]
	*($6 + [1528]) = (int_64)-1
	*($6 + [1536]) = (int_64)0
	$1 = *($0)
	*($6 + [1512]) = $1
	*($6 + [1520]) = $1
	$15 = [0]
	$7 = CALL db_find_i64($1, $1, (int_64)3940451327872598016, *($7))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$415 }
	$15 = CALL $85(($6 + [1512]), $7)
	if ( ((int_32)*($15 + [76]) == (int_32)($6 + [1512])) ){ goto $label$415 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$415
	CALL eosio_assert(((int_32)$15 != (int_32)[0]), [9014])
	CALL eosio_assert(((int_64)*($15 + [32]) == (int_64)*($3)), [9049])
	CALL eosio_assert((*($15 + [60]) <= *($15 + [56])), [9073])
	CALL eosio_assert((*($15 + [48]) == 0), [9086])
	$11 = *(($15 + [68]))
	$7 = *($15 + [64])
	if ( ((int_32)$7 == (int_32)$11) ){ goto $label$416 }
	$9 = (($6 + [1440]) + [16])
	$8 = (($6 + [1440]) + [32])
	$13 = ($8 + [24])
	
.LOOP $label$417:
	*($6 + [1440]) = *($7)
	*($6 + [1448]) = *(($7 + [8]))
	CALL $25($9, ($7 + [16]))
	*($13) = *(($7 + [56]))
	*(($8 + [16])) = *(($7 + [48]))
	*(($8 + [8])) = *(($7 + [40]))
	*($8) = *(($7 + [32]))
	CALL eosio_assert(((int_64)*($6 + [1448]) != (int_64)*($6 + [1576])), [9119])
	if ( ((*($9) & [1]) == 0) ){ goto $label$418 }
	CALL $9(*((($6 + [1440]) + [24])))
	
.LABEL $label$418
	$7 = ($7 + [64])
	if ( ((int_32)$7 != (int_32)$11) ){ goto $label$417 }
	
.LABEL $label$416
	$11 = $5
	$7 = CALL transaction_size()
	$8 = ($5 - (($7 + [15]) & [-16]))
	$global$0 = $8
	$9 = CALL read_transaction($8, $7)
	CALL eosio_assert(((int_32)$7 == (int_32)$9), [9154])
	CALL sha256($8, $9, ($6 + [1296]))
	$7 = [0]
	*(($6 + [1432])) = [0]
	*($6 + [1416]) = (int_64)-1
	$1 = *($0)
	*($6 + [1400]) = $1
	*($6 + [1408]) = $1
	*($6 + [1424]) = (int_64)0
	$8 = CALL db_find_i64($1, $1, (int_64)3940451319824052736, (int_64)0)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$420 }
	$7 = CALL $86(($6 + [1400]), $8)
	if ( ((int_32)*($7 + [24]) == (int_32)($6 + [1400])) ){ goto $label$421 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$421
	*($6 + [1380]) = $7
	*($6 + [1376]) = ($6 + [1400])
	goto $label$419 
	
.LABEL $label$420
	*($6 + [1380]) = [0]
	*($6 + [1376]) = ($6 + [1400])
	
.LABEL $label$419
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9179])
	$1 = *($0)
	*($6 + [1440]) = $3
	*($6 + [1452]) = $4
	*($6 + [1444]) = ($6 + [1376])
	*($6 + [1448]) = ($6 + [1576])
	*($6 + [1456]) = ($6 + [1296])
	if ( $15 ){ goto $label$422 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$422
	CALL $87(($6 + [1512]), $15, $1, ($6 + [1440]))
	$1 = *($0)
	$7 = *($6 + [1380])
	if ( $7 ){ goto $label$423 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$423
	CALL $88(($6 + [1400]), $7, $1)
	$5 = ($0 + [32])
	$4 = *(($0 + [60]))
	$9 = *(($0 + [56]))
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$428 }
	
.LOOP $label$430:
	$7 = ($4 + [-24])
	$8 = *($7)
	if ( (int_64)(*($8) == 0) ){ goto $label$429 }
	$4 = $7
	if ( ((int_32)$9 != (int_32)$7) ){ goto $label$430 }
	goto $label$428 
	
.LABEL $label$429
	if ( ((int_32)$9 == (int_32)$4) ){ goto $label$428 }
	if ( ((int_32)*($8 + [64]) == (int_32)$5) ){ goto $label$427 }
	CALL eosio_assert([0], [12293])
	goto $label$427 
	
.LABEL $label$428
	$7 = CALL db_find_i64(*($5), *(($0 + [40])), (int_64)-4161326055690338304, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$426 }
	$8 = CALL $47($5, $7)
	if ( ((int_32)*($8 + [64]) == (int_32)$5) ){ goto $label$427 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$427
	$1 = *($0)
	*($6 + [1440]) = $3
	CALL $89($5, $8, $1, ($6 + [1440]))
	$8 = *($6 + [1424])
	if ( $8 ){ goto $label$425 }
	goto $label$424 
	
.LABEL $label$426
	$2 = *($0)
	if ( ((int_64)*(($0 + [32])) == (int_64)CALL current_receiver()) ){ goto $label$431 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$431
	$7 = CALL $7([80])
	CALL $69($7)
	*($7 + [64]) = $5
	*($7 + [48]) = *($3)
	*($6 + [1368]) = (($6 + [1440]) + [60])
	*($6 + [1364]) = ($6 + [1440])
	*($6 + [1360]) = ($6 + [1440])
	*($6 + [1232]) = ($6 + [1360])
	*($6 + [1604]) = ($7 + [8])
	*($6 + [1600]) = $7
	*($6 + [1608]) = ($7 + [16])
	*($6 + [1612]) = ($7 + [24])
	*($6 + [1616]) = ($7 + [32])
	*($6 + [1620]) = ($7 + [40])
	*($6 + [1624]) = ($7 + [48])
	CALL $70(($6 + [1600]), ($6 + [1232]))
	$1 = *($7)
	$8 = CALL db_store_i64(*(($0 + [40])), (int_64)-4161326055690338304, $2, $1, ($6 + [1440]), [60])
	*($7 + [68]) = $8
	$4 = ($0 + [48])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$432 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$432
	*($6 + [1600]) = $7
	$1 = *($7)
	*($6 + [1440]) = $1
	*($6 + [1360]) = $8
	$4 = *(($0 + [60]))
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [64]))) ){ goto $label$435 }
	*($4 + [8]) = $1
	*($4 + [16]) = $8
	*($6 + [1600]) = [0]
	*($4) = $7
	*(($0 + [60])) = ($4 + [24])
	$7 = *($6 + [1600])
	*($6 + [1600]) = [0]
	if ( ($7 == 0) ){ goto $label$433 }
	goto $label$434 
	
.LABEL $label$435
	CALL $71(($0 + [56]), ($6 + [1600]), ($6 + [1440]), ($6 + [1360]))
	$7 = *($6 + [1600])
	*($6 + [1600]) = [0]
	if ( ($7 == 0) ){ goto $label$433 }
	
.LABEL $label$434
	CALL $9($7)
	
.LABEL $label$433
	$8 = *($6 + [1424])
	if ( ($8 == 0) ){ goto $label$424 }
	
.LABEL $label$425
	$0 = ($6 + [1428])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$437 }
	
.LOOP $label$438:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$439 }
	CALL $9($4)
	
.LABEL $label$439
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$438 }
	$7 = *(($6 + [1424]))
	goto $label$436 
	
.LABEL $label$437
	$7 = $8
	
.LABEL $label$436
	*($0) = $8
	CALL $9($7)
	
.LABEL $label$424
	$11
	$9 = *($6 + [1536])
	if ( ($9 == 0) ){ goto $label$1 }
	$11 = ($6 + [1540])
	$0 = *($11)
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$441 }
	
.LOOP $label$442:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$443 }
	$8 = *($3 + [64])
	if ( ($8 == 0) ){ goto $label$444 }
	$5 = ($3 + [68])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$446 }
	
.LOOP $label$447:
	$4 = ($7 + [-64])
	if ( ((*(($7 + [-48])) & [1]) == 0) ){ goto $label$448 }
	CALL $9(*(($7 + [-40])))
	
.LABEL $label$448
	$7 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$447 }
	$7 = *(($3 + [64]))
	goto $label$445 
	
.LABEL $label$446
	$7 = $8
	
.LABEL $label$445
	*($5) = $8
	CALL $9($7)
	
.LABEL $label$444
	CALL $9($3)
	
.LABEL $label$443
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$442 }
	$7 = *(($6 + [1536]))
	goto $label$440 
	
.LABEL $label$441
	$7 = $9
	
.LABEL $label$440
	*($11) = $9
	CALL $9($7)
	$global$0 = ($6 + [1632])
	return 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [8902])
	$7 = CALL $34($4, [58], [0])
	CALL eosio_assert(((int_32)$7 != (int_32)[-1]), [8989])
	$7 = CALL $26(($6 + [1104]), $4, [0], $7, $4)
	$4 = *($7)
	if ( ($4 & [1]) ){ goto $label$450 }
	$7 = ($7 + [1])
	$4 = uint_32($4 >> [1])
	goto $label$449 
	
.LABEL $label$450
	$4 = *($7 + [4])
	$7 = *($7 + [8])
	CALL $9($7)
	
.LABEL $label$449
	*($6 + [1100]) = $4
	*($6 + [1096]) = $7
	*($6 + [112]) = *($6 + [1096])
	$7 = CALL $60(($6 + [1400]), ($6 + [112]))
	*(($6 + [1472])) = [0]
	*($6 + [1456]) = (int_64)-1
	*($6 + [1464]) = (int_64)0
	$1 = *($0)
	*($6 + [1440]) = $1
	*($6 + [1448]) = $1
	$8 = [0]
	$7 = CALL db_find_i64($1, $1, (int_64)-3659885418584850432, *($7))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$451 }
	$8 = CALL $90(($6 + [1440]), $7)
	if ( ((int_32)*($8 + [104]) == (int_32)($6 + [1440])) ){ goto $label$451 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$451
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9510])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)*($3)), [9049])
	$4 = ($8 + [84])
	CALL eosio_assert((int_32((*($4) - *($8 + [80])) >> [3]) <= *($8 + [64])), [9073])
	CALL eosio_assert((*($8 + [24]) == 0), [9551])
	$4 = *($4)
	$7 = *($8 + [80])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$452 }
	
.LOOP $label$453:
	CALL eosio_assert(((int_64)*($7) != (int_64)*($6 + [1576])), [9597])
	$7 = ($7 + [8])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$453 }
	
.LABEL $label$452
	*(($6 + [1544])) = [0]
	*($6 + [1528]) = (int_64)-1
	$1 = *($0)
	*($6 + [1512]) = $1
	*($6 + [1520]) = $1
	*($6 + [1536]) = (int_64)0
	$7 = [0]
	$4 = CALL db_find_i64($1, $1, (int_64)-3659882349576847360, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$454 }
	$7 = CALL $91(($6 + [1512]), $4)
	if ( ((int_32)*($7 + [40]) == (int_32)($6 + [1512])) ){ goto $label$454 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$454
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9626])
	$1 = *($0)
	if ( $7 ){ goto $label$455 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$455
	CALL $92(($6 + [1512]), $7, $1)
	$1 = *($0)
	*($6 + [1300]) = $3
	*($6 + [1296]) = ($6 + [1576])
	if ( $8 ){ goto $label$456 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$456
	CALL $93(($6 + [1440]), $8, $1, ($6 + [1296]))
	$8 = *($6 + [1536])
	if ( ($8 == 0) ){ goto $label$457 }
	$0 = ($6 + [1540])
	$7 = *($0)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$459 }
	
.LOOP $label$460:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$461 }
	CALL $9($4)
	
.LABEL $label$461
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$460 }
	$7 = *(($6 + [1536]))
	goto $label$458 
	
.LABEL $label$459
	$7 = $8
	
.LABEL $label$458
	*($0) = $8
	CALL $9($7)
	
.LABEL $label$457
	$0 = *($6 + [1464])
	if ( ($0 == 0) ){ goto $label$1 }
	$3 = ($6 + [1468])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$463 }
	
.LOOP $label$464:
	$4 = ($4 + [-24])
	$7 = *($4)
	*($4) = [0]
	if ( ($7 == 0) ){ goto $label$465 }
	$8 = *($7 + [92])
	if ( ($8 == 0) ){ goto $label$466 }
	*(($7 + [96])) = $8
	CALL $9($8)
	
.LABEL $label$466
	$8 = *($7 + [80])
	if ( ($8 == 0) ){ goto $label$467 }
	*(($7 + [84])) = $8
	CALL $9($8)
	
.LABEL $label$467
	CALL $9($7)
	
.LABEL $label$465
	if ( ((int_32)$0 != (int_32)$4) ){ goto $label$464 }
	$7 = *(($6 + [1464]))
	goto $label$462 
	
.LABEL $label$463
	$7 = $0
	
.LABEL $label$462
	*($3) = $0
	CALL $9($7)
	$global$0 = ($6 + [1632])
	return 
	
.LABEL $label$6
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$5 }
	CALL eosio_assert((uint_64)(((int_64)$17 + (int_64)-1000) <= (int_64)199001), [10035])
	$14 = *($12)
	$7 = CALL $15([8898])
	if ( ($7 <= [8]) ){ goto $label$471 }
	CALL eosio_assert([0], [11869])
	goto $label$470 
	
.LABEL $label$471
	if ( ($7 == 0) ){ goto $label$469 }
	
.LABEL $label$470
	$1 = (int_64)0
	
.LOOP $label$472:
	$4 = *(($7 + [8897]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$473 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$473
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$472 }
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)4)
	goto $label$468 
	
.LABEL $label$469
	$1 = (int_64)4
	
.LABEL $label$468
	*($6 + [552]) = $1
	*($6 + [544]) = $17
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$474 }
	CALL eosio_assert([0], [11967])
	$1 = *(($6 + [552]))
	
.LABEL $label$474
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$477:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$476 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$478 }
	$1 = $2
	$4 = $7
	$7 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$477 }
	goto $label$475 
	
.LABEL $label$478
	$1 = $2
	
.LOOP $label$479:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$476 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$4 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $4 ){ goto $label$479 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$477 }
	goto $label$475 
	
.LABEL $label$476
	CALL eosio_assert([0], [12016])
	
.LABEL $label$475
	$7 = CALL $25(($6 + [528]), $9)
	$4 = CALL $25(($6 + [512]), $9)
	*((($6 + [408]) + [8])) = *((($6 + [544]) + [8]))
	*($6 + [408]) = *($6 + [544])
	CALL $59($0, $14, ($6 + [408]), $7, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$480 }
	CALL $9(*($4 + [8]))
	
.LABEL $label$480
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*($7 + [8]))
	$7 = [1]
	if ( (*($6 + [1360]) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$7 = [1]
	if ( ((*($6 + [1360]) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*($9 + [8]))
	
.LABEL $label$3
	if ( ((*($6 + [1600]) & $7) == 0) ){ goto $label$1 }
	CALL $9(*($10 + [8]))
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_64)*($0) != (int_64)$2) ){ goto $label$1 }
	CALL eosio_assert((uint_64)(((int_64)*($3) + (int_64)-1000) <= (int_64)199001), [10035])
	*(($8 = (($6 + [496]) + [8]))) = *(($3 + [8]))
	*($6 + [496]) = *($3)
	$1 = *($6 + [1576])
	$7 = CALL $25(($6 + [480]), $4)
	$4 = CALL $25(($6 + [464]), $4)
	*((($6 + [440]) + [8])) = *($8)
	*($6 + [440]) = *($6 + [496])
	CALL $59($0, $1, ($6 + [440]), $7, $4)
	if ( ((*($4) & [1]) == 0) ){ goto $label$481 }
	CALL $9(*($4 + [8]))
	
.LABEL $label$481
	if ( ((*($7) & [1]) == 0) ){ goto $label$1 }
	CALL $9(*($7 + [8]))
	$global$0 = ($6 + [1632])
	return 
	
.LABEL $label$1
	$global$0 = ($6 + [1632])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $7([136])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)257698037770
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [104]) = (int_64)0
	*($5 + [112]) = (int_64)0
	*($5 + [120]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [24])
	*($3 + [48]) = ($5 + [32])
	*($3 + [52]) = ($5 + [36])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [72])
	*($3 + [68]) = ($5 + [88])
	*($3 + [72]) = ($5 + [104])
	CALL $326(($3 + [32]), ($3 + [24]))
	*($5 + [124]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $327(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12073])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $5, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = *($5 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12073])
	$4 = *($1)
	
.LABEL $label$8
	CALL memcpy($4, ($2 + [8]), [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $132(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([40]))) = (int_64)0
	*($5 + [8]) = (int_64)257698037762
	*($5 + [16]) = (int_64)42949672970
	*($5 + [24]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [12])
	*($3 + [52]) = ($5 + [16])
	*($3 + [56]) = ($5 + [20])
	CALL $316(($3 + [40]), ($3 + [32]))
	*($5 + [28]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $131(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $74 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($6 = ($0 + [24]))) = [0]
	$7 = CALL $7([16])
	*($0 + [16]) = $7
	*(($8 = ($0 + [20]))) = $7
	$9 = ($7 + [16])
	*($6) = $9
	$2 = *(($1 + [8]))
	$3 = *($1)
	*($8) = $9
	*(($7 + [8])) = $2
	*($7) = $3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$7 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($7 == 0) ){ goto $label$3 }
	CALL $94($1, $7)
	$1 = *(($0 + [32]))
	$7 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5 + [4]) = $7
	*($5) = $7
	*($5 + [8]) = $1
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	CALL $95(($5 + [24]), ($5 + [16]))
	$global$0 = ($5 + [32])
	return $0
}

void .FUNC $75 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $94($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $96(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	$5 = CALL $7([80])
	CALL $80($5)
	*($5 + [68]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [8])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [16])
	*($3 + [44]) = ($5 + [32])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [56])
	*($3 + [56]) = ($5 + [60])
	*($3 + [60]) = ($5 + [64])
	CALL $317(($3 + [32]), ($3 + [24]))
	*($5 + [72]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [32]) = $7
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $82(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [32]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [40])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	float_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*(*(*($3) + [4]) + [8]) + (int_64)1)
	$6 = *($1)
	*($1) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	$7 = ($1 + [32])
	CALL $27($7, *($3 + [12]))
	*($1 + [64]) = [0]
	*($1 + [56]) = (int_64)0
	$8 = ((float_32)*(*($3 + [16])) * (float_32)(float_32)1e4)
	if ( (((float_32)$8 < (float_32)(float_32)18446744073709551615) & ((float_32)$8 >= (float_32)(float_32)0)) ){ goto $label$4 }
	$9 = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	$9 = (Rounds 0)($8)
	
.LABEL $label$3
	*($1 + [48]) = $9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [12234])
	
.LABEL $label$5
	$10 = ($1 + [56])
	$11 = ($1 + [64])
	$12 = ($1 + [60])
	$13 = ($1 + [48])
	$14 = ($1 + [8])
	$3 = *(($1 + [32]))
	$15 = ( *(($1 + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($15 + [52])
	$9 = (CASTING uint_64)(uint_32 $15)
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ($3 <= [513]) ){ goto $label$8 }
	$4 = CALL $1($3)
	goto $label$7 
	
.LABEL $label$8
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$7
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [36]) = $14
	*($5 + [44]) = $7
	*($5 + [48]) = $13
	*($5 + [52]) = $10
	*($5 + [56]) = $12
	*($5 + [60]) = $11
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [16])
	CALL $318(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [72]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

void .FUNC $241 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $219(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $259 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [352])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [292]) = $2
	*($3 + [288]) = $2
	$5 = ($2 + $4)
	*($3 + [296]) = $5
	*($3 + [280]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [296]))
	$2 = *($3 + [292])
	
.LABEL $label$5
	CALL memcpy(($3 + [280]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [292]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [292])
	
.LABEL $label$6
	CALL memcpy(($3 + [272]), $2, [8])
	*($3 + [292]) = ($2 + [8])
	*($3 + [264]) = [0]
	*($3 + [256]) = (int_64)0
	CALL $219(($3 + [288]), ($3 + [256]))
	*($3 + [248]) = [0]
	*($3 + [240]) = (int_64)0
	CALL $219(($3 + [288]), ($3 + [240]))
	*($3 + [232]) = [0]
	*($3 + [224]) = (int_64)0
	CALL $219(($3 + [288]), ($3 + [224]))
	$2 = *($3 + [292])
	if ( ((uint_32)(*((($3 + [288]) + [8])) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [292])
	
.LABEL $label$7
	CALL memcpy(($3 + [216]), $2, [8])
	*($3 + [292]) = (*($3 + [292]) + [8])
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [288]) + [8]))
	*($3 + [48]) = *($3 + [288])
	$2 = *($2)
	*((($3 + [304]) + [8])) = $2
	*(($4 = (($3 + [320]) + [8]))) = $2
	$6 = *($3 + [48])
	*($3 + [320]) = $6
	*($3 + [304]) = $6
	$2 = *($4)
	*((($3 + [336]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [320])
	*($3 + [80]) = $1
	*($3 + [336]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	$0 = *($3 + [280])
	$2 = CALL $25(($3 + [32]), ($3 + [256]))
	$4 = CALL $25(($3 + [16]), ($3 + [240]))
	$5 = CALL $25($3, ($3 + [224]))
	CALL require_auth(*($3 + [64]))
	CALL require_recipient($0)
	if ( (*($5) & [1]) ){ goto $label$12 }
	if ( (*($4) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $9(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*($4 + [8]))
	if ( (*($2) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	if ( ((*($2) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($2 + [8]))
	
.LABEL $label$8
	CALL $217(($3 + [200]))
	CALL $218(($3 + [160]))
	$5 = *(($3 + [120]))
	if ( ($5 == 0) ){ goto $label$13 }
	$7 = ($3 + [124])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$16:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	CALL $9($4)
	
.LABEL $label$17
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$16 }
	$2 = *(($3 + [120]))
	goto $label$14 
	
.LABEL $label$15
	$2 = $5
	
.LABEL $label$14
	*($7) = $5
	CALL $9($2)
	
.LABEL $label$13
	if ( (*($3 + [224]) & [1]) ){ goto $label$22 }
	if ( (*($3 + [240]) & [1]) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	CALL $9(*(($3 + [232])))
	if ( ((*($3 + [240]) & [1]) == 0) ){ goto $label$20 }
	
.LABEL $label$21
	CALL $9(*(($3 + [248])))
	if ( ((*($3 + [256]) & [1]) == 0) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	if ( (*($3 + [256]) & [1]) ){ goto $label$18 }
	
.LABEL $label$19
	$global$0 = ($3 + [352])
	return 
	
.LABEL $label$18
	CALL $9(*(($3 + [264])))
	$global$0 = ($3 + [352])
}

void .FUNC $258 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [200])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [200])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [12692])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	$7 = ($4 & [-4])
	if ( ((int_32)$7 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [196]), $5, [4])
	*($3 + [184]) = (int_64)0
	*($3 + [176]) = (int_64)0
	$5 = ($2 + [12])
	if ( ((uint_32)($4 + [-12]) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	CALL memcpy(($3 + [176]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [20])
	if ( ((uint_32)($4 + [-20]) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$8
	CALL memcpy(($3 + [8]), $5, [8])
	*((($3 + [176]) + [8])) = *($3 + [8])
	$5 = ($2 + [28])
	if ( ((uint_32)($4 + [-28]) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$9
	CALL memcpy(($3 + [168]), $5, [8])
	$4 = ($2 + [36])
	if ( ((int_32)$7 != (int_32)[36]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$10
	CALL memcpy(($3 + [164]), $4, [4])
	*(($3 + [32])) = $6
	*((($3 + [8]) + [40])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($4 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($5 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [40])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($2 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL require_auth($0)
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$11 }
	$7 = ($3 + [68])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$13 }
	
.LOOP $label$14:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $9($4)
	
.LABEL $label$15
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$14 }
	$2 = *(($3 + [64]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $5
	
.LABEL $label$12
	*($7) = $5
	CALL $9($2)
	
.LABEL $label$11
	$global$0 = ($3 + [208])
}

void .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [6])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[67108864]) ){ goto $label$3 }
	$6 = [67108863]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [6]) > (uint_32)[33554430]) ){ goto $label$5 }
	$6 = int_32($7 >> [5])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[67108864]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $7(($6 << [6]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $43($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$8 = *($1 + [16 align=4])
	*($1 + [16 align=4]) = (int_64)0
	*(($5 = ($7 + ($4 << [6])))) = *($1)
	*($5 + [16 align=4]) = $8
	$9 = ($1 + [24])
	$10 = *($9)
	*($9) = [0]
	*($5 + [32]) = *($1 + [32])
	*(($5 + [8])) = *(($1 + [8]))
	*(($5 + [24])) = $10
	*(($5 + [40])) = *(($1 + [40]))
	*(($5 + [48])) = *(($1 + [48]))
	*(($5 + [56])) = *(($1 + [56]))
	$9 = ($7 + ($6 << [6]))
	$10 = ($5 + [64])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$6 }
	$5 = ($4 + [-1])
	$11 = ($5 - uint_32((($2 + [-64]) - $3) >> [6]))
	$5 = ($7 + ($5 << [6]))
	
.LOOP $label$7:
	*(($5 + [8])) = *(($2 + [-56]))
	$1 = ($2 + [-64])
	*($5) = *($1)
	$6 = ($2 + [-40])
	*(($5 + [24])) = *($6)
	$4 = ($2 + [-48])
	*(($5 + [16])) = *($4)
	*($6) = [0]
	*($4) = (int_64)0
	*(($5 + [48])) = *(($2 + [-16]))
	*(($5 + [40])) = *(($2 + [-24]))
	*(($5 + [32])) = *(($2 + [-32]))
	*(($5 + [56])) = *(($2 + [-8]))
	$5 = ($5 + [-64])
	$2 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$7 }
	$5 = ($7 + ($11 << [6]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $5
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($2 + [-64])
	if ( ((*(($2 + [-48])) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($2 + [-40])))
	
.LABEL $label$10
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$11 }
	CALL $9($3)
	
.LABEL $label$11
	(unreachable)
	(unreachable)
}

void .FUNC $313 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12073])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	CALL $314(*($1), *($0 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $314 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [6]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [16]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [16]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	$7 = ($2 + [28])
	
.LOOP $label$4:
	*($2 + [8]) = $0
	*($2 + [16]) = $4
	*((($2 + [16]) + [8])) = ($4 + [16])
	*($7) = ($4 + [32])
	*($2 + [20]) = ($4 + [8])
	CALL $315(($2 + [16]), ($2 + [8]))
	$4 = ($4 + [64])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $223 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [80])
	$global$0 = $2
	*(($3 = (($2 + [64]) + [8]))) = *(($1 + [24]))
	*($2 + [64]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = CALL $25(($2 + [48]), ($1 + [32]))
	$7 = CALL $25(($2 + [32]), ($1 + [44]))
	$8 = CALL $25(($2 + [16]), ($1 + [56]))
	$9 = *($1 + [72])
	*(($2 + [8])) = *($3)
	*($2) = *($2 + [64])
	CALL $335($0, $5, $4, $2, $6, $7, $8, $9)
	if ( (*($8) & [1]) ){ goto $label$5 }
	if ( (*($7) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL $9(*($8 + [8]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL $9(*($7 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($6) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [80])
	return 
	
.LABEL $label$1
	CALL $9(*($6 + [8]))
	$global$0 = ($2 + [80])
}

void .FUNC $316 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $268 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [304])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [244]) = $2
	*($3 + [240]) = $2
	$5 = ($2 + $4)
	*($3 + [248]) = $5
	*($3 + [232]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [248]))
	$2 = *($3 + [244])
	
.LABEL $label$5
	CALL memcpy(($3 + [232]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [244]) = $2
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$5 = *((($3 + [240]) + [8]))
	$2 = *($3 + [244])
	
.LABEL $label$6
	CALL memcpy(($3 + [224]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [244]) = $2
	*($3 + [216]) = (int_64)0
	*($3 + [208]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [248]))
	$2 = *($3 + [244])
	
.LABEL $label$7
	CALL memcpy(($3 + [208]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [244]) = $2
	*($3 + [32]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [244])
	
.LABEL $label$8
	CALL memcpy(($3 + [32]), $2, [8])
	*((($3 + [208]) + [8])) = *($3 + [32])
	*($3 + [244]) = ($2 + [8])
	*($3 + [200]) = [0]
	*($3 + [192]) = (int_64)0
	CALL $219(($3 + [240]), ($3 + [192]))
	$2 = *($3 + [244])
	if ( ((uint_32)(*((($3 + [240]) + [8])) - $2) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [244])
	
.LABEL $label$9
	CALL memcpy(($3 + [188]), $2, [4])
	$2 = (*($3 + [244]) + [4])
	*($3 + [244]) = $2
	$5 = (($3 + [240]) + [8])
	if ( ((uint_32)(*($5) - $2) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [244])
	
.LABEL $label$10
	CALL memcpy(($3 + [184]), $2, [4])
	*($3 + [244]) = (*($3 + [244]) + [4])
	*(($2 = (($3 + [16]) + [8]))) = *($5)
	*($3 + [16]) = *($3 + [240])
	$2 = *($2)
	*((($3 + [256]) + [8])) = $2
	*(($5 = (($3 + [272]) + [8]))) = $2
	$6 = *($3 + [16])
	*($3 + [272]) = $6
	*($3 + [256]) = $6
	$2 = *($5)
	*((($3 + [288]) + [8])) = $2
	*(($3 + [56])) = $2
	*($3 + [32]) = $0
	*($3 + [40]) = $1
	$1 = *($3 + [272])
	*($3 + [48]) = $1
	*($3 + [288]) = $1
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($5 = ($3 + [88]))) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($4 = ($3 + [128]))) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($7 = ($3 + [168]))) = (int_64)0
	*(($3 + [176])) = [0]
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	$0 = *($3 + [232])
	$2 = CALL $25($3, ($3 + [192]))
	CALL require_auth(*($3 + [32]))
	CALL require_recipient($0)
	if ( ((*($2) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$11
	CALL $217($7)
	CALL $218($4)
	$4 = *($5)
	if ( ($4 == 0) ){ goto $label$12 }
	$7 = ($3 + [92])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $9($5)
	
.LABEL $label$16
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($3 + [88]))
	goto $label$13 
	
.LABEL $label$14
	$2 = $4
	
.LABEL $label$13
	*($7) = $4
	CALL $9($2)
	
.LABEL $label$12
	if ( ((*($3 + [192]) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*(($3 + [200])))
	
.LABEL $label$17
	$global$0 = ($3 + [304])
}

void .FUNC $251 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [152])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [152])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [12692])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $52($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $250 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [308]) = $2
	*($3 + [304]) = $2
	$5 = ($2 + $4)
	*($3 + [312]) = $5
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [312]))
	$2 = *($3 + [308])
	
.LABEL $label$5
	CALL memcpy(($3 + [296]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [308]) = $2
	*($3 + [288]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$5 = *((($3 + [304]) + [8]))
	$2 = *($3 + [308])
	
.LABEL $label$6
	CALL memcpy(($3 + [288]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [308]) = $2
	*($3 + [280]) = (int_64)0
	*($3 + [272]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$5 = *(($3 + [312]))
	$2 = *($3 + [308])
	
.LABEL $label$7
	CALL memcpy(($3 + [272]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [308]) = $2
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [308])
	
.LABEL $label$8
	CALL memcpy(($3 + [64]), $2, [8])
	*((($3 + [272]) + [8])) = *($3 + [64])
	*($3 + [308]) = ($2 + [8])
	*($3 + [264]) = [0]
	*($3 + [256]) = (int_64)0
	CALL $219(($3 + [304]), ($3 + [256]))
	*($3 + [248]) = [0]
	*($3 + [240]) = (int_64)0
	CALL $219(($3 + [304]), ($3 + [240]))
	*($3 + [232]) = [0]
	*($3 + [224]) = (int_64)0
	CALL $219(($3 + [304]), ($3 + [224]))
	$2 = *($3 + [308])
	if ( ((uint_32)(*((($3 + [304]) + [8])) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	$2 = *($3 + [308])
	
.LABEL $label$9
	CALL memcpy(($3 + [216]), $2, [8])
	*($3 + [308]) = (*($3 + [308]) + [8])
	*(($2 = (($3 + [48]) + [8]))) = *((($3 + [304]) + [8]))
	*($3 + [48]) = *($3 + [304])
	$2 = *($2)
	*((($3 + [320]) + [8])) = $2
	*(($5 = (($3 + [336]) + [8]))) = $2
	$6 = *($3 + [48])
	*($3 + [336]) = $6
	*($3 + [320]) = $6
	$2 = *($5)
	*((($3 + [352]) + [8])) = $2
	*(($3 + [88])) = $2
	*($3 + [64]) = $0
	*($3 + [72]) = $1
	$1 = *($3 + [336])
	*($3 + [80]) = $1
	*($3 + [352]) = $1
	*(($3 + [104])) = $0
	*(($3 + [112])) = (int_64)-1
	*(($3 + [120])) = (int_64)0
	*(($3 + [128])) = [0]
	*(($3 + [144])) = $0
	*(($3 + [152])) = (int_64)-1
	*(($3 + [160])) = (int_64)0
	*(($3 + [168])) = [0]
	*(($3 + [184])) = $0
	*(($3 + [192])) = (int_64)-1
	*(($3 + [200])) = (int_64)0
	*(($3 + [208])) = [0]
	*($3 + [96]) = $0
	*($3 + [136]) = $0
	*($3 + [176]) = $0
	$0 = *($3 + [288])
	$2 = CALL $25(($3 + [32]), ($3 + [256]))
	$5 = CALL $25(($3 + [16]), ($3 + [240]))
	$4 = CALL $25($3, ($3 + [224]))
	CALL require_auth(*($3 + [64]))
	CALL require_recipient($0)
	if ( (*($4) & [1]) ){ goto $label$14 }
	if ( (*($5) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $9(*($4 + [8]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9(*($5 + [8]))
	if ( (*($2) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	if ( ((*($2) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*($2 + [8]))
	
.LABEL $label$10
	CALL $217(($3 + [200]))
	CALL $218(($3 + [160]))
	$4 = *(($3 + [120]))
	if ( ($4 == 0) ){ goto $label$15 }
	$7 = ($3 + [124])
	$2 = *($7)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$17 }
	
.LOOP $label$18:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	CALL $9($5)
	
.LABEL $label$19
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$18 }
	$2 = *(($3 + [120]))
	goto $label$16 
	
.LABEL $label$17
	$2 = $4
	
.LABEL $label$16
	*($7) = $4
	CALL $9($2)
	
.LABEL $label$15
	if ( (*($3 + [224]) & [1]) ){ goto $label$24 }
	if ( (*($3 + [240]) & [1]) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	CALL $9(*(($3 + [232])))
	if ( ((*($3 + [240]) & [1]) == 0) ){ goto $label$22 }
	
.LABEL $label$23
	CALL $9(*(($3 + [248])))
	if ( ((*($3 + [256]) & [1]) == 0) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	if ( (*($3 + [256]) & [1]) ){ goto $label$20 }
	
.LABEL $label$21
	$global$0 = ($3 + [368])
	return 
	
.LABEL $label$20
	CALL $9(*(($3 + [264])))
	$global$0 = ($3 + [368])
}

void .FUNC $253 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	*($3 + [208]) = (int_64)0
	*($3 + [200]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [200]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	$6 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*(($5 = (($3 + [200]) + [8]))) = *($3 + [40])
	$7 = ($2 + [24])
	if ( ((int_32)($4 & [-4]) != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$8
	CALL memcpy(($3 + [196]), $7, [4])
	*((($3 + [40]) + [24])) = $6
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($4 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($6 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [28])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	*(($3 + [168])) = (int_64)-1
	*(($2 = ($3 + [176]))) = (int_64)0
	*(($3 + [184])) = [0]
	$0 = *($5)
	*((($3 + [24]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [200])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $100(($3 + [40]), *($3 + [216]), ($3 + [8]), *($3 + [196]))
	CALL $217($2)
	CALL $218($6)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$9 }
	$6 = ($3 + [100])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($3 + [96]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $5
	
.LABEL $label$10
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$9
	$global$0 = ($3 + [224])
}

void .FUNC $252 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($5 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($2 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($4 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $56(($3 + [8]))
	CALL $217($4)
	CALL $218($2)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$4 }
	$6 = ($3 + [68])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $9($5)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$4 = *(($3 + [64]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($6) = $2
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($3 + [160])
}

void .FUNC $255 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $108($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $254 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $106($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $257 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($5 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($2 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($4 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $117(($3 + [8]))
	CALL $217($4)
	CALL $218($2)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$4 }
	$6 = ($3 + [68])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $9($5)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$4 = *(($3 + [64]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($6) = $2
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($3 + [160])
}

void .FUNC $256 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $115($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

int_32 .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [96])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([176])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = [0]
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [96]) = [0]
	*($5 + [104]) = (int_64)0
	*($5 + [112 align=4]) = (int_64)0
	*($5 + [120 align=4]) = (int_64)0
	*($5 + [128 align=4]) = (int_64)0
	*($5 + [136]) = [0]
	*(($5 + [88])) = (int_64)0
	*(($5 + [80])) = (int_64)0
	*(($5 + [72])) = (int_64)0
	*($5 + [140 align=4]) = (int_64)0
	*($5 + [148 align=4]) = (int_64)0
	*($5 + [156]) = [0]
	*($5 + [160]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [40])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [96])
	*($3 + [72]) = ($5 + [104])
	*($3 + [76]) = ($5 + [112])
	*($3 + [80]) = ($5 + [124])
	*($3 + [84]) = ($5 + [136])
	*($3 + [88]) = ($5 + [148])
	CALL $328(($3 + [40]), ($3 + [32]))
	*($5 + [164]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $329(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( (*($1 + [148]) & [1]) ){ goto $label$17 }
	if ( (*($1 + [136]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $9(*(($1 + [156])))
	if ( ((*($1 + [136]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*(($1 + [144])))
	$4 = [1]
	if ( ((*($1 + [124]) & [1]) == 0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$4 = [1]
	if ( (*($1 + [124]) & [1]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((*($1 + [112]) & $4) == 0) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	CALL $9(*(($1 + [132])))
	if ( ((*($1 + [112]) & $4) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	CALL $9(*(($1 + [120])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [96])
	return $5
}

int_32 .FUNC $99 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((*($3 + [148]) & [1]) == 0) ){ goto $label$12 }
	CALL $9(*(($3 + [156])))
	if ( ((*($3 + [136]) & [1]) == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((*($3 + [136]) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $9(*(($3 + [144])))
	if ( ((*($3 + [124]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($3 + [124]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($3 + [132])))
	if ( (*($3 + [112]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($3 + [120])))
	
.LABEL $label$6
	CALL $9($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $9($3)
	
.LABEL $label$1
	return $0
}

void .FUNC $239 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	*($2 + [8]) = $4
	CALL $339(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$3 = ($4 + [20])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
	*($2 + [8]) = $4
	CALL $338(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $43($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $301(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $291(CALL $290($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $97 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [432])
	$global$0 = $2
	CALL require_auth(*($0))
	*($2 + [376]) = [9717]
	*($2 + [380]) = CALL $15([9717])
	*($2 + [64]) = *($2 + [376])
	$3 = CALL $60(($2 + [384]), ($2 + [64]))
	*($2 + [368]) = [9717]
	*($2 + [372]) = CALL $15([9717])
	*($2 + [56]) = *($2 + [368])
	CALL $60(($2 + [216]), ($2 + [56]))
	$4 = [0]
	*(($2 + [424])) = [0]
	*($2 + [408]) = (int_64)-1
	*($2 + [416]) = (int_64)0
	$5 = *($3)
	*($2 + [392]) = $5
	*($2 + [400]) = (int_64)6138559790171559280
	$3 = CALL db_find_i64($5, (int_64)6138559790171559280, (int_64)-2494308785502289920, $1)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $98(($2 + [392]), $3)
	if ( ((int_32)*($4 + [160]) == (int_32)($2 + [392])) ){ goto $label$4 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$4
	$3 = *($4 + [96])
	if ( ((int_32)$3 != (int_32)[100]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [10062])
	$3 = *([0] + [96])
	if ( ((int_32)$3 != (int_32)[100]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10082])
	$3 = *(($4 + [96]))
	
.LABEL $label$1
	if ( ((int_32)(($3 | [2]) & [255]) != (int_32)[2]) ){ goto $label$5 }
	CALL eosio_assert([0], [10098])
	$3 = *(($4 + [96]))
	
.LABEL $label$5
	$3 = ($3 & [255])
	if ( ((int_32)$3 == (int_32)[1]) ){ goto $label$6 }
	if ( ((int_32)$3 == (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10117])
	
.LABEL $label$6
	if ( (int_64)(*($4 + [40]) == 0) ){ goto $label$7 }
	$5 = *($0)
	*($2 + [296]) = [9370]
	*($2 + [300]) = CALL $15([9370])
	*($2 + [48]) = *($2 + [296])
	$3 = CALL $60(($2 + [304]), ($2 + [48]))
	*($2 + [312]) = $5
	*($2 + [320]) = *($3)
	*($2 + [280]) = [9377]
	*($2 + [284]) = CALL $15([9377])
	*($2 + [40]) = *($2 + [280])
	$6 = CALL $60(($2 + [288]), ($2 + [40]))
	*($2 + [264]) = [9389]
	*($2 + [268]) = CALL $15([9389])
	*($2 + [32]) = *($2 + [264])
	$7 = CALL $60(($2 + [272]), ($2 + [32]))
	$8 = *($0)
	if ( (*($4 + [16]) == 0) ){ goto $label$19 }
	*($2 + [200]) = [8723]
	*($2 + [204]) = CALL $15([8723])
	*($2 + [24]) = *($2 + [200])
	$9 = ($4 + [40])
	CALL $60(($2 + [208]), ($2 + [24]))
	if ( (*(($4 + [16])) == 0) ){ goto $label$18 }
	*(($2 + [160])) = [0]
	*($2 + [152]) = (int_64)0
	$4 = CALL $15([10162])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$16 }
	*($2 + [152]) = ($4 << [1])
	$10 = (($2 + [152]) | [1])
	if ( $4 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$19
	*($2 + [208]) = $1
	$9 = ($4 + [40])
	$4 = ($2 + [184])
	goto $label$17 
	
.LABEL $label$18
	$4 = ($2 + [184])
	
.LABEL $label$17
	*($4) = (int_64)0
	*(($4 + [8])) = [0]
	$3 = CALL $15([10137])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$22 }
	*($2 + [184]) = ($3 << [1])
	$10 = (($2 + [184]) | [1])
	if ( $3 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$11 = (($3 + [16]) & [-16])
	$10 = CALL $7($11)
	*($2 + [184]) = ($11 | [1])
	*($2 + [192]) = $10
	*($2 + [188]) = $3
	
.LABEL $label$21
	CALL memcpy($10, [10137], $3)
	
.LABEL $label$20
	$11 = [0]
	*(($10 + $3)) = [0]
	goto $label$13 
	
.LABEL $label$16
	$3 = (($4 + [16]) & [-16])
	$10 = CALL $7($3)
	*($2 + [152]) = ($3 | [1])
	*($2 + [160]) = $10
	*($2 + [156]) = $4
	
.LABEL $label$15
	CALL memcpy($10, [10162], $4)
	
.LABEL $label$14
	$3 = [0]
	*(($10 + $4)) = [0]
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$26 }
	$10 = *([0] + [12036])
	$5 = $1
	
.LOOP $label$28:
	*((($2 + [216]) + ($4 = $3))) = *(($10 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$3 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$27 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$28 }
	
.LABEL $label$27
	*(($2 + [144])) = [0]
	*($2 + [136]) = (int_64)0
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$25 }
	*($2 + [136]) = ($3 << [1])
	$10 = (($2 + [136]) | [1])
	goto $label$24 
	
.LABEL $label$26
	*(($2 + [144])) = [0]
	*($2 + [136]) = (int_64)0
	*($2 + [136]) = [0]
	$10 = (($2 + [136]) | [1])
	$4 = $10
	goto $label$23 
	
.LABEL $label$25
	$11 = (($3 + [16]) & [-16])
	$10 = CALL $7($11)
	*($2 + [136]) = ($11 | [1])
	*($2 + [144]) = $10
	*($2 + [140]) = $3
	
.LABEL $label$24
	$11 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$29:
	*(($10 + $4)) = *((($2 + [216]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$11 != (int_32)$4) ){ goto $label$29 }
	$4 = ($10 + $3)
	$10 = (($2 + [136]) | [1])
	
.LABEL $label$23
	*($4) = [0]
	$4 = *($2 + [136])
	$3 = ($4 & [1])
	$4 = CALL $32(($2 + [152]), ( *($2 + [144]) ? $10 : $3 ), ( *($2 + [140]) ? uint_32($4 >> [1]) : $3 ))
	$3 = ($4 + [8])
	*((($2 + [168]) + [8])) = *($3)
	*($2 + [168]) = *($4)
	*($4) = (int_64)0
	*($3) = [0]
	*((($2 + [120]) + [8])) = [0]
	*($2 + [120]) = (int_64)0
	$4 = CALL $15([10188])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$32 }
	*($2 + [120]) = ($4 << [1])
	$10 = (($2 + [120]) | [1])
	$3 = $10
	if ( $4 ){ goto $label$31 }
	goto $label$30 
	
.LABEL $label$32
	$10 = (($4 + [16]) & [-16])
	$3 = CALL $7($10)
	*($2 + [120]) = ($10 | [1])
	*($2 + [128]) = $3
	*($2 + [124]) = $4
	$10 = (($2 + [120]) | [1])
	
.LABEL $label$31
	CALL memcpy($3, [10188], $4)
	
.LABEL $label$30
	*(($3 + $4)) = [0]
	$11 = [1]
	$4 = *($2 + [120])
	$3 = ($4 & [1])
	$4 = CALL $32(($2 + [168]), ( *($2 + [128]) ? $10 : $3 ), ( *($2 + [124]) ? uint_32($4 >> [1]) : $3 ))
	$3 = ($4 + [8])
	*((($2 + [184]) + [8])) = *($3)
	*($2 + [184]) = *($4)
	*($4) = (int_64)0
	*($3) = [0]
	$4 = ($2 + [184])
	
.LABEL $label$13
	*($2 + [224]) = *($2 + [208])
	*($2 + [216]) = $8
	*(($2 + [240])) = *(($9 + [8]))
	*($2 + [232]) = *($9)
	*(($2 + [256])) = *(($4 + [8]))
	$5 = *($4)
	*($2 + [184]) = (int_64)0
	*($2 + [192]) = [0]
	*($2 + [248]) = $5
	$4 = CALL $74(($2 + [328]), ($2 + [312]), *($6), *($7), ($2 + [216]))
	CALL $75($4)
	$3 = *($4 + [28])
	if ( ($3 == 0) ){ goto $label$33 }
	*(($4 + [32])) = $3
	CALL $9($3)
	
.LABEL $label$33
	$3 = *($4 + [16])
	if ( ($3 == 0) ){ goto $label$34 }
	*(($4 + [20])) = $3
	CALL $9($3)
	
.LABEL $label$34
	if ( (*(($2 + [248])) & [1]) ){ goto $label$36 }
	if ( (*($2 + [184]) & [1]) ){ goto $label$35 }
	goto $label$9 
	
.LABEL $label$36
	CALL $9(*(($2 + [256])))
	if ( ((*($2 + [184]) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$35
	CALL $9(*(($2 + [192])))
	if ( $11 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$12
	CALL $24(($2 + [184]))
	
.LABEL $label$11
	CALL $24(($2 + [152]))
	
.LABEL $label$10
	CALL $24(($2 + [120]))
	
.LABEL $label$9
	if ( ($11 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($2 + [120]) & [1]) ){ goto $label$42 }
	if ( (*($2 + [168]) & [1]) ){ goto $label$41 }
	goto $label$40 
	
.LABEL $label$42
	CALL $9(*($2 + [128]))
	if ( ((*($2 + [168]) & [1]) == 0) ){ goto $label$40 }
	
.LABEL $label$41
	CALL $9(*($2 + [176]))
	$4 = [1]
	if ( ((*($2 + [136]) & [1]) == 0) ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$4 = [1]
	if ( (*($2 + [136]) & [1]) ){ goto $label$38 }
	
.LABEL $label$39
	if ( (*($2 + [152]) & $4) ){ goto $label$37 }
	goto $label$7 
	
.LABEL $label$38
	CALL $9(*($2 + [144]))
	if ( ((*($2 + [152]) & $4) == 0) ){ goto $label$7 }
	
.LABEL $label$37
	CALL $9(*($2 + [160]))
	
.LABEL $label$7
	$5 = *($0)
	*($2 + [104]) = [9370]
	*($2 + [108]) = CALL $15([9370])
	*($2 + [16]) = *($2 + [104])
	$8 = *(CALL $60(($2 + [112]), ($2 + [16])))
	*($2 + [88]) = [9717]
	*($2 + [92]) = CALL $15([9717])
	*($2 + [8]) = *($2 + [88])
	$4 = CALL $60(($2 + [96]), ($2 + [8]))
	*($2 + [72]) = [10227]
	*($2 + [76]) = CALL $15([10227])
	*($2) = *($2 + [72])
	$3 = CALL $60(($2 + [80]), $2)
	*($2 + [328]) = $1
	*($2 + [216]) = *($4)
	*($2 + [224]) = *($3)
	*(($4 = CALL $7([16]))) = $5
	*($4 + [8]) = $8
	*(($2 + [252])) = [0]
	$3 = ($4 + [16])
	*(($2 + [240])) = $3
	*(($2 + [236])) = $3
	*($2 + [232]) = $4
	*($2 + [244 align=4]) = (int_64)0
	CALL $94(($2 + [244]), [8])
	$4 = *($2 + [244])
	if ( ((int_32)(*(($2 + [248])) - $4) > (int_32)[7]) ){ goto $label$43 }
	CALL eosio_assert([0], [12073])
	
.LABEL $label$43
	CALL memcpy($4, ($2 + [328]), [8])
	CALL $75(($2 + [216]))
	$4 = *($2 + [244])
	if ( ($4 == 0) ){ goto $label$44 }
	*(($2 + [248])) = $4
	CALL $9($4)
	
.LABEL $label$44
	$4 = *($2 + [232])
	if ( ($4 == 0) ){ goto $label$45 }
	*(($2 + [236])) = $4
	CALL $9($4)
	
.LABEL $label$45
	CALL $99(($2 + [416]))
	$global$0 = ($2 + [432])
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [80])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$5 = CALL $7([120])
	CALL $140($5)
	*($5 + [104]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [24])
	*($3 + [52]) = ($5 + [32])
	*($3 + [56]) = ($5 + [48])
	*($3 + [60]) = ($5 + [56])
	*($3 + [64]) = ($5 + [64])
	*($3 + [68]) = ($5 + [72])
	*($3 + [72]) = ($5 + [80])
	*($3 + [76]) = ($5 + [92])
	CALL $319(($3 + [40]), ($3 + [32]))
	*($5 + [108]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $142(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [92])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [96])) = $4
	CALL $9($4)
	
.LABEL $label$11
	$4 = *($1 + [80])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [84])) = $4
	CALL $9($4)
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [80])
	return $5
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12079])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL $7([56])) + [40]) = $0
	*($3 + [32]) = ($3 + [16])
	*($3 + [44]) = ($5 + [8])
	*($3 + [40]) = $5
	*($3 + [48]) = ($5 + [16])
	*($3 + [52]) = ($5 + [24])
	*($3 + [56]) = ($5 + [32])
	CALL $322(($3 + [40]), ($3 + [32]))
	*($5 + [44]) = $1
	*($3 + [32]) = $5
	$7 = *($5)
	*($3 + [40]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [32]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $138(($0 + [24]), ($3 + [32]), ($3 + [40]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [32])
	*($3 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	CALL $137(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$6 = *($3)
	$7 = *($1)
	$8 = ($1 + [84])
	$9 = *($8)
	if ( ((int_32)$9 == (int_32)*(($1 + [88]))) ){ goto $label$4 }
	*($8) = ($9 + [8])
	*($9) = *($6)
	goto $label$3 
	
.LABEL $label$4
	CALL $323(($1 + [80]), $6)
	
.LABEL $label$3
	$3 = *($3 + [4])
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$5 }
	CALL eosio_assert([0], [12399])
	
.LABEL $label$5
	$10 = ((int_64)*($1 + [32]) + (int_64)*($3))
	*($1 + [32]) = $10
	if ( ((int_64)$10 <= (int_64)-4611686018427387904) ){ goto $label$10 }
	if ( ((int_64)$10 >= (int_64)4611686018427387904) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL eosio_assert([0], [12442])
	if ( ((int_64)*(($1 + [32])) < (int_64)4611686018427387904) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [12461])
	if ( ((int_64)$7 != (int_64)*($1)) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [12234])
	
.LABEL $label$6
	$9 = ($1 + [80])
	$8 = *($1 + [80])
	$6 = *(($1 + [84]))
	$11 = ($6 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($11 >> [3]))
	$3 = [69]
	
.LOOP $label$11:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$11 }
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$12 }
	$3 = (($11 & [-8]) + $3)
	
.LABEL $label$12
	$6 = ($1 + [92])
	$11 = *($1 + [92])
	$8 = *(($1 + [96]))
	$12 = ($8 - $11)
	$10 = (CASTING uint_64)(uint_32 int_32($12 >> [3]))
	
.LOOP $label$13:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$14 }
	$3 = (($12 & [-8]) + $3)
	
.LABEL $label$14
	if ( ($3 <= [513]) ){ goto $label$16 }
	$4 = CALL $1($3)
	goto $label$15 
	
.LABEL $label$16
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$15
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [56]) = $9
	*($5 + [60]) = $6
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [48])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [72])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $2($4)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$17 }
	
.LABEL $label$18
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$17
	$global$0 = ($5 + [64])
}

void .FUNC $138 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $139 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5, int_32 $6, int_64 $7)
{
	int_32 $8
	int_32 $9
	$8 = ($global$0 - [176])
	$global$0 = $8
	*($8 + [120]) = $4
	*($8 + [112]) = $5
	*($8 + [108]) = $6
	*($8 + [96]) = $7
	*($8 + [128]) = $1
	*($8 + [80]) = [10825]
	*($8 + [84]) = CALL $15([10825])
	*($8) = *($8 + [80])
	CALL require_auth(*(CALL $60(($8 + [88]), $8)))
	$6 = [0]
	*(($8 + [72])) = [0]
	*($8 + [56]) = (int_64)-1
	*($8 + [64]) = (int_64)0
	$7 = *($0)
	*($8 + [40]) = $7
	*($8 + [48]) = $7
	$9 = CALL db_find_i64($7, $7, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)*(CALL $90(($8 + [40]), $9) + [104]) == (int_32)($8 + [40])) ){ goto $label$1 }
	$6 = [0]
	CALL eosio_assert([0], [12293])
	goto $label$1 
	
.LABEL $label$2
	$6 = [1]
	
.LABEL $label$1
	CALL eosio_assert($6, [10838])
	$7 = *($2 + [8])
	CALL eosio_assert(((int_32)((CASTING uint_32)(uint_64 $7) & [255]) == (int_32)[4]), [10271])
	$1 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = CALL $15([8898])
	if ( ($6 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11869])
	goto $label$5 
	
.LABEL $label$6
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (int_64)0
	
.LOOP $label$7:
	$9 = *(($6 + [8897]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$8
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$7 = (int_64)0
	
.LABEL $label$3
	CALL eosio_assert(((int_64)$1 == (int_64)$7), [8902])
	$7 = *($0)
	*($8 + [12]) = $2
	*($8 + [32]) = $3
	*($8 + [8]) = ($8 + [128])
	*($8 + [16]) = ($8 + [120])
	*($8 + [20]) = ($8 + [108])
	*($8 + [24]) = ($8 + [112])
	*($8 + [28]) = ($8 + [96])
	*($8 + [168]) = $7
	if ( ((int_64)*($8 + [40]) == (int_64)CALL current_receiver()) ){ goto $label$9 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$9
	*($8 + [148]) = ($8 + [8])
	*($8 + [144]) = ($8 + [40])
	*($8 + [152]) = ($8 + [168])
	$6 = CALL $7([120])
	CALL $140($6)
	*($6 + [104]) = ($8 + [40])
	CALL $141(($8 + [144]), $6)
	*($8 + [160]) = $6
	$7 = *($6)
	*($8 + [144]) = $7
	$2 = *($6 + [108])
	*($8 + [140]) = $2
	$0 = ($8 + [68])
	$9 = *($0)
	if ( ((uint_32)$9 >= (uint_32)*(($8 + [72]))) ){ goto $label$14 }
	*($9 + [8]) = $7
	*($9 + [16]) = $2
	*($8 + [160]) = [0]
	*($9) = $6
	*($0) = ($9 + [24])
	$6 = *($8 + [160])
	*($8 + [160]) = [0]
	if ( ($6 == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $142(($8 + [64]), ($8 + [160]), ($8 + [144]), ($8 + [140]))
	$6 = *($8 + [160])
	*($8 + [160]) = [0]
	if ( $6 ){ goto $label$12 }
	
.LABEL $label$13
	$0 = *($8 + [64])
	if ( ($0 == 0) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$12
	$9 = *($6 + [92])
	if ( ($9 == 0) ){ goto $label$15 }
	*(($6 + [96])) = $9
	CALL $9($9)
	
.LABEL $label$15
	$9 = *($6 + [80])
	if ( ($9 == 0) ){ goto $label$16 }
	*(($6 + [84])) = $9
	CALL $9($9)
	
.LABEL $label$16
	CALL $9($6)
	$0 = *($8 + [64])
	if ( ($0 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$3 = ($8 + [68])
	$9 = *($3)
	if ( ((int_32)$9 == (int_32)$0) ){ goto $label$18 }
	
.LOOP $label$19:
	$9 = ($9 + [-24])
	$6 = *($9)
	*($9) = [0]
	if ( ($6 == 0) ){ goto $label$20 }
	$2 = *($6 + [92])
	if ( ($2 == 0) ){ goto $label$21 }
	*(($6 + [96])) = $2
	CALL $9($2)
	
.LABEL $label$21
	$2 = *($6 + [80])
	if ( ($2 == 0) ){ goto $label$22 }
	*(($6 + [84])) = $2
	CALL $9($2)
	
.LABEL $label$22
	CALL $9($6)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$9) ){ goto $label$19 }
	$6 = *(($8 + [64]))
	goto $label$17 
	
.LABEL $label$18
	$6 = $0
	
.LABEL $label$17
	*($3) = $0
	CALL $9($6)
	
.LABEL $label$10
	$global$0 = ($8 + [176])
}

void .FUNC $269 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($5 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($2 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($4 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $136(($3 + [8]))
	CALL $217($4)
	CALL $218($2)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$4 }
	$6 = ($3 + [68])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $9($5)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$4 = *(($3 + [64]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($6) = $2
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($3 + [160])
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
}

void .FUNC $131 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $133 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	CALL require_auth(*($0))
	CALL require_recipient($1)
}

void .FUNC $134 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	$5 = ($global$0 - [144])
	$global$0 = $5
	*($5 + [48]) = $4
	*($5 + [52]) = $3
	*($5 + [56]) = $2
	*($5 + [60]) = $1
	CALL require_auth(*($0))
	CALL eosio_assert(($1 <= [41]), [10643])
	CALL eosio_assert(($2 <= [96]), [10680])
	CALL eosio_assert(($3 <= [96]), [10722])
	CALL eosio_assert(($4 <= [101]), [10764])
	*(($5 + [40])) = [0]
	*($5 + [24]) = (int_64)-1
	$6 = *($0)
	*($5 + [8]) = $6
	*($5 + [16]) = $6
	*($5 + [32]) = (int_64)0
	$1 = CALL db_find_i64($6, $6, (int_64)-5594449976101961728, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $77(($5 + [8]), $1)
	if ( ((int_32)*($1 + [24]) == (int_32)($5 + [8])) ){ goto $label$4 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$4
	$6 = *($0)
	*($5 + [68]) = ($5 + [56])
	*($5 + [64]) = ($5 + [60])
	*($5 + [72]) = ($5 + [52])
	*($5 + [76]) = ($5 + [48])
	CALL $135(($5 + [8]), $1, $6, ($5 + [64]))
	$2 = *($5 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$7 = *($0)
	if ( ((int_64)$6 == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$5
	*(($0 = CALL $7([40]))) = (int_64)0
	*($0 + [24]) = ($5 + [8])
	*($0 + [8]) = *($5 + [60])
	*($0 + [12]) = *($5 + [56])
	*($0 + [16]) = *($5 + [52])
	*($0 + [20]) = *($5 + [48])
	*($5 + [104]) = (($5 + [64]) + [24])
	*($5 + [100]) = ($5 + [64])
	*($5 + [96]) = ($5 + [64])
	*($5 + [112]) = ($5 + [96])
	*($5 + [124]) = ($0 + [8])
	*($5 + [120]) = $0
	*($5 + [128]) = ($0 + [12])
	*($5 + [132]) = ($0 + [16])
	*($5 + [136]) = ($0 + [20])
	CALL $130(($5 + [120]), ($5 + [112]))
	$6 = *($0)
	$2 = CALL db_store_i64(*((($5 + [8]) + [8])), (int_64)-5594449976101961728, $7, $6, ($5 + [64]), [24])
	*($0 + [28]) = $2
	$1 = (($5 + [8]) + [16])
	if ( (uint_64)($6 <= *($1)) ){ goto $label$6 }
	*($1) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($5 + [120]) = $0
	$6 = *($0)
	*($5 + [64]) = $6
	*($5 + [96]) = $2
	$3 = ($5 + [36])
	$1 = *($3)
	if ( ((uint_32)$1 >= (uint_32)*(($5 + [40]))) ){ goto $label$9 }
	*($1 + [8]) = $6
	*($1 + [16]) = $2
	*($5 + [120]) = [0]
	*($1) = $0
	*($3) = ($1 + [24])
	$0 = *($5 + [120])
	*($5 + [120]) = [0]
	if ( $0 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $131(($5 + [32]), ($5 + [120]), ($5 + [64]), ($5 + [96]))
	$0 = *($5 + [120])
	*($5 + [120]) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9($0)
	
.LABEL $label$7
	$2 = *($5 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($5 + [36])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $9($1)
	
.LABEL $label$13
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$12 }
	$0 = *(($5 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $2
	
.LABEL $label$10
	*($3) = $2
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($5 + [144])
}

void .FUNC $135 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	*($1 + [12]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [20]) = *(*($3 + [12]))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [16]) = $5
	*($5 + [28]) = ($1 + [8])
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [12])
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [20])
	CALL $130(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($5 + [48])
}

void .FUNC $136 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [144])
	$global$0 = $1
	CALL require_auth(*($0))
	$2 = [0]
	*(($1 + [40])) = [0]
	*($1 + [24]) = (int_64)-1
	$3 = *($0)
	*($1 + [8]) = $3
	*($1 + [16]) = $3
	*($1 + [32]) = (int_64)0
	$4 = CALL db_lowerbound_i64($3, $3, (int_64)-3659882349576847360, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $91(($1 + [8]), $4)
	goto $label$1 
	
.LABEL $label$2
	$2 = [1]
	
.LABEL $label$1
	CALL eosio_assert($2, [10810])
	$5 = *($0)
	if ( ((int_64)*($1 + [8]) == (int_64)CALL current_receiver()) ){ goto $label$3 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$3
	*(($0 = CALL $7([56])) + [40]) = ($1 + [8])
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = (int_64)0
	*($0 + [32]) = (int_64)0
	*($1 + [104]) = (($1 + [48]) + [40])
	*($1 + [100]) = ($1 + [48])
	*($1 + [96]) = ($1 + [48])
	*($1 + [112]) = ($1 + [96])
	*($1 + [124]) = ($0 + [8])
	*($1 + [120]) = $0
	*($1 + [128]) = ($0 + [16])
	*($1 + [132]) = ($0 + [24])
	*($1 + [136]) = ($0 + [32])
	CALL $137(($1 + [120]), ($1 + [112]))
	$3 = *($0)
	$4 = CALL db_store_i64(*((($1 + [8]) + [8])), (int_64)-3659882349576847360, $5, $3, ($1 + [48]), [40])
	*($0 + [44]) = $4
	$2 = (($1 + [8]) + [16])
	if ( (uint_64)($3 <= *($2)) ){ goto $label$4 }
	*($2) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($1 + [120]) = $0
	$3 = *($0)
	*($1 + [48]) = $3
	*($1 + [96]) = $4
	$6 = ($1 + [36])
	$2 = *($6)
	if ( ((uint_32)$2 >= (uint_32)*((($1 + [8]) + [32]))) ){ goto $label$7 }
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	*($1 + [120]) = [0]
	*($2) = $0
	*($6) = ($2 + [24])
	$0 = *($1 + [120])
	*($1 + [120]) = [0]
	if ( $0 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL $138(($1 + [32]), ($1 + [120]), ($1 + [48]), ($1 + [96]))
	$0 = *($1 + [120])
	*($1 + [120]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $9($0)
	
.LABEL $label$5
	$4 = *($1 + [32])
	if ( ($4 == 0) ){ goto $label$8 }
	$6 = ($1 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$11 }
	$0 = *(($1 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$0 = $4
	
.LABEL $label$9
	*($6) = $4
	CALL $9($0)
	
.LABEL $label$8
	$global$0 = ($1 + [144])
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $260 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $111($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $323 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $7(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $43($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $9($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $261 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [28])) = $4
	*(($3 + [32])) = ($4 + $5)
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($5 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($2 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $4
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($4 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $118(($3 + [8]))
	CALL $217($4)
	CALL $218($2)
	$2 = *($5)
	if ( ($2 == 0) ){ goto $label$4 }
	$6 = ($3 + [68])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$5 = *($4)
	*($4) = [0]
	if ( ($5 == 0) ){ goto $label$8 }
	CALL $9($5)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$4 = *(($3 + [64]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($6) = $2
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($3 + [160])
}

int_32 .FUNC $213 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [304])
	$global$0 = $3
	*(($4 = $3) + [248]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [184]) + [24])) = (int_64)0
	*(($4 + [216])) = (int_64)0
	*((($4 + [184]) + [48])) = [0]
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $5)
	*($4 + [288]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $226(($4 + [16]), ($4 + [288]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [256]) + [8])) = $3
	*(($6 = (($4 + [272]) + [8]))) = $3
	$7 = *($4)
	*($4 + [272]) = $7
	*($4 + [256]) = $7
	$3 = *($6)
	*((($4 + [288]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [272])
	*($4 + [32]) = $1
	*($4 + [288]) = $1
	*(($4 + [56])) = $0
	*((($4 + [16]) + [48])) = (int_64)-1
	*(($3 = ($4 + [72]))) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($6 = ($4 + [112]))) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($8 = ($4 + [152]))) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [292]) = ($4 + [248])
	*($4 + [288]) = ($4 + [16])
	CALL $227(($4 + [288]), ($4 + [184]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $217($8)
	CALL $218($6)
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($4 + [76])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($4 + [72]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($2)
	
.LABEL $label$5
	if ( (*($4 + [224]) & [1]) ){ goto $label$14 }
	if ( (*($4 + [212]) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $9(*(($4 + [232])))
	if ( ((*($4 + [212]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9(*(($4 + [220])))
	$2 = [1]
	if ( ((*($4 + [200]) & [1]) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$2 = [1]
	if ( (*($4 + [200]) & [1]) ){ goto $label$10 }
	
.LABEL $label$11
	$global$0 = ($4 + [304])
	return $2
	
.LABEL $label$10
	CALL $9(*(($4 + [208])))
	$global$0 = ($4 + [304])
	return $2
}

void .FUNC $262 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [216]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [216]), $2, [8])
	*($3 + [208]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [208]), $5, [8])
	*($3 + [200]) = (int_64)0
	*($3 + [192]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	$4 = ($2 + $4)
	CALL memcpy(($3 + [192]), $5, [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$8
	CALL memcpy(($3 + [40]), $5, [8])
	*(($6 = (($3 + [192]) + [8]))) = *($3 + [40])
	*((($3 + [40]) + [24])) = $4
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($4 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($5 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*($3 + [56]) = $2
	*(($3 + [60])) = ($2 + [32])
	*($3 + [48]) = $1
	*($3 + [40]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	*(($3 + [168])) = (int_64)-1
	*(($2 = ($3 + [176]))) = (int_64)0
	*(($3 + [184])) = [0]
	$0 = *($6)
	*((($3 + [24]) + [8])) = $0
	*((($3 + [8]) + [8])) = $0
	$0 = *($3 + [192])
	*($3 + [24]) = $0
	*($3 + [8]) = $0
	CALL $113(($3 + [40]), *($3 + [216]), *($3 + [208]), ($3 + [8]))
	CALL $217($2)
	CALL $218($5)
	$6 = *($4)
	if ( ($6 == 0) ){ goto $label$9 }
	$5 = ($3 + [100])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($3 + [96]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $6
	
.LABEL $label$10
	*($5) = $6
	CALL $9($2)
	
.LABEL $label$9
	$global$0 = ($3 + [224])
}

void .FUNC $283 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($4 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($5 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($2 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $182(($3 + [8]), *($3 + [168]), *($3 + [160]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($3 + [68])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($3 + [64]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($3 + [176])
}

int_32 .FUNC $303 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$1 = ($1 + [-24])
	*($3) = $1
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = *($4 + [16])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($4 + [20])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	if ( ((*(($1 + [-28])) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($1 + [-20])))
	
.LABEL $label$8
	$7 = ($1 + [-64])
	if ( ((*(($1 + [-40])) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($1 + [-32])))
	
.LABEL $label$9
	$1 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	$1 = *(($4 + [16]))
	goto $label$5 
	
.LABEL $label$6
	$1 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($1)
	
.LABEL $label$4
	CALL $9($4)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	return $0
}

void .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $294(*($1), *($0 + [8]))
}

int_32 .FUNC $301 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $263 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [272])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [264]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [264]), $2, [8])
	$6 = ($2 + [8])
	if ( ((uint_32)($4 + [-8]) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [224]), $6, [32])
	*((($3 + [72]) + [24])) = $5
	*((($3 + [72]) + [40])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($4 = ($3 + [128]))) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*(($3 + [160])) = (int_64)-1
	*(($5 = ($3 + [168]))) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [192])) = $0
	*($3 + [88]) = $2
	*(($3 + [92])) = ($2 + [40])
	*($3 + [80]) = $1
	*($3 + [72]) = $0
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	*($3 + [184]) = $0
	*(($3 + [200])) = (int_64)-1
	*(($2 = ($3 + [208]))) = (int_64)0
	*(($3 + [216])) = [0]
	$0 = *((($3 + [224]) + [16]))
	*((($3 + [32]) + [16])) = $0
	$1 = *((($3 + [224]) + [24]))
	*((($3 + [32]) + [24])) = $1
	*(($3 + [16])) = $0
	*(($3 + [24])) = $1
	$0 = *($3 + [224])
	*($3 + [32]) = $0
	$1 = *($3 + [232])
	*($3 + [40]) = $1
	*($3) = $0
	*($3 + [8]) = $1
	CALL $122(($3 + [72]), *($3 + [264]), $3)
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($3 + [132])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($3 + [128]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($3 + [272])
}

void .FUNC $307 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	CALL $308(*($1), *($0 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [6])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[67108864]) ){ goto $label$3 }
	$6 = [67108863]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [6]) > (uint_32)[33554430]) ){ goto $label$5 }
	$6 = int_32($7 >> [5])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[67108864]) ){ goto $label$2 }
	
.LABEL $label$5
	$7 = CALL $7(($6 << [6]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $43($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$8 = *($1 + [24 align=4])
	*($1 + [24 align=4]) = (int_64)0
	$9 = *($1 + [36 align=4])
	*($1 + [36 align=4]) = (int_64)0
	*(($5 = ($7 + ($4 << [6])))) = *($1)
	*($5 + [24 align=4]) = $8
	$10 = ($1 + [32])
	$11 = *($10)
	*($10) = [0]
	*($5 + [36 align=4]) = $9
	$10 = ($1 + [44])
	$12 = *($10)
	*($10) = [0]
	*(($5 + [16])) = *(($1 + [16]))
	*(($5 + [8])) = *(($1 + [8]))
	*(($5 + [32])) = $11
	*(($5 + [44])) = $12
	*(($5 + [56])) = *(($1 + [56]))
	*($5 + [48]) = *($1 + [48])
	$10 = ($7 + ($6 << [6]))
	$11 = ($5 + [64])
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$6 }
	$1 = ($4 + [-1])
	$12 = ($1 - uint_32((($2 + [-64]) - $3) >> [6]))
	$1 = ($7 + ($1 << [6]))
	
.LOOP $label$7:
	*(($1 + [16])) = *(($2 + [-48]))
	*(($1 + [8])) = *(($2 + [-56]))
	$5 = ($2 + [-64])
	*($1) = *($5)
	$6 = ($2 + [-32])
	*(($1 + [32])) = *($6)
	$4 = ($2 + [-40])
	*(($1 + [24])) = *($4)
	*($4) = (int_64)0
	*($6) = [0]
	$6 = ($2 + [-20])
	*(($1 + [44])) = *($6)
	$4 = ($2 + [-28])
	*(($1 + [36])) = *($4)
	*($4) = (int_64)0
	*($6) = [0]
	*(($1 + [56])) = *(($2 + [-8]))
	*(($1 + [48])) = *(($2 + [-16]))
	$1 = ($1 + [-64])
	$2 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$7 }
	$5 = ($7 + ($12 << [6]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $5
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( ((*(($2 + [-28])) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($2 + [-20])))
	
.LABEL $label$10
	$1 = ($2 + [-64])
	if ( ((*(($2 + [-40])) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($2 + [-32])))
	
.LABEL $label$11
	$2 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$12 }
	CALL $9($3)
	
.LABEL $label$12
	(unreachable)
	(unreachable)
}

void .FUNC $305 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [6])
	if ( ((uint_32)$3 <= (uint_32)int_32(($4 - $5) >> [6])) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$3 }
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	if ( ((*(($4 + [-28])) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($4 + [-20])))
	
.LABEL $label$8
	$6 = ($4 + [-64])
	if ( ((*(($4 + [-40])) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($4 + [-32])))
	
.LABEL $label$9
	$4 = $6
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$7 }
	$4 = *($0)
	goto $label$4 
	
.LABEL $label$6
	$7 = int_32($4 >> [6])
	$4 = (*($0 + [4]) - $5)
	$6 = ( ($1 + $4) ? $2 : ((uint_32)$3 > (uint_32)$7) )
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$10 }
	$4 = $1
	
.LOOP $label$11:
	*($5) = *($4)
	*(($5 + [16])) = *(($4 + [16]))
	*(($5 + [8])) = *(($4 + [8]))
	CALL $27(($5 + [24]), ($4 + [24]))
	CALL $27(($5 + [36]), ($4 + [36]))
	*(($5 + [56])) = *(($4 + [56]))
	*(($5 + [48])) = *(($4 + [48]))
	$5 = ($5 + [64])
	$4 = ($4 + [64])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$12 }
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$2 }
	$5 = (($1 + ($7 << [6])) + [36])
	$4 = ($0 + [4])
	$1 = *($4)
	
.LOOP $label$13:
	*(($1 + [16])) = *(($5 + [-20]))
	*(($1 + [8])) = *(($5 + [-28]))
	*($1) = *(($5 + [-36]))
	CALL $25(($1 + [24]), ($5 + [-12]))
	CALL $25(($1 + [36]), $5)
	*(($1 + [56])) = *(($5 + [20]))
	*($1 + [48]) = *(($5 + [12]))
	$1 = (*($4) + [64])
	*($4) = $1
	$6 = ($5 + [28])
	$5 = ($5 + [64])
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$13 }
	goto $label$2 
	
.LABEL $label$12
	$6 = ($0 + [4])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	if ( ((*(($1 + [-28])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($1 + [-20])))
	
.LABEL $label$16
	$4 = ($1 + [-64])
	if ( ((*(($1 + [-40])) & [1]) == 0) ){ goto $label$17 }
	CALL $9(*(($1 + [-32])))
	
.LABEL $label$17
	$1 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$15 }
	
.LABEL $label$14
	*($6) = $5
	return 
	
.LABEL $label$5
	$4 = $5
	
.LABEL $label$4
	*(($0 + [4])) = $5
	CALL $9($4)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)[67108864]) ){ goto $label$1 }
	$5 = [67108863]
	if ( ((uint_32)int_32($4 >> [6]) > (uint_32)[33554430]) ){ goto $label$18 }
	$5 = $3
	$4 = int_32($4 >> [5])
	if ( ($4 <= $3) ){ goto $label$18 }
	$5 = $4
	if ( ((uint_32)$4 >= (uint_32)[67108864]) ){ goto $label$1 }
	
.LABEL $label$18
	$4 = ($5 << [6])
	$5 = CALL $7($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$19:
	*($5) = *($1)
	*(($5 + [16])) = *(($1 + [16]))
	*(($5 + [8])) = *(($1 + [8]))
	CALL $25(($5 + [24]), ($1 + [24]))
	CALL $25(($5 + [36]), ($1 + [36]))
	*(($5 + [56])) = *(($1 + [56]))
	*($5 + [48]) = *(($1 + [48]))
	$5 = (*($4) + [64])
	*($4) = $5
	$1 = ($1 + [64])
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$19 }
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $43($0)
}

void .FUNC $304 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $299(*($1), *($0 + [8]))
}

void .FUNC $309 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [6]) >= (uint_32)$1) ){ goto $label$8 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [6])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[67108864]) ){ goto $label$5 }
	$3 = [67108863]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [6]) > (uint_32)[33554430]) ){ goto $label$9 }
	$3 = int_32($2 >> [5])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$7 }
	if ( ((uint_32)$3 >= (uint_32)[67108864]) ){ goto $label$4 }
	
.LABEL $label$9
	$7 = CALL $7(($3 << [6]))
	goto $label$3 
	
.LABEL $label$8
	$10 = ($0 + [4])
	
.LOOP $label$10:
	*(($6 = ($3 + [24]))) = (int_64)0
	*($3) = (int_64)0
	*(($3 + [56])) = (int_64)0
	*(($3 + [48])) = (int_64)0
	*(($3 + [40])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($4 = ($3 + [16]))) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*($6) = [0]
	$2 = CALL $15([12691])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$13 }
	*($4) = ($2 << [1])
	$4 = ($4 + [1])
	if ( $2 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$11 = (($2 + [16]) & [-16])
	$4 = CALL $7($11)
	*($3 + [16]) = ($11 | [1])
	*($6) = $4
	*(($3 + [20])) = $2
	
.LABEL $label$12
	CALL memcpy($4, [12691], $2)
	
.LABEL $label$11
	*(($4 + $2)) = [0]
	$3 = (*($10) + [64])
	*($10) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$10 }
	goto $label$2 
	
.LABEL $label$7
	$3 = [0]
	$7 = [0]
	goto $label$3 
	
.LABEL $label$6
	CALL $24($4)
	
.LABEL $label$5
	CALL $43($0)
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$8 = ($7 + ($3 << [6]))
	$9 = ($7 + ($5 << [6]))
	$3 = $9
	
.LOOP $label$14:
	*(($6 = ($3 + [24]))) = (int_64)0
	*($3) = (int_64)0
	*(($3 + [56])) = (int_64)0
	*(($3 + [48])) = (int_64)0
	*(($3 + [40])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($10 = ($3 + [16]))) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*($6) = [0]
	$2 = CALL $15([12691])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$17 }
	*($10) = ($2 << [1])
	$4 = ($3 + [17])
	if ( $2 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$11 = (($2 + [16]) & [-16])
	$4 = CALL $7($11)
	*($10) = ($11 | [1])
	*($6) = $4
	*(($3 + [20])) = $2
	
.LABEL $label$16
	CALL memcpy($4, [12691], $2)
	
.LABEL $label$15
	*(($4 + $2)) = [0]
	$3 = ($3 + [64])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$14 }
	$4 = *($0)
	$12 = ($0 + [4])
	$1 = *($12)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$19 }
	$2 = ($5 + [-1])
	$5 = ($2 - uint_32((($1 + [-64]) - $4) >> [6]))
	$2 = ($7 + ($2 << [6]))
	
.LOOP $label$20:
	*(($2 + [8])) = *(($1 + [-56]))
	$6 = ($1 + [-64])
	*($2) = *($6)
	$10 = ($1 + [-40])
	*(($2 + [24])) = *($10)
	$11 = ($1 + [-48])
	*(($2 + [16])) = *($11)
	*($10) = [0]
	*($11) = (int_64)0
	*(($2 + [48])) = *(($1 + [-16]))
	*(($2 + [40])) = *(($1 + [-24]))
	*(($2 + [32])) = *(($1 + [-32]))
	*(($2 + [56])) = *(($1 + [-8]))
	$2 = ($2 + [-64])
	$1 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$20 }
	$9 = ($7 + ($5 << [6]))
	$4 = *(($0 + [4]))
	$2 = *($0)
	goto $label$18 
	
.LABEL $label$19
	$2 = $4
	
.LABEL $label$18
	*($0) = $9
	*($12) = $3
	*(($0 + [8])) = $8
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$21 }
	
.LOOP $label$22:
	$3 = ($4 + [-64])
	if ( ((*(($4 + [-48])) & [1]) == 0) ){ goto $label$23 }
	CALL $9(*(($4 + [-40])))
	
.LABEL $label$23
	$4 = $3
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$22 }
	
.LABEL $label$21
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $9($2)
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $24(($3 + [16]))
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [12344])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$3 = (CASTING uint_32)(uint_64 $4)
	$6 = *($1)
	$8 = *($1 + [4])
	$7 = int_32(($8 - $6) >> [6])
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$5 }
	CALL $309($1, ($3 - $7))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$6 }
	$7 = ($6 + ($3 << [6]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = ($8 + [-64])
	if ( ((*(($8 + [-48])) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($8 + [-40])))
	
.LABEL $label$9
	$8 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $7
	$8 = $7
	
.LABEL $label$6
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [28])
	
.LOOP $label$10:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*((($2 + [16]) + [8])) = ($3 + [16])
	*($7) = ($3 + [32])
	*($2 + [20]) = ($3 + [8])
	CALL $310(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [64])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $219(*($1), *($0 + [8]))
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
}

void .FUNC $265 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $125($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

int_32 .FUNC $208 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [320])
	$global$0 = $3
	*(($4 = $3) + [264]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [184]) + [24])) = (int_64)0
	*((($4 + [184]) + [40])) = (int_64)0
	*((($4 + [184]) + [48])) = (int_64)0
	*((($4 + [184]) + [64])) = [0]
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $5)
	*($4 + [304]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $222(($4 + [16]), ($4 + [304]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [272]) + [8])) = $3
	*(($6 = (($4 + [288]) + [8]))) = $3
	$7 = *($4)
	*($4 + [288]) = $7
	*($4 + [272]) = $7
	$3 = *($6)
	*((($4 + [304]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [288])
	*($4 + [32]) = $1
	*($4 + [304]) = $1
	*((($4 + [16]) + [40])) = $0
	*((($4 + [16]) + [48])) = (int_64)-1
	*(($3 = ($4 + [72]))) = (int_64)0
	*((($4 + [16]) + [64])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($6 = ($4 + [112]))) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($8 = ($4 + [152]))) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [308]) = ($4 + [264])
	*($4 + [304]) = ($4 + [16])
	CALL $223(($4 + [304]), ($4 + [184]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $217($8)
	CALL $218($6)
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($4 + [76])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($4 + [72]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($2)
	
.LABEL $label$5
	if ( (*($4 + [240]) & [1]) ){ goto $label$14 }
	if ( (*($4 + [228]) & [1]) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $9(*(($4 + [248])))
	if ( ((*($4 + [228]) & [1]) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9(*(($4 + [236])))
	$2 = [1]
	if ( ((*($4 + [216]) & [1]) == 0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$2 = [1]
	if ( (*($4 + [216]) & [1]) ){ goto $label$10 }
	
.LABEL $label$11
	$global$0 = ($4 + [320])
	return $2
	
.LABEL $label$10
	CALL $9(*(($4 + [224])))
	$global$0 = ($4 + [320])
	return $2
}

int_32 .FUNC $209 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [216]))) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [188]) = $2
	*($4 + [184]) = $2
	*($4 + [192]) = ($2 + $7)
	*($4 + [256]) = ($4 + [184])
	*($4 + [32]) = ($4 + [200])
	CALL $237(($4 + [32]), ($4 + [256]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [192])
	*($4 + [16]) = *($4 + [184])
	$10 = *($9)
	*(($3 = (($4 + [224]) + [8]))) = $10
	*(($9 = (($4 + [240]) + [8]))) = $10
	$11 = *($4 + [16])
	*($4 + [240]) = $11
	*($4 + [224]) = $11
	$10 = *($9)
	*((($4 + [256]) + [8])) = $10
	*(($4 + [56])) = $10
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$1 = *($4 + [240])
	*($4 + [48]) = $1
	*($4 + [256]) = $1
	*(($4 + [72])) = $0
	*(($4 + [80])) = (int_64)-1
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = [0]
	*(($4 + [112])) = $0
	*(($4 + [120])) = (int_64)-1
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = [0]
	*(($4 + [152])) = $0
	*(($4 + [160])) = (int_64)-1
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = [0]
	*($4 + [64]) = $0
	*($4 + [104]) = $0
	*($4 + [144]) = $0
	*($3) = *($8)
	*($4 + [224]) = *($4 + [208])
	$0 = *($4 + [200])
	*($9) = *($3)
	*($4 + [240]) = *($4 + [224])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [240]) + [8]))
	*((($4 + [256]) + [8])) = $1
	*(($4 + [8])) = $1
	$1 = *($4 + [240])
	*($4) = $1
	*($4 + [256]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [168]))
	CALL $218(($4 + [128]))
	$5 = *(($4 + [88]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [92])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [88]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [272])
	return [1]
}

int_32 .FUNC $202 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [224]))) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [232]) = [0]
	*($4 + [196]) = $2
	*($4 + [192]) = $2
	*($4 + [200]) = ($2 + $7)
	*($4 + [272]) = ($4 + [192])
	*($4 + [40]) = ($4 + [208])
	CALL $224(($4 + [40]), ($4 + [272]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [200])
	*($4 + [24]) = *($4 + [192])
	$10 = *($9)
	*(($3 = (($4 + [240]) + [8]))) = $10
	*(($9 = (($4 + [256]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [256]) = $11
	*($4 + [240]) = $11
	$10 = *($9)
	*((($4 + [272]) + [8])) = $10
	*(($4 + [64])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$1 = *($4 + [256])
	*($4 + [56]) = $1
	*($4 + [272]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($3) = *($8)
	*($4 + [240]) = *($4 + [216])
	$0 = *($4 + [208])
	$8 = *($4 + [232])
	*($9) = *($3)
	*($4 + [256]) = *($4 + [240])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [256]) + [8]))
	*((($4 + [272]) + [8])) = $1
	*((($4 + [8]) + [8])) = $1
	$1 = *($4 + [256])
	*($4 + [8]) = $1
	*($4 + [272]) = $1
	CALL void $3((int_32 $0), (int_64 ($4 + [8])), (int_32 $8), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [176]))
	CALL $218(($4 + [136]))
	$5 = *(($4 + [96]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [100])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [96]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [288])
	return [1]
}

int_32 .FUNC $203 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [320])
	$global$0 = $3
	*(($4 = $3) + [264]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [184]) + [48])) = [0]
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [208]) = [0]
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = [0]
	*($4 + [256]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $5)
	*($4 + [304]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $239(($4 + [16]), ($4 + [304]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [272]) + [8])) = $3
	*(($6 = (($4 + [288]) + [8]))) = $3
	$7 = *($4)
	*($4 + [288]) = $7
	*($4 + [272]) = $7
	$3 = *($6)
	*((($4 + [304]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [288])
	*($4 + [32]) = $1
	*($4 + [304]) = $1
	*(($4 + [56])) = $0
	*((($4 + [16]) + [48])) = (int_64)-1
	*(($3 = ($4 + [72]))) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($6 = ($4 + [112]))) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($8 = ($4 + [152]))) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [308]) = ($4 + [264])
	*($4 + [304]) = ($4 + [16])
	CALL $240(($4 + [304]), ($4 + [184]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $217($8)
	CALL $218($6)
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($4 + [76])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($4 + [72]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($2)
	
.LABEL $label$5
	if ( ((*($4 + [224]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($4 + [232])))
	
.LABEL $label$10
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $200 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [232])) = (int_64)0
	*(($4 + [224])) = (int_64)0
	*(($4 + [216])) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [192]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	$8 = ($2 + $7)
	$3 = ($4 + [208])
	CALL memcpy(($4 + [192]), $2, [8])
	$9 = ($2 + [8])
	if ( ((uint_32)($7 + [-8]) > (uint_32)[31]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy($3, $9, [32])
	*((($4 + [40]) + [24])) = $8
	*((($4 + [40]) + [40])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*($4 + [56]) = $2
	*(($4 + [60])) = ($2 + [40])
	*($4 + [48]) = $1
	*($4 + [40]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($8 = (($4 + [240]) + [16]))) = *(($3 + [16]))
	*(($9 = (($4 + [240]) + [24]))) = *(($3 + [24]))
	*($4 + [240]) = *($3)
	*($4 + [248]) = *(($3 + [8]))
	$0 = *($4 + [192])
	*((($4 + [272]) + [24])) = *($9)
	*((($4 + [272]) + [16])) = *($8)
	*($4 + [280]) = *($4 + [248])
	*($4 + [272]) = *($4 + [240])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	$1 = *((($4 + [272]) + [24]))
	*((($4 + [304]) + [24])) = $1
	$10 = *((($4 + [272]) + [16]))
	*((($4 + [304]) + [16])) = $10
	*(($4 + [16])) = $10
	*(($4 + [24])) = $1
	$1 = *($4 + [280])
	*($4 + [312]) = $1
	$10 = *($4 + [272])
	*($4) = $10
	*($4 + [304]) = $10
	*($4 + [8]) = $1
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $217(($4 + [176]))
	CALL $218(($4 + [136]))
	$3 = *(($4 + [96]))
	if ( ($3 == 0) ){ goto $label$9 }
	$5 = ($4 + [100])
	$2 = *($5)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$13 }
	CALL $9($7)
	
.LABEL $label$13
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($4 + [96]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $3
	
.LABEL $label$10
	*($5) = $3
	CALL $9($2)
	
.LABEL $label$9
	$global$0 = ($4 + [336])
	return [1]
}

int_32 .FUNC $201 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $7)
	*($4 + [240]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $233(($4 + [16]), ($4 + [240]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [208]) + [8])) = $3
	*(($8 = (($4 + [224]) + [8]))) = $3
	$9 = *($4)
	*($4 + [224]) = $9
	*($4 + [208]) = $9
	$3 = *($8)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [224])
	*($4 + [32]) = $1
	*($4 + [240]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$0 = *($4 + [200])
	$1 = *($4 + [192])
	$9 = *($4 + [184])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $9), (int_64 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [152]))
	CALL $218(($4 + [112]))
	$5 = *(($4 + [72]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [76])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [72]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [256])
	return [1]
}

int_32 .FUNC $206 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [288])
	$global$0 = $3
	*(($4 = $3) + [232]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [200])) = (int_64)0
	*(($4 + [216])) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $5)
	*($4 + [272]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $220(($4 + [16]), ($4 + [272]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [240]) + [8])) = $3
	*(($6 = (($4 + [256]) + [8]))) = $3
	$7 = *($4)
	*($4 + [256]) = $7
	*($4 + [240]) = $7
	$3 = *($6)
	*((($4 + [272]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [256])
	*($4 + [32]) = $1
	*($4 + [272]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($3 = ($4 + [72]))) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($6 = ($4 + [112]))) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($8 = ($4 + [152]))) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [276]) = ($4 + [232])
	*($4 + [272]) = ($4 + [16])
	CALL $221(($4 + [272]), ($4 + [184]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $217($8)
	CALL $218($6)
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($4 + [76])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($4 + [72]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($2)
	
.LABEL $label$5
	if ( ((*($4 + [196]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($4 + [204])))
	
.LABEL $label$10
	$global$0 = ($4 + [288])
	return [1]
}

int_32 .FUNC $207 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [208]) + [24]))) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [196]) = $2
	*($4 + [192]) = $2
	*($4 + [200]) = ($2 + $7)
	*($4 + [272]) = ($4 + [192])
	*($4 + [40]) = ($4 + [208])
	CALL $228(($4 + [40]), ($4 + [272]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [200])
	*($4 + [24]) = *($4 + [192])
	$10 = *($9)
	*(($3 = (($4 + [240]) + [8]))) = $10
	*(($9 = (($4 + [256]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [256]) = $11
	*($4 + [240]) = $11
	$10 = *($9)
	*((($4 + [272]) + [8])) = $10
	*((($4 + [40]) + [24])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$1 = *($4 + [256])
	*($4 + [56]) = $1
	*($4 + [272]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($3) = *($8)
	*($4 + [240]) = *($4 + [224])
	$0 = *($4 + [216])
	$1 = *($4 + [208])
	*($9) = *($3)
	*($4 + [256]) = *($4 + [240])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [256]) + [8]))
	*((($4 + [272]) + [8])) = $11
	*((($4 + [8]) + [8])) = $11
	$11 = *($4 + [256])
	*($4 + [8]) = $11
	*($4 + [272]) = $11
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [176]))
	CALL $218(($4 + [136]))
	$5 = *(($4 + [96]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [100])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [96]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [288])
	return [1]
}

int_32 .FUNC $204 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [168]) = (int_64)0
	*($4 + [160]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	$8 = ($2 + $7)
	CALL memcpy(($4 + [160]), $2, [8])
	$9 = ($2 + [8])
	$3 = (($4 + [160]) + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy($3, $9, [8])
	*(($4 + [32])) = $8
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [24]) = $2
	*(($4 + [28])) = ($2 + [16])
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	$8 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($3)
	$1 = *($4 + [160])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($8) + $6))
	
.LABEL $label$7
	CALL void $8((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $217(($4 + [144]))
	CALL $218(($4 + [104]))
	$5 = *(($4 + [64]))
	if ( ($5 == 0) ){ goto $label$9 }
	$6 = ($4 + [68])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$13 }
	CALL $9($7)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($4 + [64]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $5
	
.LABEL $label$10
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$9
	$global$0 = ($4 + [176])
	return [1]
}

int_32 .FUNC $205 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [192]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [240]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $229(($4 + [24]), ($4 + [240]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [208]) + [8])) = $3
	*(($8 = (($4 + [224]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [224]) = $9
	*($4 + [208]) = $9
	$3 = *($8)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [224])
	*($4 + [40]) = $1
	*($4 + [240]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = *($4 + [204])
	$10 = *($4 + [200])
	$11 = *($4 + [196])
	$12 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $12), (int_32 $11), (int_32 $10), (int_32 $8), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [160]))
	CALL $218(($4 + [120]))
	$5 = *(($4 + [80]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [84])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [80]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC $282 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	CALL memcpy(($3 + [152]), $5, [8])
	*(($3 + [24])) = $4
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $178($3, *($3 + [168]), *($3 + [160]), *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$8 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $9($4)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $5
	
.LABEL $label$9
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$8
	$global$0 = ($3 + [176])
}

void .FUNC $181 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [44]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1) = (int_64)0
	*($1 + [20]) = [0]
	*($1 + [24]) = (int_64)0
	$5 = *($1 + [8])
	$8 = *($1 + [32])
	$6 = ($1 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($7 + [-64])
	if ( ((*(($7 + [-48])) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($7 + [-40])))
	
.LABEL $label$6
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$5 }
	*(($7 = ($1 + [36]))) = $8
	if ( ((int_64)$5 == (int_64)*(($1 + [8]))) ){ goto $label$3 }
	CALL eosio_assert([0], [12234])
	$8 = *($7)
	goto $label$3 
	
.LABEL $label$4
	*($6) = $8
	
.LABEL $label$3
	$9 = ($1 + [24])
	$10 = ($1 + [20])
	$11 = ($1 + [32])
	$6 = *($1 + [32])
	$12 = (CASTING uint_64)(uint_32 int_32(($8 - $6) >> [6]))
	$7 = [29]
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$8 }
	
.LOOP $label$9:
	$13 = *($6 + [16])
	$13 = ( *(($6 + [20])) ? uint_32($13 >> [1]) : ($13 & [1]) )
	$7 = (($13 + $7) + [48])
	$12 = (CASTING uint_64)(uint_32 $13)
	
.LOOP $label$10:
	$7 = ($7 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$10 }
	$6 = ($6 + [64])
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$12 }
	$6 = CALL $1($7)
	goto $label$11 
	
.LABEL $label$12
	$6 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$11
	*($4 + [4]) = $6
	*($4) = $6
	*($4 + [8]) = ($6 + $7)
	*($4 + [16]) = $4
	*($4 + [36]) = $10
	*($4 + [40]) = $9
	*($4 + [44]) = $11
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [32]) = ($1 + [16])
	CALL $334(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [48]), $2, $6, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $2($6)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$13
	$global$0 = ($4 + [48])
}

void .FUNC $129 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [160])
	$global$0 = $1
	CALL require_auth(*($0))
	*((($1 + [40]) + [32])) = [0]
	*($1 + [56]) = (int_64)-1
	$2 = *($0)
	*($1 + [40]) = $2
	*($1 + [48]) = $2
	*($1 + [64]) = (int_64)0
	$3 = [0]
	$4 = CALL db_find_i64($2, $2, (int_64)-5594450253431554048, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $76(($1 + [40]), $4)
	if ( ((int_32)*($3 + [16]) == (int_32)($1 + [40])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$4 = CALL db_find_i64($2, $2, (int_64)-5594449976101961728, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	if ( ((int_32)*(CALL $77($1, $4) + [24]) == (int_32)$1) ){ goto $label$9 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$9
	if ( ($3 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$5 = *($0)
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$10 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$10
	*(($4 = CALL $7([40]))) = (int_64)0
	*($4 + [12 align=4]) = (int_64)42949673020
	*($4 + [20]) = [10]
	*($4 + [24]) = $1
	*($4 + [8]) = [2]
	*($1 + [120]) = (($1 + [80]) + [24])
	*($1 + [116]) = ($1 + [80])
	*($1 + [112]) = ($1 + [80])
	*($1 + [128]) = ($1 + [112])
	*($1 + [140]) = ($4 + [8])
	*($1 + [136]) = $4
	*($1 + [144]) = ($4 + [12])
	*($1 + [148]) = ($4 + [16])
	*($1 + [152]) = ($4 + [20])
	CALL $130(($1 + [136]), ($1 + [128]))
	$2 = *($4)
	$6 = CALL db_store_i64(*(($1 + [8])), (int_64)-5594449976101961728, $5, $2, ($1 + [80]), [24])
	*($4 + [28]) = $6
	$7 = ($1 + [16])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$11 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	*($1 + [136]) = $4
	$2 = *($4)
	*($1 + [80]) = $2
	*($1 + [112]) = $6
	$8 = ($1 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$14 }
	*($7 + [8]) = $2
	*($7 + [16]) = $6
	*($1 + [136]) = [0]
	*($7) = $4
	*($8) = ($7 + [24])
	$4 = *($1 + [136])
	*($1 + [136]) = [0]
	if ( $4 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $131(($1 + [24]), ($1 + [136]), ($1 + [80]), ($1 + [112]))
	$4 = *($1 + [136])
	*($1 + [136]) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	CALL $9($4)
	
.LABEL $label$12
	CALL prints([10582])
	if ( $3 ){ goto $label$6 }
	
.LABEL $label$7
	$5 = *($0)
	if ( ((int_64)*($1 + [40]) == (int_64)CALL current_receiver()) ){ goto $label$15 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$15
	*(($4 = CALL $7([32]))) = (int_64)0
	*($4 + [16]) = ($1 + [40])
	*($4 + [8]) = (int_64)0
	CALL memcpy(($1 + [80]), $4, [8])
	CALL memcpy((($1 + [80]) | [8]), ($4 + [8]), [8])
	$2 = *($4)
	$3 = CALL db_store_i64(*((($1 + [40]) + [8])), (int_64)-5594450253431554048, $5, $2, ($1 + [80]), [16])
	*($4 + [20]) = $3
	$0 = (($1 + [40]) + [16])
	if ( (uint_64)($2 <= *($0)) ){ goto $label$16 }
	*($0) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*($1 + [136]) = $4
	$2 = *($4)
	*($1 + [80]) = $2
	*($1 + [112]) = $3
	$7 = ($1 + [68])
	$0 = *($7)
	if ( ((uint_32)$0 >= (uint_32)*((($1 + [40]) + [32]))) ){ goto $label$19 }
	*($0 + [8]) = $2
	*($0 + [16]) = $3
	*($1 + [136]) = [0]
	*($0) = $4
	*($7) = ($0 + [24])
	$4 = *($1 + [136])
	*($1 + [136]) = [0]
	if ( $4 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $132(($1 + [64]), ($1 + [136]), ($1 + [80]), ($1 + [112]))
	$4 = *($1 + [136])
	*($1 + [136]) = [0]
	if ( ($4 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	CALL $9($4)
	
.LABEL $label$17
	CALL prints([10614])
	$3 = *($1 + [24])
	if ( ($3 == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($1 + [24])
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$5
	$3 = *($1 + [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = ($1 + [28])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$20 }
	
.LOOP $label$21:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$22 }
	CALL $9($0)
	
.LABEL $label$22
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$21 }
	$4 = *(($1 + [24]))
	*($7) = $3
	CALL $9($4)
	$3 = *($1 + [64])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$20
	*($7) = $3
	CALL $9($3)
	$3 = *($1 + [64])
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = ($1 + [68])
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$24 }
	
.LOOP $label$25:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$26 }
	CALL $9($0)
	
.LABEL $label$26
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$25 }
	$4 = *(($1 + [64]))
	goto $label$23 
	
.LABEL $label$24
	$4 = $3
	
.LABEL $label$23
	*($7) = $3
	CALL $9($4)
	$global$0 = ($1 + [160])
	return 
	
.LABEL $label$2
	$global$0 = ($1 + [160])
}

void .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12543])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12588])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12638])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [40])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [40])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [72]))
}

void .FUNC $286 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [152]) = (int_64)0
	$5 = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [152]), $2, [8])
	*(($3 + [20])) = ($2 + [8])
	*(($3 + [24])) = $5
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $2
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $188($3, *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $9($4)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($3 + [56]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($3 + [160])
}

void .FUNC $287 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [224])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [200]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [200]), $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [192]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)($4 & [-4]) != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	CALL memcpy(($3 + [188]), $5, [4])
	$5 = ($2 + [20])
	if ( ((int_32)($4 & [-2]) != (int_32)[20]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$8
	CALL memcpy(($3 + [186]), $5, [2])
	$5 = ($2 + [22])
	if ( ((uint_32)($4 + [-22]) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$9
	CALL memcpy(($3 + [176]), $5, [8])
	$5 = ($2 + [30])
	if ( ((int_32)$4 != (int_32)[30]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$10
	$6 = ($2 + $4)
	CALL memcpy(($3 + [175]), $5, [1])
	$5 = ($2 + [31])
	if ( ((uint_32)($4 + [-31]) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$11
	CALL memcpy(($3 + [160]), $5, [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($4 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($5 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [39])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($2 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	*($3 + [208]) = [10825]
	*($3 + [212]) = CALL $15([10825])
	*($3) = *($3 + [208])
	CALL require_auth(*(CALL $60(($3 + [216]), $3)))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$12 }
	$6 = ($3 + [68])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	CALL $9($4)
	
.LABEL $label$16
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$15 }
	$2 = *(($3 + [64]))
	goto $label$13 
	
.LABEL $label$14
	$2 = $5
	
.LABEL $label$13
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$12
	$global$0 = ($3 + [224])
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $123 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [56]) = *(*($3))
	*($1 + [60]) = *(*(($3 + [4])))
	$3 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($6 + [52])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [32])
	$8 = ($1 + [60])
	$9 = ($1 + [56])
	$10 = *($1)
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($3 <= [513]) ){ goto $label$5 }
	$4 = CALL $1($3)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	*($5 + [12]) = $4
	*($5 + [8]) = $4
	*($5 + [16]) = ($4 + $3)
	*($5 + [24]) = ($5 + [8])
	*($5 + [44]) = $6
	*($5 + [52]) = $9
	*($5 + [56]) = $8
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [8])
	*($5 + [40]) = ($1 + [16])
	*($5 + [48]) = ($1 + [48])
	*($5 + [60]) = ($1 + [64])
	CALL $318(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [72]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($4)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($5 + [64])
}

void .FUNC $122 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL require_auth(*($0))
	*((($3 + [104]) + [32])) = [0]
	*($3 + [120]) = (int_64)-1
	*($3 + [128]) = (int_64)0
	$4 = *($0)
	*($3 + [104]) = $4
	*($3 + [112]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-5594450192367616000, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $78(($3 + [104]), $6)
	if ( ((int_32)*($5 + [68]) == (int_32)($3 + [104])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert((*($5 + [64]) == 0), [10532])
	$6 = (CASTING uint_32)(uint_64 ((uint_64)((int_64)((int_64)*(($2 + [1])) << (int_64)32) | (int_64)*($2)) % (uint_64)(int_64)100))
	*($3 + [100]) = $6
	$2 = ($5 + [32])
	$7 = *(CALL $30($2, [0]))
	$8 = *(CALL $30($2, [1]))
	$2 = *(CALL $30($2, [2]))
	*($3 + [99]) = [0]
	$7 = (($8 + ((int_32)$7 * (int_32)[10])) + [-528])
	if ( ((int_32)$2 != (int_32)[111]) ){ goto $label$3 }
	if ( ((uint_32)$7 >= (uint_32)$6) ){ goto $label$2 }
	*($3 + [99]) = [1]
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$7 <= (uint_32)$6) ){ goto $label$2 }
	*($3 + [99]) = [1]
	
.LABEL $label$2
	$4 = *($0)
	*($3 + [60]) = ($3 + [99])
	*($3 + [56]) = ($3 + [100])
	if ( $5 ){ goto $label$4 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$4
	CALL $123(($3 + [104]), $5, $4, ($3 + [56]))
	if ( (*($3 + [99]) == 0) ){ goto $label$7 }
	$4 = *($0)
	*($3 + [40]) = [9370]
	*($3 + [44]) = CALL $15([9370])
	*($3 + [8]) = *($3 + [40])
	$9 = *(CALL $60(($3 + [48]), ($3 + [8])))
	$10 = *($0)
	*($3 + [24]) = [10556]
	*($3 + [28]) = CALL $15([10556])
	*($3) = *($3 + [24])
	$5 = CALL $60(($3 + [32]), $3)
	*($3 + [16]) = $1
	*($3 + [56]) = $10
	*($3 + [64]) = *($5)
	*(($5 = CALL $7([16]))) = $4
	*($5 + [8]) = $9
	*(($3 + [92])) = [0]
	$0 = ($5 + [16])
	*(($3 + [80])) = $0
	*(($3 + [76])) = $0
	*($3 + [72]) = $5
	*($3 + [84 align=4]) = (int_64)0
	CALL $94(($3 + [84]), [8])
	$5 = *($3 + [84])
	if ( ((int_32)(*(($3 + [88])) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12073])
	
.LABEL $label$8
	CALL memcpy($5, ($3 + [16]), [8])
	CALL $75(($3 + [56]))
	$5 = *($3 + [84])
	if ( ($5 == 0) ){ goto $label$9 }
	*(($3 + [88])) = $5
	CALL $9($5)
	
.LABEL $label$9
	$5 = *($3 + [72])
	if ( ($5 == 0) ){ goto $label$10 }
	*(($3 + [76])) = $5
	CALL $9($5)
	
.LABEL $label$10
	$2 = *($3 + [128])
	if ( $2 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$4 = *($0)
	if ( $5 ){ goto $label$11 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$11
	CALL $124(($3 + [104]), $5, $4)
	$2 = *($3 + [128])
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$6 = ($3 + [132])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$15 }
	if ( ((*($0 + [32]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($0 + [40])))
	
.LABEL $label$16
	CALL $9($0)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$14 }
	$5 = *(($3 + [128]))
	goto $label$12 
	
.LABEL $label$13
	$5 = $2
	
.LABEL $label$12
	*($6) = $2
	CALL $9($5)
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$5
	$global$0 = ($3 + [144])
}

void .FUNC $121 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6)
{
	CALL require_auth(*($0))
	CALL require_recipient($1)
}

void .FUNC $120 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_32 $5)
{
	CALL require_auth(*($0))
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $126 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [64]) = [1]
	$5 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [52])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [32])
	$8 = ($1 + [64])
	$9 = *($1)
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($5 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($5)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $5)
	*($4 + [24]) = ($4 + [8])
	*($4 + [44]) = $6
	*($4 + [60]) = $8
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [8])
	*($4 + [40]) = ($1 + [16])
	*($4 + [48]) = ($1 + [48])
	*($4 + [52]) = ($1 + [56])
	*($4 + [56]) = ($1 + [60])
	CALL $318(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [72]), $2, $3, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($3)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $125 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	float_32 $7
	float_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [272])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*((($2 + [232]) + [32])) = [0]
	*($2 + [248]) = (int_64)-1
	*($2 + [256]) = (int_64)0
	$4 = *($0)
	*($2 + [232]) = $4
	*($2 + [240]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)-5594450192367616000, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $78(($2 + [232]), $6)
	if ( ((int_32)*($5 + [68]) == (int_32)($2 + [232])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert((*($5 + [64]) == 0), [10532])
	*((($2 + [192]) + [32])) = [0]
	*($2 + [208]) = (int_64)-1
	$4 = *($0)
	*($2 + [192]) = $4
	*($2 + [200]) = $4
	*($2 + [216]) = (int_64)0
	$6 = CALL db_find_i64($4, $4, (int_64)-5594449976101961728, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $77(($2 + [192]), $6)
	if ( ((int_32)*($3 + [24]) == (int_32)($2 + [192])) ){ goto $label$2 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [9207])
	$7 = ((float_32)(CASTING float_32)(uint_64 *($5 + [48])) / (float_32)(float_32)1e4)
	$8 = ((float_32)(CASTING float_32)(uint_32 ([100] - *($3 + [8]))) / (float_32)(float_32)100)
	$3 = CALL $15([8898])
	if ( ($3 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [11869])
	goto $label$5 
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$4 = (int_64)0
	
.LOOP $label$7:
	$6 = *(($3 + [8897]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$8
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$7 }
	$9 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)4
	
.LABEL $label$3
	$7 = ((float_32)$7 * (float_32)$8)
	$4 = (uint_64)$9 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$1 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$4 = $1
	$6 = $3
	$3 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$4 = $1
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = ((int_32)$3 < (int_32)[6])
	$10 = ($3 + [1])
	$3 = $10
	if ( $6 ){ goto $label$13 }
	$3 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [12016])
	
.LABEL $label$9
	$4 = *($5 + [16])
	$1 = *($0)
	*($2 + [120]) = [9370]
	*($2 + [124]) = CALL $15([9370])
	*($2 + [16]) = *($2 + [120])
	$3 = CALL $60(($2 + [128]), ($2 + [16]))
	*($2 + [136]) = $1
	*($2 + [144]) = *($3)
	*($2 + [104]) = [9377]
	*($2 + [108]) = CALL $15([9377])
	*($2 + [8]) = *($2 + [104])
	$10 = CALL $60(($2 + [112]), ($2 + [8]))
	*($2 + [88]) = [9389]
	*($2 + [92]) = CALL $15([9389])
	*($2) = *($2 + [88])
	$11 = CALL $60(($2 + [96]), $2)
	*(($2 + [32])) = [0]
	*($2 + [24]) = (int_64)0
	$3 = CALL $15([10565])
	$6 = ($3 <= [-16])
	$7 = ((float_32)$7 * (float_32)(CASTING float_32)(int_64 $4))
	if ( ((float_32)(float_32)|$7| < (float_32)(float_32)9223372036854775808) ){ goto $label$19 }
	$4 = (int_64)-9223372036854775808
	if ( $6 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$4 = (Rounds 0)($7)
	if ( ($6 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$22 }
	*($2 + [24]) = ($3 << [1])
	$6 = (($2 + [24]) | [1])
	if ( $3 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$22
	$12 = (($3 + [16]) & [-16])
	$6 = CALL $7($12)
	*($2 + [24]) = ($12 | [1])
	*($2 + [32]) = $6
	*($2 + [28]) = $3
	
.LABEL $label$21
	CALL memcpy($6, [10565], $3)
	
.LABEL $label$20
	*(($6 + $3)) = [0]
	$1 = *($5)
	*(($2 + [64])) = $9
	$3 = ($2 + [32])
	*(($2 + [80])) = *($3)
	*($3) = [0]
	*($2 + [40]) = *($0)
	$9 = *($2 + [24])
	*($2 + [24]) = (int_64)0
	*($2 + [56]) = $4
	*($2 + [72]) = $9
	*($2 + [48]) = $1
	$3 = CALL $74(($2 + [152]), ($2 + [136]), *($10), *($11), ($2 + [40]))
	CALL $75($3)
	$6 = *($3 + [28])
	if ( ($6 == 0) ){ goto $label$23 }
	*(($3 + [32])) = $6
	CALL $9($6)
	
.LABEL $label$23
	$6 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$24 }
	*(($3 + [20])) = $6
	CALL $9($6)
	
.LABEL $label$24
	if ( (*(($2 + [72])) & [1]) ){ goto $label$26 }
	if ( (*($2 + [24]) & [1]) ){ goto $label$25 }
	goto $label$16 
	
.LABEL $label$26
	CALL $9(*(($2 + [80])))
	if ( ((*($2 + [24]) & [1]) == 0) ){ goto $label$16 }
	
.LABEL $label$25
	CALL $9(*(($2 + [32])))
	$4 = *($0)
	if ( $5 ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$17
	CALL $24(($2 + [24]))
	
.LABEL $label$16
	$4 = *($0)
	if ( $5 ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [12102])
	
.LABEL $label$14
	CALL $126(($2 + [232]), $5, $4)
	$10 = *($2 + [216])
	if ( ($10 == 0) ){ goto $label$27 }
	$5 = ($2 + [220])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$29 }
	
.LOOP $label$30:
	$3 = ($3 + [-24])
	$6 = *($3)
	*($3) = [0]
	if ( ($6 == 0) ){ goto $label$31 }
	CALL $9($6)
	
.LABEL $label$31
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$30 }
	$3 = *(($2 + [216]))
	goto $label$28 
	
.LABEL $label$29
	$3 = $10
	
.LABEL $label$28
	*($5) = $10
	CALL $9($3)
	
.LABEL $label$27
	$10 = *($2 + [256])
	if ( ($10 == 0) ){ goto $label$32 }
	$5 = ($2 + [260])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$10) ){ goto $label$34 }
	
.LOOP $label$35:
	$3 = ($3 + [-24])
	$6 = *($3)
	*($3) = [0]
	if ( ($6 == 0) ){ goto $label$36 }
	if ( ((*($6 + [32]) & [1]) == 0) ){ goto $label$37 }
	CALL $9(*(($6 + [40])))
	
.LABEL $label$37
	CALL $9($6)
	
.LABEL $label$36
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$35 }
	$3 = *(($2 + [256]))
	goto $label$33 
	
.LABEL $label$34
	$3 = $10
	
.LABEL $label$33
	*($5) = $10
	CALL $9($3)
	
.LABEL $label$32
	$global$0 = ($2 + [272])
	(unreachable)
}

void .FUNC $124 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [68]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [64]) = [1]
	$5 = *($1 + [32])
	$6 = ( *(($1 + [36])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [52])
	$7 = (CASTING uint_64)(uint_32 $6)
	$6 = ($1 + [32])
	$8 = ($1 + [64])
	$9 = *($1)
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ($5 <= [513]) ){ goto $label$5 }
	$3 = CALL $1($5)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$4
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($3 + $5)
	*($4 + [24]) = ($4 + [8])
	*($4 + [44]) = $6
	*($4 + [60]) = $8
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [8])
	*($4 + [40]) = ($1 + [16])
	*($4 + [48]) = ($1 + [48])
	*($4 + [52]) = ($1 + [56])
	*($4 + [56]) = ($1 + [60])
	CALL $318(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [72]), $2, $3, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$8 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $2($3)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$6 }
	
.LABEL $label$7
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $185 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	*($2 + [56]) = [10825]
	*($2 + [60]) = CALL $15([10825])
	*($2 + [8]) = *($2 + [56])
	CALL require_auth(*(CALL $60(($2 + [64]), ($2 + [8]))))
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $3
	$0 = [0]
	$4 = CALL db_find_i64($3, $3, (int_64)-3659885418584850432, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $90(($2 + [16]), $4)
	if ( ((int_32)*($0 + [104]) == (int_32)($2 + [16])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [11580])
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)[3]), [11607])
	if ( $0 ){ goto $label$2 }
	CALL eosio_assert([0], [12479])
	CALL eosio_assert([0], [12513])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($0 + [108]), ($2 + [72]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $90(($2 + [16]), $4)
	
.LABEL $label$3
	CALL $186(($2 + [16]), $0)
	$5 = *($2 + [40])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [44])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$4 = ($4 + [-24])
	$0 = *($4)
	*($4) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	$7 = *($0 + [92])
	if ( ($7 == 0) ){ goto $label$9 }
	*(($0 + [96])) = $7
	CALL $9($7)
	
.LABEL $label$9
	$7 = *($0 + [80])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($0 + [84])) = $7
	CALL $9($7)
	
.LABEL $label$10
	CALL $9($0)
	
.LABEL $label$8
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$7 }
	$0 = *(($2 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($2 + [80])
}

void .FUNC $281 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	CALL memcpy(($3 + [160]), $6, [8])
	*(($3 + [32])) = $5
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($4 = ($3 + [64]))) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($5 = ($3 + [104]))) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [16])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($2 = ($3 + [144]))) = (int_64)0
	*(($3 + [152])) = [0]
	CALL $175(($3 + [8]), *($3 + [168]), *($3 + [160]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($3 + [68])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($3 + [64]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($3 + [176])
}

int_32 .FUNC $18 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $19 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $18($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $184 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$6 = *($3)
	$7 = *($1)
	$8 = ($1 + [84])
	$3 = *($8)
	if ( ((int_32)$3 == (int_32)*(($1 + [88]))) ){ goto $label$5 }
	*($8) = ($3 + [8])
	*($3) = *($6)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL $323(($1 + [80]), $6)
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [12234])
	
.LABEL $label$3
	$6 = ($1 + [80])
	$9 = *($1 + [80])
	$8 = *(($1 + [84]))
	$10 = ($8 - $9)
	$11 = (CASTING uint_64)(uint_32 int_32($10 >> [3]))
	$3 = [69]
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$7 }
	$3 = (($10 & [-8]) + $3)
	
.LABEL $label$7
	$8 = ($1 + [92])
	$10 = *($1 + [92])
	$9 = *(($1 + [96]))
	$12 = ($9 - $10)
	$11 = (CASTING uint_64)(uint_32 int_32($12 >> [3]))
	
.LOOP $label$8:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$9 }
	$3 = (($12 & [-8]) + $3)
	
.LABEL $label$9
	if ( ($3 <= [513]) ){ goto $label$11 }
	$4 = CALL $1($3)
	goto $label$10 
	
.LABEL $label$11
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$10
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	*($5 + [16]) = $5
	*($5 + [56]) = $6
	*($5 + [60]) = $8
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [32]) = ($1 + [24])
	*($5 + [36]) = ($1 + [32])
	*($5 + [40]) = ($1 + [48])
	*($5 + [44]) = ($1 + [56])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [72])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$14 }
	if ( ((uint_64)$7 >= (uint_64)*($0 + [16])) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	CALL $2($4)
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$12 }
	
.LABEL $label$13
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$12
	$global$0 = ($5 + [64])
}

void .FUNC $187 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [80])
	$global$0 = $2
	*($2 + [56]) = [10825]
	*($2 + [60]) = CALL $15([10825])
	*($2 + [8]) = *($2 + [56])
	CALL require_auth(*(CALL $60(($2 + [64]), ($2 + [8]))))
	*(($2 + [48])) = [0]
	*($2 + [32]) = (int_64)-1
	$3 = *($0)
	*($2 + [16]) = $3
	*($2 + [24]) = $3
	*($2 + [40]) = (int_64)0
	$0 = CALL db_lowerbound_i64($3, $3, (int_64)-3659884136206307328, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $148(($2 + [16]), $0)
	
.LOOP $label$2:
	if ( ((int_64)*($0 + [8]) != (int_64)$1) ){ goto $label$3 }
	if ( $0 ){ goto $label$4 }
	CALL eosio_assert([0], [12479])
	CALL eosio_assert([0], [12513])
	
.LABEL $label$4
	$4 = [0]
	$5 = CALL db_next_i64(*($0 + [40]), ($2 + [72]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$4 = CALL $148(($2 + [16]), $5)
	
.LABEL $label$5
	CALL $179(($2 + [16]), $0)
	$0 = $4
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [40])
	$0 = [0]
	$4 = CALL db_next_i64($4, ($2 + [72]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	$0 = CALL $148(($2 + [16]), $4)
	
.LABEL $label$6
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$5 = *($2 + [40])
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($2 + [44])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $9($4)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($2 + [40]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$7
	$global$0 = ($2 + [80])
}

void .FUNC $338 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [32])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($4 + [40])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $339 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $219(*($1), ($3 + [40]))
	$2 = ($3 + [56])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($3 + [64])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$0 = ($3 + [72])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $336 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = ($global$0 - [48])
	$global$0 = $7
	$0 = *($0 + [4])
	$8 = *($0 + [4])
	$9 = (*($0) + int_32($8 >> [1]))
	$0 = *($0)
	if ( (($8 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($9) + $0))
	
.LABEL $label$1
	$5 = CALL $25($7, $5)
	$4 = CALL $25(($7 + [16]), $4)
	$3 = CALL $25(($7 + [32]), $3)
	CALL void $9((int_32 $1), (int_64 $2), (int_64 $3), (int_32 $4), (int_32 $5), (int_32 $6), (int_64 $0))
	if ( (*($5) & [1]) ){ goto $label$6 }
	if ( (*($4) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $9(*($5 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($3) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($7 + [48])
	return 
	
.LABEL $label$2
	CALL $9(*($3 + [8]))
	$global$0 = ($7 + [48])
}

void .FUNC $337 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [56])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$0 = ($4 + [64])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

int_32 .FUNC $218 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [16])
	if ( ($4 == 0) ){ goto $label$6 }
	$5 = ($3 + [20])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( ((*(($6 + [-28])) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($6 + [-20])))
	
.LABEL $label$10
	$7 = ($6 + [-64])
	if ( ((*(($6 + [-40])) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($6 + [-32])))
	
.LABEL $label$11
	$6 = $7
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	$6 = *(($3 + [16]))
	goto $label$7 
	
.LABEL $label$8
	$6 = $4
	
.LABEL $label$7
	*($5) = $4
	CALL $9($6)
	
.LABEL $label$6
	CALL $9($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$4 }
	$6 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$6 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $9($6)
	
.LABEL $label$1
	return $0
}

void .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12543])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12588])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12638])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	$7 = *($5 + [92])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($5 + [96])) = $7
	CALL $9($7)
	
.LABEL $label$13
	$7 = *($5 + [80])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($5 + [84])) = $7
	CALL $9($7)
	
.LABEL $label$14
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$2 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$15:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$16 }
	$7 = *($8 + [92])
	if ( ($7 == 0) ){ goto $label$17 }
	*(($8 + [96])) = $7
	CALL $9($7)
	
.LABEL $label$17
	$7 = *($8 + [80])
	if ( ($7 == 0) ){ goto $label$18 }
	*(($8 + [84])) = $7
	CALL $9($7)
	
.LABEL $label$18
	CALL $9($8)
	
.LABEL $label$16
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$15 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [108]))
}

void .FUNC $332 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [2])
	*(($0 = ($0 + [4]))) = (*($0) + [2])
}

void .FUNC $333 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $308(*($1), *($0 + [20]))
}

void .FUNC $180 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [104]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [48]) = *(*($3))
	*($1 + [24]) = [3]
	*(($1 + [84])) = *($1 + [80])
	*(($1 + [96])) = *($1 + [92])
	*($1 + [56]) = *(*(($3 + [4])))
	$6 = ($1 + [24])
	$7 = ($1 + [56])
	$8 = ($1 + [48])
	$9 = ($1 + [92])
	$10 = ($1 + [80])
	$11 = *($1)
	if ( (int_64)(*($1 + [8]) == 0) ){ goto $label$3 }
	*($1 + [32]) = (int_64)0
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-80])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-9])
	*($5 + [16]) = $5
	*($5 + [32]) = $6
	*($5 + [40]) = $8
	*($5 + [44]) = $7
	*($5 + [56]) = $10
	*($5 + [60]) = $9
	*($5 + [24]) = $1
	*($5 + [28]) = ($1 + [8])
	*($5 + [36]) = ($1 + [32])
	*($5 + [48]) = ($1 + [64])
	*($5 + [52]) = ($1 + [72])
	CALL $324(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [108]), $2, $3, [71])
	if ( (uint_64)($11 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$global$0 = ($5 + [64])
}

int_32 .FUNC $331 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1 + [148]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($1 + [156])))
	if ( ((*($1 + [136]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((*($1 + [136]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*(($1 + [144])))
	if ( ((*($1 + [124]) & [1]) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((*($1 + [124]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*(($1 + [132])))
	if ( (*($1 + [112]) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((*($1 + [112]) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $9(*(($1 + [120])))
	
.LABEL $label$4
	CALL $9($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $9($1)
	
.LABEL $label$11
	return $0
}

void .FUNC $116 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [76]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [16]) = (int_64)0
	*($1 + [8]) = (*($1 + [8]) + [1])
	$5 = *($1)
	$6 = CALL current_time()
	*($1 + [48]) = [1]
	*($1 + [60]) = [0]
	*($1 + [52]) = ((uint_64)$6 / (uint_64)(int_64)1000000)
	$9 = *($1 + [64])
	$7 = ($1 + [68])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$4:
	$10 = ($8 + [-64])
	if ( ((*(($8 + [-48])) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($8 + [-40])))
	
.LABEL $label$5
	$8 = $10
	if ( ((int_32)$9 != (int_32)$10) ){ goto $label$4 }
	
.LABEL $label$3
	*($7) = $9
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$6 }
	CALL eosio_assert([0], [12234])
	$9 = *(($1 + [68]))
	
.LABEL $label$6
	$11 = ($1 + [60])
	$12 = ($1 + [48])
	$13 = ($1 + [52])
	$14 = ($1 + [8])
	$15 = ($1 + [64])
	$10 = *($1 + [64])
	$6 = (CASTING uint_64)(uint_32 int_32(($9 - $10) >> [6]))
	$8 = [57]
	
.LOOP $label$7:
	$8 = ($8 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = *($10 + [16])
	$7 = ( *(($10 + [20])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$8 = (($7 + $8) + [48])
	$6 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$10:
	$8 = ($8 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$10 }
	$10 = ($10 + [64])
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($8 <= [513]) ){ goto $label$12 }
	$10 = CALL $1($8)
	goto $label$11 
	
.LABEL $label$12
	$10 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$11
	*($4 + [4]) = $10
	*($4) = $10
	*($4 + [8]) = ($10 + $8)
	*($4 + [16]) = $4
	*($4 + [28]) = $14
	*($4 + [40]) = $12
	*($4 + [44]) = $13
	*($4 + [52]) = $11
	*($4 + [56]) = $15
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [32])
	*($4 + [48]) = ($1 + [56])
	CALL $313(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [80]), $2, $10, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $2($10)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$13
	$global$0 = ($4 + [64])
}

void .FUNC $117 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = [0]
	$3 = CALL db_lowerbound_i64($2, $2, (int_64)3940451327872598016, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $85($1, $3)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [10325])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)[1]), [10486])
	$3 = [0]
	$4 = CALL db_next_i64(*($0 + [80]), ($1 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$3 = CALL $85($1, $4)
	
.LABEL $label$4
	CALL $107($1, $0)
	$0 = $3
	if ( $3 ){ goto $label$3 }
	
.LABEL $label$2
	$5 = *($1 + [24])
	if ( ($5 == 0) ){ goto $label$5 }
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$9 }
	$4 = *($8 + [64])
	if ( ($4 == 0) ){ goto $label$10 }
	$9 = ($8 + [68])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$3 = ($0 + [-64])
	if ( ((*(($0 + [-48])) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*(($0 + [-40])))
	
.LABEL $label$14
	$0 = $3
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$13 }
	$0 = *(($8 + [64]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $4
	
.LABEL $label$11
	*($9) = $4
	CALL $9($0)
	
.LABEL $label$10
	CALL $9($8)
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$8 }
	$0 = *(($1 + [24]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $5
	
.LABEL $label$6
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$5
	$global$0 = ($1 + [48])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [76]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	$5 = *($1)
	$8 = *($1 + [64])
	$6 = ($1 + [68])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LOOP $label$4:
	$9 = ($7 + [-64])
	if ( ((*(($7 + [-48])) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($7 + [-40])))
	
.LABEL $label$5
	$7 = $9
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$3
	*($6) = $8
	$7 = CALL $15([8898])
	if ( ($7 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [11869])
	goto $label$8 
	
.LABEL $label$9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$10 = (int_64)0
	
.LOOP $label$10:
	$9 = *(($7 + [8897]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$11
	$10 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$10 }
	$11 = ((int_64)((int_64)$10 << (int_64)8) | (int_64)4)
	goto $label$6 
	
.LABEL $label$7
	$11 = (int_64)4
	
.LABEL $label$6
	$10 = (uint_64)$11 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$12 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$10 = $12
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$10 = $12
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $9 ){ goto $label$16 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [12016])
	
.LABEL $label$12
	*($1 + [16]) = (int_64)0
	*($1 + [60]) = [0]
	*($1 + [52]) = [0]
	*(($1 + [24])) = $11
	if ( ((int_64)$5 == (int_64)*($1)) ){ goto $label$17 }
	CALL eosio_assert([0], [12234])
	
.LABEL $label$17
	$13 = ($1 + [52])
	$14 = ($1 + [60])
	$15 = ($1 + [64])
	$9 = *($1 + [64])
	$6 = *(($1 + [68]))
	$10 = (CASTING uint_64)(uint_32 int_32(($6 - $9) >> [6]))
	$7 = [57]
	
.LOOP $label$18:
	$7 = ($7 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$18 }
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$19 }
	
.LOOP $label$20:
	$8 = *($9 + [16])
	$8 = ( *(($9 + [20])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$7 = (($8 + $7) + [48])
	$10 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$21:
	$7 = ($7 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$21 }
	$9 = ($9 + [64])
	if ( ((int_32)$9 != (int_32)$6) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ($7 <= [513]) ){ goto $label$23 }
	$9 = CALL $1($7)
	goto $label$22 
	
.LABEL $label$23
	$9 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$22
	*($4 + [4]) = $9
	*($4) = $9
	*($4 + [8]) = ($9 + $7)
	*($4 + [16]) = $4
	*($4 + [44]) = $13
	*($4 + [52]) = $14
	*($4 + [56]) = $15
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [32])
	*($4 + [40]) = ($1 + [48])
	*($4 + [48]) = ($1 + [56])
	CALL $313(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [80]), $2, $9, $7)
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$26 }
	if ( ((uint_64)$5 >= (uint_64)*($0 + [16])) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL $2($9)
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$24 }
	
.LABEL $label$25
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$24
	$global$0 = ($4 + [64])
}

void .FUNC $115 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	$4 = [0]
	$5 = CALL db_find_i64($3, $3, (int_64)3940451327872598016, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $85($2, $5)
	if ( ((int_32)*($4 + [76]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [10392])
	if ( ($4 == 0) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)[1]), [10467])
	CALL $116($2, $4, *($0))
	$4 = CALL db_next_i64(*($4 + [80]), ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = CALL $85($2, $4)
	CALL eosio_assert(((int_32)*($4 + [48]) == (int_32)[1]), [10467])
	CALL $116($2, $4, *($0))
	$4 = CALL db_next_i64(*($4 + [80]), ($2 + [40]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$2
	$6 = *($2 + [24])
	if ( ($6 == 0) ){ goto $label$4 }
	$7 = ($2 + [28])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$7:
	$8 = ($8 + [-24])
	$9 = *($8)
	*($8) = [0]
	if ( ($9 == 0) ){ goto $label$8 }
	$5 = *($9 + [64])
	if ( ($5 == 0) ){ goto $label$9 }
	$10 = ($9 + [68])
	$4 = *($10)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$0 = ($4 + [-64])
	if ( ((*(($4 + [-48])) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($4 + [-40])))
	
.LABEL $label$13
	$4 = $0
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$12 }
	$4 = *(($9 + [64]))
	goto $label$10 
	
.LABEL $label$11
	$4 = $5
	
.LABEL $label$10
	*($10) = $5
	CALL $9($4)
	
.LABEL $label$9
	CALL $9($9)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$7 }
	$4 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$4 = $6
	
.LABEL $label$5
	*($7) = $6
	CALL $9($4)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

void .FUNC $112 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [76]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [48]) = [1]
	$5 = ($1 + [64])
	$6 = ($1 + [48])
	$8 = *($1 + [64])
	$7 = *(($1 + [68]))
	$9 = (CASTING uint_64)(uint_32 int_32(($7 - $8) >> [6]))
	$10 = *($1)
	$11 = [57]
	
.LOOP $label$3:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	
.LOOP $label$5:
	$12 = *($8 + [16])
	$12 = ( *(($8 + [20])) ? uint_32($12 >> [1]) : ($12 & [1]) )
	$11 = (($12 + $11) + [48])
	$9 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$6:
	$11 = ($11 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	$8 = ($8 + [64])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$5 }
	
.LABEL $label$4
	if ( ($11 <= [513]) ){ goto $label$8 }
	$8 = CALL $1($11)
	goto $label$7 
	
.LABEL $label$8
	$8 = ($3 - (($11 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$7
	*($4 + [4]) = $8
	*($4) = $8
	*($4 + [8]) = ($8 + $11)
	*($4 + [16]) = $4
	*($4 + [40]) = $6
	*($4 + [56]) = $5
	*($4 + [24]) = $1
	*($4 + [28]) = ($1 + [8])
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [32])
	*($4 + [44]) = ($1 + [52])
	*($4 + [48]) = ($1 + [56])
	*($4 + [52]) = ($1 + [60])
	CALL $313(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [80]), $2, $8, $11)
	if ( ((uint_32)$11 >= (uint_32)[513]) ){ goto $label$11 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $2($8)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$9 }
	
.LABEL $label$10
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [64])
	return 
	
.LABEL $label$9
	$global$0 = ($4 + [64])
}

void .FUNC $113 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [272])
	$global$0 = $4
	CALL require_auth($2)
	$5 = [0]
	*((($4 + [232]) + [32])) = [0]
	*($4 + [248]) = (int_64)-1
	*($4 + [256]) = (int_64)0
	$6 = *($0)
	*($4 + [232]) = $6
	*($4 + [240]) = $6
	$7 = [0]
	$8 = CALL db_find_i64($6, $6, (int_64)3940451327872598016, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $85(($4 + [232]), $8)
	if ( ((int_32)*($7 + [76]) == (int_32)($4 + [232])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	*((($4 + [192]) + [32])) = [0]
	*($4 + [208]) = (int_64)-1
	$6 = *($0)
	*($4 + [192]) = $6
	*($4 + [200]) = $6
	*($4 + [216]) = (int_64)0
	$8 = CALL db_lowerbound_i64($6, $6, (int_64)3940451319824052736, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $86(($4 + [192]), $8)
	$5 = [1]
	
.LABEL $label$2
	CALL eosio_assert($5, [10364])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [10392])
	CALL eosio_assert(((int_32)*($7 + [48]) == (int_32)[1]), [10423])
	$6 = *($0)
	if ( $7 ){ goto $label$3 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$3
	CALL $114(($4 + [232]), $7, $6)
	$6 = *($0)
	*($4 + [120]) = [9370]
	*($4 + [124]) = CALL $15([9370])
	*($4 + [16]) = *($4 + [120])
	$7 = CALL $60(($4 + [128]), ($4 + [16]))
	*($4 + [136]) = $6
	*($4 + [144]) = *($7)
	*($4 + [104]) = [9377]
	*($4 + [108]) = CALL $15([9377])
	*($4 + [8]) = *($4 + [104])
	$8 = CALL $60(($4 + [112]), ($4 + [8]))
	*($4 + [88]) = [9389]
	*($4 + [92]) = CALL $15([9389])
	*($4) = *($4 + [88])
	$9 = CALL $60(($4 + [96]), $4)
	*(($4 + [32])) = [0]
	*($4 + [24]) = (int_64)0
	$7 = CALL $15([10442])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$12 }
	*($4 + [24]) = ($7 << [1])
	$5 = (($4 + [24]) | [1])
	if ( $7 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$10 = (($7 + [16]) & [-16])
	$5 = CALL $7($10)
	*($4 + [24]) = ($10 | [1])
	*($4 + [32]) = $5
	*($4 + [28]) = $7
	
.LABEL $label$11
	CALL memcpy($5, [10442], $7)
	
.LABEL $label$10
	*(($5 + $7)) = [0]
	*(($4 + [64])) = *(($3 + [8]))
	$7 = (($4 + [24]) + [8])
	*(($4 + [80])) = *($7)
	*($7) = [0]
	*($4 + [48]) = $2
	*($4 + [40]) = *($0)
	*($4 + [56]) = *($3)
	*($4 + [72]) = *($4 + [24])
	*($4 + [24]) = (int_64)0
	$0 = CALL $74(($4 + [152]), ($4 + [136]), *($8), *($9), ($4 + [40]))
	CALL $75($0)
	$7 = *($0 + [28])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($0 + [32])) = $7
	CALL $9($7)
	
.LABEL $label$13
	$7 = *($0 + [16])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($0 + [20])) = $7
	CALL $9($7)
	
.LABEL $label$14
	if ( (*(($4 + [72])) & [1]) ){ goto $label$16 }
	if ( (*($4 + [24]) & [1]) ){ goto $label$15 }
	goto $label$8 
	
.LABEL $label$16
	CALL $9(*(($4 + [80])))
	if ( ((*($4 + [24]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$15
	CALL $9(*(($4 + [32])))
	$5 = *($4 + [216])
	if ( ($5 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	CALL $24(($4 + [24]))
	
.LABEL $label$8
	$5 = *($4 + [216])
	if ( $5 ){ goto $label$6 }
	
.LABEL $label$7
	$9 = *($4 + [256])
	if ( $9 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = ($4 + [220])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$17 }
	
.LOOP $label$18:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$19 }
	CALL $9($7)
	
.LABEL $label$19
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$18 }
	$0 = *(($4 + [216]))
	*($3) = $5
	CALL $9($0)
	$9 = *($4 + [256])
	if ( $9 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$17
	*($3) = $5
	CALL $9($5)
	$9 = *($4 + [256])
	if ( ($9 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$11 = ($4 + [260])
	$3 = *($11)
	if ( ((int_32)$3 == (int_32)$9) ){ goto $label$21 }
	
.LOOP $label$22:
	$3 = ($3 + [-24])
	$8 = *($3)
	*($3) = [0]
	if ( ($8 == 0) ){ goto $label$23 }
	$5 = *($8 + [64])
	if ( ($5 == 0) ){ goto $label$24 }
	$10 = ($8 + [68])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$26 }
	
.LOOP $label$27:
	$7 = ($0 + [-64])
	if ( ((*(($0 + [-48])) & [1]) == 0) ){ goto $label$28 }
	CALL $9(*(($0 + [-40])))
	
.LABEL $label$28
	$0 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$27 }
	$0 = *(($8 + [64]))
	goto $label$25 
	
.LABEL $label$26
	$0 = $5
	
.LABEL $label$25
	*($10) = $5
	CALL $9($0)
	
.LABEL $label$24
	CALL $9($8)
	
.LABEL $label$23
	if ( ((int_32)$3 != (int_32)$9) ){ goto $label$22 }
	$0 = *(($4 + [256]))
	goto $label$20 
	
.LABEL $label$21
	$0 = $9
	
.LABEL $label$20
	*($11) = $9
	CALL $9($0)
	$global$0 = ($4 + [272])
	return 
	
.LABEL $label$4
	$global$0 = ($4 + [272])
	(unreachable)
}

void .FUNC $110 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [16]) = ((int_64)*($1 + [16]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-32])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($6 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [36]) = ($1 + [8])
	*($4 + [32]) = $1
	*($4 + [40]) = ($1 + [16])
	CALL $104(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC $111 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [80])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*((($2 + [40]) + [32])) = [0]
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	$4 = *($0)
	*($2 + [40]) = $4
	*($2 + [48]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)3940451327872598016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $85(($2 + [40]), $6)
	if ( ((int_32)*($5 + [76]) == (int_32)($2 + [40])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	$4 = *($0)
	*($2) = $4
	*($2 + [8]) = $4
	*($2 + [24]) = (int_64)0
	$6 = CALL db_lowerbound_i64($4, $4, (int_64)3940451319824052736, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $86($2, $6)
	$3 = [1]
	
.LABEL $label$2
	CALL eosio_assert($3, [10364])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [10392])
	CALL eosio_assert((*($5 + [48]) == 0), [10407])
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$3
	CALL $112(($2 + [40]), $5, $4)
	$3 = *($2 + [24])
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $9($0)
	
.LABEL $label$8
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$7 }
	$5 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$5 = $3
	
.LABEL $label$5
	*($6) = $3
	CALL $9($5)
	
.LABEL $label$4
	$7 = *($2 + [64])
	if ( ($7 == 0) ){ goto $label$9 }
	$8 = ($2 + [68])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$13 }
	$3 = *($9 + [64])
	if ( ($3 == 0) ){ goto $label$14 }
	$10 = ($9 + [68])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($5 + [-64])
	if ( ((*(($5 + [-48])) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*(($5 + [-40])))
	
.LABEL $label$18
	$5 = $0
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$17 }
	$5 = *(($9 + [64]))
	goto $label$15 
	
.LABEL $label$16
	$5 = $3
	
.LABEL $label$15
	*($10) = $3
	CALL $9($5)
	
.LABEL $label$14
	CALL $9($9)
	
.LABEL $label$13
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$12 }
	$5 = *(($2 + [64]))
	goto $label$10 
	
.LABEL $label$11
	$5 = $7
	
.LABEL $label$10
	*($8) = $7
	CALL $9($5)
	
.LABEL $label$9
	$global$0 = ($2 + [80])
}

void .FUNC $237 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $334 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $314(*($1), *($0 + [20]))
}

void .FUNC $118 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = ($global$0 - [48])
	$global$0 = $1
	CALL require_auth(*($0))
	*(($1 + [32])) = [0]
	*($1 + [16]) = (int_64)-1
	$2 = *($0)
	*($1) = $2
	*($1 + [8]) = $2
	*($1 + [24]) = (int_64)0
	$0 = [0]
	$3 = CALL db_find_i64($2, $2, (int_64)3940451319824052736, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $86($1, $3)
	if ( ((int_32)*($0 + [24]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [10325])
	if ( $0 ){ goto $label$2 }
	CALL eosio_assert([0], [12479])
	CALL eosio_assert([0], [12513])
	
.LABEL $label$2
	$3 = CALL db_next_i64(*($0 + [28]), ($1 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	CALL $86($1, $3)
	
.LABEL $label$3
	CALL $119($1, $0)
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = ($1 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$8 }
	CALL $9($3)
	
.LABEL $label$8
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($1 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $4
	
.LABEL $label$5
	*($5) = $4
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($1 + [48])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12543])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12588])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [12638])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $299 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [6]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [8]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	$7 = ($2 + [20])
	$8 = ($2 + [24])
	$5 = ($2 + [28])
	
.LOOP $label$4:
	*($2) = $0
	*($2 + [8]) = $4
	*((($2 + [8]) + [8])) = ($4 + [24])
	*($7) = ($4 + [36])
	*($8) = ($4 + [48])
	*($5) = ($4 + [56])
	*($2 + [12]) = ($4 + [8])
	CALL $300(($2 + [8]), $2)
	$4 = ($4 + [64])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

void .FUNC $298 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $299(*($1), *($0 + [20]))
}

void .FUNC $295 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [6]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [6])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[67108864]) ){ goto $label$4 }
	$3 = [67108863]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [6]) > (uint_32)[33554430]) ){ goto $label$7 }
	$3 = int_32($2 >> [5])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[67108864]) ){ goto $label$3 }
	
.LABEL $label$7
	$7 = CALL $7(($3 << [6]))
	goto $label$2 
	
.LABEL $label$6
	$2 = ($0 + [4])
	
.LOOP $label$8:
	*($3 + [48]) = (int_64)0
	*(($3 + [56])) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($3 + [40])) = (int_64)0
	$3 = (*($2) + [64])
	*($2) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $43($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$8 = ($7 + ($3 << [6]))
	$4 = ($7 + ($5 << [6]))
	$3 = ($4 + [24])
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [32])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [-24])) = (int_64)0
	*(($3 + [-16])) = (int_64)0
	*(($3 + [-8])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	$3 = ($3 + [64])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$9 = ($7 + ($6 << [6]))
	$2 = *($0)
	$10 = ($0 + [4])
	$1 = *($10)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$11 }
	$3 = ($5 + [-1])
	$11 = ($3 - uint_32((($1 + [-64]) - $2) >> [6]))
	$3 = ($7 + ($3 << [6]))
	
.LOOP $label$12:
	*(($3 + [16])) = *(($1 + [-48]))
	*(($3 + [8])) = *(($1 + [-56]))
	$6 = ($1 + [-64])
	*($3) = *($6)
	$5 = ($1 + [-32])
	*(($3 + [32])) = *($5)
	$4 = ($1 + [-40])
	*(($3 + [24])) = *($4)
	*($4) = (int_64)0
	*($5) = [0]
	$5 = ($1 + [-20])
	*(($3 + [44])) = *($5)
	$4 = ($1 + [-28])
	*(($3 + [36])) = *($4)
	*($4) = (int_64)0
	*($5) = [0]
	*(($3 + [56])) = *(($1 + [-8]))
	*(($3 + [48])) = *(($1 + [-16]))
	$3 = ($3 + [-64])
	$1 = $6
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$12 }
	$4 = ($7 + ($11 << [6]))
	$2 = *(($0 + [4]))
	$1 = *($0)
	goto $label$10 
	
.LABEL $label$11
	$1 = $2
	
.LABEL $label$10
	*($0) = $4
	*($10) = $9
	*(($0 + [8])) = $8
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	if ( ((*(($2 + [-28])) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($2 + [-20])))
	
.LABEL $label$15
	$3 = ($2 + [-64])
	if ( ((*(($2 + [-40])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($2 + [-32])))
	
.LABEL $label$16
	$2 = $3
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $294 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [12344])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$3 = (CASTING uint_32)(uint_64 $4)
	$6 = *($1)
	$8 = *($1 + [4])
	$7 = int_32(($8 - $6) >> [6])
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$5 }
	CALL $295($1, ($3 - $7))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$6 }
	$7 = ($6 + ($3 << [6]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$8:
	if ( ((*(($8 + [-28])) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($8 + [-20])))
	
.LABEL $label$9
	$3 = ($8 + [-64])
	if ( ((*(($8 + [-40])) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($8 + [-32])))
	
.LABEL $label$10
	$8 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $7
	$8 = $7
	
.LABEL $label$6
	$3 = *($1)
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($2 + [20])
	$6 = ($2 + [24])
	$5 = ($2 + [28])
	
.LOOP $label$11:
	*($2) = $0
	*($2 + [8]) = $3
	*((($2 + [8]) + [8])) = ($3 + [24])
	*($7) = ($3 + [36])
	*($6) = ($3 + [48])
	*($5) = ($3 + [56])
	*($2 + [12]) = ($3 + [8])
	CALL $296(($2 + [8]), $2)
	$3 = ($3 + [64])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$11 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

int_32 .FUNC $297 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$1 = ($1 + [-24])
	*($3) = $1
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$5 = *($4 + [40])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($4 + [44])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	if ( ((*(($1 + [-28])) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*(($1 + [-20])))
	
.LABEL $label$8
	$7 = ($1 + [-64])
	if ( ((*(($1 + [-40])) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($1 + [-32])))
	
.LABEL $label$9
	$1 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	$1 = *(($4 + [40]))
	goto $label$5 
	
.LABEL $label$6
	$1 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($1)
	
.LABEL $label$4
	CALL $9($4)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	return $0
}

void .FUNC $296 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $219(*($1), *($0 + [8]))
	CALL $219(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $291 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $290 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12073])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $293 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = *($0 + [16])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $294(*($1), *($0 + [20]))
}

void .FUNC $292 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$4 = *($1)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $235 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$4 = *($1)
	$1 = CALL $25($2, ($1 + [16]))
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*($0) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$5 = CALL $25(($2 + [16]), $1)
	CALL void $6((int_32 $4), (int_64 $3), (int_64 $5), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($5 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

void .FUNC $278 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	CALL memcpy(($3 + [152]), $5, [8])
	*(($3 + [24])) = $4
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [24])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $156($3, *($3 + [168]), *($3 + [160]), *($3 + [152]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$8 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $9($4)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $5
	
.LABEL $label$9
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$8
	$global$0 = ($3 + [176])
}

void .FUNC $311 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $21 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $19($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

void .FUNC $20 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $20($3, (int_64)0)
	$4 = CALL $22($3, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return (CASTING uint_32)(uint_64 $4)
}

int_64 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $21($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $4()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $21($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [8289]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $20($0, (int_64)0)
	*(CALL $4()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $21($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $21($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $21($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $21($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [8289])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [8289]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [8289]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $21($0)
	$5 = *(($6 + [8289]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $21($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [8289]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8245]))
	$8 = (int_64)0
	$5 = *(($6 + [8289]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [8289]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $21($0)
	$5 = *(($6 + [8289]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $21($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [8289]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $20($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [8289]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [8289]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $21($0) + [8289]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $4()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $4()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $4()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $24 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $28($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL $7($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $329 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $331(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $328 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $330(*($0 + [24]), $1, [1])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$3 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $219(*($1), *($0 + [36]))
	CALL $219(*($1), *($0 + [40]))
	CALL $219(*($1), *($0 + [44]))
	CALL $219(*($1), *($0 + [48]))
	$global$0 = ($2 + [16])
}

void .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [16])) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [24])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($4 + [32])) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$5 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	*($2 + [8]) = $4
	CALL $337(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $326 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$6 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$10
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$11
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$12
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [36])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$13
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$14
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$5 = *($0 + [40])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($5, $1, [8])
	$4 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$16 }
	CALL eosio_assert([0], [12692])
	$4 = *($1)
	
.LABEL $label$16
	CALL memcpy(($2 + [8]), $4, [8])
	*($5 + [8]) = *($2 + [8])
	*($1) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $300 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $301(*($1), *($0 + [8]))
	CALL $301(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [20])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $321 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $7(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $43($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $9($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $320 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [12344])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $321($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $280 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [168]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($3 + [168]), $2, [8])
	*($3 + [160]) = (int_64)0
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$6
	$6 = ($2 + $4)
	CALL memcpy(($3 + [160]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)($4 & [-2]) != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$7
	CALL memcpy(($3 + [158]), $5, [2])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($4 = ($3 + [56]))) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($5 = ($3 + [96]))) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [18])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($2 = ($3 + [136]))) = (int_64)0
	*(($3 + [144])) = [0]
	CALL $173($3, *($3 + [168]), *($3 + [160]), *($3 + [158]))
	CALL $217($2)
	CALL $218($5)
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$8 }
	$6 = ($3 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $9($4)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($3 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $5
	
.LABEL $label$9
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$8
	$global$0 = ($3 + [176])
}

void .FUNC $322 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [8])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [12])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$4 = *(($3 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [16])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$1 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

int_32 .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $324 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12073])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $325(*($1), *($0 + [32]))
	CALL $325(*($1), *($0 + [36]))
	$global$0 = ($2 + [16])
}

void .FUNC $327 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $315 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $301(*($1), *($0 + [8]))
	$3 = *($0 + [12])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [32])
	*(($0 = ($0 + [4]))) = (*($0) + [32])
}

int_32 .FUNC $101 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_64 $4
	int_32 $5
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$1 = CALL $15([8898])
	if ( ($1 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [11869])
	goto $label$3 
	
.LABEL $label$4
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = (int_64)0
	
.LOOP $label$5:
	$3 = *(($1 + [8897]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$6
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$5 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$2 = (int_64)4
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$2 = $4
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$11 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [12016])
	
.LABEL $label$7
	$1 = CALL $15([8898])
	if ( ($1 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [11869])
	goto $label$14 
	
.LABEL $label$15
	if ( ($1 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$2 = (int_64)0
	
.LOOP $label$16:
	$3 = *(($1 + [8897]))
	if ( ((($3 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$17
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56))
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$16 }
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$2 = (int_64)4
	
.LABEL $label$12
	*($0 + [32]) = (int_64)0
	*(($0 + [40])) = $2
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$4 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$2 = $4
	$3 = $1
	$1 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$2 = $4
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$3 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $3 ){ goto $label$22 }
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [12016])
	
.LABEL $label$18
	*($0 + [48]) = [1]
	*($0 + [52 align=4]) = (int_64)85899345920
	*($0 + [60 align=4]) = (int_64)0
	*(($0 + [68])) = (int_64)0
	return $0
}

void .FUNC $100 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [160])
	$global$0 = $4
	*($4 + [84]) = $3
	*($4 + [88]) = $1
	CALL require_auth(*($0))
	$3 = [0]
	*(($4 + [72])) = [0]
	*($4 + [56]) = (int_64)-1
	*($4 + [64]) = (int_64)0
	$5 = *($0)
	*($4 + [40]) = $5
	*($4 + [48]) = $5
	$6 = CALL db_find_i64($5, $5, (int_64)3940451327872598016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $85(($4 + [40]), $6)
	if ( ((int_32)*($3 + [76]) == (int_32)($4 + [40])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(($3 == 0), [10235])
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)[4]), [10271])
	$1 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	$3 = CALL $15([8898])
	if ( ($3 <= [8]) ){ goto $label$5 }
	CALL eosio_assert([0], [11869])
	goto $label$4 
	
.LABEL $label$5
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = (int_64)0
	
.LOOP $label$6:
	$6 = *(($3 + [8897]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$7 }
	CALL eosio_assert([0], [11914])
	
.LABEL $label$7
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$5 = (int_64)0
	
.LABEL $label$2
	CALL eosio_assert(((int_64)$1 == (int_64)$5), [8902])
	CALL eosio_assert(((int_64)*($2) > (int_64)999), [10301])
	$5 = *($0)
	*($4 + [104]) = $2
	*($4 + [100]) = ($4 + [84])
	*($4 + [96]) = ($4 + [88])
	*($4 + [144]) = $5
	if ( ((int_64)*($4 + [40]) == (int_64)CALL current_receiver()) ){ goto $label$8 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$8
	*($4 + [4]) = ($4 + [96])
	*($4) = ($4 + [40])
	*($4 + [8]) = ($4 + [144])
	$3 = CALL $7([88])
	CALL $101($3)
	*($3 + [76]) = ($4 + [40])
	CALL $102($4, $3)
	*($4 + [120]) = $3
	$5 = *($3)
	*($4) = $5
	$2 = *($3 + [80])
	*($4 + [136]) = $2
	$7 = ($4 + [68])
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*(($4 + [72]))) ){ goto $label$11 }
	*($6 + [8]) = $5
	*($6 + [16]) = $2
	*($4 + [120]) = [0]
	*($6) = $3
	*($7) = ($6 + [24])
	$7 = *($4 + [120])
	$8 = [0]
	*($4 + [120]) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	CALL $103(($4 + [64]), ($4 + [120]), $4, ($4 + [136]))
	$7 = *($4 + [120])
	$8 = [0]
	*($4 + [120]) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$2 = *($7 + [64])
	if ( ($2 == 0) ){ goto $label$12 }
	$9 = ($7 + [68])
	$3 = *($9)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = ($3 + [-64])
	if ( ((*(($3 + [-48])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($3 + [-40])))
	
.LABEL $label$16
	$3 = $6
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$15 }
	$3 = *(($7 + [64]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $2
	
.LABEL $label$13
	*($9) = $2
	CALL $9($3)
	
.LABEL $label$12
	CALL $9($7)
	
.LABEL $label$9
	*(($4 + [32])) = $8
	*($4 + [16]) = (int_64)-1
	$5 = *($0)
	*($4) = $5
	*($4 + [8]) = $5
	*($4 + [24]) = (int_64)0
	$3 = CALL db_find_i64($5, $5, (int_64)3940451319824052736, (int_64)0)
	if ( ((int_32)$3 < (int_32)$8) ){ goto $label$20 }
	if ( ((int_32)*(CALL $86($4, $3) + [24]) == (int_32)$4) ){ goto $label$19 }
	CALL eosio_assert([0], [12293])
	$2 = *($4 + [24])
	if ( $2 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	$1 = *($0)
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$21 }
	CALL eosio_assert([0], [12348])
	
.LABEL $label$21
	*(($3 = CALL $7([40]))) = (int_64)0
	*($3 + [24]) = $4
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($4 + [128]) = (($4 + [96]) + [24])
	*($4 + [124]) = ($4 + [96])
	*($4 + [120]) = ($4 + [96])
	*($4 + [136]) = ($4 + [120])
	*($4 + [148]) = ($3 + [8])
	*($4 + [144]) = $3
	*($4 + [152]) = ($3 + [16])
	CALL $104(($4 + [144]), ($4 + [136]))
	$5 = *($3)
	$2 = CALL db_store_i64(*(($4 + [8])), (int_64)3940451319824052736, $1, $5, ($4 + [96]), [24])
	*($3 + [28]) = $2
	$6 = ($4 + [16])
	if ( (uint_64)($5 <= *($6)) ){ goto $label$22 }
	*($6) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($4 + [144]) = $3
	$5 = *($3)
	*($4 + [96]) = $5
	*($4 + [120]) = $2
	$0 = ($4 + [28])
	$6 = *($0)
	if ( ((uint_32)$6 >= (uint_32)*(($4 + [32]))) ){ goto $label$24 }
	*($6 + [8]) = $5
	*($6 + [16]) = $2
	*($4 + [144]) = [0]
	*($6) = $3
	*($0) = ($6 + [24])
	$3 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( $3 ){ goto $label$23 }
	goto $label$19 
	
.LABEL $label$24
	CALL $105(($4 + [24]), ($4 + [144]), ($4 + [96]), ($4 + [120]))
	$3 = *($4 + [144])
	*($4 + [144]) = [0]
	if ( ($3 == 0) ){ goto $label$19 }
	
.LABEL $label$23
	CALL $9($3)
	
.LABEL $label$19
	$2 = *($4 + [24])
	if ( ($2 == 0) ){ goto $label$17 }
	
.LABEL $label$18
	$0 = ($4 + [28])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$26 }
	
.LOOP $label$27:
	$3 = ($3 + [-24])
	$6 = *($3)
	*($3) = [0]
	if ( ($6 == 0) ){ goto $label$28 }
	CALL $9($6)
	
.LABEL $label$28
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$27 }
	$3 = *(($4 + [24]))
	goto $label$25 
	
.LABEL $label$26
	$3 = $2
	
.LABEL $label$25
	*($0) = $2
	CALL $9($3)
	
.LABEL $label$17
	$8 = *($4 + [64])
	if ( ($8 == 0) ){ goto $label$29 }
	$10 = ($4 + [68])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$31 }
	
.LOOP $label$32:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$33 }
	$2 = *($7 + [64])
	if ( ($2 == 0) ){ goto $label$34 }
	$9 = ($7 + [68])
	$3 = *($9)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$36 }
	
.LOOP $label$37:
	$6 = ($3 + [-64])
	if ( ((*(($3 + [-48])) & [1]) == 0) ){ goto $label$38 }
	CALL $9(*(($3 + [-40])))
	
.LABEL $label$38
	$3 = $6
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$37 }
	$3 = *(($7 + [64]))
	goto $label$35 
	
.LABEL $label$36
	$3 = $2
	
.LABEL $label$35
	*($9) = $2
	CALL $9($3)
	
.LABEL $label$34
	CALL $9($7)
	
.LABEL $label$33
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$32 }
	$3 = *(($4 + [64]))
	goto $label$30 
	
.LABEL $label$31
	$3 = $8
	
.LABEL $label$30
	*($10) = $8
	CALL $9($3)
	
.LABEL $label$29
	$global$0 = ($4 + [160])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($5 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$6 = ($4 + ((int_32)$7 * (int_32)[24]))
	$8 = ($1 + [24])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$1 = (($4 + $5) + [-24])
	
.LOOP $label$7:
	$4 = ($7 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($7 + [-8]))
	*(($1 + [8])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $8
	*(($0 + [8])) = $6
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$4 = *($3 + [64])
	if ( ($4 == 0) ){ goto $label$11 }
	$0 = ($3 + [68])
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$7 = ($1 + [-64])
	if ( ((*(($1 + [-48])) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($1 + [-40])))
	
.LABEL $label$15
	$1 = $7
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$14 }
	$1 = *(($3 + [64]))
	goto $label$12 
	
.LABEL $label$13
	$1 = $4
	
.LABEL $label$12
	*($0) = $4
	CALL $9($1)
	
.LABEL $label$11
	CALL $9($3)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$16 }
	CALL $9($5)
	
.LABEL $label$16
	(unreachable)
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	*($1 + [52]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($1 + [32]) = *(*($4 + [8]))
	*($1 + [56]) = *(*($4 + [4]))
	$6 = ($1 + [64])
	$7 = ($1 + [56])
	$8 = ($1 + [52])
	$10 = *($1 + [64])
	$9 = *(($1 + [68]))
	$11 = (CASTING uint_64)(uint_32 int_32(($9 - $10) >> [6]))
	$4 = [57]
	
.LOOP $label$1:
	$4 = ($4 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$2 }
	
.LOOP $label$3:
	$12 = *($10 + [16])
	$12 = ( *(($10 + [20])) ? uint_32($12 >> [1]) : ($12 & [1]) )
	$4 = (($12 + $4) + [48])
	$11 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$4:
	$4 = ($4 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$4 }
	$10 = ($10 + [64])
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ($4 <= [513]) ){ goto $label$6 }
	$10 = CALL $1($4)
	goto $label$5 
	
.LABEL $label$6
	$10 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$5
	*($3 + [4]) = $10
	*($3) = $10
	*($3 + [8]) = ($10 + $4)
	*($3 + [16]) = $3
	*($3 + [28]) = ($1 + [8])
	*($3 + [24]) = $1
	*($3 + [32]) = ($1 + [16])
	*($3 + [36]) = ($1 + [32])
	*($3 + [40]) = ($1 + [48])
	*($3 + [44]) = $8
	*($3 + [48]) = $7
	*($3 + [52]) = ($1 + [60])
	*($3 + [56]) = $6
	CALL $313(($3 + [24]), ($3 + [16]))
	$11 = *($1)
	*($1 + [80]) = CALL db_store_i64(*($5 + [8]), (int_64)3940451327872598016, *(*($0 + [8])), $11, $10, $4)
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$11 >= (uint_64)*($5 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($10)
	if ( (uint_64)($11 <= *($5 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$7
	$global$0 = ($3 + [64])
}

void .FUNC $105 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $43($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = *($0 + [4])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0 + [8])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	if ( ((int_32)*($1 + [76]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12543])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12588])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$7 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$8 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$9:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$7 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$6 }
	$10 = [-24]
	$2 = ($5 + [-24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	CALL eosio_assert([0], [12638])
	$10 = [-24]
	$2 = ($5 + [-24])
	$4 = *($3)
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LABEL $label$5
	
.LOOP $label$10:
	$8 = *($5)
	*($5) = [0]
	$3 = *($2)
	*($2) = $8
	if ( ($3 == 0) ){ goto $label$11 }
	$7 = *($3 + [64])
	if ( ($7 == 0) ){ goto $label$12 }
	$11 = ($3 + [68])
	$8 = *($11)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$14 }
	
.LOOP $label$15:
	$9 = ($8 + [-64])
	if ( ((*(($8 + [-48])) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [-40])))
	
.LABEL $label$16
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$15 }
	$8 = *(($3 + [64]))
	goto $label$13 
	
.LABEL $label$14
	$8 = $7
	
.LABEL $label$13
	*($11) = $7
	CALL $9($8)
	
.LABEL $label$12
	CALL $9($3)
	
.LABEL $label$11
	*($2 + [8]) = *($5 + [8])
	*(($2 + [16])) = *(($5 + [16]))
	$2 = ($2 + [24])
	$5 = ($5 + [24])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$10 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$17:
	$5 = ($5 + $10)
	$3 = *($5)
	*($5) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	$7 = *($3 + [64])
	if ( ($7 == 0) ){ goto $label$19 }
	$4 = ($3 + [68])
	$8 = *($4)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$21 }
	
.LOOP $label$22:
	$9 = ($8 + [-64])
	if ( ((*(($8 + [-48])) & [1]) == 0) ){ goto $label$23 }
	CALL $9(*(($8 + [-40])))
	
.LABEL $label$23
	$8 = $9
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$22 }
	$8 = *(($3 + [64]))
	goto $label$20 
	
.LABEL $label$21
	$8 = $7
	
.LABEL $label$20
	*($4) = $7
	CALL $9($8)
	
.LABEL $label$19
	CALL $9($3)
	
.LABEL $label$18
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$17 }
	
.LABEL $label$3
	*(($0 + [28])) = $2
	CALL db_remove_i64(*($1 + [80]))
}

void .FUNC $106 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*($0))
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	$0 = [0]
	$4 = CALL db_find_i64($3, $3, (int_64)3940451327872598016, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $85($2, $4)
	if ( ((int_32)*($0 + [76]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$0 != (int_32)[0]), [10325])
	CALL eosio_assert(((int_32)*($0 + [48]) == (int_32)[1]), [10344])
	if ( $0 ){ goto $label$2 }
	CALL eosio_assert([0], [12479])
	CALL eosio_assert([0], [12513])
	
.LABEL $label$2
	$4 = CALL db_next_i64(*($0 + [80]), ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$3 }
	CALL $85($2, $4)
	
.LABEL $label$3
	CALL $107($2, $0)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = ($2 + [28])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$8 }
	$9 = *($8 + [64])
	if ( ($9 == 0) ){ goto $label$9 }
	$10 = ($8 + [68])
	$0 = *($10)
	if ( ((int_32)$0 == (int_32)$9) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = ($0 + [-64])
	if ( ((*(($0 + [-48])) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($0 + [-40])))
	
.LABEL $label$13
	$0 = $4
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$12 }
	$0 = *(($8 + [64]))
	goto $label$10 
	
.LABEL $label$11
	$0 = $9
	
.LABEL $label$10
	*($10) = $9
	CALL $9($0)
	
.LABEL $label$9
	CALL $9($8)
	
.LABEL $label$8
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$7 }
	$0 = *(($2 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $5
	
.LABEL $label$5
	*($6) = $5
	CALL $9($0)
	
.LABEL $label$4
	$global$0 = ($2 + [48])
}

void .FUNC $109 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [76]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [48]) = [0]
	*($1 + [8]) = (*(*(*($3) + [4]) + [16]) + [1])
	$6 = *($1)
	*($1 + [52]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [12234])
	
.LABEL $label$3
	$7 = ($1 + [52])
	$8 = ($1 + [48])
	$9 = ($1 + [8])
	$10 = ($1 + [64])
	$12 = *($1 + [64])
	$11 = *(($1 + [68]))
	$13 = (CASTING uint_64)(uint_32 int_32(($11 - $12) >> [6]))
	$3 = [57]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$5 }
	
.LOOP $label$6:
	$14 = *($12 + [16])
	$14 = ( *(($12 + [20])) ? uint_32($14 >> [1]) : ($14 & [1]) )
	$3 = (($14 + $3) + [48])
	$13 = (CASTING uint_64)(uint_32 $14)
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$13 = (uint_64)$13 >> (uint_64)(int_64)7
	if ( ((int_64)$13) != (int_64)0) ){ goto $label$7 }
	$12 = ($12 + [64])
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ($3 <= [513]) ){ goto $label$9 }
	$12 = CALL $1($3)
	goto $label$8 
	
.LABEL $label$9
	$12 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $12
	
.LABEL $label$8
	*($5 + [4]) = $12
	*($5) = $12
	*($5 + [8]) = ($12 + $3)
	*($5 + [16]) = $5
	*($5 + [28]) = $9
	*($5 + [40]) = $8
	*($5 + [44]) = $7
	*($5 + [56]) = $10
	*($5 + [24]) = $1
	*($5 + [32]) = ($1 + [16])
	*($5 + [36]) = ($1 + [32])
	*($5 + [48]) = ($1 + [56])
	*($5 + [52]) = ($1 + [60])
	CALL $313(($5 + [24]), ($5 + [16]))
	CALL db_update_i64(*($1 + [80]), $2, $12, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$12 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $2($12)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	
.LABEL $label$11
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [64])
	return 
	
.LABEL $label$10
	$global$0 = ($5 + [64])
}

void .FUNC $108 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [96])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = [0]
	*((($2 + [48]) + [32])) = [0]
	*($2 + [64]) = (int_64)-1
	*($2 + [72]) = (int_64)0
	$4 = *($0)
	*($2 + [48]) = $4
	*($2 + [56]) = $4
	$5 = [0]
	$6 = CALL db_find_i64($4, $4, (int_64)3940451327872598016, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $85(($2 + [48]), $6)
	if ( ((int_32)*($5 + [76]) == (int_32)($2 + [48])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	*((($2 + [8]) + [32])) = [0]
	*($2 + [24]) = (int_64)-1
	$4 = *($0)
	*($2 + [8]) = $4
	*($2 + [16]) = $4
	*($2 + [32]) = (int_64)0
	$6 = CALL db_lowerbound_i64($4, $4, (int_64)3940451319824052736, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $86(($2 + [8]), $6)
	
.LABEL $label$2
	*($2 + [4]) = $3
	*($2) = ($2 + [8])
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [10364])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [10392])
	CALL eosio_assert(((int_32)*($5 + [48]) == (int_32)[1]), [10344])
	$4 = *($0)
	*($2 + [88]) = $2
	if ( $5 ){ goto $label$3 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$3
	CALL $109(($2 + [48]), $5, $4, ($2 + [88]))
	$4 = *($0)
	$0 = *($2 + [4])
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $110(($2 + [8]), $0, $4)
	if ( ($5 == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [12102])
	CALL $110(($2 + [8]), $0, $4)
	if ( $5 ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [12513])
	
.LABEL $label$4
	$5 = CALL db_next_i64(*($5 + [80]), ($2 + [88]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	CALL $85(($2 + [48]), $5)
	
.LABEL $label$7
	$3 = *($2 + [32])
	if ( ($3 == 0) ){ goto $label$8 }
	$6 = ($2 + [36])
	$5 = *($6)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = ($5 + [-24])
	$0 = *($5)
	*($5) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	CALL $9($0)
	
.LABEL $label$12
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$11 }
	$5 = *(($2 + [32]))
	goto $label$9 
	
.LABEL $label$10
	$5 = $3
	
.LABEL $label$9
	*($6) = $3
	CALL $9($5)
	
.LABEL $label$8
	$7 = *($2 + [72])
	if ( ($7 == 0) ){ goto $label$13 }
	$8 = ($2 + [76])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$17 }
	$3 = *($9 + [64])
	if ( ($3 == 0) ){ goto $label$18 }
	$10 = ($9 + [68])
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$20 }
	
.LOOP $label$21:
	$0 = ($5 + [-64])
	if ( ((*(($5 + [-48])) & [1]) == 0) ){ goto $label$22 }
	CALL $9(*(($5 + [-40])))
	
.LABEL $label$22
	$5 = $0
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$21 }
	$5 = *(($9 + [64]))
	goto $label$19 
	
.LABEL $label$20
	$5 = $3
	
.LABEL $label$19
	*($10) = $3
	CALL $9($5)
	
.LABEL $label$18
	CALL $9($9)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	$5 = *(($2 + [72]))
	goto $label$14 
	
.LABEL $label$15
	$5 = $7
	
.LABEL $label$14
	*($8) = $7
	CALL $9($5)
	
.LABEL $label$13
	$global$0 = ($2 + [96])
}

int_32 .FUNC $212 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [272])
	$global$0 = $3
	*(($4 = $3) + [216]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [184]) + [24])) = [0]
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $5)
	*($4 + [256]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $234(($4 + [16]), ($4 + [256]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [224]) + [8])) = $3
	*(($6 = (($4 + [240]) + [8]))) = $3
	$7 = *($4)
	*($4 + [240]) = $7
	*($4 + [224]) = $7
	$3 = *($6)
	*((($4 + [256]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [240])
	*($4 + [32]) = $1
	*($4 + [256]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($3 = ($4 + [72]))) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($6 = ($4 + [112]))) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($8 = ($4 + [152]))) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [260]) = ($4 + [216])
	*($4 + [256]) = ($4 + [16])
	CALL $235(($4 + [256]), ($4 + [184]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $217($8)
	CALL $218($6)
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($4 + [76])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($4 + [72]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($2)
	
.LABEL $label$5
	if ( ((*($4 + [200]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($4 + [208])))
	
.LABEL $label$10
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $318 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [12073])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $301(*($1), *($0 + [12]))
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [12073])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$4 = *($0 + [28])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [12073])
	$1 = *(($0 + [4]))
	
.LABEL $label$8
	CALL memcpy($1, $4, [4])
	*(($0 = ($0 + [4]))) = (*($0) + [4])
	$global$0 = ($2 + [16])
}

void .FUNC $231 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$6 = CALL $25(($2 + [16]), ($1 + [32]))
	$7 = *($1 + [48])
	$8 = *($1 + [44])
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($9 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$3 = CALL $25(($2 + [64]), $6)
	*(($2 + [8])) = *($9)
	*($2) = *($2 + [80])
	CALL void $0((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $3), (int_32 $8), (int_32 $7), (int_32 $1))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($6) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($3 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($6 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

void .FUNC $330 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$4 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy(($3 + [48]), $4, [32])
	*(($1 = ($1 + [4]))) = (*($1) + [32])
	$5 = (int_64)0
	$1 = [16]
	$6 = ($3 + [16])
	$4 = [0]
	$7 = (int_64)0
	
.LOOP $label$3:
	$8 = (($3 + [48]) + $4)
	if ( ($1 <= [2]) ){ goto $label$4 }
	$5 = ((int_64)$5 | (int_64)*($8))
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)(uint_64)$5 >> (uint_64)(int_64)56))
	$1 = ($1 + [-1])
	$5 = ((int_64)$5 << (int_64)8)
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [12697])
	
.LABEL $label$5
	*($6 + [8]) = $7
	*($6) = ((int_64)$5 | (int_64)*($8))
	$1 = [16]
	$6 = ($6 + [16])
	$5 = (int_64)0
	$7 = (int_64)0
	$4 = ($4 + [1])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$1 == (int_32)[16]) ){ goto $label$6 }
	if ( ($1 <= [2]) ){ goto $label$7 }
	CALL __ashlti3($3, $5, $7, (($1 << [3]) + [-8]))
	$7 = *(($3 + [8]))
	$5 = *($3)
	
.LABEL $label$7
	*($6) = $5
	*($6 + [8]) = $7
	
.LABEL $label$6
	*($0) = *($3 + [16])
	*(($0 + [8])) = *($3 + [24])
	*(($0 + [24])) = *((($3 + [16]) + [24]))
	*(($0 + [16])) = *((($3 + [16]) + [16]))
	$global$0 = ($3 + [80])
}

void .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($6, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [12692])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*($6 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$8
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[3]) ){ goto $label$9 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($3, $5, [4])
	*(($4 = ($4 + [4]))) = (*($4) + [4])
	$3 = *($0 + [28])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [12692])
	$5 = *(($4 + [4]))
	
.LABEL $label$10
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $320(*($1), *($0 + [32]))
	CALL $320(*($1), *($0 + [36]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $219 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $244($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $29($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $29($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $24($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $38 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $40($1, $0, [8616])
	CALL $41()
	(unreachable)
}

void .FUNC $39 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $40($1, $0, [8563])
	CALL $42()
	(unreachable)
}

void .FUNC $36 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = CALL $15($1)
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$6 = (($5 + [16]) & [-16])
	$5 = CALL $7($6)
	*($0) = ($6 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, $1, $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$3 = ($2 + [1])
	$5 = (*($2) & [1])
	$2 = *($2 + [8])
	$6 = *($0)
	$7 = ($6 & [1])
	if ( $7 ){ goto $label$9 }
	$1 = [10]
	$3 = ( $2 ? $3 : $5 )
	$2 = uint_32($6 >> [1])
	if ( (([10] - $2) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$3 = ( $2 ? $3 : $5 )
	$2 = *(($0 + [4]))
	$1 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($1 - $2) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $28($0, $1, (($2 + $4) - $1), $2, $2, [0], $4, $3)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = ( *(($0 + [8])) ? ($0 + [1]) : $7 )
	CALL memcpy(($5 + $2), $3, $4)
	$2 = ($2 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $2
	*(($5 + $2)) = [0]
	(unreachable)
}

int_32 .FUNC $37 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $15([8545])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [8545], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $4())
	*(CALL $4()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$0 = CALL $23($4, ($3 + [12]), $2)
	$5 = CALL $4()
	$2 = *($5)
	*($5) = $6
	if ( ((int_32)$2 == (int_32)[34]) ){ goto $label$2 }
	$5 = *($3 + [12])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($5 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $38($3)
	
.LABEL $label$1
	CALL $39($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $16(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

int_32 .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $17(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $32 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $28($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $33 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = ($2 & [1])
	if ( $3 ){ goto $label$3 }
	if ( ((uint_32)uint_32($2 >> [1]) > (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)*($0 + [4]) <= (uint_32)$1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $3 ){ goto $label$4 }
	return (($0 + [1]) + $1)
	
.LABEL $label$4
	return (*($0 + [8]) + $1)
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = ($2 & [1])
	if ( $3 ){ goto $label$3 }
	if ( ((uint_32)uint_32($2 >> [1]) > (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((uint_32)*($0 + [4]) <= (uint_32)$1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $3 ){ goto $label$4 }
	return (($0 + [1]) + $1)
	
.LABEL $label$4
	return (*($0 + [8]) + $1)
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $215 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$3 = ($global$0 - [288])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = [0]
	*($4 + [212]) = [0]
	*($4 + [216]) = (int_64)0
	*($4 + [224]) = [0]
	*($4 + [232]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	*($4 + [272]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $238(($4 + [24]), ($4 + [272]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [240]) + [8])) = $3
	*(($8 = (($4 + [256]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [256]) = $9
	*($4 + [240]) = $9
	$3 = *($8)
	*((($4 + [272]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [256])
	*($4 + [40]) = $1
	*($4 + [272]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [232])
	$8 = *($4 + [224])
	$1 = *($4 + [216])
	$10 = *($4 + [212])
	$11 = *($4 + [208])
	$9 = *($4 + [200])
	$12 = *($4 + [192])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $12), (int_64 $9), (int_64 $11), (int_32 ($10 & [65535])), (int_32 $1), (int_64 ($8 & [255])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [160]))
	CALL $218(($4 + [120]))
	$5 = *(($4 + [80]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [84])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [80]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [288])
	return [1]
}

int_32 .FUNC $214 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [304])
	$global$0 = $3
	*(($4 = $3) + [248]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [192]) + [24])) = (int_64)0
	*((($4 + [192]) + [40])) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [192]) = (int_64)0
	*($4 + [208]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = [0]
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $5)
	*($4 + [288]) = ($4 + [176])
	*($4 + [24]) = ($4 + [192])
	CALL $230(($4 + [24]), ($4 + [288]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [256]) + [8])) = $3
	*(($6 = (($4 + [272]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [272]) = $7
	*($4 + [256]) = $7
	$3 = *($6)
	*((($4 + [288]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [272])
	*($4 + [40]) = $1
	*($4 + [288]) = $1
	*((($4 + [24]) + [40])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($3 = ($4 + [80]))) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($6 = ($4 + [120]))) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($8 = ($4 + [160]))) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [292]) = ($4 + [248])
	*($4 + [288]) = ($4 + [24])
	CALL $231(($4 + [288]), ($4 + [192]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $217($8)
	CALL $218($6)
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($4 + [84])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($4 + [80]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($2)
	
.LABEL $label$5
	if ( ((*($4 + [224]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($4 + [232])))
	
.LABEL $label$10
	$global$0 = ($4 + [304])
	return [1]
}

int_32 .FUNC $217 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [40])
	if ( ($4 == 0) ){ goto $label$6 }
	$5 = ($3 + [44])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( ((*(($6 + [-28])) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($6 + [-20])))
	
.LABEL $label$10
	$7 = ($6 + [-64])
	if ( ((*(($6 + [-40])) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($6 + [-32])))
	
.LABEL $label$11
	$6 = $7
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	$6 = *(($3 + [40]))
	goto $label$7 
	
.LABEL $label$8
	$6 = $4
	
.LABEL $label$7
	*($5) = $4
	CALL $9($6)
	
.LABEL $label$6
	CALL $9($3)
	
.LABEL $label$5
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$4 }
	$6 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$6 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL $9($6)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $216 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [232]))) = (int_64)0
	*(($8 = ($4 + [248]))) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [272]) = [0]
	*($4 + [280]) = (int_64)0
	*($4 + [204]) = $2
	*($4 + [200]) = $2
	*($4 + [208]) = ($2 + $7)
	*($4 + [368]) = ($4 + [200])
	*($4 + [48]) = ($4 + [216])
	CALL $232(($4 + [48]), ($4 + [368]))
	*(($9 = (($4 + [32]) + [8]))) = *($4 + [208])
	*($4 + [32]) = *($4 + [200])
	$9 = *($9)
	*(($10 = (($4 + [336]) + [8]))) = $9
	*(($11 = (($4 + [352]) + [8]))) = $9
	$12 = *($4 + [32])
	*($4 + [352]) = $12
	*($4 + [336]) = $12
	$9 = *($11)
	*((($4 + [368]) + [8])) = $9
	*(($4 + [72])) = $9
	*($4 + [48]) = $0
	*($4 + [56]) = $1
	$1 = *($4 + [352])
	*($4 + [64]) = $1
	*($4 + [368]) = $1
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*($4 + [160]) = $0
	*(($9 = (($4 + [304]) + [8]))) = *($3)
	*(($3 = (($4 + [288]) + [8]))) = *($8)
	*($4 + [304]) = *($4 + [224])
	*($4 + [288]) = *($4 + [240])
	$0 = *($4 + [216])
	$1 = *($4 + [256])
	$12 = *($4 + [264])
	$8 = *($4 + [272])
	$13 = *($4 + [280])
	*($10) = *($3)
	*((($4 + [320]) + [8])) = *($9)
	*($4 + [336]) = *($4 + [288])
	*($4 + [320]) = *($4 + [304])
	$3 = (($4 + [48]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$14 = *((($4 + [320]) + [8]))
	*((($4 + [368]) + [8])) = $14
	$15 = *((($4 + [336]) + [8]))
	*((($4 + [352]) + [8])) = $15
	*((($4 + [16]) + [8])) = $14
	*(($4 + [8])) = $15
	$14 = *($4 + [320])
	*($4 + [368]) = $14
	$15 = *($4 + [336])
	*($4 + [352]) = $15
	*($4 + [16]) = $14
	*($4) = $15
	CALL void $3((int_32 $0), (int_64 ($4 + [16])), (int_32 $4), (int_32 $1), (int_64 $12), (int_64 $8), (int_32 $13), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [184]))
	CALL $218(($4 + [144]))
	$5 = *(($4 + [104]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [108])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [104]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [384])
	return [1]
}

int_32 .FUNC $211 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [152]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($4 + [152]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [152])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $217(($4 + [136]))
	CALL $218(($4 + [96]))
	$5 = *(($4 + [56]))
	if ( ($5 == 0) ){ goto $label$8 }
	$6 = ($4 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $9($7)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($4 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $5
	
.LABEL $label$9
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$8
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $210 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [208]) + [24]))) = (int_64)0
	*($4 + [216]) = [0]
	*($4 + [208]) = (int_64)0
	*($4 + [224]) = (int_64)0
	*($4 + [240]) = (int_64)0
	*($4 + [248]) = [0]
	*($4 + [196]) = $2
	*($4 + [192]) = $2
	*($4 + [200]) = ($2 + $7)
	*($4 + [288]) = ($4 + [192])
	*($4 + [40]) = ($4 + [208])
	CALL $225(($4 + [40]), ($4 + [288]))
	*(($9 = (($4 + [24]) + [8]))) = *($4 + [200])
	*($4 + [24]) = *($4 + [192])
	$10 = *($9)
	*(($3 = (($4 + [256]) + [8]))) = $10
	*(($9 = (($4 + [272]) + [8]))) = $10
	$11 = *($4 + [24])
	*($4 + [272]) = $11
	*($4 + [256]) = $11
	$10 = *($9)
	*((($4 + [288]) + [8])) = $10
	*((($4 + [40]) + [24])) = $10
	*($4 + [40]) = $0
	*($4 + [48]) = $1
	$1 = *($4 + [272])
	*($4 + [56]) = $1
	*($4 + [288]) = $1
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*($4 + [152]) = $0
	*($3) = *($8)
	*($4 + [256]) = *($4 + [224])
	$8 = *($4 + [216])
	$0 = *($4 + [208])
	$1 = *($4 + [240])
	$10 = *($4 + [248])
	*($9) = *($3)
	*($4 + [272]) = *($4 + [256])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [272]) + [8]))
	*((($4 + [288]) + [8])) = $11
	*((($4 + [8]) + [8])) = $11
	$11 = *($4 + [272])
	*($4 + [8]) = $11
	*($4 + [288]) = $11
	CALL void $3((int_32 $0), (int_64 $8), (int_32 ($4 + [8])), (int_32 $1), (int_64 $10), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [176]))
	CALL $218(($4 + [136]))
	$5 = *(($4 + [96]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [100])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [96]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [304])
	return [1]
}

int_32 .FUNC $198 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [152]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$5
	CALL memcpy(($4 + [152]), $2, [8])
	*(($4 + [20])) = ($2 + [8])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *($4 + [152])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $217(($4 + [136]))
	CALL $218(($4 + [96]))
	$5 = *(($4 + [56]))
	if ( ($5 == 0) ){ goto $label$8 }
	$6 = ($4 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$12 }
	CALL $9($7)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($4 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $5
	
.LABEL $label$9
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$8
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $199 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [200]) = [0]
	*($4 + [192]) = (int_64)0
	*($4 + [180]) = $2
	*($4 + [176]) = $2
	*($4 + [184]) = ($2 + $7)
	CALL $219(($4 + [176]), ($4 + [192]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [184])
	*($4 + [8]) = *($4 + [176])
	$3 = *($3)
	*((($4 + [208]) + [8])) = $3
	*(($8 = (($4 + [224]) + [8]))) = $3
	$9 = *($4 + [8])
	*($4 + [224]) = $9
	*($4 + [208]) = $9
	$3 = *($8)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$1 = *($4 + [224])
	*($4 + [40]) = $1
	*($4 + [240]) = $1
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$8 = CALL $25(($4 + [224]), ($4 + [192]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$5 = CALL $25(($4 + [240]), $8)
	CALL void $3((int_32 $5), (int_32 $6))
	if ( (*($4 + [240]) & [1]) ){ goto $label$9 }
	if ( (*($4 + [224]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [224]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $9(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	if ( ($7 <= [513]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [160]))
	CALL $218(($4 + [120]))
	$5 = *(($4 + [80]))
	if ( ($5 == 0) ){ goto $label$10 }
	$6 = ($4 + [84])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$12 }
	
.LOOP $label$13:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$14 }
	CALL $9($7)
	
.LABEL $label$14
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$13 }
	$2 = *(($4 + [80]))
	goto $label$11 
	
.LABEL $label$12
	$2 = $5
	
.LABEL $label$11
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$10
	if ( ((*($4 + [192]) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($4 + [200])))
	
.LABEL $label$15
	$global$0 = ($4 + [256])
	return [1]
}

int_32 .FUNC $196 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [152]) = [0]
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [12692])
	
.LABEL $label$4
	CALL memcpy(($4 + [152]), $2, [4])
	*(($4 + [20])) = ($2 + [4])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	$3 = ($4 + int_32($5 >> [1]))
	$8 = *($4 + [152])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $8), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $2($2)
	
.LABEL $label$6
	CALL $217(($4 + [136]))
	CALL $218(($4 + [96]))
	$5 = *(($4 + [56]))
	if ( ($5 == 0) ){ goto $label$7 }
	$6 = ($4 + [60])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	CALL $9($7)
	
.LABEL $label$11
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($4 + [56]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $5
	
.LABEL $label$8
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$7
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $197 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = [0]
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $7)
	*($4 + [240]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $236(($4 + [16]), ($4 + [240]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [208]) + [8])) = $3
	*(($8 = (($4 + [224]) + [8]))) = $3
	$9 = *($4)
	*($4 + [224]) = $9
	*($4 + [208]) = $9
	$3 = *($8)
	*((($4 + [240]) + [8])) = $3
	*(($4 + [40])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [224])
	*($4 + [32]) = $1
	*($4 + [240]) = $1
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	$8 = *($4 + [200])
	$0 = *($4 + [192])
	$1 = *($4 + [184])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($8 & [65535])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [152]))
	CALL $218(($4 + [112]))
	$5 = *(($4 + [72]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [76])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [72]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [256])
	return [1]
}

int_32 .FUNC $194 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [160])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [28])) = $2
	*(($4 + [32])) = ($2 + $7)
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $217(($4 + [144]))
	CALL $218(($4 + [104]))
	$5 = *(($4 + [64]))
	if ( ($5 == 0) ){ goto $label$6 }
	$6 = ($4 + [68])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$10 }
	CALL $9($7)
	
.LABEL $label$10
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($4 + [64]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $5
	
.LABEL $label$7
	*($6) = $5
	CALL $9($2)
	
.LABEL $label$6
	$global$0 = ($4 + [160])
	return [1]
}

int_32 .FUNC $195 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [288])
	$global$0 = $3
	*(($4 = $3) + [232]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [184]) + [24])) = (int_64)0
	*((($4 + [184]) + [40])) = [0]
	*($4 + [192]) = (int_64)0
	*($4 + [184]) = (int_64)0
	*($4 + [200]) = (int_64)0
	*($4 + [216]) = (int_64)0
	*($4 + [172]) = $2
	*($4 + [168]) = $2
	*($4 + [176]) = ($2 + $5)
	*($4 + [272]) = ($4 + [168])
	*($4 + [16]) = ($4 + [184])
	CALL $241(($4 + [16]), ($4 + [272]))
	*(($3 = ($4 + [8]))) = *($4 + [176])
	*($4) = *($4 + [168])
	$3 = *($3)
	*((($4 + [240]) + [8])) = $3
	*(($6 = (($4 + [256]) + [8]))) = $3
	$7 = *($4)
	*($4 + [256]) = $7
	*($4 + [240]) = $7
	$3 = *($6)
	*((($4 + [272]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$1 = *($4 + [256])
	*($4 + [32]) = $1
	*($4 + [272]) = $1
	*((($4 + [16]) + [40])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($3 = ($4 + [72]))) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($6 = ($4 + [112]))) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($8 = ($4 + [152]))) = (int_64)0
	*(($4 + [160])) = [0]
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [276]) = ($4 + [232])
	*($4 + [272]) = ($4 + [16])
	CALL $242(($4 + [272]), ($4 + [184]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $217($8)
	CALL $218($6)
	$3 = *($3)
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = ($4 + [76])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$9 }
	CALL $9($5)
	
.LABEL $label$9
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($4 + [72]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $3
	
.LABEL $label$6
	*($6) = $3
	CALL $9($2)
	
.LABEL $label$5
	if ( ((*($4 + [216]) & [1]) == 0) ){ goto $label$10 }
	CALL $9(*(($4 + [224])))
	
.LABEL $label$10
	$global$0 = ($4 + [288])
	return [1]
}

void .FUNC $192 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [12137])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [12183])
	
.LABEL $label$2
	*($1 + [32]) = ((int_64)*($1 + [32]) + (int_64)1)
	$5 = *($1)
	$6 = $3
	$3 = ($6 + [-48])
	$global$0 = $3
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($6 + [-8])
	*($4 + [16]) = $4
	*($4 + [28]) = ($1 + [8])
	*($4 + [24]) = $1
	*($4 + [32]) = ($1 + [16])
	*($4 + [36]) = ($1 + [24])
	*($4 + [40]) = ($1 + [32])
	CALL $137(($4 + [24]), ($4 + [16]))
	CALL db_update_i64(*($1 + [44]), $2, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = ($4 + [48])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [784])
	$global$0 = $3
	CALL $0()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$47 }
	if ( ((int_64)$2 <= (int_64)-3717497383898578945) ){ goto $label$46 }
	if ( ((int_64)$2 <= (int_64)3932390840980094975) ){ goto $label$45 }
	if ( ((int_64)$2 > (int_64)3942113858902032383) ){ goto $label$43 }
	if ( ((int_64)$2 > (int_64)3934009904496377855) ){ goto $label$39 }
	if ( ((int_64)$2 == (int_64)3932390840980094976) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)3932391098576535552) ){ goto $label$30 }
	if ( ((int_64)$2 != (int_64)3932391098576928768) ){ goto $label$2 }
	*($3 + [684]) = [0]
	*($3 + [680]) = [1]
	*($3 + [96]) = *($3 + [680])
	CALL $194($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$47
	*($3 + [408]) = [9377]
	*($3 + [412]) = CALL $15([9377])
	*($3 + [376]) = *($3 + [408])
	CALL $60(($3 + [416]), ($3 + [376]))
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$48 }
	*($3 + [392]) = [9389]
	*($3 + [396]) = CALL $15([9389])
	*($3 + [368]) = *($3 + [392])
	CALL $60(($3 + [400]), ($3 + [368]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$48 }
	*($3 + [388]) = [0]
	*($3 + [384]) = [2]
	*($3 + [360]) = *($3 + [384])
	CALL $195($0, (int_64)6138663591592764928, ($3 + [360]))
	goto $label$1 
	
.LABEL $label$48
	CALL prints([11687])
	goto $label$1 
	
.LABEL $label$46
	if ( ((int_64)$2 > (int_64)-3877982573858652161) ){ goto $label$44 }
	if ( ((int_64)$2 <= (int_64)-5588777323309852673) ){ goto $label$42 }
	if ( ((int_64)$2 > (int_64)-4416999216727982081) ){ goto $label$38 }
	if ( ((int_64)$2 == (int_64)-5588777323309852672) ){ goto $label$29 }
	if ( ((int_64)$2 == (int_64)-4812882902415048704) ){ goto $label$28 }
	if ( ((int_64)$2 != (int_64)-4417031915819761664) ){ goto $label$2 }
	*($3 + [748]) = [0]
	*($3 + [744]) = [3]
	*($3 + [32]) = *($3 + [744])
	CALL $196($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$45
	if ( ((int_64)$2 <= (int_64)-3588687313542053889) ){ goto $label$41 }
	if ( ((int_64)$2 > (int_64)3931269337410863103) ){ goto $label$37 }
	if ( ((int_64)$2 == (int_64)-3588687313542053888) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)-3555744531766837248) ){ goto $label$26 }
	if ( ((int_64)$2 != (int_64)-3522593554712494080) ){ goto $label$2 }
	*($3 + [508]) = [0]
	*($3 + [504]) = [4]
	*($3 + [272]) = *($3 + [504])
	CALL $197($1, $1, ($3 + [272]))
	goto $label$1 
	
.LABEL $label$44
	if ( ((int_64)$2 <= (int_64)-3861375137792770049) ){ goto $label$40 }
	if ( ((int_64)$2 > (int_64)-3844212269648969729) ){ goto $label$36 }
	if ( ((int_64)$2 == (int_64)-3861375137792770048) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-3844222868728578048) ){ goto $label$24 }
	if ( ((int_64)$2 != (int_64)-3844214079614877696) ){ goto $label$2 }
	*($3 + [572]) = [0]
	*($3 + [568]) = [5]
	*($3 + [208]) = *($3 + [568])
	CALL $198($1, $1, ($3 + [208]))
	goto $label$1 
	
.LABEL $label$43
	if ( ((int_64)$2 > (int_64)5031766152489992191) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)3942113858902032384) ){ goto $label$23 }
	if ( ((int_64)$2 == (int_64)4229753268491780096) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)4733523361999618048) ){ goto $label$2 }
	*($3 + [764]) = [0]
	*($3 + [760]) = [6]
	*($3 + [16]) = *($3 + [760])
	CALL $199($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$42
	if ( ((int_64)$2 <= (int_64)-5594254245961640577) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-5594254245961640576) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-5590533583660908544) ){ goto $label$20 }
	if ( ((int_64)$2 != (int_64)-5589340618337812480) ){ goto $label$2 }
	*($3 + [636]) = [0]
	*($3 + [632]) = [7]
	*($3 + [144]) = *($3 + [632])
	CALL $200($1, $1, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$41
	if ( ((int_64)$2 <= (int_64)-3617256732474485761) ){ goto $label$33 }
	if ( ((int_64)$2 == (int_64)-3617256732474485760) ){ goto $label$19 }
	if ( ((int_64)$2 == (int_64)-3596795743282659328) ){ goto $label$18 }
	if ( ((int_64)$2 != (int_64)-3588687322125172736) ){ goto $label$2 }
	*($3 + [548]) = [0]
	*($3 + [544]) = [8]
	*($3 + [232]) = *($3 + [544])
	CALL $198($1, $1, ($3 + [232]))
	goto $label$1 
	
.LABEL $label$40
	if ( ((int_64)$2 <= (int_64)-3867155275911790593) ){ goto $label$32 }
	if ( ((int_64)$2 == (int_64)-3867155275911790592) ){ goto $label$17 }
	if ( ((int_64)$2 == (int_64)-3867154110578425856) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)-3867153011004407808) ){ goto $label$2 }
	*($3 + [476]) = [0]
	*($3 + [472]) = [9]
	*($3 + [304]) = *($3 + [472])
	CALL $198($1, $1, ($3 + [304]))
	goto $label$1 
	
.LABEL $label$39
	if ( ((int_64)$2 == (int_64)3934009904496377856) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)3941093185898714496) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)3941100841046552576) ){ goto $label$2 }
	*($3 + [692]) = [0]
	*($3 + [688]) = [10]
	*($3 + [88]) = *($3 + [688])
	CALL $198($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$38
	if ( ((int_64)$2 == (int_64)-4416999216727982080) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-3903055172372267008) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)-3881174719180832768) ){ goto $label$2 }
	*($3 + [492]) = [0]
	*($3 + [488]) = [11]
	*($3 + [288]) = *($3 + [488])
	CALL $201($1, $1, ($3 + [288]))
	goto $label$1 
	
.LABEL $label$37
	if ( ((int_64)$2 == (int_64)3931269337410863104) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)3931269493493334016) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)3932052709212760352) ){ goto $label$2 }
	*($3 + [716]) = [0]
	*($3 + [712]) = [12]
	*($3 + [64]) = *($3 + [712])
	CALL $202($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$36
	if ( ((int_64)$2 == (int_64)-3844212269648969728) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)-3823937213465362432) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)-3717506352650649600) ){ goto $label$2 }
	*($3 + [436]) = [0]
	*($3 + [432]) = [13]
	*($3 + [344]) = *($3 + [432])
	CALL $203($1, $1, ($3 + [344]))
	goto $label$1 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)5031766152489992192) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)5039971494977115136) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)6112328355950886912) ){ goto $label$2 }
	*($3 + [780]) = [0]
	*($3 + [776]) = [14]
	*($3) = *($3 + [776])
	CALL $198($1, $1, $3)
	goto $label$1 
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)-5598347318022635520) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-5597225909471543296) ){ goto $label$2 }
	*($3 + [620]) = [0]
	*($3 + [616]) = [15]
	*($3 + [160]) = *($3 + [616])
	CALL $194($1, $1, ($3 + [160]))
	goto $label$1 
	
.LABEL $label$33
	if ( ((int_64)$2 == (int_64)-3717497383898578944) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-3717293387234148352) ){ goto $label$2 }
	*($3 + [500]) = [0]
	*($3 + [496]) = [16]
	*($3 + [280]) = *($3 + [496])
	CALL $204($1, $1, ($3 + [280]))
	goto $label$1 
	
.LABEL $label$32
	if ( ((int_64)$2 == (int_64)-3877982573858652160) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-3877746156695977984) ){ goto $label$2 }
	*($3 + [556]) = [0]
	*($3 + [552]) = [17]
	*($3 + [224]) = *($3 + [552])
	CALL $198($1, $1, ($3 + [224]))
	goto $label$1 
	
.LABEL $label$31
	*($3 + [676]) = [0]
	*($3 + [672]) = [18]
	*($3 + [104]) = *($3 + [672])
	CALL $194($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$30
	*($3 + [708]) = [0]
	*($3 + [704]) = [19]
	*($3 + [72]) = *($3 + [704])
	CALL $198($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$29
	*($3 + [604]) = [0]
	*($3 + [600]) = [20]
	*($3 + [176]) = *($3 + [600])
	CALL $205($1, $1, ($3 + [176]))
	goto $label$1 
	
.LABEL $label$28
	*($3 + [756]) = [0]
	*($3 + [752]) = [21]
	*($3 + [24]) = *($3 + [752])
	CALL $206($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$27
	*($3 + [580]) = [0]
	*($3 + [576]) = [22]
	*($3 + [200]) = *($3 + [576])
	CALL $198($1, $1, ($3 + [200]))
	goto $label$1 
	
.LABEL $label$26
	*($3 + [532]) = [0]
	*($3 + [528]) = [23]
	*($3 + [248]) = *($3 + [528])
	CALL $204($1, $1, ($3 + [248]))
	goto $label$1 
	
.LABEL $label$25
	*($3 + [524]) = [0]
	*($3 + [520]) = [24]
	*($3 + [256]) = *($3 + [520])
	CALL $201($1, $1, ($3 + [256]))
	goto $label$1 
	
.LABEL $label$24
	*($3 + [540]) = [0]
	*($3 + [536]) = [25]
	*($3 + [240]) = *($3 + [536])
	CALL $198($1, $1, ($3 + [240]))
	goto $label$1 
	
.LABEL $label$23
	*($3 + [644]) = [0]
	*($3 + [640]) = [26]
	*($3 + [136]) = *($3 + [640])
	CALL $207($1, $1, ($3 + [136]))
	goto $label$1 
	
.LABEL $label$22
	*($3 + [740]) = [0]
	*($3 + [736]) = [27]
	*($3 + [40]) = *($3 + [736])
	CALL $208($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$21
	*($3 + [612]) = [0]
	*($3 + [608]) = [28]
	*($3 + [168]) = *($3 + [608])
	CALL $194($1, $1, ($3 + [168]))
	goto $label$1 
	
.LABEL $label$20
	*($3 + [628]) = [0]
	*($3 + [624]) = [29]
	*($3 + [152]) = *($3 + [624])
	CALL $198($1, $1, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$19
	*($3 + [468]) = [0]
	*($3 + [464]) = [30]
	*($3 + [312]) = *($3 + [464])
	CALL $209($1, $1, ($3 + [312]))
	goto $label$1 
	
.LABEL $label$18
	*($3 + [428]) = [0]
	*($3 + [424]) = [31]
	*($3 + [352]) = *($3 + [424])
	CALL $194($1, $1, ($3 + [352]))
	goto $label$1 
	
.LABEL $label$17
	*($3 + [460]) = [0]
	*($3 + [456]) = [32]
	*($3 + [320]) = *($3 + [456])
	CALL $198($1, $1, ($3 + [320]))
	goto $label$1 
	
.LABEL $label$16
	*($3 + [452]) = [0]
	*($3 + [448]) = [33]
	*($3 + [328]) = *($3 + [448])
	CALL $198($1, $1, ($3 + [328]))
	goto $label$1 
	
.LABEL $label$15
	*($3 + [668]) = [0]
	*($3 + [664]) = [34]
	*($3 + [112]) = *($3 + [664])
	CALL $210($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$14
	*($3 + [700]) = [0]
	*($3 + [696]) = [35]
	*($3 + [80]) = *($3 + [696])
	CALL $198($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$13
	*($3 + [724]) = [0]
	*($3 + [720]) = [36]
	*($3 + [56]) = *($3 + [720])
	CALL $211($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$12
	*($3 + [516]) = [0]
	*($3 + [512]) = [37]
	*($3 + [264]) = *($3 + [512])
	CALL $212($1, $1, ($3 + [264]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [652]) = [0]
	*($3 + [648]) = [38]
	*($3 + [128]) = *($3 + [648])
	CALL $198($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [660]) = [0]
	*($3 + [656]) = [39]
	*($3 + [120]) = *($3 + [656])
	CALL $213($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [564]) = [0]
	*($3 + [560]) = [40]
	*($3 + [216]) = *($3 + [560])
	CALL $198($1, $1, ($3 + [216]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [484]) = [0]
	*($3 + [480]) = [41]
	*($3 + [296]) = *($3 + [480])
	CALL $204($1, $1, ($3 + [296]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [772]) = [0]
	*($3 + [768]) = [42]
	*($3 + [8]) = *($3 + [768])
	CALL $211($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [732]) = [0]
	*($3 + [728]) = [43]
	*($3 + [48]) = *($3 + [728])
	CALL $194($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [596]) = [0]
	*($3 + [592]) = [44]
	*($3 + [184]) = *($3 + [592])
	CALL $214($1, $1, ($3 + [184]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [444]) = [0]
	*($3 + [440]) = [45]
	*($3 + [336]) = *($3 + [440])
	CALL $215($1, $1, ($3 + [336]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [588]) = [0]
	*($3 + [584]) = [46]
	*($3 + [192]) = *($3 + [584])
	CALL $216($1, $1, ($3 + [192]))
	goto $label$1 
	
.LABEL $label$2
	CALL prints([11687])
	
.LABEL $label$1
	CALL $45([0])
	$global$0 = ($3 + [784])
}

void .FUNC $190 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5, int_32 $6, int_64 $7)
{
	int_32 $8
	$8 = ($global$0 - [32])
	$global$0 = $8
	*($8 + [16]) = [10825]
	*($8 + [20]) = CALL $15([10825])
	*($8 + [8]) = *($8 + [16])
	CALL require_auth(*(CALL $60(($8 + [24]), ($8 + [8]))))
	$global$0 = ($8 + [32])
}

void .FUNC $191 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_64 $5, int_32 $6, int_64 $7, int_32 $8, int_64 $9)
{
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$10 = ($global$0 - [64])
	$global$0 = $10
	*($10 + [48]) = [10825]
	*($10 + [52]) = CALL $15([10825])
	*($10) = *($10 + [48])
	CALL require_auth(*(CALL $60(($10 + [56]), $10)))
	CALL require_recipient($2)
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	$2 = *($0)
	*($10 + [8]) = $2
	*($10 + [16]) = $2
	*($10 + [32]) = (int_64)0
	$11 = [0]
	$12 = CALL db_find_i64($2, $2, (int_64)-3659882349576847360, (int_64)0)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $91(($10 + [8]), $12)
	if ( ((int_32)*($11 + [40]) == (int_32)($10 + [8])) ){ goto $label$1 }
	CALL eosio_assert([0], [12293])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [9626])
	$2 = *($0)
	if ( $11 ){ goto $label$2 }
	CALL eosio_assert([0], [12102])
	
.LABEL $label$2
	CALL $192(($10 + [8]), $11, $2)
	$12 = *($10 + [32])
	if ( ($12 == 0) ){ goto $label$3 }
	$13 = ($10 + [36])
	$11 = *($13)
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$5 }
	
.LOOP $label$6:
	$11 = ($11 + [-24])
	$0 = *($11)
	*($11) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $9($0)
	
.LABEL $label$7
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$6 }
	$11 = *(($10 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$11 = $12
	
.LABEL $label$4
	*($13) = $12
	CALL $9($11)
	
.LABEL $label$3
	$global$0 = ($10 + [64])
}