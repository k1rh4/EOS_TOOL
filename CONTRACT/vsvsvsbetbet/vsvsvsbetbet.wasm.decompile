(data (i32.const 4) "\e0\81\00\00")
(data (i32.const 32) "offertype error\00")
(data (i32.const 48) "invalid symbol name\00")
(data (i32.const 80) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 144) "-\00")
(data (i32.const 160) "EOS without bet type\00")
(data (i32.const 192) "Bet type not found\00")
(data (i32.const 224) "Quantity must be positive number\00")
(data (i32.const 272) "Bet type must be positive number\00")
(data (i32.const 320) "Bet must be positive\00")
(data (i32.const 368) "attempt to add asset with different symbol\00")
(data (i32.const 416) "addition underflow\00")
(data (i32.const 448) "addition overflow\00")
(data (i32.const 480) "dfdiceroll\00")
(data (i32.const 496) "vsvsvsbetbet\00")
(data (i32.const 512) "openroll\00")
(data (i32.const 528) "eosio\00")
(data (i32.const 544) "onerror\00")
(data (i32.const 560) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 624) "eosio.token\00")
(data (i32.const 640) "vsvscontract\00")
(data (i32.const 656) "betdicetoken\00")
(data (i32.const 672) "bitpietokens\00")
(data (i32.const 688) "transfer\00")
(data (i32.const 704) "diceroll\00")
(data (i32.const 720) "dffruitroll\00")
(data (i32.const 736) "dfmarkroll\00")
(data (i32.const 752) "clear\00")
(data (i32.const 768) "clearall\00")
(data (i32.const 784) "maintain\00")
(data (i32.const 800) "unlockuser\00")
(data (i32.const 816) "intentsave\00")
(data (i32.const 832) "intentclear\00")
(data (i32.const 848) "senddividend\00")
(data (i32.const 864) "adddividend\00")
(data (i32.const 880) "actdraw\00")
(data (i32.const 896) "cleardivact\00")
(data (i32.const 912) "clearlog\00")
(data (i32.const 928) "deduction\00")
(data (i32.const 944) "drawreward\00")
(data (i32.const 960) "moddivact\00")
(data (i32.const 976) "altermain\00")
(data (i32.const 992) "altermark\00")
(data (i32.const 1008) "clearerror\00")
(data (i32.const 1024) "clearunopen\00")
(data (i32.const 1040) "inspect\00")
(data (i32.const 1056) "checkname\00")
(data (i32.const 1072) "read\00")
(data (i32.const 1088) "vsvsvsvipvip\00")
(data (i32.const 1104) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 1168) "cannot pass end iterator to modify\00")
(data (i32.const 1216) "object passed to modify is not in multi_index\00")
(data (i32.const 1264) "cannot modify objects in table of another contract\00")
(data (i32.const 1328) "attempt to subtract asset with different symbol\00")
(data (i32.const 1376) "subtraction underflow\00")
(data (i32.const 1408) "subtraction overflow\00")
(data (i32.const 1440) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1504) "write\00")
(data (i32.const 1520) "error reading iterator\00")
(data (i32.const 1552) "cannot pass end iterator to erase\00")
(data (i32.const 1600) "cannot increment end iterator\00")
(data (i32.const 1632) "object passed to erase is not in multi_index\00")
(data (i32.const 1680) "cannot erase objects in table of another contract\00")
(data (i32.const 1744) "attempt to remove object that was not in multi_index\00")
(data (i32.const 1808) "get\00")
(data (i32.const 1824) "We do not support this token currently\00")
(data (i32.const 1872) "Quantity must be positive\00")
(data (i32.const 1904) "timestamp is already exist\00")
(data (i32.const 1936) "cannot create objects in table of another contract\00")
(data (i32.const 2000) "multiplication overflow\00")
(data (i32.const 2032) "multiplication underflow\00")
(data (i32.const 2064) "\01\00\00\00\00\00\00\00\00\00\00\00\00\00 @\02\00\00\00\00\00\00\00\00\00\00\00\00\00 @\03\00\00\00\00\00\00\00\00\00\00\00\00\00 @\04\00\00\00\00\00\00\00\00\00\00\00\00\00 @\05\00\00\00\00\00\00\00\00\00\00\00\00\00 @\06\00\00\00\00\00\00\00\00\00\00\00\00\00 @\07\00\00\00\00\00\00\00\00\00\00\00\00\00 @\08\00\00\00\00\00\00\00\00\00\00\00\00\00 @\t\00\00\00\00\00\00\00\00\00\00\00\00\00 @\n\00\00\00\00\00\00\00\00\00\00\00\00\00 @\0b\00\00\00\00\00\00\00\9a\99\99\99\99\99\f9?\16\00\00\00\00\00\00\00\9a\99\99\99\99\99\f9?!\00\00\00\00\00\00\00\9a\99\99\99\99\99\f9?,\00\00\00\00\00\00\00\9a\99\99\99\99\99\f9?")
(data (i32.const 2288) "\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00.@\03\00\00\00\00\00\00\00\00\00\00\00\00\004@\04\00\00\00\00\00\00\00\00\00\00\00\00\004@\05\00\00\00\00\00\00\00\00\00\00\00\00\00.@\06\00\00\00\00\00\00\00\00\00\00\00\00\00(@\07\00\00\00\00\00\00\00\00\00\00\00\00\00$@\08\00\00\00\00\00\00\00\00\00\00\00\00\00 @")
(data (i32.const 2416) "dice\e6\b8\b8\e6\88\8f\e4\b8\8b\e6\b3\a8\e5\a4\b1\e8\b4\a5\e9\80\80\e8\bf\98\00")
(data (i32.const 2448) "dfdiceroll\00")
(data (i32.const 2464) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 2528) "cannot pass end iterator to modify\00")
(data (i32.const 2576) "active\00")
(data (i32.const 2592) "eosio.token\00")
(data (i32.const 2608) "transfer\00")
(data (i32.const 2624) "vsvscontract\00")
(data (i32.const 2640) "bitpietokens\00")
(data (i32.const 2656) "We do not support this token currently\00")
(data (i32.const 2704) "write\00")
(data (i32.const 2720) "cannot create objects in table of another contract\00")
(data (i32.const 2784) "object passed to modify is not in multi_index\00")
(data (i32.const 2832) "cannot modify objects in table of another contract\00")
(data (i32.const 2896) "updater cannot change primary key when modifying an object\00")
(data (i32.const 2960) "error reading iterator\00")
(data (i32.const 2992) "read\00")
(data (i32.const 3008) "Invalid name\00")
(data (i32.const 3024) "vsvsvsbetbet\00")
(data (i32.const 3040) "Invalid account\00")
(data (i32.const 3056) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 3120) "invalid symbol name\00")
(data (i32.const 3152) "get\00")
(data (i32.const 3168) "jsurgb234oq1\00")
(data (i32.const 3184) "qwer11223344\00")
(data (i32.const 3200) "gtf32t1od12j\00")
(data (i32.const 3216) "l4w43dmikvog\00")
(data (i32.const 3232) "xs3wrwnavn3z\00")
(data (i32.const 3248) "uhrowgyygyke\00")
(data (i32.const 3264) "wnze2qwdiyne\00")
(data (i32.const 3280) "xqlmzg4sem2a\00")
(data (i32.const 3296) "yihu2ir43cvq\00")
(data (i32.const 3312) "liuyunfeihua\00")
(data (i32.const 3328) "woshimmp1234\00")
(data (i32.const 3344) "asas123123ee\00")
(data (i32.const 3360) "z4faylw3so3f\00")
(data (i32.const 3376) "1\00")
(data (i32.const 3392) "0\00")
(data (i32.const 3408) "EOS\00")
(data (i32.const 3424) "VS\00")
(data (i32.const 3440) "EUSD\00")
(data (i32.const 3456) "cannot pass end iterator to erase\00")
(data (i32.const 3504) "cannot increment end iterator\00")
(data (i32.const 3536) "-\00")
(data (i32.const 3552) "Invalid token transfer\00")
(data (i32.const 3584) "Quantity must be positive\00")
(data (i32.const 3616) "Game is under maintenance!\00")
(data (i32.const 3648) "GAME UNDER MAINTAIN\00")
(data (i32.const 3680) "GAME UNDER MAINTAIN!\00")
(data (i32.const 3712) "vsdice-\00")
(data (i32.const 3728) "vsfruit-\00")
(data (i32.const 3744) "dffruitroll\00")
(data (i32.const 3760) "vsmark-\00")
(data (i32.const 3776) "dfmarkroll\00")
(data (i32.const 3792) "object passed to erase is not in multi_index\00")
(data (i32.const 3840) "cannot erase objects in table of another contract\00")
(data (i32.const 3904) "attempt to remove object that was not in multi_index\00")
(data (i32.const 3968) "vsvsvsvipvip\00")
(data (i32.const 3984) "null\00")
(data (i32.const 4000) "rollunder out of range\00")
(data (i32.const 4032) "batchid out of range\00")
(data (i32.const 4064) "Game already exists\00")
(data (i32.const 4096) "Game already no exists\00")
(data (i32.const 4128) "Game already open\00")
(data (i32.const 4160) "player != from\00")
(data (i32.const 4176) "\e4\b8\8b\e6\b3\a8\e5\a4\b1\e8\b4\a5\e9\80\80\e6\ac\be\ef\bc\9bID\ef\bc\9a\00")
(data (i32.const 4208) "Please wait.\00")
(data (i32.const 4240) "next primary key in table is at autoincrement limit\00")
(data (i32.const 4304) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 4368) "cannot decrement iterator at beginning of table\00")
(data (i32.const 4416) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 4480) "Quantity must be biger than 0.1 EOS\00")
(data (i32.const 4528) "Quantity must be little than 100 EOS\00")
(data (i32.const 4576) "Quantity must be biger than 100 DBET\00")
(data (i32.const 4624) "Quantity must be little than 100000 DBET\00")
(data (i32.const 4672) "Quantity must be biger than 0.1 EUSD\00")
(data (i32.const 4720) "Quantity must be little than 100 EUSD\00")
(data (i32.const 4768) "phase error\00")
(data (i32.const 4784) "Closing bet\00")
(data (i32.const 4800) "attempt to add asset with different symbol\00")
(data (i32.const 4848) "addition underflow\00")
(data (i32.const 4880) "addition overflow\00")
(data (i32.const 4912) "Quantity must be little than 10000 EOS\00")
(data (i32.const 4960) "Quantity must be biger than 100 VS\00")
(data (i32.const 5008) "Quantity must be little than 10000000 VS\00")
(data (i32.const 5056) "Quantity must be little than 10000 EUSD\00")
(data (i32.const 5104) "Not yet open\00")
(data (i32.const 5120) "you bet nothing!\00")
(data (i32.const 5152) "Quantity not enough\00")
(data (i32.const 5184) "addrebate\00")
(data (i32.const 5200) "addinviter\00")
(data (i32.const 5216) "miningdice\00")
(data (i32.const 5232) "System error!\00")
(data (i32.const 5248) "Game already no exists or status error\00")
(data (i32.const 5296) "linxinbing12\00")
(data (i32.const 5312) ",\00")
(data (i32.const 5328) "multiplication overflow\00")
(data (i32.const 5360) "multiplication underflow\00")
(data (i32.const 5392) "%0.2lf\00")
(data (i32.const 5408) "win:\00")
(data (i32.const 5424) ",con:\00")
(data (i32.const 5440) ",res:\00")
(data (i32.const 5456) ";\00")
(data (i32.const 5472) "attempt to subtract asset with different symbol\00")
(data (i32.const 5520) "subtraction underflow\00")
(data (i32.const 5552) "subtraction overflow\00")
(data (i32.const 5584) "Game no exists\00")
(data (i32.const 5600) "status error\00")
(data (i32.const 5616) "VSbet Winning Reward\ef\bc\81 VSbet\e5\a5\96\e5\8a\b1\ef\bc\81https://vsbet.io; ID:\00")
(data (i32.const 5680) "type error!\00")
(data (i32.const 5696) "add blood acount too small\00")
(data (i32.const 5728) "buff count out of range\00")
(data (i32.const 5760) "deduction\00")
(data (i32.const 5776) "parameter error\00")
(data (i32.const 5792) "state unchanged\00")
(data (i32.const 14208) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 14304) "%llu\00")
(data (i32.const 14320) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 14784) "0123456789ABCDEF")
(data (i32.const 14800) "-+   0X0x\00")
(data (i32.const 14816) "(null)\00")
(data (i32.const 14832) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 14864) "inf\00")
(data (i32.const 14880) "INF\00")
(data (i32.const 14896) "nan\00")
(data (i32.const 14912) "NAN\00")
(data (i32.const 14928) ".\00")
(data (i32.const 14944) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 15040) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__multi3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$11 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$12))
(import "env" "action_data_size" (func $fimport$13 (result i32)))
(import "env" "current_receiver" (func $fimport$14 (result i64)))
(import "env" "current_time" (func $fimport$15 (result i64)))
(import "env" "db_end_i64" (func $fimport$16 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$18 (param i32 i32 i32) (result i32)))
(import "env" "db_idx64_find_primary" (func $fimport$19 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$20 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$21 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$22 (param i32)))
(import "env" "db_idx64_store" (func $fimport$23 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$24 (param i32 i64 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$25 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$26 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$28 (param i32)))
(import "env" "db_store_i64" (func $fimport$29 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$30 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$31 (param i32 i32)))
(import "env" "is_account" (func $fimport$32 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$33 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$34 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$35 (param i32 i32 i32) (result i32)))
(import "env" "read_action_data" (func $fimport$36 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$37 (param i64)))
(import "env" "require_auth2" (func $fimport$38 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$39 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$40 (param i32 i32)))
(import "env" "sha512" (func $fimport$41 (param i32 i32 i32)))
(import "env" "tapos_block_num" (func $fimport$42 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$43 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_" (func $5))
(export "_ZN11dbetonedice8isdecnumENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $8))
(export "_ZN11dbetonedice8isdecnumEPKc" (func $9))
(export "_ZN11dbetonedice17require_offertypeEi" (func $10))
(export "_ZN11dbetonedice7str2eosENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio11symbol_typeE" (func $11))
(export "_ZN11dbetonedice8splitoneERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $12))
(export "_ZN11dbetonedice12_split_extraENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetENS7_11symbol_typeE" (func $13))
(export "_ZN11dbetonedice11_split_markENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetENS7_11symbol_typeE" (func $16))
(export "_ZN11dbetonedice8divcountEyNSt3__13mapIidNS0_4lessIiEENS0_9allocatorINS0_4pairIKidEEEEEE" (func $17))
(export "_ZN11dbetonedice11_getWinsMapEy" (func $18))
(export "_ZN11dbetonedice13transfer_args8get_nameEv" (func $19))
(export "_ZN11dbetonedice13transfer_args11get_accountEv" (func $20))
(export "_ZN11dbetonedice13openroll_args8get_nameEv" (func $21))
(export "_ZN11dbetonedice13openroll_args11get_accountEv" (func $22))
(export "_ZN11dbetonedice16_generateRandNumEyPhi" (func $23))
(export "apply" (func $24))
(export "_ZN11dbetonedice8dbetdice12senddividendEN5eosio5assetEy" (func $35))
(export "_ZN11dbetonedice8dbetdice11adddividendEN5eosio5assetEy" (func $37))
(export "_ZN11dbetonedice8dbetdice7actdrawEyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $38))
(export "_ZN11dbetonedice8dbetdice11cleardivactEN5eosio5assetE" (func $40))
(export "_ZN11dbetonedice8dbetdice8clearlogEN5eosio5assetE" (func $41))
(export "_ZN11dbetonedice8dbetdice9moddivactEN5eosio5assetE" (func $42))
(export "_ZN11dbetonedice8dbetdice6moddivEN5eosio5assetE" (func $68))
(export "_ZN11dbetonedice8dbetdice8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $96))
(export "_ZN11dbetonedice8dbetdice8dicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE" (func $107))
(export "_ZN11dbetonedice8dbetdice10dfdicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE" (func $116))
(export "_ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy" (func $119))
(export "_ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo" (func $122))
(export "_ZN11dbetonedice8dbetdice6recordEyyyyRKN5eosio5assetES4_NSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESB_yyy" (func $127))
(export "_ZN11dbetonedice8dbetdice11dffruitrollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE" (func $145))
(export "_ZN11dbetonedice8dbetdice10dfmarkrollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE" (func $146))
(export "_ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y" (func $151))
(export "_ZN11dbetonedice8dbetdice8openrollEyy" (func $159))
(export "_ZN11dbetonedice8dbetdice5clearEy" (func $174))
(export "_ZN11dbetonedice8dbetdice8clearallEy" (func $175))
(export "_ZN11dbetonedice8dbetdice8maintainEN5eosio5assetE" (func $176))
(export "_ZN11dbetonedice8dbetdice10unlockuserEyN5eosio5assetE" (func $177))
(export "_ZN11dbetonedice8dbetdice10intentsaveEyyyyy" (func $178))
(export "_ZN11dbetonedice8dbetdice11intentclearEy" (func $185))
(export "_ZN11dbetonedice8dbetdice9deductionEyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $186))
(export "_ZN11dbetonedice8dbetdice10drawrewardEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE" (func $187))
(export "_ZN11dbetonedice8dbetdice9altermainEy" (func $188))
(export "_ZN11dbetonedice8dbetdice9altermarkEyyy" (func $190))
(export "_ZN11dbetonedice8dbetdice10clearerrorEy" (func $194))
(export "_ZN11dbetonedice8dbetdice11clearunopenEy" (func $196))
(export "_ZN11dbetonedice8dbetdice7inspectEyy" (func $197))
(export "_ZN11dbetonedice8dbetdice9checknameEy" (func $198))
(export "malloc" (func $199))
(export "free" (func $202))
(export "_ZNSt3__19to_stringEy" (func $216))
(export "isdigit" (func $222))
(export "snprintf" (func $223))
(export "vsnprintf" (func $224))
(export "__errno_location" (func $226))
(export "vfprintf" (func $227))
(export "__lockfile" (func $229))
(export "__unlockfile" (func $230))
(export "__fwritex" (func $231))
(export "strerror" (func $233))
(export "strnlen" (func $234))
(export "wctomb" (func $235))
(export "__signbitl" (func $236))
(export "__fpclassifyl" (func $237))
(export "frexpl" (func $238))
(export "wcrtomb" (func $239))
(export "memchr" (func $240))
(export "__lctrans" (func $241))
(export "__lctrans_impl" (func $242))
(export "__mo_lookup" (func $243))
(export "strcmp" (func $244))
(export "__towrite" (func $245))
(export "sprintf" (func $246))
(export "vsprintf" (func $247))
(export "atoi" (func $248))
(export "atoll" (func $249))
(export "memcmp" (func $250))
(export "strlen" (func $251))
(table $0 28 28 anyfunc)
(elem (i32.const 0) $252 $198 $197 $159 $41 $188 $107 $177 $116 $175 $178 $190 $187 $176 $42 $40 $194 $38 $37 $145 $146 $35 $96 $196 $186 $174 $185 $225)



int_32 .FUNC $220 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $203($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice5clearEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	$4 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)7035937260545130496, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [48])
	$0 = CALL $128($2, $4)
	
.LOOP $label$2:
	if ( ((uint_64)*($0) >= (uint_64)$1) ){ goto $label$1 }
	$4 = [0]
	$3 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($3, [3456])
	CALL eosio_assert($3, [3504])
	$3 = CALL db_next_i64(*($0 + [148]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $128($2, $3)
	
.LABEL $label$3
	CALL $124($2, $0)
	$0 = $4
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = ($3 & [1])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : $5 )
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($4 + $3)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $203($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : $5 ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $209($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $205($0)
}

void .FUNC _ZN11dbetonedice8dbetdice8maintainEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$4 = *($1 + [8])
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$3 = *($0)
	*($6) = $3
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($6 + [8]) = $4)
	$0 = CALL db_find_i64($3, $4, (int_64)-5918304704032407552, $4)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $99($6, $0)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)$6), [2464])
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$1 = CALL db_next_i64(*($0 + [28]), ($6 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	CALL $99($6, $1)
	
.LABEL $label$2
	CALL $100($6, $0)
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $204($1)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $204($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

void .FUNC _ZN11dbetonedice8dbetdice10unlockuserEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL require_auth(*($0))
	$4 = *($2 + [8])
	*(($7 + [32])) = [0]
	*($7 + [16]) = (int_64)-1
	*($7 + [24]) = (int_64)0
	$5 = *($0)
	*($7) = $5
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($7 + [8]) = $4)
	$0 = CALL db_find_i64($5, $4, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $101($7, $0)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$7), [2464])
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$2 = CALL db_next_i64(*($0 + [36]), ($7 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $101($7, $2)
	
.LABEL $label$2
	CALL $102($7, $0)
	
.LABEL $label$1
	$3 = *($7 + [24])
	if ( ($3 == 0) ){ goto $label$3 }
	$6 = ($7 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$2 = *($0)
	*($0) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $204($2)
	
.LABEL $label$7
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($7 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $3
	
.LABEL $label$4
	*($6) = $3
	CALL $204($0)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*($1 + [120]) = (int_64)1
	*(($8 = $7) + [16]) = *(($1 + [32]))
	*($8 + [24]) = *(($1 + [8]))
	$2 = *($1)
	CALL eosio_assert([1], [2896])
	$6 = *($1 + [88])
	$3 = ( *(($1 + [92])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($3 + [120])
	$5 = (CASTING uint_64)(uint_32 $3)
	$3 = (($8 + [16]) + [8])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [100])
	$4 = ( *(($1 + [104])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$6 = ($4 + $6)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	if ( ($6 <= [513]) ){ goto $label$4 }
	$7 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($7 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$3
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $6)
	CALL $134($8, $1)
	CALL db_update_i64(*($1 + [148]), (int_64)0, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [40]) = *(($1 + [32]))
	if ( (CALL memcmp(($8 + [16]), ($8 + [40]), [8]) == 0) ){ goto $label$7 }
	$7 = ($1 + [152])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$8 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130496, ($8 + [32]), $2)
	*($7) = $6
	
.LABEL $label$8
	CALL db_idx64_update($6, (int_64)0, ($8 + [40]))
	
.LABEL $label$7
	*($8 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp($3, ($8 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [156])
	$6 = *($1)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130497, ($8 + [32]), $2)
	*($1) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, (int_64)0, ($8 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*($1 + [120]) = (int_64)1
	*(($8 = $7) + [16]) = *(($1 + [32]))
	*($8 + [24]) = *(($1 + [8]))
	$2 = *($1)
	CALL eosio_assert([1], [2896])
	$6 = *($1 + [88])
	$3 = ( *(($1 + [92])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($3 + [120])
	$5 = (CASTING uint_64)(uint_32 $3)
	$3 = (($8 + [16]) + [8])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [100])
	$4 = ( *(($1 + [104])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$6 = ($4 + $6)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	if ( ($6 <= [513]) ){ goto $label$4 }
	$7 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($7 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$3
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $6)
	CALL $134($8, $1)
	CALL db_update_i64(*($1 + [148]), (int_64)0, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [40]) = *(($1 + [32]))
	if ( (CALL memcmp(($8 + [16]), ($8 + [40]), [8]) == 0) ){ goto $label$7 }
	$7 = ($1 + [152])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$8 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130496, ($8 + [32]), $2)
	*($7) = $6
	
.LABEL $label$8
	CALL db_idx64_update($6, (int_64)0, ($8 + [40]))
	
.LABEL $label$7
	*($8 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp($3, ($8 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [156])
	$6 = *($1)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130497, ($8 + [32]), $2)
	*($1) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, (int_64)0, ($8 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $172 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*(($8 = $7) + [16]) = *(($1 + [32]))
	*($8 + [24]) = *(($1 + [8]))
	$3 = *($1)
	$2 = *($2)
	*(($1 + [80])) = *(($2 + [8]))
	*($1 + [72]) = *($2)
	CALL eosio_assert([1], [2896])
	$2 = *($1 + [88])
	$4 = ( *(($1 + [92])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($4 + [120])
	$6 = (CASTING uint_64)(uint_32 $4)
	$4 = (($8 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	$5 = *($1 + [100])
	$5 = ( *(($1 + [104])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$2 = ($5 + $2)
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	if ( ($2 <= [513]) ){ goto $label$4 }
	$7 = CALL malloc($2)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($7 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$3
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $2)
	CALL $134($8, $1)
	CALL db_update_i64(*($1 + [148]), (int_64)0, $7, $2)
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [40]) = *(($1 + [32]))
	if ( (CALL memcmp(($8 + [16]), ($8 + [40]), [8]) == 0) ){ goto $label$7 }
	$7 = ($1 + [152])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130496, ($8 + [32]), $3)
	*($7) = $2
	
.LABEL $label$8
	CALL db_idx64_update($2, (int_64)0, ($8 + [40]))
	
.LABEL $label$7
	*($8 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp($4, ($8 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [156])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130497, ($8 + [32]), $3)
	*($1) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($8 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $203(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $220($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $204(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $204($4)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC sprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [12]) = $2
	$2 = CALL vsprintf($0, $1, $2)
	*([0] + [4]) = ($3 + [16])
	return $2
}

void .FUNC _ZN11dbetonedice8dbetdice10intentsaveEyyyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	int_32 $16
	$16 = (*([0] + [4]) - [128])
	*([0] + [4]) = $16
	CALL require_auth($1)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [3168]
	$13 = (int_64)0
	
.LOOP $label$1:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$2 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$6 = ($6 + [165])
	goto $label$3 
	
.LABEL $label$4
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$2
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$5 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [3184]
	$13 = (int_64)0
	
.LOOP $label$6:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$7 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$6 = ($6 + [165])
	goto $label$8 
	
.LABEL $label$9
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$7
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$6 }
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$5 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [3200]
	$13 = (int_64)0
	
.LOOP $label$10:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$11 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$6 = ($6 + [165])
	goto $label$12 
	
.LABEL $label$13
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$11
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$10 }
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$5 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [3216]
	$13 = (int_64)0
	
.LOOP $label$14:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$15 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$6 = ($6 + [165])
	goto $label$16 
	
.LABEL $label$17
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$15
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$14 }
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$5 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [3232]
	$13 = (int_64)0
	
.LOOP $label$18:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$19 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$6 = ($6 + [165])
	goto $label$20 
	
.LABEL $label$21
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$19
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$18 }
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$5 }
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [3248]
	$13 = (int_64)0
	
.LOOP $label$22:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$23 }
	$6 = *($10)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$6 = ($6 + [165])
	goto $label$24 
	
.LABEL $label$25
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$23
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$5 }
	*(($16 + [40])) = [0]
	*($16 + [24]) = (int_64)-1
	*($16 + [32]) = (int_64)0
	$12 = *($0)
	*($16 + [8]) = $12
	*($16 + [16]) = $12
	$10 = CALL db_find_i64($12, $12, (int_64)4986958867379634176, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$28 }
	$10 = CALL $78(($16 + [8]), $10)
	CALL eosio_assert(((int_32)*($10 + [32]) == (int_32)($16 + [8])), [2464])
	if ( ((int_64)*($10 + [24]) == (int_64)2) ){ goto $label$27 }
	
.LABEL $label$28
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)-1) <= (int_64)9), [5680])
	if ( ((int_64)$3 == (int_64)1) ){ goto $label$31 }
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$30 }
	$4 = (int_64)0
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$29 }
	CALL eosio_assert([0], [5696])
	goto $label$29 
	
.LABEL $label$31
	CALL eosio_assert((((int_64)$5 == (int_64)1) | ((int_64)$5 == (int_64)10)), [5728])
	goto $label$29 
	
.LABEL $label$30
	if ( ((int_64)((int_64)$3 | (int_64)1) == (int_64)3) ){ goto $label$32 }
	if ( ((int_64)$3 != (int_64)4) ){ goto $label$33 }
	CALL eosio_assert((uint_64)(((int_64)$5 + (int_64)-1) <= (int_64)2), [5728])
	CALL eosio_assert(((int_64)$4 != (int_64)0), [5728])
	goto $label$29 
	
.LABEL $label$33
	if ( (uint_64)(((int_64)$3 + (int_64)-5) <= (int_64)5) ){ goto $label$32 }
	CALL eosio_assert([0], [5680])
	
.LABEL $label$32
	$4 = (int_64)0
	
.LABEL $label$29
	$7 = ($0 + [88])
	$10 = ($0 + [104])
	$12 = *($10)
	if ( ((int_64)$12 != (int_64)-1) ){ goto $label$34 }
	$12 = (int_64)0
	$6 = CALL db_lowerbound_i64(*($7), *(($0 + [96])), (int_64)5445035907950198784, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$35 }
	CALL $179($7, $6)
	*($16 + [52]) = [0]
	*($16 + [48]) = $7
	$12 = *(*(CALL $180(($16 + [48])) + [4]))
	$12 = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$35
	*(($0 + [104])) = $12
	
.LABEL $label$34
	CALL eosio_assert((uint_64)($12 <= (int_64)-2), [4240])
	$11 = *($10)
	if ( (uint_64)($11 <= (int_64)1000) ){ goto $label$38 }
	$12 = ((int_64)$11 + (int_64)-1000)
	$8 = *(($0 + [112]))
	$15 = *(($0 + [116]))
	if ( ((int_32)$15 == (int_32)$8) ){ goto $label$39 }
	$10 = ($15 + [-24])
	$9 = ([0] - $8)
	
.LOOP $label$40:
	if ( ((int_64)*(*($10)) == (int_64)$12) ){ goto $label$39 }
	$15 = $10
	$6 = ($10 + [-24])
	$10 = $6
	if ( ((int_32)($6 + $9) != (int_32)[-24]) ){ goto $label$40 }
	
.LABEL $label$39
	if ( ((int_32)$15 == (int_32)$8) ){ goto $label$42 }
	$10 = *(($15 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)$7), [2464])
	if ( $10 ){ goto $label$41 }
	goto $label$38 
	
.LABEL $label$42
	$10 = CALL db_find_i64(*(($0 + [88])), *(($0 + [96])), (int_64)5445035907950198784, $12)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$38 }
	$10 = CALL $179($7, $10)
	CALL eosio_assert(((int_32)*($10 + [56]) == (int_32)$7), [2464])
	
.LABEL $label$41
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$6 = CALL db_next_i64(*($10 + [60]), ($16 + [48]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$43 }
	CALL $179($7, $6)
	
.LABEL $label$43
	CALL $181($7, $10)
	$12 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$14()), [2720])
	*(($10 = CALL $203([72])) + [56]) = $7
	*($10 + [8]) = $1
	*($10) = $11
	*($10 + [16]) = $2
	*($10 + [24]) = $3
	*($10 + [32]) = $4
	*($10 + [40]) = $5
	*($10 + [48]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($16 + [112]) = (($16 + [48]) + [56])
	*($16 + [108]) = ($16 + [48])
	*($16 + [104]) = ($16 + [48])
	CALL $182(($16 + [104]), $10)
	$11 = *($10)
	$6 = ($0 + [96])
	*($10 + [60]) = CALL db_store_i64(*($6), (int_64)5445035907950198784, $12, $11, ($16 + [48]), [56])
	$15 = ($0 + [104])
	if ( (uint_64)($11 <= *($15)) ){ goto $label$44 }
	*($15) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$44
	$11 = *($6)
	$14 = *($10)
	*($16 + [120]) = *(($10 + [16]))
	*($10 + [64]) = CALL db_idx64_store($11, (int_64)5445035907950198784, $12, $14, ($16 + [120]))
	$11 = *($6)
	$14 = *($10)
	*($16 + [120]) = *(($10 + [8]))
	*($10 + [68]) = CALL db_idx64_store($11, (int_64)5445035907950198785, $12, $14, ($16 + [120]))
	*($16 + [104]) = $10
	$12 = *($10)
	*($16 + [48]) = $12
	$15 = *(($10 + [60]))
	*($16 + [120]) = $15
	$9 = ($0 + [116])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [120]))) ){ goto $label$37 }
	*($6 + [8]) = $12
	*($6 + [16]) = $15
	*($16 + [104]) = [0]
	*($6) = $10
	*($9) = ($6 + [24])
	goto $label$36 
	
.LABEL $label$38
	$12 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [88])) == (int_64)CALL $fimport$14()), [2720])
	*(($10 = CALL $203([72])) + [56]) = $7
	*($10 + [8]) = $1
	*($10) = $11
	*($10 + [16]) = $2
	*($10 + [24]) = $3
	*($10 + [32]) = $4
	*($10 + [40]) = $5
	*($10 + [48]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($16 + [112]) = (($16 + [48]) + [56])
	*($16 + [108]) = ($16 + [48])
	*($16 + [104]) = ($16 + [48])
	CALL $182(($16 + [104]), $10)
	$11 = *($10)
	$6 = ($0 + [96])
	*($10 + [60]) = CALL db_store_i64(*($6), (int_64)5445035907950198784, $12, $11, ($16 + [48]), [56])
	$15 = ($0 + [104])
	if ( (uint_64)($11 <= *($15)) ){ goto $label$45 }
	*($15) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$45
	$11 = *($6)
	$14 = *($10)
	*($16 + [120]) = *(($10 + [16]))
	*($10 + [64]) = CALL db_idx64_store($11, (int_64)5445035907950198784, $12, $14, ($16 + [120]))
	$11 = *($6)
	$14 = *($10)
	*($16 + [120]) = *(($10 + [8]))
	*($10 + [68]) = CALL db_idx64_store($11, (int_64)5445035907950198785, $12, $14, ($16 + [120]))
	*($16 + [104]) = $10
	$12 = *($10)
	*($16 + [48]) = $12
	$15 = *(($10 + [60]))
	*($16 + [120]) = $15
	$9 = ($0 + [116])
	$6 = *($9)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [120]))) ){ goto $label$47 }
	*($6 + [8]) = $12
	*($6 + [16]) = $15
	*($16 + [104]) = [0]
	*($6) = $10
	*($9) = ($6 + [24])
	goto $label$46 
	
.LABEL $label$47
	CALL $183(($0 + [112]), ($16 + [104]), ($16 + [48]), ($16 + [120]))
	
.LABEL $label$46
	$10 = *($16 + [104])
	*($16 + [104]) = [0]
	if ( ($10 == 0) ){ goto $label$27 }
	CALL $204($10)
	$0 = *($16 + [32])
	if ( $0 ){ goto $label$26 }
	goto $label$5 
	
.LABEL $label$37
	CALL $183(($0 + [112]), ($16 + [104]), ($16 + [48]), ($16 + [120]))
	
.LABEL $label$36
	$10 = *($16 + [104])
	*($16 + [104]) = [0]
	if ( ($10 == 0) ){ goto $label$27 }
	CALL $204($10)
	
.LABEL $label$27
	$0 = *($16 + [32])
	if ( ($0 == 0) ){ goto $label$5 }
	
.LABEL $label$26
	$15 = ($16 + [36])
	$10 = *($15)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$49 }
	
.LOOP $label$50:
	$10 = ($10 + [-24])
	$6 = *($10)
	*($10) = [0]
	if ( ($6 == 0) ){ goto $label$51 }
	CALL $204($6)
	
.LABEL $label$51
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$50 }
	$10 = *(($16 + [32]))
	goto $label$48 
	
.LABEL $label$49
	$10 = $0
	
.LABEL $label$48
	*($15) = $0
	CALL $204($10)
	
.LABEL $label$5
	*([0] + [4]) = ($16 + [128])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC $221 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $203($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC _ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_ (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [48])
	*([0] + [4]) = $18
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$8 = *($1)
	$17 = CALL strlen([16])
	if ( ((int_32)$17 != (int_32)( *($1 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$2 }
	if ( (CALL $214($1, [0], [-1], [16], $17) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $6(($18 + [32]), $1, $2)
	$4 = ($2 + [1])
	$9 = *($18 + [32])
	$3 = (($18 + [32]) | [1])
	$12 = ($1 & [1])
	$1 = *($2)
	$8 = ( *($2 + [4]) ? uint_32($1 >> [1]) : $12 )
	if ( ($8 == 0) ){ goto $label$4 }
	$17 = ( *($18 + [36]) ? uint_32($9 >> [1]) : $1 )
	$1 = ($9 & [1])
	$7 = ( *($18 + [40]) ? $3 : $1 )
	$10 = ($7 + $17)
	$1 = $10
	if ( ((int_32)$17 < (int_32)$8) ){ goto $label$5 }
	$12 = ( *($2 + [8]) ? $4 : $12 )
	$9 = *($12)
	$1 = $7
	
.LOOP $label$8:
	$17 = (($17 - $8) + [1])
	if ( ($17 == 0) ){ goto $label$7 }
	$1 = CALL memchr($1, $9, $17)
	if ( ($1 == 0) ){ goto $label$7 }
	if ( (CALL memcmp($1, $12, $8) == 0) ){ goto $label$6 }
	$1 = ($1 + [1])
	$17 = ($10 - $1)
	if ( ((int_32)$17 >= (int_32)$8) ){ goto $label$8 }
	
.LABEL $label$7
	$1 = $10
	
.LABEL $label$6
	$9 = *($18 + [32])
	
.LABEL $label$5
	$1 = ( [-1] ? ($1 - $7) : ((int_32)$1 == (int_32)$10) )
	goto $label$3 
	
.LABEL $label$4
	$1 = [0]
	
.LABEL $label$3
	$5 = ( *($18 + [36]) ? uint_32(($9 & [254]) >> [1]) : ($9 & [1]) )
	$11 = ($0 + [8])
	$12 = ($0 + [4])
	$15 = [0]
	$16 = [0]
	
.LOOP $label$12:
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$11 }
	CALL $221(($18 + [16]), ($18 + [32]), [0], $1, ($18 + [32]))
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)*($11)) ){ goto $label$14 }
	CALL $220($8, ($18 + [16]))
	*($12) = (*($12) + [12])
	goto $label$13 
	
.LABEL $label$14
	CALL $7($0, ($18 + [16]))
	
.LABEL $label$13
	CALL $221($18, ($18 + [32]), ($1 + [1]), $5, ($18 + [32]))
	if ( (*($18 + [32]) & [1]) ){ goto $label$16 }
	*($18 + [32]) = [0]
	goto $label$15 
	
.LABEL $label$16
	*(*((($18 + [32]) + [8]))) = [0]
	*($18 + [36]) = [0]
	
.LABEL $label$15
	$1 = [0]
	CALL $208(($18 + [32]), [0])
	$14 = ($18 + [8])
	$17 = *($14)
	*(($13 = (($18 + [32]) + [8]))) = $17
	*($18 + [32]) = *($18)
	$10 = ($8 & [1])
	$8 = *($2)
	$8 = ( *(($2 + [4])) ? uint_32($8 >> [1]) : $10 )
	if ( ($8 == 0) ){ goto $label$17 }
	$17 = ( *($18 + [36]) ? uint_32($1 >> [1]) : $9 )
	$1 = *($18 + [32])
	$9 = ($1 & [1])
	$6 = ( $17 ? $3 : $9 )
	$9 = ($6 + $17)
	$1 = $9
	if ( ((int_32)$17 < (int_32)$8) ){ goto $label$18 }
	$7 = ( *(($2 + [8])) ? $4 : $10 )
	$10 = *($7)
	$1 = $6
	
.LOOP $label$20:
	$17 = (($17 - $8) + [1])
	if ( ($17 == 0) ){ goto $label$19 }
	$1 = CALL memchr($1, $10, $17)
	if ( ($1 == 0) ){ goto $label$19 }
	if ( (CALL memcmp($1, $7, $8) == 0) ){ goto $label$18 }
	$1 = ($1 + [1])
	$17 = ($9 - $1)
	if ( ((int_32)$17 >= (int_32)$8) ){ goto $label$20 }
	
.LABEL $label$19
	$1 = $9
	
.LABEL $label$18
	$1 = ( [-1] ? ($1 - $6) : ((int_32)$1 == (int_32)$9) )
	
.LABEL $label$17
	if ( ((int_32)$15 != (int_32)[4]) ){ goto $label$24 }
	$8 = *($18 + [32])
	CALL $221($18, ($18 + [32]), [0], (( *($18 + [36]) ? uint_32($8 >> [1]) : ($8 & [1]) ) + [-1]), ($18 + [32]))
	if ( (*($18 + [32]) & [1]) ){ goto $label$23 }
	*($18 + [32]) = [0]
	goto $label$22 
	
.LABEL $label$24
	$8 = [1]
	$15 = ($15 + [1])
	goto $label$21 
	
.LABEL $label$23
	*(*($13)) = [0]
	*($18 + [36]) = [0]
	
.LABEL $label$22
	CALL $208(($18 + [32]), [0])
	*($13) = *($14)
	*($18 + [32]) = *($18)
	$8 = *($12)
	if ( ((int_32)$8 == (int_32)*($11)) ){ goto $label$26 }
	CALL $220($8, ($18 + [32]))
	$15 = [4]
	*(($8 = ($0 + [4]))) = (*($8) + [12])
	$16 = [1]
	goto $label$25 
	
.LABEL $label$26
	CALL $7($0, ($18 + [32]))
	$16 = [1]
	$15 = [4]
	
.LABEL $label$25
	$8 = [0]
	
.LABEL $label$21
	if ( ((*($18 + [16]) & [1]) == 0) ){ goto $label$27 }
	CALL $204(*((($18 + [16]) + [8])))
	
.LABEL $label$27
	if ( $8 ){ goto $label$12 }
	if ( ((*($18 + [32]) & [1]) == 0) ){ goto $label$28 }
	CALL $204(*(($18 + [40])))
	
.LABEL $label$28
	if ( ($16 & [1]) ){ goto $label$1 }
	$17 = *($0)
	if ( ($17 == 0) ){ goto $label$1 }
	$9 = ($0 + [4])
	$1 = *($9)
	if ( ((int_32)$1 == (int_32)$17) ){ goto $label$10 }
	$8 = ([0] - $17)
	$1 = ($1 + [-12])
	
.LOOP $label$29:
	if ( ((*($1) & [1]) == 0) ){ goto $label$30 }
	CALL $204(*(($1 + [8])))
	
.LABEL $label$30
	$1 = ($1 + [-12])
	if ( ((int_32)($1 + $8) != (int_32)[-12]) ){ goto $label$29 }
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$11
	if ( ((*($18 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $204(*(($18 + [40])))
	goto $label$1 
	
.LABEL $label$10
	$1 = $17
	
.LABEL $label$9
	*($9) = $17
	CALL $204($1)
	
.LABEL $label$1
	*([0] + [4]) = ($18 + [48])
}

void .FUNC _ZN11dbetonedice8dbetdice6recordEyyyyRKN5eosio5assetES4_NSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESB_yyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_64 $9, int_64 $10, int_64 $11)
{
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [160])
	*([0] + [4]) = $18
	*($18 + [112]) = $1
	*($18 + [104]) = $2
	*($18 + [96]) = $3
	*($18 + [88]) = $4
	*($18 + [80]) = $9
	*($18 + [72]) = $10
	*($18 + [64]) = $11
	$12 = ($0 + [48])
	$16 = ($0 + [64])
	$11 = *($16)
	if ( ((int_64)$11 != (int_64)-1) ){ goto $label$1 }
	$11 = (int_64)0
	$15 = CALL db_lowerbound_i64(*($12), *(($0 + [56])), (int_64)7035937260545130496, (int_64)0)
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$2 }
	CALL $128($12, $15)
	*($18 + [12]) = [0]
	*($18 + [8]) = $12
	$11 = *(*(CALL $129(($18 + [8])) + [4]))
	$11 = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($0 + [64])) = $11
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($11 <= (int_64)-2), [4240])
	$11 = *($16)
	*($18 + [56]) = $11
	if ( (uint_64)($11 <= (int_64)20000) ){ goto $label$6 }
	$11 = ((int_64)$11 + (int_64)-20000)
	$13 = *(($0 + [72]))
	$17 = *(($0 + [76]))
	if ( ((int_32)$17 == (int_32)$13) ){ goto $label$7 }
	$16 = ($17 + [-24])
	$14 = ([0] - $13)
	
.LOOP $label$8:
	if ( ((int_64)*(*($16)) == (int_64)$11) ){ goto $label$7 }
	$17 = $16
	$15 = ($16 + [-24])
	$16 = $15
	if ( ((int_32)($15 + $14) != (int_32)[-24]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_32)$17 == (int_32)$13) ){ goto $label$10 }
	$16 = *(($17 + [-24]))
	CALL eosio_assert(((int_32)*($16 + [144]) == (int_32)$12), [2464])
	if ( $16 ){ goto $label$9 }
	goto $label$6 
	
.LABEL $label$10
	$16 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)7035937260545130496, $11)
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$6 }
	$16 = CALL $128($12, $16)
	CALL eosio_assert(((int_32)*($16 + [144]) == (int_32)$12), [2464])
	
.LABEL $label$9
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$15 = CALL db_next_i64(*($16 + [148]), ($18 + [8]))
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$11 }
	CALL $128($12, $15)
	
.LABEL $label$11
	CALL $124($12, $16)
	$11 = *($0)
	*($18 + [28]) = $5
	*($18 + [32]) = $6
	*($18 + [12]) = ($18 + [112])
	*($18 + [8]) = ($18 + [56])
	*($18 + [16]) = ($18 + [104])
	*($18 + [20]) = ($18 + [96])
	*($18 + [24]) = ($18 + [88])
	*($18 + [36]) = $7
	*($18 + [40]) = $8
	*($18 + [44]) = ($18 + [72])
	*($18 + [48]) = ($18 + [64])
	*($18 + [52]) = ($18 + [80])
	*($18 + [152]) = $11
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$14()), [2720])
	*($18 + [128]) = $12
	*($18 + [132]) = ($18 + [8])
	*($18 + [136]) = ($18 + [152])
	$16 = CALL $203([160])
	CALL $130($16)
	*($16 + [144]) = $12
	CALL $131(($18 + [128]), $16)
	*($18 + [144]) = $16
	$11 = *($16)
	*($18 + [128]) = $11
	$17 = *($16 + [148])
	*($18 + [124]) = $17
	$14 = ($0 + [76])
	$15 = *($14)
	if ( ((uint_32)$15 >= (uint_32)*(($0 + [80]))) ){ goto $label$5 }
	*($15 + [8]) = $11
	*($15 + [16]) = $17
	*($18 + [144]) = [0]
	*($15) = $16
	*($14) = ($15 + [24])
	goto $label$4 
	
.LABEL $label$6
	$11 = *($0)
	*($18 + [28]) = $5
	*($18 + [32]) = $6
	*($18 + [12]) = ($18 + [112])
	*($18 + [8]) = ($18 + [56])
	*($18 + [16]) = ($18 + [104])
	*($18 + [20]) = ($18 + [96])
	*($18 + [24]) = ($18 + [88])
	*($18 + [36]) = $7
	*($18 + [40]) = $8
	*($18 + [44]) = ($18 + [72])
	*($18 + [48]) = ($18 + [64])
	*($18 + [52]) = ($18 + [80])
	*($18 + [152]) = $11
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$14()), [2720])
	*($18 + [128]) = $12
	*($18 + [132]) = ($18 + [8])
	*($18 + [136]) = ($18 + [152])
	$16 = CALL $203([160])
	CALL $130($16)
	*($16 + [144]) = $12
	CALL $133(($18 + [128]), $16)
	*($18 + [144]) = $16
	$11 = *($16)
	*($18 + [128]) = $11
	$17 = *($16 + [148])
	*($18 + [124]) = $17
	$14 = ($0 + [76])
	$15 = *($14)
	if ( ((uint_32)$15 >= (uint_32)*(($0 + [80]))) ){ goto $label$13 }
	*($15 + [8]) = $11
	*($15 + [16]) = $17
	*($18 + [144]) = [0]
	*($15) = $16
	*($14) = ($15 + [24])
	goto $label$12 
	
.LABEL $label$13
	CALL $132(($0 + [72]), ($18 + [144]), ($18 + [128]), ($18 + [124]))
	
.LABEL $label$12
	$16 = *($18 + [144])
	*($18 + [144]) = [0]
	if ( ($16 == 0) ){ goto $label$3 }
	if ( ((*($16 + [100]) & [1]) == 0) ){ goto $label$14 }
	CALL $204(*(($16 + [108])))
	
.LABEL $label$14
	if ( ((*($16 + [88]) & [1]) == 0) ){ goto $label$15 }
	CALL $204(*(($16 + [96])))
	
.LABEL $label$15
	CALL $204($16)
	goto $label$3 
	
.LABEL $label$5
	CALL $132(($0 + [72]), ($18 + [144]), ($18 + [128]), ($18 + [124]))
	
.LABEL $label$4
	$16 = *($18 + [144])
	*($18 + [144]) = [0]
	if ( ($16 == 0) ){ goto $label$3 }
	if ( ((*($16 + [100]) & [1]) == 0) ){ goto $label$16 }
	CALL $204(*(($16 + [108])))
	
.LABEL $label$16
	if ( ((*($16 + [88]) & [1]) == 0) ){ goto $label$17 }
	CALL $204(*(($16 + [96])))
	
.LABEL $label$17
	CALL $204($16)
	
.LABEL $label$3
	*([0] + [4]) = ($18 + [160])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [3792])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [3840])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [3904])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC _ZN11dbetonedice8dbetdice9altermainEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [96])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	CALL eosio_assert((((int_64)$1 == (int_64)2) | ((int_64)((int_64)$1 | (int_64)1) == (int_64)1)), [5776])
	*(($6 + [40])) = [0]
	*($6 + [24]) = (int_64)-1
	$4 = *($0)
	*($6 + [8]) = $4
	*($6 + [16]) = $4
	*($6 + [32]) = (int_64)0
	$3 = CALL db_find_i64($4, $4, (int_64)-4098957125006082048, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$8 }
	$0 = CALL $97(($6 + [8]), $3)
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)($6 + [8])), [2464])
	$4 = *($0 + [8])
	if ( ((int_64)$1 != (int_64)1) ){ goto $label$7 }
	if ( ((int_64)($4 == 0) == 0) ){ goto $label$7 }
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)($6 + [8])), [2784])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$14()), [2832])
	*($0 + [8]) = (int_64)1
	$1 = *($0)
	CALL eosio_assert([1], [2896])
	CALL eosio_assert([1], [2704])
	CALL memcpy(($6 + [64]), $0, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($6 + [64]) | [8]), ($0 + [8]), [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($6 + [64]) + [16]), ($0 + [16]), [8])
	CALL db_update_i64(*($0 + [28]), (int_64)0, ($6 + [64]), [24])
	$0 = (($6 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$2 = *($6 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$8
	$4 = *($0)
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$14()), [2720])
	*(($0 = CALL $203([40])) + [24]) = ($6 + [8])
	*($0 + [8]) = $1
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [2704])
	CALL memcpy(($6 + [64]), $0, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($6 + [64]) | [8]), ($0 + [8]), [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($6 + [64]) + [16]), ($0 + [16]), [8])
	$1 = *($0)
	$2 = CALL db_store_i64(*((($6 + [8]) + [8])), (int_64)-4098957125006082048, $4, $1, ($6 + [64]), [24])
	*($0 + [28]) = $2
	$3 = (($6 + [8]) + [16])
	if ( (uint_64)($1 <= *($3)) ){ goto $label$9 }
	*($3) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*($6 + [56]) = $0
	$1 = *($0)
	*($6 + [64]) = $1
	*($6 + [52]) = $2
	$5 = ($6 + [36])
	$3 = *($5)
	if ( ((uint_32)$3 >= (uint_32)*(($6 + [40]))) ){ goto $label$6 }
	*($3 + [8]) = $1
	*($3 + [16]) = $2
	*($6 + [56]) = [0]
	*($3) = $0
	*($5) = ($3 + [24])
	goto $label$5 
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)0) ){ goto $label$4 }
	if ( ((int_64)$4 != (int_64)1) ){ goto $label$4 }
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($0 + [24]) == (int_32)($6 + [8])), [2784])
	CALL eosio_assert(((int_64)*($6 + [8]) == (int_64)CALL $fimport$14()), [2832])
	*($0 + [8]) = (int_64)0
	$1 = *($0)
	*($0 + [16]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$1 == (int_64)*($0)), [2896])
	CALL eosio_assert([1], [2704])
	CALL memcpy(($6 + [64]), $0, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($6 + [64]) | [8]), ($0 + [8]), [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($6 + [64]) + [16]), ($0 + [16]), [8])
	CALL db_update_i64(*($0 + [28]), (int_64)0, ($6 + [64]), [24])
	$0 = (($6 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	$2 = *($6 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	CALL $98(($6 + [32]), ($6 + [56]), ($6 + [64]), ($6 + [52]))
	
.LABEL $label$5
	$0 = *($6 + [56])
	*($6 + [56]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $204($0)
	$2 = *($6 + [32])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_64)$1 != (int_64)2) ){ goto $label$3 }
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$3 = CALL db_next_i64(*($0 + [28]), ($6 + [64]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$10 }
	CALL $97(($6 + [8]), $3)
	
.LABEL $label$10
	CALL $189(($6 + [8]), $0)
	
.LABEL $label$3
	$2 = *($6 + [32])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$5 = ($6 + [36])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$14 }
	CALL $204($3)
	
.LABEL $label$14
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($6 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $2
	
.LABEL $label$11
	*($5) = $2
	CALL $204($0)
	
.LABEL $label$1
	*([0] + [4]) = ($6 + [96])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1072])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1072])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1072])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [1072])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = (*([0] + [4]) - [32])
	$10 = $8
	*([0] + [4]) = $8
	$2 = *($1 + [4])
	$9 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$8 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = ($8 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $8
	
.LABEL $label$2
	CALL read_action_data($8, $1)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1072])
	CALL memcpy(($10 + [8]), $8, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [1072])
	$7 = (($10 + [8]) + [8])
	CALL memcpy($7, ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [1072])
	$6 = (($10 + [8]) + [16])
	CALL memcpy($6, ($8 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($8)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$5 = *($6)
	$4 = *($7)
	$3 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $5), (int_64 $9))
	*([0] + [4]) = ($10 + [32])
	return [1]
}

void .FUNC _ZN11dbetonedice8dbetdice9moddivactEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [1088]
	$6 = (int_64)0
	
.LOOP $label$1:
	$7 = (int_64)0
	if ( ((uint_64)$5 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$7 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$5 = ((int_64)$5 + (int_64)1)
	$6 = ((int_64)$7 | (int_64)$6)
	$4 = ((int_64)$4 + (int_64)-5)
	if ( ((int_64)$4 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($6)
	$5 = *($1 + [8])
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$4 = *($0)
	*($8 + [8]) = $4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($8 + [16]) = $5)
	$3 = CALL db_find_i64($4, $5, (int_64)5455799419163115520, $5)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$5 }
	$3 = CALL $44(($8 + [8]), $3)
	CALL eosio_assert(((int_32)*($3 + [64]) == (int_32)($8 + [8])), [1104])
	*($8) = $1
	CALL eosio_assert([1], [1168])
	CALL $45(($8 + [8]), $3, $8)
	
.LABEL $label$5
	$1 = *($8 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	$0 = ($8 + [36])
	$3 = *($0)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL $204($2)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($8 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($0) = $1
	CALL $204($3)
	
.LABEL $label$6
	*([0] + [4]) = ($8 + [48])
}

void .FUNC _ZN11dbetonedice8dbetdice8clearlogEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$3 = *($1 + [8])
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	$4 = *($0)
	*($6) = $4
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	*($6 + [8]) = $3)
	*($6 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($4, $3, (int_64)-7704843153873305600, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$1 = CALL $50($6, $0)
	
.LOOP $label$2:
	CALL eosio_assert([1], [1552])
	CALL eosio_assert([1], [1600])
	$0 = [0]
	$2 = CALL db_next_i64(*($1 + [28]), ($6 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $50($6, $2)
	
.LABEL $label$3
	CALL $51($6, $1)
	$1 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$4 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $204($1)
	
.LABEL $label$8
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($6 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $2
	
.LABEL $label$5
	*($5) = $2
	CALL $204($0)
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [48])
}

void .FUNC _ZN11dbetonedice8dbetdice11cleardivactEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	$4 = *($1 + [8])
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$3 = *($0)
	*($6) = $3
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	*($6 + [8]) = $4)
	$0 = CALL db_find_i64($3, $4, (int_64)5455799419163115520, $4)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $44($6, $0)
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)$6), [1104])
	CALL eosio_assert([1], [1552])
	CALL eosio_assert([1], [1600])
	$1 = CALL db_next_i64(*($0 + [68]), ($6 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	CALL $44($6, $1)
	
.LABEL $label$2
	CALL $54($6, $0)
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $204($1)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $204($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

int_32 .FUNC $47 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [80])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [48])
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [80])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [48])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [80])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [48])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [80])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [48])
	return $0
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1504])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1504])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1504])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1504])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1504])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1504])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1504])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [1504])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1216])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1264])
	$5 = *($1 + [8])
	$2 = *($2)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$5), [1328])
	$3 = (int_64)
	*($1) = $3(*($1) - *($2)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1376])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1408])
	CALL eosio_assert([1], [80])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$5 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [48])
	$5 = *(($1 + [8]))
	$7 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$6 }
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64)0.5))
	
.LABEL $label$6
	*($1 + [16]) = $7
	*(($1 + [24])) = $5
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)$5 >> (uint_64)(int_64)8)), [1440])
	$6 = $9
	$2 = ($6 + [-64])
	*([0] + [4]) = $2
	*($8 + [12]) = $2
	*($8 + [8]) = $2
	*($8 + [16]) = $6
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [16])
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $46(($8 + [32]), ($8 + [24]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [64])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [48])
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1520])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $203([80])
	CALL $47($6)
	*($6 + [64]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	*($8 + [44]) = ($6 + [48])
	CALL $48(($8 + [32]), ($8 + [24]))
	*($6 + [68]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [68])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $49(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC isdigit (int_32 $0)
{
	return (($0 + [-48]) <= [10])
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [14944])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [15040]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [15040]
	return .LABEL $label$1
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

int_32 .FUNC __errno_location ()
{
	return [16844]
}

int_32 .FUNC $167 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [3120])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [3120])
	return $0
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $203([64])
	$4 = CALL $167($6)
	*($6 + [48]) = $0
	CALL $173(($8 + [32]), $4)
	*($6 + [52]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [52])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $168(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $164 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [3792])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [3840])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [3904])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $163 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*($1 + [120]) = (int_64)0
	*(($8 = $7) + [16]) = *(($1 + [32]))
	*($8 + [24]) = *(($1 + [8]))
	$2 = *($1)
	CALL eosio_assert([1], [2896])
	$6 = *($1 + [88])
	$3 = ( *(($1 + [92])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($3 + [120])
	$5 = (CASTING uint_64)(uint_32 $3)
	$3 = (($8 + [16]) + [8])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [100])
	$4 = ( *(($1 + [104])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$6 = ($4 + $6)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	if ( ($6 <= [513]) ){ goto $label$4 }
	$7 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($7 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$3
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $6)
	CALL $134($8, $1)
	CALL db_update_i64(*($1 + [148]), (int_64)0, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [40]) = *(($1 + [32]))
	if ( (CALL memcmp(($8 + [16]), ($8 + [40]), [8]) == 0) ){ goto $label$7 }
	$7 = ($1 + [152])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$8 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130496, ($8 + [32]), $2)
	*($7) = $6
	
.LABEL $label$8
	CALL db_idx64_update($6, (int_64)0, ($8 + [40]))
	
.LABEL $label$7
	*($8 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp($3, ($8 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [156])
	$6 = *($1)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130497, ($8 + [32]), $2)
	*($1) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, (int_64)0, ($8 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $162($0, *($1))
	CALL $162($0, *($1 + [4]))
	CALL $204($1)
	
.LABEL $label$1
}

void .FUNC $161 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*(($8 = $7) + [16]) = *(($1 + [32]))
	*($8 + [24]) = *(($1 + [8]))
	$3 = *($1)
	$4 = *($2)
	*(($1 + [64])) = *(($4 + [8]))
	*($1 + [56]) = *($4)
	CALL $206(($1 + [100]), *($2 + [4]))
	*($1 + [112]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [2896])
	$2 = *($1 + [88])
	$4 = ( *(($1 + [92])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($4 + [120])
	$6 = (CASTING uint_64)(uint_32 $4)
	$4 = (($8 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	$5 = *(($1 + [100]))
	$5 = ( *(($1 + [104])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$2 = ($5 + $2)
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	if ( ($2 <= [513]) ){ goto $label$4 }
	$7 = CALL malloc($2)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($7 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$3
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $2)
	CALL $134($8, $1)
	CALL db_update_i64(*($1 + [148]), (int_64)0, $7, $2)
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [40]) = *(($1 + [32]))
	if ( (CALL memcmp(($8 + [16]), ($8 + [40]), [8]) == 0) ){ goto $label$7 }
	$7 = ($1 + [152])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130496, ($8 + [32]), $3)
	*($7) = $2
	
.LABEL $label$8
	CALL db_idx64_update($2, (int_64)0, ($8 + [40]))
	
.LABEL $label$7
	*($8 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp($4, ($8 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [156])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130497, ($8 + [32]), $3)
	*($1) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($8 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $160 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*(($8 = $7) + [16]) = *(($1 + [32]))
	*($8 + [24]) = *(($1 + [8]))
	$3 = *($1)
	$4 = *($2)
	*(($1 + [64])) = *(($4 + [8]))
	*($1 + [56]) = *($4)
	CALL $206(($1 + [100]), *($2 + [4]))
	*($1 + [112]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [2896])
	$2 = *($1 + [88])
	$4 = ( *(($1 + [92])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($4 + [120])
	$6 = (CASTING uint_64)(uint_32 $4)
	$4 = (($8 + [16]) + [8])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	$5 = *(($1 + [100]))
	$5 = ( *(($1 + [104])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$2 = ($5 + $2)
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	if ( ($2 <= [513]) ){ goto $label$4 }
	$7 = CALL malloc($2)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($7 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$3
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $2)
	CALL $134($8, $1)
	CALL db_update_i64(*($1 + [148]), (int_64)0, $7, $2)
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [40]) = *(($1 + [32]))
	if ( (CALL memcmp(($8 + [16]), ($8 + [40]), [8]) == 0) ){ goto $label$7 }
	$7 = ($1 + [152])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130496, ($8 + [32]), $3)
	*($7) = $2
	
.LABEL $label$8
	CALL db_idx64_update($2, (int_64)0, ($8 + [40]))
	
.LABEL $label$7
	*($8 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp($4, ($8 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [156])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$10 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130497, ($8 + [32]), $3)
	*($1) = $2
	
.LABEL $label$10
	CALL db_idx64_update($2, (int_64)0, ($8 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

void .FUNC $169 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*($1 + [120]) = (int_64)1
	*(($8 = $7) + [16]) = *(($1 + [32]))
	*($8 + [24]) = *(($1 + [8]))
	$2 = *($1)
	CALL eosio_assert([1], [2896])
	$6 = *($1 + [88])
	$3 = ( *(($1 + [92])) ? uint_32($6 >> [1]) : ($6 & [1]) )
	$6 = ($3 + [120])
	$5 = (CASTING uint_64)(uint_32 $3)
	$3 = (($8 + [16]) + [8])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [100])
	$4 = ( *(($1 + [104])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$6 = ($4 + $6)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	if ( ($6 <= [513]) ){ goto $label$4 }
	$7 = CALL malloc($6)
	goto $label$3 
	
.LABEL $label$4
	$7 = ($7 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $7
	
.LABEL $label$3
	*($8 + [4]) = $7
	*($8) = $7
	*($8 + [8]) = ($7 + $6)
	CALL $134($8, $1)
	CALL db_update_i64(*($1 + [148]), (int_64)0, $7, $6)
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL free($7)
	
.LABEL $label$5
	if ( (uint_64)($2 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($8 + [40]) = *(($1 + [32]))
	if ( (CALL memcmp(($8 + [16]), ($8 + [40]), [8]) == 0) ){ goto $label$7 }
	$7 = ($1 + [152])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$8 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130496, ($8 + [32]), $2)
	*($7) = $6
	
.LABEL $label$8
	CALL db_idx64_update($6, (int_64)0, ($8 + [40]))
	
.LABEL $label$7
	*($8 + [40]) = *(($1 + [8]))
	if ( (CALL memcmp($3, ($8 + [40]), [8]) == 0) ){ goto $label$9 }
	$1 = ($1 + [156])
	$6 = *($1)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$10 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130497, ($8 + [32]), $2)
	*($1) = $6
	
.LABEL $label$10
	CALL db_idx64_update($6, (int_64)0, ($8 + [40]))
	
.LABEL $label$9
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $168 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC _ZN11dbetonedice8dbetdice8clearallEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	$4 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)7035937260545130496, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [48])
	$4 = CALL $128($2, $4)
	
.LOOP $label$2:
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$0 = [0]
	$3 = CALL db_next_i64(*($4 + [148]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $128($2, $3)
	
.LABEL $label$3
	CALL $124($2, $4)
	$4 = $0
	if ( $0 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $203($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $219($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $204($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1216])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1264])
	$5 = *($1 + [8])
	$2 = *($2)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$5), [1328])
	$3 = (int_64)
	*($1) = $3(*($1) - *($2)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1376])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1408])
	CALL eosio_assert([1], [80])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$5 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [48])
	$5 = *(($1 + [8]))
	$7 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$6 }
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64)0.5))
	
.LABEL $label$6
	*($1 + [16]) = $7
	*(($1 + [24])) = $5
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)$5 >> (uint_64)(int_64)8)), [1440])
	$6 = $9
	$2 = ($6 + [-64])
	*([0] + [4]) = $2
	*($8 + [12]) = $2
	*($8 + [8]) = $2
	*($8 + [16]) = $6
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [16])
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $46(($8 + [32]), ($8 + [24]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [64])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [48])
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1520])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $203([40])
	$6 = CALL $52($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = *($4)
	*($8 + [8]) = $5
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $53(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [1632])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1680])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1744])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

int_32 .FUNC $52 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*(($4 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [80])
	$3 = (uint_64)*($4) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [48])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [1072])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [1072])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1632])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1680])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [1744])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [68]))
}

int_32 .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $57($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $208($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $203($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $208($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $204($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $205($7)
	return (unreachable)
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $220(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $220(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $204(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $204(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

int_32 .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1808])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $58($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1072])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC vsprintf (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL vsnprintf($0, [2147483647], $1, $2)
}

int_32 .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($2 + [8]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($2 + [16]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((int_32)(*($1 + [8]) - *($1 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($1 + [4]), ($2 + [24]), [8])
	$0 = (*($1 + [4]) + [8])
	*($1 + [4]) = $0
	CALL eosio_assert(((int_32)(*($1 + [8]) - $0) > (int_32)[7]), [2704])
	CALL memcpy(*($1 + [4]), ($2 + [32]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

int_32 .FUNC $153 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $203([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [24])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [24])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $58($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [2704])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [2704])
	CALL memcpy($6, ($4 + [8]), [8])
	$6 = ($8 + [16])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [2704])
	CALL memcpy($6, ($4 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $86($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [2704])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC _ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	*($1) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 *($0)) * (float_64)(float_64)0.001))
	*($1 + [8]) = *($0 + [8])
	$3 = *($0 + [8])
	if ( ((int_64)$3 != (int_64)1397703940) ){ goto $label$9 }
	$3 = ((int_64)$2 * (int_64)10000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$2 = (int_64)5459781
	$0 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$3 != (int_64)5461508) ){ goto $label$6 }
	$3 = ((int_64)$2 * (int_64)10000000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$2 = (int_64)21334
	$0 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$13 }
	goto $label$4 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [3120])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)1397703940), [4416])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [5232])
	return 
	
.LABEL $label$6
	if ( ((int_64)$3 != (int_64)293455873288) ){ goto $label$3 }
	$3 = ((int_64)$2 * (int_64)100000000)
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$2 = (int_64)1146312005
	$0 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	
.LOOP $label$18:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$18 }
	
.LABEL $label$17
	$4 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$16 }
	goto $label$1 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [3120])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)5461508), [4416])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [5232])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [2656])
	return 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [3120])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)293455873288), [4416])
	CALL eosio_assert(((int_64)*($1) < (int_64)$3), [5232])
}

int_32 .FUNC $156 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [32]) = (int_64)0
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [3120])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [3120])
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [3120])
	return $0
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [2992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [2992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($0, *($2 + [4]), [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $1) > (uint_32)[7]), [2992])
	CALL memcpy(($0 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $154 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $203(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $153($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $204($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $204($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $204($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $155($0, *($1))
	CALL $155($0, *($1 + [4]))
	CALL $204($1)
	
.LABEL $label$1
}

void .FUNC $158 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice8openrollEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_64 $41
	int_64 $42
	int_64 $43
	int_64 $44
	int_32 $45
	int_32 $46
	int_32 $47
	int_32 $48
	int_32 $49
	int_32 $50
	float_64 $51
	int_32 $52
	float_32 $53
	int_32 $54
	int_32 $55
	$55 = (*([0] + [4]) - [608])
	*([0] + [4]) = $55
	*($55 + [600]) = $1
	CALL require_auth(*($0))
	$3 = ($0 + [48])
	*($55 + [592]) = $3
	CALL $120(($55 + [384]), ($55 + [592]), ($55 + [600]))
	$5 = *($55 + [388])
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((int_64)*($55 + [600]) != (int_64)*($5 + [32])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$3 }
	$48 = ((int_64)*($5 + [120]) == (int_64)2)
	$4 = [1]
	$52 = $5
	goto $label$1 
	
.LABEL $label$4
	$4 = [0]
	$5 = [0]
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	$52 = [0]
	$48 = [0]
	
.LABEL $label$1
	CALL eosio_assert($48, [5248])
	$7 = *($52 + [16])
	$6 = *($52 + [8])
	*(($48 = ($55 + [584]))) = *(($52 + [48]))
	*($55 + [576]) = *($52 + [40])
	CALL _ZNSt3__19to_stringEy(($55 + [560]), *($55 + [600]))
	$8 = *($52 + [136])
	CALL $220(($55 + [544]), ($52 + [88]))
	*($55 + [528]) = (int_64)0
	*($55 + [536]) = *($48)
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($55 + [536]) >> (uint_64)(int_64)8)
	$48 = [0]
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$9 }
	
.LABEL $label$8
	$49 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$49 = [0]
	
.LABEL $label$5
	CALL eosio_assert($49, [3120])
	*(($55 + [520])) = [0]
	*($55 + [512]) = (int_64)0
	$48 = CALL strlen([4224])
	if ( ((uint_32)$48 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$48 >= (uint_32)[11]) ){ goto $label$13 }
	*($55 + [512]) = ($48 << [1])
	$49 = (($55 + [512]) | [1])
	if ( $48 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$50 = (($48 + [16]) & [-16])
	$49 = CALL $203($50)
	*($55 + [512]) = ($50 | [1])
	*($55 + [520]) = $49
	*($55 + [516]) = $48
	
.LABEL $label$12
	CALL memcpy($49, [4224], $48)
	
.LABEL $label$11
	*(($49 + $48)) = [0]
	if ( ((int_64)*($52 + [120]) != (int_64)2) ){ goto $label$16 }
	$1 = *($52 + [128])
	if ( ((int_64)$1 == (int_64)2) ){ goto $label$31 }
	if ( ((int_64)$1 != (int_64)1) ){ goto $label$16 }
	$9 = CALL atoll(( *($55 + [552]) ? (($55 + [544]) | [1]) : (*($55 + [544]) & [1]) ))
	CALL _ZN11dbetonedice16_generateRandNumEyPhi($2, ($55 + [384]), [128])
	$10 = *(($55 + [584]))
	CALL eosio_assert([1], [3056])
	$48 = [0]
	$1 = (uint_64)$10 >> (uint_64)(int_64)8
	$42 = $1)
	
.LOOP $label$32:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $42) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$42 = (uint_64)$42 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$42) & (int_64)255) != (int_64)0) ){ goto $label$33 }
	
.LOOP $label$34:
	$42 = (uint_64)$42 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$42) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$34 }
	
.LABEL $label$33
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$32 }
	goto $label$29 
	
.LABEL $label$31
	CALL $147(($55 + [128]), ($55 + [544]), [3536])
	*($55 + [192]) = (int_64)1398362884
	*($55 + [184]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (int_64)5462355
	$48 = [0]
	
.LOOP $label$35:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$36 }
	
.LOOP $label$37:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$37 }
	
.LABEL $label$36
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$35 }
	goto $label$27 
	
.LABEL $label$30
	$52 = [0]
	
.LABEL $label$29
	CALL eosio_assert($52, [3120])
	$11 = *($55 + [576])
	CALL eosio_assert([1], [3056])
	$42 = ((uint_64)((uint_64)((int_64)$11 * (int_64)980000) / (uint_64)$8) / (uint_64)((int_64)$9 + (int_64)-1))
	$12 = ((uint_64)$42 / (uint_64)(int_64)10000)
	$48 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$38 }
	goto $label$25 
	
.LABEL $label$28
	$52 = [0]
	
.LABEL $label$27
	CALL eosio_assert($52, [3120])
	$42 = *((($55 + [576]) + [8]))
	*(($48 = (($55 + [184]) + [8]))) = $42
	*($55 + [184]) = (int_64)0
	CALL $220(($55 + [368]), ($55 + [128]))
	CALL _ZN11dbetonedice12_split_extraENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetENS7_11symbol_typeE(($55 + [72]), ($55 + [368]), ($55 + [184]), $42)
	if ( ((*($55 + [368]) & [1]) == 0) ){ goto $label$41 }
	CALL $204(*($55 + [376]))
	
.LABEL $label$41
	$43 = (int_64)$44 >> (int_64)63
	$44 = *($55 + [184])
	CALL __multi3(($55 + [24]), $44, $43), $8, (int_64)$8 >> (int_64)63))
	$9 = *($48)
	$1 = *((($55 + [24]) + [8]))
	$41 = *($55 + [24])
	CALL eosio_assert(( (uint_64)($41 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [5328])
	CALL eosio_assert(( ((uint_64)$41 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [5360])
	CALL eosio_assert(((int_64)$42 == (int_64)$9), [4416])
	$9 = *($55 + [576])
	CALL eosio_assert(((int_64)$9 >= (int_64)$41), [5152])
	if ( ( (int_64)($44 == 0) ? ((int_64)$43 < (int_64)0) : (int_64)($43 == 0) ) ){ goto $label$22 }
	CALL _ZN11dbetonedice16_generateRandNumEyPhi($2, ($55 + [384]), [128])
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)$42 >> (uint_64)(int_64)8)
	$48 = [0]
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$43 }
	
.LOOP $label$44:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$44 }
	
.LABEL $label$43
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$42 }
	goto $label$23 
	
.LABEL $label$26
	$52 = [0]
	
.LABEL $label$25
	CALL eosio_assert($52, [3120])
	$13 = ((uint_64)$11 / (uint_64)$8)
	if ( ((int_64)$8 == (int_64)1) ){ goto $label$45 }
	if ( ((int_64)$8 == (int_64)50) ){ goto $label$45 }
	if ( ((int_64)$8 != (int_64)10) ){ goto $label$16 }
	
.LABEL $label$45
	$47 = (((uint_64)$42 > (uint_64)(int_64)979999999) & ((int_64)((int_64)$12 / (int_64)$13) > (int_64)9))
	$17 = ((int_64)$9 ^ (int_64)-1)
	$16 = (int_64))((int_64)1 - $9)
	$15 = (int_64))((int_64)100 - $9)
	$18 = ((int_64)((int_64)$9 << (int_64)1) + (int_64)788)
	$14 = ((int_64)((int_64)$9 << (int_64)2) + (int_64)55)
	$28 = (($55 + [224]) | [1])
	$50 = (($55 + [224]) + [8])
	$49 = [0]
	
.LOOP $label$46:
	$52 = (($55 + [384]) + $49)
	$48 = ($49 + [45])
	$1 = ((int_64)((uint_64)((int_64)(CASTING uint_64)(uint_32 ($48 + *(($52 + [64])))) + (int_64)$2) % (uint_64)(int_64)1000) + (int_64)1)
	$41 = ((int_64)((uint_64)((int_64)(CASTING uint_64)(uint_32 ($48 + *($52))) + (int_64)$2) % (uint_64)(int_64)100) + (int_64)1)
	if ( ((int_32)($47 & ((uint_64)($41 <= $9) & ((int_64)$10 == (int_64)1397703940))) != (int_32)[1]) ){ goto $label$50 }
	$1 = ((uint_64)$1 / (uint_64)(int_64)10)
	if ( ((uint_64)$1 <= (uint_64)$14) ){ goto $label$49 }
	$41 = ((int_64)((uint_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) ^ (int_64)1311768467139281697) + (int_64)$41) % (uint_64)$15) + (int_64)$9)
	if ( ((uint_64)$1 <= (uint_64)(int_64)50) ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$50
	if ( ((int_64)$13 < (int_64)200000) ){ goto $label$49 }
	if ( ((uint_64)$41 >= (uint_64)$9) ){ goto $label$49 }
	if ( ((int_64)$10 != (int_64)1397703940) ){ goto $label$49 }
	if ( ((uint_64)$1 <= (uint_64)$18) ){ goto $label$49 }
	$41 = ((int_64)((uint_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) ^ (int_64)1311768467139281697) + (int_64)$41) % (uint_64)$15) + (int_64)$9)
	
.LABEL $label$49
	if ( ((uint_64)$1 > (uint_64)(int_64)50) ){ goto $label$47 }
	
.LABEL $label$48
	if ( ((uint_64)$41 >= (uint_64)$9) ){ goto $label$47 }
	$41 = ((int_64)((uint_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) ^ (int_64)1311768467139281697) + (int_64)$41) % (uint_64)$15) + (int_64)$9)
	
.LABEL $label$47
	$1 = (int_64)0
	$42 = (int_64)59
	$48 = [5296]
	$43 = (int_64)0
	
.LOOP $label$51:
	$44 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$52 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$52 = ($52 + [165])
	goto $label$53 
	
.LABEL $label$54
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$44 = ((int_64)(CASTING uint_64)(uint_32 ($52 & [31])) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$52
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$43 = ((int_64)$44 | (int_64)$43)
	$42 = ((int_64)$42 + (int_64)-5)
	if ( ((int_64)$42 != (int_64)-6) ){ goto $label$51 }
	$34 = ((uint_64)$41 > (uint_64)(int_64)98)
	if ( $34 ){ goto $label$56 }
	if ( ((int_64)$11 < (int_64)256000) ){ goto $label$56 }
	if ( ((((uint_64)$41 >= (uint_64)$9) & ((int_64)$6 == (int_64)$43)) == 0) ){ goto $label$56 }
	$1 = ((int_64)$16 + (int_64)$41)
	goto $label$55 
	
.LABEL $label$56
	$1 = (int_64)0
	$42 = (int_64)59
	$48 = [5296]
	$43 = (int_64)0
	
.LOOP $label$57:
	$44 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$58 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$52 = ($52 + [165])
	goto $label$59 
	
.LABEL $label$60
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$44 = ((int_64)(CASTING uint_64)(uint_32 ($52 & [31])) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$58
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$43 = ((int_64)$44 | (int_64)$43)
	$42 = ((int_64)$42 + (int_64)-5)
	if ( ((int_64)$42 != (int_64)-6) ){ goto $label$57 }
	$1 = ((int_64)$41 + (int_64)( ( ( (int_64)0 ? ( (int_64)0 ? $17 : ((int_64)$6 != (int_64)$43) ) : (uint_64)($41 <= $9) ) ? (int_64)0 : ((int_64)$11 > (int_64)255999) ) ? (int_64)0 : $34 ))
	
.LABEL $label$55
	CALL _ZNSt3__19to_stringEy(($55 + [224]), $1)
	$48 = *($55 + [224])
	$52 = ($48 & [1])
	CALL $209(($55 + [512]), ( *($50) ? $28 : $52 ), ( *($55 + [228]) ? uint_32($48 >> [1]) : $52 ))
	if ( ((*($55 + [224]) & [1]) == 0) ){ goto $label$61 }
	CALL $204(*($50))
	
.LABEL $label$61
	CALL $210(($55 + [512]), [5312])
	if ( ((uint_64)$1 >= (uint_64)$9) ){ goto $label$62 }
	CALL eosio_assert(((int_64)$10 == (int_64)*((($55 + [528]) + [8]))), [4800])
	$1 = ((int_64)*($55 + [528]) + (int_64)$12)
	*($55 + [528]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [4848])
	CALL eosio_assert(((int_64)*($55 + [528]) < (int_64)4611686018427387904), [4880])
	
.LABEL $label$62
	$49 = ($49 + [1])
	if ( (uint_64)((CASTING uint_64)(uint_32 $49) <= $8) ){ goto $label$46 }
	*($55 + [228]) = ($55 + [512])
	*($55 + [224]) = ($55 + [528])
	CALL eosio_assert($4, [2528])
	CALL $160(*($55 + [592]), $5, ($55 + [224]))
	goto $label$16 
	
.LABEL $label$24
	$52 = [0]
	
.LABEL $label$23
	CALL eosio_assert($52, [3120])
	$19 = ($0 + [172])
	$48 = *($19)
	if ( ($48 == 0) ){ goto $label$21 }
	$52 = ($0 + [172])
	
.LOOP $label$63:
	$49 = *($48 + [16])
	if ( ((int_32)$49 < (int_32)[2]) ){ goto $label$65 }
	$49 = *($48)
	if ( $49 ){ goto $label$64 }
	goto $label$20 
	
.LABEL $label$65
	if ( ((int_32)$49 == (int_32)[1]) ){ goto $label$19 }
	$52 = ($48 + [4])
	$49 = *($48 + [4])
	if ( ($49 == 0) ){ goto $label$19 }
	$48 = $52
	
.LABEL $label$64
	$52 = $48
	$48 = $49
	goto $label$63 
	
.LABEL $label$22
	CALL $155(($55 + [72]), *($55 + [76]))
	if ( ((*($55 + [128]) & [1]) == 0) ){ goto $label$15 }
	CALL $204(*($55 + [136]))
	goto $label$15 
	
.LABEL $label$21
	$48 = $19
	$52 = $19
	if ( *($52) ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$20
	$52 = $48
	
.LABEL $label$19
	if ( *($52) ){ goto $label$17 }
	
.LABEL $label$18
	*(($49 = CALL $203([32]))) = (int_64)0
	*($49 + [8]) = $48
	*($52) = $49
	*($49 + [24]) = (int_64)0
	*($49 + [16]) = [1]
	$48 = ($0 + [168])
	$50 = *(*($48))
	if ( ($50 == 0) ){ goto $label$66 }
	*($48) = $50
	$49 = *($52)
	
.LABEL $label$66
	CALL $15(*(($0 + [172])), $49)
	*(($48 = ($0 + [176]))) = (*($48) + [1])
	$42 = *(($55 + [584]))
	
.LABEL $label$17
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)$42 >> (uint_64)(int_64)8)
	$48 = [0]
	
.LOOP $label$69:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$68 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$70 }
	
.LOOP $label$71:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$68 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$71 }
	
.LABEL $label$70
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$69 }
	goto $label$67 
	
.LABEL $label$68
	$52 = [0]
	
.LABEL $label$67
	CALL eosio_assert($52, [3120])
	$48 = *($19)
	if ( ($48 == 0) ){ goto $label$76 }
	$52 = ($0 + [172])
	
.LOOP $label$77:
	$49 = *($48 + [16])
	if ( ((int_32)$49 < (int_32)[12]) ){ goto $label$79 }
	$49 = *($48)
	if ( $49 ){ goto $label$78 }
	goto $label$75 
	
.LABEL $label$79
	if ( ((int_32)$49 == (int_32)[11]) ){ goto $label$74 }
	$52 = ($48 + [4])
	$49 = *($48 + [4])
	if ( ($49 == 0) ){ goto $label$74 }
	$48 = $52
	
.LABEL $label$78
	$52 = $48
	$48 = $49
	goto $label$77 
	
.LABEL $label$76
	$48 = $19
	$52 = $19
	if ( *($52) ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$75
	$52 = $48
	
.LABEL $label$74
	if ( *($52) ){ goto $label$72 }
	
.LABEL $label$73
	*(($49 = CALL $203([32]))) = (int_64)0
	*($49 + [8]) = $48
	*($52) = $49
	*($49 + [24]) = (int_64)0
	*($49 + [16]) = [11]
	$48 = ($0 + [168])
	$50 = *(*($48))
	if ( ($50 == 0) ){ goto $label$80 }
	*($48) = $50
	$49 = *($52)
	
.LABEL $label$80
	CALL $15(*(($0 + [172])), $49)
	*(($48 = ($0 + [176]))) = (*($48) + [1])
	$42 = *(($55 + [584]))
	
.LABEL $label$72
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)$42 >> (uint_64)(int_64)8)
	$48 = [0]
	
.LOOP $label$83:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$82 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$84 }
	
.LOOP $label$85:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$82 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$85 }
	
.LABEL $label$84
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$83 }
	goto $label$81 
	
.LABEL $label$82
	$52 = [0]
	
.LABEL $label$81
	CALL eosio_assert($52, [3120])
	$41 = ((uint_64)$9 / (uint_64)$8)
	if ( ((int_64)$8 == (int_64)1) ){ goto $label$87 }
	if ( ((int_64)$8 == (int_64)50) ){ goto $label$87 }
	if ( ((int_64)$8 != (int_64)10) ){ goto $label$86 }
	
.LABEL $label$87
	$27 = ($0 + [184])
	$22 = ($0 + [172])
	$29 = (($55 + [224]) | [1])
	$28 = (($55 + [224]) | [4])
	$26 = (($55 + [352]) | [4])
	$25 = (($55 + [40]) | [1])
	$24 = (($55 + [272]) | [1])
	$23 = (($55 + [112]) | [1])
	$21 = (($55 + [72]) | [4])
	$20 = (($55 + [168]) | [1])
	$35 = (($55 + [168]) + [8])
	$37 = ($0 + [180])
	$39 = ($0 + [168])
	$40 = ($0 + [176])
	$30 = [0]
	$31 = [0]
	
.LOOP $label$88:
	$48 = *((($55 + [384]) + $30))
	*($35) = [0]
	*($55 + [168]) = (int_64)0
	$49 = ($31 + [45])
	$42 = ((uint_64)((int_64)(CASTING uint_64)(uint_32 ($48 + $49)) + (int_64)$2) % (uint_64)(int_64)12)
	$48 = CALL strlen([4224])
	if ( ((uint_32)$48 >= (uint_32)[-16]) ){ goto $label$93 }
	if ( ((uint_32)$48 >= (uint_32)[11]) ){ goto $label$96 }
	*($55 + [168]) = ($48 << [1])
	$52 = $20
	if ( $48 ){ goto $label$95 }
	goto $label$94 
	
.LABEL $label$96
	$50 = (($48 + [16]) & [-16])
	$52 = CALL $203($50)
	*($35) = $52
	*($55 + [168]) = ($50 | [1])
	*($55 + [172]) = $48
	
.LABEL $label$95
	CALL memcpy($52, [4224], $48)
	
.LABEL $label$94
	$46 = ($30 + [1])
	*(($52 + $48)) = [0]
	CALL eosio_assert([1], [3056])
	$1 = (int_64)5462355
	$48 = [0]
	
.LOOP $label$99:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$98 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$100 }
	
.LOOP $label$101:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$98 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$101 }
	
.LABEL $label$100
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$99 }
	goto $label$97 
	
.LABEL $label$98
	$52 = [0]
	
.LABEL $label$97
	CALL eosio_assert($52, [3120])
	$36 = (($55 + [576]) + [8])
	$44 = *($36)
	$48 = ((CASTING uint_32)(uint_64 $42) & [15])
	if ( ((int_32)$48 == (int_32)[11]) ){ goto $label$91 }
	if ( $48 ){ goto $label$92 }
	*(($45 = (($55 + [352]) + [8]))) = [0]
	*($55 + [356]) = [0]
	*($55 + [352]) = $26
	$43 = ((int_64)((uint_64)((int_64)(CASTING uint_64)(uint_32 ($49 + *((($55 + [384]) + $46)))) + (int_64)$2) % (uint_64)(int_64)100) + (int_64)1)
	$34 = *($37)
	if ( ((int_32)$34 == (int_32)$27) ){ goto $label$102 }
	$49 = [0]
	$48 = $26
	
.LOOP $label$103:
	$47 = ($34 + [16])
	if ( ((int_32)$48 == (int_32)$26) ){ goto $label$114 }
	$52 = $49
	if ( ($49 == 0) ){ goto $label$113 }
	
.LOOP $label$115:
	$48 = $52
	$52 = *($48 + [4])
	if ( $52 ){ goto $label$115 }
	goto $label$112 
	
.LABEL $label$114
	$48 = $26
	if ( $49 ){ goto $label$111 }
	goto $label$109 
	
.LABEL $label$113
	$52 = $26
	
.LOOP $label$116:
	$48 = *($52 + [8])
	$50 = ((int_32)*($48) == (int_32)$52)
	$52 = $48
	if ( $50 ){ goto $label$116 }
	
.LABEL $label$112
	$52 = *($47)
	if ( ((int_32)*($48 + [16]) >= (int_32)$52) ){ goto $label$110 }
	if ( ($49 == 0) ){ goto $label$109 }
	
.LABEL $label$111
	$49 = ($48 + [4])
	if ( *($49) ){ goto $label$104 }
	goto $label$105 
	
.LABEL $label$110
	if ( ($49 == 0) ){ goto $label$109 }
	$50 = $26
	
.LOOP $label$117:
	$48 = *($49 + [16])
	if ( ((int_32)$52 >= (int_32)$48) ){ goto $label$119 }
	$48 = *($49)
	if ( $48 ){ goto $label$118 }
	goto $label$108 
	
.LABEL $label$119
	if ( ((int_32)$48 >= (int_32)$52) ){ goto $label$107 }
	$50 = ($49 + [4])
	$48 = *($49 + [4])
	if ( ($48 == 0) ){ goto $label$106 }
	$49 = $50
	
.LABEL $label$118
	$50 = $49
	$49 = $48
	goto $label$117 
	
.LABEL $label$109
	$48 = $26
	$49 = $26
	if ( *($49) ){ goto $label$104 }
	goto $label$105 
	
.LABEL $label$108
	$48 = $49
	if ( *($49) ){ goto $label$104 }
	goto $label$105 
	
.LABEL $label$107
	$48 = $49
	$49 = $50
	if ( *($49) ){ goto $label$104 }
	goto $label$105 
	
.LABEL $label$106
	$48 = $49
	$49 = $50
	if ( *($49) ){ goto $label$104 }
	
.LABEL $label$105
	$52 = CALL $203([32])
	$1 = *(($47 + [8]))
	$42 = *($47)
	*($52) = (int_64)0
	*(($52 + [24])) = $1
	*($52 + [16]) = $42
	*($52 + [8]) = $48
	*($49) = $52
	$48 = *(*($55 + [352]))
	if ( ($48 == 0) ){ goto $label$120 }
	*($55 + [352]) = $48
	$52 = *($49)
	
.LABEL $label$120
	CALL $15(*($55 + [356]), $52)
	*($45) = (*($45) + [1])
	
.LABEL $label$104
	$48 = *($34 + [4])
	if ( ($48 == 0) ){ goto $label$122 }
	
.LOOP $label$123:
	$52 = $48
	$48 = *($52)
	if ( $48 ){ goto $label$123 }
	goto $label$121 
	
.LABEL $label$122
	$52 = *($34 + [8])
	if ( ((int_32)*($52) == (int_32)$34) ){ goto $label$121 }
	$49 = ($34 + [8])
	
.LOOP $label$124:
	$48 = *($49)
	$49 = ($48 + [8])
	$52 = *($48 + [8])
	if ( ((int_32)$48 != (int_32)*($52)) ){ goto $label$124 }
	
.LABEL $label$121
	if ( ((int_32)$52 == (int_32)$27) ){ goto $label$102 }
	$49 = *($55 + [356])
	$48 = *($55 + [352])
	$34 = $52
	goto $label$103 
	
.LABEL $label$102
	$45 = ($30 + [2])
	$32 = CALL _ZN11dbetonedice8divcountEyNSt3__13mapIidNS0_4lessIiEENS0_9allocatorINS0_4pairIKidEEEEEE($43, ($55 + [352]))
	CALL $67(($55 + [352]), *($55 + [356]))
	if ( ((int_32)$32 < (int_32)[1]) ){ goto $label$125 }
	$33 = ($32 + [2])
	$42 = (int_64)0
	$54 = [0]
	$46 = [0]
	
.LOOP $label$126:
	$1 = ((int_64)((uint_64)((int_64)(CASTING int_64)(int_32 (($46 + *((($55 + [384]) + $45))) + [45])) + (int_64)$2) % (uint_64)(int_64)11) + (int_64)1)
	if ( ((int_64)$1 != (int_64)11) ){ goto $label$128 }
	CALL _ZNSt3__19to_stringEy(($55 + [224]), (int_64)11)
	$48 = *($55 + [224])
	$52 = ($48 & [1])
	$49 = (($55 + [224]) + [8])
	CALL $209(($55 + [168]), ( *($49) ? $29 : $52 ), ( *($55 + [228]) ? uint_32($48 >> [1]) : $52 ))
	if ( ((*($55 + [224]) & [1]) == 0) ){ goto $label$129 }
	CALL $204(*($49))
	
.LABEL $label$129
	CALL $210(($55 + [168]), [5312])
	$54 = ($54 + [2])
	goto $label$127 
	
.LABEL $label$128
	CALL _ZNSt3__19to_stringEy(($55 + [224]), $1)
	$48 = *($55 + [224])
	$52 = ($48 & [1])
	$38 = (($55 + [224]) + [8])
	CALL $209(($55 + [168]), ( *($38) ? $29 : $52 ), ( *($55 + [228]) ? uint_32($48 >> [1]) : $52 ))
	if ( ((*($55 + [224]) & [1]) == 0) ){ goto $label$130 }
	CALL $204(*($38))
	
.LABEL $label$130
	CALL $210(($55 + [168]), [5312])
	CALL _ZN11dbetonedice11_getWinsMapEy(($55 + [224]), $1)
	$52 = *($55 + [72])
	if ( ((int_32)$52 == (int_32)$21) ){ goto $label$131 }
	
.LOOP $label$132:
	$34 = $52
	$49 = *($55 + [228])
	if ( ($49 == 0) ){ goto $label$133 }
	$1 = *($34 + [24])
	$52 = *($34 + [16])
	$47 = $28
	$48 = $49
	
.LOOP $label$135:
	if ( ((int_32)*($48 + [16]) >= (int_32)$52) ){ goto $label$136 }
	$48 = *($48 + [4])
	if ( $48 ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$136
	$47 = $48
	$50 = *($48)
	$48 = $50
	if ( $50 ){ goto $label$135 }
	
.LABEL $label$134
	if ( ((int_32)$47 == (int_32)$28) ){ goto $label$133 }
	$50 = $28
	if ( ((int_32)$52 < (int_32)*($47 + [16])) ){ goto $label$133 }
	
.LOOP $label$138:
	$48 = *($49 + [16])
	if ( ((int_32)$52 >= (int_32)$48) ){ goto $label$140 }
	$50 = $49
	$48 = *($49)
	if ( $48 ){ goto $label$139 }
	goto $label$137 
	
.LABEL $label$140
	if ( ((int_32)$48 >= (int_32)$52) ){ goto $label$137 }
	$50 = ($49 + [4])
	$48 = *($49 + [4])
	if ( ($48 == 0) ){ goto $label$137 }
	
.LABEL $label$139
	$49 = $48
	goto $label$138 
	
.LABEL $label$137
	$48 = *($50)
	if ( $48 ){ goto $label$141 }
	*(($48 = CALL $203([24]))) = (int_64)0
	*($48 + [8]) = $49
	*($50) = $48
	*($48 + [20]) = [0]
	*($48 + [16]) = $52
	$49 = $48
	$47 = *(*($55 + [224]))
	if ( ($47 == 0) ){ goto $label$142 }
	*($55 + [224]) = $47
	$49 = *($50)
	
.LABEL $label$142
	CALL $15(*($55 + [228]), $49)
	*($38) = (*($38) + [1])
	
.LABEL $label$141
	if ( (*(($48 + [20])) == 0) ){ goto $label$147 }
	$48 = *($19)
	if ( ($48 == 0) ){ goto $label$146 }
	$49 = $22
	
.LOOP $label$148:
	$50 = *($48 + [16])
	if ( ((int_32)$52 >= (int_32)$50) ){ goto $label$150 }
	$50 = *($48)
	if ( $50 ){ goto $label$149 }
	goto $label$145 
	
.LABEL $label$150
	if ( ((int_32)$50 >= (int_32)$52) ){ goto $label$144 }
	$49 = ($48 + [4])
	$50 = *($48 + [4])
	if ( ($50 == 0) ){ goto $label$144 }
	$48 = $49
	
.LABEL $label$149
	$49 = $48
	$48 = $50
	goto $label$148 
	
.LABEL $label$147
	$51 = (float_64)0
	goto $label$143 
	
.LABEL $label$146
	$48 = $19
	$49 = $19
	goto $label$144 
	
.LABEL $label$145
	$49 = $48
	
.LABEL $label$144
	$51 = (CASTING float_64)(int_64 $1)
	$50 = *($49)
	if ( $50 ){ goto $label$151 }
	*(($50 = CALL $203([32]))) = (int_64)0
	*($50 + [8]) = $48
	*($49) = $50
	*($50 + [24]) = (int_64)0
	*($50 + [16]) = $52
	$48 = $50
	$52 = *(*($39))
	if ( ($52 == 0) ){ goto $label$152 }
	*($39) = $52
	$48 = *($49)
	
.LABEL $label$152
	CALL $15(*(($0 + [172])), $48)
	*($40) = (*($40) + [1])
	
.LABEL $label$151
	$51 = ((float_64)$51 * (float_64)*(($50 + [24])))
	
.LABEL $label$143
	$42 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $42) + (float_64)$51))
	
.LABEL $label$133
	$48 = *($34 + [4])
	if ( ($48 == 0) ){ goto $label$154 }
	
.LOOP $label$155:
	$52 = $48
	$48 = *($52)
	if ( $48 ){ goto $label$155 }
	goto $label$153 
	
.LABEL $label$154
	$52 = *($34 + [8])
	if ( ((int_32)*($52) == (int_32)$34) ){ goto $label$153 }
	$49 = ($34 + [8])
	
.LOOP $label$156:
	$48 = *($49)
	$49 = ($48 + [8])
	$52 = *($48 + [8])
	if ( ((int_32)$48 != (int_32)*($52)) ){ goto $label$156 }
	
.LABEL $label$153
	if ( ((int_32)$52 != (int_32)$21) ){ goto $label$132 }
	
.LABEL $label$131
	CALL $162(($55 + [224]), *($55 + [228]))
	
.LABEL $label$127
	$45 = ($45 + [1])
	$46 = ($46 + [1])
	if ( ((int_32)$46 != (int_32)$32) ){ goto $label$126 }
	$30 = ($33 + $30)
	goto $label$89 
	
.LABEL $label$125
	$54 = [0]
	$42 = (int_64)0
	$30 = $45
	goto $label$89 
	
.LABEL $label$93
	CALL $205(($55 + [168]))
	
.LABEL $label$92
	CALL _ZNSt3__19to_stringEy(($55 + [224]), $42)
	$48 = *($55 + [224])
	$52 = ($48 & [1])
	$45 = (($55 + [224]) + [8])
	CALL $209(($55 + [168]), ( *($45) ? $29 : $52 ), ( *($55 + [228]) ? uint_32($48 >> [1]) : $52 ))
	if ( ((*($55 + [224]) & [1]) == 0) ){ goto $label$157 }
	CALL $204(*($45))
	
.LABEL $label$157
	CALL $210(($55 + [168]), [5312])
	CALL _ZN11dbetonedice11_getWinsMapEy(($55 + [224]), $42)
	$42 = (int_64)0
	$52 = *($55 + [72])
	if ( ((int_32)$52 == (int_32)$21) ){ goto $label$158 }
	
.LOOP $label$159:
	$34 = $52
	$49 = *($55 + [228])
	if ( ($49 == 0) ){ goto $label$160 }
	$1 = *($34 + [24])
	$52 = *($34 + [16])
	$47 = $28
	$48 = $49
	
.LOOP $label$162:
	if ( ((int_32)*($48 + [16]) >= (int_32)$52) ){ goto $label$163 }
	$48 = *($48 + [4])
	if ( $48 ){ goto $label$162 }
	goto $label$161 
	
.LABEL $label$163
	$47 = $48
	$50 = *($48)
	$48 = $50
	if ( $50 ){ goto $label$162 }
	
.LABEL $label$161
	if ( ((int_32)$47 == (int_32)$28) ){ goto $label$160 }
	$50 = $28
	if ( ((int_32)$52 < (int_32)*($47 + [16])) ){ goto $label$160 }
	
.LOOP $label$165:
	$48 = *($49 + [16])
	if ( ((int_32)$52 >= (int_32)$48) ){ goto $label$167 }
	$50 = $49
	$48 = *($49)
	if ( $48 ){ goto $label$166 }
	goto $label$164 
	
.LABEL $label$167
	if ( ((int_32)$48 >= (int_32)$52) ){ goto $label$164 }
	$50 = ($49 + [4])
	$48 = *($49 + [4])
	if ( ($48 == 0) ){ goto $label$164 }
	
.LABEL $label$166
	$49 = $48
	goto $label$165 
	
.LABEL $label$164
	$48 = *($50)
	if ( $48 ){ goto $label$168 }
	*(($48 = CALL $203([24]))) = (int_64)0
	*($48 + [8]) = $49
	*($50) = $48
	*($48 + [20]) = [0]
	*($48 + [16]) = $52
	$49 = $48
	$47 = *(*($55 + [224]))
	if ( ($47 == 0) ){ goto $label$169 }
	*($55 + [224]) = $47
	$49 = *($50)
	
.LABEL $label$169
	CALL $15(*($55 + [228]), $49)
	*($45) = (*($45) + [1])
	
.LABEL $label$168
	if ( (*(($48 + [20])) == 0) ){ goto $label$174 }
	$48 = *($19)
	if ( ($48 == 0) ){ goto $label$173 }
	$49 = $22
	
.LOOP $label$175:
	$50 = *($48 + [16])
	if ( ((int_32)$52 >= (int_32)$50) ){ goto $label$177 }
	$50 = *($48)
	if ( $50 ){ goto $label$176 }
	goto $label$172 
	
.LABEL $label$177
	if ( ((int_32)$50 >= (int_32)$52) ){ goto $label$171 }
	$49 = ($48 + [4])
	$50 = *($48 + [4])
	if ( ($50 == 0) ){ goto $label$171 }
	$48 = $49
	
.LABEL $label$176
	$49 = $48
	$48 = $50
	goto $label$175 
	
.LABEL $label$174
	$51 = (float_64)0
	goto $label$170 
	
.LABEL $label$173
	$48 = $19
	$49 = $19
	goto $label$171 
	
.LABEL $label$172
	$49 = $48
	
.LABEL $label$171
	$51 = (CASTING float_64)(int_64 $1)
	$50 = *($49)
	if ( $50 ){ goto $label$178 }
	*(($50 = CALL $203([32]))) = (int_64)0
	*($50 + [8]) = $48
	*($49) = $50
	*($50 + [24]) = (int_64)0
	*($50 + [16]) = $52
	$48 = $50
	$52 = *(*($39))
	if ( ($52 == 0) ){ goto $label$179 }
	*($39) = $52
	$48 = *($49)
	
.LABEL $label$179
	CALL $15(*(($0 + [172])), $48)
	*($40) = (*($40) + [1])
	
.LABEL $label$178
	$51 = ((float_64)$51 * (float_64)*(($50 + [24])))
	
.LABEL $label$170
	$42 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $42) + (float_64)$51))
	
.LABEL $label$160
	$48 = *($34 + [4])
	if ( ($48 == 0) ){ goto $label$181 }
	
.LOOP $label$182:
	$52 = $48
	$48 = *($52)
	if ( $48 ){ goto $label$182 }
	goto $label$180 
	
.LABEL $label$181
	$52 = *($34 + [8])
	if ( ((int_32)*($52) == (int_32)$34) ){ goto $label$180 }
	$49 = ($34 + [8])
	
.LOOP $label$183:
	$48 = *($49)
	$49 = ($48 + [8])
	$52 = *($48 + [8])
	if ( ((int_32)$48 != (int_32)*($52)) ){ goto $label$183 }
	
.LABEL $label$180
	if ( ((int_32)$52 != (int_32)$21) ){ goto $label$159 }
	
.LABEL $label$158
	CALL $162(($55 + [224]), *($55 + [228]))
	$54 = [0]
	goto $label$90 
	
.LABEL $label$91
	CALL _ZNSt3__19to_stringEy(($55 + [224]), $42)
	$48 = *($55 + [224])
	$52 = ($48 & [1])
	$49 = (($55 + [224]) + [8])
	CALL $209(($55 + [168]), ( *($49) ? $29 : $52 ), ( *($55 + [228]) ? uint_32($48 >> [1]) : $52 ))
	if ( ((*($55 + [224]) & [1]) == 0) ){ goto $label$184 }
	CALL $204(*($49))
	
.LABEL $label$184
	CALL $210(($55 + [168]), [5312])
	$54 = [2]
	$42 = (int_64)0
	
.LABEL $label$90
	$30 = $46
	
.LABEL $label$89
	CALL eosio_assert(((int_64)$44 == (int_64)*((($55 + [528]) + [8]))), [4800])
	$1 = ((int_64)*($55 + [528]) + (int_64)$42)
	*($55 + [528]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [4848])
	CALL eosio_assert(((int_64)*($55 + [528]) < (int_64)4611686018427387904), [4880])
	$1 = *($36)
	if ( ((int_64)$1 == (int_64)5461508) ){ goto $label$188 }
	if ( ((int_64)$1 == (int_64)1397703940) ){ goto $label$187 }
	if ( ((int_64)$1 != (int_64)293455873288) ){ goto $label$186 }
	$53 = ((float_32)(CASTING float_32)(int_64 $42) / (float_32)(float_32)1e8)
	$1 = (int_64)0
	goto $label$185 
	
.LABEL $label$188
	$53 = ((float_32)(CASTING float_32)(int_64 $42) / (float_32)(float_32)1e4)
	$1 = (int_64)0
	goto $label$185 
	
.LABEL $label$187
	$53 = ((float_32)(CASTING float_32)(int_64 $42) / (float_32)(float_32)1e4)
	$1 = ((int_64)((int_64)( (CASTING int_64)(int_32 ((int_32)$54 * (int_32)[100])) ? (int_64)100 : $54 ) * (int_64)$41) / (int_64)10000)
	goto $label$185 
	
.LABEL $label$186
	CALL eosio_assert([0], [3584])
	$1 = (int_64)0
	$53 = (float_32)0
	
.LABEL $label$185
	*($55 + [16]) = (PROMOTE float_64)(float_32 $53)
	CALL sprintf(($55 + [224]), [5392], ($55 + [16]))
	*(($49 = (($55 + [112]) + [8]))) = [0]
	*($55 + [112]) = (int_64)0
	$48 = CALL strlen(($55 + [224]))
	if ( ((uint_32)$48 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$48 >= (uint_32)[11]) ){ goto $label$191 }
	*($55 + [112]) = ($48 << [1])
	$52 = $23
	if ( $48 ){ goto $label$190 }
	goto $label$189 
	
.LABEL $label$191
	$50 = (($48 + [16]) & [-16])
	$52 = CALL $203($50)
	*($49) = $52
	*($55 + [112]) = ($50 | [1])
	*($55 + [116]) = $48
	
.LABEL $label$190
	CALL memcpy($52, ($55 + [224]), $48)
	
.LABEL $label$189
	*(($52 + $48)) = [0]
	CALL $215(($55 + [288]), [5408], ($55 + [112]))
	$48 = CALL $210(($55 + [288]), [5424])
	$52 = ($48 + [8])
	*(($34 = (($55 + [304]) + [8]))) = *($52)
	*($55 + [304]) = *($48)
	*($48) = [0]
	*(($48 + [4])) = [0]
	*($52) = [0]
	CALL _ZNSt3__19to_stringEy(($55 + [272]), $1)
	$48 = *($55 + [272])
	$52 = ($48 & [1])
	$45 = (($55 + [272]) + [8])
	$48 = CALL $209(($55 + [304]), ( *($45) ? $24 : $52 ), ( *($55 + [276]) ? uint_32($48 >> [1]) : $52 ))
	$52 = ($48 + [8])
	*(($47 = (($55 + [320]) + [8]))) = *($52)
	*($55 + [320]) = *($48)
	*($48) = [0]
	*(($48 + [4])) = [0]
	*($52) = [0]
	$48 = CALL $210(($55 + [320]), [5440])
	$52 = ($48 + [8])
	*(($46 = (($55 + [336]) + [8]))) = *($52)
	*($55 + [336]) = *($48)
	*($48) = [0]
	*(($48 + [4])) = [0]
	*($52) = [0]
	$48 = *($55 + [168])
	$50 = ($48 & [1])
	$48 = CALL $209(($55 + [336]), ( *($35) ? $20 : $50 ), ( *($55 + [172]) ? uint_32($48 >> [1]) : $50 ))
	$50 = ($48 + [8])
	*(($52 = (($55 + [40]) + [8]))) = *($50)
	*($55 + [40]) = *($48)
	*($48) = [0]
	*(($48 + [4])) = [0]
	*($50) = [0]
	$48 = *($55 + [40])
	$50 = ($48 & [1])
	CALL $209(($55 + [512]), ( *($52) ? $25 : $50 ), ( *($55 + [44]) ? uint_32($48 >> [1]) : $50 ))
	if ( ((*($55 + [40]) & [1]) == 0) ){ goto $label$192 }
	CALL $204(*($52))
	
.LABEL $label$192
	if ( ((*($55 + [336]) & [1]) == 0) ){ goto $label$193 }
	CALL $204(*($46))
	
.LABEL $label$193
	if ( ((*($55 + [320]) & [1]) == 0) ){ goto $label$194 }
	CALL $204(*($47))
	
.LABEL $label$194
	if ( ((*($55 + [272]) & [1]) == 0) ){ goto $label$195 }
	CALL $204(*($45))
	
.LABEL $label$195
	if ( ((*($55 + [304]) & [1]) == 0) ){ goto $label$196 }
	CALL $204(*($34))
	
.LABEL $label$196
	if ( ((*($55 + [288]) & [1]) == 0) ){ goto $label$197 }
	CALL $204(*((($55 + [288]) + [8])))
	
.LABEL $label$197
	CALL $210(($55 + [512]), [5456])
	if ( ((*($55 + [112]) & [1]) == 0) ){ goto $label$198 }
	CALL $204(*($49))
	
.LABEL $label$198
	if ( ((*($55 + [168]) & [1]) == 0) ){ goto $label$199 }
	CALL $204(*($35))
	
.LABEL $label$199
	$31 = ($31 + [1])
	if ( (uint_64)((CASTING uint_64)(uint_32 $31) <= $8) ){ goto $label$88 }
	*($55 + [228]) = ($55 + [512])
	*($55 + [224]) = ($55 + [528])
	CALL eosio_assert($4, [2528])
	CALL $161(*($55 + [592]), $5, ($55 + [224]))
	
.LABEL $label$86
	CALL $155(($55 + [72]), *($55 + [76]))
	if ( ((*($55 + [128]) & [1]) == 0) ){ goto $label$16 }
	CALL $204(*($55 + [136]))
	
.LABEL $label$16
	CALL eosio_assert($4, [2528])
	CALL $163(*($55 + [592]), $5)
	*((($55 + [224]) + [32])) = [0]
	*($55 + [240]) = (int_64)-1
	*($55 + [248]) = (int_64)0
	$1 = *($0)
	*($55 + [224]) = $1
	*($55 + [232]) = $1
	$48 = CALL db_find_i64($1, $1, (int_64)-3104856670496604160, $6)
	if ( ((int_32)$48 < (int_32)[0]) ){ goto $label$200 }
	$48 = CALL $121(($55 + [224]), $48)
	CALL eosio_assert(((int_32)*($48 + [32]) == (int_32)($55 + [224])), [2464])
	if ( ((int_64)*($48 + [8]) != (int_64)*($55 + [600])) ){ goto $label$200 }
	if ( ((int_64)*($48 + [16]) != (int_64)2) ){ goto $label$200 }
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$52 = CALL db_next_i64(*($48 + [36]), ($55 + [384]))
	if ( ((int_32)$52 < (int_32)[0]) ){ goto $label$201 }
	CALL $121(($55 + [224]), $52)
	
.LABEL $label$201
	CALL $164(($55 + [224]), $48)
	
.LABEL $label$200
	*($55 + [200]) = (int_64)-1
	*($55 + [208]) = [0]
	$42 = *($0)
	*($55 + [184]) = $42
	$52 = (($55 + [576]) + [8])
	$1 = *($52)
	$44 = (uint_64)$1 >> (uint_64)(int_64)8
	*($55 + [192]) = $44)
	*(($55 + [212])) = [0]
	*((($55 + [184]) + [32])) = [0]
	$48 = CALL db_find_i64($42, $44, (int_64)4986959047337967616, $6)
	if ( ((int_32)$48 < (int_32)[0]) ){ goto $label$203 }
	$48 = CALL $165(($55 + [184]), $48)
	CALL eosio_assert(((int_32)*($48 + [48]) == (int_32)($55 + [184])), [2464])
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($48 + [48]) == (int_32)($55 + [184])), [2784])
	CALL eosio_assert(((int_64)*($55 + [184]) == (int_64)CALL $fimport$14()), [2832])
	$1 = *($48)
	CALL eosio_assert(((int_64)*($52) == (int_64)*(($48 + [16]))), [4800])
	$42 = ((int_64)*($48 + [8]) + (int_64)*($55 + [576]))
	*($48 + [8]) = $42
	CALL eosio_assert(((int_64)$42 > (int_64)-4611686018427387904), [4848])
	CALL eosio_assert(((int_64)*($48 + [8]) < (int_64)4611686018427387904), [4880])
	CALL eosio_assert(((int_64)*((($55 + [528]) + [8])) == (int_64)*(($48 + [32]))), [4800])
	$42 = ((int_64)*($48 + [24]) + (int_64)*($55 + [528]))
	*($48 + [24]) = $42
	CALL eosio_assert(((int_64)$42 > (int_64)-4611686018427387904), [4848])
	CALL eosio_assert(((int_64)*($48 + [24]) < (int_64)4611686018427387904), [4880])
	CALL eosio_assert(((int_64)$1 == (int_64)*($48)), [2896])
	*($55 + [136]) = (($55 + [384]) + [48])
	*($55 + [132]) = ($55 + [384])
	*($55 + [128]) = ($55 + [384])
	CALL $166(($55 + [128]), $48)
	CALL db_update_i64(*($48 + [52]), (int_64)0, ($55 + [384]), [48])
	$48 = (($55 + [184]) + [16])
	if ( (uint_64)($1 <= *($48)) ){ goto $label$204 }
	*($48) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$204
	$1 = *(($55 + [584]))
	goto $label$202 
	
.LABEL $label$203
	$44 = *($0)
	CALL eosio_assert(((int_64)*($55 + [184]) == (int_64)CALL $fimport$14()), [2720])
	$48 = CALL $203([64])
	$49 = CALL $167($48)
	*($48 + [48]) = ($55 + [184])
	*($48) = $6
	*(($48 + [20])) = *((($55 + [576]) + [12]))
	*(($48 + [16])) = *($52)
	*(($48 + [12])) = *($55 + [580])
	*($48 + [8]) = *($55 + [576])
	*(($48 + [32])) = *((($55 + [528]) + [8]))
	*($48 + [24]) = *($55 + [528])
	*($48 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($55 + [136]) = (($55 + [384]) + [48])
	*($55 + [132]) = ($55 + [384])
	*($55 + [128]) = ($55 + [384])
	CALL $166(($55 + [128]), $49)
	$42 = *($48)
	$49 = CALL db_store_i64(*((($55 + [184]) + [8])), (int_64)4986959047337967616, $44, $42, ($55 + [384]), [48])
	*($48 + [52]) = $49
	$52 = (($55 + [184]) + [16])
	if ( (uint_64)($42 <= *($52)) ){ goto $label$205 }
	*($52) = ( (int_64)-2 ? ((int_64)$42 + (int_64)1) : ((uint_64)$42 > (uint_64)(int_64)-3) )
	
.LABEL $label$205
	*($55 + [128]) = $48
	$42 = *($48)
	*($55 + [384]) = $42
	*($55 + [72]) = $49
	$50 = ($55 + [212])
	$52 = *($50)
	if ( ((uint_32)$52 >= (uint_32)*((($55 + [184]) + [32]))) ){ goto $label$207 }
	*($52 + [8]) = $42
	*($52 + [16]) = $49
	*($55 + [128]) = [0]
	*($52) = $48
	*($50) = ($52 + [24])
	goto $label$206 
	
.LABEL $label$207
	CALL $168(($55 + [208]), ($55 + [128]), ($55 + [384]), ($55 + [72]))
	
.LABEL $label$206
	$48 = *($55 + [128])
	*($55 + [128]) = [0]
	if ( ($48 == 0) ){ goto $label$202 }
	CALL $204($48)
	
.LABEL $label$202
	*($55 + [176]) = $1
	*($55 + [168]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($55 + [176]) >> (uint_64)(int_64)8)
	$48 = [0]
	
.LOOP $label$210:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$209 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$211 }
	
.LOOP $label$212:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$209 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$212 }
	
.LABEL $label$211
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$210 }
	goto $label$208 
	
.LABEL $label$209
	$52 = [0]
	
.LABEL $label$208
	CALL eosio_assert($52, [3120])
	$1 = *($55 + [576])
	$52 = (($55 + [576]) + [8])
	$42 = *($52)
	CALL eosio_assert(((int_64)*((($55 + [528]) + [8])) == (int_64)$42), [5472])
	$1 = (int_64)
	CALL eosio_assert(((int_64)$1($1 - *($55 + [528]))) > (int_64)-4611686018427387904), [5520])
	CALL eosio_assert(((int_64)$1 < (int_64)4611686018427387904), [5552])
	*((($55 + [168]) + [8])) = $42
	*($55 + [168]) = $1
	*($55 + [304]) = $3
	CALL $120(($55 + [384]), ($55 + [304]), ($55 + [600]))
	$49 = [0]
	$48 = *($55 + [388])
	if ( ($48 == 0) ){ goto $label$213 }
	$49 = ( $48 ? [0] : ((int_64)*($55 + [600]) == (int_64)*($48 + [32])) )
	
.LABEL $label$213
	$50 = ((int_32)$49 != (int_32)[0])
	CALL eosio_assert($50, [5584])
	CALL eosio_assert((int_64)(*($49 + [120]) == 0), [5600])
	$44 = *($55 + [576])
	$42 = (int_64)-100000
	$9 = *($52)
	if ( ((int_64)$9 == (int_64)1397703940) ){ goto $label$214 }
	$42 = ( (int_64)-2000000000 ? (int_64)0 : ((int_64)$9 == (int_64)293455873288) )
	
.LABEL $label$214
	$52 = [0]
	*(($55 + [160])) = [0]
	*($55 + [144]) = (int_64)-1
	*($55 + [152]) = (int_64)0
	$1 = *($0)
	*($55 + [128]) = $1
	*($55 + [136]) = $1
	$48 = CALL db_find_i64($1, $1, (int_64)4986958867379634176, $6)
	if ( ((int_32)$48 < (int_32)[0]) ){ goto $label$217 }
	$48 = CALL $78(($55 + [128]), $48)
	CALL eosio_assert(((int_32)*($48 + [32]) == (int_32)($55 + [128])), [2464])
	$1 = *($48 + [24])
	if ( ((int_64)$1 == (int_64)2) ){ goto $label$215 }
	$52 = [1]
	if ( ((int_64)$1 != (int_64)1) ){ goto $label$217 }
	CALL $215(($55 + [384]), [5616], ($55 + [560]))
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $6, ($55 + [528]), ($55 + [384]), *($55 + [600]), (int_64)0)
	CALL eosio_assert($50, [2528])
	CALL $169(*($55 + [304]), $49)
	if ( ((*($55 + [384]) & [1]) == 0) ){ goto $label$216 }
	CALL $204(*($55 + [392]))
	goto $label$216 
	
.LABEL $label$217
	$1 = *($55 + [168])
	if ( ((int_64)$1 <= (int_64)((int_64)$44 * (int_64)-5)) ){ goto $label$219 }
	if ( ((int_64)$1 <= (int_64)$42) ){ goto $label$219 }
	if ( ((int_64)$9 == (int_64)1397703940) ){ goto $label$220 }
	if ( ((int_64)$9 != (int_64)293455873288) ){ goto $label$219 }
	
.LABEL $label$220
	if ( $49 ){ goto $label$218 }
	goto $label$216 
	
.LABEL $label$219
	if ( ((int_64)$9 != (int_64)5461508) ){ goto $label$216 }
	if ( ($49 == 0) ){ goto $label$216 }
	
.LABEL $label$218
	if ( ((int_64)*($55 + [528]) < (int_64)1) ){ goto $label$223 }
	if ( $52 ){ goto $label$216 }
	*(($55 + [416])) = [0]
	*($55 + [400]) = (int_64)-1
	*($55 + [408]) = (int_64)0
	$1 = *($0)
	*($55 + [384]) = $1
	$42 = (uint_64)$9 >> (uint_64)(int_64)8
	*($55 + [392]) = $42)
	$48 = CALL db_find_i64($1, $42, (int_64)4986959047337967616, $6)
	if ( ((int_32)$48 < (int_32)[0]) ){ goto $label$224 }
	$48 = CALL $165(($55 + [384]), $48)
	CALL eosio_assert(((int_32)*($48 + [48]) == (int_32)($55 + [384])), [2464])
	if ( ((int_64)*($48 + [8]) <= (int_64)*($48 + [24])) ){ goto $label$224 }
	CALL $215(($55 + [72]), [5616], ($55 + [560]))
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $6, ($55 + [528]), ($55 + [72]), *($55 + [600]), (int_64)0)
	CALL eosio_assert([1], [2528])
	CALL $170(*($55 + [304]), $49)
	if ( ((*($55 + [72]) & [1]) == 0) ){ goto $label$224 }
	CALL $204(*($55 + [80]))
	
.LABEL $label$224
	$50 = *($55 + [408])
	if ( ($50 == 0) ){ goto $label$216 }
	$34 = ($55 + [412])
	$48 = *($34)
	if ( ((int_32)$48 == (int_32)$50) ){ goto $label$222 }
	
.LOOP $label$225:
	$48 = ($48 + [-24])
	$52 = *($48)
	*($48) = [0]
	if ( ($52 == 0) ){ goto $label$226 }
	CALL $204($52)
	
.LABEL $label$226
	if ( ((int_32)$50 != (int_32)$48) ){ goto $label$225 }
	$48 = *(($55 + [408]))
	goto $label$221 
	
.LABEL $label$223
	CALL eosio_assert([1], [2528])
	CALL $171(*($55 + [304]), $49)
	goto $label$216 
	
.LABEL $label$222
	$48 = $50
	
.LABEL $label$221
	*($34) = $50
	CALL $204($48)
	
.LABEL $label$216
	$50 = ((int_64)$9 == (int_64)1397703940)
	if ( ($50 == 0) ){ goto $label$227 }
	$10 = *($0)
	$1 = (int_64)0
	$44 = (int_64)59
	$48 = [2576]
	$43 = (int_64)0
	
.LOOP $label$228:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$233 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$232 }
	$52 = ($52 + [165])
	goto $label$231 
	
.LABEL $label$233
	$42 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$230 }
	goto $label$229 
	
.LABEL $label$232
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$231
	$42 = (int_64)((int_64)(CASTING uint_64)(uint_32 $52) << (int_64)56) >> (int_64)56)
	
.LABEL $label$230
	$42 = ((int_64)((int_64)$42 & (int_64)31) << (int_64)((int_64)$44 & (int_64)4294967295))
	
.LABEL $label$229
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$43 = ((int_64)$42 | (int_64)$43)
	$44 = ((int_64)$44 + (int_64)-5)
	if ( ((int_64)$44 != (int_64)-6) ){ goto $label$228 }
	$1 = (int_64)0
	$42 = (int_64)59
	$48 = [3968]
	$41 = (int_64)0
	
.LOOP $label$234:
	$44 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$235 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$237 }
	$52 = ($52 + [165])
	goto $label$236 
	
.LABEL $label$237
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$236
	$44 = ((int_64)(CASTING uint_64)(uint_32 ($52 & [31])) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$235
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$41 = ((int_64)$44 | (int_64)$41)
	$42 = ((int_64)$42 + (int_64)-5)
	if ( ((int_64)$42 != (int_64)-6) ){ goto $label$234 }
	$1 = (int_64)0
	$44 = (int_64)59
	$48 = [5184]
	$2 = (int_64)0
	
.LOOP $label$238:
	if ( ((uint_64)$1 > (uint_64)(int_64)8) ){ goto $label$243 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$242 }
	$52 = ($52 + [165])
	goto $label$241 
	
.LABEL $label$243
	$42 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$240 }
	goto $label$239 
	
.LABEL $label$242
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$241
	$42 = (int_64)((int_64)(CASTING uint_64)(uint_32 $52) << (int_64)56) >> (int_64)56)
	
.LABEL $label$240
	$42 = ((int_64)((int_64)$42 & (int_64)31) << (int_64)((int_64)$44 & (int_64)4294967295))
	
.LABEL $label$239
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$2 = ((int_64)$42 | (int_64)$2)
	$44 = ((int_64)$44 + (int_64)-5)
	if ( ((int_64)$44 != (int_64)-6) ){ goto $label$238 }
	*((($55 + [72]) + [20])) = *($55 + [580])
	*($55 + [80]) = $6
	*((($55 + [72]) + [28])) = *(($55 + [588]))
	*((($55 + [72]) + [24])) = *(($55 + [584]))
	*($55 + [72]) = $10
	*($55 + [88]) = *($55 + [576])
	*($55 + [384]) = $41
	*($55 + [392]) = $2
	*($55 + [400]) = [0]
	*(($52 = (($55 + [384]) + [20]))) = [0]
	*(($34 = (($55 + [384]) + [24]))) = [0]
	*(($48 = CALL $203([16]))) = $10
	*($48 + [8]) = $43
	*(($47 = (($55 + [384]) + [32]))) = [0]
	$28 = ($48 + [16])
	*($34) = $28
	*($52) = $28
	*($55 + [400]) = $48
	*($55 + [412]) = [0]
	*(($55 + [420])) = [0]
	CALL $58((($55 + [384]) + [28]), [32])
	$48 = *($47)
	$52 = *($55 + [412])
	*($55 + [116]) = $52
	*($55 + [112]) = $52
	*($55 + [120]) = $48
	*($55 + [336]) = ($55 + [112])
	*($55 + [40]) = ($55 + [72])
	CALL $150(($55 + [40]), ($55 + [336]))
	CALL $82(($55 + [112]), ($55 + [384]))
	$48 = *($55 + [112])
	CALL send_inline($48, (*($55 + [116]) - $48))
	$48 = *($55 + [112])
	if ( ($48 == 0) ){ goto $label$244 }
	*($55 + [116]) = $48
	CALL $204($48)
	
.LABEL $label$244
	$48 = *($55 + [412])
	if ( ($48 == 0) ){ goto $label$245 }
	*(($55 + [416])) = $48
	CALL $204($48)
	
.LABEL $label$245
	$48 = *($55 + [400])
	if ( ($48 == 0) ){ goto $label$227 }
	*(($55 + [404])) = $48
	CALL $204($48)
	
.LABEL $label$227
	if ( ($50 == 0) ){ goto $label$246 }
	*($55 + [120]) = (int_64)1397703940
	*($55 + [112]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (int_64)5459781
	$48 = [0]
	
.LOOP $label$249:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$248 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$250 }
	
.LOOP $label$251:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$248 }
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$251 }
	
.LABEL $label$250
	$52 = [1]
	$48 = ($48 + [1])
	if ( ((int_32)$48 < (int_32)[7]) ){ goto $label$249 }
	goto $label$247 
	
.LABEL $label$248
	$52 = [0]
	
.LABEL $label$247
	CALL eosio_assert($52, [3120])
	CALL _ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y(($55 + [576]), ($55 + [112]), $8)
	$8 = *($0)
	$1 = (int_64)0
	$44 = (int_64)59
	$48 = [2576]
	$43 = (int_64)0
	
.LOOP $label$252:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$257 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$256 }
	$52 = ($52 + [165])
	goto $label$255 
	
.LABEL $label$257
	$42 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$254 }
	goto $label$253 
	
.LABEL $label$256
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$255
	$42 = (int_64)((int_64)(CASTING uint_64)(uint_32 $52) << (int_64)56) >> (int_64)56)
	
.LABEL $label$254
	$42 = ((int_64)((int_64)$42 & (int_64)31) << (int_64)((int_64)$44 & (int_64)4294967295))
	
.LABEL $label$253
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$43 = ((int_64)$42 | (int_64)$43)
	$44 = ((int_64)$44 + (int_64)-5)
	if ( ((int_64)$44 != (int_64)-6) ){ goto $label$252 }
	$1 = (int_64)0
	$42 = (int_64)59
	$48 = [3968]
	$41 = (int_64)0
	
.LOOP $label$258:
	$44 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$259 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$261 }
	$52 = ($52 + [165])
	goto $label$260 
	
.LABEL $label$261
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$260
	$44 = ((int_64)(CASTING uint_64)(uint_32 ($52 & [31])) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$259
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$41 = ((int_64)$44 | (int_64)$41)
	$42 = ((int_64)$42 + (int_64)-5)
	if ( ((int_64)$42 != (int_64)-6) ){ goto $label$258 }
	$1 = (int_64)0
	$44 = (int_64)59
	$48 = [5200]
	$2 = (int_64)0
	
.LOOP $label$262:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$267 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$266 }
	$52 = ($52 + [165])
	goto $label$265 
	
.LABEL $label$267
	$42 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$266
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$265
	$42 = (int_64)((int_64)(CASTING uint_64)(uint_32 $52) << (int_64)56) >> (int_64)56)
	
.LABEL $label$264
	$42 = ((int_64)((int_64)$42 & (int_64)31) << (int_64)((int_64)$44 & (int_64)4294967295))
	
.LABEL $label$263
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$2 = ((int_64)$42 | (int_64)$2)
	$44 = ((int_64)$44 + (int_64)-5)
	if ( ((int_64)$44 != (int_64)-6) ){ goto $label$262 }
	*((($55 + [72]) + [28])) = *($55 + [116])
	*($55 + [80]) = $6
	*((($55 + [72]) + [36])) = *(($55 + [124]))
	*((($55 + [72]) + [32])) = *(($55 + [120]))
	*($55 + [72]) = $8
	*($55 + [88]) = $7
	*($55 + [96]) = *($55 + [112])
	*($55 + [384]) = $41
	*($55 + [392]) = $2
	*($55 + [400]) = [0]
	*(($52 = ($55 + [404]))) = [0]
	*(($50 = ($55 + [408]))) = [0]
	*(($48 = CALL $203([16]))) = $8
	*($48 + [8]) = $43
	*(($34 = (($55 + [384]) + [32]))) = [0]
	$47 = ($48 + [16])
	*($50) = $47
	*($52) = $47
	*($55 + [400]) = $48
	*($55 + [412]) = [0]
	*((($55 + [384]) + [36])) = [0]
	CALL $58((($55 + [384]) + [28]), [40])
	$48 = *($34)
	$52 = *($55 + [412])
	*($55 + [44]) = $52
	*($55 + [40]) = $52
	*($55 + [48]) = $48
	*($55 + [320]) = ($55 + [40])
	*($55 + [336]) = ($55 + [72])
	CALL $152(($55 + [336]), ($55 + [320]))
	CALL $82(($55 + [40]), ($55 + [384]))
	$48 = *($55 + [40])
	CALL send_inline($48, (*($55 + [44]) - $48))
	$48 = *($55 + [40])
	if ( ($48 == 0) ){ goto $label$268 }
	*($55 + [44]) = $48
	CALL $204($48)
	
.LABEL $label$268
	$48 = *($55 + [412])
	if ( ($48 == 0) ){ goto $label$269 }
	*(($55 + [416])) = $48
	CALL $204($48)
	
.LABEL $label$269
	$48 = *($55 + [400])
	if ( ($48 == 0) ){ goto $label$246 }
	*(($55 + [404])) = $48
	CALL $204($48)
	
.LABEL $label$246
	$48 = ((int_64)$9 == (int_64)1397703940)
	if ( ($48 == 0) ){ goto $label$270 }
	if ( ($49 == 0) ){ goto $label$271 }
	*($55 + [384]) = ($55 + [168])
	CALL eosio_assert([1], [2528])
	CALL $172(*($55 + [304]), $49, ($55 + [384]))
	
.LABEL $label$271
	$1 = *((($55 + [168]) + [8]))
	*((($55 + [56]) + [8])) = $1
	*(($55 + [8])) = $1
	$1 = *($55 + [168])
	*($55 + [56]) = $1
	*($55) = $1
	CALL _ZN11dbetonedice8dbetdice6moddivEN5eosio5assetE($0, $55)
	
.LABEL $label$270
	if ( ($48 == 0) ){ goto $label$215 }
	$52 = ($0 + [128])
	$49 = ($0 + [136])
	$48 = CALL db_lowerbound_i64(*($0 + [128]), *($49), (int_64)-4418693909081751552, (int_64)0)
	if ( ((int_32)$48 < (int_32)[0]) ){ goto $label$273 }
	$48 = CALL $108($52, $48)
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($48 + [16]) == (int_32)$52), [2784])
	CALL eosio_assert(((int_64)*($52) == (int_64)CALL $fimport$14()), [2832])
	$1 = ((int_64)*($48 + [8]) + (int_64)1)
	*($48 + [8]) = $1
	*($55 + [120]) = (int_64)0
	*($55 + [112]) = $1
	$1 = *($48)
	CALL eosio_assert([1], [2896])
	CALL eosio_assert([1], [2704])
	CALL memcpy(($55 + [384]), $48, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($55 + [384]) | [8]), ($48 + [8]), [8])
	CALL db_update_i64(*($48 + [20]), (int_64)0, ($55 + [384]), [16])
	$48 = ($0 + [144])
	if ( (uint_64)($1 <= *($48)) ){ goto $label$272 }
	*($48) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	goto $label$272 
	
.LABEL $label$273
	$42 = *($0)
	CALL eosio_assert(((int_64)*($52) == (int_64)CALL $fimport$14()), [2720])
	*(($48 = CALL $203([32])) + [16]) = $52
	*($48 + [8]) = (int_64)10000
	*($48) = (int_64)0
	*($55 + [120]) = (int_64)0
	*($55 + [112]) = (int_64)10000
	CALL eosio_assert([1], [2704])
	CALL memcpy(($55 + [384]), $48, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($55 + [384]) | [8]), ($48 + [8]), [8])
	$1 = *($48)
	$49 = CALL db_store_i64(*($49), (int_64)-4418693909081751552, $42, $1, ($55 + [384]), [16])
	*($48 + [20]) = $49
	$52 = ($0 + [144])
	if ( (uint_64)($1 <= *($52)) ){ goto $label$274 }
	*($52) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$274
	*($55 + [72]) = $48
	$1 = *($48)
	*($55 + [384]) = $1
	*($55 + [40]) = $49
	$50 = ($0 + [156])
	$52 = *($50)
	if ( ((uint_32)$52 >= (uint_32)*(($0 + [160]))) ){ goto $label$276 }
	*($52 + [8]) = $1
	*($52 + [16]) = $49
	*($55 + [72]) = [0]
	*($52) = $48
	*($50) = ($52 + [24])
	goto $label$275 
	
.LABEL $label$276
	CALL $109(($0 + [152]), ($55 + [72]), ($55 + [384]), ($55 + [40]))
	
.LABEL $label$275
	$48 = *($55 + [72])
	*($55 + [72]) = [0]
	if ( ($48 == 0) ){ goto $label$272 }
	CALL $204($48)
	
.LABEL $label$272
	$1 = CALL current_time()
	*(($55 + [412])) = [0]
	*(($55 + [416])) = [0]
	*($55 + [396]) = [0]
	*($55 + [400]) = [0]
	*($55 + [404]) = [0]
	*($55 + [408]) = [0]
	*($55 + [384]) = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) + [60])
	*($55 + [420]) = [0]
	*(($55 + [424])) = [0]
	*(($55 + [428])) = [0]
	*($55 + [432]) = [0]
	*(($55 + [436])) = [0]
	*(($55 + [440])) = [0]
	$49 = ($55 + [420])
	$41 = *($0)
	$1 = (int_64)0
	$44 = (int_64)59
	$48 = [2576]
	$43 = (int_64)0
	
.LOOP $label$277:
	if ( ((uint_64)$1 > (uint_64)(int_64)5) ){ goto $label$282 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$281 }
	$52 = ($52 + [165])
	goto $label$280 
	
.LABEL $label$282
	$42 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$279 }
	goto $label$278 
	
.LABEL $label$281
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$280
	$42 = (int_64)((int_64)(CASTING uint_64)(uint_32 $52) << (int_64)56) >> (int_64)56)
	
.LABEL $label$279
	$42 = ((int_64)((int_64)$42 & (int_64)31) << (int_64)((int_64)$44 & (int_64)4294967295))
	
.LABEL $label$278
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$43 = ((int_64)$42 | (int_64)$43)
	$44 = ((int_64)$44 + (int_64)-5)
	if ( ((int_64)$44 != (int_64)-6) ){ goto $label$277 }
	*($55 + [48]) = $43
	*($55 + [40]) = $41
	$1 = (int_64)0
	$42 = (int_64)59
	$48 = [2624]
	$43 = (int_64)0
	
.LOOP $label$283:
	$44 = (int_64)0
	if ( ((uint_64)$1 > (uint_64)(int_64)11) ){ goto $label$284 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$286 }
	$52 = ($52 + [165])
	goto $label$285 
	
.LABEL $label$286
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$285
	$44 = ((int_64)(CASTING uint_64)(uint_32 ($52 & [31])) << (int_64)((int_64)$42 & (int_64)4294967295))
	
.LABEL $label$284
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$43 = ((int_64)$44 | (int_64)$43)
	$42 = ((int_64)$42 + (int_64)-5)
	if ( ((int_64)$42 != (int_64)-6) ){ goto $label$283 }
	*($55 + [336]) = $43
	$1 = (int_64)0
	$44 = (int_64)59
	$48 = [5216]
	$43 = (int_64)0
	
.LOOP $label$287:
	if ( ((uint_64)$1 > (uint_64)(int_64)9) ){ goto $label$292 }
	$52 = *($48)
	if ( ((uint_32)(($52 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$291 }
	$52 = ($52 + [165])
	goto $label$290 
	
.LABEL $label$292
	$42 = (int_64)0
	if ( ((uint_64)$1 <= (uint_64)(int_64)11) ){ goto $label$289 }
	goto $label$288 
	
.LABEL $label$291
	$52 = ( ($52 + [208]) ? [0] : ((($52 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$290
	$42 = (int_64)((int_64)(CASTING uint_64)(uint_32 $52) << (int_64)56) >> (int_64)56)
	
.LABEL $label$289
	$42 = ((int_64)((int_64)$42 & (int_64)31) << (int_64)((int_64)$44 & (int_64)4294967295))
	
.LABEL $label$288
	$48 = ($48 + [1])
	$1 = ((int_64)$1 + (int_64)1)
	$43 = ((int_64)$42 | (int_64)$43)
	$44 = ((int_64)$44 + (int_64)-5)
	if ( ((int_64)$44 != (int_64)-6) ){ goto $label$287 }
	*($55 + [320]) = $43
	*(($55 + [92])) = *((($55 + [576]) + [12]))
	*(($55 + [88])) = *(($55 + [584]))
	*((($55 + [72]) + [12])) = *($55 + [580])
	*($55 + [72]) = $6
	*($55 + [80]) = *($55 + [576])
	CALL $220(($55 + [96]), ($55 + [560]))
	$48 = (($55 + [384]) + [40])
	$52 = *($48)
	if ( ((uint_32)$52 >= (uint_32)*(($55 + [428]))) ){ goto $label$294 }
	CALL $153($52, ($55 + [40]), *($55 + [336]), *($55 + [320]), ($55 + [72]))
	*($48) = (*($48) + [40])
	goto $label$293 
	
.LABEL $label$294
	CALL $154($49, ($55 + [40]), ($55 + [336]), ($55 + [320]), ($55 + [72]))
	
.LABEL $label$293
	if ( ((*($55 + [96]) & [1]) == 0) ){ goto $label$295 }
	CALL $204(*(($55 + [104])))
	
.LABEL $label$295
	*(($55 + [404])) = [0]
	$1 = *($0)
	CALL $111(($55 + [72]), ($55 + [384]))
	$48 = *($55 + [72])
	CALL send_deferred(($55 + [112]), $1, $48, (*($55 + [76]) - $48), [0])
	$48 = *($55 + [72])
	if ( ($48 == 0) ){ goto $label$296 }
	*($55 + [76]) = $48
	CALL $204($48)
	
.LABEL $label$296
	CALL $75(($55 + [384]))
	
.LABEL $label$215
	$49 = *($55 + [152])
	if ( ($49 == 0) ){ goto $label$297 }
	$50 = ($55 + [156])
	$48 = *($50)
	if ( ((int_32)$48 == (int_32)$49) ){ goto $label$299 }
	
.LOOP $label$300:
	$48 = ($48 + [-24])
	$52 = *($48)
	*($48) = [0]
	if ( ($52 == 0) ){ goto $label$301 }
	CALL $204($52)
	
.LABEL $label$301
	if ( ((int_32)$49 != (int_32)$48) ){ goto $label$300 }
	$48 = *(($55 + [152]))
	goto $label$298 
	
.LABEL $label$299
	$48 = $49
	
.LABEL $label$298
	*($50) = $49
	CALL $204($48)
	
.LABEL $label$297
	$49 = *($55 + [208])
	if ( ($49 == 0) ){ goto $label$302 }
	$50 = ($55 + [212])
	$48 = *($50)
	if ( ((int_32)$48 == (int_32)$49) ){ goto $label$304 }
	
.LOOP $label$305:
	$48 = ($48 + [-24])
	$52 = *($48)
	*($48) = [0]
	if ( ($52 == 0) ){ goto $label$306 }
	CALL $204($52)
	
.LABEL $label$306
	if ( ((int_32)$49 != (int_32)$48) ){ goto $label$305 }
	$48 = *(($55 + [208]))
	goto $label$303 
	
.LABEL $label$304
	$48 = $49
	
.LABEL $label$303
	*($50) = $49
	CALL $204($48)
	
.LABEL $label$302
	$49 = *($55 + [248])
	if ( ($49 == 0) ){ goto $label$15 }
	$50 = ($55 + [252])
	$48 = *($50)
	if ( ((int_32)$48 == (int_32)$49) ){ goto $label$308 }
	
.LOOP $label$309:
	$48 = ($48 + [-24])
	$52 = *($48)
	*($48) = [0]
	if ( ($52 == 0) ){ goto $label$310 }
	CALL $204($52)
	
.LABEL $label$310
	if ( ((int_32)$49 != (int_32)$48) ){ goto $label$309 }
	$48 = *(($55 + [248]))
	goto $label$307 
	
.LABEL $label$308
	$48 = $49
	
.LABEL $label$307
	*($50) = $49
	CALL $204($48)
	
.LABEL $label$15
	if ( ((*($55 + [512]) & [1]) == 0) ){ goto $label$311 }
	CALL $204(*($55 + [520]))
	
.LABEL $label$311
	if ( ((*($55 + [544]) & [1]) == 0) ){ goto $label$312 }
	CALL $204(*($55 + [552]))
	
.LABEL $label$312
	if ( ((*($55 + [560]) & [1]) == 0) ){ goto $label$313 }
	CALL $204(*($55 + [568]))
	
.LABEL $label$313
	*([0] + [4]) = ($55 + [608])
	return (unreachable)
	
.LABEL $label$14
	CALL $205(($55 + [112]))
	
.LABEL $label$10
	CALL $205(($55 + [512]))
	(unreachable)
	(unreachable)
}

int_32 .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $203([72])) + [56]) = $0
	CALL $184(($8 + [32]), $6)
	*($6 + [64]) = [-1]
	*($6 + [60]) = $1
	*($6 + [68]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [60])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $183(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [27]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

void .FUNC $183 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1216])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1264])
	$5 = *($1 + [8])
	$2 = *($2)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$5), [368])
	$3 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [416])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [448])
	CALL eosio_assert([1], [80])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$5 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [48])
	$5 = *(($1 + [8]))
	$7 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$6 }
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64)0.5))
	
.LABEL $label$6
	*($1 + [16]) = $7
	*(($1 + [24])) = $5
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)$5 >> (uint_64)(int_64)8)), [1440])
	$6 = $9
	$2 = ($6 + [-64])
	*([0] + [4]) = $2
	*($8 + [12]) = $2
	*($8 + [8]) = $2
	*($8 + [16]) = $6
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [16])
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $46(($8 + [32]), ($8 + [24]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [64])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$7
	*([0] + [4]) = ($8 + [48])
}

void .FUNC _ZN11dbetonedice8dbetdice6moddivEN5eosio5assetE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [96])
	*([0] + [4]) = $7
	$5 = *($1 + [8])
	*(($3 = ($7 + [48]))) = [0]
	*($7 + [32]) = (int_64)-1
	*($7 + [40]) = (int_64)0
	$4 = *($0)
	*($7 + [16]) = $4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($7 + [24]) = $5)
	$2 = CALL db_find_i64($4, $5, (int_64)5455799419163115520, $5)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$0 = CALL $44(($7 + [16]), $2)
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)($7 + [16])), [1104])
	*($7 + [64]) = $1
	CALL eosio_assert([1], [1168])
	CALL $69(($7 + [16]), $0, ($7 + [64]))
	$2 = *($7 + [40])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0)
	*($7 + [8]) = $1
	*($7 + [88]) = $5
	CALL eosio_assert(((int_64)*($7 + [16]) == (int_64)CALL $fimport$14()), [1936])
	*($7 + [68]) = ($7 + [8])
	*($7 + [64]) = ($7 + [16])
	*($7 + [72]) = ($7 + [88])
	$1 = CALL $203([80])
	CALL $47($1)
	*($1 + [64]) = ($7 + [16])
	CALL $70(($7 + [64]), $1)
	*($7 + [80]) = $1
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($7 + [64]) = $5)
	$2 = *($1 + [68])
	*($7 + [60]) = $2
	$6 = ($7 + [44])
	$0 = *($6)
	if ( ((uint_32)$0 >= (uint_32)*($3)) ){ goto $label$5 }
	*($0 + [8]) = $5
	*($0 + [16]) = $2
	*($7 + [80]) = [0]
	*($0) = $1
	*($6) = ($0 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $49(($7 + [40]), ($7 + [80]), ($7 + [64]), ($7 + [60]))
	
.LABEL $label$4
	$1 = *($7 + [80])
	*($7 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $204($1)
	
.LABEL $label$6
	$2 = *($7 + [40])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($7 + [44])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$1 = ($1 + [-24])
	$0 = *($1)
	*($1) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $204($0)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	$1 = *(($7 + [40]))
	goto $label$7 
	
.LABEL $label$8
	$1 = $2
	
.LABEL $label$7
	*($3) = $2
	CALL $204($1)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [96])
}

int_32 .FUNC atoi (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$1 = [1]
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$1 = [0]
	
.LABEL $label$2
	$2 = [0]
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$2 = [0]
	
.LOOP $label$7:
	$2 = (((int_32)$2 * (int_32)[10]) - $3)
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $2 ? ([0] - $2) : $1 )
}

int_32 .FUNC $225 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

void .FUNC $65 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [64])
	*([0] + [4]) = $5
	*(($5 + [28])) = *(($1 + [28]))
	*(($4 = (($5 + [16]) + [8]))) = *(($1 + [24]))
	*($5 + [16]) = *($1 + [16])
	*($5 + [20]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $220($5, ($1 + [32]))
	*((($5 + [32]) + [8])) = *($4)
	*($5 + [32]) = *($5 + [16])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $220(($5 + [48]), $5)
	CALL void $0((int_32 $2), (int_64 $3), (int_64 ($5 + [32])), (int_32 ($5 + [48])), (int_32 $1))
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$2 }
	CALL $204(*($5 + [56]))
	
.LABEL $label$2
	if ( ((*($5) & [1]) == 0) ){ goto $label$3 }
	CALL $204(*($5 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [64])
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1072])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $55(*($1), ($0 + [32]))
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $67($0, *($1))
	CALL $67($0, *($1 + [4]))
	CALL $204($1)
	
.LABEL $label$1
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $220(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $220(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $204(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $204(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1216])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1264])
	$5 = *($1 + [8])
	$2 = *($2)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$5), [1328])
	$3 = (int_64)
	*($1) = $3(*($1) - *($2)))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [1376])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1408])
	CALL eosio_assert([1], [80])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$5 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [48])
	$5 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$6 }
	$5 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64)0.5))
	
.LABEL $label$6
	*($1 + [16]) = $5
	*(($1 + [24])) = (int_64)1398362884
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1440])
	$6 = $8
	$2 = ($6 + [-64])
	*([0] + [4]) = $2
	*($7 + [12]) = $2
	*($7 + [8]) = $2
	*($7 + [16]) = $6
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($1 + [16])
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + [32])
	*($7 + [44]) = ($1 + [48])
	CALL $46(($7 + [32]), ($7 + [24]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [64])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [1216])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [1264])
	$5 = *($1 + [8])
	$2 = *($2)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)$5), [368])
	$3 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [416])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [448])
	CALL eosio_assert([1], [80])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$5 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [48])
	$5 = (int_64)0
	$4 = *($1)
	if ( ((int_64)$4 < (int_64)1) ){ goto $label$6 }
	$5 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $4) * (float_64)(float_64)0.5))
	
.LABEL $label$6
	*($1 + [16]) = $5
	*(($1 + [24])) = (int_64)1398362884
	CALL eosio_assert(((int_64)$3 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)), [1440])
	$6 = $8
	$2 = ($6 + [-64])
	*([0] + [4]) = $2
	*($7 + [12]) = $2
	*($7 + [8]) = $2
	*($7 + [16]) = $6
	*($7 + [24]) = ($7 + [8])
	*($7 + [36]) = ($1 + [16])
	*($7 + [32]) = $1
	*($7 + [40]) = ($1 + [32])
	*($7 + [44]) = ($1 + [48])
	CALL $46(($7 + [32]), ($7 + [24]))
	CALL db_update_i64(*($1 + [68]), (int_64)0, $2, [64])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$3 + (int_64)1)
	
.LABEL $label$7
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [80])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [48])
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [1072])
	CALL memcpy($0, $1, [8])
	CALL eosio_assert(((int_32)($2 & [-8]) != (int_32)[8]), [1072])
	CALL memcpy(($0 + [8]), ($1 + [8]), [8])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy(($2 + [8]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy(($2 + [16]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy(($2 + [24]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[7]), [1072])
	CALL memcpy(($2 + [32]), *($1 + [4]), [8])
	*($1 + [4]) = (*($1 + [4]) + [8])
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $228([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $228($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $228($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

int_32 .FUNC $228 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [14320]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $232(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [14800]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [14832]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [14838] ? [14833] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [14802] ? [14800] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [14835]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $226()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [14800]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [14800]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [14784])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [14800])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [14816] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [14800]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [14896] ? [14912] : $30 ) ? ( [14864] ? [14880] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [14800]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [14801]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [14800] ? [14805] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [14784])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [14784])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [14784])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([14928], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([14928], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([14928], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $232(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $232(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $232(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $232(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $232(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $232(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $232(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $232(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $232(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $88 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [2704])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [2704])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $86(*($1), ($0 + [32]))
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [2704])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [2704])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [2704])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [2704])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [2704])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $58($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [2704])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [2704])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $84(CALL $83($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $81 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $203([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $58($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $85(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

void .FUNC $80 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$14()), [2720])
	*(($4 = CALL $203([48])) + [32]) = $1
	*($4 + [8]) = (int_64)1
	*($4) = *(*($3))
	$5 = CALL current_time()
	*($4 + [24]) = (int_64)0
	*($4 + [16]) = ((int_64)((uint_64)$5 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($8 + [48]) = ($8 + [32])
	*($8 + [44]) = $8
	*($8 + [40]) = $8
	*($8 + [56]) = ($8 + [40])
	*($8 + [68]) = ($4 + [8])
	*($8 + [64]) = $4
	*($8 + [72]) = ($4 + [16])
	*($8 + [76]) = ($4 + [24])
	CALL $87(($8 + [64]), ($8 + [56]))
	$5 = *($4)
	*($4 + [36]) = CALL db_store_i64(*($1 + [8]), (int_64)4986958867379634176, $2, $5, $8, [32])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [64]) = $4
	$5 = *($4)
	*($8) = $5
	$6 = *($4 + [36])
	*($8 + [40]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [64]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $88(($1 + [24]), ($8 + [64]), $8, ($8 + [40]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [64])
	*($8 + [64]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $204($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [80])
}

int_32 .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $0, [8])
	$1 = (*($2 + [4]) + [8])
	*($2 + [4]) = $1
	CALL eosio_assert(((int_32)(*($2 + [8]) - $1) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), ($0 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $203([96])
	CALL $156($6)
	*($6 + [80]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [48])
	*($8 + [56]) = ($6 + [64])
	CALL $157(($8 + [32]), ($8 + [24]))
	*($6 + [84]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [84])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $158(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC _ZN11dbetonedice8dbetdice11dffruitrollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [432])
	*([0] + [4]) = $18
	CALL require_auth(*($0))
	$10 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$12 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [3552])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [3584])
	$17 = [1]
	$12 = *(($3 + [8]))
	if ( ((int_64)$12 == (int_64)1397703940) ){ goto $label$6 }
	if ( ((int_64)$12 == (int_64)5461508) ){ goto $label$6 }
	$17 = ((int_64)$12 == (int_64)293455873288)
	
.LABEL $label$6
	CALL eosio_assert($17, [3584])
	*((($18 + [152]) + [8])) = [0]
	*($18 + [152]) = (int_64)0
	$17 = CALL strlen([3536])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$11 }
	*($18 + [152]) = ($17 << [1])
	$10 = (($18 + [152]) | [1])
	if ( $17 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$5 = (($17 + [16]) & [-16])
	$10 = CALL $203($5)
	*($18 + [152]) = ($5 | [1])
	*($18 + [160]) = $10
	*($18 + [156]) = $17
	
.LABEL $label$10
	CALL memcpy($10, [3536], $17)
	
.LABEL $label$9
	*(($10 + $17)) = [0]
	CALL _ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(($18 + [336]), $4, ($18 + [152]))
	if ( ((*($18 + [152]) & [1]) == 0) ){ goto $label$12 }
	CALL $204(*($18 + [160]))
	
.LABEL $label$12
	$4 = *($18 + [336])
	if ( ((int_32)(*($18 + [340]) - $4) != (int_32)[72]) ){ goto $label$13 }
	CALL $220(($18 + [320]), $4)
	CALL $220(($18 + [304]), (*($18 + [336]) + [12]))
	CALL $220(($18 + [288]), (*($18 + [336]) + [24]))
	CALL $220(($18 + [272]), (*($18 + [336]) + [36]))
	CALL $220(($18 + [256]), (*($18 + [336]) + [48]))
	CALL $220(($18 + [240]), (*($18 + [336]) + [60]))
	CALL $220(($18 + [224]), ($18 + [304]))
	$5 = (($18 + [224]) | [1])
	$17 = [0]
	$9 = ($18 + [232])
	
.LOOP $label$16:
	$10 = ($10 & [1])
	$10 = *($18 + [224])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [228]) ? uint_32($10 >> [1]) : $10 )) ){ goto $label$15 }
	$10 = (( *($9) ? $5 : $10 ) + $17)
	$4 = [1]
	$17 = ($17 + [1])
	if ( CALL isdigit(*($10)) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	CALL $220(($18 + [208]), ($18 + [288]))
	$5 = (($18 + [208]) | [1])
	$17 = [0]
	$9 = ($18 + [216])
	
.LOOP $label$19:
	$10 = ($10 & [1])
	$10 = *($18 + [208])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [212]) ? uint_32($10 >> [1]) : $10 )) ){ goto $label$18 }
	$10 = (( *($9) ? $5 : $10 ) + $17)
	$4 = [1]
	$17 = ($17 + [1])
	if ( CALL isdigit(*($10)) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL $220(($18 + [192]), ($18 + [272]))
	$9 = (($18 + [192]) | [1])
	$4 = [0]
	$8 = ($18 + [200])
	$17 = [0]
	
.LOOP $label$21:
	$5 = ($10 & [1])
	$10 = *($18 + [192])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [196]) ? uint_32($10 >> [1]) : $5 )) ){ goto $label$20 }
	$10 = (( *($8) ? $9 : $5 ) + $17)
	$17 = ($17 + [1])
	if ( CALL isdigit(*($10)) ){ goto $label$21 }
	$4 = [1]
	$10 = *($18 + [192])
	
.LABEL $label$20
	if ( (($10 & [1]) == 0) ){ goto $label$17 }
	CALL $204(*(($18 + [200])))
	
.LABEL $label$17
	if ( ((*($18 + [208]) & [1]) == 0) ){ goto $label$14 }
	CALL $204(*(($18 + [216])))
	
.LABEL $label$14
	if ( ((*($18 + [224]) & [1]) == 0) ){ goto $label$22 }
	CALL $204(*(($18 + [232])))
	
.LABEL $label$22
	if ( $4 ){ goto $label$23 }
	$17 = ( *($18 + [264]) ? (($18 + [256]) | [1]) : (*($18 + [256]) & [1]) )
	$10 = [-1]
	
.LOOP $label$24:
	$4 = ($17 + $10)
	$5 = ($10 + [1])
	$10 = $5
	if ( *(($4 + [1])) ){ goto $label$24 }
	$15 = (CASTING uint_64)(uint_32 $5)
	$12 = (int_64)0
	$11 = (int_64)59
	$13 = (int_64)0
	
.LOOP $label$25:
	$14 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$15) ){ goto $label$26 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$10 = ($10 + [165])
	goto $label$27 
	
.LABEL $label$28
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$30 }
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$29 
	
.LABEL $label$30
	$14 = ((int_64)$14 & (int_64)15)
	
.LABEL $label$29
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$25 }
	$12 = (int_64)0
	$11 = ( $13 ? (int_64)0 : CALL is_account($13) )
	$16 = ( (int_64)0 ? $11 : ((int_64)$11 == (int_64)$1) )
	$11 = (int_64)59
	$17 = [3968]
	$13 = (int_64)0
	
.LOOP $label$31:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$32 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$10 = ($10 + [165])
	goto $label$33 
	
.LABEL $label$34
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$32
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$31 }
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [3968]
	$15 = (int_64)0
	
.LOOP $label$35:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$36 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$10 = ($10 + [165])
	goto $label$37 
	
.LABEL $label$38
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$36
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$35 }
	*(($18 + [184])) = [0]
	*($18 + [168]) = (int_64)-1
	$12 = (int_64)0
	*($18 + [176]) = (int_64)0
	*($18 + [160]) = $15
	*($18 + [152]) = $13
	$17 = CALL db_find_i64($13, $15, (int_64)-4023100423488818528, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$39 }
	$17 = CALL $117(($18 + [152]), $17)
	CALL eosio_assert(((int_32)*($17 + [88]) == (int_32)($18 + [152])), [2464])
	$15 = *($17 + [8])
	$14 = (int_64)59
	$17 = [3984]
	$13 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$12 > (uint_64)(int_64)3) ){ goto $label$45 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$10 = ($10 + [165])
	goto $label$43 
	
.LABEL $label$45
	$11 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$41
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$40 }
	if ( ((int_64)$15 == (int_64)$13) ){ goto $label$39 }
	$16 = ( $16 ? $15 : (int_64)($15 == 0) )
	
.LABEL $label$39
	$6 = CALL atoll(( *($18 + [312]) ? (($18 + [304]) | [1]) : (*($18 + [304]) & [1]) ))
	$7 = CALL atoll(( *($18 + [296]) ? (($18 + [288]) | [1]) : (*($18 + [288]) & [1]) ))
	*($18 + [144]) = CALL atoll(( *($18 + [280]) ? (($18 + [272]) | [1]) : (*($18 + [272]) & [1]) ))
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [3968]
	$13 = (int_64)0
	
.LOOP $label$46:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$47 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$10 = ($10 + [165])
	goto $label$48 
	
.LABEL $label$49
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$47
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$46 }
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [3968]
	$15 = (int_64)0
	
.LOOP $label$50:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$51 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$10 = ($10 + [165])
	goto $label$52 
	
.LABEL $label$53
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$51
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$50 }
	*(($18 + [136])) = [0]
	*($18 + [120]) = (int_64)-1
	*($18 + [128]) = (int_64)0
	*($18 + [112]) = $15
	*($18 + [104]) = $13
	$17 = CALL db_find_i64($13, $15, (int_64)-4023100430253817856, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$56 }
	$17 = CALL $118(($18 + [104]), $17)
	CALL eosio_assert(((int_32)*($17 + [60]) == (int_32)($18 + [104])), [2464])
	$17 = *($17 + [16])
	if ( ((uint_32)$17 >= (uint_32)[3]) ){ goto $label$55 }
	CALL eosio_assert(((int_64)$6 == (int_64)1), [4032])
	goto $label$54 
	
.LABEL $label$56
	CALL eosio_assert(((int_64)$6 == (int_64)1), [4032])
	goto $label$54 
	
.LABEL $label$55
	if ( ((uint_32)$17 > (uint_32)[4]) ){ goto $label$57 }
	CALL eosio_assert((((int_64)$6 == (int_64)1) | ((int_64)$6 == (int_64)10)), [4032])
	goto $label$54 
	
.LABEL $label$57
	$17 = [0]
	$12 = ((int_64)$6 + (int_64)-1)
	if ( ((uint_64)$12 > (uint_64)(int_64)49) ){ goto $label$58 }
	$17 = (CASTING uint_32)(uint_64 (uint_64)(int_64)562949953421825 >> (uint_64)((int_64)$12 & (int_64)1125899906842623)))
	
.LABEL $label$58
	CALL eosio_assert(($17 & [1]), [4032])
	
.LABEL $label$54
	CALL _ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy($3, $6)
	$4 = ($0 + [48])
	*($18 + [96]) = $4
	CALL $120(($18 + [56]), ($18 + [96]), ($18 + [144]))
	$17 = [0]
	$10 = *($18 + [60])
	if ( ($10 == 0) ){ goto $label$59 }
	$17 = ( $10 ? [0] : ((int_64)*($18 + [144]) == (int_64)*($10 + [32])) )
	
.LABEL $label$59
	CALL eosio_assert(($17 == 0), [4064])
	*((($18 + [56]) + [32])) = [0]
	*($18 + [72]) = (int_64)-1
	*($18 + [80]) = (int_64)0
	$12 = *($0)
	*($18 + [56]) = $12
	*($18 + [64]) = $12
	$17 = CALL db_find_i64($12, $12, (int_64)-3104856670496604160, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$67 }
	$17 = CALL $121(($18 + [56]), $17)
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)($18 + [56])), [2464])
	if ( ((int_64)*($17 + [16]) != (int_64)2) ){ goto $label$66 }
	if ( ((uint_64)*($17 + [24]) >= (uint_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)4294967276) & (int_64)4294967295)) ){ goto $label$63 }
	*($18 + [48]) = $4
	$9 = ($17 + [8])
	CALL $120(($18 + [352]), ($18 + [48]), $9)
	$5 = ($18 + [48])
	$4 = *($18 + [356])
	if ( ($4 == 0) ){ goto $label$62 }
	$10 = [0]
	if ( ((int_64)*($9) != (int_64)*($4 + [32])) ){ goto $label$61 }
	$5 = *($18 + [352])
	$10 = $4
	goto $label$61 
	
.LABEL $label$67
	$11 = *($0)
	CALL eosio_assert(((int_64)*($18 + [56]) == (int_64)CALL $fimport$14()), [2720])
	*(($17 = CALL $203([48])) + [32]) = ($18 + [56])
	*($17) = $1
	*($17 + [16]) = (int_64)2
	*($17 + [8]) = *($18 + [144])
	*($17 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($18 + [400]) = (($18 + [352]) + [32])
	*($18 + [396]) = ($18 + [352])
	*($18 + [392]) = ($18 + [352])
	*($18 + [32]) = ($18 + [392])
	*($18 + [420]) = ($17 + [8])
	*($18 + [416]) = $17
	*($18 + [424]) = ($17 + [16])
	*($18 + [428]) = ($17 + [24])
	CALL $125(($18 + [416]), ($18 + [32]))
	$12 = *($17)
	$4 = CALL db_store_i64(*((($18 + [56]) + [8])), (int_64)-3104856670496604160, $11, $12, ($18 + [352]), [32])
	*($17 + [36]) = $4
	$10 = (($18 + [56]) + [16])
	if ( (uint_64)($12 <= *($10)) ){ goto $label$68 }
	*($10) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$68
	*($18 + [416]) = $17
	$12 = *($17)
	*($18 + [352]) = $12
	*($18 + [392]) = $4
	$5 = ($18 + [84])
	$10 = *($5)
	if ( ((uint_32)$10 >= (uint_32)*(($18 + [88]))) ){ goto $label$65 }
	*($10 + [8]) = $12
	*($10 + [16]) = $4
	*($18 + [416]) = [0]
	*($10) = $17
	*($5) = ($10 + [24])
	goto $label$64 
	
.LABEL $label$66
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)($18 + [56])), [2784])
	CALL eosio_assert(((int_64)*($18 + [56]) == (int_64)CALL $fimport$14()), [2832])
	*($17 + [16]) = (int_64)2
	*($17 + [8]) = *($18 + [144])
	$12 = *($17)
	*($17 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$12 == (int_64)*($17)), [2896])
	*($18 + [400]) = (($18 + [352]) + [32])
	*($18 + [396]) = ($18 + [352])
	*($18 + [392]) = ($18 + [352])
	*($18 + [32]) = ($18 + [392])
	*($18 + [420]) = ($17 + [8])
	*($18 + [416]) = $17
	*($18 + [424]) = ($17 + [16])
	*($18 + [428]) = ($17 + [24])
	CALL $125(($18 + [416]), ($18 + [32]))
	CALL db_update_i64(*($17 + [36]), (int_64)0, ($18 + [352]), [32])
	$17 = (($18 + [56]) + [16])
	if ( (uint_64)($12 <= *($17)) ){ goto $label$60 }
	*($17) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	goto $label$60 
	
.LABEL $label$65
	CALL $126(($18 + [80]), ($18 + [416]), ($18 + [352]), ($18 + [392]))
	
.LABEL $label$64
	$17 = *($18 + [416])
	*($18 + [416]) = [0]
	if ( ($17 == 0) ){ goto $label$60 }
	CALL $204($17)
	goto $label$60 
	
.LABEL $label$63
	CALL eosio_assert([0], [4208])
	goto $label$60 
	
.LABEL $label$62
	$10 = [0]
	
.LABEL $label$61
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [4096])
	CALL eosio_assert(((int_64)*($10 + [120]) == (int_64)2), [4128])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)$1), [4160])
	CALL _ZNSt3__19to_stringEy(($18 + [352]), *($10 + [32]))
	$4 = CALL $211(($18 + [352]), [0], [4176])
	$9 = ($4 + [8])
	*((($18 + [32]) + [8])) = *($9)
	*($18 + [32]) = *($4)
	*($4) = [0]
	*(($4 + [4])) = [0]
	*($9) = [0]
	if ( ((*($18 + [352]) & [1]) == 0) ){ goto $label$69 }
	CALL $204(*($18 + [360]))
	
.LABEL $label$69
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, *(($10 + [8])), ($10 + [40]), ($18 + [32]), *(($10 + [32])), (int_64)0)
	*($18 + [352]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $5))
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [3456])
	CALL $123(($18 + [352]))
	CALL $124(*($18 + [48]), $10)
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)($18 + [56])), [2784])
	CALL eosio_assert(((int_64)*($18 + [56]) == (int_64)CALL $fimport$14()), [2832])
	*($17 + [16]) = (int_64)2
	*($17 + [8]) = *($18 + [144])
	$12 = *($17)
	*($17 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$12 == (int_64)*($17)), [2896])
	*($18 + [400]) = (($18 + [352]) + [32])
	*($18 + [396]) = ($18 + [352])
	*($18 + [392]) = ($18 + [352])
	*($18 + [408]) = ($18 + [392])
	*($18 + [420]) = ($17 + [8])
	*($18 + [416]) = $17
	*($18 + [424]) = ($17 + [16])
	*($18 + [428]) = ($17 + [24])
	CALL $125(($18 + [416]), ($18 + [408]))
	CALL db_update_i64(*($17 + [36]), (int_64)0, ($18 + [352]), [32])
	$17 = (($18 + [56]) + [16])
	if ( (uint_64)($12 <= *($17)) ){ goto $label$70 }
	*($17) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$70
	if ( ((*($18 + [32]) & [1]) == 0) ){ goto $label$60 }
	CALL $204(*($18 + [40]))
	
.LABEL $label$60
	*($18 + [352]) = (int_64)0
	*($18 + [360]) = *(($3 + [8]))
	CALL eosio_assert([1], [3056])
	$12 = (uint_64)*($18 + [360]) >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$73:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$72 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$74 }
	
.LOOP $label$75:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$72 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$75 }
	
.LABEL $label$74
	$10 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$73 }
	goto $label$71 
	
.LABEL $label$72
	$10 = [0]
	
.LABEL $label$71
	CALL eosio_assert($10, [3120])
	*(($18 + [424])) = [0]
	*($18 + [416]) = (int_64)0
	$17 = CALL strlen([4224])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$78 }
	*($18 + [416]) = ($17 << [1])
	$10 = (($18 + [416]) | [1])
	if ( $17 ){ goto $label$77 }
	goto $label$76 
	
.LABEL $label$78
	$4 = (($17 + [16]) & [-16])
	$10 = CALL $203($4)
	*($18 + [416]) = ($4 | [1])
	*($18 + [424]) = $10
	*($18 + [420]) = $17
	
.LABEL $label$77
	CALL memcpy($10, [4224], $17)
	
.LABEL $label$76
	*(($10 + $17)) = [0]
	$12 = *($18 + [144])
	CALL $220(($18 + [16]), ($18 + [240]))
	CALL $220($18, ($18 + [416]))
	CALL _ZN11dbetonedice8dbetdice6recordEyyyyRKN5eosio5assetES4_NSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESB_yyy($0, $1, $16, $7, $12, $3, ($18 + [352]), ($18 + [16]), $18, $6, (int_64)2, (int_64)2)
	if ( ((*($18) & [1]) == 0) ){ goto $label$79 }
	CALL $204(*($18 + [8]))
	
.LABEL $label$79
	if ( ((*($18 + [16]) & [1]) == 0) ){ goto $label$80 }
	CALL $204(*($18 + [24]))
	
.LABEL $label$80
	if ( ((*($18 + [416]) & [1]) == 0) ){ goto $label$81 }
	CALL $204(*($18 + [424]))
	
.LABEL $label$81
	$4 = *($18 + [80])
	if ( ($4 == 0) ){ goto $label$82 }
	$5 = ($18 + [84])
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$84 }
	
.LOOP $label$85:
	$17 = ($17 + [-24])
	$10 = *($17)
	*($17) = [0]
	if ( ($10 == 0) ){ goto $label$86 }
	CALL $204($10)
	
.LABEL $label$86
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$85 }
	$17 = *(($18 + [80]))
	goto $label$83 
	
.LABEL $label$84
	$17 = $4
	
.LABEL $label$83
	*($5) = $4
	CALL $204($17)
	
.LABEL $label$82
	$5 = *($18 + [128])
	if ( ($5 == 0) ){ goto $label$87 }
	$9 = ($18 + [132])
	$17 = *($9)
	if ( ((int_32)$17 == (int_32)$5) ){ goto $label$89 }
	
.LOOP $label$90:
	$17 = ($17 + [-24])
	$10 = *($17)
	*($17) = [0]
	if ( ($10 == 0) ){ goto $label$91 }
	$4 = *($10 + [48])
	if ( ($4 == 0) ){ goto $label$92 }
	*(($10 + [52])) = $4
	CALL $204($4)
	
.LABEL $label$92
	CALL $204($10)
	
.LABEL $label$91
	if ( ((int_32)$5 != (int_32)$17) ){ goto $label$90 }
	$17 = *(($18 + [128]))
	goto $label$88 
	
.LABEL $label$89
	$17 = $5
	
.LABEL $label$88
	*($9) = $5
	CALL $204($17)
	
.LABEL $label$87
	$4 = *($18 + [176])
	if ( ($4 == 0) ){ goto $label$23 }
	$5 = ($18 + [180])
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$94 }
	
.LOOP $label$95:
	$17 = ($17 + [-24])
	$10 = *($17)
	*($17) = [0]
	if ( ($10 == 0) ){ goto $label$96 }
	CALL $204($10)
	
.LABEL $label$96
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$95 }
	$17 = *(($18 + [176]))
	goto $label$93 
	
.LABEL $label$94
	$17 = $4
	
.LABEL $label$93
	*($5) = $4
	CALL $204($17)
	
.LABEL $label$23
	if ( ((*($18 + [240]) & [1]) == 0) ){ goto $label$97 }
	CALL $204(*($18 + [248]))
	
.LABEL $label$97
	if ( ((*($18 + [256]) & [1]) == 0) ){ goto $label$98 }
	CALL $204(*($18 + [264]))
	
.LABEL $label$98
	if ( ((*($18 + [272]) & [1]) == 0) ){ goto $label$99 }
	CALL $204(*($18 + [280]))
	
.LABEL $label$99
	if ( ((*($18 + [288]) & [1]) == 0) ){ goto $label$100 }
	CALL $204(*($18 + [296]))
	
.LABEL $label$100
	if ( ((*($18 + [304]) & [1]) == 0) ){ goto $label$101 }
	CALL $204(*($18 + [312]))
	
.LABEL $label$101
	if ( ((*($18 + [320]) & [1]) == 0) ){ goto $label$102 }
	CALL $204(*($18 + [328]))
	
.LABEL $label$102
	$4 = *($18 + [336])
	
.LABEL $label$13
	if ( ($4 == 0) ){ goto $label$103 }
	$17 = *($18 + [340])
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$105 }
	$10 = ([0] - $4)
	$17 = ($17 + [-12])
	
.LOOP $label$106:
	if ( ((*($17) & [1]) == 0) ){ goto $label$107 }
	CALL $204(*(($17 + [8])))
	
.LABEL $label$107
	$17 = ($17 + [-12])
	if ( ((int_32)($17 + $10) != (int_32)[-12]) ){ goto $label$106 }
	$17 = *($18 + [336])
	goto $label$104 
	
.LABEL $label$105
	$17 = $4
	
.LABEL $label$104
	*($18 + [340]) = $4
	CALL $204($17)
	
.LABEL $label$103
	*([0] + [4]) = ($18 + [432])
	return (unreachable)
	
.LABEL $label$8
	CALL $205(($18 + [152]))
	
.LABEL $label$7
	CALL $205(($18 + [416]))
	(unreachable)
}

void .FUNC $144 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL strlen($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $4)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = *($1)
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $203($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : ($5 & [1]) ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $209($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $205($0)
}

void .FUNC _ZN11dbetonedice8dbetdice10dfmarkrollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [560])
	*([0] + [4]) = $18
	CALL require_auth(*($0))
	$9 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$11 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	CALL eosio_assert($9, [3552])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [3584])
	$17 = [1]
	$11 = *(($3 + [8]))
	if ( ((int_64)$11 == (int_64)1397703940) ){ goto $label$6 }
	if ( ((int_64)$11 == (int_64)5461508) ){ goto $label$6 }
	$17 = ((int_64)$11 == (int_64)293455873288)
	
.LABEL $label$6
	CALL eosio_assert($17, [3584])
	*((($18 + [480]) + [8])) = [0]
	*($18 + [480]) = (int_64)0
	$17 = CALL strlen([3536])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$14 }
	*($18 + [480]) = ($17 << [1])
	$9 = (($18 + [480]) | [1])
	if ( $17 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$5 = (($17 + [16]) & [-16])
	$9 = CALL $203($5)
	*($18 + [480]) = ($5 | [1])
	*($18 + [488]) = $9
	*($18 + [484]) = $17
	
.LABEL $label$13
	CALL memcpy($9, [3536], $17)
	
.LABEL $label$12
	*(($9 + $17)) = [0]
	CALL _ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(($18 + [464]), $4, ($18 + [480]))
	if ( ((*($18 + [480]) & [1]) == 0) ){ goto $label$15 }
	CALL $204(*($18 + [488]))
	
.LABEL $label$15
	$4 = *($18 + [464])
	if ( ((int_32)(*($18 + [468]) - $4) != (int_32)[72]) ){ goto $label$8 }
	CALL $220(($18 + [448]), $4)
	CALL $220(($18 + [432]), (*($18 + [464]) + [12]))
	CALL $220(($18 + [416]), (*($18 + [464]) + [24]))
	CALL $220(($18 + [400]), (*($18 + [464]) + [36]))
	CALL $220(($18 + [384]), (*($18 + [464]) + [48]))
	CALL $220(($18 + [368]), (*($18 + [464]) + [60]))
	CALL $220(($18 + [352]), ($18 + [432]))
	$5 = (($18 + [352]) | [1])
	$17 = [0]
	$8 = ($18 + [360])
	
.LOOP $label$18:
	$9 = ($9 & [1])
	$9 = *($18 + [352])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [356]) ? uint_32($9 >> [1]) : $9 )) ){ goto $label$17 }
	$9 = (( *($8) ? $5 : $9 ) + $17)
	$4 = [1]
	$17 = ($17 + [1])
	if ( CALL isdigit(*($9)) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL $220(($18 + [336]), ($18 + [416]))
	$5 = (($18 + [336]) | [1])
	$17 = [0]
	$8 = ($18 + [344])
	
.LOOP $label$21:
	$9 = ($9 & [1])
	$9 = *($18 + [336])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [340]) ? uint_32($9 >> [1]) : $9 )) ){ goto $label$20 }
	$9 = (( *($8) ? $5 : $9 ) + $17)
	$4 = [1]
	$17 = ($17 + [1])
	if ( CALL isdigit(*($9)) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL $220(($18 + [320]), ($18 + [400]))
	$8 = (($18 + [320]) | [1])
	$4 = [0]
	$7 = ($18 + [328])
	$17 = [0]
	
.LOOP $label$23:
	$5 = ($9 & [1])
	$9 = *($18 + [320])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [324]) ? uint_32($9 >> [1]) : $5 )) ){ goto $label$22 }
	$9 = (( *($7) ? $8 : $5 ) + $17)
	$17 = ($17 + [1])
	if ( CALL isdigit(*($9)) ){ goto $label$23 }
	$4 = [1]
	$9 = *($18 + [320])
	
.LABEL $label$22
	if ( (($9 & [1]) == 0) ){ goto $label$19 }
	CALL $204(*(($18 + [328])))
	
.LABEL $label$19
	if ( ((*($18 + [336]) & [1]) == 0) ){ goto $label$16 }
	CALL $204(*(($18 + [344])))
	
.LABEL $label$16
	if ( ((*($18 + [352]) & [1]) == 0) ){ goto $label$24 }
	CALL $204(*(($18 + [360])))
	
.LABEL $label$24
	if ( $4 ){ goto $label$9 }
	$17 = ( *($18 + [392]) ? (($18 + [384]) | [1]) : (*($18 + [384]) & [1]) )
	$9 = [-1]
	
.LOOP $label$25:
	$4 = ($17 + $9)
	$5 = ($9 + [1])
	$9 = $5
	if ( *(($4 + [1])) ){ goto $label$25 }
	$14 = (CASTING uint_64)(uint_32 $5)
	$11 = (int_64)0
	$10 = (int_64)59
	$12 = (int_64)0
	
.LOOP $label$26:
	$13 = (int_64)0
	if ( ((uint_64)$11 >= (uint_64)$14) ){ goto $label$27 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$9 = ($9 + [165])
	goto $label$28 
	
.LABEL $label$29
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$31 }
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	goto $label$30 
	
.LABEL $label$31
	$13 = ((int_64)$13 & (int_64)15)
	
.LABEL $label$30
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$26 }
	$11 = (int_64)0
	$10 = ( $12 ? (int_64)0 : CALL is_account($12) )
	$15 = ( (int_64)0 ? $10 : ((int_64)$10 == (int_64)$1) )
	$10 = (int_64)59
	$17 = [3968]
	$12 = (int_64)0
	
.LOOP $label$32:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$33 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$35 }
	$9 = ($9 + [165])
	goto $label$34 
	
.LABEL $label$35
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$34
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$33
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$32 }
	$11 = (int_64)0
	$10 = (int_64)59
	$17 = [3968]
	$14 = (int_64)0
	
.LOOP $label$36:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$37 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$39 }
	$9 = ($9 + [165])
	goto $label$38 
	
.LABEL $label$39
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$38
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$37
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$36 }
	*((($18 + [280]) + [32])) = [0]
	*($18 + [296]) = (int_64)-1
	$11 = (int_64)0
	*($18 + [304]) = (int_64)0
	*($18 + [288]) = $14
	*($18 + [280]) = $12
	$17 = CALL db_find_i64($12, $14, (int_64)-4023100423488818528, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$40 }
	$17 = CALL $117(($18 + [280]), $17)
	CALL eosio_assert(((int_32)*($17 + [88]) == (int_32)($18 + [280])), [2464])
	$14 = *($17 + [8])
	$13 = (int_64)59
	$17 = [3984]
	$12 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$11 > (uint_64)(int_64)3) ){ goto $label$46 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$9 = ($9 + [165])
	goto $label$44 
	
.LABEL $label$46
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$42
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$41 }
	if ( ((int_64)$14 == (int_64)$12) ){ goto $label$40 }
	$15 = ( $15 ? $14 : (int_64)($14 == 0) )
	
.LABEL $label$40
	$10 = CALL atoll(( *($18 + [440]) ? (($18 + [432]) | [1]) : (*($18 + [432]) & [1]) ))
	$13 = CALL atoll(( *($18 + [424]) ? (($18 + [416]) | [1]) : (*($18 + [416]) & [1]) ))
	*($18 + [272]) = CALL atoll(( *($18 + [408]) ? (($18 + [400]) | [1]) : (*($18 + [400]) & [1]) ))
	CALL $147(($18 + [256]), ($18 + [368]), [3536])
	*((($18 + [216]) + [32])) = [0]
	*($18 + [232]) = (int_64)-1
	$11 = *($0)
	*($18 + [216]) = $11
	*($18 + [224]) = $11
	*($18 + [240]) = (int_64)0
	$17 = CALL db_lowerbound_i64($11, $11, (int_64)-7949121189994692608, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$48 }
	$17 = CALL $148(($18 + [216]), $17)
	CALL eosio_assert(((int_64)*($17 + [8]) == (int_64)$10), [4768])
	CALL eosio_assert(((uint_64)*($17 + [16]) > (uint_64)((int_64)((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000) & (int_64)4294967295)), [4784])
	$9 = ($17 + [16])
	$4 = ($17 + [8])
	$5 = ($3 + [8])
	$11 = *($5)
	if ( ((int_64)$11 != (int_64)1397703940) ){ goto $label$47 }
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($17 + [80]) == (int_32)($18 + [216])), [2784])
	CALL eosio_assert(((int_64)*($18 + [216]) == (int_64)CALL $fimport$14()), [2832])
	$11 = *($17)
	CALL eosio_assert(((int_64)*($5) == (int_64)*(($17 + [40]))), [4800])
	$12 = ((int_64)*($17 + [32]) + (int_64)*($3))
	*($17 + [32]) = $12
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [4848])
	CALL eosio_assert(((int_64)*($17 + [32]) < (int_64)4611686018427387904), [4880])
	CALL eosio_assert(((int_64)*($3) > (int_64)999), [4480])
	CALL eosio_assert(((int_64)*($17 + [32]) < (int_64)100000001), [4912])
	CALL eosio_assert(((int_64)$11 == (int_64)*($17)), [2896])
	*($18 + [208]) = (($18 + [480]) + [80])
	*($18 + [204]) = ($18 + [480])
	*($18 + [200]) = ($18 + [480])
	*($18 + [144]) = ($18 + [200])
	*($18 + [44]) = $4
	*($18 + [40]) = $17
	*($18 + [48]) = $9
	*($18 + [52]) = ($17 + [24])
	*($18 + [56]) = ($17 + [32])
	*($18 + [60]) = ($17 + [48])
	*($18 + [64]) = ($17 + [64])
	CALL $149(($18 + [40]), ($18 + [144]))
	CALL db_update_i64(*($17 + [84]), (int_64)0, ($18 + [480]), [80])
	if ( (uint_64)($11 <= *((($18 + [216]) + [16]))) ){ goto $label$10 }
	*(($18 + [232])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	goto $label$10 
	
.LABEL $label$48
	CALL eosio_assert([0], [5104])
	goto $label$10 
	
.LABEL $label$47
	if ( ((int_64)$11 != (int_64)5461508) ){ goto $label$49 }
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($17 + [80]) == (int_32)($18 + [216])), [2784])
	CALL eosio_assert(((int_64)*($18 + [216]) == (int_64)CALL $fimport$14()), [2832])
	$11 = *($17)
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)*(($17 + [56]))), [4800])
	$12 = ((int_64)*($17 + [48]) + (int_64)*($3))
	*($17 + [48]) = $12
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [4848])
	CALL eosio_assert(((int_64)*($17 + [48]) < (int_64)4611686018427387904), [4880])
	CALL eosio_assert(((int_64)*($3) > (int_64)999999), [4960])
	CALL eosio_assert(((int_64)*($17 + [48]) < (int_64)100000000001), [5008])
	CALL eosio_assert(((int_64)$11 == (int_64)*($17)), [2896])
	*($18 + [208]) = (($18 + [480]) + [80])
	*($18 + [204]) = ($18 + [480])
	*($18 + [200]) = ($18 + [480])
	*($18 + [144]) = ($18 + [200])
	*($18 + [44]) = $4
	*($18 + [40]) = $17
	*($18 + [48]) = $9
	*($18 + [52]) = ($17 + [24])
	*($18 + [56]) = ($17 + [32])
	*($18 + [60]) = ($17 + [48])
	*($18 + [64]) = ($17 + [64])
	CALL $149(($18 + [40]), ($18 + [144]))
	CALL db_update_i64(*($17 + [84]), (int_64)0, ($18 + [480]), [80])
	$17 = ($18 + [232])
	if ( (uint_64)($11 <= *($17)) ){ goto $label$10 }
	*($17) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	goto $label$10 
	
.LABEL $label$49
	if ( ((int_64)$11 != (int_64)293455873288) ){ goto $label$50 }
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($17 + [80]) == (int_32)($18 + [216])), [2784])
	CALL eosio_assert(((int_64)*($18 + [216]) == (int_64)CALL $fimport$14()), [2832])
	$11 = *($17)
	CALL eosio_assert(((int_64)*(($3 + [8])) == (int_64)*(($17 + [72]))), [4800])
	$12 = ((int_64)*($17 + [64]) + (int_64)*($3))
	*($17 + [64]) = $12
	CALL eosio_assert(((int_64)$12 > (int_64)-4611686018427387904), [4848])
	CALL eosio_assert(((int_64)*($17 + [64]) < (int_64)4611686018427387904), [4880])
	CALL eosio_assert(((int_64)*($3) > (int_64)9999999), [4672])
	CALL eosio_assert(((int_64)*($17 + [64]) < (int_64)1000000000001), [5056])
	CALL eosio_assert(((int_64)$11 == (int_64)*($17)), [2896])
	*($18 + [208]) = (($18 + [480]) + [80])
	*($18 + [204]) = ($18 + [480])
	*($18 + [200]) = ($18 + [480])
	*($18 + [144]) = ($18 + [200])
	*($18 + [44]) = $4
	*($18 + [40]) = $17
	*($18 + [48]) = $9
	*($18 + [52]) = ($17 + [24])
	*($18 + [56]) = ($17 + [32])
	*($18 + [60]) = ($17 + [48])
	*($18 + [64]) = ($17 + [64])
	CALL $149(($18 + [40]), ($18 + [144]))
	CALL db_update_i64(*($17 + [84]), (int_64)0, ($18 + [480]), [80])
	$17 = ($18 + [232])
	if ( (uint_64)($11 <= *($17)) ){ goto $label$10 }
	*($17) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	goto $label$10 
	
.LABEL $label$50
	CALL eosio_assert([0], [2656])
	goto $label$10 
	
.LABEL $label$11
	CALL $205(($18 + [480]))
	
.LABEL $label$10
	*($18 + [208]) = (int_64)1398362884
	*($18 + [200]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$11 = (int_64)5462355
	$17 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	
.LOOP $label$55:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$55 }
	
.LABEL $label$54
	$9 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	$9 = [0]
	
.LABEL $label$51
	CALL eosio_assert($9, [3120])
	$17 = ($3 + [8])
	*(($9 = (($18 + [200]) + [8]))) = *($17)
	*($18 + [200]) = (int_64)0
	CALL $220(($18 + [168]), ($18 + [256]))
	CALL _ZN11dbetonedice11_split_markENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetENS7_11symbol_typeE(($18 + [184]), ($18 + [168]), ($18 + [200]), *($17))
	if ( ((*($18 + [168]) & [1]) == 0) ){ goto $label$56 }
	CALL $204(*($18 + [176]))
	
.LABEL $label$56
	CALL eosio_assert((*($18 + [192]) <= [11]), [5120])
	$11 = *($18 + [200])
	CALL eosio_assert(((int_64)*($17) == (int_64)*($9)), [4416])
	CALL eosio_assert(((int_64)*($3) >= (int_64)$11), [5152])
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$57 }
	*($18 + [160]) = ($0 + [48])
	CALL $120(($18 + [480]), ($18 + [160]), ($18 + [272]))
	$17 = [0]
	$9 = [0]
	$4 = *($18 + [484])
	if ( ($4 == 0) ){ goto $label$58 }
	$9 = ( $4 ? [0] : ((int_64)*($18 + [272]) == (int_64)*($4 + [32])) )
	
.LABEL $label$58
	CALL eosio_assert(($9 == 0), [4064])
	*($18 + [144]) = (int_64)0
	*($18 + [152]) = *(($3 + [8]))
	CALL eosio_assert([1], [3056])
	$11 = (uint_64)*($18 + [152]) >> (uint_64)(int_64)8)
	
.LOOP $label$61:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$62 }
	
.LOOP $label$63:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$60 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$63 }
	
.LABEL $label$62
	$9 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	$9 = [0]
	
.LABEL $label$59
	CALL eosio_assert($9, [3120])
	*(($18 + [136])) = [0]
	*($18 + [128]) = (int_64)0
	$17 = CALL strlen([4224])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$66 }
	*($18 + [128]) = ($17 << [1])
	$9 = (($18 + [128]) | [1])
	if ( $17 ){ goto $label$65 }
	goto $label$64 
	
.LABEL $label$66
	$4 = (($17 + [16]) & [-16])
	$9 = CALL $203($4)
	*($18 + [128]) = ($4 | [1])
	*($18 + [136]) = $9
	*($18 + [132]) = $17
	
.LABEL $label$65
	CALL memcpy($9, [4224], $17)
	
.LABEL $label$64
	*(($9 + $17)) = [0]
	$11 = *($18 + [272])
	CALL $220(($18 + [112]), ($18 + [368]))
	CALL $220(($18 + [96]), ($18 + [128]))
	CALL _ZN11dbetonedice8dbetdice6recordEyyyyRKN5eosio5assetES4_NSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESB_yyy($0, $1, $15, $13, $11, $3, ($18 + [144]), ($18 + [112]), ($18 + [96]), $10, (int_64)1, (int_64)3)
	if ( ((*($18 + [96]) & [1]) == 0) ){ goto $label$67 }
	CALL $204(*($18 + [104]))
	
.LABEL $label$67
	if ( ((*($18 + [112]) & [1]) == 0) ){ goto $label$68 }
	CALL $204(*($18 + [120]))
	
.LABEL $label$68
	$11 = *(($3 + [8]))
	if ( ((int_64)$11 != (int_64)1397703940) ){ goto $label$69 }
	$6 = *($0)
	$11 = (int_64)0
	$13 = (int_64)59
	$17 = [2576]
	$12 = (int_64)0
	
.LOOP $label$70:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$75 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$74 }
	$9 = ($9 + [165])
	goto $label$73 
	
.LABEL $label$75
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$72 }
	goto $label$71 
	
.LABEL $label$74
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$73
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$72
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$71
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$70 }
	$11 = (int_64)0
	$10 = (int_64)59
	$17 = [3968]
	$14 = (int_64)0
	
.LOOP $label$76:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$77 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$79 }
	$9 = ($9 + [165])
	goto $label$78 
	
.LABEL $label$79
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$78
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$77
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$76 }
	$11 = (int_64)0
	$13 = (int_64)59
	$17 = [5184]
	$16 = (int_64)0
	
.LOOP $label$80:
	if ( ((uint_64)$11 > (uint_64)(int_64)8) ){ goto $label$85 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$84 }
	$9 = ($9 + [165])
	goto $label$83 
	
.LABEL $label$85
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$84
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$83
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$82
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$81
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$16 = ((int_64)$10 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$80 }
	*((($18 + [40]) + [28])) = *(($3 + [12]))
	*((($18 + [40]) + [24])) = *(($3 + [8]))
	*((($18 + [40]) + [20])) = *(($3 + [4]))
	*($18 + [48]) = $1
	*($18 + [40]) = $6
	*($18 + [56]) = *($3)
	*($18 + [480]) = $14
	*($18 + [488]) = $16
	*($18 + [496]) = [0]
	*(($9 = (($18 + [480]) + [20]))) = [0]
	*(($4 = (($18 + [480]) + [24]))) = [0]
	*(($17 = CALL $203([16]))) = $6
	*($17 + [8]) = $12
	*(($5 = (($18 + [480]) + [32]))) = [0]
	$8 = ($17 + [16])
	*($4) = $8
	*($9) = $8
	*($18 + [496]) = $17
	*($18 + [508]) = [0]
	*(($18 + [516])) = [0]
	CALL $58((($18 + [480]) + [28]), [32])
	$17 = *($5)
	$9 = *($18 + [508])
	*($18 + [84]) = $9
	*($18 + [80]) = $9
	*($18 + [88]) = $17
	*($18 + [16]) = ($18 + [80])
	*($18 + [24]) = ($18 + [40])
	CALL $150(($18 + [24]), ($18 + [16]))
	CALL $82(($18 + [80]), ($18 + [480]))
	$17 = *($18 + [80])
	CALL send_inline($17, (*($18 + [84]) - $17))
	$17 = *($18 + [80])
	if ( ($17 == 0) ){ goto $label$86 }
	*($18 + [84]) = $17
	CALL $204($17)
	
.LABEL $label$86
	$17 = *($18 + [508])
	if ( ($17 == 0) ){ goto $label$87 }
	*(($18 + [512])) = $17
	CALL $204($17)
	
.LABEL $label$87
	$17 = *($18 + [496])
	if ( ($17 == 0) ){ goto $label$88 }
	*(($18 + [500])) = $17
	CALL $204($17)
	
.LABEL $label$88
	$11 = *(($3 + [8]))
	
.LABEL $label$69
	if ( ((int_64)$11 != (int_64)1397703940) ){ goto $label$89 }
	*($18 + [88]) = (int_64)1397703940
	*($18 + [80]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$11 = (int_64)5459781
	$17 = [0]
	
.LOOP $label$92:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$91 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$93 }
	
.LOOP $label$94:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$91 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$94 }
	
.LABEL $label$93
	$9 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$92 }
	goto $label$90 
	
.LABEL $label$91
	$9 = [0]
	
.LABEL $label$90
	CALL eosio_assert($9, [3120])
	CALL _ZN11dbetonedice14inviter_chargeERKN5eosio5assetERS1_y($3, ($18 + [80]), (int_64)10)
	$6 = *($0)
	$11 = (int_64)0
	$13 = (int_64)59
	$17 = [2576]
	$12 = (int_64)0
	
.LOOP $label$95:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$100 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$99 }
	$9 = ($9 + [165])
	goto $label$98 
	
.LABEL $label$100
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$99
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$98
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$97
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$96
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$95 }
	$11 = (int_64)0
	$10 = (int_64)59
	$17 = [3968]
	$14 = (int_64)0
	
.LOOP $label$101:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$102 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$9 = ($9 + [165])
	goto $label$103 
	
.LABEL $label$104
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$102
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$101 }
	$11 = (int_64)0
	$13 = (int_64)59
	$17 = [5200]
	$16 = (int_64)0
	
.LOOP $label$105:
	if ( ((uint_64)$11 > (uint_64)(int_64)9) ){ goto $label$110 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$9 = ($9 + [165])
	goto $label$108 
	
.LABEL $label$110
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$109
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$107
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$106
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$16 = ((int_64)$10 | (int_64)$16)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$105 }
	*((($18 + [40]) + [28])) = *($18 + [84])
	*($18 + [48]) = $1
	*((($18 + [40]) + [36])) = *(($18 + [92]))
	*((($18 + [40]) + [32])) = *(($18 + [88]))
	*($18 + [40]) = $6
	*($18 + [56]) = $15
	*($18 + [64]) = *($18 + [80])
	*($18 + [480]) = $14
	*($18 + [488]) = $16
	*($18 + [496]) = [0]
	*(($9 = ($18 + [500]))) = [0]
	*(($4 = ($18 + [504]))) = [0]
	*(($17 = CALL $203([16]))) = $6
	*($17 + [8]) = $12
	*(($5 = (($18 + [480]) + [32]))) = [0]
	$8 = ($17 + [16])
	*($4) = $8
	*($9) = $8
	*($18 + [496]) = $17
	*($18 + [508]) = [0]
	*((($18 + [480]) + [36])) = [0]
	CALL $58((($18 + [480]) + [28]), [40])
	$17 = *($5)
	$9 = *($18 + [508])
	*($18 + [28]) = $9
	*($18 + [24]) = $9
	*($18 + [32]) = $17
	*($18 + [8]) = ($18 + [24])
	*($18 + [16]) = ($18 + [40])
	CALL $152(($18 + [16]), ($18 + [8]))
	CALL $82(($18 + [24]), ($18 + [480]))
	$17 = *($18 + [24])
	CALL send_inline($17, (*($18 + [28]) - $17))
	$17 = *($18 + [24])
	if ( ($17 == 0) ){ goto $label$111 }
	*($18 + [28]) = $17
	CALL $204($17)
	
.LABEL $label$111
	$17 = *($18 + [508])
	if ( ($17 == 0) ){ goto $label$112 }
	*(($18 + [512])) = $17
	CALL $204($17)
	
.LABEL $label$112
	$17 = *($18 + [496])
	if ( ($17 == 0) ){ goto $label$113 }
	*(($18 + [500])) = $17
	CALL $204($17)
	
.LABEL $label$113
	$11 = *(($3 + [8]))
	
.LABEL $label$89
	if ( ((int_64)$11 != (int_64)1397703940) ){ goto $label$114 }
	$9 = ($0 + [128])
	$4 = ($0 + [136])
	$17 = CALL db_lowerbound_i64(*($0 + [128]), *($4), (int_64)-4418693909081751552, (int_64)0)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$116 }
	$17 = CALL $108($9, $17)
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($17 + [16]) == (int_32)$9), [2784])
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$14()), [2832])
	$11 = ((int_64)*($17 + [8]) + (int_64)1)
	*($17 + [8]) = $11
	*($18 + [88]) = (int_64)0
	*($18 + [80]) = $11
	$11 = *($17)
	CALL eosio_assert([1], [2896])
	CALL eosio_assert([1], [2704])
	CALL memcpy(($18 + [480]), $17, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($18 + [480]) | [8]), ($17 + [8]), [8])
	CALL db_update_i64(*($17 + [20]), (int_64)0, ($18 + [480]), [16])
	$17 = ($0 + [144])
	if ( (uint_64)($11 <= *($17)) ){ goto $label$115 }
	*($17) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	goto $label$115 
	
.LABEL $label$116
	$10 = *($0)
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$14()), [2720])
	*(($17 = CALL $203([32])) + [16]) = $9
	*($17 + [8]) = (int_64)10000
	*($17) = (int_64)0
	*($18 + [88]) = (int_64)0
	*($18 + [80]) = (int_64)10000
	CALL eosio_assert([1], [2704])
	CALL memcpy(($18 + [480]), $17, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($18 + [480]) | [8]), ($17 + [8]), [8])
	$11 = *($17)
	$4 = CALL db_store_i64(*($4), (int_64)-4418693909081751552, $10, $11, ($18 + [480]), [16])
	*($17 + [20]) = $4
	$9 = ($0 + [144])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$117 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$117
	*($18 + [40]) = $17
	$11 = *($17)
	*($18 + [480]) = $11
	*($18 + [24]) = $4
	$5 = ($0 + [156])
	$9 = *($5)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [160]))) ){ goto $label$119 }
	*($9 + [8]) = $11
	*($9 + [16]) = $4
	*($18 + [40]) = [0]
	*($9) = $17
	*($5) = ($9 + [24])
	goto $label$118 
	
.LABEL $label$119
	CALL $109(($0 + [152]), ($18 + [40]), ($18 + [480]), ($18 + [24]))
	
.LABEL $label$118
	$17 = *($18 + [40])
	*($18 + [40]) = [0]
	if ( ($17 == 0) ){ goto $label$115 }
	CALL $204($17)
	
.LABEL $label$115
	$11 = CALL current_time()
	*(($18 + [508])) = [0]
	*(($18 + [512])) = [0]
	*($18 + [492]) = [0]
	*($18 + [496]) = [0]
	*($18 + [500]) = [0]
	*($18 + [504]) = [0]
	*($18 + [480]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($18 + [516]) = [0]
	*(($18 + [520])) = [0]
	*(($18 + [524])) = [0]
	*($18 + [528]) = [0]
	*(($18 + [532])) = [0]
	*(($18 + [536])) = [0]
	$4 = ($18 + [516])
	$14 = *($0)
	$11 = (int_64)0
	$13 = (int_64)59
	$17 = [2576]
	$12 = (int_64)0
	
.LOOP $label$120:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$125 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$124 }
	$9 = ($9 + [165])
	goto $label$123 
	
.LABEL $label$125
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$122 }
	goto $label$121 
	
.LABEL $label$124
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$123
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$122
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$121
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$120 }
	*($18 + [32]) = $12
	*($18 + [24]) = $14
	$11 = (int_64)0
	$10 = (int_64)59
	$17 = [2624]
	$12 = (int_64)0
	
.LOOP $label$126:
	$13 = (int_64)0
	if ( ((uint_64)$11 > (uint_64)(int_64)11) ){ goto $label$127 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$9 = ($9 + [165])
	goto $label$128 
	
.LABEL $label$129
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($9 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$127
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$126 }
	*($18 + [16]) = $12
	$11 = (int_64)0
	$13 = (int_64)59
	$17 = [5216]
	$12 = (int_64)0
	
.LOOP $label$130:
	if ( ((uint_64)$11 > (uint_64)(int_64)9) ){ goto $label$135 }
	$9 = *($17)
	if ( ((uint_32)(($9 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$134 }
	$9 = ($9 + [165])
	goto $label$133 
	
.LABEL $label$135
	$10 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$132 }
	goto $label$131 
	
.LABEL $label$134
	$9 = ( ($9 + [208]) ? [0] : ((($9 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$133
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56)
	
.LABEL $label$132
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$131
	$17 = ($17 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$10 | (int_64)$12)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$130 }
	*($18 + [8]) = $12
	*(($18 + [60])) = *(($3 + [12]))
	*(($18 + [56])) = *(($3 + [8]))
	*((($18 + [40]) + [12])) = *(($3 + [4]))
	*($18 + [40]) = $1
	*($18 + [48]) = *($3)
	CALL $220(($18 + [64]), ($18 + [400]))
	$17 = (($18 + [480]) + [40])
	$9 = *($17)
	if ( ((uint_32)$9 >= (uint_32)*(($18 + [524]))) ){ goto $label$137 }
	CALL $153($9, ($18 + [24]), *($18 + [16]), *($18 + [8]), ($18 + [40]))
	*($17) = (*($17) + [40])
	goto $label$136 
	
.LABEL $label$137
	CALL $154($4, ($18 + [24]), ($18 + [16]), ($18 + [8]), ($18 + [40]))
	
.LABEL $label$136
	if ( ((*($18 + [64]) & [1]) == 0) ){ goto $label$138 }
	CALL $204(*(($18 + [72])))
	
.LABEL $label$138
	*(($18 + [500])) = [0]
	$11 = *($0)
	CALL $111(($18 + [40]), ($18 + [480]))
	$17 = *($18 + [40])
	CALL send_deferred(($18 + [80]), $11, $17, (*($18 + [44]) - $17), [0])
	$17 = *($18 + [40])
	if ( ($17 == 0) ){ goto $label$139 }
	*($18 + [44]) = $17
	CALL $204($17)
	
.LABEL $label$139
	CALL $75(($18 + [480]))
	
.LABEL $label$114
	if ( ((*($18 + [128]) & [1]) == 0) ){ goto $label$57 }
	CALL $204(*($18 + [136]))
	
.LABEL $label$57
	CALL $155(($18 + [184]), *($18 + [188]))
	$4 = *($18 + [240])
	if ( ($4 == 0) ){ goto $label$140 }
	$5 = ($18 + [244])
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$142 }
	
.LOOP $label$143:
	$17 = ($17 + [-24])
	$9 = *($17)
	*($17) = [0]
	if ( ($9 == 0) ){ goto $label$144 }
	CALL $204($9)
	
.LABEL $label$144
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$143 }
	$17 = *(($18 + [240]))
	goto $label$141 
	
.LABEL $label$142
	$17 = $4
	
.LABEL $label$141
	*($5) = $4
	CALL $204($17)
	
.LABEL $label$140
	if ( ((*($18 + [256]) & [1]) == 0) ){ goto $label$145 }
	CALL $204(*($18 + [264]))
	
.LABEL $label$145
	$4 = *($18 + [304])
	if ( ($4 == 0) ){ goto $label$9 }
	$5 = ($18 + [308])
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$147 }
	
.LOOP $label$148:
	$17 = ($17 + [-24])
	$9 = *($17)
	*($17) = [0]
	if ( ($9 == 0) ){ goto $label$149 }
	CALL $204($9)
	
.LABEL $label$149
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$148 }
	$17 = *(($18 + [304]))
	goto $label$146 
	
.LABEL $label$147
	$17 = $4
	
.LABEL $label$146
	*($5) = $4
	CALL $204($17)
	
.LABEL $label$9
	if ( ((*($18 + [368]) & [1]) == 0) ){ goto $label$150 }
	CALL $204(*($18 + [376]))
	
.LABEL $label$150
	if ( ((*($18 + [384]) & [1]) == 0) ){ goto $label$151 }
	CALL $204(*($18 + [392]))
	
.LABEL $label$151
	if ( ((*($18 + [400]) & [1]) == 0) ){ goto $label$152 }
	CALL $204(*($18 + [408]))
	
.LABEL $label$152
	if ( ((*($18 + [416]) & [1]) == 0) ){ goto $label$153 }
	CALL $204(*($18 + [424]))
	
.LABEL $label$153
	if ( ((*($18 + [432]) & [1]) == 0) ){ goto $label$154 }
	CALL $204(*($18 + [440]))
	
.LABEL $label$154
	if ( ((*($18 + [448]) & [1]) == 0) ){ goto $label$155 }
	CALL $204(*($18 + [456]))
	
.LABEL $label$155
	$4 = *($18 + [464])
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$156 }
	$17 = *($18 + [468])
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$158 }
	$9 = ([0] - $4)
	$17 = ($17 + [-12])
	
.LOOP $label$159:
	if ( ((*($17) & [1]) == 0) ){ goto $label$160 }
	CALL $204(*(($17 + [8])))
	
.LABEL $label$160
	$17 = ($17 + [-12])
	if ( ((int_32)($17 + $9) != (int_32)[-12]) ){ goto $label$159 }
	$17 = *($18 + [464])
	goto $label$157 
	
.LABEL $label$158
	$17 = $4
	
.LABEL $label$157
	*($18 + [468]) = $4
	CALL $204($17)
	
.LABEL $label$156
	*([0] + [4]) = ($18 + [560])
	return (unreachable)
	
.LABEL $label$7
	CALL $205(($18 + [128]))
	(unreachable)
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $6) >> [3]) >= (uint_32)$1) ){ goto $label$6 }
	$5 = *($0)
	$3 = int_32(($6 - $5) >> [3])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$4 }
	$6 = [536870911]
	$2 = ($2 - $5)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$7 }
	$6 = int_32($2 >> [2])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $203(($6 << [3]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = (*($0) + [8])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $219($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($6 << [3]))
	$5 = ($2 + ($3 << [3]))
	$6 = $5
	
.LOOP $label$9:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$10
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $204($1)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [3152])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [3])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $141($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [3]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$6), [2992])
	CALL memcpy($7, *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[3]), [2992])
	CALL memcpy(($7 + [4]), *($4), [4])
	$6 = (*($4) + [4])
	*($4) = $6
	$7 = ($7 + [8])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $142 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [16]) = (int_64)0
	*(($2 = ($0 + [24]))) = (int_64)1398362884
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [3120])
	*(($2 = ($0 + [40]))) = (int_64)1398362884
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [3120])
	*(($2 = ($0 + [56]))) = (int_64)1398362884
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [3120])
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [3120])
	return $0
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [2992])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [2992])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [2992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [3152])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [2992])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [3152])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [3152])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $93($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $204($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $204($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [2992])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [2992])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $57(CALL $94($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0)
	$3 = *($0 + [4])
	$5 = *($3)
	*($1) = *($5)
	*(($1 + [8])) = *(($5 + [8]))
	CALL eosio_assert([1], [80])
	$4 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [48])
	$4 = *($1 + [8])
	$7 = *($1)
	if ( ((int_64)$7 < (int_64)1) ){ goto $label$7 }
	$7 = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $7) * (float_64)(float_64)0.5))
	goto $label$6 
	
.LABEL $label$7
	$7 = (int_64)0
	
.LABEL $label$6
	*($1 + [16]) = $7
	*(($1 + [24])) = $4
	*(($1 + [40])) = *(*($3) + [8])
	*(($1 + [56])) = *(*($3) + [8])
	$6 = $9
	$5 = ($6 + [-64])
	*([0] + [4]) = $5
	*($8 + [12]) = $5
	*($8 + [8]) = $5
	*($8 + [16]) = $6
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($1 + [16])
	*($8 + [32]) = $1
	*($8 + [40]) = ($1 + [32])
	*($8 + [44]) = ($1 + [48])
	CALL $46(($8 + [32]), ($8 + [24]))
	$4 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8
	*($1 + [68]) = CALL db_store_i64(*($2 + [8]), (int_64)5455799419163115520, *(*($0 + [8])), $4), $5, [64])
	if ( (uint_64)($4 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$8
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_32 $21
	$21 = (*([0] + [4]) - [336])
	*([0] + [4]) = $21
	$6 = *(($1 + [20]))
	$1 = *($1 + [16])
	$17 = CALL current_time()
	*(($21 + [284])) = [0]
	*(($21 + [288])) = [0]
	*($21 + [268]) = [0]
	*($21 + [272]) = [0]
	*($21 + [276]) = [0]
	*($21 + [280]) = [0]
	*($21 + [256]) = ((CASTING uint_32)(uint_64 ((uint_64)$17 / (uint_64)(int_64)1000000)) + [60])
	*($21 + [292]) = [0]
	*(($21 + [296])) = [0]
	*(($21 + [300])) = [0]
	*($21 + [304]) = [0]
	*(($21 + [308])) = [0]
	*(($21 + [312])) = [0]
	*($21 + [156]) = $1
	*($21 + [152]) = $1
	*($21 + [160]) = $6
	CALL $72(($21 + [152]), ($21 + [256]))
	CALL $74(CALL $73(CALL $73(($21 + [152]), ($21 + [280])), ($21 + [292])), ($21 + [304]))
	*(($21 + [248])) = [0]
	*($21 + [240]) = (int_64)0
	$1 = CALL strlen([2416])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($21 + [240]) = ($1 << [1])
	$6 = (($21 + [240]) | [1])
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($1 + [16]) & [-16])
	$6 = CALL $203($8)
	*($21 + [240]) = ($8 | [1])
	*($21 + [248]) = $6
	*($21 + [244]) = $1
	
.LABEL $label$3
	CALL memcpy($6, [2416], $1)
	
.LABEL $label$2
	*(($6 + $1)) = [0]
	$2 = *((($21 + [256]) + [40]))
	$15 = *(($21 + [292]))
	if ( ((int_32)$15 == (int_32)$2) ){ goto $label$5 }
	$5 = (($21 + [8]) + [32])
	$4 = (($21 + [8]) + [16])
	$3 = (($21 + [152]) + [16])
	$9 = (($21 + [200]) + [8])
	$10 = (($21 + [112]) + [24])
	$11 = (($21 + [72]) + [28])
	$13 = (($21 + [8]) + [40])
	$12 = (($21 + [72]) + [20])
	
.LOOP $label$6:
	$8 = CALL $76(($21 + [200]), $15)
	$20 = *($9)
	$16 = (int_64)59
	$1 = [2448]
	$17 = (int_64)0
	$18 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$17 > (uint_64)(int_64)9) ){ goto $label$12 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$6 = ($6 + [165])
	goto $label$10 
	
.LABEL $label$12
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$8
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$7 }
	if ( ((int_64)$20 != (int_64)$18) ){ goto $label$13 }
	CALL $77(($21 + [152]), $8)
	*((($21 + [112]) + [16])) = (int_64)-1
	*($10) = (int_64)0
	*((($21 + [112]) + [32])) = [0]
	$17 = *($0)
	*((($21 + [112]) + [8])) = $17
	*($21 + [112]) = $17
	$1 = CALL db_find_i64($17, $17, (int_64)4986958867379634176, *($21 + [152]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$15 }
	$1 = CALL $78(($21 + [112]), $1)
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)($21 + [112])), [2464])
	CALL eosio_assert([1], [2528])
	CALL $79(($21 + [112]), $1, (int_64)0, ($21 + [8]))
	goto $label$14 
	
.LABEL $label$15
	$17 = *($0)
	*($21 + [72]) = ($21 + [152])
	CALL $80(($21 + [8]), ($21 + [112]), $17, ($21 + [72]))
	
.LABEL $label$14
	$17 = *((($21 + [152]) + [24]))
	if ( ((int_64)$17 == (int_64)5461508) ){ goto $label$20 }
	if ( ((int_64)$17 == (int_64)1397703940) ){ goto $label$21 }
	if ( ((int_64)$17 != (int_64)293455873288) ){ goto $label$19 }
	$7 = *((($21 + [152]) + [8]))
	$17 = (int_64)0
	$16 = (int_64)59
	$1 = [2576]
	$18 = (int_64)0
	
.LOOP $label$22:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$27 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$6 = ($6 + [165])
	goto $label$25 
	
.LABEL $label$27
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$26
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$24
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$23
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$22 }
	*((($21 + [56]) + [8])) = $18
	*($21 + [56]) = $7
	$17 = (int_64)0
	$19 = (int_64)59
	$1 = [2640]
	$18 = (int_64)0
	
.LOOP $label$28:
	$16 = (int_64)0
	if ( ((uint_64)$17 > (uint_64)(int_64)11) ){ goto $label$29 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$6 = ($6 + [165])
	goto $label$30 
	
.LABEL $label$31
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$29
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$28 }
	$17 = (int_64)0
	$16 = (int_64)59
	$1 = [2608]
	$20 = (int_64)0
	
.LOOP $label$32:
	if ( ((uint_64)$17 > (uint_64)(int_64)7) ){ goto $label$37 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$36 }
	$6 = ($6 + [165])
	goto $label$35 
	
.LABEL $label$37
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$34 }
	goto $label$33 
	
.LABEL $label$36
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$35
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$34
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$33
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$32 }
	*($4) = *($3)
	*($21 + [8]) = $7
	*((($21 + [8]) + [8])) = *($21 + [152])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $220($5, ($21 + [240]))
	CALL $82(($21 + [320]), CALL $81(($21 + [72]), ($21 + [56]), $18, $20, ($21 + [8])))
	$1 = *($21 + [320])
	CALL send_inline($1, (*($21 + [324]) - $1))
	$1 = *($21 + [320])
	if ( ($1 == 0) ){ goto $label$38 }
	*($21 + [324]) = $1
	CALL $204($1)
	
.LABEL $label$38
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$39 }
	*((($21 + [72]) + [32])) = $1
	CALL $204($1)
	
.LABEL $label$39
	$1 = *((($21 + [72]) + [16]))
	if ( ($1 == 0) ){ goto $label$40 }
	*($12) = $1
	CALL $204($1)
	
.LABEL $label$40
	if ( ((*($5) & [1]) == 0) ){ goto $label$18 }
	CALL $204(*($13))
	$8 = *($10)
	if ( $8 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$21
	$7 = *((($21 + [152]) + [8]))
	$17 = (int_64)0
	$16 = (int_64)59
	$1 = [2576]
	$18 = (int_64)0
	
.LOOP $label$41:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$46 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$6 = ($6 + [165])
	goto $label$44 
	
.LABEL $label$46
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$45
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$43
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$42
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$41 }
	*((($21 + [56]) + [8])) = $18
	*($21 + [56]) = $7
	$17 = (int_64)0
	$16 = (int_64)59
	$1 = [2592]
	$18 = (int_64)0
	
.LOOP $label$47:
	if ( ((uint_64)$17 > (uint_64)(int_64)10) ){ goto $label$52 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$51 }
	$6 = ($6 + [165])
	goto $label$50 
	
.LABEL $label$52
	$19 = (int_64)0
	if ( ((int_64)$17 == (int_64)11) ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$51
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$50
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$49
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$48
	$1 = ($1 + [1])
	$16 = ((int_64)$16 + (int_64)-5)
	$18 = ((int_64)$19 | (int_64)$18)
	$17 = ((int_64)$17 + (int_64)1)
	if ( ((int_64)$17 != (int_64)13) ){ goto $label$47 }
	$17 = (int_64)0
	$16 = (int_64)59
	$1 = [2608]
	$20 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$17 > (uint_64)(int_64)7) ){ goto $label$58 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$6 = ($6 + [165])
	goto $label$56 
	
.LABEL $label$58
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$54
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$53 }
	*($4) = *($3)
	*($21 + [8]) = $7
	*((($21 + [8]) + [8])) = *($21 + [152])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $220($5, ($21 + [240]))
	CALL $82(($21 + [320]), CALL $81(($21 + [72]), ($21 + [56]), $18, $20, ($21 + [8])))
	$1 = *($21 + [320])
	CALL send_inline($1, (*($21 + [324]) - $1))
	$1 = *($21 + [320])
	if ( ($1 == 0) ){ goto $label$59 }
	*($21 + [324]) = $1
	CALL $204($1)
	
.LABEL $label$59
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$60 }
	*((($21 + [72]) + [32])) = $1
	CALL $204($1)
	
.LABEL $label$60
	$1 = *((($21 + [72]) + [16]))
	if ( ($1 == 0) ){ goto $label$61 }
	*($12) = $1
	CALL $204($1)
	
.LABEL $label$61
	if ( ((*($5) & [1]) == 0) ){ goto $label$18 }
	CALL $204(*($13))
	$8 = *($10)
	if ( $8 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$20
	$7 = *((($21 + [152]) + [8]))
	$17 = (int_64)0
	$16 = (int_64)59
	$1 = [2576]
	$18 = (int_64)0
	
.LOOP $label$62:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$67 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$6 = ($6 + [165])
	goto $label$65 
	
.LABEL $label$67
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$64 }
	goto $label$63 
	
.LABEL $label$66
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$64
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$63
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$19 | (int_64)$18)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$62 }
	*((($21 + [56]) + [8])) = $18
	*($21 + [56]) = $7
	$17 = (int_64)0
	$19 = (int_64)59
	$1 = [2624]
	$18 = (int_64)0
	
.LOOP $label$68:
	$16 = (int_64)0
	if ( ((uint_64)$17 > (uint_64)(int_64)11) ){ goto $label$69 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$6 = ($6 + [165])
	goto $label$70 
	
.LABEL $label$71
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($6 & [31])) << (int_64)((int_64)$19 & (int_64)4294967295))
	
.LABEL $label$69
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$18 = ((int_64)$16 | (int_64)$18)
	$19 = ((int_64)$19 + (int_64)-5)
	if ( ((int_64)$19 != (int_64)-6) ){ goto $label$68 }
	$17 = (int_64)0
	$16 = (int_64)59
	$1 = [2608]
	$20 = (int_64)0
	
.LOOP $label$72:
	if ( ((uint_64)$17 > (uint_64)(int_64)7) ){ goto $label$77 }
	$6 = *($1)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$6 = ($6 + [165])
	goto $label$75 
	
.LABEL $label$77
	$19 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$76
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$75
	$19 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$74
	$19 = ((int_64)((int_64)$19 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$73
	$1 = ($1 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$20 = ((int_64)$19 | (int_64)$20)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$72 }
	*($4) = *($3)
	*($21 + [8]) = $7
	*((($21 + [8]) + [8])) = *($21 + [152])
	*(($4 + [12])) = *(($3 + [12]))
	*(($4 + [8])) = *(($3 + [8]))
	*(($4 + [4])) = *(($3 + [4]))
	CALL $220($5, ($21 + [240]))
	CALL $82(($21 + [320]), CALL $81(($21 + [72]), ($21 + [56]), $18, $20, ($21 + [8])))
	$1 = *($21 + [320])
	CALL send_inline($1, (*($21 + [324]) - $1))
	$1 = *($21 + [320])
	if ( ($1 == 0) ){ goto $label$78 }
	*($21 + [324]) = $1
	CALL $204($1)
	
.LABEL $label$78
	$1 = *($11)
	if ( ($1 == 0) ){ goto $label$79 }
	*((($21 + [72]) + [32])) = $1
	CALL $204($1)
	
.LABEL $label$79
	$1 = *((($21 + [72]) + [16]))
	if ( ($1 == 0) ){ goto $label$80 }
	*($12) = $1
	CALL $204($1)
	
.LABEL $label$80
	if ( ((*($5) & [1]) == 0) ){ goto $label$18 }
	CALL $204(*($13))
	$8 = *($10)
	if ( $8 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	CALL eosio_assert([0], [2656])
	
.LABEL $label$18
	$8 = *($10)
	if ( ($8 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	$14 = (($21 + [112]) + [28])
	$1 = *($14)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$82 }
	
.LOOP $label$83:
	$1 = ($1 + [-24])
	$6 = *($1)
	*($1) = [0]
	if ( ($6 == 0) ){ goto $label$84 }
	CALL $204($6)
	
.LABEL $label$84
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$83 }
	$1 = *($10)
	goto $label$81 
	
.LABEL $label$82
	$1 = $8
	
.LABEL $label$81
	*($14) = $8
	CALL $204($1)
	
.LABEL $label$16
	if ( ((*((($21 + [152]) + [32])) & [1]) == 0) ){ goto $label$13 }
	CALL $204(*((($21 + [152]) + [40])))
	
.LABEL $label$13
	$1 = *((($21 + [200]) + [28]))
	if ( ($1 == 0) ){ goto $label$85 }
	*((($21 + [200]) + [32])) = $1
	CALL $204($1)
	
.LABEL $label$85
	$1 = *((($21 + [200]) + [16]))
	if ( ($1 == 0) ){ goto $label$86 }
	*((($21 + [200]) + [20])) = $1
	CALL $204($1)
	
.LABEL $label$86
	$15 = ($15 + [40])
	if ( ((int_32)$15 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	if ( ((*($21 + [240]) & [1]) == 0) ){ goto $label$87 }
	CALL $204(*($21 + [248]))
	
.LABEL $label$87
	CALL $75(($21 + [256]))
	*([0] + [4]) = ($21 + [336])
	return (unreachable)
	
.LABEL $label$1
	CALL $205(($21 + [240]))
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*($0) = *($1)
	*(($0 + [8])) = *(($1 + [8]))
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	$4 = (*(($1 + [20])) - *($1 + [16]))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$4 = CALL $203($4)
	*(($0 + [16])) = $4
	*(($0 + [24])) = ($4 + ($5 << [4]))
	*(($5 = ($0 + [20]))) = $4
	$2 = *(($1 + [16]))
	$3 = (*(($1 + [20])) - $2)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($4, $2, $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$4 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = CALL $203($4)
	*(($0 + [28])) = $5
	*(($0 + [36])) = ($5 + $4)
	*(($4 = ($0 + [32]))) = $5
	$3 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $3)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($5, $3, $1)
	*($4) = (*($4) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $219(($0 + [16]))
	
.LABEL $label$1
	CALL $219(($0 + [28]))
	(unreachable)
	return (unreachable)
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$2 = *($1 + [8])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2448]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	CALL eosio_assert(((int_64)$2 == (int_64)$7), [3008])
	$2 = *($1)
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [3024]
	$7 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$8 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$3 = ($3 + [165])
	goto $label$9 
	
.LABEL $label$10
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	CALL eosio_assert(((int_64)$2 == (int_64)$7), [3040])
	$4 = *($1 + [28])
	CALL $90($0, $4, (*(($1 + [32])) - $4))
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [3152])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $92($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $204($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [2992])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $57($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $75 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $204($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $204($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $204($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $204($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $204($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $204($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $204($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $204($5)
	
.LABEL $label$12
	return $0
}

int_32 .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $203([48])) + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	CALL $89(($8 + [32]), ($8 + [24]))
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [36])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $88(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $79 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [80])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	$4 = *($1)
	CALL eosio_assert([1], [2896])
	*($5 + [48]) = ($5 + [32])
	*($5 + [44]) = $5
	*($5 + [40]) = $5
	*($5 + [56]) = ($5 + [40])
	*($5 + [68]) = ($1 + [8])
	*($5 + [64]) = $1
	*($5 + [72]) = ($1 + [16])
	*($5 + [76]) = ($1 + [24])
	CALL $87(($5 + [64]), ($5 + [56]))
	CALL db_update_i64(*($1 + [36]), $2, $5, [32])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$1 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [80])
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

void .FUNC $252 ()
{
	(unreachable)
}

void .FUNC $98 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $203([40])
	$6 = CALL $105($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [28])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $106(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [3152])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $95($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [2992])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [2992])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $203(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $219($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $204($6)
	
.LABEL $label$8
	(unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice8transferEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$15 = (*([0] + [4]) - [288])
	*([0] + [4]) = $15
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3168]
	$11 = (int_64)0
	
.LOOP $label$1:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$5 = ($5 + [165])
	goto $label$3 
	
.LABEL $label$4
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$2
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3184]
	$11 = (int_64)0
	
.LOOP $label$6:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$7 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$5 = ($5 + [165])
	goto $label$8 
	
.LABEL $label$9
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$7
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$6 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3200]
	$11 = (int_64)0
	
.LOOP $label$10:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$11 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$5 = ($5 + [165])
	goto $label$12 
	
.LABEL $label$13
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$11
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$10 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3216]
	$11 = (int_64)0
	
.LOOP $label$14:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$15 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$5 = ($5 + [165])
	goto $label$16 
	
.LABEL $label$17
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$15
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$14 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3232]
	$11 = (int_64)0
	
.LOOP $label$18:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$19 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$5 = ($5 + [165])
	goto $label$20 
	
.LABEL $label$21
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$19
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$18 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3248]
	$11 = (int_64)0
	
.LOOP $label$22:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$23 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$5 = ($5 + [165])
	goto $label$24 
	
.LABEL $label$25
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$23
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$22 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3264]
	$11 = (int_64)0
	
.LOOP $label$26:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$27 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$5 = ($5 + [165])
	goto $label$28 
	
.LABEL $label$29
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$27
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$26 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3280]
	$11 = (int_64)0
	
.LOOP $label$30:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$31 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$5 = ($5 + [165])
	goto $label$32 
	
.LABEL $label$33
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$31
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$30 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3296]
	$11 = (int_64)0
	
.LOOP $label$34:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$35 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$5 = ($5 + [165])
	goto $label$36 
	
.LABEL $label$37
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$35
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$34 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3312]
	$11 = (int_64)0
	
.LOOP $label$38:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$39 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$5 = ($5 + [165])
	goto $label$40 
	
.LABEL $label$41
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$39
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$38 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3328]
	$11 = (int_64)0
	
.LOOP $label$42:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$43 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$45 }
	$5 = ($5 + [165])
	goto $label$44 
	
.LABEL $label$45
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$44
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$43
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$42 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3344]
	$11 = (int_64)0
	
.LOOP $label$46:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$47 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$49 }
	$5 = ($5 + [165])
	goto $label$48 
	
.LABEL $label$49
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$48
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$47
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$46 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	$10 = (int_64)0
	$9 = (int_64)59
	$8 = [3360]
	$11 = (int_64)0
	
.LOOP $label$50:
	$12 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$51 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$5 = ($5 + [165])
	goto $label$52 
	
.LABEL $label$53
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$12 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$51
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$50 }
	if ( ((int_64)$11 == (int_64)$1) ){ goto $label$5 }
	*(($15 + [264])) = [0]
	*($15 + [248]) = (int_64)-1
	*($15 + [256]) = (int_64)0
	$10 = *($0)
	*($15 + [232]) = $10
	*($15 + [240]) = $10
	$8 = CALL db_find_i64($10, $10, (int_64)4986958867379634176, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$56 }
	$8 = CALL $78(($15 + [232]), $8)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)($15 + [232])), [2464])
	if ( ((int_64)*($8 + [24]) == (int_64)2) ){ goto $label$55 }
	
.LABEL $label$56
	$10 = *($0)
	if ( ((int_64)$10 == (int_64)$1) ){ goto $label$92 }
	if ( ((int_64)$10 != (int_64)$2) ){ goto $label$92 }
	$8 = *($4)
	$5 = ($8 & [1])
	if ( $5 ){ goto $label$91 }
	if ( uint_32($8 >> [1]) ){ goto $label$90 }
	goto $label$55 
	
.LABEL $label$92
	if ( ((int_64)$10 != (int_64)$1) ){ goto $label$93 }
	$8 = *($4)
	$5 = CALL strlen([3376])
	if ( ((int_32)$5 != (int_32)( *($4 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$93 }
	if ( (CALL $214($4, [0], [-1], [3376], $5) == 0) ){ goto $label$86 }
	
.LABEL $label$93
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$94 }
	$8 = *($4)
	$5 = CALL strlen([3392])
	if ( ((int_32)$5 != (int_32)( *($4 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$94 }
	if ( (CALL $214($4, [0], [-1], [3392], $5) == 0) ){ goto $label$83 }
	
.LABEL $label$94
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$95 }
	$8 = *($4)
	$5 = CALL strlen([3408])
	if ( ((int_32)$5 != (int_32)( *($4 + [4]) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$96 }
	if ( (CALL $214($4, [0], [-1], [3408], $5) == 0) ){ goto $label$89 }
	
.LABEL $label$96
	$8 = *($4)
	$5 = ($4 + [4])
	$3 = CALL strlen([3424])
	if ( ((int_32)$3 != (int_32)( *($5) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$97 }
	if ( (CALL $214($4, [0], [-1], [3424], $3) == 0) ){ goto $label$89 }
	
.LABEL $label$97
	$8 = *($4)
	$3 = CALL strlen([3440])
	if ( ((int_32)$3 != (int_32)( *($5) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$95 }
	if ( (CALL $214($4, [0], [-1], [3440], $3) == 0) ){ goto $label$89 }
	
.LABEL $label$95
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$55 }
	$8 = *($4)
	$5 = ($8 & [1])
	if ( $5 ){ goto $label$88 }
	if ( uint_32($8 >> [1]) ){ goto $label$87 }
	goto $label$55 
	
.LABEL $label$91
	if ( (*($4 + [4]) == 0) ){ goto $label$55 }
	
.LABEL $label$90
	if ( $5 ){ goto $label$99 }
	$5 = uint_32($8 >> [1])
	$13 = ($4 + [1])
	goto $label$98 
	
.LABEL $label$99
	$5 = *($4 + [4])
	$13 = *($4 + [8])
	
.LABEL $label$98
	$8 = CALL strlen([3536])
	if ( ($8 == 0) ){ goto $label$79 }
	if ( ((int_32)$5 < (int_32)$8) ){ goto $label$55 }
	$6 = ($13 + $5)
	$14 = $13
	
.LOOP $label$100:
	$5 = (($5 - $8) + [1])
	if ( ($5 == 0) ){ goto $label$55 }
	$5 = CALL memchr($14, [45], $5)
	if ( ($5 == 0) ){ goto $label$55 }
	if ( (CALL memcmp($5, [3536], $8) == 0) ){ goto $label$80 }
	$14 = ($5 + [1])
	$5 = ($6 - $14)
	if ( ((int_32)$5 >= (int_32)$8) ){ goto $label$100 }
	goto $label$55 
	
.LABEL $label$89
	CALL eosio_assert([1], [3056])
	$10 = (int_64)5462355
	$9 = (int_64)1398362884
	$8 = [0]
	
.LOOP $label$103:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$102 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$104 }
	
.LOOP $label$105:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$102 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$105 }
	
.LABEL $label$104
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$103 }
	goto $label$101 
	
.LABEL $label$102
	$5 = [0]
	
.LABEL $label$101
	CALL eosio_assert($5, [3120])
	$8 = *($4)
	$5 = ($4 + [4])
	$3 = CALL strlen([3408])
	if ( ((int_32)$3 != (int_32)( *($5) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$106 }
	$8 = [0]
	if ( (CALL $214($4, [0], [-1], [3408], $3) == 0) ){ goto $label$78 }
	
.LABEL $label$106
	$8 = *($4)
	$3 = CALL strlen([3424])
	if ( ((int_32)$3 != (int_32)( *($5) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$107 }
	$8 = [0]
	if ( (CALL $214($4, [0], [-1], [3424], $3) == 0) ){ goto $label$75 }
	
.LABEL $label$107
	$8 = *($4)
	$5 = CALL strlen([3440])
	if ( ((int_32)$5 != (int_32)( *(($4 + [4])) ? uint_32($8 >> [1]) : ($8 & [1]) )) ){ goto $label$74 }
	$8 = [0]
	if ( CALL $214($4, [0], [-1], [3440], $5) ){ goto $label$74 }
	CALL eosio_assert([1], [3056])
	$10 = (int_64)1146312005
	$9 = (int_64)293455873288
	
.LOOP $label$109:
	$5 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$108 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$110 }
	
.LOOP $label$111:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$108 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$111 }
	
.LABEL $label$110
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$109 }
	
.LABEL $label$108
	CALL eosio_assert($5, [3120])
	goto $label$74 
	
.LABEL $label$88
	if ( (*($4 + [4]) == 0) ){ goto $label$55 }
	
.LABEL $label$87
	if ( $5 ){ goto $label$113 }
	$8 = uint_32($8 >> [1])
	goto $label$112 
	
.LABEL $label$113
	$8 = *($4 + [4])
	
.LABEL $label$112
	if ( ((uint_32)$8 >= (uint_32)[13]) ){ goto $label$55 }
	CALL eosio_assert([1], [3056])
	$8 = [0]
	$10 = (int_64)5459781
	
.LOOP $label$114:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$85 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$115 }
	
.LOOP $label$116:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$85 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$116 }
	
.LABEL $label$115
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$114 }
	goto $label$84 
	
.LABEL $label$86
	*(($15 + [40])) = [0]
	*($15 + [24]) = (int_64)-1
	$10 = *($0)
	*($15 + [8]) = $10
	*($15 + [16]) = $10
	*($15 + [32]) = (int_64)0
	$8 = CALL db_find_i64($10, $10, (int_64)-4098957125006082048, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$77 }
	$8 = CALL $97(($15 + [8]), $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($15 + [8])), [2464])
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($15 + [8])), [2784])
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$14()), [2832])
	*($8 + [8]) = (int_64)1
	$10 = *($8)
	CALL eosio_assert([1], [2896])
	CALL eosio_assert([1], [2704])
	CALL memcpy(($15 + [192]), $8, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($15 + [192]) | [8]), ($8 + [8]), [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($15 + [192]) + [16]), ($8 + [16]), [8])
	CALL db_update_i64(*($8 + [28]), (int_64)0, ($15 + [192]), [24])
	$8 = (($15 + [8]) + [16])
	if ( (uint_64)($10 <= *($8)) ){ goto $label$69 }
	*($8) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$4 = *($15 + [32])
	if ( $4 ){ goto $label$68 }
	goto $label$55 
	
.LABEL $label$85
	$5 = [0]
	
.LABEL $label$84
	CALL eosio_assert($5, [3120])
	CALL eosio_assert([1], [3056])
	$8 = [0]
	$10 = (int_64)21334
	
.LOOP $label$119:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$118 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$120 }
	
.LOOP $label$121:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$118 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$121 }
	
.LABEL $label$120
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$119 }
	goto $label$117 
	
.LABEL $label$118
	$5 = [0]
	
.LABEL $label$117
	CALL eosio_assert($5, [3120])
	CALL eosio_assert([1], [3056])
	$8 = [0]
	$10 = (int_64)1146312005
	
.LOOP $label$124:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$123 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$125 }
	
.LOOP $label$126:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$123 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$126 }
	
.LABEL $label$125
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$124 }
	goto $label$122 
	
.LABEL $label$123
	$5 = [0]
	
.LABEL $label$122
	CALL eosio_assert($5, [3120])
	if ( (*($4) & [1]) ){ goto $label$82 }
	$8 = ($4 + [1])
	goto $label$81 
	
.LABEL $label$83
	*(($15 + [40])) = [0]
	*($15 + [24]) = (int_64)-1
	$10 = *($0)
	*($15 + [8]) = $10
	*($15 + [16]) = $10
	*($15 + [32]) = (int_64)0
	$8 = CALL db_find_i64($10, $10, (int_64)-4098957125006082048, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$76 }
	$8 = CALL $97(($15 + [8]), $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($15 + [8])), [2464])
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($15 + [8])), [2784])
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$14()), [2832])
	*($8 + [8]) = (int_64)0
	$10 = *($8)
	*($8 + [16]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$10 == (int_64)*($8)), [2896])
	CALL eosio_assert([1], [2704])
	CALL memcpy(($15 + [192]), $8, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($15 + [192]) | [8]), ($8 + [8]), [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($15 + [192]) + [16]), ($8 + [16]), [8])
	CALL db_update_i64(*($8 + [28]), (int_64)0, ($15 + [192]), [24])
	$8 = (($15 + [8]) + [16])
	if ( (uint_64)($10 <= *($8)) ){ goto $label$65 }
	*($8) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$4 = *($15 + [32])
	if ( $4 ){ goto $label$64 }
	goto $label$55 
	
.LABEL $label$82
	$8 = *($4 + [8])
	
.LABEL $label$81
	$5 = [-1]
	
.LOOP $label$127:
	$4 = ($8 + $5)
	$3 = ($5 + [1])
	$5 = $3
	if ( *(($4 + [1])) ){ goto $label$127 }
	$1 = (CASTING uint_64)(uint_32 $3)
	$10 = (int_64)0
	$9 = (int_64)59
	$11 = (int_64)0
	
.LOOP $label$128:
	$12 = (int_64)0
	if ( ((uint_64)$10 >= (uint_64)$1) ){ goto $label$129 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$131 }
	$5 = ($5 + [165])
	goto $label$130 
	
.LABEL $label$131
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$130
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$129
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$133 }
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	goto $label$132 
	
.LABEL $label$133
	$12 = ((int_64)$12 & (int_64)15)
	
.LABEL $label$132
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$128 }
	if ( (CALL is_account($11) == 0) ){ goto $label$55 }
	*((($15 + [8]) + [32])) = [0]
	*($15 + [24]) = (int_64)-1
	*($15 + [32]) = (int_64)0
	$10 = *($0)
	*($15 + [8]) = $10
	*($15 + [16]) = (int_64)5459781
	$8 = CALL db_find_i64($10, (int_64)5459781, (int_64)-3020376800539705344, $11)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$134 }
	$8 = CALL $101(($15 + [8]), $8)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)($15 + [8])), [2464])
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$5 = CALL db_next_i64(*($8 + [36]), ($15 + [192]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$135 }
	CALL $101(($15 + [8]), $5)
	
.LABEL $label$135
	CALL $102(($15 + [8]), $8)
	
.LABEL $label$134
	*((($15 + [192]) + [32])) = [0]
	*($15 + [208]) = (int_64)-1
	*($15 + [216]) = (int_64)0
	$10 = *($0)
	*($15 + [192]) = $10
	*($15 + [200]) = (int_64)21334
	$8 = CALL db_find_i64($10, (int_64)21334, (int_64)-3020376800539705344, $11)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$136 }
	$8 = CALL $101(($15 + [192]), $8)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)($15 + [192])), [2464])
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$5 = CALL db_next_i64(*($8 + [36]), ($15 + [152]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$137 }
	CALL $101(($15 + [192]), $5)
	
.LABEL $label$137
	CALL $102(($15 + [192]), $8)
	
.LABEL $label$136
	*(($15 + [184])) = [0]
	*($15 + [168]) = (int_64)-1
	*($15 + [176]) = (int_64)0
	$10 = *($0)
	*($15 + [152]) = $10
	*($15 + [160]) = (int_64)1146312005
	$8 = CALL db_find_i64($10, (int_64)1146312005, (int_64)-3020376800539705344, $11)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$138 }
	$8 = CALL $101(($15 + [152]), $8)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)($15 + [152])), [2464])
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$5 = CALL db_next_i64(*($8 + [36]), ($15 + [112]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$139 }
	CALL $101(($15 + [152]), $5)
	
.LABEL $label$139
	CALL $102(($15 + [152]), $8)
	
.LABEL $label$138
	$4 = *($15 + [176])
	if ( ($4 == 0) ){ goto $label$61 }
	$0 = ($15 + [180])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$63 }
	
.LOOP $label$140:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$141 }
	CALL $204($5)
	
.LABEL $label$141
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$140 }
	$8 = *(($15 + [176]))
	goto $label$62 
	
.LABEL $label$80
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$55 }
	if ( ((int_32)($5 - $13) == (int_32)[-1]) ){ goto $label$55 }
	
.LABEL $label$79
	$5 = [0]
	$9 = *($3)
	if ( ((uint_64)((int_64)$9 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$142 }
	$10 = (uint_64)*($3 + [8]) >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$144:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$143 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$145 }
	
.LOOP $label$146:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$143 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$146 }
	
.LABEL $label$145
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$144 }
	goto $label$142 
	
.LABEL $label$143
	$5 = [0]
	
.LABEL $label$142
	CALL eosio_assert($5, [3552])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$9 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [3584])
	*((($15 + [192]) + [32])) = [0]
	*($15 + [208]) = (int_64)-1
	$10 = *($0)
	*($15 + [192]) = $10
	*($15 + [200]) = $10
	*($15 + [216]) = (int_64)0
	$8 = CALL db_find_i64($10, $10, (int_64)-4098957125006082048, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$147 }
	$8 = CALL $97(($15 + [192]), $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($15 + [192])), [2464])
	if ( ((int_64)*($8 + [8]) != (int_64)1) ){ goto $label$147 }
	CALL eosio_assert([0], [3616])
	
.LABEL $label$147
	$10 = *($3 + [8])
	*((($15 + [152]) + [32])) = [0]
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	*($15 + [160]) = $10)
	*($15 + [168]) = (int_64)-1
	*($15 + [176]) = (int_64)0
	$9 = *($0)
	*($15 + [152]) = $9
	$8 = CALL db_find_i64($9, $10, (int_64)-3020376800539705344, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$148 }
	$8 = CALL $101(($15 + [152]), $8)
	CALL eosio_assert(((int_32)*($8 + [32]) == (int_32)($15 + [152])), [2464])
	if ( ((uint_64)*($8 + [16]) > (uint_64)(int_64)2) ){ goto $label$149 }
	if ( ((((uint_64)*($8 + [8]) > (uint_64)(int_64)14) & ((float_64)*($8 + [24]) >= (float_64)(float_64)10)) == 0) ){ goto $label$148 }
	
.LABEL $label$149
	CALL eosio_assert([0], [3648])
	
.LABEL $label$148
	*(($15 + [144])) = [0]
	*($15 + [128]) = (int_64)-1
	*($15 + [136]) = (int_64)0
	$9 = *($0)
	*($15 + [112]) = $9
	*($15 + [120]) = $10
	$8 = CALL db_find_i64($9, $10, (int_64)-5918304704032407552, $10)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$150 }
	$8 = CALL $99(($15 + [112]), $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($15 + [112])), [2464])
	if ( (uint_64)(*($8 + [16]) <= (int_64)3) ){ goto $label$150 }
	CALL eosio_assert([0], [3680])
	
.LABEL $label$150
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$152 }
	$5 = uint_32($8 >> [1])
	$13 = ($4 + [1])
	goto $label$151 
	
.LABEL $label$152
	$5 = *($4 + [4])
	$13 = *($4 + [8])
	
.LABEL $label$151
	$8 = CALL strlen([3712])
	if ( ($8 == 0) ){ goto $label$72 }
	if ( ((int_32)$5 < (int_32)$8) ){ goto $label$60 }
	$6 = ($13 + $5)
	$14 = $13
	
.LOOP $label$153:
	$5 = (($5 - $8) + [1])
	if ( ($5 == 0) ){ goto $label$60 }
	$5 = CALL memchr($14, [118], $5)
	if ( ($5 == 0) ){ goto $label$60 }
	if ( (CALL memcmp($5, [3712], $8) == 0) ){ goto $label$73 }
	$14 = ($5 + [1])
	$5 = ($6 - $14)
	if ( ((int_32)$5 >= (int_32)$8) ){ goto $label$153 }
	goto $label$60 
	
.LABEL $label$78
	CALL eosio_assert([1], [3056])
	$10 = (int_64)5459781
	$9 = (int_64)1397703940
	
.LOOP $label$155:
	$5 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$154 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$156 }
	
.LOOP $label$157:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$154 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$157 }
	
.LABEL $label$156
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$155 }
	
.LABEL $label$154
	CALL eosio_assert($5, [3120])
	goto $label$74 
	
.LABEL $label$77
	$9 = *($0)
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$14()), [2720])
	*(($8 = CALL $203([40])) + [24]) = ($15 + [8])
	*($8 + [8]) = (int_64)1
	*($8) = (int_64)0
	*($8 + [16]) = (int_64)0
	CALL eosio_assert([1], [2704])
	CALL memcpy(($15 + [192]), $8, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($15 + [192]) | [8]), ($8 + [8]), [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($15 + [192]) + [16]), ($8 + [16]), [8])
	$10 = *($8)
	$4 = CALL db_store_i64(*((($15 + [8]) + [8])), (int_64)-4098957125006082048, $9, $10, ($15 + [192]), [24])
	*($8 + [28]) = $4
	$5 = (($15 + [8]) + [16])
	if ( (uint_64)($10 <= *($5)) ){ goto $label$158 }
	*($5) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$158
	*($15 + [152]) = $8
	$10 = *($8)
	*($15 + [192]) = $10
	*($15 + [112]) = $4
	$0 = ($15 + [36])
	$5 = *($0)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [40]))) ){ goto $label$71 }
	*($5 + [8]) = $10
	*($5 + [16]) = $4
	*($15 + [152]) = [0]
	*($5) = $8
	*($0) = ($5 + [24])
	goto $label$70 
	
.LABEL $label$76
	$9 = *($0)
	CALL eosio_assert(((int_64)*($15 + [8]) == (int_64)CALL $fimport$14()), [2720])
	*(($8 = CALL $203([40])) + [24]) = ($15 + [8])
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	*($8 + [16]) = (int_64)0
	CALL eosio_assert([1], [2704])
	CALL memcpy(($15 + [192]), $8, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($15 + [192]) | [8]), ($8 + [8]), [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy((($15 + [192]) + [16]), ($8 + [16]), [8])
	$10 = *($8)
	$4 = CALL db_store_i64(*((($15 + [8]) + [8])), (int_64)-4098957125006082048, $9, $10, ($15 + [192]), [24])
	*($8 + [28]) = $4
	$5 = (($15 + [8]) + [16])
	if ( (uint_64)($10 <= *($5)) ){ goto $label$159 }
	*($5) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$159
	*($15 + [152]) = $8
	$10 = *($8)
	*($15 + [192]) = $10
	*($15 + [112]) = $4
	$0 = ($15 + [36])
	$5 = *($0)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [40]))) ){ goto $label$67 }
	*($5 + [8]) = $10
	*($5 + [16]) = $4
	*($15 + [152]) = [0]
	*($5) = $8
	*($0) = ($5 + [24])
	goto $label$66 
	
.LABEL $label$75
	CALL eosio_assert([1], [3056])
	$10 = (int_64)21334
	$9 = (int_64)5461508
	
.LOOP $label$161:
	$5 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$160 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$162 }
	
.LOOP $label$163:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$160 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$163 }
	
.LABEL $label$162
	$5 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$161 }
	
.LABEL $label$160
	CALL eosio_assert($5, [3120])
	
.LABEL $label$74
	*(($15 + [40])) = [0]
	*($15 + [24]) = (int_64)-1
	*($15 + [32]) = (int_64)0
	$12 = *($0)
	*($15 + [8]) = $12
	$10 = (uint_64)$9 >> (uint_64)(int_64)8
	*($15 + [16]) = $10)
	$8 = CALL db_find_i64($12, $10, (int_64)-5918304704032407552, $10)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$164 }
	$8 = CALL $99(($15 + [8]), $8)
	CALL eosio_assert(((int_32)*($8 + [24]) == (int_32)($15 + [8])), [2464])
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$5 = CALL db_next_i64(*($8 + [28]), ($15 + [192]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$165 }
	CALL $99(($15 + [8]), $5)
	
.LABEL $label$165
	CALL $100(($15 + [8]), $8)
	
.LABEL $label$164
	$4 = *($15 + [32])
	if ( ($4 == 0) ){ goto $label$55 }
	$0 = ($15 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$167 }
	
.LOOP $label$168:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$169 }
	CALL $204($5)
	
.LABEL $label$169
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$168 }
	$8 = *(($15 + [32]))
	goto $label$166 
	
.LABEL $label$167
	$8 = $4
	
.LABEL $label$166
	*($0) = $4
	CALL $204($8)
	$4 = *($15 + [256])
	if ( $4 ){ goto $label$54 }
	goto $label$5 
	
.LABEL $label$73
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$60 }
	if ( ((int_32)($5 - $13) == (int_32)[-1]) ){ goto $label$60 }
	
.LABEL $label$72
	$7 = *($0)
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [2576]
	$11 = (int_64)0
	
.LOOP $label$170:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$175 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$174 }
	$5 = ($5 + [165])
	goto $label$173 
	
.LABEL $label$175
	$9 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$172 }
	goto $label$171 
	
.LABEL $label$174
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$173
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$172
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$171
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$170 }
	*($15 + [64]) = $11
	*($15 + [56]) = $7
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [2448]
	$11 = (int_64)0
	
.LOOP $label$176:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$181 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$180 }
	$5 = ($5 + [165])
	goto $label$179 
	
.LABEL $label$181
	$9 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$178 }
	goto $label$177 
	
.LABEL $label$180
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$179
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$178
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$177
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$176 }
	*(($15 + [36])) = *(($3 + [12]))
	*(($15 + [32])) = *(($3 + [8]))
	*(($15 + [28])) = *(($3 + [4]))
	*($15 + [16]) = $2
	*($15 + [8]) = $1
	*($15 + [24]) = *($3)
	CALL $220(($15 + [40]), $4)
	$8 = CALL $81(($15 + [72]), ($15 + [56]), $7, $11, ($15 + [8]))
	CALL $82(($15 + [272]), $8)
	$5 = *($15 + [272])
	CALL send_inline($5, (*($15 + [276]) - $5))
	$5 = *($15 + [272])
	if ( ($5 == 0) ){ goto $label$182 }
	*($15 + [276]) = $5
	CALL $204($5)
	
.LABEL $label$182
	$5 = *($8 + [28])
	if ( ($5 == 0) ){ goto $label$183 }
	*(($8 + [32])) = $5
	CALL $204($5)
	
.LABEL $label$183
	$5 = *($8 + [16])
	if ( ($5 == 0) ){ goto $label$184 }
	*(($8 + [20])) = $5
	CALL $204($5)
	
.LABEL $label$184
	if ( ((*($15 + [40]) & [1]) == 0) ){ goto $label$59 }
	CALL $204(*(($15 + [48])))
	$4 = *($15 + [136])
	if ( $4 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$71
	CALL $98(($15 + [32]), ($15 + [152]), ($15 + [192]), ($15 + [112]))
	
.LABEL $label$70
	$8 = *($15 + [152])
	*($15 + [152]) = [0]
	if ( ($8 == 0) ){ goto $label$69 }
	CALL $204($8)
	
.LABEL $label$69
	$4 = *($15 + [32])
	if ( ($4 == 0) ){ goto $label$55 }
	
.LABEL $label$68
	$0 = ($15 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$186 }
	
.LOOP $label$187:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$188 }
	CALL $204($5)
	
.LABEL $label$188
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$187 }
	$8 = *(($15 + [32]))
	goto $label$185 
	
.LABEL $label$186
	$8 = $4
	
.LABEL $label$185
	*($0) = $4
	CALL $204($8)
	$4 = *($15 + [256])
	if ( $4 ){ goto $label$54 }
	goto $label$5 
	
.LABEL $label$67
	CALL $98(($15 + [32]), ($15 + [152]), ($15 + [192]), ($15 + [112]))
	
.LABEL $label$66
	$8 = *($15 + [152])
	*($15 + [152]) = [0]
	if ( ($8 == 0) ){ goto $label$65 }
	CALL $204($8)
	
.LABEL $label$65
	$4 = *($15 + [32])
	if ( ($4 == 0) ){ goto $label$55 }
	
.LABEL $label$64
	$0 = ($15 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$190 }
	
.LOOP $label$191:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$192 }
	CALL $204($5)
	
.LABEL $label$192
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$191 }
	$8 = *(($15 + [32]))
	goto $label$189 
	
.LABEL $label$190
	$8 = $4
	
.LABEL $label$189
	*($0) = $4
	CALL $204($8)
	$4 = *($15 + [256])
	if ( $4 ){ goto $label$54 }
	goto $label$5 
	
.LABEL $label$63
	$8 = $4
	
.LABEL $label$62
	*($0) = $4
	CALL $204($8)
	
.LABEL $label$61
	$4 = *($15 + [216])
	if ( ($4 == 0) ){ goto $label$193 }
	$0 = ($15 + [220])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$195 }
	
.LOOP $label$196:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$197 }
	CALL $204($5)
	
.LABEL $label$197
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$196 }
	$8 = *(($15 + [216]))
	goto $label$194 
	
.LABEL $label$195
	$8 = $4
	
.LABEL $label$194
	*($0) = $4
	CALL $204($8)
	
.LABEL $label$193
	$4 = *($15 + [32])
	if ( ($4 == 0) ){ goto $label$55 }
	$0 = ($15 + [36])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$199 }
	
.LOOP $label$200:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$201 }
	CALL $204($5)
	
.LABEL $label$201
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$200 }
	$8 = *(($15 + [32]))
	goto $label$198 
	
.LABEL $label$199
	$8 = $4
	
.LABEL $label$198
	*($0) = $4
	CALL $204($8)
	$4 = *($15 + [256])
	if ( $4 ){ goto $label$54 }
	goto $label$5 
	
.LABEL $label$60
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$203 }
	$5 = uint_32($8 >> [1])
	$13 = ($4 + [1])
	goto $label$202 
	
.LABEL $label$203
	$5 = *($4 + [4])
	$13 = *($4 + [8])
	
.LABEL $label$202
	$8 = CALL strlen([3728])
	if ( ($8 == 0) ){ goto $label$205 }
	if ( ((int_32)$5 < (int_32)$8) ){ goto $label$204 }
	$6 = ($13 + $5)
	$14 = $13
	
.LOOP $label$206:
	$5 = (($5 - $8) + [1])
	if ( ($5 == 0) ){ goto $label$204 }
	$5 = CALL memchr($14, [118], $5)
	if ( ($5 == 0) ){ goto $label$204 }
	if ( (CALL memcmp($5, [3728], $8) == 0) ){ goto $label$207 }
	$14 = ($5 + [1])
	$5 = ($6 - $14)
	if ( ((int_32)$5 >= (int_32)$8) ){ goto $label$206 }
	goto $label$204 
	
.LABEL $label$207
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$204 }
	if ( ((int_32)($5 - $13) == (int_32)[-1]) ){ goto $label$204 }
	
.LABEL $label$205
	$7 = *($0)
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [2576]
	$11 = (int_64)0
	
.LOOP $label$208:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$213 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$212 }
	$5 = ($5 + [165])
	goto $label$211 
	
.LABEL $label$213
	$9 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$210 }
	goto $label$209 
	
.LABEL $label$212
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$211
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$210
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$209
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$208 }
	*($15 + [64]) = $11
	*($15 + [56]) = $7
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [3744]
	$11 = (int_64)0
	
.LOOP $label$214:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$219 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$218 }
	$5 = ($5 + [165])
	goto $label$217 
	
.LABEL $label$219
	$9 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$216 }
	goto $label$215 
	
.LABEL $label$218
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$217
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$216
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$215
	$8 = ($8 + [1])
	$12 = ((int_64)$12 + (int_64)-5)
	$11 = ((int_64)$9 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$214 }
	*(($15 + [36])) = *(($3 + [12]))
	*(($15 + [32])) = *(($3 + [8]))
	*(($15 + [28])) = *(($3 + [4]))
	*($15 + [16]) = $2
	*($15 + [8]) = $1
	*($15 + [24]) = *($3)
	CALL $220(($15 + [40]), $4)
	$8 = CALL $81(($15 + [72]), ($15 + [56]), $7, $11, ($15 + [8]))
	CALL $82(($15 + [272]), $8)
	$5 = *($15 + [272])
	CALL send_inline($5, (*($15 + [276]) - $5))
	$5 = *($15 + [272])
	if ( ($5 == 0) ){ goto $label$220 }
	*($15 + [276]) = $5
	CALL $204($5)
	
.LABEL $label$220
	$5 = *($8 + [28])
	if ( ($5 == 0) ){ goto $label$221 }
	*(($8 + [32])) = $5
	CALL $204($5)
	
.LABEL $label$221
	$5 = *($8 + [16])
	if ( ($5 == 0) ){ goto $label$222 }
	*(($8 + [20])) = $5
	CALL $204($5)
	
.LABEL $label$222
	if ( ((*($15 + [40]) & [1]) == 0) ){ goto $label$59 }
	CALL $204(*(($15 + [48])))
	$4 = *($15 + [136])
	if ( $4 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$204
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$224 }
	$5 = uint_32($8 >> [1])
	$13 = ($4 + [1])
	goto $label$223 
	
.LABEL $label$224
	$5 = *($4 + [4])
	$13 = *($4 + [8])
	
.LABEL $label$223
	$8 = CALL strlen([3760])
	if ( ($8 == 0) ){ goto $label$225 }
	if ( ((int_32)$5 < (int_32)$8) ){ goto $label$59 }
	$6 = ($13 + $5)
	$14 = $13
	
.LOOP $label$226:
	$5 = (($5 - $8) + [1])
	if ( ($5 == 0) ){ goto $label$59 }
	$5 = CALL memchr($14, [118], $5)
	if ( ($5 == 0) ){ goto $label$59 }
	if ( (CALL memcmp($5, [3760], $8) == 0) ){ goto $label$227 }
	$14 = ($5 + [1])
	$5 = ($6 - $14)
	if ( ((int_32)$5 >= (int_32)$8) ){ goto $label$226 }
	goto $label$59 
	
.LABEL $label$227
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$59 }
	if ( ((int_32)($5 - $13) == (int_32)[-1]) ){ goto $label$59 }
	
.LABEL $label$225
	$7 = *($0)
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [2576]
	$11 = (int_64)0
	
.LOOP $label$228:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$233 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$232 }
	$5 = ($5 + [165])
	goto $label$231 
	
.LABEL $label$233
	$9 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$230 }
	goto $label$229 
	
.LABEL $label$232
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$231
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$230
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$229
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$228 }
	*($15 + [64]) = $11
	*($15 + [56]) = $7
	$10 = (int_64)0
	$12 = (int_64)59
	$8 = [3776]
	$11 = (int_64)0
	
.LOOP $label$234:
	if ( ((uint_64)$10 > (uint_64)(int_64)9) ){ goto $label$239 }
	$5 = *($8)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$238 }
	$5 = ($5 + [165])
	goto $label$237 
	
.LABEL $label$239
	$9 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$236 }
	goto $label$235 
	
.LABEL $label$238
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$237
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$236
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$12 & (int_64)4294967295))
	
.LABEL $label$235
	$8 = ($8 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$9 | (int_64)$11)
	$12 = ((int_64)$12 + (int_64)-5)
	if ( ((int_64)$12 != (int_64)-6) ){ goto $label$234 }
	*(($15 + [36])) = *(($3 + [12]))
	*(($15 + [32])) = *(($3 + [8]))
	*(($15 + [28])) = *(($3 + [4]))
	*($15 + [16]) = $2
	*($15 + [8]) = $1
	*($15 + [24]) = *($3)
	CALL $220(($15 + [40]), $4)
	$8 = CALL $81(($15 + [72]), ($15 + [56]), $7, $11, ($15 + [8]))
	CALL $82(($15 + [272]), $8)
	$5 = *($15 + [272])
	CALL send_inline($5, (*($15 + [276]) - $5))
	$5 = *($15 + [272])
	if ( ($5 == 0) ){ goto $label$240 }
	*($15 + [276]) = $5
	CALL $204($5)
	
.LABEL $label$240
	$5 = *($8 + [28])
	if ( ($5 == 0) ){ goto $label$241 }
	*(($8 + [32])) = $5
	CALL $204($5)
	
.LABEL $label$241
	$5 = *($8 + [16])
	if ( ($5 == 0) ){ goto $label$242 }
	*(($8 + [20])) = $5
	CALL $204($5)
	
.LABEL $label$242
	if ( ((*($15 + [40]) & [1]) == 0) ){ goto $label$59 }
	CALL $204(*(($15 + [48])))
	
.LABEL $label$59
	$4 = *($15 + [136])
	if ( ($4 == 0) ){ goto $label$57 }
	
.LABEL $label$58
	$0 = ($15 + [140])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$244 }
	
.LOOP $label$245:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$246 }
	CALL $204($5)
	
.LABEL $label$246
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$245 }
	$8 = *(($15 + [136]))
	goto $label$243 
	
.LABEL $label$244
	$8 = $4
	
.LABEL $label$243
	*($0) = $4
	CALL $204($8)
	
.LABEL $label$57
	$4 = *($15 + [176])
	if ( ($4 == 0) ){ goto $label$247 }
	$0 = ($15 + [180])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$249 }
	
.LOOP $label$250:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$251 }
	CALL $204($5)
	
.LABEL $label$251
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$250 }
	$8 = *(($15 + [176]))
	goto $label$248 
	
.LABEL $label$249
	$8 = $4
	
.LABEL $label$248
	*($0) = $4
	CALL $204($8)
	
.LABEL $label$247
	$4 = *($15 + [216])
	if ( ($4 == 0) ){ goto $label$55 }
	$0 = ($15 + [220])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$253 }
	
.LOOP $label$254:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$255 }
	CALL $204($5)
	
.LABEL $label$255
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$254 }
	$8 = *(($15 + [216]))
	goto $label$252 
	
.LABEL $label$253
	$8 = $4
	
.LABEL $label$252
	*($0) = $4
	CALL $204($8)
	
.LABEL $label$55
	$4 = *($15 + [256])
	if ( ($4 == 0) ){ goto $label$5 }
	
.LABEL $label$54
	$0 = ($15 + [260])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$257 }
	
.LOOP $label$258:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$259 }
	CALL $204($5)
	
.LABEL $label$259
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$258 }
	$8 = *(($15 + [256]))
	goto $label$256 
	
.LABEL $label$257
	$8 = $4
	
.LABEL $label$256
	*($0) = $4
	CALL $204($8)
	
.LABEL $label$5
	*([0] + [4]) = ($15 + [288])
}

int_32 .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [2960])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $203([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [2992])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [2992])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [2992])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $98(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $90 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)1398362884
	CALL eosio_assert([1], [3056])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [3120])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6 + [12]) = $1
	*($6 + [8]) = $1
	*($6 + [16]) = ($1 + $2)
	*($6 + [24]) = ($6 + [8])
	*($6 + [36]) = ($0 + [8])
	*($6 + [32]) = $0
	*($6 + [40]) = ($0 + [16])
	*($6 + [44]) = ($0 + [32])
	CALL $91(($6 + [32]), ($6 + [24]))
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [2992])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $55(*($1), *($0 + [12]))
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $203(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $219($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $204($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $204($1)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $203(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $219($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $204($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $204($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $204($5)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $140($0, ($1 + [48]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [2992])
	CALL memcpy(($1 + [16]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$6 = *($1 + [48])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $6
	CALL $204($6)
	
.LABEL $label$11
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $204($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $130 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [40]) = (int_64)0
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [3120])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [3120])
	*(($2 = ($0 + [80]))) = (int_64)1398362884
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [3120])
	*($0 + [88 align=4]) = (int_64)0
	*(($0 + [96])) = (int_64)0
	*(($0 + [104])) = (int_64)0
	return $0
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	$2 = *($0)
	$7 = *(*($3 + [8]))
	*($1 + [16]) = ( (int_64)0 ? $7 : ((int_64)$7 == (int_64)*(*($3 + [4]))) )
	*($1 + [24]) = *(*($3 + [12]))
	*($1 + [32]) = *(*($3 + [16]))
	$8 = *($3 + [20])
	*($1 + [40]) = *($8)
	*(($1 + [48])) = *(($8 + [8]))
	$8 = *($3 + [24])
	*($1 + [56]) = *($8)
	*(($1 + [64])) = *(($8 + [8]))
	$4 = *(*($3 + [20]) + [8])
	CALL eosio_assert([1], [3056])
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [3120])
	*(($1 + [80])) = $4
	*($1 + [72]) = (int_64)0
	CALL $206(($1 + [88]), *($3 + [28]))
	CALL $206(($1 + [100]), *($3 + [32]))
	*($1 + [112]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($1 + [120]) = *(*($3 + [36]))
	*($1 + [128]) = *(*($3 + [40]))
	*($1 + [136]) = *(*($3 + [44]))
	$8 = *($1 + [88])
	$3 = ( *(($1 + [92])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($3 + [120])
	$7 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$6:
	$8 = ($8 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	$3 = *(($1 + [100]))
	$3 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $8)
	$7 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$7:
	$8 = ($8 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	if ( ($8 <= [513]) ){ goto $label$9 }
	$3 = CALL malloc($8)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$8
	*($9 + [12]) = $3
	*($9 + [8]) = $3
	*($9 + [16]) = ($3 + $8)
	CALL $134(($9 + [8]), $1)
	$7 = *($1)
	*($1 + [148]) = CALL db_store_i64(*($2 + [8]), (int_64)7035937260545130496, *(*($0 + [8])), $7, $3, $8)
	if ( ($8 <= [513]) ){ goto $label$10 }
	CALL free($3)
	
.LABEL $label$10
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$8 = ($2 + [8])
	$7 = *($8)
	$3 = *(($0 + [8]))
	$4 = *($3)
	$5 = *($1)
	*($9 + [24]) = *(($1 + [32]))
	*($1 + [152]) = CALL db_idx64_store($7, (int_64)7035937260545130496, $4, $5, ($9 + [24]))
	$7 = *($3)
	$4 = *($8)
	$5 = *($1)
	*($9 + [24]) = *(($1 + [8]))
	*(($1 + [156])) = CALL db_idx64_store($4, (int_64)7035937260545130497, $7, $5, ($9 + [24]))
	*([0] + [4]) = ($9 + [32])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [100]) & [1]) == 0) ){ goto $label$11 }
	CALL $204(*(($1 + [108])))
	
.LABEL $label$11
	if ( ((*($1 + [88]) & [1]) == 0) ){ goto $label$12 }
	CALL $204(*(($1 + [96])))
	
.LABEL $label$12
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $204($6)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	$9 = $10
	*([0] + [4]) = $10
	$3 = *($0 + [4])
	*($1) = *(*($3))
	*($1 + [8]) = *(*($3 + [4]))
	$2 = *($0)
	$7 = *(*($3 + [8]))
	*($1 + [16]) = ( (int_64)0 ? $7 : ((int_64)$7 == (int_64)*(*($3 + [4]))) )
	*($1 + [24]) = *(*($3 + [12]))
	*($1 + [32]) = *(*($3 + [16]))
	$8 = *($3 + [20])
	*($1 + [40]) = *($8)
	*(($1 + [48])) = *(($8 + [8]))
	$8 = *($3 + [24])
	*($1 + [56]) = *($8)
	*(($1 + [64])) = *(($8 + [8]))
	$4 = *(*($3 + [20]) + [8])
	CALL eosio_assert([1], [3056])
	$7 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [3120])
	*(($1 + [80])) = $4
	*($1 + [72]) = (int_64)0
	CALL $206(($1 + [88]), *($3 + [28]))
	CALL $206(($1 + [100]), *($3 + [32]))
	*($1 + [112]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($1 + [120]) = *(*($3 + [36]))
	*($1 + [128]) = *(*($3 + [40]))
	*($1 + [136]) = *(*($3 + [44]))
	$8 = *($1 + [88])
	$3 = ( *(($1 + [92])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($3 + [120])
	$7 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$6:
	$8 = ($8 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$6 }
	$3 = *(($1 + [100]))
	$3 = ( *(($1 + [104])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $8)
	$7 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$7:
	$8 = ($8 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	if ( ($8 <= [513]) ){ goto $label$9 }
	$3 = CALL malloc($8)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($10 - (($8 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$8
	*($9 + [12]) = $3
	*($9 + [8]) = $3
	*($9 + [16]) = ($3 + $8)
	CALL $134(($9 + [8]), $1)
	$7 = *($1)
	*($1 + [148]) = CALL db_store_i64(*($2 + [8]), (int_64)7035937260545130496, *(*($0 + [8])), $7, $3, $8)
	if ( ($8 <= [513]) ){ goto $label$10 }
	CALL free($3)
	
.LABEL $label$10
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$11 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$8 = ($2 + [8])
	$7 = *($8)
	$3 = *(($0 + [8]))
	$4 = *($3)
	$5 = *($1)
	*($9 + [24]) = *(($1 + [32]))
	*($1 + [152]) = CALL db_idx64_store($7, (int_64)7035937260545130496, $4, $5, ($9 + [24]))
	$7 = *($3)
	$4 = *($8)
	$5 = *($1)
	*($9 + [24]) = *(($1 + [8]))
	*(($1 + [156])) = CALL db_idx64_store($4, (int_64)7035937260545130497, $7, $5, ($9 + [24]))
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $86(CALL $86($0, ($1 + [88])), ($1 + [100]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [136]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$0 = CALL $55(CALL $55($0, ($1 + [88])), ($1 + [100]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [128]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [136]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $136 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $203(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $81($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $204($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $204($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $204($1)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $213 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $203(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $204($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $209 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $207($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [14192])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [14000]
	$1 = (((int_32)$2 * (int_32)[12]) + [14000])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $203 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [14300])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $201($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [14208])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $201 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [14294]) == 0) ){ goto $label$2 }
	$7 = *([0] + [14296])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [14294]) = [1]
	$7 = ($7 << [16])
	*([0] + [14296]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [14296])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [14296]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [14294]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [14294]) = [1]
	$3 = ($3 << [16])
	*([0] + [14296]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [14296])
	
.LABEL $label$8
	*([0] + [14296]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $207($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $207 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $203($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $204($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $204 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $205 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [3792])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [3840])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [3904])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
	$7 = *(($1 + [64]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5445035907950198784, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($7)
	
.LABEL $label$9
	$7 = *(($1 + [68]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5445035907950198785, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($7)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $129 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [148]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [4368])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)7035937260545130496)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [4304])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [4304])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $128(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $203([160])
	$4 = CALL $130($6)
	*($6 + [144]) = $0
	CALL $135(($8 + [32]), $4)
	*($6 + [152]) = [-1]
	*($6 + [148]) = $1
	*($6 + [156]) = [-1]
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [148])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $132(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [100]) & [1]) == 0) ){ goto $label$10 }
	CALL $204(*(($4 + [108])))
	
.LABEL $label$10
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$11 }
	CALL $204(*(($4 + [96])))
	
.LABEL $label$11
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC _ZN11dbetonedice8isdecnumENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($0 + [1])
	$5 = [0]
	$4 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$2:
	$6 = *($0)
	$2 = ($6 & [1])
	if ( $2 ){ goto $label$4 }
	if ( ($5 <= uint_32($6 >> [1])) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)*($3)) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = $1
	if ( ($2 == 0) ){ goto $label$5 }
	$6 = *($4)
	
.LABEL $label$5
	$6 = ($6 + $5)
	$5 = ($5 + [1])
	if ( CALL isdigit(*($6)) ){ goto $label$2 }
	return [0]
	
.LABEL $label$1
	return [1]
}

int_32 .FUNC _ZN11dbetonedice8isdecnumEPKc (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	if ( ($0 == 0) ){ goto $label$6 }
	*(($6 + [24])) = [0]
	*($6 + [16]) = (int_64)0
	$4 = CALL strlen($0)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($6 + [16]) = ($4 << [1])
	$2 = (($6 + [16]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = [0]
	goto $label$2 
	
.LABEL $label$5
	$1 = (($4 + [16]) & [-16])
	$2 = CALL $203($1)
	*($6 + [16]) = ($1 | [1])
	*($6 + [24]) = $2
	*($6 + [20]) = $4
	
.LABEL $label$4
	CALL memcpy($2, $0, $4)
	
.LABEL $label$3
	$0 = [0]
	*(($2 + $4)) = [0]
	CALL $220($6, ($6 + [16]))
	$5 = [1]
	$1 = ($6 | [1])
	$3 = ($6 + [8])
	
.LOOP $label$8:
	$2 = ($4 & [1])
	$4 = *($6)
	if ( ((uint_32)$0 >= (uint_32)( *($6 + [4]) ? uint_32($4 >> [1]) : $2 )) ){ goto $label$7 }
	$4 = (( *($3) ? $1 : $2 ) + $0)
	$0 = ($0 + [1])
	if ( CALL isdigit(*($4)) ){ goto $label$8 }
	$5 = [0]
	$4 = *($6)
	
.LABEL $label$7
	if ( (($4 & [1]) == 0) ){ goto $label$9 }
	CALL $204(*(($6 + [8])))
	
.LABEL $label$9
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $204(*($6 + [24]))
	
.LABEL $label$2
	*([0] + [4]) = ($6 + [32])
	return $5
	
.LABEL $label$1
	CALL $205(($6 + [16]))
	return (unreachable)
}

int_32 .FUNC $123 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [3504])
	$6 = *($0 + [4])
	$7 = *($6 + [152])
	if ( ((int_32)$7 != (int_32)[-1]) ){ goto $label$1 }
	$7 = *(*($0))
	$7 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)7035937260545130496, ($9 + [8]), *($6))
	*(*(($0 + [4])) + [152]) = $7
	
.LABEL $label$1
	*($9 + [8]) = (int_64)0
	$1 = CALL db_idx64_next($7, ($9 + [8]))
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($9 + [8])
	$4 = *($2 + [24])
	$2 = *(*($0))
	$8 = *(($2 + [28]))
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$6 }
	$7 = ($8 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$7:
	if ( ((int_64)*(*($7)) == (int_64)$3) ){ goto $label$6 }
	$8 = $7
	$6 = ($7 + [-24])
	$7 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$4 }
	$7 = *(($8 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$2), [2464])
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $128($2, CALL $fimport$17(*($2), *($2 + [8]), (int_64)7035937260545130496, $3))
	CALL eosio_assert(((int_32)*($7 + [144]) == (int_32)$2), [2464])
	
.LABEL $label$3
	*(($0 + [4])) = $7
	*(($7 + [152])) = $1
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [16])
	return $0
}

void .FUNC _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_64 $5)
{
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [160])
	*([0] + [4]) = $12
	*($12 + [152]) = $5
	*($12 + [144]) = $4
	$4 = *($2 + [8])
	if ( ((int_64)$4 != (int_64)1397703940) ){ goto $label$2 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [2576]
	$11 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$8 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$8 = ($8 + [165])
	goto $label$6 
	
.LABEL $label$8
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$4
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$3 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [2592]
	$11 = (int_64)0
	
.LOOP $label$9:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$14 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$13 }
	$8 = ($8 + [165])
	goto $label$12 
	
.LABEL $label$14
	$5 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$12
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$11
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$10
	$9 = ($9 + [1])
	$10 = ((int_64)$10 + (int_64)-5)
	$11 = ((int_64)$5 | (int_64)$11)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$9 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [2608]
	$11 = (int_64)0
	
.LOOP $label$15:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$20 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$19 }
	$8 = ($8 + [165])
	goto $label$18 
	
.LABEL $label$20
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$19
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$18
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$17
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$16
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$15 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $220(($12 + [32]), $3)
	CALL $136($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$21 }
	CALL $204(*(($12 + [40])))
	
.LABEL $label$21
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $111($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$22 }
	*($12 + [4]) = $9
	CALL $204($9)
	
.LABEL $label$22
	CALL $75(($12 + [80]))
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_64)$4 != (int_64)5461508) ){ goto $label$23 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [2576]
	$11 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$29 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$8 = ($8 + [165])
	goto $label$27 
	
.LABEL $label$29
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$25
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$24 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [2624]
	$11 = (int_64)0
	
.LOOP $label$30:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$31 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$33 }
	$8 = ($8 + [165])
	goto $label$32 
	
.LABEL $label$33
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$32
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$31
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$30 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [2608]
	$11 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$39 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$8 = ($8 + [165])
	goto $label$37 
	
.LABEL $label$39
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$35
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$34 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $220(($12 + [32]), $3)
	CALL $136($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$40 }
	CALL $204(*(($12 + [40])))
	
.LABEL $label$40
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $111($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$41 }
	*($12 + [4]) = $9
	CALL $204($9)
	
.LABEL $label$41
	CALL $75(($12 + [80]))
	goto $label$1 
	
.LABEL $label$23
	if ( ((int_64)$4 != (int_64)293455873288) ){ goto $label$42 }
	$4 = CALL current_time()
	*(($12 + [108])) = [0]
	*(($12 + [112])) = [0]
	*($12 + [92]) = [0]
	*($12 + [96]) = [0]
	*($12 + [100]) = [0]
	*($12 + [104]) = [0]
	*($12 + [80]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [116]) = [0]
	*(($12 + [120])) = [0]
	*(($12 + [124])) = [0]
	*($12 + [128]) = [0]
	*(($12 + [132])) = [0]
	*(($12 + [136])) = [0]
	$7 = ($12 + [116])
	$6 = *($0)
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [2576]
	$11 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$4 > (uint_64)(int_64)5) ){ goto $label$48 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$8 = ($8 + [165])
	goto $label$46 
	
.LABEL $label$48
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$44
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$43 }
	*($12 + [72]) = $11
	*($12 + [64]) = $6
	$4 = (int_64)0
	$5 = (int_64)59
	$9 = [2640]
	$11 = (int_64)0
	
.LOOP $label$49:
	$10 = (int_64)0
	if ( ((uint_64)$4 > (uint_64)(int_64)11) ){ goto $label$50 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$8 = ($8 + [165])
	goto $label$51 
	
.LABEL $label$52
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($8 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$50
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$10 | (int_64)$11)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$49 }
	*($12 + [56]) = $11
	$4 = (int_64)0
	$10 = (int_64)59
	$9 = [2608]
	$11 = (int_64)0
	
.LOOP $label$53:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$58 }
	$8 = *($9)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$57 }
	$8 = ($8 + [165])
	goto $label$56 
	
.LABEL $label$58
	$5 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$57
	$8 = ( ($8 + [208]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$56
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$55
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$54
	$9 = ($9 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$11 = ((int_64)$5 | (int_64)$11)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$53 }
	*($12 + [48]) = $11
	*(($12 + [28])) = *(($2 + [12]))
	*(($12 + [24])) = *(($2 + [8]))
	*(($12 + [20])) = *(($2 + [4]))
	*($12 + [8]) = $1
	*($12) = $6
	*($12 + [16]) = *($2)
	CALL $220(($12 + [32]), $3)
	CALL $136($7, ($12 + [64]), ($12 + [56]), ($12 + [48]), $12)
	if ( ((*($12 + [32]) & [1]) == 0) ){ goto $label$59 }
	CALL $204(*(($12 + [40])))
	
.LABEL $label$59
	*((($12 + [80]) + [20])) = [0]
	$4 = *($0)
	CALL $111($12, ($12 + [80]))
	$9 = *($12)
	CALL send_deferred(($12 + [144]), $4, $9, (*($12 + [4]) - $9), [0])
	$9 = *($12)
	if ( ($9 == 0) ){ goto $label$60 }
	*($12 + [4]) = $9
	CALL $204($9)
	
.LABEL $label$60
	CALL $75(($12 + [80]))
	goto $label$1 
	
.LABEL $label$42
	CALL eosio_assert([0], [2656])
	
.LABEL $label$1
	*([0] + [4]) = ($12 + [160])
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $203([48])) + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	CALL $137(($8 + [32]), ($8 + [24]))
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [36])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $126(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	*($10 + [8]) = (int_64)0
	*($10) = *($2)
	$2 = [0]
	$8 = *($1)
	$3 = CALL db_idx64_lowerbound(*($8), *($8 + [8]), (int_64)7035937260545130496, $10, ($10 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$5 = *($10 + [8])
	$6 = *($4 + [24])
	$4 = *($1)
	$9 = *(($4 + [28]))
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$2 }
	$2 = ($9 + [-24])
	$7 = ([0] - $6)
	
.LOOP $label$3:
	if ( ((int_64)*(*($2)) == (int_64)$5) ){ goto $label$2 }
	$9 = $2
	$8 = ($2 + [-24])
	$2 = $8
	if ( ((int_32)($8 + $7) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	if ( ((int_32)$9 == (int_32)$6) ){ goto $label$5 }
	$2 = *(($9 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [144]) == (int_32)$4), [2464])
	goto $label$4 
	
.LABEL $label$5
	$2 = CALL $128($4, CALL $fimport$17(*($4), *($4 + [8]), (int_64)7035937260545130496, $5))
	CALL eosio_assert(((int_32)*($2 + [144]) == (int_32)$4), [2464])
	
.LABEL $label$4
	*(($2 + [152])) = $3
	
.LABEL $label$1
	*($0 + [4]) = $2
	*($0) = $1
	*([0] + [4]) = ($10 + [16])
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

void .FUNC $126 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [2704])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $124 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	CALL eosio_assert(((int_32)*($1 + [144]) == (int_32)$0), [3792])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [3840])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$4 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($4)) == (int_64)$2) ){ goto $label$1 }
	$7 = $4
	$8 = ($4 + [-24])
	$4 = $8
	if ( ((int_32)($8 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [3904])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [100]) & [1]) == 0) ){ goto $label$7 }
	CALL $204(*(($4 + [108])))
	
.LABEL $label$7
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$8 }
	CALL $204(*(($4 + [96])))
	
.LABEL $label$8
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((*($4 + [100]) & [1]) == 0) ){ goto $label$11 }
	CALL $204(*(($4 + [108])))
	
.LABEL $label$11
	if ( ((*($4 + [88]) & [1]) == 0) ){ goto $label$12 }
	CALL $204(*(($4 + [96])))
	
.LABEL $label$12
	CALL $204($4)
	
.LABEL $label$10
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [148]))
	$7 = *(($1 + [152]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$14 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130496, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$14
	CALL db_idx64_remove($7)
	
.LABEL $label$13
	$7 = *(($1 + [156]))
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$16 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)7035937260545130497, ($9 + [8]), *($1))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($7)
	
.LABEL $label$15
	*([0] + [4]) = ($9 + [16])
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$7 = *($1 + [4])
	if ( ($7 == 0) ){ goto $label$3 }
	$8 = ($1 + [4])
	$6 = *($2)
	
.LOOP $label$4:
	$2 = *($7 + [16])
	if ( ((int_32)$6 >= (int_32)$2) ){ goto $label$6 }
	$2 = *($7)
	if ( $2 ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$6
	if ( ((int_32)$2 >= (int_32)$6) ){ goto $label$1 }
	$8 = ($7 + [4])
	$2 = *($7 + [4])
	if ( ($2 == 0) ){ goto $label$1 }
	$7 = $8
	
.LABEL $label$5
	$8 = $7
	$7 = $2
	goto $label$4 
	
.LABEL $label$3
	$7 = ($1 + [4])
	
.LABEL $label$2
	$8 = $7
	
.LABEL $label$1
	$2 = [0]
	$6 = *($8)
	if ( $6 ){ goto $label$7 }
	*(($6 = CALL $203([40])) + [24]) = (int_64)0
	*($6 + [16]) = *(*($4))
	*($6 + [32]) = (int_64)1398362884
	CALL eosio_assert([1], [80])
	$9 = (int_64)5462355
	$2 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$4 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$4 = [0]
	
.LABEL $label$8
	CALL eosio_assert($4, [48])
	*($6 + [8]) = $7
	*($6) = (int_64)0
	*($8) = $6
	$7 = *(*($1))
	if ( ($7 == 0) ){ goto $label$14 }
	*($1) = $7
	$7 = *($8)
	goto $label$13 
	
.LABEL $label$14
	$7 = $6
	
.LABEL $label$13
	CALL $15(*($1 + [4]), $7)
	$2 = [1]
	*($1 + [8]) = (*($1 + [8]) + [1])
	
.LABEL $label$7
	*($0 + [4]) = $2
	*($0) = $6
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

void .FUNC _ZN11dbetonedice11_split_markENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetENS7_11symbol_typeE (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [144])
	*([0] + [4]) = $18
	CALL $220(($18 + [104]), $1)
	*($0 + [8]) = [0]
	*($0 + [4]) = [0]
	$4 = ($0 + [4])
	*($0) = $4
	$8 = (($18 + [72]) | [1])
	$7 = (($18 + [40]) | [1])
	$6 = (($18 + [56]) | [1])
	$5 = (($18 + [104]) | [1])
	$14 = (($18 + [104]) + [8])
	
.LOOP $label$1:
	$15 = *($18 + [104])
	$17 = ($15 & [1])
	$12 = *($14)
	$9 = *($18 + [108])
	$1 = CALL strlen([144])
	if ( ($1 == 0) ){ goto $label$6 }
	$15 = ( $9 ? uint_32($15 >> [1]) : $17 )
	if ( ((int_32)$15 < (int_32)$1) ){ goto $label$5 }
	$12 = ( $12 ? $5 : $17 )
	$9 = ($12 + $15)
	$17 = $12
	
.LOOP $label$7:
	$15 = (($15 - $1) + [1])
	if ( ($15 == 0) ){ goto $label$5 }
	$15 = CALL memchr($17, [45], $15)
	if ( ($15 == 0) ){ goto $label$5 }
	if ( (CALL memcmp($15, [144], $1) == 0) ){ goto $label$8 }
	$17 = ($15 + [1])
	$15 = ($9 - $17)
	if ( ((int_32)$15 >= (int_32)$1) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$5 }
	if ( ((int_32)($15 - $12) == (int_32)[-1]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZN11dbetonedice8splitoneERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($18 + [88]), ($18 + [104]))
	$9 = *($18 + [104])
	$12 = *($14)
	$10 = *($18 + [108])
	$1 = [0]
	$15 = [0]
	$17 = CALL strlen([144])
	if ( ($17 == 0) ){ goto $label$9 }
	$9 = ( $10 ? uint_32($9 >> [1]) : $15 )
	$15 = ($9 & [1])
	$11 = ( $12 ? $5 : $15 )
	$12 = ($11 + $9)
	$15 = $12
	if ( ((int_32)$9 < (int_32)$17) ){ goto $label$10 }
	$15 = $11
	
.LOOP $label$12:
	$9 = (($9 - $17) + [1])
	if ( ($9 == 0) ){ goto $label$11 }
	$15 = CALL memchr($15, [45], $9)
	if ( ($15 == 0) ){ goto $label$11 }
	if ( (CALL memcmp($15, [144], $17) == 0) ){ goto $label$10 }
	$15 = ($15 + [1])
	$9 = ($12 - $15)
	if ( ((int_32)$9 >= (int_32)$17) ){ goto $label$12 }
	
.LABEL $label$11
	$15 = $12
	
.LABEL $label$10
	$15 = ( [-1] ? ($15 - $11) : ((int_32)$15 == (int_32)$12) )
	
.LABEL $label$9
	CALL eosio_assert(((int_32)$15 != (int_32)[-1]), [160])
	CALL _ZN11dbetonedice8splitoneERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($18 + [72]), ($18 + [104]))
	$15 = *($18 + [72])
	CALL eosio_assert(( *($18 + [76]) ? uint_32($15 >> [1]) : ($15 & [1]) ), [192])
	CALL $220(($18 + [56]), ($18 + [88]))
	
.LOOP $label$14:
	$17 = [1]
	$15 = ($15 & [1])
	$15 = *($18 + [56])
	if ( ((uint_32)$1 >= (uint_32)( *($18 + [60]) ? uint_32($15 >> [1]) : $15 )) ){ goto $label$13 }
	$15 = (( *((($18 + [56]) + [8])) ? $6 : $15 ) + $1)
	$1 = ($1 + [1])
	if ( CALL isdigit(*($15)) ){ goto $label$14 }
	$17 = [0]
	
.LABEL $label$13
	CALL eosio_assert($17, [224])
	if ( ((*($18 + [56]) & [1]) == 0) ){ goto $label$15 }
	CALL $204(*((($18 + [56]) + [8])))
	
.LABEL $label$15
	CALL $220(($18 + [40]), ($18 + [72]))
	$1 = [0]
	
.LOOP $label$17:
	$17 = [1]
	$15 = ($15 & [1])
	$15 = *($18 + [40])
	if ( ((uint_32)$1 >= (uint_32)( *($18 + [44]) ? uint_32($15 >> [1]) : $15 )) ){ goto $label$16 }
	$15 = (( *((($18 + [40]) + [8])) ? $7 : $15 ) + $1)
	$1 = ($1 + [1])
	if ( CALL isdigit(*($15)) ){ goto $label$17 }
	$17 = [0]
	
.LABEL $label$16
	CALL eosio_assert($17, [272])
	if ( ((*($18 + [40]) & [1]) == 0) ){ goto $label$18 }
	CALL $204(*((($18 + [40]) + [8])))
	
.LABEL $label$18
	$9 = (($18 + [72]) + [8])
	$1 = CALL atoi(( *($9) ? $8 : (*($18 + [72]) & [1]) ))
	*($18 + [36]) = $1
	CALL eosio_assert((($1 + [-1]) <= [49]), [32])
	CALL $220($18, ($18 + [88]))
	CALL _ZN11dbetonedice7str2eosENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio11symbol_typeE(($18 + [16]), $18, $3)
	if ( ((*($18) & [1]) == 0) ){ goto $label$19 }
	CALL $204(*(($18 + [8])))
	
.LABEL $label$19
	$13 = *($18 + [16])
	CALL eosio_assert(((int_64)$13 > (int_64)0), [320])
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$3 }
	$15 = *($18 + [36])
	$17 = $4
	
.LOOP $label$20:
	if ( ((int_32)*($1 + [16]) < (int_32)$15) ){ goto $label$21 }
	$17 = $1
	$12 = *($1)
	$1 = $12
	if ( $12 ){ goto $label$20 }
	goto $label$4 
	
.LABEL $label$21
	$1 = *($1 + [4])
	if ( $1 ){ goto $label$20 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((*($18 + [104]) & [1]) == 0) ){ goto $label$22 }
	CALL $204(*(($18 + [112])))
	
.LABEL $label$22
	*([0] + [4]) = ($18 + [144])
	return 
	
.LABEL $label$4
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$3 }
	if ( ((int_32)$15 >= (int_32)*($17 + [16])) ){ goto $label$2 }
	
.LABEL $label$3
	$17 = $4
	
.LABEL $label$2
	*($18 + [128]) = ($18 + [36])
	CALL $14(($18 + [136]), $0, ($18 + [36]), [352], ($18 + [128]), ($18 + [120]))
	$15 = *($18 + [136])
	$1 = ($15 + [24])
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$24 }
	CALL eosio_assert(((int_64)*((($18 + [16]) + [8])) == (int_64)*(($15 + [32]))), [368])
	$16 = ((int_64)*($1) + (int_64)$13)
	*($1) = $16
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [416])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [448])
	goto $label$23 
	
.LABEL $label$24
	*($1) = *($18 + [16])
	*(($1 + [8])) = *((($18 + [16]) + [8]))
	
.LABEL $label$23
	CALL eosio_assert(((int_64)*((($18 + [16]) + [8])) == (int_64)*(($2 + [8]))), [368])
	$13 = ((int_64)*($2) + (int_64)$13)
	*($2) = $13
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [416])
	CALL eosio_assert(((int_64)*($2) < (int_64)4611686018427387904), [448])
	if ( ((*($18 + [72]) & [1]) == 0) ){ goto $label$25 }
	CALL $204(*($9))
	
.LABEL $label$25
	if ( ((*($18 + [88]) & [1]) == 0) ){ goto $label$1 }
	CALL $204(*((($18 + [88]) + [8])))
	goto $label$1 
}

int_32 .FUNC _ZN11dbetonedice8divcountEyNSt3__13mapIidNS0_4lessIiEENS0_9allocatorINS0_4pairIKidEEEEEE (int_64 $0, int_32 $1)
{
	int_32 $2
	float_64 $3
	int_32 $4
	int_32 $5
	float_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$2 = ($1 + [4])
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$6 }
	$4 = ($1 + [4])
	
.LOOP $label$7:
	$9 = *($5 + [16])
	if ( ((int_32)$9 < (int_32)[2]) ){ goto $label$9 }
	$9 = *($5)
	if ( $9 ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$9
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$4 }
	$4 = ($5 + [4])
	$9 = *($5 + [4])
	if ( ($9 == 0) ){ goto $label$4 }
	$5 = $4
	
.LABEL $label$8
	$4 = $5
	$5 = $9
	goto $label$7 
	
.LABEL $label$6
	$5 = $2
	$4 = $2
	$9 = *($4)
	if ( $9 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = $5
	
.LABEL $label$4
	$9 = *($4)
	if ( ($9 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = ($1 + [8])
	$8 = ($1 + [4])
	goto $label$1 
	
.LABEL $label$2
	*(($9 = CALL $203([32]))) = (int_64)0
	*($9 + [8]) = $5
	*($4) = $9
	*($9 + [24]) = (int_64)0
	*($9 + [16]) = [1]
	$5 = $9
	$12 = *(*($1))
	if ( ($12 == 0) ){ goto $label$10 }
	*($1) = $12
	$5 = *($4)
	
.LABEL $label$10
	CALL $15(*($1 + [4]), $5)
	*($1 + [8]) = (*($1 + [8]) + [1])
	$7 = ($1 + [8])
	$8 = ($1 + [4])
	
.LABEL $label$1
	$10 = *(($9 + [24]))
	$3 = (CASTING float_64)(uint_64 $0)
	$9 = [1]
	
.LOOP $label$12:
	if ( ((int_32)$9 > (int_32)[7]) ){ goto $label$11 }
	$13 = ($9 + [1])
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$17 }
	$4 = $5
	$12 = $8
	
.LOOP $label$18:
	$11 = *($4 + [16])
	if ( ((int_32)$13 >= (int_32)$11) ){ goto $label$20 }
	$11 = *($4)
	if ( $11 ){ goto $label$19 }
	goto $label$16 
	
.LABEL $label$20
	if ( ((int_32)$11 > (int_32)$9) ){ goto $label$15 }
	$12 = ($4 + [4])
	$11 = *($4 + [4])
	if ( ($11 == 0) ){ goto $label$15 }
	$4 = $12
	
.LABEL $label$19
	$12 = $4
	$4 = $11
	goto $label$18 
	
.LABEL $label$17
	$4 = $2
	$12 = $2
	$11 = *($12)
	if ( $11 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$16
	$12 = $4
	
.LABEL $label$15
	$11 = *($12)
	if ( $11 ){ goto $label$13 }
	
.LABEL $label$14
	*(($11 = CALL $203([32]))) = (int_64)0
	*($11 + [8]) = $4
	*($12) = $11
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = $13
	$5 = $11
	$4 = *(*($1))
	if ( ($4 == 0) ){ goto $label$21 }
	*($1) = $4
	$5 = *($12)
	
.LABEL $label$21
	CALL $15(*($8), $5)
	*($7) = (*($7) + [1])
	$5 = *($2)
	
.LABEL $label$13
	$6 = *(($11 + [24]))
	if ( ($5 == 0) ){ goto $label$24 }
	$4 = $8
	
.LOOP $label$25:
	$12 = *($5 + [16])
	if ( ((int_32)$9 >= (int_32)$12) ){ goto $label$27 }
	$12 = *($5)
	if ( $12 ){ goto $label$26 }
	goto $label$23 
	
.LABEL $label$27
	if ( ((int_32)$12 >= (int_32)$9) ){ goto $label$22 }
	$4 = ($5 + [4])
	$12 = *($5 + [4])
	if ( ($12 == 0) ){ goto $label$22 }
	$5 = $4
	
.LABEL $label$26
	$4 = $5
	$5 = $12
	goto $label$25 
	
.LABEL $label$24
	$5 = $2
	$4 = $2
	goto $label$22 
	
.LABEL $label$23
	$4 = $5
	
.LABEL $label$22
	$10 = ((float_64)$10 + (float_64)$6)
	$12 = *($4)
	if ( $12 ){ goto $label$28 }
	*(($12 = CALL $203([32]))) = (int_64)0
	*($12 + [8]) = $5
	*($4) = $12
	*($12 + [24]) = (int_64)0
	*($12 + [16]) = $9
	$5 = $12
	$9 = *(*($1))
	if ( ($9 == 0) ){ goto $label$29 }
	*($1) = $9
	$5 = *($4)
	
.LABEL $label$29
	CALL $15(*($8), $5)
	*($7) = (*($7) + [1])
	
.LABEL $label$28
	$9 = $13
	$5 = ((float_64)$3 != (float_64)$3)
	if ( (((float_64)$3 > (float_64)$10) | ($5 | ((float_64)$10 != (float_64)$10))) ){ goto $label$12 }
	$9 = $13
	$6 = *(($12 + [24]))
	if ( (((float_64)$3 <= (float_64)$6) | ($5 | ((float_64)$6 != (float_64)$6))) ){ goto $label$12 }
	return $13
	
.LABEL $label$11
	return [0]
}

void .FUNC _ZN11dbetonedice17require_offertypeEi (int_32 $0)
{
	$0 = ($0 + [-1])
	if ( ((uint_32)$0 > (uint_32)[43]) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [32])
	$0
}

void .FUNC _ZN11dbetonedice7str2eosENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio11symbol_typeE (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [80])
	$4 = [0]
	$3 = (int_64)5462355
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [48])
	if ( (*($1) & [1]) ){ goto $label$7 }
	$4 = ($1 + [1])
	goto $label$6 
	
.LABEL $label$7
	$4 = *($1 + [8])
	
.LABEL $label$6
	$3 = CALL atoll($4)
	*(($0 + [8])) = $2
	*($0) = $3
}

void .FUNC _ZN11dbetonedice8splitoneERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = [1]
	$3 = ($1 + [1])
	$7 = *($1)
	$6 = *($1 + [8])
	$2 = *($1 + [4])
	$8 = [0]
	$5 = CALL strlen([144])
	if ( ($5 == 0) ){ goto $label$1 }
	$7 = ( $2 ? uint_32($7 >> [1]) : $8 )
	$8 = ($7 & [1])
	$4 = ( $6 ? $3 : $8 )
	$6 = ($4 + $7)
	$8 = $6
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$2 }
	$8 = $4
	
.LOOP $label$4:
	$7 = (($7 - $5) + [1])
	if ( ($7 == 0) ){ goto $label$3 }
	$8 = CALL memchr($8, [45], $7)
	if ( ($8 == 0) ){ goto $label$3 }
	if ( (CALL memcmp($8, [144], $5) == 0) ){ goto $label$2 }
	$8 = ($8 + [1])
	$7 = ($6 - $8)
	if ( ((int_32)$7 >= (int_32)$5) ){ goto $label$4 }
	
.LABEL $label$3
	$8 = $6
	
.LABEL $label$2
	$8 = ( [-1] ? ($8 - $4) : ((int_32)$8 == (int_32)$6) )
	
.LABEL $label$1
	CALL $221($0, $1, [0], $8, $1)
	$8 = *($1)
	$7 = *(($1 + [8]))
	$6 = *(($1 + [4]))
	$5 = CALL strlen([144])
	if ( ($5 == 0) ){ goto $label$5 }
	$7 = ( $6 ? uint_32($8 >> [1]) : $0 )
	$0 = ($8 & [1])
	$9 = ( $7 ? $3 : $0 )
	$6 = ($9 + $7)
	$8 = $6
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$6 }
	$8 = $9
	
.LOOP $label$8:
	$7 = (($7 - $5) + [1])
	if ( ($7 == 0) ){ goto $label$7 }
	$8 = CALL memchr($8, [45], $7)
	if ( ($8 == 0) ){ goto $label$7 }
	if ( (CALL memcmp($8, [144], $5) == 0) ){ goto $label$6 }
	$8 = ($8 + [1])
	$7 = ($6 - $8)
	if ( ((int_32)$7 >= (int_32)$5) ){ goto $label$8 }
	
.LABEL $label$7
	$8 = $6
	
.LABEL $label$6
	$9 = ( [0] ? (([1] - $9) + $8) : ((int_32)$8 == (int_32)$6) )
	
.LABEL $label$5
	CALL $206($1, CALL $213($1, [0], $9))
}

void .FUNC _ZN11dbetonedice12_split_extraENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPN5eosio5assetENS7_11symbol_typeE (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [144])
	*([0] + [4]) = $18
	CALL $220(($18 + [104]), $1)
	*($0 + [8]) = [0]
	*($0 + [4]) = [0]
	$4 = ($0 + [4])
	*($0) = $4
	$8 = (($18 + [72]) | [1])
	$7 = (($18 + [40]) | [1])
	$6 = (($18 + [56]) | [1])
	$5 = (($18 + [104]) | [1])
	$14 = (($18 + [104]) + [8])
	
.LOOP $label$1:
	$15 = *($18 + [104])
	$17 = ($15 & [1])
	$12 = *($14)
	$9 = *($18 + [108])
	$1 = CALL strlen([144])
	if ( ($1 == 0) ){ goto $label$4 }
	$15 = ( $9 ? uint_32($15 >> [1]) : $17 )
	if ( ((int_32)$15 < (int_32)$1) ){ goto $label$3 }
	$12 = ( $12 ? $5 : $17 )
	$9 = ($12 + $15)
	$17 = $12
	
.LOOP $label$5:
	$15 = (($15 - $1) + [1])
	if ( ($15 == 0) ){ goto $label$3 }
	$15 = CALL memchr($17, [45], $15)
	if ( ($15 == 0) ){ goto $label$3 }
	if ( (CALL memcmp($15, [144], $1) == 0) ){ goto $label$6 }
	$17 = ($15 + [1])
	$15 = ($9 - $17)
	if ( ((int_32)$15 >= (int_32)$1) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)($15 - $12) == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZN11dbetonedice8splitoneERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($18 + [88]), ($18 + [104]))
	$9 = *($18 + [104])
	$12 = *($14)
	$10 = *($18 + [108])
	$1 = [0]
	$15 = [0]
	$17 = CALL strlen([144])
	if ( ($17 == 0) ){ goto $label$7 }
	$9 = ( $10 ? uint_32($9 >> [1]) : $15 )
	$15 = ($9 & [1])
	$11 = ( $12 ? $5 : $15 )
	$12 = ($11 + $9)
	$15 = $12
	if ( ((int_32)$9 < (int_32)$17) ){ goto $label$8 }
	$15 = $11
	
.LOOP $label$10:
	$9 = (($9 - $17) + [1])
	if ( ($9 == 0) ){ goto $label$9 }
	$15 = CALL memchr($15, [45], $9)
	if ( ($15 == 0) ){ goto $label$9 }
	if ( (CALL memcmp($15, [144], $17) == 0) ){ goto $label$8 }
	$15 = ($15 + [1])
	$9 = ($12 - $15)
	if ( ((int_32)$9 >= (int_32)$17) ){ goto $label$10 }
	
.LABEL $label$9
	$15 = $12
	
.LABEL $label$8
	$15 = ( [-1] ? ($15 - $11) : ((int_32)$15 == (int_32)$12) )
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$15 != (int_32)[-1]), [160])
	CALL _ZN11dbetonedice8splitoneERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(($18 + [72]), ($18 + [104]))
	$15 = *($18 + [72])
	CALL eosio_assert(( *($18 + [76]) ? uint_32($15 >> [1]) : ($15 & [1]) ), [192])
	CALL $220(($18 + [56]), ($18 + [88]))
	
.LOOP $label$12:
	$17 = [1]
	$15 = ($15 & [1])
	$15 = *($18 + [56])
	if ( ((uint_32)$1 >= (uint_32)( *($18 + [60]) ? uint_32($15 >> [1]) : $15 )) ){ goto $label$11 }
	$15 = (( *((($18 + [56]) + [8])) ? $6 : $15 ) + $1)
	$1 = ($1 + [1])
	if ( CALL isdigit(*($15)) ){ goto $label$12 }
	$17 = [0]
	
.LABEL $label$11
	CALL eosio_assert($17, [224])
	if ( ((*($18 + [56]) & [1]) == 0) ){ goto $label$13 }
	CALL $204(*((($18 + [56]) + [8])))
	
.LABEL $label$13
	CALL $220(($18 + [40]), ($18 + [72]))
	$1 = [0]
	
.LOOP $label$15:
	$17 = [1]
	$15 = ($15 & [1])
	$15 = *($18 + [40])
	if ( ((uint_32)$1 >= (uint_32)( *($18 + [44]) ? uint_32($15 >> [1]) : $15 )) ){ goto $label$14 }
	$15 = (( *((($18 + [40]) + [8])) ? $7 : $15 ) + $1)
	$1 = ($1 + [1])
	if ( CALL isdigit(*($15)) ){ goto $label$15 }
	$17 = [0]
	
.LABEL $label$14
	CALL eosio_assert($17, [272])
	if ( ((*($18 + [40]) & [1]) == 0) ){ goto $label$16 }
	CALL $204(*((($18 + [40]) + [8])))
	
.LABEL $label$16
	$9 = (($18 + [72]) + [8])
	$1 = CALL atoi(( *($9) ? $8 : (*($18 + [72]) & [1]) ))
	*($18 + [36]) = $1
	$1 = ($1 + [-1])
	if ( ((uint_32)$1 > (uint_32)[43]) ){ goto $label$17 }
	goto $label$2 
	
.LABEL $label$17
	CALL eosio_assert([0], [32])
	goto $label$2 
	
.LABEL $label$3
	if ( ((*($18 + [104]) & [1]) == 0) ){ goto $label$18 }
	CALL $204(*(($18 + [112])))
	
.LABEL $label$18
	*([0] + [4]) = ($18 + [144])
	return 
	
.LABEL $label$2
	CALL $220($18, ($18 + [88]))
	CALL _ZN11dbetonedice7str2eosENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio11symbol_typeE(($18 + [16]), $18, $3)
	if ( ((*($18) & [1]) == 0) ){ goto $label$19 }
	CALL $204(*(($18 + [8])))
	
.LABEL $label$19
	$13 = *($18 + [16])
	CALL eosio_assert(((int_64)$13 > (int_64)0), [320])
	$1 = *($4)
	if ( ($1 == 0) ){ goto $label$21 }
	$15 = *($18 + [36])
	$17 = $4
	
.LOOP $label$23:
	if ( ((int_32)*($1 + [16]) < (int_32)$15) ){ goto $label$24 }
	$17 = $1
	$12 = *($1)
	$1 = $12
	if ( $12 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	$1 = *($1 + [4])
	if ( $1 ){ goto $label$23 }
	
.LABEL $label$22
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$21 }
	if ( ((int_32)$15 >= (int_32)*($17 + [16])) ){ goto $label$20 }
	
.LABEL $label$21
	$17 = $4
	
.LABEL $label$20
	*($18 + [128]) = ($18 + [36])
	CALL $14(($18 + [136]), $0, ($18 + [36]), [352], ($18 + [128]), ($18 + [120]))
	$15 = *($18 + [136])
	$1 = ($15 + [24])
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$26 }
	CALL eosio_assert(((int_64)*((($18 + [16]) + [8])) == (int_64)*(($15 + [32]))), [368])
	$16 = ((int_64)*($1) + (int_64)$13)
	*($1) = $16
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [416])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [448])
	goto $label$25 
	
.LABEL $label$26
	*($1) = *($18 + [16])
	*(($1 + [8])) = *((($18 + [16]) + [8]))
	
.LABEL $label$25
	CALL eosio_assert(((int_64)*((($18 + [16]) + [8])) == (int_64)*(($2 + [8]))), [368])
	$13 = ((int_64)*($2) + (int_64)$13)
	*($2) = $13
	CALL eosio_assert(((int_64)$13 > (int_64)-4611686018427387904), [416])
	CALL eosio_assert(((int_64)*($2) < (int_64)4611686018427387904), [448])
	if ( ((*($18 + [72]) & [1]) == 0) ){ goto $label$27 }
	CALL $204(*($9))
	
.LABEL $label$27
	if ( ((*($18 + [88]) & [1]) == 0) ){ goto $label$1 }
	CALL $204(*((($18 + [88]) + [8])))
	goto $label$1 
	$1
}

void .FUNC _ZN11dbetonedice8dbetdice11intentclearEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	$4 = CALL db_lowerbound_i64(*($0 + [88]), *(($0 + [96])), (int_64)5445035907950198784, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$2 = ($0 + [88])
	$0 = CALL $179($2, $4)
	
.LOOP $label$2:
	if ( ((uint_64)*($0) >= (uint_64)$1) ){ goto $label$1 }
	$4 = [0]
	$3 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($3, [3456])
	CALL eosio_assert($3, [3504])
	$3 = CALL db_next_i64(*($0 + [60]), ($5 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $179($2, $3)
	
.LABEL $label$3
	CALL $181($2, $0)
	$0 = $4
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC _ZN11dbetonedice11_getWinsMapEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	*($0 + [8]) = [0]
	*($0 + [4]) = [0]
	$11 = ($0 + [4])
	*($0) = $11
	$2 = (CASTING uint_32)(uint_64 $1)
	$7 = $11
	$8 = ($0 + [8])
	$9 = (int_64)1
	
.LOOP $label$1:
	if ( ((int_64)$9 != (int_64)$1) ){ goto $label$2 }
	$4 = $7
	$3 = *($11)
	if ( $3 ){ goto $label$5 }
	$3 = $11
	$4 = $11
	$10 = *($4)
	if ( $10 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	
.LOOP $label$8:
	$5 = *($3 + [16])
	if ( ((int_64)$5 <= (int_64)$1) ){ goto $label$10 }
	$4 = $3
	$10 = *($3)
	if ( $10 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	if ( ((int_64)$5 >= (int_64)$1) ){ goto $label$6 }
	$4 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$3 = $10
	goto $label$8 
	
.LABEL $label$7
	$4 = $3
	
.LABEL $label$6
	$10 = *($4)
	if ( $10 ){ goto $label$3 }
	
.LABEL $label$4
	*(($10 = CALL $203([24]))) = (int_64)0
	*($10 + [8]) = $3
	*($4) = $10
	*($10 + [20]) = [0]
	*($10 + [16]) = $2
	$3 = $10
	$6 = *(*($0))
	if ( ($6 == 0) ){ goto $label$11 }
	*($0) = $6
	$3 = *($4)
	
.LABEL $label$11
	CALL $15(*(($0 + [4])), $3)
	*($8) = (*($8) + [1])
	
.LABEL $label$3
	*(($10 + [20])) = [1]
	
.LABEL $label$2
	$9 = ((int_64)$9 + (int_64)1)
	if ( ((int_64)$9 != (int_64)11) ){ goto $label$1 }
	if ( ((uint_64)((int_64)$1 + (int_64)-1) >= (uint_64)(int_64)5) ){ goto $label$22 }
	$3 = *($11)
	if ( ($3 == 0) ){ goto $label$21 }
	$4 = $7
	
.LOOP $label$23:
	$10 = *($3 + [16])
	if ( ((int_32)$10 < (int_32)[12]) ){ goto $label$25 }
	$4 = $3
	$10 = *($3)
	if ( $10 ){ goto $label$24 }
	goto $label$20 
	
.LABEL $label$25
	if ( ((int_32)$10 == (int_32)[11]) ){ goto $label$19 }
	$4 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$19 }
	
.LABEL $label$24
	$3 = $10
	goto $label$23 
	
.LABEL $label$22
	if ( ((uint_64)((int_64)$1 + (int_64)-6) > (uint_64)(int_64)4) ){ goto $label$12 }
	$3 = *($11)
	if ( ($3 == 0) ){ goto $label$17 }
	$4 = $7
	
.LOOP $label$26:
	$10 = *($3 + [16])
	if ( ((int_32)$10 < (int_32)[23]) ){ goto $label$28 }
	$4 = $3
	$10 = *($3)
	if ( $10 ){ goto $label$27 }
	goto $label$16 
	
.LABEL $label$28
	if ( ((int_32)$10 == (int_32)[22]) ){ goto $label$15 }
	$4 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$15 }
	
.LABEL $label$27
	$3 = $10
	goto $label$26 
	
.LABEL $label$21
	$3 = $11
	$4 = $11
	$10 = *($4)
	if ( $10 ){ goto $label$13 }
	goto $label$18 
	
.LABEL $label$20
	$4 = $3
	
.LABEL $label$19
	$10 = *($4)
	if ( $10 ){ goto $label$13 }
	
.LABEL $label$18
	*(($10 = CALL $203([24]))) = (int_64)0
	*($10 + [8]) = $3
	*($4) = $10
	*($10 + [20]) = [0]
	*($10 + [16]) = [11]
	$3 = $10
	$8 = *(*($0))
	if ( ($8 == 0) ){ goto $label$29 }
	*($0) = $8
	$3 = *($4)
	
.LABEL $label$29
	CALL $15(*(($0 + [4])), $3)
	*(($3 = ($0 + [8]))) = (*($3) + [1])
	goto $label$13 
	
.LABEL $label$17
	$3 = $11
	$4 = $11
	$10 = *($4)
	if ( $10 ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$16
	$4 = $3
	
.LABEL $label$15
	$10 = *($4)
	if ( $10 ){ goto $label$13 }
	
.LABEL $label$14
	*(($10 = CALL $203([24]))) = (int_64)0
	*($10 + [8]) = $3
	*($4) = $10
	*($10 + [20]) = [0]
	*($10 + [16]) = [22]
	$3 = $10
	$8 = *(*($0))
	if ( ($8 == 0) ){ goto $label$30 }
	*($0) = $8
	$3 = *($4)
	
.LABEL $label$30
	CALL $15(*(($0 + [4])), $3)
	*(($3 = ($0 + [8]))) = (*($3) + [1])
	
.LABEL $label$13
	*(($10 + [20])) = [1]
	
.LABEL $label$12
	$3 = *($11)
	if ( ((int_64)(((int_64)$1 & (int_64)1) == 0) == 0) ){ goto $label$38 }
	if ( ($3 == 0) ){ goto $label$37 }
	
.LOOP $label$40:
	$10 = *($3 + [16])
	if ( ((int_32)$10 < (int_32)[45]) ){ goto $label$42 }
	$7 = $3
	$10 = *($3)
	if ( $10 ){ goto $label$41 }
	goto $label$35 
	
.LABEL $label$42
	if ( ((int_32)$10 == (int_32)[44]) ){ goto $label$39 }
	$7 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$39 }
	
.LABEL $label$41
	$3 = $10
	goto $label$40 
	
.LABEL $label$39
	$11 = $3
	$3 = $7
	$10 = *($3)
	if ( $10 ){ goto $label$31 }
	goto $label$34 
	
.LABEL $label$38
	if ( ($3 == 0) ){ goto $label$36 }
	
.LOOP $label$44:
	$10 = *($3 + [16])
	if ( ((int_32)$10 < (int_32)[34]) ){ goto $label$46 }
	$7 = $3
	$10 = *($3)
	if ( $10 ){ goto $label$45 }
	goto $label$33 
	
.LABEL $label$46
	if ( ((int_32)$10 == (int_32)[33]) ){ goto $label$43 }
	$7 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$43 }
	
.LABEL $label$45
	$3 = $10
	goto $label$44 
	
.LABEL $label$43
	$11 = $3
	$3 = $7
	$10 = *($3)
	if ( $10 ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$37
	$3 = $11
	$10 = *($3)
	if ( $10 ){ goto $label$31 }
	goto $label$34 
	
.LABEL $label$36
	$3 = $11
	$10 = *($3)
	if ( $10 ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$35
	$11 = $3
	$10 = *($3)
	if ( $10 ){ goto $label$31 }
	
.LABEL $label$34
	*(($10 = CALL $203([24]))) = (int_64)0
	*($10 + [8]) = $11
	*($3) = $10
	*($10 + [20]) = [0]
	*($10 + [16]) = [44]
	$4 = $10
	$11 = *(*($0))
	if ( ($11 == 0) ){ goto $label$47 }
	*($0) = $11
	$4 = *($3)
	
.LABEL $label$47
	CALL $15(*(($0 + [4])), $4)
	*(($3 = ($0 + [8]))) = (*($3) + [1])
	goto $label$31 
	
.LABEL $label$33
	$11 = $3
	$10 = *($3)
	if ( $10 ){ goto $label$31 }
	
.LABEL $label$32
	*(($10 = CALL $203([24]))) = (int_64)0
	*($10 + [8]) = $11
	*($3) = $10
	*($10 + [20]) = [0]
	*($10 + [16]) = [33]
	$4 = $10
	$11 = *(*($0))
	if ( ($11 == 0) ){ goto $label$48 }
	*($0) = $11
	$4 = *($3)
	
.LABEL $label$48
	CALL $15(*(($0 + [4])), $4)
	*(($3 = ($0 + [8]))) = (*($3) + [1])
	
.LABEL $label$31
	*(($10 + [20])) = [1]
}

int_64 .FUNC _ZN11dbetonedice13transfer_args8get_nameEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [480]
	$4 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$3 > (uint_64)(int_64)9) ){ goto $label$6 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$0 = ($0 + [165])
	goto $label$4 
	
.LABEL $label$6
	$5 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

int_32 .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [2992])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC _ZN11dbetonedice8dbetdice10drawrewardEyyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [128])
	*([0] + [4]) = $13
	$10 = (int_64)0
	$11 = (int_64)59
	$7 = [3968]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$2 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$5 = ($5 + [165])
	goto $label$3 
	
.LABEL $label$4
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($8)
	$6 = *($0)
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [2576]
	$8 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$10 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$5 = ($5 + [165])
	goto $label$8 
	
.LABEL $label$10
	$11 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$6
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$8 = ((int_64)$11 | (int_64)$8)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$5 }
	*($13 + [64]) = $8
	*($13 + [56]) = $6
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [2592]
	$8 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$10 > (uint_64)(int_64)10) ){ goto $label$16 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$5 = ($5 + [165])
	goto $label$14 
	
.LABEL $label$16
	$11 = (int_64)0
	if ( ((int_64)$10 == (int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$12
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)-5)
	$8 = ((int_64)$11 | (int_64)$8)
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((int_64)$10 != (int_64)13) ){ goto $label$11 }
	$10 = (int_64)0
	$9 = (int_64)59
	$7 = [2608]
	$12 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$10 > (uint_64)(int_64)7) ){ goto $label$22 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$5 = ($5 + [165])
	goto $label$20 
	
.LABEL $label$22
	$11 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$18
	$7 = ($7 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$17 }
	*(($13 + [36])) = *(($3 + [12]))
	*(($13 + [32])) = *(($3 + [8]))
	*(($13 + [28])) = *(($3 + [4]))
	*($13 + [16]) = $2
	*($13 + [8]) = $6
	*($13 + [24]) = *($3)
	CALL $220(($13 + [40]), $4)
	$7 = CALL $81(($13 + [72]), ($13 + [56]), $8, $12, ($13 + [8]))
	CALL $82(($13 + [112]), $7)
	$5 = *($13 + [112])
	CALL send_inline($5, (*($13 + [116]) - $5))
	$5 = *($13 + [112])
	if ( ($5 == 0) ){ goto $label$23 }
	*($13 + [116]) = $5
	CALL $204($5)
	
.LABEL $label$23
	$5 = *($7 + [28])
	if ( ($5 == 0) ){ goto $label$24 }
	*(($7 + [32])) = $5
	CALL $204($5)
	
.LABEL $label$24
	$5 = *($7 + [16])
	if ( ($5 == 0) ){ goto $label$25 }
	*(($7 + [20])) = $5
	CALL $204($5)
	
.LABEL $label$25
	if ( ((*($13 + [40]) & [1]) == 0) ){ goto $label$26 }
	CALL $204(*(($13 + [48])))
	
.LABEL $label$26
	*([0] + [4]) = ($13 + [128])
}

void .FUNC $218 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $203($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $204($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC _ZN11dbetonedice8dbetdice9deductionEyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [112])
	*([0] + [4]) = $10
	CALL require_auth(*($0))
	$9 = *($0)
	$6 = (int_64)0
	$5 = (int_64)59
	$0 = [2576]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$6 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	*($10 + [48]) = $7
	*($10 + [40]) = $9
	$6 = (int_64)0
	$8 = (int_64)59
	$0 = [2624]
	$7 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$8 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$4 = ($4 + [165])
	goto $label$9 
	
.LABEL $label$10
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$8
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$0 = [5760]
	$9 = (int_64)0
	
.LOOP $label$11:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$16 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$4 = ($4 + [165])
	goto $label$14 
	
.LABEL $label$16
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$15
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$13
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$12
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$11 }
	*(($10 + [20])) = *(($2 + [12]))
	*(($10 + [16])) = *(($2 + [8]))
	*(($10 + [12])) = *(($2 + [4]))
	*($10) = $1
	*($10 + [8]) = *($2)
	CALL $220(($10 + [24]), $3)
	$0 = CALL $153(($10 + [56]), ($10 + [40]), $7, $9, $10)
	CALL $82(($10 + [96]), $0)
	$4 = *($10 + [96])
	CALL send_inline($4, (*($10 + [100]) - $4))
	$4 = *($10 + [96])
	if ( ($4 == 0) ){ goto $label$17 }
	*($10 + [100]) = $4
	CALL $204($4)
	
.LABEL $label$17
	$4 = *($0 + [28])
	if ( ($4 == 0) ){ goto $label$18 }
	*(($0 + [32])) = $4
	CALL $204($4)
	
.LABEL $label$18
	$4 = *($0 + [16])
	if ( ($4 == 0) ){ goto $label$19 }
	*(($0 + [20])) = $4
	CALL $204($4)
	
.LABEL $label$19
	if ( ((*($10 + [24]) & [1]) == 0) ){ goto $label$20 }
	CALL $204(*(($10 + [32])))
	
.LABEL $label$20
	*([0] + [4]) = ($10 + [112])
}

int_32 .FUNC $180 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [60]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [4368])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)5445035907950198784)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [4304])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [4304])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $179(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC _ZN11dbetonedice8dbetdice10dfdicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$18 = (*([0] + [4]) - [448])
	*([0] + [4]) = $18
	CALL require_auth(*($0))
	$10 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$1 }
	$12 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [3552])
	CALL eosio_assert(((int_64)*($3) > (int_64)0), [3584])
	$17 = [1]
	$12 = *(($3 + [8]))
	if ( ((int_64)$12 == (int_64)1397703940) ){ goto $label$6 }
	if ( ((int_64)$12 == (int_64)5461508) ){ goto $label$6 }
	$17 = ((int_64)$12 == (int_64)293455873288)
	
.LABEL $label$6
	CALL eosio_assert($17, [3584])
	*((($18 + [152]) + [8])) = [0]
	*($18 + [152]) = (int_64)0
	$17 = CALL strlen([3536])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$11 }
	*($18 + [152]) = ($17 << [1])
	$10 = (($18 + [152]) | [1])
	if ( $17 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$5 = (($17 + [16]) & [-16])
	$10 = CALL $203($5)
	*($18 + [152]) = ($5 | [1])
	*($18 + [160]) = $10
	*($18 + [156]) = $17
	
.LABEL $label$10
	CALL memcpy($10, [3536], $17)
	
.LABEL $label$9
	*(($10 + $17)) = [0]
	CALL _ZN11dbetonedice5splitERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES8_(($18 + [352]), $4, ($18 + [152]))
	if ( ((*($18 + [152]) & [1]) == 0) ){ goto $label$12 }
	CALL $204(*($18 + [160]))
	
.LABEL $label$12
	$4 = *($18 + [352])
	if ( ((int_32)(*($18 + [356]) - $4) != (int_32)[72]) ){ goto $label$13 }
	CALL $220(($18 + [336]), $4)
	CALL $220(($18 + [320]), (*($18 + [352]) + [12]))
	CALL $220(($18 + [304]), (*($18 + [352]) + [24]))
	CALL $220(($18 + [288]), (*($18 + [352]) + [36]))
	CALL $220(($18 + [272]), (*($18 + [352]) + [48]))
	CALL $220(($18 + [256]), (*($18 + [352]) + [60]))
	CALL $220(($18 + [240]), ($18 + [320]))
	$5 = (($18 + [240]) | [1])
	$17 = [0]
	$9 = ($18 + [248])
	
.LOOP $label$16:
	$10 = ($10 & [1])
	$10 = *($18 + [240])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [244]) ? uint_32($10 >> [1]) : $10 )) ){ goto $label$15 }
	$10 = (( *($9) ? $5 : $10 ) + $17)
	$4 = [1]
	$17 = ($17 + [1])
	if ( CALL isdigit(*($10)) ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	CALL $220(($18 + [224]), ($18 + [304]))
	$5 = (($18 + [224]) | [1])
	$17 = [0]
	$9 = ($18 + [232])
	
.LOOP $label$19:
	$10 = ($10 & [1])
	$10 = *($18 + [224])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [228]) ? uint_32($10 >> [1]) : $10 )) ){ goto $label$18 }
	$10 = (( *($9) ? $5 : $10 ) + $17)
	$4 = [1]
	$17 = ($17 + [1])
	if ( CALL isdigit(*($10)) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL $220(($18 + [208]), ($18 + [288]))
	$5 = (($18 + [208]) | [1])
	$17 = [0]
	$9 = ($18 + [216])
	
.LOOP $label$22:
	$10 = ($10 & [1])
	$10 = *($18 + [208])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [212]) ? uint_32($10 >> [1]) : $10 )) ){ goto $label$21 }
	$10 = (( *($9) ? $5 : $10 ) + $17)
	$4 = [1]
	$17 = ($17 + [1])
	if ( CALL isdigit(*($10)) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	CALL $220(($18 + [192]), ($18 + [256]))
	$9 = (($18 + [192]) | [1])
	$4 = [0]
	$8 = ($18 + [200])
	$17 = [0]
	
.LOOP $label$24:
	$5 = ($10 & [1])
	$10 = *($18 + [192])
	if ( ((uint_32)$17 >= (uint_32)( *($18 + [196]) ? uint_32($10 >> [1]) : $5 )) ){ goto $label$23 }
	$10 = (( *($8) ? $9 : $5 ) + $17)
	$17 = ($17 + [1])
	if ( CALL isdigit(*($10)) ){ goto $label$24 }
	$4 = [1]
	$10 = *($18 + [192])
	
.LABEL $label$23
	if ( (($10 & [1]) == 0) ){ goto $label$20 }
	CALL $204(*(($18 + [200])))
	
.LABEL $label$20
	if ( ((*($18 + [208]) & [1]) == 0) ){ goto $label$17 }
	CALL $204(*(($18 + [216])))
	
.LABEL $label$17
	if ( ((*($18 + [224]) & [1]) == 0) ){ goto $label$14 }
	CALL $204(*(($18 + [232])))
	
.LABEL $label$14
	if ( ((*($18 + [240]) & [1]) == 0) ){ goto $label$25 }
	CALL $204(*(($18 + [248])))
	
.LABEL $label$25
	if ( $4 ){ goto $label$26 }
	$17 = ( *($18 + [280]) ? (($18 + [272]) | [1]) : (*($18 + [272]) & [1]) )
	$10 = [-1]
	
.LOOP $label$27:
	$4 = ($17 + $10)
	$5 = ($10 + [1])
	$10 = $5
	if ( *(($4 + [1])) ){ goto $label$27 }
	$15 = (CASTING uint_64)(uint_32 $5)
	$12 = (int_64)0
	$11 = (int_64)59
	$13 = (int_64)0
	
.LOOP $label$28:
	$14 = (int_64)0
	if ( ((uint_64)$12 >= (uint_64)$15) ){ goto $label$29 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$31 }
	$10 = ($10 + [165])
	goto $label$30 
	
.LABEL $label$31
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$30
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$29
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$33 }
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	goto $label$32 
	
.LABEL $label$33
	$14 = ((int_64)$14 & (int_64)15)
	
.LABEL $label$32
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$28 }
	$12 = (int_64)0
	$11 = ( $13 ? (int_64)0 : CALL is_account($13) )
	$16 = ( (int_64)0 ? $11 : ((int_64)$11 == (int_64)$1) )
	$11 = (int_64)59
	$17 = [3968]
	$13 = (int_64)0
	
.LOOP $label$34:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$35 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$37 }
	$10 = ($10 + [165])
	goto $label$36 
	
.LABEL $label$37
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$36
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$35
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$34 }
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [3968]
	$15 = (int_64)0
	
.LOOP $label$38:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$39 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$41 }
	$10 = ($10 + [165])
	goto $label$40 
	
.LABEL $label$41
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$40
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$39
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$38 }
	*(($18 + [184])) = [0]
	*($18 + [168]) = (int_64)-1
	$12 = (int_64)0
	*($18 + [176]) = (int_64)0
	*($18 + [160]) = $15
	*($18 + [152]) = $13
	$17 = CALL db_find_i64($13, $15, (int_64)-4023100423488818528, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$42 }
	$17 = CALL $117(($18 + [152]), $17)
	CALL eosio_assert(((int_32)*($17 + [88]) == (int_32)($18 + [152])), [2464])
	$15 = *($17 + [8])
	$14 = (int_64)59
	$17 = [3984]
	$13 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$12 > (uint_64)(int_64)3) ){ goto $label$48 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$10 = ($10 + [165])
	goto $label$46 
	
.LABEL $label$48
	$11 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$44
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$43 }
	if ( ((int_64)$15 == (int_64)$13) ){ goto $label$42 }
	$16 = ( $16 ? $15 : (int_64)($15 == 0) )
	
.LABEL $label$42
	$6 = CALL atoll(( *($18 + [328]) ? (($18 + [320]) | [1]) : (*($18 + [320]) & [1]) ))
	$7 = CALL atoll(( *($18 + [312]) ? (($18 + [304]) | [1]) : (*($18 + [304]) & [1]) ))
	*($18 + [144]) = CALL atoll(( *($18 + [296]) ? (($18 + [288]) | [1]) : (*($18 + [288]) & [1]) ))
	CALL eosio_assert((uint_64)(((int_64)CALL $249(( *($18 + [264]) ? (($18 + [256]) | [1]) : (*($18 + [256]) & [1]) )) + (int_64)-2) <= (int_64)95), [4000])
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [3968]
	$13 = (int_64)0
	
.LOOP $label$49:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$50 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$10 = ($10 + [165])
	goto $label$51 
	
.LABEL $label$52
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$50
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$49 }
	$12 = (int_64)0
	$11 = (int_64)59
	$17 = [3968]
	$15 = (int_64)0
	
.LOOP $label$53:
	$14 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$54 }
	$10 = *($17)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$56 }
	$10 = ($10 + [165])
	goto $label$55 
	
.LABEL $label$56
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$55
	$14 = ((int_64)(CASTING uint_64)(uint_32 ($10 & [31])) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$54
	$17 = ($17 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$15 = ((int_64)$14 | (int_64)$15)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$53 }
	*(($18 + [136])) = [0]
	*($18 + [120]) = (int_64)-1
	*($18 + [128]) = (int_64)0
	*($18 + [112]) = $15
	*($18 + [104]) = $13
	$17 = CALL db_find_i64($13, $15, (int_64)-4023100430253817856, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$59 }
	$17 = CALL $118(($18 + [104]), $17)
	CALL eosio_assert(((int_32)*($17 + [60]) == (int_32)($18 + [104])), [2464])
	$17 = *($17 + [16])
	if ( ((uint_32)$17 >= (uint_32)[3]) ){ goto $label$58 }
	CALL eosio_assert(((int_64)$6 == (int_64)1), [4032])
	goto $label$57 
	
.LABEL $label$59
	CALL eosio_assert(((int_64)$6 == (int_64)1), [4032])
	goto $label$57 
	
.LABEL $label$58
	if ( ((uint_32)$17 > (uint_32)[4]) ){ goto $label$60 }
	CALL eosio_assert((((int_64)$6 == (int_64)1) | ((int_64)$6 == (int_64)10)), [4032])
	goto $label$57 
	
.LABEL $label$60
	$17 = [0]
	$12 = ((int_64)$6 + (int_64)-1)
	if ( ((uint_64)$12 > (uint_64)(int_64)49) ){ goto $label$61 }
	$17 = (CASTING uint_32)(uint_64 (uint_64)(int_64)562949953421825 >> (uint_64)((int_64)$12 & (int_64)1125899906842623)))
	
.LABEL $label$61
	CALL eosio_assert(($17 & [1]), [4032])
	
.LABEL $label$57
	CALL _ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy($3, $6)
	$4 = ($0 + [48])
	*($18 + [96]) = $4
	CALL $120(($18 + [56]), ($18 + [96]), ($18 + [144]))
	$17 = [0]
	$10 = *($18 + [60])
	if ( ($10 == 0) ){ goto $label$62 }
	$17 = ( $10 ? [0] : ((int_64)*($18 + [144]) == (int_64)*($10 + [32])) )
	
.LABEL $label$62
	CALL eosio_assert(($17 == 0), [4064])
	*((($18 + [56]) + [32])) = [0]
	*($18 + [72]) = (int_64)-1
	*($18 + [80]) = (int_64)0
	$12 = *($0)
	*($18 + [56]) = $12
	*($18 + [64]) = $12
	$17 = CALL db_find_i64($12, $12, (int_64)-3104856670496604160, $1)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$70 }
	$17 = CALL $121(($18 + [56]), $17)
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)($18 + [56])), [2464])
	if ( ((int_64)*($17 + [16]) != (int_64)2) ){ goto $label$69 }
	if ( ((uint_64)*($17 + [24]) >= (uint_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) + (int_64)4294967276) & (int_64)4294967295)) ){ goto $label$66 }
	*($18 + [48]) = $4
	$9 = ($17 + [8])
	CALL $120(($18 + [368]), ($18 + [48]), $9)
	$5 = ($18 + [48])
	$4 = *($18 + [372])
	if ( ($4 == 0) ){ goto $label$65 }
	$10 = [0]
	if ( ((int_64)*($9) != (int_64)*($4 + [32])) ){ goto $label$64 }
	$5 = *($18 + [368])
	$10 = $4
	goto $label$64 
	
.LABEL $label$70
	$11 = *($0)
	CALL eosio_assert(((int_64)*($18 + [56]) == (int_64)CALL $fimport$14()), [2720])
	*(($17 = CALL $203([48])) + [32]) = ($18 + [56])
	*($17) = $1
	*($17 + [16]) = (int_64)2
	*($17 + [8]) = *($18 + [144])
	*($17 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($18 + [416]) = (($18 + [368]) + [32])
	*($18 + [412]) = ($18 + [368])
	*($18 + [408]) = ($18 + [368])
	*($18 + [32]) = ($18 + [408])
	*($18 + [436]) = ($17 + [8])
	*($18 + [432]) = $17
	*($18 + [440]) = ($17 + [16])
	*($18 + [444]) = ($17 + [24])
	CALL $125(($18 + [432]), ($18 + [32]))
	$12 = *($17)
	$4 = CALL db_store_i64(*((($18 + [56]) + [8])), (int_64)-3104856670496604160, $11, $12, ($18 + [368]), [32])
	*($17 + [36]) = $4
	$10 = (($18 + [56]) + [16])
	if ( (uint_64)($12 <= *($10)) ){ goto $label$71 }
	*($10) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$71
	*($18 + [432]) = $17
	$12 = *($17)
	*($18 + [368]) = $12
	*($18 + [408]) = $4
	$5 = ($18 + [84])
	$10 = *($5)
	if ( ((uint_32)$10 >= (uint_32)*(($18 + [88]))) ){ goto $label$68 }
	*($10 + [8]) = $12
	*($10 + [16]) = $4
	*($18 + [432]) = [0]
	*($10) = $17
	*($5) = ($10 + [24])
	goto $label$67 
	
.LABEL $label$69
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)($18 + [56])), [2784])
	CALL eosio_assert(((int_64)*($18 + [56]) == (int_64)CALL $fimport$14()), [2832])
	*($17 + [16]) = (int_64)2
	*($17 + [8]) = *($18 + [144])
	$12 = *($17)
	*($17 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$12 == (int_64)*($17)), [2896])
	*($18 + [416]) = (($18 + [368]) + [32])
	*($18 + [412]) = ($18 + [368])
	*($18 + [408]) = ($18 + [368])
	*($18 + [32]) = ($18 + [408])
	*($18 + [436]) = ($17 + [8])
	*($18 + [432]) = $17
	*($18 + [440]) = ($17 + [16])
	*($18 + [444]) = ($17 + [24])
	CALL $125(($18 + [432]), ($18 + [32]))
	CALL db_update_i64(*($17 + [36]), (int_64)0, ($18 + [368]), [32])
	$17 = (($18 + [56]) + [16])
	if ( (uint_64)($12 <= *($17)) ){ goto $label$63 }
	*($17) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	goto $label$63 
	
.LABEL $label$68
	CALL $126(($18 + [80]), ($18 + [432]), ($18 + [368]), ($18 + [408]))
	
.LABEL $label$67
	$17 = *($18 + [432])
	*($18 + [432]) = [0]
	if ( ($17 == 0) ){ goto $label$63 }
	CALL $204($17)
	goto $label$63 
	
.LABEL $label$66
	CALL eosio_assert([0], [4208])
	goto $label$63 
	
.LABEL $label$65
	$10 = [0]
	
.LABEL $label$64
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [4096])
	CALL eosio_assert(((int_64)*($10 + [120]) == (int_64)2), [4128])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)$1), [4160])
	CALL _ZNSt3__19to_stringEy(($18 + [368]), *($10 + [32]))
	$4 = CALL $211(($18 + [368]), [0], [4176])
	$9 = ($4 + [8])
	*((($18 + [32]) + [8])) = *($9)
	*($18 + [32]) = *($4)
	*($4) = [0]
	*(($4 + [4])) = [0]
	*($9) = [0]
	if ( ((*($18 + [368]) & [1]) == 0) ){ goto $label$72 }
	CALL $204(*($18 + [376]))
	
.LABEL $label$72
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, *(($10 + [8])), ($10 + [40]), ($18 + [32]), *(($10 + [32])), (int_64)0)
	*($18 + [368]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $5))
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [3456])
	CALL $123(($18 + [368]))
	CALL $124(*($18 + [48]), $10)
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($17 + [32]) == (int_32)($18 + [56])), [2784])
	CALL eosio_assert(((int_64)*($18 + [56]) == (int_64)CALL $fimport$14()), [2832])
	*($17 + [16]) = (int_64)2
	*($17 + [8]) = *($18 + [144])
	$12 = *($17)
	*($17 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$12 == (int_64)*($17)), [2896])
	*($18 + [416]) = (($18 + [368]) + [32])
	*($18 + [412]) = ($18 + [368])
	*($18 + [408]) = ($18 + [368])
	*($18 + [424]) = ($18 + [408])
	*($18 + [436]) = ($17 + [8])
	*($18 + [432]) = $17
	*($18 + [440]) = ($17 + [16])
	*($18 + [444]) = ($17 + [24])
	CALL $125(($18 + [432]), ($18 + [424]))
	CALL db_update_i64(*($17 + [36]), (int_64)0, ($18 + [368]), [32])
	$17 = (($18 + [56]) + [16])
	if ( (uint_64)($12 <= *($17)) ){ goto $label$73 }
	*($17) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$73
	if ( ((*($18 + [32]) & [1]) == 0) ){ goto $label$63 }
	CALL $204(*($18 + [40]))
	
.LABEL $label$63
	*($18 + [368]) = (int_64)0
	*($18 + [376]) = *(($3 + [8]))
	CALL eosio_assert([1], [3056])
	$12 = (uint_64)*($18 + [376]) >> (uint_64)(int_64)8)
	$17 = [0]
	
.LOOP $label$76:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$75 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$77 }
	
.LOOP $label$78:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$75 }
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$78 }
	
.LABEL $label$77
	$10 = [1]
	$17 = ($17 + [1])
	if ( ((int_32)$17 < (int_32)[7]) ){ goto $label$76 }
	goto $label$74 
	
.LABEL $label$75
	$10 = [0]
	
.LABEL $label$74
	CALL eosio_assert($10, [3120])
	*(($18 + [440])) = [0]
	*($18 + [432]) = (int_64)0
	$17 = CALL strlen([4224])
	if ( ((uint_32)$17 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$17 >= (uint_32)[11]) ){ goto $label$81 }
	*($18 + [432]) = ($17 << [1])
	$10 = (($18 + [432]) | [1])
	if ( $17 ){ goto $label$80 }
	goto $label$79 
	
.LABEL $label$81
	$4 = (($17 + [16]) & [-16])
	$10 = CALL $203($4)
	*($18 + [432]) = ($4 | [1])
	*($18 + [440]) = $10
	*($18 + [436]) = $17
	
.LABEL $label$80
	CALL memcpy($10, [4224], $17)
	
.LABEL $label$79
	*(($10 + $17)) = [0]
	$12 = *($18 + [144])
	CALL $220(($18 + [16]), ($18 + [256]))
	CALL $220($18, ($18 + [432]))
	CALL _ZN11dbetonedice8dbetdice6recordEyyyyRKN5eosio5assetES4_NSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEESB_yyy($0, $1, $16, $7, $12, $3, ($18 + [368]), ($18 + [16]), $18, $6, (int_64)2, (int_64)1)
	if ( ((*($18) & [1]) == 0) ){ goto $label$82 }
	CALL $204(*($18 + [8]))
	
.LABEL $label$82
	if ( ((*($18 + [16]) & [1]) == 0) ){ goto $label$83 }
	CALL $204(*($18 + [24]))
	
.LABEL $label$83
	if ( ((*($18 + [432]) & [1]) == 0) ){ goto $label$84 }
	CALL $204(*($18 + [440]))
	
.LABEL $label$84
	$4 = *($18 + [80])
	if ( ($4 == 0) ){ goto $label$85 }
	$5 = ($18 + [84])
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$87 }
	
.LOOP $label$88:
	$17 = ($17 + [-24])
	$10 = *($17)
	*($17) = [0]
	if ( ($10 == 0) ){ goto $label$89 }
	CALL $204($10)
	
.LABEL $label$89
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$88 }
	$17 = *(($18 + [80]))
	goto $label$86 
	
.LABEL $label$87
	$17 = $4
	
.LABEL $label$86
	*($5) = $4
	CALL $204($17)
	
.LABEL $label$85
	$5 = *($18 + [128])
	if ( ($5 == 0) ){ goto $label$90 }
	$9 = ($18 + [132])
	$17 = *($9)
	if ( ((int_32)$17 == (int_32)$5) ){ goto $label$92 }
	
.LOOP $label$93:
	$17 = ($17 + [-24])
	$10 = *($17)
	*($17) = [0]
	if ( ($10 == 0) ){ goto $label$94 }
	$4 = *($10 + [48])
	if ( ($4 == 0) ){ goto $label$95 }
	*(($10 + [52])) = $4
	CALL $204($4)
	
.LABEL $label$95
	CALL $204($10)
	
.LABEL $label$94
	if ( ((int_32)$5 != (int_32)$17) ){ goto $label$93 }
	$17 = *(($18 + [128]))
	goto $label$91 
	
.LABEL $label$92
	$17 = $5
	
.LABEL $label$91
	*($9) = $5
	CALL $204($17)
	
.LABEL $label$90
	$4 = *($18 + [176])
	if ( ($4 == 0) ){ goto $label$26 }
	$5 = ($18 + [180])
	$17 = *($5)
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$97 }
	
.LOOP $label$98:
	$17 = ($17 + [-24])
	$10 = *($17)
	*($17) = [0]
	if ( ($10 == 0) ){ goto $label$99 }
	CALL $204($10)
	
.LABEL $label$99
	if ( ((int_32)$4 != (int_32)$17) ){ goto $label$98 }
	$17 = *(($18 + [176]))
	goto $label$96 
	
.LABEL $label$97
	$17 = $4
	
.LABEL $label$96
	*($5) = $4
	CALL $204($17)
	
.LABEL $label$26
	if ( ((*($18 + [256]) & [1]) == 0) ){ goto $label$100 }
	CALL $204(*($18 + [264]))
	
.LABEL $label$100
	if ( ((*($18 + [272]) & [1]) == 0) ){ goto $label$101 }
	CALL $204(*($18 + [280]))
	
.LABEL $label$101
	if ( ((*($18 + [288]) & [1]) == 0) ){ goto $label$102 }
	CALL $204(*($18 + [296]))
	
.LABEL $label$102
	if ( ((*($18 + [304]) & [1]) == 0) ){ goto $label$103 }
	CALL $204(*($18 + [312]))
	
.LABEL $label$103
	if ( ((*($18 + [320]) & [1]) == 0) ){ goto $label$104 }
	CALL $204(*($18 + [328]))
	
.LABEL $label$104
	if ( ((*($18 + [336]) & [1]) == 0) ){ goto $label$105 }
	CALL $204(*($18 + [344]))
	
.LABEL $label$105
	$4 = *($18 + [352])
	
.LABEL $label$13
	if ( ($4 == 0) ){ goto $label$106 }
	$17 = *($18 + [356])
	if ( ((int_32)$17 == (int_32)$4) ){ goto $label$108 }
	$10 = ([0] - $4)
	$17 = ($17 + [-12])
	
.LOOP $label$109:
	if ( ((*($17) & [1]) == 0) ){ goto $label$110 }
	CALL $204(*(($17 + [8])))
	
.LABEL $label$110
	$17 = ($17 + [-12])
	if ( ((int_32)($17 + $10) != (int_32)[-12]) ){ goto $label$109 }
	$17 = *($18 + [352])
	goto $label$107 
	
.LABEL $label$108
	$17 = $4
	
.LABEL $label$107
	*($18 + [356]) = $4
	CALL $204($17)
	
.LABEL $label$106
	*([0] + [4]) = ($18 + [448])
	return (unreachable)
	
.LABEL $label$8
	CALL $205(($18 + [152]))
	
.LABEL $label$7
	CALL $205(($18 + [432]))
	(unreachable)
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $203([104])
	$4 = CALL $142($6)
	*($6 + [88]) = $0
	CALL $143(($8 + [32]), $4)
	*($6 + [92]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [92])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $144(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [2704])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [2704])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [2704])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $84(CALL $83($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [2704])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [2704])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $84($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [2704])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [2704])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [2704])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [2704])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [2704])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($7 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$5 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($1)
	*($8 + [16]) = *($1 + [16])
	*(($8 + [8])) = *(($1 + [8]))
	$7 = ($1 + [20])
	*(($8 + [20])) = *($7)
	*($7) = [0]
	$7 = ($1 + [24])
	$3 = *($7)
	*($7) = [0]
	*(($8 + [24])) = $3
	*($1 + [16]) = [0]
	*($8 + [28]) = *($1 + [28])
	$7 = ($1 + [32])
	*(($8 + [32])) = *($7)
	$3 = ($1 + [36])
	$4 = *($3)
	*($3) = [0]
	*(($8 + [36])) = $4
	*($7) = [0]
	*($1 + [28]) = [0]
	$4 = ($6 + ((int_32)$5 * (int_32)[40]))
	$2 = ($8 + [40])
	$1 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$6 }
	$3 = ([0] - $1)
	$1 = ($5 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($5 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($1 + [-4])
	*($5) = *($7)
	*(($8 + [-20])) = *($1)
	$5 = ($1 + [4])
	*($6) = *($5)
	*($5) = [0]
	*(($5 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($1 + [8])
	*($5) = *($7)
	*(($8 + [-8])) = *(($1 + [12]))
	$5 = ($1 + [16])
	*($6) = *($5)
	*($5) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$1 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $1
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $2
	*(($0 + [8])) = $4
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$8 }
	$5 = ([0] - $6)
	$8 = ($1 + [-24])
	
.LOOP $label$9:
	$1 = *(($8 + [12]))
	if ( ($1 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $1
	CALL $204($1)
	
.LABEL $label$10
	$1 = *($8)
	if ( ($1 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $1
	CALL $204($1)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $204($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $111 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $112($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $58($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $113($4, $1)
	CALL $115(CALL $114(CALL $114($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $203([72])) + [24]) = (int_64)0
	*($6 + [16]) = [0]
	*($6 + [32]) = (int_64)0
	*($6 + [40]) = (int_64)0
	*($6 + [48 align=4]) = (int_64)0
	*($6 + [56]) = [0]
	*($6 + [60]) = $0
	CALL $138(($8 + [32]), $6)
	*($6 + [64]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [64])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $139(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [48])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [52])) = $7
	CALL $204($7)
	
.LABEL $label$10
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN11dbetonedice14quantity_judgeERKN5eosio5assetEy (int_32 $0, int_64 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$3 = *($0 + [8])
	if ( ((int_64)$3 != (int_64)1397703940) ){ goto $label$9 }
	$2 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) * (float_64)(float_64)1e3))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	if ( ((int_64)$3 != (int_64)5461508) ){ goto $label$6 }
	$2 = ((int_64)$1 * (int_64)1000000)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$3 = (int_64)21334
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$4 
	
.LABEL $label$8
	$5 = [0]
	
.LABEL $label$7
	CALL eosio_assert($5, [3120])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)1397703940), [4416])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [4480])
	$1 = ((int_64)$1 * (int_64)500000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$5 = [0]
	
.LABEL $label$16
	CALL eosio_assert($5, [3120])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)1397703940), [4416])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [4528])
	return 
	
.LABEL $label$6
	if ( ((int_64)$3 != (int_64)293455873288) ){ goto $label$3 }
	$2 = (Rounds 0)(((float_64)(CASTING float_64)(uint_64 $1) * (float_64)(float_64)1e7))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$3 = (int_64)1146312005
	$4 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	CALL eosio_assert($5, [3120])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)5461508), [4416])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [4576])
	$1 = ((int_64)$1 * (int_64)100000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$3 = (int_64)21334
	$4 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	
.LOOP $label$28:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$28 }
	
.LABEL $label$27
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	$5 = [0]
	
.LABEL $label$24
	CALL eosio_assert($5, [3120])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)5461508), [4416])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [4624])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [2656])
	return 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [3120])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)293455873288), [4416])
	CALL eosio_assert(((int_64)*($0) >= (int_64)$2), [4672])
	$1 = ((int_64)$1 * (int_64)10000000000)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [3056])
	$3 = (int_64)1146312005
	$4 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	$5 = [0]
	
.LABEL $label$29
	CALL eosio_assert($5, [3120])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)293455873288), [4416])
	CALL eosio_assert(((int_64)*($0) <= (int_64)$1), [4720])
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [80])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [48])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $64(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $65(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $204(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [80])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [48])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $64(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $66(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $204(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_64 .FUNC _ZN11dbetonedice13openroll_args8get_nameEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [512]
	$4 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$3 > (uint_64)(int_64)7) ){ goto $label$6 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$0 = ($0 + [165])
	goto $label$4 
	
.LABEL $label$6
	$5 = (int_64)0
	if ( ((uint_64)$3 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$5 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$5 = ((int_64)((int_64)$5 & (int_64)31) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

int_64 .FUNC _ZN11dbetonedice13transfer_args11get_accountEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [496]
	$4 = (int_64)0
	
.LOOP $label$1:
	$5 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$2 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$0 = ($0 + [165])
	goto $label$3 
	
.LABEL $label$4
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($0 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

void .FUNC _ZN11dbetonedice16_generateRandNumEyPhi (int_64 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	*($4 + [88]) = ((int_64)((int_64)((int_64)((int_64)(uint_64)$0 >> (uint_64)(int_64)20) & (int_64)16777215) * (int_64)((int_64)$0 & (int_64)1048575)) + (int_64)(uint_64)$0 >> (uint_64)(int_64)38)) + (int_64)(CASTING int_64)(int_32 ((int_32)CALL tapos_block_num() * (int_32)CALL $fimport$43())))
	CALL sha512(($4 + [88]), [4], ($4 + [96]))
	if ( ((int_32)$2 > (int_32)[64]) ){ goto $label$2 }
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$1 }
	$3 = ($4 + [96])
	
.LOOP $label$3:
	*($1) = *($3)
	$3 = ($3 + [1])
	$1 = ($1 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$2 > (int_32)[128]) ){ goto $label$1 }
	*($4 + [8]) = ((int_64)*($4 + [88]) + (int_64)512)
	CALL sha512(($4 + [8]), [4], ($4 + [16]))
	$3 = [0]
	
.LOOP $label$4:
	*(($1 + $3)) = *((($4 + [96]) + $3))
	$3 = ($3 + [1])
	if ( ((int_32)$3 != (int_32)[64]) ){ goto $label$4 }
	if ( ((int_32)$2 < (int_32)[65]) ){ goto $label$1 }
	$2 = ($2 + [-64])
	$1 = ($1 + [64])
	$3 = ($4 + [16])
	
.LOOP $label$5:
	*($1) = *($3)
	$3 = ($3 + [1])
	$1 = ($1 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
}

int_64 .FUNC _ZN11dbetonedice13openroll_args11get_accountEv ()
{
	int_32 $0
	int_32 $1
	int_64 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$3 = (int_64)0
	$2 = (int_64)59
	$1 = [496]
	$4 = (int_64)0
	
.LOOP $label$1:
	$5 = (int_64)0
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$2 }
	$0 = *($1)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$0 = ($0 + [165])
	goto $label$3 
	
.LABEL $label$4
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($0 & [31])) << (int_64)((int_64)$2 & (int_64)4294967295))
	
.LABEL $label$2
	$1 = ($1 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$4 = ((int_64)$5 | (int_64)$4)
	$2 = ((int_64)$2 + (int_64)-5)
	if ( ((int_64)$2 != (int_64)-6) ){ goto $label$1 }
	return $4
}

int_32 .FUNC $25 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	*($0 + [8]) = $1
	*($0) = $1
	*(($0 + [16])) = $1
	*(($0 + [24])) = (int_64)-1
	*(($0 + [32])) = (int_64)0
	$3 = [0]
	*(($0 + [40])) = [0]
	*(($0 + [44])) = [0]
	*($0 + [48]) = $1
	*(($0 + [56])) = $1
	*(($0 + [64])) = (int_64)-1
	*(($0 + [72])) = [0]
	*(($0 + [76])) = [0]
	*(($0 + [80])) = [0]
	*(($0 + [84])) = [0]
	*($0 + [88]) = $1
	*(($0 + [96])) = $1
	*(($0 + [104])) = (int_64)-1
	*(($0 + [112])) = [0]
	*(($0 + [116])) = [0]
	*(($0 + [120])) = [0]
	*(($0 + [124])) = [0]
	*($0 + [128]) = $1
	*(($0 + [136])) = $1
	*(($0 + [144])) = (int_64)-1
	*(($0 + [152])) = [0]
	*(($0 + [156])) = [0]
	*(($0 + [160])) = [0]
	*(($2 = ($0 + [172]))) = [0]
	*(($4 = ($0 + [176]))) = [0]
	*($0 + [168]) = $2
	$8 = [2064]
	$7 = ($0 + [168])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$2 }
	$11 = [24]
	goto $label$1 
	
.LABEL $label$2
	$11 = [3]
	
.LABEL $label$1
	
.LOOP $label$3:
	goto $label$93 
	
.LABEL $label$115
	$3 = *(($0 + [172]))
	if ( ((int_32)*($7) == (int_32)$2) ){ goto $label$52 }
	$11 = [3]
	goto $label$3 
	
.LABEL $label$114
	$9 = $3
	if ( ($3 == 0) ){ goto $label$34 }
	$11 = [4]
	goto $label$3 
	
.LABEL $label$113
	$10 = $9
	$9 = *($10 + [4])
	if ( $9 ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$112
	$10 = $2
	if ( $3 ){ goto $label$24 }
	goto $label$25 
	
.LABEL $label$111
	$9 = $2
	$11 = [23]
	goto $label$3 
	
.LABEL $label$110
	$10 = *($9 + [8])
	$5 = ((int_32)*($10) == (int_32)$9)
	$9 = $10
	if ( $5 ){ goto $label$33 }
	$11 = [5]
	goto $label$3 
	
.LABEL $label$109
	$9 = *($8)
	if ( ((int_32)*($10 + [16]) >= (int_32)$9) ){ goto $label$32 }
	$11 = [20]
	goto $label$3 
	
.LABEL $label$108
	if ( ($3 == 0) ){ goto $label$51 }
	$11 = [21]
	goto $label$3 
	
.LABEL $label$107
	$3 = ($10 + [4])
	if ( *($3) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$106
	if ( ($3 == 0) ){ goto $label$48 }
	$11 = [7]
	goto $label$3 
	
.LABEL $label$105
	$5 = $2
	goto $label$31 
	
.LABEL $label$104
	$5 = $3
	$3 = $10
	$11 = [8]
	goto $label$3 
	
.LABEL $label$103
	$10 = *($3 + [16])
	if ( ((int_32)$9 >= (int_32)$10) ){ goto $label$30 }
	$11 = [18]
	goto $label$3 
	
.LABEL $label$102
	$10 = *($3)
	if ( $10 ){ goto $label$40 }
	goto $label$41 
	
.LABEL $label$101
	if ( ((int_32)$10 >= (int_32)$9) ){ goto $label$29 }
	$11 = [14]
	goto $label$3 
	
.LABEL $label$100
	$5 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$27 }
	$11 = [15]
	goto $label$3 
	
.LABEL $label$99
	$3 = $5
	goto $label$26 
	
.LABEL $label$98
	$10 = $2
	$3 = $2
	if ( *($3) ){ goto $label$39 }
	$11 = [11]
	goto $label$3 
	
.LABEL $label$97
	$9 = CALL $203([32])
	$1 = *(($8 + [8]))
	$6 = *($8)
	*($9) = (int_64)0
	*(($9 + [24])) = $1
	*($9 + [16]) = $6
	*($9 + [8]) = $10
	*($3) = $9
	$10 = *(*($7))
	if ( ($10 == 0) ){ goto $label$28 }
	$11 = [12]
	goto $label$3 
	
.LABEL $label$96
	*($7) = $10
	$9 = *($3)
	$11 = [13]
	goto $label$3 
	
.LABEL $label$95
	CALL $15(*(($0 + [172])), $9)
	*($4) = (*($4) + [1])
	$11 = [1]
	goto $label$3 
	
.LABEL $label$94
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)[2288]) ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$93
	$10 = $3
	if ( *($3) ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$92
	$10 = $3
	$3 = $5
	if ( *($3) ){ goto $label$46 }
	goto $label$47 
	
.LABEL $label$91
	$10 = $3
	$3 = $5
	if ( *($3) ){ goto $label$44 }
	goto $label$45 
	
.LABEL $label$90
	$3 = [0]
	*(($4 = ($0 + [188]))) = [0]
	*(($2 = ($0 + [184]))) = [0]
	*($0 + [180]) = $2
	$8 = [2288]
	$7 = ($0 + [180])
	if ( ((int_32)$2 != (int_32)$2) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$89
	$3 = *(($0 + [184]))
	if ( ((int_32)*($7) == (int_32)$2) ){ goto $label$63 }
	$11 = [26]
	goto $label$3 
	
.LABEL $label$88
	$9 = $3
	if ( ($3 == 0) ){ goto $label$19 }
	$11 = [27]
	goto $label$3 
	
.LABEL $label$87
	$10 = $9
	$9 = *($10 + [4])
	if ( $9 ){ goto $label$20 }
	goto $label$21 
	
.LABEL $label$86
	$10 = $2
	if ( $3 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$85
	$9 = $2
	$11 = [51]
	goto $label$3 
	
.LABEL $label$84
	$10 = *($9 + [8])
	$5 = ((int_32)*($10) == (int_32)$9)
	$9 = $10
	if ( $5 ){ goto $label$18 }
	$11 = [28]
	goto $label$3 
	
.LABEL $label$83
	$9 = *($8)
	if ( ((int_32)*($10 + [16]) >= (int_32)$9) ){ goto $label$17 }
	$11 = [49]
	goto $label$3 
	
.LABEL $label$82
	if ( ($3 == 0) ){ goto $label$62 }
	$11 = [37]
	goto $label$3 
	
.LABEL $label$81
	$3 = ($10 + [4])
	if ( *($3) ){ goto $label$60 }
	goto $label$61 
	
.LABEL $label$80
	if ( ($3 == 0) ){ goto $label$59 }
	$11 = [30]
	goto $label$3 
	
.LABEL $label$79
	$5 = $2
	goto $label$16 
	
.LABEL $label$78
	$5 = $3
	$3 = $10
	$11 = [31]
	goto $label$3 
	
.LABEL $label$77
	$10 = *($3 + [16])
	if ( ((int_32)$9 >= (int_32)$10) ){ goto $label$15 }
	$11 = [47]
	goto $label$3 
	
.LABEL $label$76
	$10 = *($3)
	if ( $10 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$75
	if ( ((int_32)$10 >= (int_32)$9) ){ goto $label$14 }
	$11 = [43]
	goto $label$3 
	
.LABEL $label$74
	$5 = ($3 + [4])
	$10 = *($3 + [4])
	if ( ($10 == 0) ){ goto $label$7 }
	$11 = [44]
	goto $label$3 
	
.LABEL $label$73
	$3 = $5
	goto $label$4 
	
.LABEL $label$72
	$10 = $2
	$3 = $2
	if ( *($3) ){ goto $label$13 }
	$11 = [38]
	goto $label$3 
	
.LABEL $label$71
	$9 = CALL $203([32])
	$1 = *(($8 + [8]))
	$6 = *($8)
	*($9) = (int_64)0
	*(($9 + [24])) = $1
	*($9 + [16]) = $6
	*($9 + [8]) = $10
	*($3) = $9
	$10 = *(*($7))
	if ( ($10 == 0) ){ goto $label$8 }
	$11 = [39]
	goto $label$3 
	
.LABEL $label$70
	*($7) = $10
	$9 = *($3)
	$11 = [40]
	goto $label$3 
	
.LABEL $label$69
	CALL $15(*(($0 + [184])), $9)
	*($4) = (*($4) + [1])
	$11 = [34]
	goto $label$3 
	
.LABEL $label$68
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)[2416]) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$67
	$10 = $3
	if ( *($3) ){ goto $label$53 }
	goto $label$54 
	
.LABEL $label$66
	$10 = $3
	$3 = $5
	if ( *($3) ){ goto $label$57 }
	goto $label$58 
	
.LABEL $label$65
	$10 = $3
	$3 = $5
	if ( *($3) ){ goto $label$55 }
	goto $label$56 
	
.LABEL $label$64
	return $0
	
.LABEL $label$63
	$11 = [36]
	goto $label$3 
	
.LABEL $label$62
	$11 = [41]
	goto $label$3 
	
.LABEL $label$61
	$11 = [38]
	goto $label$3 
	
.LABEL $label$60
	$11 = [34]
	goto $label$3 
	
.LABEL $label$59
	$11 = [41]
	goto $label$3 
	
.LABEL $label$58
	$11 = [38]
	goto $label$3 
	
.LABEL $label$57
	$11 = [34]
	goto $label$3 
	
.LABEL $label$56
	$11 = [38]
	goto $label$3 
	
.LABEL $label$55
	$11 = [34]
	goto $label$3 
	
.LABEL $label$54
	$11 = [38]
	goto $label$3 
	
.LABEL $label$53
	$11 = [34]
	goto $label$3 
	
.LABEL $label$52
	$11 = [24]
	goto $label$3 
	
.LABEL $label$51
	$11 = [19]
	goto $label$3 
	
.LABEL $label$50
	$11 = [11]
	goto $label$3 
	
.LABEL $label$49
	$11 = [1]
	goto $label$3 
	
.LABEL $label$48
	$11 = [19]
	goto $label$3 
	
.LABEL $label$47
	$11 = [11]
	goto $label$3 
	
.LABEL $label$46
	$11 = [1]
	goto $label$3 
	
.LABEL $label$45
	$11 = [11]
	goto $label$3 
	
.LABEL $label$44
	$11 = [1]
	goto $label$3 
	
.LABEL $label$43
	$11 = [11]
	goto $label$3 
	
.LABEL $label$42
	$11 = [1]
	goto $label$3 
	
.LABEL $label$41
	$11 = [0]
	goto $label$3 
	
.LABEL $label$40
	$11 = [16]
	goto $label$3 
	
.LABEL $label$39
	$11 = [1]
	goto $label$3 
	
.LABEL $label$38
	$11 = [25]
	goto $label$3 
	
.LABEL $label$37
	$11 = [2]
	goto $label$3 
	
.LABEL $label$36
	$11 = [5]
	goto $label$3 
	
.LABEL $label$35
	$11 = [4]
	goto $label$3 
	
.LABEL $label$34
	$11 = [22]
	goto $label$3 
	
.LABEL $label$33
	$11 = [23]
	goto $label$3 
	
.LABEL $label$32
	$11 = [6]
	goto $label$3 
	
.LABEL $label$31
	$11 = [8]
	goto $label$3 
	
.LABEL $label$30
	$11 = [9]
	goto $label$3 
	
.LABEL $label$29
	$11 = [10]
	goto $label$3 
	
.LABEL $label$28
	$11 = [13]
	goto $label$3 
	
.LABEL $label$27
	$11 = [17]
	goto $label$3 
	
.LABEL $label$26
	$11 = [16]
	goto $label$3 
	
.LABEL $label$25
	$11 = [19]
	goto $label$3 
	
.LABEL $label$24
	$11 = [21]
	goto $label$3 
	
.LABEL $label$23
	$11 = [36]
	goto $label$3 
	
.LABEL $label$22
	$11 = [26]
	goto $label$3 
	
.LABEL $label$21
	$11 = [28]
	goto $label$3 
	
.LABEL $label$20
	$11 = [27]
	goto $label$3 
	
.LABEL $label$19
	$11 = [50]
	goto $label$3 
	
.LABEL $label$18
	$11 = [51]
	goto $label$3 
	
.LABEL $label$17
	$11 = [29]
	goto $label$3 
	
.LABEL $label$16
	$11 = [31]
	goto $label$3 
	
.LABEL $label$15
	$11 = [32]
	goto $label$3 
	
.LABEL $label$14
	$11 = [33]
	goto $label$3 
	
.LABEL $label$13
	$11 = [34]
	goto $label$3 
	
.LABEL $label$12
	$11 = [42]
	goto $label$3 
	
.LABEL $label$11
	$11 = [35]
	goto $label$3 
	
.LABEL $label$10
	$11 = [41]
	goto $label$3 
	
.LABEL $label$9
	$11 = [37]
	goto $label$3 
	
.LABEL $label$8
	$11 = [40]
	goto $label$3 
	
.LABEL $label$7
	$11 = [46]
	goto $label$3 
	
.LABEL $label$6
	$11 = [48]
	goto $label$3 
	
.LABEL $label$5
	$11 = [45]
	goto $label$3 
	
.LABEL $label$4
	$11 = [45]
	goto $label$3 
	return $11
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [640])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [528]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [544]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [528]
	$7 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$19 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$3 = ($3 + [165])
	goto $label$17 
	
.LABEL $label$19
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$15
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$14 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [560])
	$4 = CALL $25(($9 + [448]), $0)
	CALL $26(($9 + [416]))
	CALL $71($4, ($9 + [416]))
	$3 = *($9 + [432])
	if ( ($3 == 0) ){ goto $label$20 }
	*(($9 + [436])) = $3
	CALL $204($3)
	
.LABEL $label$20
	CALL $27($4)
	
.LABEL $label$7
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [624]
	$7 = (int_64)0
	
.LOOP $label$21:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$26 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$3 = ($3 + [165])
	goto $label$24 
	
.LABEL $label$26
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$25
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$23
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$22
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$21 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$30 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [640]
	$7 = (int_64)0
	
.LOOP $label$31:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$32 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$32
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$31 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$30 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [656]
	$7 = (int_64)0
	
.LOOP $label$35:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$36 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$3 = ($3 + [165])
	goto $label$37 
	
.LABEL $label$38
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$36
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$35 }
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$30 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [672]
	$7 = (int_64)0
	
.LOOP $label$39:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$40 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$3 = ($3 + [165])
	goto $label$41 
	
.LABEL $label$42
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$40
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$39 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$29 }
	
.LABEL $label$30
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [688]
	$7 = (int_64)0
	
.LOOP $label$43:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$48 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$3 = ($3 + [165])
	goto $label$46 
	
.LABEL $label$48
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$45 }
	goto $label$44 
	
.LABEL $label$47
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$45
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$44
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$43 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	
.LABEL $label$29
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$27 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [704]
	$7 = (int_64)0
	
.LOOP $label$49:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$54 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$53 }
	$3 = ($3 + [165])
	goto $label$52 
	
.LABEL $label$54
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$51 }
	goto $label$50 
	
.LABEL $label$53
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$52
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$51
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$50
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$49 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [480]
	$7 = (int_64)0
	
.LOOP $label$55:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$60 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$59 }
	$3 = ($3 + [165])
	goto $label$58 
	
.LABEL $label$60
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$57 }
	goto $label$56 
	
.LABEL $label$59
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$58
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$57
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$56
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$55 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [720]
	$7 = (int_64)0
	
.LOOP $label$61:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$66 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$65 }
	$3 = ($3 + [165])
	goto $label$64 
	
.LABEL $label$66
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$65
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$64
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$63
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$62
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$61 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [736]
	$7 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$72 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$3 = ($3 + [165])
	goto $label$70 
	
.LABEL $label$72
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$68
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$67 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [512]
	$7 = (int_64)0
	
.LOOP $label$73:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$78 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$77 }
	$3 = ($3 + [165])
	goto $label$76 
	
.LABEL $label$78
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$77
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$76
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$75
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$74
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$73 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [752]
	$7 = (int_64)0
	
.LOOP $label$79:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$84 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$83 }
	$3 = ($3 + [165])
	goto $label$82 
	
.LABEL $label$84
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$83
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$82
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$81
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$80
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$79 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [768]
	$7 = (int_64)0
	
.LOOP $label$85:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$90 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$89 }
	$3 = ($3 + [165])
	goto $label$88 
	
.LABEL $label$90
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$89
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$88
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$87
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$86
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$85 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [784]
	$7 = (int_64)0
	
.LOOP $label$91:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$96 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$95 }
	$3 = ($3 + [165])
	goto $label$94 
	
.LABEL $label$96
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$95
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$94
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$93
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$92
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$91 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [800]
	$7 = (int_64)0
	
.LOOP $label$97:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$102 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$101 }
	$3 = ($3 + [165])
	goto $label$100 
	
.LABEL $label$102
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$99 }
	goto $label$98 
	
.LABEL $label$101
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$100
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$99
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$98
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$97 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [816]
	$7 = (int_64)0
	
.LOOP $label$103:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$108 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$107 }
	$3 = ($3 + [165])
	goto $label$106 
	
.LABEL $label$108
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$105 }
	goto $label$104 
	
.LABEL $label$107
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$106
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$105
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$104
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$103 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [832]
	$7 = (int_64)0
	
.LOOP $label$109:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$114 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$113 }
	$3 = ($3 + [165])
	goto $label$112 
	
.LABEL $label$114
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$113
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$112
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$111
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$110
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$109 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [848]
	$7 = (int_64)0
	
.LOOP $label$115:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$116 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$118 }
	$3 = ($3 + [165])
	goto $label$117 
	
.LABEL $label$118
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$117
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$116
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$115 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [864]
	$7 = (int_64)0
	
.LOOP $label$119:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$124 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$3 = ($3 + [165])
	goto $label$122 
	
.LABEL $label$124
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$123
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$121
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$120
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$119 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [880]
	$7 = (int_64)0
	
.LOOP $label$125:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$130 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$129 }
	$3 = ($3 + [165])
	goto $label$128 
	
.LABEL $label$130
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$129
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$128
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$127
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$126
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$125 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [896]
	$7 = (int_64)0
	
.LOOP $label$131:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$136 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$135 }
	$3 = ($3 + [165])
	goto $label$134 
	
.LABEL $label$136
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$133 }
	goto $label$132 
	
.LABEL $label$135
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$134
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$133
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$132
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$131 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [912]
	$7 = (int_64)0
	
.LOOP $label$137:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$142 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$141 }
	$3 = ($3 + [165])
	goto $label$140 
	
.LABEL $label$142
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$141
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$140
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$139
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$138
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$137 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [928]
	$7 = (int_64)0
	
.LOOP $label$143:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$148 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$147 }
	$3 = ($3 + [165])
	goto $label$146 
	
.LABEL $label$148
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$145 }
	goto $label$144 
	
.LABEL $label$147
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$146
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$145
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$144
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$143 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [944]
	$7 = (int_64)0
	
.LOOP $label$149:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$154 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$153 }
	$3 = ($3 + [165])
	goto $label$152 
	
.LABEL $label$154
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$151 }
	goto $label$150 
	
.LABEL $label$153
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$152
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$151
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$150
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$149 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [960]
	$7 = (int_64)0
	
.LOOP $label$155:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$160 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$159 }
	$3 = ($3 + [165])
	goto $label$158 
	
.LABEL $label$160
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$157 }
	goto $label$156 
	
.LABEL $label$159
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$158
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$157
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$156
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$155 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [976]
	$7 = (int_64)0
	
.LOOP $label$161:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$166 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$165 }
	$3 = ($3 + [165])
	goto $label$164 
	
.LABEL $label$166
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$163 }
	goto $label$162 
	
.LABEL $label$165
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$164
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$163
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$162
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$161 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [992]
	$7 = (int_64)0
	
.LOOP $label$167:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$172 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$171 }
	$3 = ($3 + [165])
	goto $label$170 
	
.LABEL $label$172
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$171
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$170
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$169
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$168
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$167 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1008]
	$7 = (int_64)0
	
.LOOP $label$173:
	if ( ((uint_64)$6 > (uint_64)(int_64)9) ){ goto $label$178 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$177 }
	$3 = ($3 + [165])
	goto $label$176 
	
.LABEL $label$178
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$175 }
	goto $label$174 
	
.LABEL $label$177
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$176
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$175
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$174
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$173 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1024]
	$7 = (int_64)0
	
.LOOP $label$179:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$184 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$183 }
	$3 = ($3 + [165])
	goto $label$182 
	
.LABEL $label$184
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$181 }
	goto $label$180 
	
.LABEL $label$183
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$182
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$181
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$180
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$179 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1040]
	$7 = (int_64)0
	
.LOOP $label$185:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$190 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$189 }
	$3 = ($3 + [165])
	goto $label$188 
	
.LABEL $label$190
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$187 }
	goto $label$186 
	
.LABEL $label$189
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$188
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$187
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$186
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$185 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$28 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1056]
	$7 = (int_64)0
	
.LOOP $label$191:
	if ( ((uint_64)$6 > (uint_64)(int_64)8) ){ goto $label$196 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$195 }
	$3 = ($3 + [165])
	goto $label$194 
	
.LABEL $label$196
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$193 }
	goto $label$192 
	
.LABEL $label$195
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$194
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$193
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$192
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$191 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$27 }
	
.LABEL $label$28
	$4 = CALL $25(($9 + [448]), $0)
	if ( ((int_64)$2 > (int_64)4923678652714070527) ){ goto $label$222 }
	if ( ((int_64)$2 <= (int_64)3617124542901649407) ){ goto $label$221 }
	if ( ((int_64)$2 <= (int_64)3779271916414566399) ){ goto $label$219 }
	if ( ((int_64)$2 > (int_64)4923678490122780671) ){ goto $label$215 }
	if ( ((int_64)$2 == (int_64)3779271916414566400) ){ goto $label$213 }
	if ( ((int_64)$2 != (int_64)4851652562112217088) ){ goto $label$197 }
	*($9 + [212]) = [0]
	*($9 + [208]) = [1]
	*($9 + [200 align=4]) = *($9 + [208])
	CALL $31($4, ($9 + [200]))
	goto $label$197 
	
.LABEL $label$222
	if ( ((int_64)$2 <= (int_64)5392916772089520639) ){ goto $label$220 }
	if ( ((int_64)$2 <= (int_64)5606361048706334719) ){ goto $label$218 }
	if ( ((int_64)$2 > (int_64)8426984654066789887) ){ goto $label$214 }
	if ( ((int_64)$2 == (int_64)5606361048706334720) ){ goto $label$212 }
	if ( ((int_64)$2 != (int_64)8426609987135995904) ){ goto $label$197 }
	*($9 + [220]) = [0]
	*($9 + [216]) = [2]
	*($9 + [192 align=4]) = *($9 + [216])
	CALL $30($4, ($9 + [192]))
	goto $label$197 
	
.LABEL $label$221
	if ( ((int_64)$2 > (int_64)-4420682451487381873) ){ goto $label$217 }
	if ( ((int_64)$2 == (int_64)-7954134735498772480) ){ goto $label$211 }
	if ( ((int_64)$2 == (int_64)-7704929518996684800) ){ goto $label$210 }
	if ( ((int_64)$2 != (int_64)-6533249910479781888) ){ goto $label$197 }
	*($9 + [372]) = [0]
	*($9 + [368]) = [3]
	*($9 + [40 align=4]) = *($9 + [368])
	CALL $30($4, ($9 + [40]))
	goto $label$197 
	
.LABEL $label$220
	if ( ((int_64)$2 > (int_64)4923678947346654719) ){ goto $label$216 }
	if ( ((int_64)$2 == (int_64)4923678652714070528) ){ goto $label$209 }
	if ( ((int_64)$2 == (int_64)4923678674666242048) ){ goto $label$208 }
	if ( ((int_64)$2 != (int_64)4923678793119301632) ){ goto $label$197 }
	*($9 + [284]) = [0]
	*($9 + [280]) = [4]
	*($9 + [128 align=4]) = *($9 + [280])
	CALL $32($4, ($9 + [128]))
	goto $label$197 
	
.LABEL $label$219
	if ( ((int_64)$2 == (int_64)3617124542901649408) ){ goto $label$207 }
	if ( ((int_64)$2 == (int_64)3626127147771679232) ){ goto $label$206 }
	if ( ((int_64)$2 != (int_64)3779271916265144320) ){ goto $label$197 }
	*($9 + [252]) = [0]
	*($9 + [248]) = [5]
	*($9 + [160 align=4]) = *($9 + [248])
	CALL $31($4, ($9 + [160]))
	goto $label$197 
	
.LABEL $label$218
	if ( ((int_64)$2 == (int_64)5392916772089520640) ){ goto $label$205 }
	if ( ((int_64)$2 == (int_64)5396556738567356416) ){ goto $label$204 }
	if ( ((int_64)$2 != (int_64)5445040868744495104) ){ goto $label$197 }
	*($9 + [404]) = [0]
	*($9 + [400]) = [6]
	*($9 + [8 align=4]) = *($9 + [400])
	CALL $29($4, ($9 + [8]))
	goto $label$197 
	
.LABEL $label$217
	if ( ((int_64)$2 == (int_64)-4420682451487381872) ){ goto $label$203 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$202 }
	if ( ((int_64)$2 != (int_64)-3106564261919997952) ){ goto $label$197 }
	*($9 + [340]) = [0]
	*($9 + [336]) = [7]
	*($9 + [72 align=4]) = *($9 + [336])
	CALL $33($4, ($9 + [72]))
	goto $label$197 
	
.LABEL $label$216
	if ( ((int_64)$2 == (int_64)4923678947346654720) ){ goto $label$201 }
	if ( ((int_64)$2 == (int_64)5373819537648517120) ){ goto $label$200 }
	if ( ((int_64)$2 != (int_64)5391622577058496512) ){ goto $label$197 }
	*($9 + [396]) = [0]
	*($9 + [392]) = [8]
	*($9 + [16 align=4]) = *($9 + [392])
	CALL $29($4, ($9 + [16]))
	goto $label$197 
	
.LABEL $label$215
	if ( ((int_64)$2 == (int_64)4923678490122780672) ){ goto $label$199 }
	if ( ((int_64)$2 != (int_64)4923678602614013952) ){ goto $label$197 }
	*($9 + [356]) = [0]
	*($9 + [352]) = [9]
	*($9 + [56 align=4]) = *($9 + [352])
	CALL $31($4, ($9 + [56]))
	goto $label$197 
	
.LABEL $label$214
	if ( ((int_64)$2 == (int_64)8426984654066789888) ){ goto $label$198 }
	if ( ((int_64)$2 != (int_64)8426984662481141760) ){ goto $label$197 }
	*($9 + [332]) = [0]
	*($9 + [328]) = [10]
	*($9 + [80 align=4]) = *($9 + [328])
	CALL $34($4, ($9 + [80]))
	goto $label$197 
	
.LABEL $label$213
	*($9 + [244]) = [0]
	*($9 + [240]) = [11]
	*($9 + [168 align=4]) = *($9 + [240])
	CALL $43($4, ($9 + [168]))
	goto $label$197 
	
.LABEL $label$212
	*($9 + [268]) = [0]
	*($9 + [264]) = [12]
	*($9 + [144 align=4]) = *($9 + [264])
	CALL $28($4, ($9 + [144]))
	goto $label$197 
	
.LABEL $label$211
	*($9 + [348]) = [0]
	*($9 + [344]) = [13]
	*($9 + [64 align=4]) = *($9 + [344])
	CALL $32($4, ($9 + [64]))
	goto $label$197 
	
.LABEL $label$210
	*($9 + [260]) = [0]
	*($9 + [256]) = [14]
	*($9 + [152 align=4]) = *($9 + [256])
	CALL $32($4, ($9 + [152]))
	goto $label$197 
	
.LABEL $label$209
	*($9 + [292]) = [0]
	*($9 + [288]) = [15]
	*($9 + [120 align=4]) = *($9 + [288])
	CALL $32($4, ($9 + [120]))
	goto $label$197 
	
.LABEL $label$208
	*($9 + [236]) = [0]
	*($9 + [232]) = [16]
	*($9 + [176 align=4]) = *($9 + [232])
	CALL $31($4, ($9 + [176]))
	goto $label$197 
	
.LABEL $label$207
	*($9 + [300]) = [0]
	*($9 + [296]) = [17]
	*($9 + [112 align=4]) = *($9 + [296])
	CALL $39($4, ($9 + [112]))
	goto $label$197 
	
.LABEL $label$206
	*($9 + [308]) = [0]
	*($9 + [304]) = [18]
	*($9 + [104 align=4]) = *($9 + [304])
	CALL $36($4, ($9 + [104]))
	goto $label$197 
	
.LABEL $label$205
	*($9 + [388]) = [0]
	*($9 + [384]) = [19]
	*($9 + [24 align=4]) = *($9 + [384])
	CALL $29($4, ($9 + [24]))
	goto $label$197 
	
.LABEL $label$204
	*($9 + [380]) = [0]
	*($9 + [376]) = [20]
	*($9 + [32 align=4]) = *($9 + [376])
	CALL $29($4, ($9 + [32]))
	goto $label$197 
	
.LABEL $label$203
	*($9 + [316]) = [0]
	*($9 + [312]) = [21]
	*($9 + [96 align=4]) = *($9 + [312])
	CALL $36($4, ($9 + [96]))
	goto $label$197 
	
.LABEL $label$202
	*($9 + [412]) = [0]
	*($9 + [408]) = [22]
	*($9) = *($9 + [408])
	CALL $28($4, $9)
	goto $label$197 
	
.LABEL $label$201
	*($9 + [228]) = [0]
	*($9 + [224]) = [23]
	*($9 + [184 align=4]) = *($9 + [224])
	CALL $31($4, ($9 + [184]))
	goto $label$197 
	
.LABEL $label$200
	*($9 + [276]) = [0]
	*($9 + [272]) = [24]
	*($9 + [136 align=4]) = *($9 + [272])
	CALL $39($4, ($9 + [136]))
	goto $label$197 
	
.LABEL $label$199
	*($9 + [364]) = [0]
	*($9 + [360]) = [25]
	*($9 + [48 align=4]) = *($9 + [360])
	CALL $31($4, ($9 + [48]))
	goto $label$197 
	
.LABEL $label$198
	*($9 + [324]) = [0]
	*($9 + [320]) = [26]
	*($9 + [88 align=4]) = *($9 + [320])
	CALL $31($4, ($9 + [88]))
	
.LABEL $label$197
	CALL $27($4)
	
.LABEL $label$27
	*([0] + [4]) = ($9 + [640])
}

int_32 .FUNC $27 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $67(($0 + [180]), *(($0 + [184])))
	CALL $67(($0 + [168]), *(($0 + [172])))
	$1 = *(($0 + [152]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [156])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL $204($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$2 = *(($0 + [152]))
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $204($2)
	
.LABEL $label$1
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = ($0 + [116])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $204($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$9 }
	$2 = *(($0 + [112]))
	goto $label$7 
	
.LABEL $label$8
	$2 = $1
	
.LABEL $label$7
	*($3) = $1
	CALL $204($2)
	
.LABEL $label$6
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$11 }
	$3 = ($0 + [76])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$15 }
	if ( ((*($2 + [100]) & [1]) == 0) ){ goto $label$16 }
	CALL $204(*(($2 + [108])))
	
.LABEL $label$16
	if ( ((*($2 + [88]) & [1]) == 0) ){ goto $label$17 }
	CALL $204(*(($2 + [96])))
	
.LABEL $label$17
	CALL $204($2)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$14 }
	$2 = *(($0 + [72]))
	goto $label$12 
	
.LABEL $label$13
	$2 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $204($2)
	
.LABEL $label$11
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$18 }
	$3 = ($0 + [36])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$20 }
	
.LOOP $label$21:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$22 }
	if ( ((*($4 + [80]) & [1]) == 0) ){ goto $label$23 }
	CALL $204(*(($4 + [88])))
	
.LABEL $label$23
	CALL $204($4)
	
.LABEL $label$22
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$21 }
	$2 = *(($0 + [32]))
	goto $label$19 
	
.LABEL $label$20
	$2 = $1
	
.LABEL $label$19
	*($3) = $1
	CALL $204($2)
	
.LABEL $label$18
	return $0
}

void .FUNC $26 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = [0]
	*($0 + [16 align=4]) = (int_64)0
	*($3 + [8]) = ($2 + $1)
	*($3) = $2
	CALL eosio_assert(((uint_32)$1 > (uint_32)[15]), [1072])
	CALL memcpy($0, $2, [16])
	*($3 + [4]) = ($2 + [16])
	CALL $57($3, ($0 + [16]))
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $232 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [2960])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $203([48])) + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	CALL $103(($8 + [32]), ($8 + [24]))
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [36])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $104(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [24]) == (int_32)$0), [3792])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [3840])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [3904])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [3792])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [3840])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [3904])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC $105 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [3056])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [3120])
	*($0 + [24]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [2992])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [2992])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [2992])
	CALL memcpy(($0 + [16]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [28]) = *(*($2 + [8]))
	return $0
}

void .FUNC $104 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice8dicerollEyyRKN5eosio5assetENSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [192])
	*([0] + [4]) = $14
	CALL require_auth(*($0))
	$11 = CALL current_time()
	*(($14 + [156])) = [0]
	*((($14 + [128]) + [32])) = [0]
	*($14 + [140]) = [0]
	*($14 + [144]) = [0]
	*($14 + [148]) = [0]
	*($14 + [152]) = [0]
	*($14 + [128]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [164]) = [0]
	*(($14 + [168])) = [0]
	*(($14 + [172])) = [0]
	*($14 + [176]) = [0]
	*(($14 + [180])) = [0]
	*(($14 + [184])) = [0]
	$7 = ($0 + [128])
	$6 = ($0 + [136])
	$9 = CALL db_lowerbound_i64(*($0 + [128]), *($6), (int_64)-4418693909081751552, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$2 }
	$9 = CALL $108($7, $9)
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)$7), [2784])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$14()), [2832])
	$11 = ((int_64)*($9 + [8]) + (int_64)1)
	*($9 + [8]) = $11
	*($14 + [120]) = (int_64)0
	*($14 + [112]) = $11
	$11 = *($9)
	CALL eosio_assert([1], [2896])
	CALL eosio_assert([1], [2704])
	CALL memcpy($14, $9, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy(($14 | [8]), ($9 + [8]), [8])
	CALL db_update_i64(*($9 + [20]), (int_64)0, $14, [16])
	$9 = ($0 + [144])
	if ( (uint_64)($11 <= *($9)) ){ goto $label$1 }
	*($9) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	goto $label$1 
	
.LABEL $label$2
	$13 = *($0)
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$14()), [2720])
	*(($9 = CALL $203([32])) + [16]) = $7
	*($9 + [8]) = (int_64)10000
	*($9) = (int_64)0
	*($14 + [120]) = (int_64)0
	*($14 + [112]) = (int_64)10000
	CALL eosio_assert([1], [2704])
	CALL memcpy($14, $9, [8])
	CALL eosio_assert([1], [2704])
	CALL memcpy(($14 | [8]), ($9 + [8]), [8])
	$11 = *($9)
	$6 = CALL db_store_i64(*($6), (int_64)-4418693909081751552, $13, $11, $14, [16])
	*($9 + [20]) = $6
	$7 = ($0 + [144])
	if ( (uint_64)($11 <= *($7)) ){ goto $label$3 }
	*($7) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*($14 + [72]) = $9
	$11 = *($9)
	*($14) = $11
	*($14 + [56]) = $6
	$8 = ($0 + [156])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [160]))) ){ goto $label$5 }
	*($7 + [8]) = $11
	*($7 + [16]) = $6
	*($14 + [72]) = [0]
	*($7) = $9
	*($8) = ($7 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $109(($0 + [152]), ($14 + [72]), $14, ($14 + [56]))
	
.LABEL $label$4
	$9 = *($14 + [72])
	*($14 + [72]) = [0]
	if ( ($9 == 0) ){ goto $label$1 }
	CALL $204($9)
	
.LABEL $label$1
	$6 = ($14 + [164])
	$5 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [2576]
	$12 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$11 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [165])
	goto $label$9 
	
.LABEL $label$11
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$7
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$6 }
	*($14 + [64]) = $12
	*($14 + [56]) = $5
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [2448]
	$12 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$11 > (uint_64)(int_64)9) ){ goto $label$17 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$7 = ($7 + [165])
	goto $label$15 
	
.LABEL $label$17
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$13
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$12 }
	*(($14 + [28])) = *(($3 + [12]))
	*(($14 + [24])) = *(($3 + [8]))
	*(($14 + [20])) = *(($3 + [4]))
	*($14 + [8]) = $2
	*($14) = $1
	*($14 + [16]) = *($3)
	CALL $220(($14 + [32]), $4)
	$9 = CALL $81(($14 + [72]), ($14 + [56]), $5, $12, $14)
	$3 = (($14 + [128]) + [40])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($14 + [172]))) ){ goto $label$20 }
	*($7) = *($14 + [72])
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = *((($14 + [72]) + [8]))
	*(($4 = ($7 + [24]))) = [0]
	$6 = ($9 + [20])
	*(($7 + [20])) = *($6)
	*($7 + [16]) = *($9 + [16])
	$8 = ($9 + [24])
	*($4) = *($8)
	*($6) = [0]
	*($9 + [16]) = [0]
	*($8) = [0]
	*($7 + [28]) = [0]
	*(($4 = ($7 + [32]))) = [0]
	*(($6 = ($7 + [36]))) = [0]
	*($7 + [28]) = *($9 + [28])
	$7 = ($9 + [32])
	*($4) = *($7)
	$4 = ($9 + [36])
	*($6) = *($4)
	*($9 + [28]) = [0]
	*($7) = [0]
	*($4) = [0]
	*($3) = (*($3) + [40])
	$7 = *($9 + [16])
	if ( $7 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	CALL $110($6, $9)
	$7 = *($9 + [28])
	if ( ($7 == 0) ){ goto $label$21 }
	*(($9 + [32])) = $7
	CALL $204($7)
	
.LABEL $label$21
	$7 = *($9 + [16])
	if ( ($7 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	*(($9 + [20])) = $7
	CALL $204($7)
	
.LABEL $label$18
	if ( ((*($14 + [32]) & [1]) == 0) ){ goto $label$22 }
	CALL $204(*(($14 + [40])))
	
.LABEL $label$22
	*(($14 + [148])) = [0]
	$11 = *($0)
	CALL $111($14, ($14 + [128]))
	$9 = *($14)
	CALL send_deferred(($14 + [112]), $11, $9, (*($14 + [4]) - $9), [0])
	$9 = *($14)
	if ( ($9 == 0) ){ goto $label$23 }
	*($14 + [4]) = $9
	CALL $204($9)
	
.LABEL $label$23
	CALL $75(($14 + [128]))
	*([0] + [4]) = ($14 + [192])
}

void .FUNC $106 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $109 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $203(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $219($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $204($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $204($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [2960])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $203([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [2992])
	CALL memcpy($6, $7, [8])
	CALL eosio_assert(((int_32)($4 & [-8]) != (int_32)[8]), [2992])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	*($6 + [20]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [20])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $109(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $204($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

int_32 .FUNC $212 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $207($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

void .FUNC $219 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC _ZN11dbetonedice8dbetdice7actdrawEyN5eosio5assetENSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	*([0] + [4]) = $10
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [1088]
	$8 = (int_64)0
	
.LOOP $label$1:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$2 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$4 = ($4 + [165])
	goto $label$3 
	
.LABEL $label$4
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$2
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$1 }
	CALL require_auth($8)
	$7 = *($2 + [8])
	CALL eosio_assert(((int_64)$7 == (int_64)1397703940), [1824])
	*(($10 + [40])) = [0]
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$6 = *($0)
	*($10 + [8]) = $6
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	*($10 + [16]) = $7)
	$5 = CALL db_find_i64($6, $7, (int_64)5455799419163115520, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $44(($10 + [8]), $5)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($10 + [8])), [1104])
	*($10) = $2
	CALL eosio_assert([1], [1168])
	CALL $59(($10 + [8]), $5, $10)
	
.LABEL $label$5
	CALL _ZN11dbetonedice8dbetdice10transfertoEyRKN5eosio5assetERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEo($0, $1, $2, $3, ((int_64)((int_64)((uint_64)CALL $fimport$15() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$1), (int_64)0)
	$2 = *($10 + [32])
	if ( ($2 == 0) ){ goto $label$6 }
	$0 = ($10 + [36])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL $204($4)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	$5 = *(($10 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	*($0) = $2
	CALL $204($5)
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [48])
}

int_32 .FUNC $39 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [80])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [48])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [1072])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [1072])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [1072])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $55(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $56(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $204(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

int_32 .FUNC $36 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*($9 + [32]) = (int_64)1398362884
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [80])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [48])
	*($9 + [40]) = (int_64)0
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [1072])
	CALL memcpy(($9 + [24]), $5, [8])
	$1 = ($3 & [-8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [1072])
	$7 = (($9 + [24]) + [8])
	CALL memcpy($7, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[16]), [1072])
	$1 = (($9 + [24]) + [16])
	CALL memcpy($1, ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($3 = (($9 + [48]) + [8]))) = *($7)
	*($9 + [48]) = *($9 + [24])
	$6 = *($1)
	*((($9 + [64]) + [8])) = *($3)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 ($9 + [8])), (int_32 $6), (int_64 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC _ZN11dbetonedice8dbetdice11adddividendEN5eosio5assetEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	CALL eosio_assert(((int_64)*($1) > (int_64)0), [1872])
	$7 = *($1 + [8])
	*((($9 + [40]) + [32])) = [0]
	*($9 + [56]) = (int_64)-1
	*($9 + [64]) = (int_64)0
	$6 = *($0)
	*($9 + [40]) = $6
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	*($9 + [48]) = $7)
	$5 = CALL db_find_i64($6, $7, (int_64)5455799419163115520, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $44(($9 + [40]), $5)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($9 + [40])), [1104])
	*($9) = $1
	CALL eosio_assert([1], [1168])
	CALL $60(($9 + [40]), $5, $9)
	$7 = *(($1 + [8]))
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$6 = *($0)
	*($9) = $6
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	*($9 + [8]) = $7)
	$5 = [1]
	$3 = CALL db_find_i64($6, $7, (int_64)-7704843153873305600, $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $50($9, $3) + [24]) == (int_32)$9), [1104])
	$5 = [0]
	
.LABEL $label$2
	CALL eosio_assert($5, [1904])
	$6 = *($0)
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$14()), [1936])
	*(($5 = CALL $203([40])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [80])
	$4 = ($5 + [16])
	$3 = ($5 + [8])
	$7 = (int_64)5462355
	$0 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	CALL eosio_assert($8, [48])
	*($5 + [24]) = $9
	*($5) = $2
	*(($3 + [12])) = *(($1 + [12]))
	*(($3 + [8])) = *(($1 + [8]))
	*(($3 + [4])) = *(($1 + [4]))
	*($3) = *($1)
	CALL eosio_assert([1], [1504])
	CALL memcpy(($9 + [96]), $5, [8])
	CALL eosio_assert([1], [1504])
	CALL memcpy((($9 + [96]) | [8]), $3, [8])
	CALL eosio_assert([1], [1504])
	CALL memcpy((($9 + [96]) + [16]), $4, [8])
	$7 = *($5)
	$1 = CALL db_store_i64(*(($9 + [8])), (int_64)-7704843153873305600, $6, $7, ($9 + [96]), [24])
	*($5 + [28]) = $1
	$0 = ($9 + [16])
	if ( (uint_64)($7 <= *($0)) ){ goto $label$8 }
	*($0) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($9 + [88]) = $5
	$7 = *($5)
	*($9 + [96]) = $7
	*($9 + [84]) = $1
	$3 = ($9 + [28])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)*(($9 + [32]))) ){ goto $label$10 }
	*($0 + [8]) = $7
	*($0 + [16]) = $1
	*($9 + [88]) = [0]
	*($0) = $5
	*($3) = ($0 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $53(($9 + [24]), ($9 + [88]), ($9 + [96]), ($9 + [84]))
	
.LABEL $label$9
	$0 = *($9 + [88])
	*($9 + [88]) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $204($0)
	
.LABEL $label$11
	$1 = *($9 + [24])
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($9 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$15 }
	CALL $204($5)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($9 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $1
	
.LABEL $label$12
	*($3) = $1
	CALL $204($0)
	
.LABEL $label$1
	$1 = *($9 + [64])
	if ( ($1 == 0) ){ goto $label$16 }
	$3 = ($9 + [68])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$20 }
	CALL $204($5)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$19 }
	$0 = *(($9 + [64]))
	goto $label$17 
	
.LABEL $label$18
	$0 = $1
	
.LABEL $label$17
	*($3) = $1
	CALL $204($0)
	
.LABEL $label$16
	*([0] + [4]) = ($9 + [128])
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [80])
	$10 = $11
	*([0] + [4]) = $11
	$2 = *($1 + [4])
	$9 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($11 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($10 + [16]) = (int_64)0
	*($10 + [8]) = (int_64)0
	*($10 + [24]) = (int_64)0
	*($10 + [32]) = (int_64)0
	*($10 + [40]) = (int_64)0
	*($10 + [52]) = $1
	*($10 + [48]) = $1
	*($10 + [56]) = ($1 + $3)
	*($10 + [64]) = ($10 + [48])
	*($10 + [72]) = ($10 + [8])
	CALL $62(($10 + [72]), ($10 + [64]))
	if ( ($3 <= [513]) ){ goto $label$5 }
	CALL free($1)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$8 = *(($10 + [40]))
	$7 = *(($10 + [32]))
	$6 = *(($10 + [24]))
	$5 = *(($10 + [16]))
	$4 = *($10 + [8])
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$9 = *((*($1) + $9))
	
.LABEL $label$6
	CALL void $1((int_32 $4), (int_64 $5), (int_64 $6), (int_64 $7), (int_64 $8), (int_64 $9))
	*([0] + [4]) = ($10 + [80])
	return [1]
}

void .FUNC _ZN11dbetonedice8dbetdice12senddividendEN5eosio5assetEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL require_auth(*($0))
	CALL eosio_assert(((int_64)*($1) > (int_64)0), [1872])
	$7 = *($1 + [8])
	*((($9 + [40]) + [32])) = [0]
	*($9 + [56]) = (int_64)-1
	*($9 + [64]) = (int_64)0
	$6 = *($0)
	*($9 + [40]) = $6
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	*($9 + [48]) = $7)
	$5 = CALL db_find_i64($6, $7, (int_64)5455799419163115520, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$5 = CALL $44(($9 + [40]), $5)
	CALL eosio_assert(((int_32)*($5 + [64]) == (int_32)($9 + [40])), [1104])
	*($9) = $1
	CALL eosio_assert([1], [1168])
	CALL $61(($9 + [40]), $5, $9)
	$7 = *(($1 + [8]))
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$6 = *($0)
	*($9) = $6
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	*($9 + [8]) = $7)
	$5 = [1]
	$8 = CALL db_find_i64($6, $7, (int_64)-7704843153873305600, $2)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $50($9, $8) + [24]) == (int_32)$9), [1104])
	$5 = [0]
	
.LABEL $label$2
	CALL eosio_assert($5, [1904])
	$6 = *($0)
	CALL eosio_assert(((int_64)*($9) == (int_64)CALL $fimport$14()), [1936])
	*(($5 = CALL $203([40])) + [16]) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [80])
	$4 = ($5 + [16])
	$3 = ($5 + [8])
	$7 = (int_64)5462355
	$0 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$8 = [1]
	$0 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	CALL eosio_assert($8, [48])
	*($5 + [24]) = $9
	*($5) = $2
	$2 = *(($1 + [8]))
	$7 = *($1)
	CALL eosio_assert(((int_64)$7 > (int_64)-4611686018427387904), [2000])
	CALL eosio_assert(((int_64)$7 < (int_64)4611686018427387904), [2032])
	*(($5 + [16])) = $2
	*(($5 + [8])) = (int_64))((int_64)0 - $7)
	CALL eosio_assert([1], [1504])
	CALL memcpy(($9 + [96]), $5, [8])
	CALL eosio_assert([1], [1504])
	CALL memcpy((($9 + [96]) | [8]), $3, [8])
	CALL eosio_assert([1], [1504])
	CALL memcpy((($9 + [96]) + [16]), $4, [8])
	$7 = *($5)
	$1 = CALL db_store_i64(*(($9 + [8])), (int_64)-7704843153873305600, $6, $7, ($9 + [96]), [24])
	*($5 + [28]) = $1
	$0 = ($9 + [16])
	if ( (uint_64)($7 <= *($0)) ){ goto $label$8 }
	*($0) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($9 + [88]) = $5
	$7 = *($5)
	*($9 + [96]) = $7
	*($9 + [84]) = $1
	$8 = ($9 + [28])
	$0 = *($8)
	if ( ((uint_32)$0 >= (uint_32)*(($9 + [32]))) ){ goto $label$10 }
	*($0 + [8]) = $7
	*($0 + [16]) = $1
	*($9 + [88]) = [0]
	*($0) = $5
	*($8) = ($0 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $53(($9 + [24]), ($9 + [88]), ($9 + [96]), ($9 + [84]))
	
.LABEL $label$9
	$0 = *($9 + [88])
	*($9 + [88]) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $204($0)
	
.LABEL $label$11
	$1 = *($9 + [24])
	if ( ($1 == 0) ){ goto $label$1 }
	$8 = ($9 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$15 }
	CALL $204($5)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($9 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $1
	
.LABEL $label$12
	*($8) = $1
	CALL $204($0)
	
.LABEL $label$1
	$1 = *($9 + [64])
	if ( ($1 == 0) ){ goto $label$16 }
	$8 = ($9 + [68])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$20 }
	CALL $204($5)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$19 }
	$0 = *(($9 + [64]))
	goto $label$17 
	
.LABEL $label$18
	$0 = $1
	
.LABEL $label$17
	*($8) = $1
	CALL $204($0)
	
.LABEL $label$16
	*([0] + [4]) = ($9 + [128])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [80])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	CALL $63(($6 + [16]), $4, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	*(($1 = (($6 + [32]) + [8]))) = *((($6 + [16]) + [8]))
	*($6 + [32]) = *($6 + [16])
	*((($6 + [48]) + [8])) = *($1)
	*($6 + [48]) = *($6 + [32])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$3 = *((($6 + [48]) + [8]))
	*((($6 + [64]) + [8])) = $3
	*(($6 + [8])) = $3
	$3 = *($6 + [48])
	*($6 + [64]) = $3
	*($6) = $3
	CALL void $1((int_32 $6), (int_32 $5))
	*([0] + [4]) = ($6 + [80])
	return [1]
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1398362884
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [80])
	$6 = (int_64)5462355
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [48])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [1072])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1072])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1072])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = (*([0] + [4]) - [16])
	$8 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$7 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	goto $label$1 
	
.LABEL $label$3
	$6 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($8 + [8]) = (int_64)0
	*($8) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1072])
	CALL memcpy($8, $6, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [1072])
	$5 = ($8 + [8])
	CALL memcpy($5, ($6 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($6)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($5)
	$3 = *($8)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$7 = *((*($1) + $7))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $4), (int_64 $7))
	*([0] + [4]) = ($8 + [16])
	return [1]
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1072])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

void .FUNC $215 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen($1)
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$6 = CALL $203($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $209($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $214 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $217 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $218($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC _ZNSt3__19to_stringEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [14304], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $217(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $217(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $211 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $212($0, $1, $2, CALL $251($2))
}

int_32 .FUNC $210 (int_32 $0, int_32 $1)
{
	return CALL $209($0, $1, CALL $251($1))
}

void .FUNC _ZN11dbetonedice8dbetdice9checknameEy (int_32 $0, int_64 $1)
{
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $200([5808], $0)
}

void .FUNC _ZN11dbetonedice8dbetdice11clearunopenEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$4 = *($0)
	*($6) = $4
	*($6 + [8]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)-3104856670496604160, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $121($6, $0)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$6), [2464])
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$3 = CALL db_next_i64(*($0 + [36]), ($6 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $121($6, $3)
	
.LABEL $label$2
	CALL $164($6, $0)
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $204($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $204($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

void .FUNC _ZN11dbetonedice8dbetdice7inspectEyy (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	CALL require_auth(*($0))
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)2), [3680])
	*((($8 + [8]) + [32])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$5 = *($0)
	*($8 + [8]) = $5
	*($8 + [16]) = $5
	$4 = CALL db_find_i64($5, $5, (int_64)4986958867379634176, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$0 = CALL $78(($8 + [8]), $4)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)($8 + [8])), [2464])
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)($8 + [8])), [2784])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$14()), [2832])
	*($0 + [24]) = $2
	$5 = *($0)
	CALL eosio_assert([1], [2896])
	*($8 + [96]) = (($8 + [48]) + [32])
	*($8 + [92]) = ($8 + [48])
	*($8 + [88]) = ($8 + [48])
	*($8 + [104]) = ($8 + [88])
	*($8 + [116]) = ($0 + [8])
	*($8 + [112]) = $0
	*($8 + [120]) = ($0 + [16])
	*($8 + [124]) = ($0 + [24])
	CALL $87(($8 + [112]), ($8 + [104]))
	CALL db_update_i64(*($0 + [36]), (int_64)0, ($8 + [48]), [32])
	$0 = (($8 + [8]) + [16])
	if ( (uint_64)($5 <= *($0)) ){ goto $label$3 }
	*($0) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	$3 = *($8 + [32])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$6 = *($0)
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)CALL $fimport$14()), [2720])
	*(($0 = CALL $203([48])) + [32]) = ($8 + [8])
	*($0 + [8]) = (int_64)0
	*($0) = $1
	*($0 + [16]) = (int_64)0
	*($0 + [24]) = $2
	*($8 + [96]) = (($8 + [48]) + [32])
	*($8 + [92]) = ($8 + [48])
	*($8 + [88]) = ($8 + [48])
	*($8 + [104]) = ($8 + [88])
	*($8 + [116]) = ($0 + [8])
	*($8 + [112]) = $0
	*($8 + [120]) = ($0 + [16])
	*($8 + [124]) = ($0 + [24])
	CALL $87(($8 + [112]), ($8 + [104]))
	$5 = *($0)
	$3 = CALL db_store_i64(*((($8 + [8]) + [8])), (int_64)4986958867379634176, $6, $5, ($8 + [48]), [32])
	*($0 + [36]) = $3
	$4 = (($8 + [8]) + [16])
	if ( (uint_64)($5 <= *($4)) ){ goto $label$5 }
	*($4) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	*($8 + [112]) = $0
	$5 = *($0)
	*($8 + [48]) = $5
	*($8 + [88]) = $3
	$7 = ($8 + [36])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($8 + [40]))) ){ goto $label$7 }
	*($4 + [8]) = $5
	*($4 + [16]) = $3
	*($8 + [112]) = [0]
	*($4) = $0
	*($7) = ($4 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $88(($8 + [32]), ($8 + [112]), ($8 + [48]), ($8 + [88]))
	
.LABEL $label$6
	$0 = *($8 + [112])
	*($8 + [112]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $204($0)
	
.LABEL $label$3
	$3 = *($8 + [32])
	if ( ($3 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($8 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$9 }
	
.LOOP $label$10:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $204($4)
	
.LABEL $label$11
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$10 }
	$0 = *(($8 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$0 = $3
	
.LABEL $label$8
	*($7) = $3
	CALL $204($0)
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [128])
}

void .FUNC _ZN11dbetonedice8dbetdice10clearerrorEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	*([0] + [4]) = $6
	CALL require_auth(*($0))
	*(($6 + [32])) = [0]
	*($6 + [16]) = (int_64)-1
	*($6 + [24]) = (int_64)0
	$4 = *($0)
	*($6) = $4
	*($6 + [8]) = $4
	$0 = CALL db_find_i64($4, $4, (int_64)4986958867379634176, $1)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $78($6, $0)
	CALL eosio_assert(((int_32)*($0 + [32]) == (int_32)$6), [2464])
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$3 = CALL db_next_i64(*($0 + [36]), ($6 + [40]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $78($6, $3)
	
.LABEL $label$2
	CALL $195($6, $0)
	
.LABEL $label$1
	$2 = *($6 + [24])
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = ($6 + [28])
	$0 = *($5)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $204($3)
	
.LABEL $label$7
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($6 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $2
	
.LABEL $label$4
	*($5) = $2
	CALL $204($0)
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [48])
}

void .FUNC $195 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [3792])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [3840])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [3904])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

void .FUNC $192 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	$9 = $10
	*([0] + [4]) = $10
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [2784])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [2832])
	*($1 + [8]) = *(*($2))
	*($1 + [16]) = *(*($2 + [4]))
	$3 = *($1)
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [3056])
	$6 = ($1 + [24])
	$5 = ($1 + [16])
	$4 = ($1 + [8])
	$7 = (int_64)5459781
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [3120])
	*(($1 + [40])) = (int_64)1397703940
	*($1 + [32]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$7 = (int_64)21334
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$8 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	
.LABEL $label$6
	CALL eosio_assert($8, [3120])
	*(($1 + [56])) = (int_64)5461508
	*($1 + [48]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$7 = (int_64)1146312005
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$8 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$8 = [0]
	
.LABEL $label$11
	CALL eosio_assert($8, [3120])
	*(($1 + [72])) = (int_64)293455873288
	*($1 + [64]) = (int_64)0
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [2896])
	$8 = $10
	$2 = ($8 + [-80])
	*([0] + [4]) = $2
	*($9 + [12]) = $2
	*($9 + [8]) = $2
	*($9 + [16]) = $8
	*($9 + [24]) = ($9 + [8])
	*($9 + [36]) = $4
	*($9 + [32]) = $1
	*($9 + [40]) = $5
	*($9 + [44]) = $6
	*($9 + [48]) = ($1 + [32])
	*($9 + [52]) = ($1 + [48])
	*($9 + [56]) = ($1 + [64])
	CALL $149(($9 + [32]), ($9 + [24]))
	CALL db_update_i64(*($1 + [84]), (int_64)0, $2, [80])
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*([0] + [4]) = ($9 + [64])
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [80]) == (int_32)$0), [3792])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$14()), [3840])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [3904])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $204($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $204($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
}

void .FUNC _ZN11dbetonedice8dbetdice9altermarkEyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [224])
	*([0] + [4]) = $7
	*($7 + [64]) = $1
	*($7 + [56]) = $2
	*($7 + [48]) = $3
	CALL require_auth(*($0))
	CALL eosio_assert(((int_64)((int_64)$3 | (int_64)1) == (int_64)1), [5776])
	*(($7 + [40])) = [0]
	*($7 + [24]) = (int_64)-1
	$2 = *($0)
	*($7 + [8]) = $2
	*($7 + [16]) = $2
	*($7 + [32]) = (int_64)0
	$5 = CALL db_lowerbound_i64($2, $2, (int_64)-7949121189994692608, (int_64)0)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	$0 = CALL $148(($7 + [8]), $5)
	$2 = *($7 + [48])
	if ( ((int_64)$2 == (int_64)1) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [8]) != (int_64)*($7 + [64])) ){ goto $label$6 }
	if ( ((int_64)*($0 + [16]) == (int_64)*($7 + [56])) ){ goto $label$3 }
	CALL eosio_assert([1], [2528])
	CALL eosio_assert(((int_32)*($0 + [80]) == (int_32)($7 + [8])), [2784])
	CALL eosio_assert(((int_64)*($7 + [8]) == (int_64)CALL $fimport$14()), [2832])
	*(($5 = ($0 + [16]))) = *($7 + [56])
	$2 = *($0)
	*($0 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$2 == (int_64)*($0)), [2896])
	*($7 + [176]) = (($7 + [80]) + [80])
	*($7 + [172]) = ($7 + [80])
	*($7 + [168]) = ($7 + [80])
	*($7 + [184]) = ($7 + [168])
	*($7 + [196]) = ($0 + [8])
	*($7 + [192]) = $0
	*($7 + [200]) = $5
	*($7 + [204]) = ($0 + [24])
	*($7 + [208]) = ($0 + [32])
	*($7 + [212]) = ($0 + [48])
	*($7 + [216]) = ($0 + [64])
	CALL $149(($7 + [192]), ($7 + [184]))
	CALL db_update_i64(*($0 + [84]), (int_64)0, ($7 + [80]), [80])
	if ( (uint_64)($2 <= *((($7 + [8]) + [16]))) ){ goto $label$3 }
	*(($7 + [24])) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$9
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$3 }
	$3 = *($0)
	*($7 + [196]) = ($7 + [56])
	*($7 + [192]) = ($7 + [64])
	*($7 + [200]) = ($7 + [48])
	*($7 + [168]) = $3
	CALL eosio_assert(((int_64)$2 == (int_64)CALL $fimport$14()), [2720])
	*($7 + [84]) = ($7 + [192])
	*($7 + [80]) = ($7 + [8])
	*($7 + [88]) = ($7 + [168])
	$0 = CALL $203([96])
	CALL $156($0)
	*($0 + [80]) = ($7 + [8])
	CALL $191(($7 + [80]), $0)
	*($7 + [184]) = $0
	$2 = *($0)
	*($7 + [80]) = $2
	$4 = *($0 + [84])
	*($7 + [76]) = $4
	$6 = ($7 + [36])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($7 + [40]))) ){ goto $label$5 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [184]) = [0]
	*($5) = $0
	*($6) = ($5 + [24])
	goto $label$4 
	
.LABEL $label$8
	CALL eosio_assert([1], [3456])
	CALL eosio_assert([1], [3504])
	$5 = CALL db_next_i64(*($0 + [84]), ($7 + [80]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$10 }
	CALL $148(($7 + [8]), $5)
	
.LABEL $label$10
	CALL $193(($7 + [8]), $0)
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	CALL eosio_assert([0], [5792])
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	*($7 + [84]) = ($7 + [56])
	*($7 + [80]) = ($7 + [64])
	*($7 + [88]) = ($7 + [48])
	CALL eosio_assert([1], [2528])
	CALL $192(($7 + [8]), $0, ($7 + [80]))
	$4 = *($7 + [32])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	CALL $158(($7 + [32]), ($7 + [184]), ($7 + [80]), ($7 + [76]))
	
.LABEL $label$4
	$0 = *($7 + [184])
	*($7 + [184]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $204($0)
	
.LABEL $label$3
	$4 = *($7 + [32])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$6 = ($7 + [36])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	CALL $204($5)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$13 }
	$0 = *(($7 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$0 = $4
	
.LABEL $label$11
	*($6) = $4
	CALL $204($0)
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [224])
}

void .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	$9 = $10
	*([0] + [4]) = $10
	$7 = *($0 + [4])
	*($1) = (int_64)0
	*($1 + [8]) = *(*($7))
	$2 = *($0)
	*($1 + [16]) = *(*($7 + [4]))
	*($1 + [24]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [3056])
	$5 = ($1 + [24])
	$4 = ($1 + [16])
	$3 = ($1 + [8])
	$6 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [3120])
	*(($1 + [40])) = (int_64)1397703940
	*($1 + [32]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$6 = (int_64)21334
	$7 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	
.LABEL $label$6
	CALL eosio_assert($8, [3120])
	*(($1 + [56])) = (int_64)5461508
	*($1 + [48]) = (int_64)0
	CALL eosio_assert([1], [3056])
	$6 = (int_64)1146312005
	$7 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$8 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$8 = [0]
	
.LABEL $label$11
	CALL eosio_assert($8, [3120])
	*(($1 + [72])) = (int_64)293455873288
	*($1 + [64]) = (int_64)0
	$8 = $10
	$7 = ($8 + [-80])
	*([0] + [4]) = $7
	*($9 + [12]) = $7
	*($9 + [8]) = $7
	*($9 + [16]) = $8
	*($9 + [24]) = ($9 + [8])
	*($9 + [36]) = $3
	*($9 + [32]) = $1
	*($9 + [40]) = $4
	*($9 + [44]) = $5
	*($9 + [48]) = ($1 + [32])
	*($9 + [52]) = ($1 + [48])
	*($9 + [56]) = ($1 + [64])
	CALL $149(($9 + [32]), ($9 + [24]))
	$6 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($2 + [8]), (int_64)-7949121189994692608, *(*($0 + [8])), $6, $7, [80])
	if ( (uint_64)($6 <= *($2 + [16])) ){ goto $label$16 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	*([0] + [4]) = ($9 + [64])
}