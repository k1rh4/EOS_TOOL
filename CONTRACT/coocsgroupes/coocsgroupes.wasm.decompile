(data (i32.const 8568) "failed to allocate pages\00Suspend all transactions\00")
(data (i32.const 8620) "\80Q\01\00\10\0e\00\00")
(data (i32.const 8628) "invalid symbol name\00")
(data (i32.const 8648) "rule with symbol already exists\00")
(data (i32.const 8680) "rule with symbol not found\00")
(data (i32.const 8707) "account not found\00")
(data (i32.const 8725) "\e8\af\a5\e7\94\a8\e6\88\b7\e5\b7\b2\e7\bb\8f\e8\a7\a3\e7\a6\81\e5\ae\8c\e6\88\90\00")
(data (i32.const 8753) "\e8\a7\92\e8\89\b2\e6\95\b0\e6\8d\ae\e9\94\99\e8\af\af\00")
(data (i32.const 8772) "\e6\9a\82\e6\9c\aa\e5\bc\80\e6\94\be\e8\af\a5\e7\b1\bb\e7\94\a8\e6\88\b7\00")
(data (i32.const 8797) "\e9\94\99\e8\af\af\e7\9a\84\e7\94\a8\e6\88\b7\e7\b1\bb\e5\9e\8b\00")
(data (i32.const 8819) "account locked\00")
(data (i32.const 8834) "invalid supply\00")
(data (i32.const 8849) "max-supply must be positive\00")
(data (i32.const 8877) "token with symbol already exists\00")
(data (i32.const 8910) "memo has more than 256 bytes\00")
(data (i32.const 8939) "token with symbol does not exist, create token before issue\00")
(data (i32.const 8999) "invalid quantity\00")
(data (i32.const 9016) "must issue positive quantity\00")
(data (i32.const 9045) "symbol precision mismatch\00")
(data (i32.const 9071) "quantity exceeds available supply\00")
(data (i32.const 9105) "token with symbol does not exist\00")
(data (i32.const 9138) "must retire positive quantity\00")
(data (i32.const 9168) "cannot transfer to self\00")
(data (i32.const 9192) "to account does not exist\00")
(data (i32.const 9218) "unable to find key\00")
(data (i32.const 9237) "must transfer positive quantity\00")
(data (i32.const 9269) "no balance object found\00")
(data (i32.const 9293) "overdrawn balance\00")
(data (i32.const 9311) "\e5\8d\95\e7\ac\94\e4\ba\a4\e6\98\93\e8\b6\85\e8\bf\87\e9\99\90\e9\a2\9d\00")
(data (i32.const 9336) "\e8\bf\9e\e7\bb\ad\e4\ba\a4\e6\98\93\e9\97\b4\e9\9a\941\e5\b0\8f\e6\97\b6\e5\86\85\ef\bc\8c\e7\b4\af\e8\ae\a1\e4\ba\a4\e6\98\93\e9\87\91\e9\a2\9d\e8\b6\85\e5\87\ba\e9\99\90\e9\a2\9d\00")
(data (i32.const 9398) "owner account does not exist\00")
(data (i32.const 9427) "symbol does not exist\00")
(data (i32.const 9449) "Balance row already deleted or never existed. Action won\'t have any effect.\00")
(data (i32.const 9525) "Cannot close because the balance is not zero.\00")
(data (i32.const 9571) "XXX\00")
(data (i32.const 9575) "ON\00")
(data (i32.const 9578) "string is too long to be a valid symbol_code\00")
(data (i32.const 9623) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9676) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 9735) "multiplication overflow\00")
(data (i32.const 9759) "multiplication underflow\00")
(data (i32.const 9784) "attempt to add asset with different symbol\00")
(data (i32.const 9827) "addition underflow\00")
(data (i32.const 9846) "addition overflow\00")
(data (i32.const 9864) "attempt to subtract asset with different symbol\00")
(data (i32.const 9912) "subtraction underflow\00")
(data (i32.const 9934) "subtraction overflow\00")
(data (i32.const 9955) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 10006) "error reading iterator\00")
(data (i32.const 10029) "cannot create objects in table of another contract\00")
(data (i32.const 10080) "write\00")
(data (i32.const 10086) "cannot pass end iterator to modify\00")
(data (i32.const 10121) "object passed to modify is not in multi_index\00")
(data (i32.const 10167) "cannot modify objects in table of another contract\00")
(data (i32.const 10218) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10277) "cannot pass end iterator to erase\00")
(data (i32.const 10311) "cannot increment end iterator\00")
(data (i32.const 10341) "object passed to erase is not in multi_index\00")
(data (i32.const 10386) "cannot erase objects in table of another contract\00")
(data (i32.const 10436) "attempt to remove object that was not in multi_index\00")
(data (i32.const 10489) "read\00")
(data (i32.const 10494) "get\00")
(data (i32.const 0) "\08)\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$5 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$8 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$11 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$16 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$18 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$19 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$21 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$23 (param i64 i64 i64 i64) (result i32)))
(import "env" "require_auth" (func $fimport$24 (param i64)))
(import "env" "current_receiver" (func $fimport$25 (result i64)))
(import "env" "db_store_i64" (func $fimport$26 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "__multi3" (func $fimport$28 (param i32 i64 i64 i64 i64)))
(import "env" "db_update_i64" (func $fimport$29 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$30 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$31 (param i32 i64 i32)))
(import "env" "db_idx64_store" (func $fimport$32 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$33 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "set_proposed_producers" (func $fimport$35 (param i32 i32) (result i64)))
(import "env" "current_time" (func $fimport$36 (result i64)))
(import "env" "get_active_producers" (func $fimport$37 (param i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$38 (param i64) (result i32)))
(import "env" "require_recipient" (func $fimport$39 (param i64)))
(import "env" "has_auth" (func $fimport$40 (param i64) (result i32)))
(import "env" "action_data_size" (func $fimport$41 (result i32)))
(import "env" "read_action_data" (func $fimport$42 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$43 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$44 (param i32 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$45 (param i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$46 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$47 (param i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$48 (param i32)))
(export "apply" (func $1))
(table $0 2 2 anyfunc)
(elem (i32.const 1) $28)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10498))
(global $global$2 i32 (i32.const 10498))


void .FUNC $38 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	float_32 $17
	int_64 $18
	$3 = ($global$0 - [160])
	$global$0 = $3
	*($3 + [152]) = $2
	CALL require_auth(*($0))
	$4 = *($0)
	if ( ((int_64)$4 != (int_64)$1) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$3 }
	CALL eosio_assert([0], [8753])
	$1 = *($0)
	
.LABEL $label$3
	*(($3 + [144])) = [0]
	*($3 + [120]) = $1
	*($3 + [112]) = $1
	*($3 + [128]) = (int_64)-1
	*($3 + [136]) = (int_64)0
	*($3 + [148]) = [0]
	*($3 + [104]) = ($3 + [112])
	CALL $39(($3 + [56]), ($3 + [104]), ($3 + [152]))
	$5 = *($3 + [60])
	if ( ($5 == 0) ){ goto $label$5 }
	if ( ((int_64)*($3 + [152]) != (int_64)*($5 + [8])) ){ goto $label$5 }
	$1 = *($3 + [56])
	*($3 + [96]) = $1
	$5 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($5) == 0) ){ goto $label$4 }
	$6 = ($3 + [72])
	$7 = (($3 + [56]) + [24])
	$8 = (($3 + [56]) + [32])
	$9 = ($3 + [92])
	$10 = ($3 + [84])
	
.LOOP $label$6:
	if ( ((int_64)*($5 + [8]) != (int_64)*($3 + [152])) ){ goto $label$4 }
	*(($11 = (($3 + [56]) + [8]))) = *($5)
	*($6) = (int_64)-1
	*($7) = (int_64)0
	*($8) = [0]
	*($9) = [0]
	*($3 + [56]) = *($0)
	$12 = *([0] + [8520])
	$13 = ($5 & [1])
	$5 = *([0] + [8512])
	$5 = ( *([0] + [8516]) ? uint_32($5 >> [1]) : $13 )
	if ( ($5 <= [8]) ){ goto $label$13 }
	CALL eosio_assert([0], [9578])
	goto $label$12 
	
.LABEL $label$13
	if ( ($5 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$14 = ( $12 ? [8513] : $13 )
	$1 = (int_64)0
	
.LOOP $label$14:
	$13 = (($14 + $5) + [-1])
	$12 = *($13)
	if ( ((($12 + [-65]) & [255]) <= [26]) ){ goto $label$15 }
	CALL eosio_assert([0], [9623])
	$12 = *($13)
	
.LABEL $label$15
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$14 }
	$1 = ((int_64)$1 & (int_64)72057594037927935)
	$12 = *($10)
	$14 = *($7)
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$10 }
	
.LOOP $label$17:
	$5 = ($12 + [-24])
	$13 = *($5)
	if ( ((int_64)(uint_64)*($13 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$16 }
	$12 = $5
	if ( ((int_32)$14 != (int_32)$5) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$10 }
	if ( ((int_32)*($13 + [88]) != (int_32)($3 + [56])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$1 = (int_64)0
	
.LABEL $label$10
	$5 = CALL db_find_i64(*($3 + [56]), *($11), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	$13 = CALL $40(($3 + [56]), $5)
	if ( ((int_32)*($13 + [88]) == (int_32)($3 + [56])) ){ goto $label$8 }
	
.LABEL $label$9
	CALL eosio_assert([0], [9955])
	
.LABEL $label$8
	$5 = ($13 + [32])
	if ( ((int_64)*($5) == (int_64)*($13 + [8])) ){ goto $label$18 }
	CALL eosio_assert([0], [9676])
	
.LABEL $label$18
	if ( ((int_64)*($13 + [24]) >= (int_64)*($13)) ){ goto $label$7 }
	$2 = *($13 + [72])
	$15 = ((uint_64)$2 / (uint_64)*([0] + [8528]))
	$1 = *(($13 + [80]))
	$4 = *($13 + [40])
	$16 = ( $16 ? $4 : (int_64)($4 == 0) )
	$4 = ((int_64)$16 + (int_64)-1)
	if ( ((uint_64)$4 > (uint_64)(int_64)3) ){ goto $label$22 }
	$12 = [5]
	goto $label$19 
	
.LABEL $label$23
	$12 = [25]
	if ( (uint_64)($15 <= (int_64)5000001) ){ goto $label$19 }
	$12 = [20]
	if ( (uint_64)($15 <= (int_64)60000001) ){ goto $label$19 }
	$12 = ( [15] ? [10] : (uint_64)($15 <= (int_64)100000001) )
	goto $label$19 
	
.LABEL $label$22
	CALL eosio_assert([0], [8797])
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [8772])
	
.LABEL $label$20
	
.LABEL $label$19
	$15 = (int_64)$2 >> (int_64)63)
	$17 = (CASTING float_32)(int_32 $12)
	if ( ((float_32)(float_32)|$17| < (float_32)(float_32)9223372036854775808) ){ goto $label$25 }
	$4 = (int_64)-9223372036854775808
	goto $label$24 
	
.LABEL $label$25
	$4 = (Rounds 0)($17)
	
.LABEL $label$24
	CALL __multi3($3, $4, (int_64)$4 >> (int_64)63), $2, $15)
	$2 = *(($3 + [8]))
	$4 = *($3)
	if ( (( (uint_64)($4 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$27 }
	if ( ( ((uint_64)$4 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$26 }
	CALL eosio_assert([0], [9759])
	goto $label$26 
	
.LABEL $label$27
	CALL eosio_assert([0], [9735])
	
.LABEL $label$26
	*(($12 = (($3 + [40]) + [8]))) = $1
	$2 = ((int_64)$4 / (int_64)100)
	*($3 + [40]) = $2
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$28 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$28
	$14 = ($13 + [24])
	$2 = ((int_64)*($14) + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$34 }
	if ( ((int_64)$2 >= (int_64)4611686018427387904) ){ goto $label$33 }
	$11 = ($13 + [8])
	if ( ((int_64)$1 != (int_64)*($11)) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	CALL eosio_assert([0], [9827])
	$11 = ($13 + [8])
	if ( ((int_64)$1 == (int_64)*($11)) ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [9846])
	$11 = ($13 + [8])
	if ( ((int_64)$1 == (int_64)*($11)) ){ goto $label$31 }
	
.LABEL $label$32
	CALL eosio_assert([0], [9676])
	$1 = *($13)
	if ( ((int_64)$2 > (int_64)$1) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$31
	$1 = *($13)
	if ( ((int_64)$2 <= (int_64)$1) ){ goto $label$29 }
	
.LABEL $label$30
	$2 = *($11)
	if ( ((int_64)*($5) == (int_64)$2) ){ goto $label$35 }
	CALL eosio_assert([0], [9864])
	
.LABEL $label$35
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($14))) <= (int_64)-4611686018427387904) ){ goto $label$37 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$36 }
	CALL eosio_assert([0], [9934])
	goto $label$36 
	
.LABEL $label$37
	CALL eosio_assert([0], [9912])
	
.LABEL $label$36
	*($12) = $2
	*($3 + [40]) = $1
	
.LABEL $label$29
	$1 = *($0)
	*($3 + [32]) = ($3 + [40])
	CALL $41(($3 + [56]), $13, $1, ($3 + [32]))
	
.LABEL $label$7
	CALL $42(($3 + [96]))
	$13 = *($7)
	if ( ($13 == 0) ){ goto $label$38 }
	$5 = *($10)
	if ( ((int_32)$5 == (int_32)$13) ){ goto $label$40 }
	
.LOOP $label$41:
	$5 = ($5 + [-24])
	$12 = *($5)
	*($5) = [0]
	if ( ($12 == 0) ){ goto $label$42 }
	CALL $12($12)
	
.LABEL $label$42
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$41 }
	$5 = *($7)
	goto $label$39 
	
.LABEL $label$40
	$5 = $13
	
.LABEL $label$39
	*($10) = $13
	CALL $12($5)
	
.LABEL $label$38
	$5 = *($3 + [100])
	if ( $5 ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	*($3 + [100]) = [0]
	*($3 + [96]) = ($3 + [104])
	
.LABEL $label$4
	$13 = *($3 + [136])
	if ( ($13 == 0) ){ goto $label$1 }
	$14 = ($3 + [140])
	$5 = *($14)
	if ( ((int_32)$5 == (int_32)$13) ){ goto $label$44 }
	
.LOOP $label$45:
	$5 = ($5 + [-24])
	$12 = *($5)
	*($5) = [0]
	if ( ($12 == 0) ){ goto $label$46 }
	CALL $12($12)
	
.LABEL $label$46
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$45 }
	$5 = *(($3 + [136]))
	goto $label$43 
	
.LABEL $label$44
	$5 = $13
	
.LABEL $label$43
	*($14) = $13
	CALL $12($5)
	$global$0 = ($3 + [160])
	return (CASTING uint_32)(uint_64 $15)
	
.LABEL $label$2
	*(($3 + [144])) = [0]
	*($3 + [120]) = $1
	*($3 + [112]) = $4
	*($3 + [128]) = (int_64)-1
	$1 = (int_64)0
	*($3 + [136]) = (int_64)0
	*($3 + [148]) = [0]
	$12 = *([0] + [8520])
	$13 = ($5 & [1])
	$5 = *([0] + [8512])
	$5 = ( *([0] + [8516]) ? uint_32($5 >> [1]) : $13 )
	if ( ($5 <= [8]) ){ goto $label$49 }
	CALL eosio_assert([0], [9578])
	goto $label$48 
	
.LABEL $label$49
	if ( ($5 == 0) ){ goto $label$47 }
	
.LABEL $label$48
	$14 = ( $12 ? [8513] : $13 )
	$1 = (int_64)0
	
.LOOP $label$50:
	$13 = (($14 + $5) + [-1])
	$12 = *($13)
	if ( ((($12 + [-65]) & [255]) <= [26]) ){ goto $label$51 }
	CALL eosio_assert([0], [9623])
	$12 = *($13)
	
.LABEL $label$51
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$50 }
	$1 = ((int_64)$1 & (int_64)72057594037927935)
	
.LABEL $label$47
	$5 = CALL $43(($3 + [112]), $1, [8707])
	if ( ((int_64)*(($5 + [32])) == (int_64)*($5 + [8])) ){ goto $label$52 }
	CALL eosio_assert([0], [9676])
	
.LABEL $label$52
	if ( ((int_64)*($5 + [24]) < (int_64)*($5)) ){ goto $label$53 }
	CALL eosio_assert([0], [8725])
	
.LABEL $label$53
	$2 = *($5 + [72])
	$18 = ((uint_64)$2 / (uint_64)*([0] + [8528]))
	$1 = *(($5 + [80]))
	$15 = ((int_64)*($5 + [40]) + (int_64)-1)
	if ( ((uint_64)$15 > (uint_64)(int_64)3) ){ goto $label$57 }
	$16 = (int_64)0
	$4 = (int_64)5
	goto $label$54 
	
.LABEL $label$58
	$4 = (int_64)25
	if ( (uint_64)($18 <= (int_64)5000001) ){ goto $label$54 }
	$4 = (int_64)20
	if ( (uint_64)($18 <= (int_64)60000001) ){ goto $label$54 }
	$4 = ( (int_64)15 ? (int_64)10 : (uint_64)($18 <= (int_64)100000001) )
	goto $label$54 
	
.LABEL $label$57
	CALL eosio_assert([0], [8797])
	goto $label$55 
	
.LABEL $label$56
	CALL eosio_assert([0], [8772])
	
.LABEL $label$55
	$4 = (int_64)0
	$16 = (int_64)0
	
.LABEL $label$54
	CALL __multi3(($3 + [16]), $4, $16, $2, (int_64)$2 >> (int_64)63))
	$2 = *(($3 + [24]))
	$4 = *($3 + [16])
	if ( (( (uint_64)($4 <= (int_64)4611686018427387904) ? ((int_64)$2 < (int_64)0) : (int_64)($2 == 0) ) == 0) ){ goto $label$60 }
	if ( ( ((uint_64)$4 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$2 > (int_64)-1) : ((int_64)$2 == (int_64)-1) ) ){ goto $label$59 }
	CALL eosio_assert([0], [9759])
	goto $label$59 
	
.LABEL $label$60
	CALL eosio_assert([0], [9735])
	
.LABEL $label$59
	$2 = ((int_64)$4 / (int_64)100)
	*($3 + [56]) = $2
	*($3 + [64]) = $1
	if ( ((int_64)*(($5 + [32])) == (int_64)$1) ){ goto $label$61 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$61
	$2 = ((int_64)*(($5 + [24])) + (int_64)$2)
	if ( ((int_64)$2 <= (int_64)-4611686018427387904) ){ goto $label$63 }
	if ( ((int_64)$2 < (int_64)4611686018427387904) ){ goto $label$62 }
	CALL eosio_assert([0], [9846])
	goto $label$62 
	
.LABEL $label$63
	CALL eosio_assert([0], [9827])
	
.LABEL $label$62
	if ( ((int_64)$1 == (int_64)*(($5 + [8]))) ){ goto $label$64 }
	CALL eosio_assert([0], [9676])
	
.LABEL $label$64
	$1 = *($5)
	if ( ((int_64)$2 <= (int_64)$1) ){ goto $label$65 }
	$2 = *(($5 + [8]))
	if ( ((int_64)*(($5 + [32])) == (int_64)$2) ){ goto $label$66 }
	CALL eosio_assert([0], [9864])
	
.LABEL $label$66
	$1 = (int_64)
	if ( ((int_64)$1($1 - *(($5 + [24])))) <= (int_64)-4611686018427387904) ){ goto $label$68 }
	if ( ((int_64)$1 < (int_64)4611686018427387904) ){ goto $label$67 }
	CALL eosio_assert([0], [9934])
	goto $label$67 
	
.LABEL $label$68
	CALL eosio_assert([0], [9912])
	
.LABEL $label$67
	*(($3 + [64])) = $2
	*($3 + [56]) = $1
	
.LABEL $label$65
	$1 = *($0)
	*($3 + [40]) = ($3 + [56])
	CALL $44(($3 + [112]), $5, $1, ($3 + [40]))
	$13 = *($3 + [136])
	if ( ($13 == 0) ){ goto $label$1 }
	$14 = ($3 + [140])
	$5 = *($14)
	if ( ((int_32)$5 == (int_32)$13) ){ goto $label$70 }
	
.LOOP $label$71:
	$5 = ($5 + [-24])
	$12 = *($5)
	*($5) = [0]
	if ( ($12 == 0) ){ goto $label$72 }
	CALL $12($12)
	
.LABEL $label$72
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$71 }
	$5 = *(($3 + [136]))
	goto $label$69 
	
.LABEL $label$70
	$5 = $13
	
.LABEL $label$69
	*($14) = $13
	CALL $12($5)
	
.LABEL $label$1
	$global$0 = ($3 + [160])
	(CASTING uint_32)(uint_64 $4)
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [128])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8628])
	
.LABEL $label$1
	$10 = *($2)
	if ( ((uint_64)((int_64)$10 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$6 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$6 = $7
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$10 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8834])
	$10 = *($2)
	
.LABEL $label$6
	if ( ((int_64)$10 > (int_64)0) ){ goto $label$11 }
	CALL eosio_assert([0], [8849])
	
.LABEL $label$11
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$6 = *($0)
	*($3 + [8]) = $6
	*($3 + [16]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	if ( ((int_32)*(CALL $50(($3 + [8]), $4) + [40]) == (int_32)($3 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$13
	CALL eosio_assert([0], [8877])
	
.LABEL $label$12
	$7 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3 + [8])) ){ goto $label$14 }
	CALL eosio_assert([0], [10029])
	
.LABEL $label$14
	*(($4 = CALL $10([56])) + [16]) = (int_64)0
	*($4) = (int_64)0
	*($4 + [24]) = (int_64)0
	*($4 + [40]) = ($3 + [8])
	$6 = *(($2 + [8]))
	*($4 + [8]) = $6
	*($4 + [16]) = *($2)
	*($4 + [24]) = $6
	*($4 + [32]) = *($1)
	*($3 + [96]) = (($3 + [48]) + [40])
	*($3 + [92]) = ($3 + [48])
	*($3 + [88]) = ($3 + [48])
	*($3 + [104]) = ($3 + [88])
	*($3 + [116]) = ($4 + [16])
	*($3 + [112]) = $4
	*($3 + [120]) = ($4 + [32])
	CALL $51(($3 + [112]), ($3 + [104]))
	$6 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*((($3 + [8]) + [8])), (int_64)-4157508551318700032, $7, $6), ($3 + [48]), [40]
	*($4 + [44]) = $9)
	$8 = (($3 + [8]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$15 }
	*($8) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$15
	*($3 + [112]) = $4
	$6 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $6)
	*($3 + [88]) = $9
	$2 = ($3 + [36])
	$8 = *($2)
	if ( ((uint_32)$8 >= (uint_32)*((($3 + [8]) + [32]))) ){ goto $label$18 }
	*($8 + [8]) = $6
	*($8 + [16]) = $9
	*($3 + [112]) = [0]
	*($8) = $4
	*($2) = ($8 + [24])
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( $4 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $52(($3 + [32]), ($3 + [112]), ($3 + [48]), ($3 + [88]))
	$4 = *($3 + [112])
	*($3 + [112]) = [0]
	if ( ($4 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	CALL $12($4)
	
.LABEL $label$16
	$9 = *($3 + [32])
	if ( ($9 == 0) ){ goto $label$19 }
	$2 = ($3 + [36])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$23 }
	CALL $12($8)
	
.LABEL $label$23
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($3 + [32]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $9
	
.LABEL $label$20
	*($2) = $9
	CALL $12($4)
	
.LABEL $label$19
	$global$0 = ($3 + [128])
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10121])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10167])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	*($1 + [16]) = *(*($3))
	$7 = *($1 + [8])
	$3 = $4
	$4 = ($3 + [-96])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [24]) = $5
	*($5 + [36]) = ($1 + [16])
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + [24])
	*($5 + [44]) = $6
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [72])
	CALL $45(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [92]), $2, $4, [88])
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( (uint_64)($7) <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$3
	*($5 + [32]) = *($6)
	if ( (CALL $18(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$4 }
	$4 = ($1 + [96])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$5 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607749779137757184, ($5 + [24]), $7)
	*($4) = $1
	
.LABEL $label$5
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$4
	$global$0 = ($5 + [64])
}

int_32 .FUNC $43 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9955])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3607749779137757184, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $40($0, $5)
	if ( ((int_32)*($6 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9955])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $42 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = [-1]
	$4 = *($2 + [24])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10311])
	$3 = [-1]
	$2 = *(($0 + [4]))
	$4 = *($2 + [24])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *(*($0))
	$4 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)-3020371635640205312, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [24]) = $4
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$5 = CALL db_idx64_next($4, ($1 + [8]))
	if ( ((int_32)$5 <= (int_32)$3) ){ goto $label$7 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$8:
	$4 = ($2 + [-24])
	$3 = *($4)
	if ( ((int_64)*($3) == (int_64)$6) ){ goto $label$6 }
	$2 = $4
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$7
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$5 }
	if ( ((int_32)*($3 + [16]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [9955])
	goto $label$4 
	
.LABEL $label$5
	$3 = CALL $56($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)-3020371635640205312, $6))
	if ( ((int_32)*($3 + [16]) == (int_32)$7) ){ goto $label$4 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$4
	*(($0 + [4])) = $3
	*(($3 + [24])) = $5
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $41 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10121])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10167])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$7 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9827])
	$8 = *(($1 + [24]))
	
.LABEL $label$4
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9846])
	
.LABEL $label$5
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10218])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-96])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [24]) = $5
	*($5 + [44]) = $6
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [72])
	CALL $45(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [92]), $2, $4, [88])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$7
	*($5 + [32]) = *($6)
	if ( (CALL $18(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$8 }
	$4 = ($1 + [96])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607749779137757184, ($5 + [24]), $7)
	*($4) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$8
	$global$0 = ($5 + [64])
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [64])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10006])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $10([104])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [24])
	*($3 + [44]) = ($5 + [40])
	*($3 + [48]) = ($5 + [48])
	*($3 + [52]) = ($5 + [64])
	*($3 + [56]) = ($5 + [72])
	CALL $84(($3 + [32]), ($3 + [24]))
	*($5 + [96]) = [-1]
	*($5 + [92]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $60(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $47 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [56]) = $3
	CALL require_auth(*($0))
	*(($4 + [48])) = [0]
	*($4 + [24]) = $2
	*($4 + [32]) = (int_64)-1
	$2 = (int_64)0
	*($4 + [40]) = (int_64)0
	*($4 + [52]) = [0]
	*($4 + [16]) = *($0)
	$5 = *([0] + [8520])
	$7 = ($6 & [1])
	$6 = *([0] + [8512])
	$6 = ( *([0] + [8516]) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [9578])
	goto $label$2 
	
.LABEL $label$3
	if ( ($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ( $5 ? [8513] : $7 )
	$2 = (int_64)0
	
.LOOP $label$4:
	$7 = (($8 + $6) + [-1])
	$5 = *($7)
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [9623])
	$5 = *($7)
	
.LABEL $label$5
	$2 = ((int_64)((int_64)$2 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$4 }
	$2 = ((int_64)$2 & (int_64)72057594037927935)
	
.LABEL $label$1
	$6 = CALL $43(($4 + [16]), $2, [8707])
	$2 = *($0)
	*($4 + [8]) = ($4 + [56])
	CALL $48(($4 + [16]), $6, $2, ($4 + [8]))
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$6 }
	$8 = ($4 + [44])
	$6 = *($8)
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$6 = ($6 + [-24])
	$5 = *($6)
	*($6) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $12($5)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$9 }
	$6 = *(($4 + [40]))
	goto $label$7 
	
.LABEL $label$8
	$6 = $7
	
.LABEL $label$7
	*($8) = $7
	CALL $12($6)
	
.LABEL $label$6
	$global$0 = ($4 + [64])
}

void .FUNC $46 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [80])
	$global$0 = $3
	*((($3 + [40]) + [32])) = [0]
	*($3 + [48]) = $1
	*($3 + [56]) = (int_64)-1
	$4 = (int_64)0
	*($3 + [64]) = (int_64)0
	*($3 + [76]) = [0]
	$5 = *($0)
	*($3 + [40]) = $5
	*(($3 + [32])) = [0]
	*($3 + [8]) = $2
	*($3) = $5
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	*($3 + [36]) = [0]
	$6 = *([0] + [8520])
	$7 = ($0 & [1])
	$0 = *([0] + [8512])
	$0 = ( *([0] + [8516]) ? uint_32($0 >> [1]) : $7 )
	if ( ($0 <= [8]) ){ goto $label$3 }
	CALL eosio_assert([0], [9578])
	goto $label$2 
	
.LABEL $label$3
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$8 = ( $6 ? [8513] : $7 )
	$4 = (int_64)0
	
.LOOP $label$4:
	$7 = (($8 + $0) + [-1])
	$6 = *($7)
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$5 }
	CALL eosio_assert([0], [9623])
	$6 = *($7)
	
.LABEL $label$5
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$4 }
	$4 = ((int_64)$4 & (int_64)72057594037927935)
	
.LABEL $label$1
	$0 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, $4)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	$0 = CALL $40(($3 + [40]), $0)
	if ( ((int_32)*($0 + [88]) == (int_32)($3 + [40])) ){ goto $label$7 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$7
	if ( (int_64)(*($0 + [16]) == 0) ){ goto $label$6 }
	CALL eosio_assert([0], [8819])
	
.LABEL $label$6
	$6 = *([0] + [8520])
	$7 = ($0 & [1])
	$0 = *([0] + [8512])
	$0 = ( *([0] + [8516]) ? uint_32($0 >> [1]) : $7 )
	if ( ($0 <= [8]) ){ goto $label$11 }
	CALL eosio_assert([0], [9578])
	goto $label$10 
	
.LABEL $label$11
	if ( ($0 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$8 = ( $6 ? [8513] : $7 )
	$4 = (int_64)0
	
.LOOP $label$12:
	$7 = (($8 + $0) + [-1])
	$6 = *($7)
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$13 }
	CALL eosio_assert([0], [9623])
	$6 = *($7)
	
.LABEL $label$13
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$12 }
	$4 = ((int_64)$4 & (int_64)72057594037927935)
	goto $label$8 
	
.LABEL $label$9
	$4 = (int_64)0
	
.LABEL $label$8
	$6 = *(($3 + [28]))
	$8 = *(($3 + [24]))
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$17 }
	
.LOOP $label$19:
	$0 = ($6 + [-24])
	$7 = *($0)
	if ( ((int_64)(uint_64)*($7 + [8]) >> (uint_64)(int_64)8) == (int_64)$4) ){ goto $label$18 }
	$6 = $0
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$17 }
	if ( ((int_32)*($7 + [88]) == (int_32)$3) ){ goto $label$16 }
	CALL eosio_assert([0], [9955])
	if ( ((int_64)(*($7 + [16]) == 0) == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$0 = CALL db_find_i64(*($3), *(($3 + [8])), (int_64)3607749779137757184, $4)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$14 }
	$7 = CALL $40($3, $0)
	if ( ((int_32)*($7 + [88]) == (int_32)$3) ){ goto $label$16 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$16
	if ( (int_64)(*($7 + [16]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL eosio_assert([0], [8819])
	
.LABEL $label$14
	$7 = *($3 + [24])
	if ( ($7 == 0) ){ goto $label$20 }
	$8 = ($3 + [28])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$22 }
	
.LOOP $label$23:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$24 }
	CALL $12($6)
	
.LABEL $label$24
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$23 }
	$0 = *(($3 + [24]))
	goto $label$21 
	
.LABEL $label$22
	$0 = $7
	
.LABEL $label$21
	*($8) = $7
	CALL $12($0)
	
.LABEL $label$20
	$7 = *($3 + [64])
	if ( ($7 == 0) ){ goto $label$25 }
	$8 = ($3 + [68])
	$0 = *($8)
	if ( ((int_32)$0 == (int_32)$7) ){ goto $label$27 }
	
.LOOP $label$28:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$29 }
	CALL $12($6)
	
.LABEL $label$29
	if ( ((int_32)$7 != (int_32)$0) ){ goto $label$28 }
	$0 = *(($3 + [64]))
	goto $label$26 
	
.LABEL $label$27
	$0 = $7
	
.LABEL $label$26
	*($8) = $7
	CALL $12($0)
	
.LABEL $label$25
	$global$0 = ($3 + [80])
}

void .FUNC $45 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10080])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $6, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($6 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10080])
	$6 = *($5)
	
.LABEL $label$8
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($5, $6, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10080])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($1, $4, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = *($4 + [8])
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10080])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($1, ($2 + [8]), [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10121])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10167])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$7 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$3 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [24]) + (int_64)*($3))
	*($1 + [24]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9827])
	$8 = *(($1 + [24]))
	
.LABEL $label$4
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9846])
	
.LABEL $label$5
	if ( ((int_64)$7 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10218])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-96])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	*($5 + [24]) = $5
	*($5 + [44]) = $6
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	*($5 + [48]) = ($1 + [48])
	*($5 + [52]) = ($1 + [64])
	*($5 + [56]) = ($1 + [72])
	CALL $45(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [92]), $2, $4, [88])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$7
	*($5 + [32]) = *($6)
	if ( (CALL $18(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$8 }
	$4 = ($1 + [96])
	$1 = *($4)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$9 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607749779137757184, ($5 + [24]), $7)
	*($4) = $1
	
.LABEL $label$9
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$8
	$global$0 = ($5 + [64])
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $3($1)
	
.LABEL $label$2
	*(CALL $7()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $3(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $5($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $9 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $7())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $8($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $6 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

int_32 .FUNC $7 ()
{
	return [8208]
}

int_32 .FUNC $4 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ((int_32)$1 * (int_32)$0)
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = uint_32($1 >> [16])
	$3 = (*([0] + [8204]) + $2)
	*([0] + [8204]) = $3
	$0 = *([0] + [8196])
	$4 = ((($0 + $1) + [7]) & [-8])
	*([0] + [8196]) = $4
	if ( ((uint_32)($3 << [16]) <= (uint_32)$4) ){ goto $label$5 }
	if ( ((int_32)$2 == (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	*([0] + [8204]) = ($3 + [1])
	if ( ((int_32)($2 + [1]) != (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [8568])
	if ( $0 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ($0 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memset($0, [0], $1)
	return $0
	
.LABEL $label$1
	return [0]
}

void .FUNC $5 (int_32 $0)
{
}

int_32 .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $3 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8568])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $0 ()
{
	CALL $6()
	CALL $87()
}

void .FUNC apply (int_64 $0, int_64 apply, int_64 $2)
{
	CALL $0()
	CALL $71($0, $1)
	CALL $72($0, $1)
	CALL $75($0, $1)
	CALL $76($0, $1)
	CALL $77($0, $1)
	CALL $78($0, $1)
	CALL $79($0, $1)
	CALL $80($0, $1)
	CALL $81($0, $1)
	CALL $82($0, $1)
	CALL $83($0, $1)
	CALL eosio_assert_code([0], (int_64)8000000000000000000)
	CALL eosio_assert_code([0], (int_64)8000000000000000001)
	CALL $25([0])
	((int_64)$0 == (int_64)$1)
	((int_64)5031766152489992192 == (int_64)$2)
	((int_64)8516769789752901632 == (int_64)$2)
	((int_64)-4993669930013425664 == (int_64)$2)
	((int_64)-3617168760277827584 == (int_64)$2)
	((int_64)-6533262907872903168 == (int_64)$2)
	((int_64)4929617502180212736 == (int_64)$2)
	((int_64)-4710022880430129152 == (int_64)$2)
	((int_64)-4710020678303088640 == (int_64)$2)
	((int_64)-4710013512219721728 == (int_64)$2)
	((int_64)3607749779030941696 == (int_64)$2)
	((int_64)-8281831791770206208 == (int_64)$2)
	((int_64)$0 != (int_64)6138663577826885632)
	((int_64)6138663577826885632 == (int_64)$1)
	((int_64)-6569208335818555392 == (int_64)$2)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $9(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $9(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	return CALL $14($0, $1)
}

void .FUNC $16 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $5($0)
	
.LABEL $label$1
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
	CALL $16($0, $1)
}

int_32 .FUNC $10 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $3($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $3($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $11 (int_32 $0)
{
	return CALL $10($0)
}

void .FUNC $12 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $5($0)
	
.LABEL $label$1
}

void .FUNC $13 (int_32 $0)
{
	CALL $12($0)
}

void .FUNC $75 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [128])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [84]) = $2
	*($3 + [80]) = $2
	$5 = ($2 + $4)
	*($3 + [88]) = $5
	*($3 + [72]) = (int_64)0
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	$5 = *(($3 + [88]))
	$2 = *($3 + [84])
	
.LABEL $label$5
	CALL memcpy(($3 + [64]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [84]) = $2
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	$2 = *($3 + [84])
	
.LABEL $label$6
	CALL memcpy(($3 + [16]), $2, [8])
	*((($3 + [64]) + [8])) = *($3 + [16])
	*($3 + [84]) = ($2 + [8])
	*($3 + [56]) = [0]
	*($3 + [48]) = (int_64)0
	CALL $73(($3 + [80]), ($3 + [48]))
	*(($2 = ($3 + [8]))) = *((($3 + [80]) + [8]))
	*($3) = *($3 + [80])
	*(($4 = (($3 + [96]) + [8]))) = *($2)
	*($3 + [96]) = *($3)
	$2 = *($4)
	*((($3 + [112]) + [8])) = $2
	*(($3 + [40])) = $2
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$0 = *($3 + [96])
	*($3 + [32]) = $0
	*($3 + [112]) = $0
	CALL $61(($3 + [16]), ($3 + [64]), ($3 + [48]))
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$7 }
	CALL $12(*(($3 + [56])))
	
.LABEL $label$7
	$global$0 = ($3 + [128])
}

int_32 .FUNC $18 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

void .FUNC $19 (int_32 $0)
{
	*($0) = [1]
}

void .FUNC $58 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10121])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10167])
	
.LABEL $label$2
	$5 = ($1 + [40])
	*($4 + [16]) = *($5)
	$6 = *($2 + [8])
	$8 = *($1 + [8])
	$7 = *($2)
	if ( ((int_64)*($7 + [8]) == (int_64)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$3
	$9 = ((int_64)*($1) + (int_64)*($7))
	*($1) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9827])
	$9 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9846])
	
.LABEL $label$5
	*($5) = *(*($2 + [4]))
	if ( ((int_64)((int_64)*(*($2 + [12])) | (int_64)8) == (int_64)8) ){ goto $label$7 }
	if ( ((int_64)*($6) == (int_64)*(*($2 + [16]))) ){ goto $label$6 }
	
.LABEL $label$7
	$7 = *($2)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$8 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$8
	$9 = ((int_64)*($1 + [24]) + (int_64)*($7))
	*($1 + [24]) = $9
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$9 }
	CALL eosio_assert([0], [9827])
	$9 = *(($1 + [24]))
	
.LABEL $label$9
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [9846])
	
.LABEL $label$6
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)*(*($2 + [16])) != (int_64)*($6)) ){ goto $label$10 }
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)*(($1 + [80]))) ){ goto $label$11 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$11
	$8 = ((int_64)*($1 + [72]) + (int_64)*($2))
	*($1 + [72]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$12 }
	CALL eosio_assert([0], [9827])
	$8 = *(($1 + [72]))
	
.LABEL $label$12
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$10 }
	CALL eosio_assert([0], [9846])
	
.LABEL $label$10
	if ( ((int_64)$9 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$13 }
	CALL eosio_assert([0], [10218])
	
.LABEL $label$13
	$3 = $3
	$2 = ($3 + [-96])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($3 + [-8])
	*($4 + [24]) = $4
	*($4 + [44]) = $5
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [24])
	*($4 + [48]) = ($1 + [48])
	*($4 + [52]) = ($1 + [64])
	*($4 + [56]) = ($1 + [72])
	CALL $45(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [92]), (int_64)0, $2, [88])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$14 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$14
	*($4 + [32]) = *($5)
	if ( (CALL $18(($4 + [16]), ($4 + [32]), [8]) == 0) ){ goto $label$15 }
	$2 = ($1 + [96])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$16 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607749779137757184, ($4 + [24]), $9)
	*($2) = $1
	
.LABEL $label$16
	CALL db_idx64_update($1, (int_64)0, ($4 + [32]))
	
.LABEL $label$15
	$global$0 = ($4 + [64])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [8])
	$7 = *($5)
	*($1) = *($7)
	*(($1 + [8])) = *(($7 + [8]))
	if ( ((int_64)((int_64)*(*($5 + [4])) | (int_64)8) != (int_64)8) ){ goto $label$2 }
	$7 = *($5)
	*($1 + [24]) = *($7)
	*(($1 + [32])) = *(($7 + [8]))
	goto $label$1 
	
.LABEL $label$2
	*(($1 + [32])) = *(*($5) + [8])
	*($1 + [24]) = (int_64)0
	
.LABEL $label$1
	*($1 + [40]) = *(*(($5 + [4])))
	*(($1 + [56])) = *(*($5) + [8])
	*($1 + [48]) = (int_64)0
	$7 = ($1 + [40])
	if ( ((int_64)*(*($5 + [12])) != (int_64)*($6)) ){ goto $label$4 }
	$5 = *($5)
	*($1 + [72]) = *($5)
	*(($1 + [80])) = *(($5 + [8]))
	$6 = ($1 + [72])
	goto $label$3 
	
.LABEL $label$4
	*(($1 + [80])) = *(*($5) + [8])
	*($1 + [72]) = (int_64)0
	$6 = ($1 + [72])
	
.LABEL $label$3
	$2 = $2
	$5 = ($2 + [-96])
	$global$0 = $5
	*($3 + [12]) = $5
	*($3 + [8]) = $5
	*($3 + [16]) = ($2 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [16])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [24])
	*($3 + [44]) = $7
	*($3 + [48]) = ($1 + [48])
	*($3 + [52]) = ($1 + [64])
	*($3 + [56]) = $6
	CALL $45(($3 + [32]), ($3 + [24]))
	$8 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [92]) = CALL db_store_i64(*($4 + [8]), (int_64)3607749779137757184, *(*($0 + [8])), $8), $5, [88])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$5
	$8 = *(($4 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *(($1 + [8]))
	*($3 + [32]) = *(($1 + [40]))
	*($1 + [96]) = CALL db_idx64_store($8, (int_64)3607749779137757184, $9, (uint_64)$10 >> (uint_64)(int_64)8), ($3 + [32]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10006])
	
.LABEL $label$5
	$4 = CALL $3($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $5)
	*(($5 = CALL $10([56])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = $0
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($5 + [16])
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + [32])
	CALL $85(($3 + [32]), ($3 + [24]))
	*($5 + [44]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [32]) = $7)
	*($3 + [4]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $52(($0 + [24]), ($3 + [24]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $5($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10080])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $6) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10080])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy($6, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10080])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $52 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $53 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [128])
	$global$0 = $5
	$6 = [0]
	$7 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$8 = $7)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$8 = $9
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$7 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8628])
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($3 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8910])
	
.LABEL $label$1
	$3 = [0]
	*(($5 + [80])) = [0]
	*($5 + [64]) = (int_64)-1
	*($5 + [72]) = (int_64)0
	$8 = *($0)
	*($5 + [48]) = $8
	*($5 + [56]) = $7
	$6 = CALL db_find_i64($8, $7, (int_64)-4157508551318700032, $7)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	$3 = CALL $50(($5 + [48]), $6)
	if ( ((int_32)*($3 + [40]) == (int_32)($5 + [48])) ){ goto $label$8 }
	CALL eosio_assert([0], [9955])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [8939])
	
.LABEL $label$8
	CALL require_auth(*($3 + [32]))
	$7 = *($2)
	if ( ((uint_64)((int_64)$7 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$12 }
	$8 = (uint_64)*(($2 + [8])) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	$8 = $9
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$16 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_64)$7 <= (int_64)0) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [8999])
	if ( ((int_64)*($2) > (int_64)0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL eosio_assert([0], [9016])
	
.LABEL $label$10
	if ( ((int_64)*(($2 + [8])) == (int_64)*($3 + [8])) ){ goto $label$17 }
	CALL eosio_assert([0], [9045])
	
.LABEL $label$17
	if ( ((int_64)*($2) <= (int_64))(*($3 + [16]) - *($3))) ){ goto $label$18 }
	CALL eosio_assert([0], [9071])
	
.LABEL $label$18
	*($5 + [8]) = $2
	CALL $54(($5 + [48]), $3, ($5 + [8]))
	CALL $55($0, $1, $2, ($3 + [32]), $4)
	*((($5 + [8]) + [32])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	*($5 + [44]) = [0]
	$8 = *($0)
	*($5 + [8]) = $8
	*($5 + [16]) = $8
	$6 = CALL db_find_i64($8, $8, (int_64)-3020371635640205312, *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$22 }
	if ( ((int_32)*(CALL $56(($5 + [8]), $6) + [16]) == (int_32)($5 + [8])) ){ goto $label$21 }
	CALL eosio_assert([0], [9955])
	$11 = *($5 + [32])
	if ( $11 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$9 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [8])) ){ goto $label$23 }
	CALL eosio_assert([0], [10029])
	
.LABEL $label$23
	*(($6 = CALL $10([32])) + [16]) = ($5 + [8])
	*($6) = *($1)
	*($6 + [8]) = *($4)
	CALL memcpy(($5 + [96]), $6, [8])
	$10 = ($6 + [8])
	CALL memcpy((($5 + [96]) | [8]), $10, [8])
	$8 = *($6)
	$11 = (($5 + [8]) + [8])
	*($6 + [20]) = CALL db_store_i64(*($11), (int_64)-3020371635640205312, $9, $8, ($5 + [96]), [16])
	$2 = (($5 + [8]) + [16])
	if ( (uint_64)($8 <= *($2)) ){ goto $label$24 }
	*($2) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$24
	$8 = *($6)
	$7 = *($11)
	*($5 + [120]) = *($10)
	*($6 + [24]) = CALL db_idx64_store($7, (int_64)-3020371635640205312, $9, $8, ($5 + [120]))
	*($5 + [120]) = $6
	$8 = *($6)
	*($5 + [96]) = $8
	$11 = *(($6 + [20]))
	*($5 + [92]) = $11
	$2 = ($5 + [36])
	$10 = *($2)
	if ( ((uint_32)$10 >= (uint_32)*((($5 + [8]) + [32]))) ){ goto $label$26 }
	*($10 + [8]) = $8
	*($10 + [16]) = $11
	*($5 + [120]) = [0]
	*($10) = $6
	*($2) = ($10 + [24])
	$6 = *($5 + [120])
	*($5 + [120]) = [0]
	if ( $6 ){ goto $label$25 }
	goto $label$21 
	
.LABEL $label$26
	CALL $57(($5 + [32]), ($5 + [120]), ($5 + [96]), ($5 + [92]))
	$6 = *($5 + [120])
	*($5 + [120]) = [0]
	if ( ($6 == 0) ){ goto $label$21 }
	
.LABEL $label$25
	CALL $12($6)
	
.LABEL $label$21
	$11 = *($5 + [32])
	if ( ($11 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	$2 = ($5 + [36])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$28 }
	
.LOOP $label$29:
	$6 = ($6 + [-24])
	$10 = *($6)
	*($6) = [0]
	if ( ($10 == 0) ){ goto $label$30 }
	CALL $12($10)
	
.LABEL $label$30
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$29 }
	$6 = *(($5 + [32]))
	goto $label$27 
	
.LABEL $label$28
	$6 = $11
	
.LABEL $label$27
	*($2) = $11
	CALL $12($6)
	
.LABEL $label$19
	$11 = *($5 + [72])
	if ( ($11 == 0) ){ goto $label$31 }
	$2 = ($5 + [76])
	$6 = *($2)
	if ( ((int_32)$6 == (int_32)$11) ){ goto $label$33 }
	
.LOOP $label$34:
	$6 = ($6 + [-24])
	$10 = *($6)
	*($6) = [0]
	if ( ($10 == 0) ){ goto $label$35 }
	CALL $12($10)
	
.LABEL $label$35
	if ( ((int_32)$11 != (int_32)$6) ){ goto $label$34 }
	$6 = *(($5 + [72]))
	goto $label$32 
	
.LABEL $label$33
	$6 = $11
	
.LABEL $label$32
	*($2) = $11
	CALL $12($6)
	
.LABEL $label$31
	$global$0 = ($5 + [128])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10121])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10167])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$3
	$6 = ((int_64)*($1) + (int_64)*($2))
	*($1) = $6
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9827])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9846])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10218])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $51(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8628])
	
.LABEL $label$1
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$6 = *($0)
	*($3 + [8]) = $6
	*($3 + [16]) = $5
	$8 = CALL db_find_i64($6, $5, (int_64)-4710026338415673344, $5)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$8 }
	$4 = CALL $30(($3 + [8]), $8)
	if ( ((int_32)*($4 + [24]) == (int_32)($3 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$9
	$6 = *($0)
	*($3 + [4]) = $1
	*($3) = $2
	if ( ($4 == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [8680])
	$6 = *($0)
	*($3 + [4]) = $1
	*($3) = $2
	if ( [0] ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10086])
	
.LABEL $label$6
	CALL $35(($3 + [8]), $4, $6, $3)
	$9 = *($3 + [32])
	if ( ($9 == 0) ){ goto $label$10 }
	$0 = ($3 + [36])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $12($8)
	
.LABEL $label$14
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$13 }
	$4 = *(($3 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$4 = $9
	
.LABEL $label$11
	*($0) = $9
	CALL $12($4)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10006])
	
.LABEL $label$5
	$2 = CALL $3($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $10([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$7
	$7 = ($5 + [8])
	CALL memcpy($5, $2, [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [24]) = [-1]
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $57(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $5($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $12($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $35 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10121])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10167])
	
.LABEL $label$2
	$6 = *($3)
	*($1) = *($6)
	$7 = *($1 + [8])
	$8 = *(($6 + [8]))
	*($1 + [8]) = $8
	*($1 + [16]) = *(*($3 + [4]))
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)$7) == (int_64)(uint_64)$8 >> (uint_64)(int_64)8)) ){ goto $label$3 }
	CALL eosio_assert([0], [10218])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-32])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	CALL $32($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, [24])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($5 + [16])
}

void .FUNC $29 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$1 = ($global$0 - [48])
	$global$0 = $1
	$2 = *([0] + [8560])
	$3 = *($0)
	$6 = ($0 & [1])
	$0 = *([0] + [8552])
	$5 = uint_32($0 >> [1])
	$4 = *([0] + [8556])
	$0 = ( $4 ? $5 : $6 )
	if ( ($0 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9578])
	goto $label$3 
	
.LABEL $label$4
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ( $2 ? [8553] : $6 )
	$7 = (int_64)0
	
.LOOP $label$5:
	$2 = (($4 + $0) + [-1])
	$6 = *($2)
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9623])
	$6 = *($2)
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$5 }
	$8 = ((int_64)$7 & (int_64)72057594037927935)
	$0 = *([0] + [8552])
	$5 = uint_32($0 >> [1])
	$6 = ($0 & [1])
	$4 = *([0] + [8556])
	$2 = *([0] + [8560])
	goto $label$1 
	
.LABEL $label$2
	$8 = (int_64)0
	
.LABEL $label$1
	*(($1 + [40])) = [0]
	*($1 + [16]) = $8
	*($1 + [8]) = $3
	*($1 + [24]) = (int_64)-1
	$7 = (int_64)0
	*($1 + [32]) = (int_64)0
	$0 = ( $4 ? $5 : $6 )
	if ( ($0 <= [8]) ){ goto $label$9 }
	CALL eosio_assert([0], [9578])
	goto $label$8 
	
.LABEL $label$9
	if ( ($0 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$4 = ( $2 ? [8553] : $6 )
	$7 = (int_64)0
	
.LOOP $label$10:
	$2 = (($4 + $0) + [-1])
	$6 = *($2)
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [9623])
	$6 = *($2)
	
.LABEL $label$11
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$10 }
	$7 = ((int_64)$7 & (int_64)72057594037927935)
	
.LABEL $label$7
	$0 = CALL db_find_i64($3, $8, (int_64)-4710026338415673344, $7)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$12 }
	$0 = CALL $30(($1 + [8]), $0)
	if ( ((int_32)*($0 + [24]) == (int_32)($1 + [8])) ){ goto $label$13 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$13
	if ( ((int_32)*($0) == (int_32)[1]) ){ goto $label$12 }
	CALL eosio_assert([0], [8593])
	
.LABEL $label$12
	$2 = *($1 + [32])
	if ( ($2 == 0) ){ goto $label$14 }
	$4 = ($1 + [36])
	$0 = *($4)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$16 }
	
.LOOP $label$17:
	$0 = ($0 + [-24])
	$6 = *($0)
	*($0) = [0]
	if ( ($6 == 0) ){ goto $label$18 }
	CALL $12($6)
	
.LABEL $label$18
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$17 }
	$0 = *(($1 + [32]))
	goto $label$15 
	
.LABEL $label$16
	$0 = $2
	
.LABEL $label$15
	*($4) = $2
	CALL $12($0)
	
.LABEL $label$14
	$global$0 = ($1 + [48])
}

void .FUNC $28 (int_32 $0)
{
	if ( (*([0] + [8552]) & [1]) ){ goto $label$3 }
	if ( (*([0] + [8512]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $12(*([0] + [8560]))
	if ( ((*([0] + [8512]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $12(*([0] + [8520]))
	return 
	
.LABEL $label$1
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	$5 = ($global$0 - [112])
	$global$0 = $5
	*(($5 + [64])) = [0]
	*($5 + [48]) = (int_64)-1
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = [0]
	$6 = *($0)
	*($5 + [32]) = $6
	$7 = *($1)
	*($5 + [40]) = $7
	$1 = CALL db_find_i64($6, $7, (int_64)3607749779137757184, (uint_64)*($2 + [8]) >> (uint_64)(int_64)8)
	if ( ((int_32)$1) < (int_32)[0]) ){ goto $label$3 }
	$1 = CALL $40(($5 + [32]), $1)
	if ( ((int_32)*($1 + [88]) == (int_32)($5 + [32])) ){ goto $label$4 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$4
	$6 = *($1 + [40])
	*($5 + [80]) = ( *($4) ? $6 : (int_64)($6 == 0) )
	*($5 + [8]) = $2
	*($5 + [16]) = $0
	*($5 + [20]) = $4
	*($5 + [24]) = $3
	*($5 + [12]) = ($5 + [80])
	CALL $58(($5 + [32]), $1, ($5 + [8]))
	$4 = *($5 + [56])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = *($3)
	*($5 + [12]) = $4
	*($5 + [8]) = $2
	*($5 + [16]) = $0
	*($5 + [20]) = $3
	*($5 + [104]) = $6
	if ( ((int_64)CALL current_receiver() == (int_64)*($5 + [32])) ){ goto $label$5 }
	CALL eosio_assert([0], [10029])
	
.LABEL $label$5
	*($5 + [84]) = ($5 + [8])
	*($5 + [80]) = ($5 + [32])
	*($5 + [88]) = ($5 + [104])
	*(($2 = CALL $10([104])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [72]) = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = ($5 + [32])
	CALL $59(($5 + [80]), $2)
	*($5 + [96]) = $2
	$6 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($5 + [80]) = $6)
	$4 = *($2 + [92])
	*($5 + [76]) = $4
	$3 = ($5 + [60])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)*(($5 + [64]))) ){ goto $label$8 }
	*($0 + [8]) = $6
	*($0 + [16]) = $4
	*($5 + [96]) = [0]
	*($0) = $2
	*($3) = ($0 + [24])
	$2 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( $2 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $60(($5 + [56]), ($5 + [96]), ($5 + [80]), ($5 + [76]))
	$2 = *($5 + [96])
	*($5 + [96]) = [0]
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $12($2)
	
.LABEL $label$6
	$4 = *($5 + [56])
	if ( ($4 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = ($5 + [60])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$12 }
	CALL $12($0)
	
.LABEL $label$12
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$11 }
	$2 = *(($5 + [56]))
	goto $label$9 
	
.LABEL $label$10
	$2 = $4
	
.LABEL $label$9
	*($3) = $4
	CALL $12($2)
	
.LABEL $label$1
	$global$0 = ($5 + [112])
}

void .FUNC $21 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $20 (int_32 $0)
{
	*($0) = [0]
}

void .FUNC $23 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $10(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $12($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $25 (int_32 $0)
{
}

int_64 .FUNC $24 ()
{
	int_64 $0
	if ( (*([0] + [8220]) == 0) ){ goto $label$1 }
	return *([0] + [8224])
	
.LABEL $label$1
	$0 = CALL current_time()
	*([0] + [8220]) = [1]
	*([0] + [8224]) = $0
	return $0
}

int_32 .FUNC $27 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL $2([9571])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($1 << [1])
	$2 = ($0 + [1])
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$3 = (($1 + [16]) & [-16])
	$2 = CALL $10($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $2
	*($0 + [4]) = $1
	
.LABEL $label$4
	CALL memcpy($2, [9571], $1)
	
.LABEL $label$3
	*(($2 + $1)) = [0]
	*($0 + [24]) = (int_64)2000
	*($0 + [16]) = (int_64)10000
	*($0 + [32]) = (int_64)20000
	*(($0 + [48])) = [0]
	*($0 + [40 align=4]) = (int_64)0
	$2 = ($0 + [40])
	$1 = CALL $2([9575])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$7 }
	*($2) = ($1 << [1])
	$2 = ($2 + [1])
	if ( $1 ){ goto $label$6 }
	*(($2 + $1)) = [0]
	return $0
	
.LABEL $label$7
	$3 = (($1 + [16]) & [-16])
	$2 = CALL $10($3)
	*($0 + [40]) = ($3 | [1])
	*(($0 + [48])) = $2
	*(($0 + [44])) = $1
	
.LABEL $label$6
	CALL memcpy($2, [9575], $1)
	*(($2 + $1)) = [0]
	return $0
	
.LABEL $label$2
	CALL $21($0)
	
.LABEL $label$1
	CALL $21($2)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $26 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	CALL $19([8232])
	$3 = *([0] + [8240])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *([0] + [8244])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$3 = [8248]
	*([0] + [8240]) = [8248]
	$4 = *([0] + [8244])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = CALL $4([260], [1])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = [0]
	*($3) = *([0] + [8240])
	*([0] + [8240]) = $3
	*([0] + [8244]) = [0]
	
.LABEL $label$2
	*([0] + [8244]) = ($4 + [1])
	*((($3 = ($3 + ($4 << [2]))) + [132])) = $1
	*(($3 + [4])) = $0
	CALL $20([8232])
	return [0]
	
.LABEL $label$1
	CALL $20([8232])
	return [-1]
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($1))
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	*($3 + [36]) = [0]
	$5 = *($0)
	*($3) = $5
	$6 = *($1)
	*($3 + [8]) = $6
	$1 = CALL db_find_i64($5, $6, (int_64)3607749779137757184, (uint_64)*($2) >> (uint_64)(int_64)8)
	if ( ((int_32)$1) <= (int_32)[-1]) ){ goto $label$3 }
	$4 = CALL $40($3, $1)
	if ( ((int_32)*($4 + [88]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$4
	if ( (int_64)(*($4) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [9449])
	if ( (int_64)(*([0]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [9525])
	
.LABEL $label$1
	if ( $4 ){ goto $label$5 }
	CALL eosio_assert([0], [10277])
	CALL eosio_assert([0], [10311])
	
.LABEL $label$5
	$1 = CALL db_next_i64(*($4 + [92]), ($3 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$6 }
	CALL $40($3, $1)
	
.LABEL $label$6
	CALL $70($3, $4)
	$2 = *($3 + [24])
	if ( ($2 == 0) ){ goto $label$7 }
	$0 = ($3 + [28])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	CALL $12($1)
	
.LABEL $label$11
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $2
	CALL $12($4)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

void .FUNC $68 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *(*(*($0 + [4])))
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = *($0)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$5 = $8
	$9 = $7
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = $8
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$9 = ((int_32)$7 < (int_32)[6])
	$10 = ($7 + [1])
	$7 = $10
	if ( $9 ){ goto $label$5 }
	$7 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8628])
	
.LABEL $label$1
	*($1 + [8]) = $4
	*($1) = (int_64)0
	$9 = $2
	$7 = ($9 + [-96])
	$global$0 = $7
	*($3 + [12]) = $7
	*($3 + [8]) = $7
	*($3 + [16]) = ($9 + [-8])
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = ($1 + [16])
	*($3 + [32]) = $1
	*($3 + [40]) = ($1 + [24])
	$9 = ($1 + [40])
	*($3 + [44]) = $9
	*($3 + [48]) = ($1 + [48])
	*($3 + [52]) = ($1 + [64])
	*($3 + [56]) = ($1 + [72])
	CALL $45(($3 + [32]), ($3 + [24]))
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [92]) = CALL db_store_i64(*($6 + [8]), (int_64)3607749779137757184, *(*($0 + [8])), $5), $7, [88])
	if ( (uint_64)($5 <= *($6 + [16])) ){ goto $label$6 }
	*(($6 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$6
	$5 = *(($6 + [8]))
	$8 = *(*(($0 + [8])))
	$4 = *(($1 + [8]))
	*($3 + [32]) = *($9)
	*($1 + [96]) = CALL db_idx64_store($5, (int_64)3607749779137757184, $8, (uint_64)$4 >> (uint_64)(int_64)8), ($3 + [32]))
	$global$0 = ($3 + [64])
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [64])
	$global$0 = $5
	$6 = *($1)
	if ( ((int_64)$6 != (int_64)*($2)) ){ goto $label$1 }
	CALL eosio_assert([0], [9168])
	$6 = *($1)
	
.LABEL $label$1
	CALL require_auth($6)
	if ( CALL is_account(*($2)) ){ goto $label$2 }
	CALL eosio_assert([0], [9192])
	
.LABEL $label$2
	$6 = *($3 + [8])
	*(($5 + [56])) = [0]
	*($5 + [40]) = (int_64)-1
	*($5 + [48]) = (int_64)0
	*($5 + [24]) = *($0)
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	*($5 + [32]) = $6)
	$7 = CALL $66(($5 + [24]), $6, [9218])
	CALL require_recipient(*($1))
	CALL require_recipient(*($2))
	$8 = *($3)
	if ( ((uint_64)((int_64)$8 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$4 }
	$6 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$10 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$6 = $10
	$11 = $9
	$9 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$6 = $10
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = ((int_32)$9 < (int_32)[6])
	$12 = ($9 + [1])
	$9 = $12
	if ( $11 ){ goto $label$7 }
	$9 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8999])
	$8 = *($3)
	
.LABEL $label$3
	if ( ((int_64)$8 > (int_64)0) ){ goto $label$8 }
	CALL eosio_assert([0], [9237])
	
.LABEL $label$8
	if ( ((int_64)*(($3 + [8])) == (int_64)*($7 + [8])) ){ goto $label$9 }
	CALL eosio_assert([0], [9045])
	
.LABEL $label$9
	if ( ((*($4) & [1]) == 0) ){ goto $label$10 }
	if ( (*($4 + [4]) <= [257]) ){ goto $label$10 }
	CALL eosio_assert([0], [8910])
	
.LABEL $label$10
	*($5 + [16]) = *(( $2 ? $1 : CALL has_auth(*($2)) ))
	CALL $29($0)
	CALL $46($0, *($1), *($2))
	CALL $63($0, $1, $3)
	*($5 + [8]) = (int_64)0
	CALL $55($0, $2, $3, ($5 + [16]), ($5 + [8]))
	$12 = *($5 + [48])
	if ( ($12 == 0) ){ goto $label$11 }
	$2 = ($5 + [52])
	$9 = *($2)
	if ( ((int_32)$9 == (int_32)$12) ){ goto $label$13 }
	
.LOOP $label$14:
	$9 = ($9 + [-24])
	$11 = *($9)
	*($9) = [0]
	if ( ($11 == 0) ){ goto $label$15 }
	CALL $12($11)
	
.LABEL $label$15
	if ( ((int_32)$12 != (int_32)$9) ){ goto $label$14 }
	$9 = *(($5 + [48]))
	goto $label$12 
	
.LABEL $label$13
	$9 = $12
	
.LABEL $label$12
	*($2) = $12
	CALL $12($9)
	
.LABEL $label$11
	$global$0 = ($5 + [64])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10121])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10167])
	
.LABEL $label$2
	$6 = ($1 + [40])
	*($5 + [16]) = *($6)
	$8 = *($1 + [8])
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)$8) ){ goto $label$3 }
	CALL eosio_assert([0], [9864])
	
.LABEL $label$3
	$9 = (int_64)
	*($1) = $9(*($1) - *($7)))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9912])
	$9 = *($1)
	
.LABEL $label$4
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9934])
	
.LABEL $label$5
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [32]))) ){ goto $label$6 }
	CALL eosio_assert([0], [9864])
	
.LABEL $label$6
	$9 = (int_64)
	*($1 + [24]) = $9(*($1 + [24]) - *($7)))
	if ( ((int_64)$9 > (int_64)-4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [9912])
	$9 = *(($1 + [24]))
	
.LABEL $label$7
	if ( ((int_64)$9 < (int_64)4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [9934])
	
.LABEL $label$8
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ($1 + [48])
	$10 = *($3)
	if ( ((uint_64)(int_64))(*(*($3 + [4])) - *(*($3 + [8]) + [64])) >= (uint_64)*([0] + [8624])) ){ goto $label$10 }
	if ( ((int_64)*($10 + [8]) == (int_64)*(($1 + [56]))) ){ goto $label$11 }
	CALL eosio_assert([0], [9784])
	
.LABEL $label$11
	$8 = ((int_64)*($7) + (int_64)*($10))
	*($7) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$12 }
	CALL eosio_assert([0], [9827])
	$8 = *($7)
	
.LABEL $label$12
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$9 }
	CALL eosio_assert([0], [9846])
	goto $label$9 
	
.LABEL $label$10
	*($7) = *($10)
	*(($7 + [8])) = *(($10 + [8]))
	
.LABEL $label$9
	*($1 + [64]) = *(*(($3 + [4])))
	$10 = ($1 + [64])
	if ( ((int_64)$9 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$13 }
	CALL eosio_assert([0], [10218])
	
.LABEL $label$13
	$4 = $4
	$3 = ($4 + [-96])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	*($5 + [24]) = $5
	*($5 + [44]) = $6
	*($5 + [48]) = $7
	*($5 + [52]) = $10
	*($5 + [32]) = $1
	*($5 + [36]) = ($1 + [16])
	*($5 + [40]) = ($1 + [24])
	*($5 + [56]) = ($1 + [72])
	CALL $45(($5 + [32]), ($5 + [24]))
	CALL db_update_i64(*($1 + [92]), $2, $3, [88])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$14 }
	*(($0 + [16])) = ((int_64)$9 + (int_64)1)
	
.LABEL $label$14
	*($5 + [32]) = *($6)
	if ( (CALL $18(($5 + [16]), ($5 + [32]), [8]) == 0) ){ goto $label$15 }
	$3 = ($1 + [96])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$16 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607749779137757184, ($5 + [24]), $9)
	*($3) = $1
	
.LABEL $label$16
	CALL db_idx64_update($1, $2, ($5 + [32]))
	
.LABEL $label$15
	$global$0 = ($5 + [64])
}

void .FUNC $67 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [128])
	$global$0 = $4
	CALL require_auth(*($3))
	if ( CALL is_account(*($1)) ){ goto $label$1 }
	CALL eosio_assert([0], [9398])
	
.LABEL $label$1
	$5 = *($2)
	*((($4 + [48]) + [32])) = [0]
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	*($4 + [56]) = $5)
	*($4 + [64]) = (int_64)-1
	*($4 + [72]) = (int_64)0
	*($4 + [48]) = *($0)
	if ( ((int_64)*(CALL $66(($4 + [48]), $5, [9427]) + [8]) == (int_64)*($2)) ){ goto $label$2 }
	CALL eosio_assert([0], [9045])
	
.LABEL $label$2
	*((($4 + [8]) + [32])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [44]) = [0]
	$6 = *($0)
	*($4 + [8]) = $6
	$7 = *($1)
	*($4 + [16]) = $7
	$0 = CALL db_find_i64($6, $7, (int_64)3607749779137757184, $5)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $40(($4 + [8]), $0) + [88]) == (int_32)($4 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [9955])
	$1 = *($4 + [32])
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$5 = *($3)
	*($4) = $2
	*($4 + [120]) = $5
	if ( ((int_64)CALL current_receiver() == (int_64)*($4 + [8])) ){ goto $label$7 }
	CALL eosio_assert([0], [10029])
	
.LABEL $label$7
	*($4 + [100]) = $4
	*($4 + [96]) = ($4 + [8])
	*($4 + [104]) = ($4 + [120])
	*(($2 = CALL $10([104])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [72]) = (int_64)0
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = ($4 + [8])
	CALL $68(($4 + [96]), $2)
	*($4 + [112]) = $2
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	*($4 + [96]) = $5)
	$1 = *($2 + [92])
	*($4 + [92]) = $1
	$3 = ($4 + [36])
	$0 = *($3)
	if ( ((uint_32)$0 >= (uint_32)*(($4 + [40]))) ){ goto $label$9 }
	*($0 + [8]) = $5
	*($0 + [16]) = $1
	*($4 + [112]) = [0]
	*($0) = $2
	*($3) = ($0 + [24])
	$2 = *($4 + [112])
	*($4 + [112]) = [0]
	if ( $2 ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$9
	CALL $60(($4 + [32]), ($4 + [112]), ($4 + [96]), ($4 + [92]))
	$2 = *($4 + [112])
	*($4 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	
.LABEL $label$8
	CALL $12($2)
	
.LABEL $label$5
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = ($4 + [36])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$13 }
	CALL $12($0)
	
.LABEL $label$13
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($4 + [32]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $1
	
.LABEL $label$10
	*($3) = $1
	CALL $12($2)
	
.LABEL $label$3
	$1 = *($4 + [72])
	if ( ($1 == 0) ){ goto $label$14 }
	$3 = ($4 + [76])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$18 }
	CALL $12($0)
	
.LABEL $label$18
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($4 + [72]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $1
	
.LABEL $label$15
	*($3) = $1
	CALL $12($2)
	
.LABEL $label$14
	$global$0 = ($4 + [128])
}

int_32 .FUNC $66 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($0 + [28]))
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)(uint_64)*($6 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9955])
	return $6
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4157508551318700032, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$6 = CALL $50($0, $5)
	if ( ((int_32)*($6 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [9955])
	return $6
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	
.LABEL $label$1
	return $6
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$7 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [8628])
	if ( ((*($2) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	if ( (*($2 + [4]) <= [257]) ){ goto $label$1 }
	CALL eosio_assert([0], [8910])
	
.LABEL $label$1
	$2 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$6 = *($0)
	*($3 + [8]) = $6
	*($3 + [16]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4157508551318700032, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$9 }
	$2 = CALL $50(($3 + [8]), $4)
	if ( ((int_32)*($2 + [40]) == (int_32)($3 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [9955])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [9105])
	
.LABEL $label$8
	CALL require_auth(*($2 + [32]))
	$5 = *($1)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$6 = (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$6 = $7
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$14 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [8999])
	$5 = *($1)
	
.LABEL $label$10
	if ( ((int_64)$5 > (int_64)0) ){ goto $label$15 }
	CALL eosio_assert([0], [9138])
	
.LABEL $label$15
	if ( ((int_64)*(($1 + [8])) == (int_64)*($2 + [8])) ){ goto $label$16 }
	CALL eosio_assert([0], [9045])
	
.LABEL $label$16
	*($3) = $1
	CALL $62(($3 + [8]), $2, $3)
	CALL $63($0, ($2 + [32]), $1)
	$9 = *($3 + [32])
	if ( ($9 == 0) ){ goto $label$17 }
	$1 = ($3 + [36])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$19 }
	
.LOOP $label$20:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL $12($8)
	
.LABEL $label$21
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$20 }
	$4 = *(($3 + [32]))
	goto $label$18 
	
.LABEL $label$19
	$4 = $9
	
.LABEL $label$18
	*($1) = $9
	CALL $12($4)
	
.LABEL $label$17
	$global$0 = ($3 + [48])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $63 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [64])
	$global$0 = $3
	*(($3 + [56])) = [0]
	*($3 + [40]) = (int_64)-1
	*($3 + [48]) = (int_64)0
	*($3 + [60]) = [0]
	*($3 + [24]) = *($0)
	*($3 + [32]) = *($1)
	$5 = *($2)
	$4 = CALL $43(($3 + [24]), (uint_64)*($2 + [8]) >> (uint_64)(int_64)8), [9269]
	if ( ((int_64)*($4)) >= (int_64)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [9293])
	$5 = *($2)
	
.LABEL $label$1
	if ( ((int_64)*($4 + [24]) >= (int_64)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [9293])
	
.LABEL $label$2
	$6 = (CASTING uint_32)(uint_64 ((int_64)CALL $24() / (int_64)1000000))
	*($3 + [20]) = $6
	if ( ((int_64)*($1) == (int_64)*($0)) ){ goto $label$3 }
	$5 = *($4 + [64])
	$7 = *([0] + [8528])
	if ( ((uint_64)((uint_64)*($2) / (uint_64)$7) <= (uint_64)((int_64)*([0] + [8536]) * (int_64)$7)) ){ goto $label$4 }
	CALL eosio_assert([0], [9311])
	$6 = *($3 + [20])
	
.LABEL $label$4
	if ( ((uint_64)(int_64))((CASTING uint_64)(uint_32 $6) - $5) >= (uint_64)*([0] + [8624])) ){ goto $label$3 }
	$5 = *([0] + [8528])
	if ( ((uint_64)((uint_64)((int_64)*($4 + [48]) + (int_64)*($2)) / (uint_64)$5) <= (uint_64)((int_64)*([0] + [8544]) * (int_64)$5)) ){ goto $label$3 }
	CALL eosio_assert([0], [9336])
	
.LABEL $label$3
	$5 = *($1)
	*($3 + [8]) = $2
	*($3 + [16]) = $4
	*($3 + [12]) = ($3 + [20])
	CALL $64(($3 + [24]), $4, $5, ($3 + [8]))
	$1 = *($3 + [48])
	if ( ($1 == 0) ){ goto $label$5 }
	$0 = ($3 + [52])
	$2 = *($0)
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($2 + [-24])
	$4 = *($2)
	*($2) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	CALL $12($4)
	
.LABEL $label$9
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$8 }
	$2 = *(($3 + [48]))
	goto $label$6 
	
.LABEL $label$7
	$2 = $1
	
.LABEL $label$6
	*($0) = $1
	CALL $12($2)
	
.LABEL $label$5
	$global$0 = ($3 + [64])
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10121])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10167])
	
.LABEL $label$2
	$5 = *($1 + [8])
	$2 = *($2)
	if ( ((int_64)*($2 + [8]) == (int_64)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [9864])
	
.LABEL $label$3
	$6 = (int_64)
	*($1) = $6(*($1) - *($2)))
	if ( ((int_64)$6 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [9912])
	$6 = *($1)
	
.LABEL $label$4
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)$6 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [9934])
	
.LABEL $label$5
	if ( ((int_64)$5 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10218])
	
.LABEL $label$6
	$2 = $3
	$3 = ($2 + [-48])
	$global$0 = $3
	*($4 + [12]) = $3
	*($4 + [8]) = $3
	*($4 + [16]) = ($2 + [-8])
	*($4 + [24]) = ($4 + [8])
	*($4 + [32]) = $1
	*($4 + [36]) = ($1 + [16])
	*($4 + [40]) = ($1 + [32])
	CALL $51(($4 + [32]), ($4 + [24]))
	CALL db_update_i64(*($1 + [44]), (int_64)0, $3, [40])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($4 + [48])
}

void .FUNC $87 ()
{
	CALL $27([8512])
	CALL $26([1], [0], [8192])
}

void .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $10($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $23($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $12($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10489])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10489])
	$6 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$0 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10489])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($6, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*($6 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$6 = *($0 + [12])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$6
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10489])
	$6 = *($5)
	
.LABEL $label$8
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$6 = *($0 + [20])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10489])
	$5 = *(($4 + [4]))
	
.LABEL $label$9
	CALL memcpy($6, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0 + [24])
	$1 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10489])
	$1 = *(($0 + [4]))
	
.LABEL $label$10
	CALL memcpy($4, $1, [8])
	$1 = (*($1) + [8])
	*(($1 = ($0 + [4]))) = $1
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $1) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10489])
	$1 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $1, [8])
	*($4 + [8]) = *($2 + [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $83 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $38($3, *($3 + [40]), *($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $82 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [48]), $5, [8])
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $47(($3 + [8]), $0, *($3 + [48]), *($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $81 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [8])
	*((($3 + [40]) + [8])) = *($3 + [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $36(($3 + [8]), $3, ($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $80 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [8])
	*((($3 + [40]) + [8])) = *($3 + [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $34(($3 + [8]), ($3 + [56]), ($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $72 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	*($3 + [72]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	$5 = *((($3 + [96]) + [8]))
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [72]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	$2 = *($3 + [100])
	
.LABEL $label$7
	CALL memcpy(($3 + [16]), $2, [8])
	*((($3 + [72]) + [8])) = *($3 + [16])
	*($3 + [100]) = ($2 + [8])
	*($3 + [64]) = [0]
	*($3 + [56]) = (int_64)0
	CALL $73(($3 + [96]), ($3 + [56]))
	$2 = *($3 + [100])
	$4 = (($3 + [96]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10489])
	$2 = *($3 + [100])
	
.LABEL $label$8
	CALL memcpy(($3 + [48]), $2, [8])
	*($3 + [100]) = (*($3 + [100]) + [8])
	*(($2 = ($3 + [8]))) = *($4)
	*($3) = *($3 + [96])
	*(($4 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3)
	$2 = *($4)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [40])) = $2
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$0 = *($3 + [112])
	*($3 + [32]) = $0
	*($3 + [128]) = $0
	CALL $53(($3 + [16]), ($3 + [88]), ($3 + [72]), ($3 + [56]), ($3 + [48]))
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($3 + [64])))
	
.LABEL $label$9
	$global$0 = ($3 + [144])
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $74($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $10($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $22($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $22($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $21($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $12($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10341])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10386])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($5 + [-24])) + [8]) ^ (int_64)$7) <= (int_64)256) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((uint_64)((int_64)*(*($10) + [8]) ^ (int_64)$7) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10436])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $12($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $12($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [92]))
	$9 = *(($1 + [96]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)3607749779137757184, ($2 + [8]), (uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)
	if ( ((int_32)$9) < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $71 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [8])
	*((($3 + [40]) + [8])) = *($3 + [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $49(($3 + [8]), ($3 + [56]), ($3 + [40]))
	$global$0 = ($3 + [64])
}

void .FUNC $76 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [144])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [100]) = $2
	*($3 + [96]) = $2
	$5 = ($2 + $4)
	*($3 + [104]) = $5
	*($3 + [88]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$5
	CALL memcpy(($3 + [88]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [80]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	$5 = *((($3 + [96]) + [8]))
	$2 = *($3 + [100])
	
.LABEL $label$6
	CALL memcpy(($3 + [80]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [72]) = (int_64)0
	*($3 + [64]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	$5 = *(($3 + [104]))
	$2 = *($3 + [100])
	
.LABEL $label$7
	CALL memcpy(($3 + [64]), $2, [8])
	$2 = ($2 + [8])
	*($3 + [100]) = $2
	*($3 + [16]) = (int_64)0
	if ( ((uint_32)($5 - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10489])
	$2 = *($3 + [100])
	
.LABEL $label$8
	CALL memcpy(($3 + [16]), $2, [8])
	*((($3 + [64]) + [8])) = *($3 + [16])
	*($3 + [100]) = ($2 + [8])
	*($3 + [56]) = [0]
	*($3 + [48]) = (int_64)0
	CALL $73(($3 + [96]), ($3 + [48]))
	*(($2 = ($3 + [8]))) = *((($3 + [96]) + [8]))
	*($3) = *($3 + [96])
	*(($5 = (($3 + [112]) + [8]))) = *($2)
	*($3 + [112]) = *($3)
	$2 = *($5)
	*((($3 + [128]) + [8])) = $2
	*(($3 + [40])) = $2
	*($3 + [16]) = $0
	*($3 + [24]) = $1
	$0 = *($3 + [112])
	*($3 + [32]) = $0
	*($3 + [128]) = $0
	CALL $65(($3 + [16]), ($3 + [88]), ($3 + [80]), ($3 + [64]), ($3 + [48]))
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$9 }
	CALL $12(*(($3 + [56])))
	
.LABEL $label$9
	$global$0 = ($3 + [144])
}

void .FUNC $77 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [8]), $5, [8])
	*($3 + [48]) = *($3 + [8])
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$7
	CALL memcpy(($3 + [40]), $5, [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $67(($3 + [8]), ($3 + [56]), ($3 + [48]), ($3 + [40]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10494])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $86($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-3020371635640205312, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [16]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9955])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $56($7, CALL $fimport$23(*($7), *($7 + [8]), (int_64)-3020371635640205312, $6))
	if ( ((int_32)*($4 + [16]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$2
	*(($4 + [24])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $36 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$2 = $4
	$4 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $2 ){ goto $label$5 }
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8628])
	
.LABEL $label$1
	$4 = [0]
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$6 = *($0)
	*($3) = $6
	*($3 + [8]) = $5
	$2 = CALL db_find_i64($6, $5, (int_64)-4710026338415673344, $5)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$7 }
	$4 = CALL $30($3, $2)
	if ( ((int_32)*($4 + [24]) == (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [9955])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [8680])
	CALL eosio_assert([0], [10277])
	CALL eosio_assert([0], [10311])
	
.LABEL $label$6
	$2 = CALL db_next_i64(*($4 + [28]), ($3 + [40]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$8 }
	CALL $30($3, $2)
	
.LABEL $label$8
	CALL $37($3, $4)
	$8 = *($3 + [24])
	if ( ($8 == 0) ){ goto $label$9 }
	$0 = ($3 + [28])
	$4 = *($0)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$11 }
	
.LOOP $label$12:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$13 }
	CALL $12($2)
	
.LABEL $label$13
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$12 }
	$4 = *(($3 + [24]))
	goto $label$10 
	
.LABEL $label$11
	$4 = $8
	
.LABEL $label$10
	*($0) = $8
	CALL $12($4)
	
.LABEL $label$9
	$global$0 = ($3 + [48])
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10341])
	
.LABEL $label$1
	if ( ((int_64)CALL current_receiver() == (int_64)*($0)) ){ goto $label$2 }
	CALL eosio_assert([0], [10386])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10436])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $12($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $12($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [28]))
}

void .FUNC $78 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [40]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [40]), $2, [8])
	*($3 + [32]) = (int_64)0
	*($3) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$6
	CALL memcpy($3, $6, [8])
	*($3 + [32]) = *($3)
	*(($3 + [24])) = $5
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	CALL $69($3, ($3 + [40]), ($3 + [32]))
	$global$0 = ($3 + [48])
}

void .FUNC $79 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $3($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [56]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$5
	CALL memcpy(($3 + [56]), $2, [8])
	*($3 + [48]) = (int_64)0
	*($3 + [40]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$6
	$4 = ($2 + $4)
	CALL memcpy(($3 + [40]), $5, [8])
	*($3 + [8]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$7
	CALL memcpy(($3 + [8]), $5, [8])
	*((($3 + [40]) + [8])) = *($3 + [8])
	*((($3 + [8]) + [24])) = $4
	*($3 + [24]) = $2
	*(($3 + [28])) = ($2 + [24])
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	CALL $31(($3 + [8]), ($3 + [56]), ($3 + [40]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10080])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10080])
	$4 = *($3)
	
.LABEL $label$2
	$6 = ($1 + [16])
	CALL memcpy($4, ($2 + [8]), [8])
	$1 = (*($3) + [8])
	*($3) = $1
	if ( ((int_32)(*($5) - $1) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10080])
	$1 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $6, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $10(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $23($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $12($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $12($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10006])
	
.LABEL $label$5
	$2 = CALL $3($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $10([40])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$8
	$8 = ($5 + [16])
	CALL memcpy(($3 + [24]), $7, [8])
	*(($5 + [8])) = *($3 + [24])
	$7 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$9 }
	CALL eosio_assert([0], [10489])
	
.LABEL $label$9
	CALL memcpy($8, $7, [8])
	*($5 + [28]) = $1
	*($3 + [16]) = $5
	$9 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($3 + [24]) = $9)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $33(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $5($2)
	
.LABEL $label$10
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $12($1)
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $31 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [96])
	$global$0 = $3
	CALL require_auth(*($0))
	$4 = [0]
	$5 = (uint_64)*($2 + [8]) >> (uint_64)(int_64)8
	$6 = $5)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$6 = $7
	$8 = $4
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$6 = $7
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$8 = ((int_32)$4 < (int_32)[6])
	$9 = ($4 + [1])
	$4 = $9
	if ( $8 ){ goto $label$5 }
	$4 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [8628])
	
.LABEL $label$1
	*(($3 + [32])) = [0]
	*($3 + [16]) = (int_64)-1
	*($3 + [24]) = (int_64)0
	$6 = *($0)
	*($3) = $6
	*($3 + [8]) = $5
	$4 = CALL db_find_i64($6, $5, (int_64)-4710026338415673344, $5)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $30($3, $4) + [24]) == (int_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [9955])
	
.LABEL $label$7
	CALL eosio_assert([0], [8648])
	
.LABEL $label$6
	$7 = *($0)
	if ( ((int_64)CALL current_receiver() == (int_64)*($3)) ){ goto $label$8 }
	CALL eosio_assert([0], [10029])
	
.LABEL $label$8
	*(($4 = CALL $10([40])) + [24]) = $3
	*($4 + [8]) = *(($2 + [8]))
	*($4) = *($2)
	*($4 + [16]) = *($1)
	*($3 + [88]) = (($3 + [48]) + [24])
	*($3 + [84]) = ($3 + [48])
	*($3 + [80]) = ($3 + [48])
	CALL $32(($3 + [80]), $4)
	$6 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	$9 = CALL db_store_i64(*(($3 + [8])), (int_64)-4710026338415673344, $7, $6), ($3 + [48]), [24]
	*($4 + [28]) = $9)
	$8 = ($3 + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$9 }
	*($8) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$9
	*($3 + [80]) = $4
	$6 = (uint_64)*(($4 + [8])) >> (uint_64)(int_64)8
	*($3 + [48]) = $6)
	*($3 + [44]) = $9
	$2 = ($3 + [28])
	$8 = *($2)
	if ( ((uint_32)$8 >= (uint_32)*(($3 + [32]))) ){ goto $label$12 }
	*($8 + [8]) = $6
	*($8 + [16]) = $9
	*($3 + [80]) = [0]
	*($8) = $4
	*($2) = ($8 + [24])
	$4 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( $4 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $33(($3 + [24]), ($3 + [80]), ($3 + [48]), ($3 + [44]))
	$4 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $12($4)
	
.LABEL $label$10
	$9 = *($3 + [24])
	if ( ($9 == 0) ){ goto $label$13 }
	$2 = ($3 + [28])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$15 }
	
.LOOP $label$16:
	$4 = ($4 + [-24])
	$8 = *($4)
	*($4) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $12($8)
	
.LABEL $label$17
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$16 }
	$4 = *(($3 + [24]))
	goto $label$14 
	
.LABEL $label$15
	$4 = $9
	
.LABEL $label$14
	*($2) = $9
	CALL $12($4)
	
.LABEL $label$13
	$global$0 = ($3 + [96])
}