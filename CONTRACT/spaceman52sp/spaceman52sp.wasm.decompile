(data (i32.const 4) " h\00\00")
(data (i32.const 16) "Hello\00")
(data (i32.const 32) "cannot create objects in table of another contract\00")
(data (i32.const 96) "next primary key in table is at autoincrement limit\00")
(data (i32.const 160) "write\00")
(data (i32.const 176) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 240) "cannot decrement iterator at beginning of table\00")
(data (i32.const 288) "error reading iterator\00")
(data (i32.const 320) "read\00")
(data (i32.const 336) "0123456789\00")
(data (i32.const 352) "Receiving transfer message: from \00")
(data (i32.const 400) " to \00")
(data (i32.const 416) "\n\00")
(data (i32.const 432) "10 eos start\00")
(data (i32.const 448) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 512) "\e8\b6\85\e8\bf\87\e5\89\a9\e4\bd\99\e5\8b\9f\e8\b5\84\e9\a2\9d\e5\ba\a6\00")
(data (i32.const 544) "\e6\af\8f\e4\b8\aa\e8\b4\a6\e6\88\b7\e6\9c\80\e5\a4\9a\e6\8a\95\e6\94\be1000EOS\00")
(data (i32.const 576) "invalid symbol name\00")
(data (i32.const 608) "active\00")
(data (i32.const 624) "eosio.token\00")
(data (i32.const 640) "transfer\00")
(data (i32.const 656) "pluto52earth\00")
(data (i32.const 672) "refound eos to xu\00")
(data (i32.const 704) "newborn12345\00")
(data (i32.const 720) "refound eos to hao\00")
(data (i32.const 752) "baiyubosseos\00")
(data (i32.const 768) "refound eos to bai\00")
(data (i32.const 800) "newping55555\00")
(data (i32.const 816) "refound eos to chen \00")
(data (i32.const 848) "eostoken4123\00")
(data (i32.const 864) "refound eos to cheng\00")
(data (i32.const 896) "yujianyang15\00")
(data (i32.const 912) "refound eos to yu\00")
(data (i32.const 944) "lizhilei1234\00")
(data (i32.const 960) "refound eos to li\00")
(data (i32.const 992) "wang123bozhi\00")
(data (i32.const 1008) "refound eos to zhi\00")
(data (i32.const 1040) "ericmemo1112\00")
(data (i32.const 1056) "refound eos to wei\00")
(data (i32.const 1088) "harley312345\00")
(data (i32.const 1104) "refound eos to harley\00")
(data (i32.const 1136) "qwertyue1234\00")
(data (i32.const 1152) "refound eos to leng\00")
(data (i32.const 1184) "arya11121212\00")
(data (i32.const 1200) "refound eos to smile\00")
(data (i32.const 1232) "souhouryo555\00")
(data (i32.const 1248) "refound eos to wang\00")
(data (i32.const 1280) "Madkitty \e5\85\a5\e8\82\a1\e5\88\86\e7\ba\a2\00")
(data (i32.const 1312) "cannot increment end iterator\00")
(data (i32.const 1344) "cannot pass end iterator to modify\00")
(data (i32.const 1392) "object passed to modify is not in multi_index\00")
(data (i32.const 1440) "cannot modify objects in table of another contract\00")
(data (i32.const 1504) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1568) "madkittygame\00")
(data (i32.const 1584) "issue\00")
(data (i32.const 1600) "issue MKT\00")
(data (i32.const 1616) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1680) "onerror\00")
(data (i32.const 1696) "eosio\00")
(data (i32.const 1712) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 1776) "get\00")
(data (i32.const 10176) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "__udivti3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__umodti3" (func $fimport$1 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$2))
(import "env" "action_data_size" (func $fimport$3 (result i32)))
(import "env" "current_receiver" (func $fimport$4 (result i64)))
(import "env" "current_time" (func $fimport$5 (result i64)))
(import "env" "db_end_i64" (func $fimport$6 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$11 (param i32 i32) (result i32)))
(import "env" "db_store_i64" (func $fimport$12 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$13 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$14 (param i32 i32)))
(import "env" "memcpy" (func $fimport$15 (param i32 i32 i32) (result i32)))
(import "env" "printn" (func $fimport$16 (param i64)))
(import "env" "prints" (func $fimport$17 (param i32)))
(import "env" "read_action_data" (func $fimport$18 (param i32 i32) (result i32)))
(import "env" "require_auth2" (func $fimport$19 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$20 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$21 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN5eosio7charity2hiEy" (func $5))
(export "_ZN5eosio7charity10makeRecordEyxx" (func $6))
(export "_ZN5eosio15uint128ToStringERKo" (func $13))
(export "_ZN5eosio7charity8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $14))
(export "apply" (func $32))
(export "malloc" (func $39))
(export "free" (func $42))
(export "memcmp" (func $53))
(export "strlen" (func $54))
(table $0 3 3 anyfunc)
(elem (i32.const 0) $55 $5 $14)



void .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $23($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [160])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [160])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $29(CALL $30($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($7 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$5 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $43(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $51($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($1)
	*($8 + [16]) = *($1 + [16])
	*(($8 + [8])) = *(($1 + [8]))
	$7 = ($1 + [20])
	*(($8 + [20])) = *($7)
	*($7) = [0]
	$7 = ($1 + [24])
	$3 = *($7)
	*($7) = [0]
	*(($8 + [24])) = $3
	*($1 + [16]) = [0]
	*($8 + [28]) = *($1 + [28])
	$7 = ($1 + [32])
	*(($8 + [32])) = *($7)
	$3 = ($1 + [36])
	$4 = *($3)
	*($3) = [0]
	*(($8 + [36])) = $4
	*($7) = [0]
	*($1 + [28]) = [0]
	$4 = ($6 + ((int_32)$5 * (int_32)[40]))
	$2 = ($8 + [40])
	$1 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$6 }
	$3 = ([0] - $1)
	$1 = ($5 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($5 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($1 + [-4])
	*($5) = *($7)
	*(($8 + [-20])) = *($1)
	$5 = ($1 + [4])
	*($6) = *($5)
	*($5) = [0]
	*(($5 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($1 + [8])
	*($5) = *($7)
	*(($8 + [-8])) = *(($1 + [12]))
	$5 = ($1 + [16])
	*($6) = *($5)
	*($5) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$1 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $1
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $2
	*(($0 + [8])) = $4
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$8 }
	$5 = ([0] - $6)
	$8 = ($1 + [-24])
	
.LOOP $label$9:
	$1 = *(($8 + [12]))
	if ( ($1 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $1
	CALL $44($1)
	
.LABEL $label$10
	$1 = *($8)
	if ( ($1 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $1
	CALL $44($1)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $5) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $44($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $40([1780], $0)
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [160])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [160])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [160])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [160])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $29($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $21 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $44($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $44($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $44($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $44($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $44($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $44($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $44($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $44($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $25($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $23($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $26($4, $1)
	CALL $28(CALL $27(CALL $27($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $43($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $51($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $44($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $22 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $43([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [24])
	$1 = ( *(($4 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [24])
	$2 = (CASTING uint_64)(uint_32 $1)
	$5 = ($4 + [24])
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $23($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9) = $8
	*($9 + [8]) = $1
	CALL eosio_assert(((int_32)($1 - $8) > (int_32)[7]), [160])
	CALL memcpy($8, $4, [8])
	$6 = ($8 + [8])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [160])
	CALL memcpy($6, ($4 + [8]), [8])
	$6 = ($8 + [16])
	CALL eosio_assert(((int_32)($1 - $6) > (int_32)[7]), [160])
	CALL memcpy($6, ($4 + [16]), [8])
	*($9 + [4]) = ($8 + [24])
	CALL $24($9, $5)
	*([0] + [4]) = ($9 + [16])
	return $0
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [160])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [160])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [160])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [160])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [160])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $29(CALL $30($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [160])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [160])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [160])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [160])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [160])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [160])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $50($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

void .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $43($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $44($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $43 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [10268])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [10164])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [9972]
	$1 = (((int_32)$2 * (int_32)[12]) + [9972])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $41 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [10262]) == 0) ){ goto $label$2 }
	$7 = *([0] + [10264])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [10262]) = [1]
	$7 = ($7 << [16])
	*([0] + [10264]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [10264])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [10264]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [10262]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [10262]) = [1]
	$3 = ($3 << [16])
	*([0] + [10264]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [10264])
	
.LABEL $label$8
	*([0] + [10264]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $41($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [10176])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $47 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $48($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $43(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $44($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $45 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $44 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $51 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $8 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $43(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $51($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $44($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $44($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $9 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [288])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $43([48])) + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	CALL $12(($8 + [32]), ($8 + [24]))
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [36])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $8(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $44($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN5eosio7charity10makeRecordEyxx (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	*($8 + [32]) = $1
	*($8 + [24]) = $2
	*($8 + [16]) = $3
	$3 = *($0)
	*($8) = $0
	*($8 + [4]) = ($8 + [32])
	*($8 + [8]) = ($8 + [24])
	*($8 + [12]) = ($8 + [16])
	*($8 + [72]) = $3
	CALL eosio_assert(((int_64)*($0 + [48]) == (int_64)CALL $fimport$4()), [32])
	$6 = ($0 + [48])
	*($8 + [48]) = $6
	*($8 + [52]) = $8
	*($8 + [56]) = ($8 + [72])
	*(($4 = CALL $43([48])) + [32]) = $6
	CALL $7(($8 + [48]), $4)
	*($8 + [64]) = $4
	$3 = *($4)
	*($8 + [48]) = $3
	$5 = *($4 + [36])
	*($8 + [44]) = $5
	$7 = ($0 + [76])
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [80]))) ){ goto $label$2 }
	*($6 + [8]) = $3
	*($6 + [16]) = $5
	*($8 + [64]) = [0]
	*($6) = $4
	*($7) = ($6 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $8(($0 + [72]), ($8 + [64]), ($8 + [48]), ($8 + [44]))
	
.LABEL $label$1
	$0 = *($8 + [64])
	*($8 + [64]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	CALL $44($0)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [80])
}

void .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [48])
	$9 = $10
	*([0] + [4]) = $10
	$2 = *($0)
	$3 = *($0 + [4])
	$4 = *($3)
	$8 = ($4 + [64])
	$7 = *($8)
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$5 = ($4 + [48])
	$6 = CALL db_lowerbound_i64(*($5), *(($4 + [56])), (int_64)-5003134543285190656, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	CALL $9($5, $6)
	*($9 + [36]) = [0]
	*($9 + [32]) = $5
	$7 = *(*(CALL $10(($9 + [32])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($4 + [64])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [96])
	*($1) = *($8)
	*($1 + [8]) = *(*($3 + [4]))
	*($1 + [16]) = *(*($3 + [8]))
	*($1 + [24]) = *(*($3 + [12]))
	$10 = $10
	$3 = ($10 + [-32])
	*([0] + [4]) = $3
	*($9 + [12]) = $3
	*($9 + [8]) = $3
	*($9 + [16]) = $10
	*($9 + [24]) = ($9 + [8])
	*($9 + [36]) = ($1 + [8])
	*($9 + [32]) = $1
	*($9 + [40]) = ($1 + [16])
	*($9 + [44]) = ($1 + [24])
	CALL $11(($9 + [32]), ($9 + [24]))
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)-5003134543285190656, *(*($0 + [8])), $7, $3, [32])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($9 + [48])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN5eosio7charity2hiEy (int_32 $0, int_64 $1)
{
	CALL prints([16])
	CALL printn($1)
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN5eosio7charity8transferEyyNS_5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	float_64 $25
	int_64 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_64 $45
	int_32 $46
	int_64 $47
	int_64 $48
	int_64 $49
	int_64 $50
	int_32 $51
	int_32 $52
	int_32 $53
	$53 = (*([0] + [4]) - [240])
	*([0] + [4]) = $53
	CALL prints([352])
	CALL printn($1)
	CALL prints([400])
	CALL printn($2)
	CALL prints([416])
	$50 = *($0)
	if ( ((int_64)$50 == (int_64)$1) ){ goto $label$16 }
	if ( ((int_64)$50 != (int_64)$2) ){ goto $label$16 }
	if ( ((int_64)*($3 + [8]) != (int_64)1397703940) ){ goto $label$16 }
	$2 = *($3)
	CALL eosio_assert((int_64)(((int_64)$2 % (int_64)100000) == 0), [432])
	$5 = *($0)
	$32 = *(($0 + [32]))
	$41 = *(($0 + [36]))
	if ( ((int_32)$41 == (int_32)$32) ){ goto $label$17 }
	$46 = ($41 + [-24])
	$16 = ([0] - $32)
	
.LOOP $label$18:
	if ( ((int_64)*(*($46)) == (int_64)$5) ){ goto $label$17 }
	$41 = $46
	$40 = ($46 + [-24])
	$46 = $40
	if ( ((int_32)($40 + $16) != (int_32)[-24]) ){ goto $label$18 }
	
.LABEL $label$17
	$6 = ($0 + [8])
	if ( ((int_32)$41 == (int_32)$32) ){ goto $label$21 }
	$46 = *(($41 + [-24]))
	CALL eosio_assert(((int_32)*($46 + [24]) == (int_32)$6), [448])
	if ( $46 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$21
	$46 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)5380477996647841792, $5)
	if ( ((int_32)$46 < (int_32)[0]) ){ goto $label$20 }
	CALL eosio_assert(((int_32)*(CALL $15($6, $46) + [24]) == (int_32)$6), [448])
	goto $label$19 
	
.LABEL $label$20
	$47 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [32])
	*(($46 = CALL $43([40])) + [24]) = $6
	*($46 + [8]) = (int_64)0
	*($46) = $5
	*($46 + [16]) = (int_64)0
	CALL eosio_assert([1], [160])
	CALL memcpy(($53 + [176]), $46, [8])
	CALL eosio_assert([1], [160])
	CALL memcpy((($53 + [176]) | [8]), ($46 + [8]), [8])
	CALL eosio_assert([1], [160])
	CALL memcpy((($53 + [176]) + [16]), ($46 + [16]), [8])
	$50 = *($46)
	$41 = CALL db_store_i64(*(($0 + [16])), (int_64)5380477996647841792, $47, $50, ($53 + [176]), [24])
	*($46 + [28]) = $41
	$40 = ($0 + [24])
	if ( (uint_64)($50 <= *($40)) ){ goto $label$22 }
	*($40) = ( (int_64)-2 ? ((int_64)$50 + (int_64)1) : ((uint_64)$50 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	*($53 + [64]) = $46
	$50 = *($46)
	*($53 + [176]) = $50
	*($53 + [136]) = $41
	$16 = ($0 + [36])
	$40 = *($16)
	if ( ((uint_32)$40 >= (uint_32)*(($0 + [40]))) ){ goto $label$24 }
	*($40 + [8]) = $50
	*($40 + [16]) = $41
	*($53 + [64]) = [0]
	*($40) = $46
	*($16) = ($40 + [24])
	goto $label$23 
	
.LABEL $label$24
	CALL $16(($0 + [32]), ($53 + [64]), ($53 + [176]), ($53 + [136]))
	
.LABEL $label$23
	$46 = *($53 + [64])
	*($53 + [64]) = [0]
	if ( ($46 == 0) ){ goto $label$19 }
	CALL $44($46)
	
.LABEL $label$19
	$50 = *($0)
	$32 = *(($0 + [32]))
	$41 = *(($0 + [36]))
	if ( ((int_32)$41 == (int_32)$32) ){ goto $label$25 }
	$46 = ($41 + [-24])
	$16 = ([0] - $32)
	
.LOOP $label$26:
	if ( ((int_64)*(*($46)) == (int_64)$50) ){ goto $label$25 }
	$41 = $46
	$40 = ($46 + [-24])
	$46 = $40
	if ( ((int_32)($40 + $16) != (int_32)[-24]) ){ goto $label$26 }
	
.LABEL $label$25
	if ( ((int_32)$41 == (int_32)$32) ){ goto $label$28 }
	$7 = *(($41 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [448])
	goto $label$27 
	
.LABEL $label$28
	$7 = [0]
	$46 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)5380477996647841792, $50)
	if ( ((int_32)$46 < (int_32)[0]) ){ goto $label$27 }
	$7 = CALL $15($6, $46)
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [448])
	
.LABEL $label$27
	CALL eosio_assert(((int_64)$2 <= (int_64))((int_64)1050000000 - *($7 + [8]))), [512])
	$32 = *(($0 + [32]))
	$41 = *(($0 + [36]))
	if ( ((int_32)$41 == (int_32)$32) ){ goto $label$29 }
	$46 = ($41 + [-24])
	$16 = ([0] - $32)
	
.LOOP $label$30:
	if ( ((int_64)*(*($46)) == (int_64)$1) ){ goto $label$29 }
	$41 = $46
	$40 = ($46 + [-24])
	$46 = $40
	if ( ((int_32)($40 + $16) != (int_32)[-24]) ){ goto $label$30 }
	
.LABEL $label$29
	if ( ((int_32)$41 == (int_32)$32) ){ goto $label$35 }
	$9 = *(($41 + [-24]))
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [448])
	if ( $9 ){ goto $label$34 }
	$8 = [0]
	goto $label$32 
	
.LABEL $label$35
	$8 = [0]
	$46 = CALL db_find_i64(*(($0 + [8])), *(($0 + [16])), (int_64)5380477996647841792, $1)
	if ( ((int_32)$46 < (int_32)[0]) ){ goto $label$33 }
	$9 = CALL $15($6, $46)
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [448])
	
.LABEL $label$34
	$11 = ((int_64)*($9 + [8]) + (int_64)$2)
	$8 = [1]
	$10 = $9
	goto $label$31 
	
.LABEL $label$33
	$9 = [0]
	
.LABEL $label$32
	$10 = [0]
	$11 = $2
	
.LABEL $label$31
	CALL eosio_assert(((int_64)$11 < (int_64)10000001), [544])
	$44 = [0]
	$46 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)-5003134543285190656, (int_64)0)
	if ( ((int_32)$46 < (int_32)[0]) ){ goto $label$37 }
	$12 = ($0 + [48])
	$16 = CALL $9($12, $46)
	$15 = (($53 + [32]) | [1])
	$14 = (($53 + [48]) | [1])
	$13 = (($53 + [176]) + [36])
	$27 = ($53 + [188])
	$28 = (($53 + [176]) + [16])
	$29 = (($53 + [176]) + [20])
	$30 = (($53 + [176]) + [28])
	$31 = (($53 + [176]) + [32])
	$32 = (($53 + [176]) + [40])
	$33 = ($53 + [220])
	$34 = (($53 + [176]) + [48])
	$35 = ($53 + [228])
	$36 = (($53 + [176]) + [56])
	$37 = (($53 + [120]) + [8])
	$24 = $2
	
.LOOP $label$38:
	$45 = ((int_64)((int_64)$2 * (int_64)*($16 + [24])) / (int_64)1000000)
	CALL eosio_assert((uint_64)(((int_64)$45 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1616])
	$24 = (int_64))($24 - $45)
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	
.LOOP $label$43:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$40 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$43 }
	
.LABEL $label$42
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	$40 = [0]
	
.LABEL $label$39
	CALL eosio_assert($40, [576])
	$2 = CALL current_time()
	*($27) = [0]
	*($28) = [0]
	*($29) = [0]
	*((($53 + [176]) + [24])) = [0]
	*($30) = [0]
	*($31) = [0]
	*($53 + [176]) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($13) = [0]
	*($32) = [0]
	*($33) = [0]
	*($34) = [0]
	*($35) = [0]
	*($36) = [0]
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$49 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$40 = ($40 + [165])
	goto $label$47 
	
.LABEL $label$49
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$45
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$44 }
	*($37) = $48
	*($53 + [120]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$55 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$40 = ($40 + [165])
	goto $label$53 
	
.LABEL $label$55
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$51
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$50 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$56:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$61 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$60 }
	$40 = ($40 + [165])
	goto $label$59 
	
.LABEL $label$61
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$60
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$59
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$58
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$57
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$56 }
	*(($38 = (($53 + [48]) + [8]))) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([1280])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$64 }
	*($53 + [48]) = ($46 << [1])
	$40 = $14
	if ( $46 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$64
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($38) = $40
	*($53 + [48]) = ($41 | [1])
	*($53 + [52]) = $46
	
.LABEL $label$63
	CALL memcpy($40, [1280], $46)
	
.LABEL $label$62
	*(($40 + $46)) = [0]
	*(($39 = (($53 + [32]) + [8]))) = [0]
	$2 = (int_64)0
	*($53 + [32]) = (int_64)0
	$50 = *($16)
	CALL $46(($53 + [32]), [40])
	
.LOOP $label$65:
	CALL __umodti3(($53 + [16]), $50, $2, (int_64)10, (int_64)0)
	CALL __udivti3($53, $50, $2, (int_64)10, (int_64)0)
	CALL $49(($53 + [32]), *((*($53 + [16]) + [336])))
	$46 = ((uint_64)$50 > (uint_64)(int_64)9)
	$40 = ((int_64)$2 != (int_64)0)
	$41 = (int_64)($2 == 0)
	$2 = *(($53 + [8]))
	$50 = *($53)
	if ( ( $46 ? $40 : $41 ) ){ goto $label$65 }
	$52 = *($39)
	$46 = ($41 & [1])
	$41 = *($53 + [32])
	$51 = *($53 + [36])
	$40 = ( $51 ? uint_32($41 >> [1]) : $46 )
	if ( ($40 == 0) ){ goto $label$66 }
	$46 = ( $52 ? $15 : $46 )
	$40 = (($46 + $40) + [-1])
	if ( ((uint_32)$40 <= (uint_32)$46) ){ goto $label$66 }
	
.LOOP $label$67:
	$41 = *($46)
	*($46) = *($40)
	*($40) = $41
	$40 = ($40 + [-1])
	$46 = ($46 + [1])
	if ( ($46 <= $40) ){ goto $label$67 }
	$52 = *($39)
	$51 = *($53 + [36])
	$41 = *($53 + [32])
	
.LABEL $label$66
	$46 = ($41 & [1])
	$46 = CALL $47(($53 + [48]), ( $52 ? $15 : $46 ), ( $51 ? uint_32(($41 & [254]) >> [1]) : $46 ))
	$2 = *($46)
	*($46) = (int_64)0
	$40 = *($46 + [8])
	*($46 + [8]) = [0]
	*($53 + [64]) = *($0)
	*((($53 + [64]) + [8])) = *(($16 + [8]))
	*((($53 + [64]) + [16])) = $45
	*((($53 + [64]) + [24])) = (int_64)1397703940
	*(($41 = (($53 + [64]) + [32]))) = $2
	*(($52 = (($53 + [64]) + [40]))) = $40
	$40 = CALL $17(($53 + [136]), ($53 + [120]), $48, $49, ($53 + [64]))
	$46 = *($32)
	if ( ((uint_32)$46 >= (uint_32)*($33)) ){ goto $label$69 }
	*($46) = *($53 + [136])
	*($46 + [16 align=4]) = (int_64)0
	*(($46 + [8])) = *((($53 + [136]) + [8]))
	*(($40 = ($46 + [24]))) = [0]
	$51 = (($53 + [136]) + [16])
	*($46 + [16]) = *($51)
	$42 = (($53 + [136]) + [20])
	*(($46 + [20])) = *($42)
	$43 = (($53 + [136]) + [24])
	*($40) = *($43)
	*($51) = [0]
	*($42) = [0]
	*($43) = [0]
	*($46 + [28]) = [0]
	*(($40 = ($46 + [32]))) = [0]
	*(($51 = ($46 + [36]))) = [0]
	$42 = (($53 + [136]) + [28])
	*($46 + [28]) = *($42)
	$46 = (($53 + [136]) + [32])
	*($40) = *($46)
	$40 = (($53 + [136]) + [36])
	*($51) = *($40)
	*($42) = [0]
	*($46) = [0]
	*($40) = [0]
	*($32) = (*($32) + [40])
	goto $label$68 
	
.LABEL $label$69
	CALL $19($13, $40)
	$46 = *((($53 + [136]) + [28]))
	if ( ($46 == 0) ){ goto $label$68 }
	*((($53 + [136]) + [32])) = $46
	CALL $44($46)
	
.LABEL $label$68
	$46 = *((($53 + [136]) + [16]))
	if ( ($46 == 0) ){ goto $label$70 }
	*((($53 + [136]) + [20])) = $46
	CALL $44($46)
	
.LABEL $label$70
	if ( ((*($41) & [1]) == 0) ){ goto $label$71 }
	CALL $44(*($52))
	
.LABEL $label$71
	if ( ((*($53 + [32]) & [1]) == 0) ){ goto $label$72 }
	CALL $44(*($39))
	
.LABEL $label$72
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$73 }
	CALL $44(*($38))
	
.LABEL $label$73
	*($29) = [0]
	*($53 + [72]) = (int_64)0
	*($53 + [64]) = *($16)
	$2 = *($0)
	CALL $20(($53 + [136]), ($53 + [176]))
	$46 = *($53 + [136])
	CALL send_deferred(($53 + [64]), $2, $46, (*($53 + [140]) - $46), [0])
	$46 = *($53 + [136])
	if ( ($46 == 0) ){ goto $label$74 }
	*($53 + [140]) = $46
	CALL $44($46)
	
.LABEL $label$74
	CALL $21(($53 + [176]))
	CALL eosio_assert([1], [1312])
	$46 = CALL db_next_i64(*($16 + [36]), ($53 + [176]))
	if ( ((int_32)$46 <= (int_32)[-1]) ){ goto $label$36 }
	$16 = CALL $9($12, $46)
	$2 = *($3)
	goto $label$38 
	
.LABEL $label$37
	$24 = $2
	
.LABEL $label$36
	$25 = (CASTING float_64)(int_64 $24)
	$26 = (Rounds 0)(((float_64)$25 * (float_64)(float_64)0.29))
	CALL eosio_assert((uint_64)(((int_64)$26 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1616])
	$2 = (int_64)5459781
	
.LOOP $label$77:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$76 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$78 }
	
.LOOP $label$79:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$76 }
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$79 }
	
.LABEL $label$78
	$46 = [1]
	$44 = ($44 + [1])
	if ( ((int_32)$44 < (int_32)[7]) ){ goto $label$77 }
	goto $label$75 
	
.LABEL $label$76
	$46 = [0]
	
.LABEL $label$75
	CALL eosio_assert($46, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$80:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$85 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$84 }
	$40 = ($40 + [165])
	goto $label$83 
	
.LABEL $label$85
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$84
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$83
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$82
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$81
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$80 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$86:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$91 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$90 }
	$40 = ($40 + [165])
	goto $label$89 
	
.LABEL $label$91
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$90
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$89
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$88
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$87
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$86 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$92:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$97 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$96 }
	$40 = ($40 + [165])
	goto $label$95 
	
.LABEL $label$97
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$94 }
	goto $label$93 
	
.LABEL $label$96
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$95
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$94
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$93
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$92 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [656]
	$45 = (int_64)0
	
.LOOP $label$98:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$99 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$101 }
	$40 = ($40 + [165])
	goto $label$100 
	
.LABEL $label$101
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$100
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$99
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$98 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([672])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$104 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$103 }
	goto $label$102 
	
.LABEL $label$104
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$103
	CALL memcpy($40, [672], $46)
	
.LABEL $label$102
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $26
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$105 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$105
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$106 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$106
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$107 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$107
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$108 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$108
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$109 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$109
	$23 = (Rounds 0)(((float_64)$25 * (float_64)(float_64)0.05))
	$16 = (uint_64)(((int_64)$23 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($16, [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$112:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$111 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$113 }
	
.LOOP $label$114:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$111 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$114 }
	
.LABEL $label$113
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$112 }
	goto $label$110 
	
.LABEL $label$111
	$40 = [0]
	
.LABEL $label$110
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$115:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$120 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$119 }
	$40 = ($40 + [165])
	goto $label$118 
	
.LABEL $label$120
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$119
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$118
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$117
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$116
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$115 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$121:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$126 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$125 }
	$40 = ($40 + [165])
	goto $label$124 
	
.LABEL $label$126
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$123 }
	goto $label$122 
	
.LABEL $label$125
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$124
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$123
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$122
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$121 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$127:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$132 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$131 }
	$40 = ($40 + [165])
	goto $label$130 
	
.LABEL $label$132
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$131
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$130
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$129
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$128
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$127 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [704]
	$45 = (int_64)0
	
.LOOP $label$133:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$134 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$136 }
	$40 = ($40 + [165])
	goto $label$135 
	
.LABEL $label$136
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$135
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$134
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$133 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([720])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$139 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$139
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$138
	CALL memcpy($40, [720], $46)
	
.LABEL $label$137
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $23
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$140 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$140
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$141 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$141
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$142 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$142
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$143 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$143
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$144 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$144
	$22 = (Rounds 0)(((float_64)$25 * (float_64)(float_64)0.26))
	CALL eosio_assert((uint_64)(((int_64)$22 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$147:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$146 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$148 }
	
.LOOP $label$149:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$146 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$149 }
	
.LABEL $label$148
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$147 }
	goto $label$145 
	
.LABEL $label$146
	$40 = [0]
	
.LABEL $label$145
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$150:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$155 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$154 }
	$40 = ($40 + [165])
	goto $label$153 
	
.LABEL $label$155
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$152 }
	goto $label$151 
	
.LABEL $label$154
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$153
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$152
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$151
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$150 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$156:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$161 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$160 }
	$40 = ($40 + [165])
	goto $label$159 
	
.LABEL $label$161
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$158 }
	goto $label$157 
	
.LABEL $label$160
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$159
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$158
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$157
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$156 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$162:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$167 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$166 }
	$40 = ($40 + [165])
	goto $label$165 
	
.LABEL $label$167
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$164 }
	goto $label$163 
	
.LABEL $label$166
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$165
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$164
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$163
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$162 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [752]
	$45 = (int_64)0
	
.LOOP $label$168:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$169 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$171 }
	$40 = ($40 + [165])
	goto $label$170 
	
.LABEL $label$171
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$170
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$169
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$168 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([768])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$174 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$173 }
	goto $label$172 
	
.LABEL $label$174
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$173
	CALL memcpy($40, [768], $46)
	
.LABEL $label$172
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $22
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$175 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$175
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$176 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$176
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$177 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$177
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$178 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$178
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$179 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$179
	$21 = (Rounds 0)(((float_64)$25 * (float_64)(float_64)0.13))
	CALL eosio_assert((uint_64)(((int_64)$21 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$182:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$181 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$183 }
	
.LOOP $label$184:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$181 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$184 }
	
.LABEL $label$183
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$182 }
	goto $label$180 
	
.LABEL $label$181
	$40 = [0]
	
.LABEL $label$180
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$185:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$190 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$189 }
	$40 = ($40 + [165])
	goto $label$188 
	
.LABEL $label$190
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$187 }
	goto $label$186 
	
.LABEL $label$189
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$188
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$187
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$186
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$185 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$191:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$196 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$195 }
	$40 = ($40 + [165])
	goto $label$194 
	
.LABEL $label$196
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$193 }
	goto $label$192 
	
.LABEL $label$195
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$194
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$193
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$192
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$191 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$197:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$202 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$201 }
	$40 = ($40 + [165])
	goto $label$200 
	
.LABEL $label$202
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$199 }
	goto $label$198 
	
.LABEL $label$201
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$200
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$199
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$198
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$197 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [800]
	$45 = (int_64)0
	
.LOOP $label$203:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$204 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$206 }
	$40 = ($40 + [165])
	goto $label$205 
	
.LABEL $label$206
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$205
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$204
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$203 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([816])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$11 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$209 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$208 }
	goto $label$207 
	
.LABEL $label$209
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$208
	CALL memcpy($40, [816], $46)
	
.LABEL $label$207
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $21
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$210 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$210
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$211 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$211
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$212 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$212
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$213 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$213
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$214 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$214
	$20 = (Rounds 0)(((float_64)$25 * (float_64)(float_64)0.01))
	$41 = (uint_64)(((int_64)$20 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($41, [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$217:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$216 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$218 }
	
.LOOP $label$219:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$216 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$219 }
	
.LABEL $label$218
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$217 }
	goto $label$215 
	
.LABEL $label$216
	$40 = [0]
	
.LABEL $label$215
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$220:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$225 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$224 }
	$40 = ($40 + [165])
	goto $label$223 
	
.LABEL $label$225
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$222 }
	goto $label$221 
	
.LABEL $label$224
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$223
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$222
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$221
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$220 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$226:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$231 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$230 }
	$40 = ($40 + [165])
	goto $label$229 
	
.LABEL $label$231
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$228 }
	goto $label$227 
	
.LABEL $label$230
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$229
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$228
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$227
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$226 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$232:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$237 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$236 }
	$40 = ($40 + [165])
	goto $label$235 
	
.LABEL $label$237
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$234 }
	goto $label$233 
	
.LABEL $label$236
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$235
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$234
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$233
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$232 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [848]
	$45 = (int_64)0
	
.LOOP $label$238:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$239 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$241 }
	$40 = ($40 + [165])
	goto $label$240 
	
.LABEL $label$241
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$240
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$239
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$238 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([864])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$244 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$243 }
	goto $label$242 
	
.LABEL $label$244
	$32 = (($46 + [16]) & [-16])
	$40 = CALL $43($32)
	*($53 + [48]) = ($32 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$243
	CALL memcpy($40, [864], $46)
	
.LABEL $label$242
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $20
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$245 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$245
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$246 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$246
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$247 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$247
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$248 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$248
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$249 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$249
	$19 = (Rounds 0)(((float_64)$25 * (float_64)(float_64)0.04))
	CALL eosio_assert((uint_64)(((int_64)$19 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$252:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$251 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$253 }
	
.LOOP $label$254:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$251 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$254 }
	
.LABEL $label$253
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$252 }
	goto $label$250 
	
.LABEL $label$251
	$40 = [0]
	
.LABEL $label$250
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$255:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$260 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$259 }
	$40 = ($40 + [165])
	goto $label$258 
	
.LABEL $label$260
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$259
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$258
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$257
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$256
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$255 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$261:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$266 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$265 }
	$40 = ($40 + [165])
	goto $label$264 
	
.LABEL $label$266
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$263 }
	goto $label$262 
	
.LABEL $label$265
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$264
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$263
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$262
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$261 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$267:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$272 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$271 }
	$40 = ($40 + [165])
	goto $label$270 
	
.LABEL $label$272
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$269 }
	goto $label$268 
	
.LABEL $label$271
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$270
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$269
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$268
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$267 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [896]
	$45 = (int_64)0
	
.LOOP $label$273:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$274 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$276 }
	$40 = ($40 + [165])
	goto $label$275 
	
.LABEL $label$276
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$275
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$274
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$273 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([912])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$279 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$278 }
	goto $label$277 
	
.LABEL $label$279
	$32 = (($46 + [16]) & [-16])
	$40 = CALL $43($32)
	*($53 + [48]) = ($32 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$278
	CALL memcpy($40, [912], $46)
	
.LABEL $label$277
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $19
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$280 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$280
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$281 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$281
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$282 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$282
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$283 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$283
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$284 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$284
	CALL eosio_assert($16, [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$287:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$286 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$288 }
	
.LOOP $label$289:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$286 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$289 }
	
.LABEL $label$288
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$287 }
	goto $label$285 
	
.LABEL $label$286
	$40 = [0]
	
.LABEL $label$285
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$290:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$295 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$294 }
	$40 = ($40 + [165])
	goto $label$293 
	
.LABEL $label$295
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$292 }
	goto $label$291 
	
.LABEL $label$294
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$293
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$292
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$291
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$290 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$296:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$301 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$300 }
	$40 = ($40 + [165])
	goto $label$299 
	
.LABEL $label$301
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$298 }
	goto $label$297 
	
.LABEL $label$300
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$299
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$298
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$297
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$296 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$302:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$307 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$306 }
	$40 = ($40 + [165])
	goto $label$305 
	
.LABEL $label$307
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$304 }
	goto $label$303 
	
.LABEL $label$306
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$305
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$304
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$303
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$302 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [944]
	$45 = (int_64)0
	
.LOOP $label$308:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$309 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$311 }
	$40 = ($40 + [165])
	goto $label$310 
	
.LABEL $label$311
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$310
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$309
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$308 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([960])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$314 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$313 }
	goto $label$312 
	
.LABEL $label$314
	$16 = (($46 + [16]) & [-16])
	$40 = CALL $43($16)
	*($53 + [48]) = ($16 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$313
	CALL memcpy($40, [960], $46)
	
.LABEL $label$312
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $23
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$315 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$315
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$316 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$316
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$317 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$317
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$318 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$318
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$319 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$319
	CALL eosio_assert($41, [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$322:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$321 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$323 }
	
.LOOP $label$324:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$321 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$324 }
	
.LABEL $label$323
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$322 }
	goto $label$320 
	
.LABEL $label$321
	$40 = [0]
	
.LABEL $label$320
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$325:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$330 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$329 }
	$40 = ($40 + [165])
	goto $label$328 
	
.LABEL $label$330
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$327 }
	goto $label$326 
	
.LABEL $label$329
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$328
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$327
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$326
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$325 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$331:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$336 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$335 }
	$40 = ($40 + [165])
	goto $label$334 
	
.LABEL $label$336
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$333 }
	goto $label$332 
	
.LABEL $label$335
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$334
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$333
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$332
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$331 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$337:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$342 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$341 }
	$40 = ($40 + [165])
	goto $label$340 
	
.LABEL $label$342
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$339 }
	goto $label$338 
	
.LABEL $label$341
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$340
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$339
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$338
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$337 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [992]
	$45 = (int_64)0
	
.LOOP $label$343:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$344 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$346 }
	$40 = ($40 + [165])
	goto $label$345 
	
.LABEL $label$346
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$345
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$344
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$343 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([1008])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$349 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$348 }
	goto $label$347 
	
.LABEL $label$349
	$16 = (($46 + [16]) & [-16])
	$40 = CALL $43($16)
	*($53 + [48]) = ($16 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$348
	CALL memcpy($40, [1008], $46)
	
.LABEL $label$347
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $20
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$350 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$350
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$351 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$351
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$352 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$352
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$353 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$353
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$354 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$354
	CALL eosio_assert($41, [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$357:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$356 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$358 }
	
.LOOP $label$359:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$356 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$359 }
	
.LABEL $label$358
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$357 }
	goto $label$355 
	
.LABEL $label$356
	$40 = [0]
	
.LABEL $label$355
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$360:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$365 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$364 }
	$40 = ($40 + [165])
	goto $label$363 
	
.LABEL $label$365
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$362 }
	goto $label$361 
	
.LABEL $label$364
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$363
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$362
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$361
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$360 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$366:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$371 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$370 }
	$40 = ($40 + [165])
	goto $label$369 
	
.LABEL $label$371
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$368 }
	goto $label$367 
	
.LABEL $label$370
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$369
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$368
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$367
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$366 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$372:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$377 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$376 }
	$40 = ($40 + [165])
	goto $label$375 
	
.LABEL $label$377
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$374 }
	goto $label$373 
	
.LABEL $label$376
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$375
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$374
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$373
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$372 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [1040]
	$45 = (int_64)0
	
.LOOP $label$378:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$379 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$381 }
	$40 = ($40 + [165])
	goto $label$380 
	
.LABEL $label$381
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$380
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$379
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$378 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([1056])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$384 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$383 }
	goto $label$382 
	
.LABEL $label$384
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$383
	CALL memcpy($40, [1056], $46)
	
.LABEL $label$382
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $20
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$385 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$385
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$386 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$386
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$387 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$387
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$388 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$388
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$389 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$389
	$18 = (Rounds 0)(((float_64)$25 * (float_64)(float_64)0.02))
	CALL eosio_assert((uint_64)(((int_64)$18 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$392:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$391 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$393 }
	
.LOOP $label$394:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$391 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$394 }
	
.LABEL $label$393
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$392 }
	goto $label$390 
	
.LABEL $label$391
	$40 = [0]
	
.LABEL $label$390
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$395:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$400 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$399 }
	$40 = ($40 + [165])
	goto $label$398 
	
.LABEL $label$400
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$397 }
	goto $label$396 
	
.LABEL $label$399
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$398
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$397
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$396
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$395 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$401:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$406 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$405 }
	$40 = ($40 + [165])
	goto $label$404 
	
.LABEL $label$406
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$403 }
	goto $label$402 
	
.LABEL $label$405
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$404
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$403
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$402
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$401 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$407:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$412 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$411 }
	$40 = ($40 + [165])
	goto $label$410 
	
.LABEL $label$412
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$409 }
	goto $label$408 
	
.LABEL $label$411
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$410
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$409
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$408
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$407 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [1088]
	$45 = (int_64)0
	
.LOOP $label$413:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$414 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$416 }
	$40 = ($40 + [165])
	goto $label$415 
	
.LABEL $label$416
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$415
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$414
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$413 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([1104])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$419 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$418 }
	goto $label$417 
	
.LABEL $label$419
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$418
	CALL memcpy($40, [1104], $46)
	
.LABEL $label$417
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $18
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$420 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$420
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$421 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$421
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$422 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$422
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$423 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$423
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$424 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$424
	$17 = (Rounds 0)(((float_64)$25 * (float_64)(float_64)0.025))
	$41 = (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807)
	CALL eosio_assert($41, [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$427:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$426 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$428 }
	
.LOOP $label$429:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$426 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$429 }
	
.LABEL $label$428
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$427 }
	goto $label$425 
	
.LABEL $label$426
	$40 = [0]
	
.LABEL $label$425
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$430:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$435 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$434 }
	$40 = ($40 + [165])
	goto $label$433 
	
.LABEL $label$435
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$432 }
	goto $label$431 
	
.LABEL $label$434
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$433
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$432
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$431
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$430 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$436:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$441 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$440 }
	$40 = ($40 + [165])
	goto $label$439 
	
.LABEL $label$441
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$438 }
	goto $label$437 
	
.LABEL $label$440
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$439
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$438
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$437
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$436 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$442:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$447 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$446 }
	$40 = ($40 + [165])
	goto $label$445 
	
.LABEL $label$447
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$444 }
	goto $label$443 
	
.LABEL $label$446
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$445
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$444
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$443
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$442 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [1136]
	$45 = (int_64)0
	
.LOOP $label$448:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$449 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$451 }
	$40 = ($40 + [165])
	goto $label$450 
	
.LABEL $label$451
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$450
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$449
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$448 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([1152])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$454 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$453 }
	goto $label$452 
	
.LABEL $label$454
	$16 = (($46 + [16]) & [-16])
	$40 = CALL $43($16)
	*($53 + [48]) = ($16 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$453
	CALL memcpy($40, [1152], $46)
	
.LABEL $label$452
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $17
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$455 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$455
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$456 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$456
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$457 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$457
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$458 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$458
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$459 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$459
	CALL eosio_assert($41, [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$462:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$461 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$463 }
	
.LOOP $label$464:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$461 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$464 }
	
.LABEL $label$463
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$462 }
	goto $label$460 
	
.LABEL $label$461
	$40 = [0]
	
.LABEL $label$460
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$465:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$470 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$469 }
	$40 = ($40 + [165])
	goto $label$468 
	
.LABEL $label$470
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$467 }
	goto $label$466 
	
.LABEL $label$469
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$468
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$467
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$466
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$465 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$471:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$476 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$475 }
	$40 = ($40 + [165])
	goto $label$474 
	
.LABEL $label$476
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$473 }
	goto $label$472 
	
.LABEL $label$475
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$474
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$473
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$472
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$471 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$477:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$482 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$481 }
	$40 = ($40 + [165])
	goto $label$480 
	
.LABEL $label$482
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$479 }
	goto $label$478 
	
.LABEL $label$481
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$480
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$479
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$478
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$477 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [1184]
	$45 = (int_64)0
	
.LOOP $label$483:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$484 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$486 }
	$40 = ($40 + [165])
	goto $label$485 
	
.LABEL $label$486
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$485
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$484
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$483 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([1200])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$489 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$488 }
	goto $label$487 
	
.LABEL $label$489
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$488
	CALL memcpy($40, [1200], $46)
	
.LABEL $label$487
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $17
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$490 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$490
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$491 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$491
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$492 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$492
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$493 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$493
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$494 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$494
	$24 = (int_64)
	CALL eosio_assert((uint_64)(((int_64)$24(((int_64))((int_64))((int_64))((int_64))((int_64))($24 - $22) - $26) - $21) - $19) - $18) + (int_64)((int_64)$20 * (int_64)-3)) - ((int_64)((int_64)$23 + (int_64)$17) << (int_64)1))) + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1616])
	$2 = (int_64)5459781
	$46 = [0]
	
.LOOP $label$497:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$496 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$498 }
	
.LOOP $label$499:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$496 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$499 }
	
.LABEL $label$498
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$497 }
	goto $label$495 
	
.LABEL $label$496
	$40 = [0]
	
.LABEL $label$495
	CALL eosio_assert($40, [576])
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$500:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$505 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$504 }
	$40 = ($40 + [165])
	goto $label$503 
	
.LABEL $label$505
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$502 }
	goto $label$501 
	
.LABEL $label$504
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$503
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$502
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$501
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$500 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [624]
	$48 = (int_64)0
	
.LOOP $label$506:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$511 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$510 }
	$40 = ($40 + [165])
	goto $label$509 
	
.LABEL $label$511
	$50 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$508 }
	goto $label$507 
	
.LABEL $label$510
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$509
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$508
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$507
	$46 = ($46 + [1])
	$47 = ((int_64)$47 + (int_64)-5)
	$48 = ((int_64)$50 | (int_64)$48)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$506 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [640]
	$49 = (int_64)0
	
.LOOP $label$512:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$517 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$516 }
	$40 = ($40 + [165])
	goto $label$515 
	
.LABEL $label$517
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$514 }
	goto $label$513 
	
.LABEL $label$516
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$515
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$514
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$513
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$512 }
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [1232]
	$45 = (int_64)0
	
.LOOP $label$518:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$519 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$521 }
	$40 = ($40 + [165])
	goto $label$520 
	
.LABEL $label$521
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$520
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$519
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$45 = ((int_64)$47 | (int_64)$45)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$518 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([1248])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$524 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$523 }
	goto $label$522 
	
.LABEL $label$524
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$523
	CALL memcpy($40, [1248], $46)
	
.LABEL $label$522
	*(($40 + $46)) = [0]
	*(($53 + [200])) = (int_64)1397703940
	*(($53 + [212])) = *($53 + [52])
	*($53 + [184]) = $45
	$46 = ($53 + [56])
	*(($53 + [216])) = *($46)
	*($53 + [176]) = *($0)
	*($53 + [192]) = $24
	*($53 + [208]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $17(($53 + [64]), ($53 + [136]), $48, $49, ($53 + [176]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$525 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$525
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$526 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$526
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$527 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$527
	if ( ((*(($53 + [208])) & [1]) == 0) ){ goto $label$528 }
	CALL $44(*(($53 + [216])))
	
.LABEL $label$528
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$529 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$529
	$2 = *(($7 + [8]))
	$45 = (int_64)0
	$47 = *($3)
	if ( ((int_64)$47 < (int_64)1) ){ goto $label$531 }
	if ( ((int_64)$2 >= (int_64)50000000) ){ goto $label$531 }
	$50 = (int_64)
	$48 = ( $47 ? $50((int_64)50000000 - $2)) : ((int_64)$50 > (int_64)$47) 
	CALL _ZN5eosio7charity10makeRecordEyxx($0, $1, $48), (Rounds 0)(((float_64)((float_64)(CASTING float_64)(int_64 $48) * (float_64)(float_64)3e4) / (float_64)(float_64)5e7)))
	$2 = ((int_64)$48 + (int_64)$2)
	$50 = (int_64))($47 - $48)
	$45 = ((int_64)$48 * (int_64)800)
	goto $label$530 
	
.LABEL $label$531
	$50 = $47
	
.LABEL $label$530
	if ( ((int_64)$2 > (int_64)149999999) ){ goto $label$532 }
	if ( ((int_64)$50 < (int_64)1) ){ goto $label$532 }
	$48 = (int_64)
	$48 = ( $50 ? $48((int_64)150000000 - $2)) : ((int_64)$48 > (int_64)$50) 
	CALL _ZN5eosio7charity10makeRecordEyxx($0, $1, $48), (Rounds 0)(((float_64)((float_64)(CASTING float_64)(int_64 $48) * (float_64)(float_64)25e3) / (float_64)(float_64)1e8)))
	$2 = ((int_64)$48 + (int_64)$2)
	$50 = (int_64))($50 - $48)
	$45 = ((int_64)((int_64)$48 * (int_64)700) + (int_64)$45)
	
.LABEL $label$532
	if ( ((int_64)$2 > (int_64)349999999) ){ goto $label$533 }
	if ( ((int_64)$50 < (int_64)1) ){ goto $label$533 }
	$48 = (int_64)
	$48 = ( $50 ? $48((int_64)350000000 - $2)) : ((int_64)$48 > (int_64)$50) 
	CALL _ZN5eosio7charity10makeRecordEyxx($0, $1, $48), (Rounds 0)(((float_64)((float_64)(CASTING float_64)(int_64 $48) * (float_64)(float_64)2e4) / (float_64)(float_64)2e8)))
	$2 = ((int_64)$48 + (int_64)$2)
	$50 = (int_64))($50 - $48)
	$45 = ((int_64)((int_64)$48 * (int_64)600) + (int_64)$45)
	
.LABEL $label$533
	if ( ((int_64)$2 > (int_64)649999999) ){ goto $label$534 }
	if ( ((int_64)$50 < (int_64)1) ){ goto $label$534 }
	$48 = (int_64)
	$48 = ( $50 ? $48((int_64)650000000 - $2)) : ((int_64)$48 > (int_64)$50) 
	CALL _ZN5eosio7charity10makeRecordEyxx($0, $1, $48), (Rounds 0)(((float_64)((float_64)(CASTING float_64)(int_64 $48) * (float_64)(float_64)15e3) / (float_64)(float_64)3e8)))
	$2 = ((int_64)$48 + (int_64)$2)
	$50 = (int_64))($50 - $48)
	$45 = ((int_64)((int_64)$48 * (int_64)500) + (int_64)$45)
	
.LABEL $label$534
	if ( ((int_64)$2 > (int_64)1049999999) ){ goto $label$535 }
	if ( ((int_64)$50 < (int_64)1) ){ goto $label$535 }
	$2 = (int_64)
	$2 = ( $50 ? $2((int_64)1050000000 - $2)) : ((int_64)$2 > (int_64)$50) 
	CALL _ZN5eosio7charity10makeRecordEyxx($0, $1, $2), (Rounds 0)(((float_64)((float_64)(CASTING float_64)(int_64 $2) * (float_64)(float_64)1e4) / (float_64)(float_64)4e8)))
	$45 = ((int_64)((int_64)$2 * (int_64)400) + (int_64)$45)
	
.LABEL $label$535
	CALL eosio_assert((uint_64)(((int_64)$45 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1616])
	$2 = (int_64)5524301
	$46 = [0]
	
.LOOP $label$538:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$537 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$539 }
	
.LOOP $label$540:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$537 }
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$540 }
	
.LABEL $label$539
	$40 = [1]
	$46 = ($46 + [1])
	if ( ((int_32)$46 < (int_32)[7]) ){ goto $label$538 }
	goto $label$536 
	
.LABEL $label$537
	$40 = [0]
	
.LABEL $label$536
	CALL eosio_assert($40, [576])
	if ( ($8 == 0) ){ goto $label$542 }
	$50 = *($0)
	$2 = *($10 + [16])
	CALL eosio_assert([1], [1344])
	CALL eosio_assert(((int_32)*($9 + [24]) == (int_32)$6), [1392])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [1440])
	*($9 + [8]) = $11
	*($9 + [16]) = ((int_64)$2 + (int_64)$45)
	$2 = *($9)
	*($9) = $1
	CALL eosio_assert(((int_64)$2 == (int_64)$1), [1504])
	CALL eosio_assert([1], [160])
	CALL memcpy(($53 + [176]), $10, [8])
	CALL eosio_assert([1], [160])
	$41 = (($53 + [176]) | [8])
	CALL memcpy($41, ($9 + [8]), [8])
	CALL eosio_assert([1], [160])
	$16 = (($53 + [176]) + [16])
	CALL memcpy($16, ($9 + [16]), [8])
	CALL db_update_i64(*($9 + [28]), $50, ($53 + [176]), [24])
	$32 = ($0 + [24])
	if ( (uint_64)($2 <= *($32)) ){ goto $label$543 }
	*($32) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$543
	$46 = ($53 + [176])
	goto $label$541 
	
.LABEL $label$542
	$50 = *($0)
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [32])
	*(($46 = CALL $43([40])) + [24]) = $6
	*($46 + [8]) = $11
	*($46) = $1
	*($46 + [16]) = $45
	CALL eosio_assert([1], [160])
	CALL memcpy(($53 + [176]), $46, [8])
	CALL eosio_assert([1], [160])
	$41 = (($53 + [176]) | [8])
	CALL memcpy($41, ($46 + [8]), [8])
	CALL eosio_assert([1], [160])
	$16 = (($53 + [176]) + [16])
	CALL memcpy($16, ($46 + [16]), [8])
	$2 = *($46)
	$52 = CALL db_store_i64(*(($0 + [16])), (int_64)5380477996647841792, $50, $2, ($53 + [176]), [24])
	*($46 + [28]) = $52
	$32 = ($0 + [24])
	if ( (uint_64)($2 <= *($32)) ){ goto $label$544 }
	*($32) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$544
	*($53 + [64]) = $46
	$2 = *($46)
	*($53 + [176]) = $2
	*($53 + [136]) = $52
	$39 = ($0 + [36])
	$40 = *($39)
	if ( ((uint_32)$40 >= (uint_32)*(($0 + [40]))) ){ goto $label$546 }
	*($40 + [8]) = $2
	*($40 + [16]) = $52
	*($53 + [64]) = [0]
	*($40) = $46
	*($39) = ($40 + [24])
	goto $label$545 
	
.LABEL $label$546
	CALL $16(($0 + [32]), ($53 + [64]), ($53 + [176]), ($53 + [136]))
	
.LABEL $label$545
	$46 = *($53 + [64])
	*($53 + [64]) = [0]
	if ( ($46 == 0) ){ goto $label$547 }
	CALL $44($46)
	
.LABEL $label$547
	$46 = ($53 + [176])
	
.LABEL $label$541
	$40 = ($7 + [8])
	$2 = *($40)
	$50 = *($0)
	$48 = *($7 + [16])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1344])
	CALL eosio_assert(((int_32)*($7 + [24]) == (int_32)$6), [1392])
	CALL eosio_assert(((int_64)*(($0 + [8])) == (int_64)CALL $fimport$4()), [1440])
	*($40) = ((int_64)$47 + (int_64)$2)
	*($7 + [16]) = ((int_64)$48 + (int_64)$45)
	$2 = *($7)
	*($7) = $5
	CALL eosio_assert(((int_64)$2 == (int_64)$5), [1504])
	CALL eosio_assert([1], [160])
	CALL memcpy($46, $7, [8])
	CALL eosio_assert([1], [160])
	CALL memcpy($41, $40, [8])
	CALL eosio_assert([1], [160])
	CALL memcpy($16, ($7 + [16]), [8])
	CALL db_update_i64(*($7 + [28]), $50, $46, [24])
	if ( (uint_64)($2 <= *(($0 + [24]))) ){ goto $label$548 }
	*($32) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$548
	$49 = *($0)
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [608]
	$48 = (int_64)0
	
.LOOP $label$549:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$554 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$553 }
	$40 = ($40 + [165])
	goto $label$552 
	
.LABEL $label$554
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$551 }
	goto $label$550 
	
.LABEL $label$553
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$552
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$551
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$550
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$50 | (int_64)$48)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$549 }
	*($53 + [144]) = $48
	*($53 + [136]) = $49
	$2 = (int_64)0
	$50 = (int_64)59
	$46 = [1568]
	$48 = (int_64)0
	
.LOOP $label$555:
	$47 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$556 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$558 }
	$40 = ($40 + [165])
	goto $label$557 
	
.LABEL $label$558
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$557
	$47 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$50 & (int_64)4294967295))
	
.LABEL $label$556
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$48 = ((int_64)$47 | (int_64)$48)
	$50 = ((int_64)$50 + (int_64)-5)
	if ( ((int_64)$50 != (int_64)-6) ){ goto $label$555 }
	$2 = (int_64)0
	$47 = (int_64)59
	$46 = [1584]
	$49 = (int_64)0
	
.LOOP $label$559:
	if ( ((uint_64)$2 > (uint_64)(int_64)4) ){ goto $label$564 }
	$40 = *($46)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$563 }
	$40 = ($40 + [165])
	goto $label$562 
	
.LABEL $label$564
	$50 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$561 }
	goto $label$560 
	
.LABEL $label$563
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$562
	$50 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$561
	$50 = ((int_64)((int_64)$50 & (int_64)31) << (int_64)((int_64)$47 & (int_64)4294967295))
	
.LABEL $label$560
	$46 = ($46 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$49 = ((int_64)$50 | (int_64)$49)
	$47 = ((int_64)$47 + (int_64)-5)
	if ( ((int_64)$47 != (int_64)-6) ){ goto $label$559 }
	*(($53 + [56])) = [0]
	*($53 + [48]) = (int_64)0
	$46 = CALL strlen([1600])
	if ( ((uint_32)$46 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$46 >= (uint_32)[11]) ){ goto $label$567 }
	*($53 + [48]) = ($46 << [1])
	$40 = (($53 + [48]) | [1])
	if ( $46 ){ goto $label$566 }
	goto $label$565 
	
.LABEL $label$567
	$41 = (($46 + [16]) & [-16])
	$40 = CALL $43($41)
	*($53 + [48]) = ($41 | [1])
	*($53 + [56]) = $40
	*($53 + [52]) = $46
	
.LABEL $label$566
	CALL memcpy($40, [1600], $46)
	
.LABEL $label$565
	*(($40 + $46)) = [0]
	*(($53 + [80])) = (int_64)1414221060
	*(($53 + [92])) = *($53 + [52])
	*($53 + [72]) = $45
	$46 = ($53 + [56])
	*(($53 + [96])) = *($46)
	*($53 + [64]) = $1
	*($53 + [88]) = *($53 + [48])
	*($53 + [48]) = [0]
	*($53 + [52]) = [0]
	*($46) = [0]
	$46 = CALL $22(($53 + [176]), ($53 + [136]), $48, $49, ($53 + [64]))
	CALL $18(($53 + [120]), $46)
	$40 = *($53 + [120])
	CALL send_inline($40, (*($53 + [124]) - $40))
	$40 = *($53 + [120])
	if ( ($40 == 0) ){ goto $label$568 }
	*($53 + [124]) = $40
	CALL $44($40)
	
.LABEL $label$568
	$40 = *($46 + [28])
	if ( ($40 == 0) ){ goto $label$569 }
	*(($46 + [32])) = $40
	CALL $44($40)
	
.LABEL $label$569
	$40 = *($46 + [16])
	if ( ($40 == 0) ){ goto $label$570 }
	*(($46 + [20])) = $40
	CALL $44($40)
	
.LABEL $label$570
	if ( ((*(($53 + [88])) & [1]) == 0) ){ goto $label$571 }
	CALL $44(*(($53 + [96])))
	
.LABEL $label$571
	if ( ((*($53 + [48]) & [1]) == 0) ){ goto $label$16 }
	CALL $44(*(($53 + [56])))
	
.LABEL $label$16
	*([0] + [4]) = ($53 + [240])
	return (unreachable)
	
.LABEL $label$15
	CALL $45(($53 + [48]))
	
.LABEL $label$14
	CALL $45(($53 + [48]))
	
.LABEL $label$13
	CALL $45(($53 + [48]))
	
.LABEL $label$12
	CALL $45(($53 + [48]))
	
.LABEL $label$11
	CALL $45(($53 + [48]))
	
.LABEL $label$10
	CALL $45(($53 + [48]))
	
.LABEL $label$9
	CALL $45(($53 + [48]))
	
.LABEL $label$8
	CALL $45(($53 + [48]))
	
.LABEL $label$7
	CALL $45(($53 + [48]))
	
.LABEL $label$6
	CALL $45(($53 + [48]))
	
.LABEL $label$5
	CALL $45(($53 + [48]))
	
.LABEL $label$4
	CALL $45(($53 + [48]))
	
.LABEL $label$3
	CALL $45(($53 + [48]))
	
.LABEL $label$2
	CALL $45(($53 + [48]))
	
.LABEL $label$1
	CALL $45(($53 + [48]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [288])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$7 = CALL malloc($4)
	CALL db_get_i64($1, $7, $4)
	CALL free($7)
	goto $label$5 
	
.LABEL $label$6
	$7 = ($9 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $7
	CALL db_get_i64($1, $7, $4)
	
.LABEL $label$5
	*(($6 = CALL $43([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [320])
	CALL memcpy($6, $7, [8])
	$4 = ($4 & [-8])
	CALL eosio_assert(((int_32)$4 != (int_32)[8]), [320])
	CALL memcpy(($6 + [8]), ($7 + [8]), [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[16]), [320])
	CALL memcpy(($6 + [16]), ($7 + [16]), [8])
	*($6 + [28]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [16]) = $5
	$7 = *($6 + [28])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $16(($0 + [24]), ($8 + [24]), ($8 + [16]), ($8 + [12]))
	
.LABEL $label$7
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $44($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [32])
	return $6
}

void .FUNC $16 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $43(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $51($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $44($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $44($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $17 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $43([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $23($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $31(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

int_32 .FUNC $10 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [36]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [240])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-5003134543285190656)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [176])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [176])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $9(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [160])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [160])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [160])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [160])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC _ZN5eosio15uint128ToStringERKo (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	CALL $46($0, [40])
	$5 = *(($1 + [8]))
	$4 = *($1)
	
.LOOP $label$1:
	CALL __umodti3(($6 + [16]), $4, $5, (int_64)10, (int_64)0)
	CALL __udivti3($6, $4, $5, (int_64)10, (int_64)0)
	CALL $49($0, *((*($6 + [16]) + [336])))
	$1 = ((uint_64)$4 > (uint_64)(int_64)9)
	$2 = ((int_64)$5 != (int_64)0)
	$3 = (int_64)($5 == 0)
	$5 = *(($6 + [8]))
	$4 = *($6)
	if ( ( $1 ? $2 : $3 ) ){ goto $label$1 }
	$1 = *($0)
	if ( ($1 & [1]) ){ goto $label$3 }
	$2 = uint_32($1 >> [1])
	$1 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$2 = *(($0 + [4]))
	$1 = *(($0 + [8]))
	
.LABEL $label$2
	$2 = ($1 + $2)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$4 }
	$2 = ($2 + [-1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = *($1)
	*($1) = *($2)
	*($2) = $3
	$2 = ($2 + [-1])
	$1 = ($1 + [1])
	if ( ($1 <= $2) ){ goto $label$5 }
	
.LABEL $label$4
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $36 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $52(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $52(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $44(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $44(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

int_32 .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $38($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $46($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $43($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $46($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $44($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $45($7)
	return (unreachable)
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [1616])
	$3 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [576])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $35(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $36(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $44(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [320])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [320])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $37(*($1), ($0 + [32]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1680]
	$9 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$7 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1696]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$9 == (int_64)$1), [1712])
	
.LABEL $label$7
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$16 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [640]
	$9 = (int_64)0
	
.LOOP $label$17:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$22 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$3 = ($3 + [165])
	goto $label$20 
	
.LABEL $label$22
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$19
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$18
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$17 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$16
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [624]
	$9 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$8 > (uint_64)(int_64)10) ){ goto $label$28 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$28
	$10 = (int_64)0
	if ( ((int_64)$8 == (int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$24
	$6 = ($6 + [1])
	$7 = ((int_64)$7 + (int_64)-5)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$23 }
	if ( ((int_64)$9 != (int_64)$1) ){ goto $label$29 }
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [640]
	$9 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$35 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$35
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$31
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$30 }
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$15 }
	
.LABEL $label$29
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [1680]
	$9 = (int_64)0
	
.LOOP $label$36:
	if ( ((uint_64)$8 > (uint_64)(int_64)6) ){ goto $label$41 }
	$3 = *($6)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$40 }
	$3 = ($3 + [165])
	goto $label$39 
	
.LABEL $label$41
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$40
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$39
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$38
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$37
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$36 }
	if ( ((int_64)$9 != (int_64)$2) ){ goto $label$14 }
	
.LABEL $label$15
	*(($11 + [56])) = $0
	*(($11 + [64])) = (int_64)-1
	*(($11 + [72])) = (int_64)0
	*(($11 + [80])) = [0]
	*($11 + [48]) = $0
	*($11 + [40]) = $0
	*($11 + [88]) = $0
	*(($11 + [96])) = (int_64)0
	*(($11 + [104])) = (int_64)-1
	*(($11 + [112])) = [0]
	*(($11 + [116])) = [0]
	*(($11 + [120])) = [0]
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$43 }
	if ( ((int_64)$2 != (int_64)7746191359077253120) ){ goto $label$42 }
	*($11 + [36]) = [0]
	*($11 + [32]) = [1]
	*($11 + [8 align=4]) = *($11 + [32])
	CALL $33(($11 + [40]), ($11 + [8]))
	goto $label$42 
	
.LABEL $label$43
	*($11 + [28]) = [0]
	*($11 + [24]) = [2]
	*($11 + [16 align=4]) = *($11 + [24])
	CALL $34(($11 + [40]), ($11 + [16]))
	
.LABEL $label$42
	$4 = *(($11 + [112]))
	if ( ($4 == 0) ){ goto $label$44 }
	$5 = ($11 + [116])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$46 }
	
.LOOP $label$47:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$48 }
	CALL $44($3)
	
.LABEL $label$48
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$47 }
	$6 = *(($11 + [112]))
	goto $label$45 
	
.LABEL $label$46
	$6 = $4
	
.LABEL $label$45
	*($5) = $4
	CALL $44($6)
	
.LABEL $label$44
	$4 = *(($11 + [72]))
	if ( ($4 == 0) ){ goto $label$14 }
	$5 = ($11 + [76])
	$6 = *($5)
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$50 }
	
.LOOP $label$51:
	$6 = ($6 + [-24])
	$3 = *($6)
	*($6) = [0]
	if ( ($3 == 0) ){ goto $label$52 }
	CALL $44($3)
	
.LABEL $label$52
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$51 }
	$6 = *(($11 + [72]))
	goto $label$49 
	
.LABEL $label$50
	$6 = $4
	
.LABEL $label$49
	*($5) = $4
	CALL $44($6)
	
.LABEL $label$14
	*([0] + [4]) = ($11 + [128])
}

int_32 .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [320])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [160])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [160])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [160])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [160])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [160])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [160])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [160])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $24(*($1), ($0 + [32]))
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $43($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $44($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1776])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $23($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [320])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $43($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $55 ()
{
	(unreachable)
}