(data (i32.const 4) "\a0t\00\00")
(data (i32.const 48) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 112) "invalid symbol name\00")
(data (i32.const 144) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 208) "token not found by this symbol_name\00")
(data (i32.const 256) "singleton does not exist\00")
(data (i32.const 288) "memo has more than 1024 bytes\00")
(data (i32.const 320) "error reading iterator\00")
(data (i32.const 352) "read\00")
(data (i32.const 368) "invalid supply\00")
(data (i32.const 384) "max-supply must be positive\00")
(data (i32.const 416) "game not found by this symbol name\00")
(data (i32.const 464) "symbol precision mismatch\00")
(data (i32.const 496) "issuer is not the owner of this token\00")
(data (i32.const 544) "invalid maximum supply\00")
(data (i32.const 576) "token with symbol already exists\00")
(data (i32.const 624) "cannot create objects in table of another contract\00")
(data (i32.const 688) "write\00")
(data (i32.const 704) "memo has more than 256 bytes\00")
(data (i32.const 736) "token with symbol does not exist, create token before issue\00")
(data (i32.const 800) "invalid quantity\00")
(data (i32.const 832) "must issue positive quantity\00")
(data (i32.const 864) "quantity exceeds available supply\00")
(data (i32.const 912) "object passed to modify is not in multi_index\00")
(data (i32.const 960) "cannot modify objects in table of another contract\00")
(data (i32.const 1024) "attempt to add asset with different symbol\00")
(data (i32.const 1072) "addition underflow\00")
(data (i32.const 1104) "addition overflow\00")
(data (i32.const 1136) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1200) "invalid memo format\00")
(data (i32.const 1232) "token not found by this symbol name\00")
(data (i32.const 1280) "tokendapppub buy\00")
(data (i32.const 1312) "|\00")
(data (i32.const 1328) "counter.bank\00")
(data (i32.const 1344) "from\00")
(data (i32.const 1360) "-profit\00")
(data (i32.const 1376) "invalid memo format for profit\00")
(data (i32.const 1424) "-referrer:\00")
(data (i32.const 1440) "-receiver:\00")
(data (i32.const 1456) "invalid referrer account name\00")
(data (i32.const 1488) "refer fee must be less than amount of eos\00")
(data (i32.const 1536) "active\00")
(data (i32.const 1552) "eosio.token\00")
(data (i32.const 1568) "transfer\00")
(data (i32.const 1584) "refer fee https://ex.biteye.pro\00")
(data (i32.const 1616) "cannot pass end iterator to modify\00")
(data (i32.const 1664) "receiver_account::\00")
(data (i32.const 1696) "receipt\00")
(data (i32.const 1712) "buy\00")
(data (i32.const 1728) "end\00")
(data (i32.const 1744) "must pay with CORE token\00")
(data (i32.const 1776) "trade_time\00")
(data (i32.const 1792) "trade_time_minute\00")
(data (i32.const 1824) "trade_time_hour\00")
(data (i32.const 1840) "trade_time_day\00")
(data (i32.const 1856) "price\00")
(data (i32.const 1872) "emplace min\00")
(data (i32.const 1888) "cannot pass end iterator to erase\00")
(data (i32.const 1936) "cannot increment end iterator\00")
(data (i32.const 1968) "emplace hour:\00")
(data (i32.const 1984) "object passed to erase is not in multi_index\00")
(data (i32.const 2032) "cannot erase objects in table of another contract\00")
(data (i32.const 2096) "attempt to remove object that was not in multi_index\00")
(data (i32.const 2160) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 2224) "cannot decrement iterator at beginning of table\00")
(data (i32.const 2272) "eos amount should be bigger than 0\00")
(data (i32.const 2320) "the token issuance has not yet begun\00")
(data (i32.const 2368) "failed to check base_eos should be bigger than zero\00")
(data (i32.const 2432) "failed to check stake should be bigger than zero\00")
(data (i32.const 2496) "failed to check eos is bigger than base_eos\00")
(data (i32.const 2544) "failed to check base_stake is bigger than stake\00")
(data (i32.const 2592) "stake amount should be bigger than 0\00")
(data (i32.const 2640) "stake amount overflow\00")
(data (i32.const 2672) "amount of stake issuance should be bigger than zero\00")
(data (i32.const 2736) "stake should be less than base_stake\00")
(data (i32.const 2784) "profit eos amount should be bigger than 0\00")
(data (i32.const 2832) "game not found by this symbol_name\00")
(data (i32.const 2880) "cannot profit when no one holds stake\00")
(data (i32.const 2928) "amount of EOS profit should be bigger than 0\00")
(data (i32.const 2976) "account:\00")
(data (i32.const 2992) "name:\00")
(data (i32.const 3008) "permission:\00")
(data (i32.const 3024) "eosyName::\00")
(data (i32.const 3040) "eosy_name_str::\00")
(data (i32.const 3056) "eosy_name_str2::\00")
(data (i32.const 3076) "\10\0c\00\00")
(data (i32.const 3088) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 3136) "get\00")
(data (i32.const 3152) ".\00")
(data (i32.const 3168) " \00")
(data (i32.const 3184) ",\00")
(data (i32.const 3200) "account not found\00")
(data (i32.const 3232) "invalid amount\00")
(data (i32.const 3248) "selled eos amount should be greater than 0\00")
(data (i32.const 3296) "| withdraw https://ex.biteye.pro\00")
(data (i32.const 3344) "attempt to subtract asset with different symbol\00")
(data (i32.const 3392) "subtraction underflow\00")
(data (i32.const 3424) "subtraction overflow\00")
(data (i32.const 3456) " sell BITI https://ex.biteye.pro\00")
(data (i32.const 3504) "must reserve a positive amount\00")
(data (i32.const 3536) "fee amount must be a Non-negative\00")
(data (i32.const 3584) "player not found\00")
(data (i32.const 3616) "not enough balance to consume\00")
(data (i32.const 3648) "consume stake amount should be bigger than 0\00")
(data (i32.const 3696) "consume too much stake\00")
(data (i32.const 3728) "amount of comsumed stake should be bigger than zero\00")
(data (i32.const 3792) "cannot comsume all remaining stake\00")
(data (i32.const 3840) "WTF!\00")
(data (i32.const 3856) "claimed stake should be bigger than zero\00")
(data (i32.const 3904) "cannot transfer to self\00")
(data (i32.const 3936) "to account does not exist\00")
(data (i32.const 3968) "must transfer positive quantity\00")
(data (i32.const 4000) "token not transactable now\00")
(data (i32.const 4032) "no balance object found by from account\00")
(data (i32.const 4080) "overdrawn balance\00")
(data (i32.const 4112) "all stake should be retrieved before erasing game\00")
(data (i32.const 4176) "invalid refer fee\00")
(data (i32.const 4208) "cannot update exist refer fee\00")
(data (i32.const 4240) "maximum stake and option quantity should be the same symbol type\00")
(data (i32.const 4320) "game has started before\00")
(data (i32.const 4352) "invalid maximum stake\00")
(data (i32.const 4384) "invalid amount of maximum supply\00")
(data (i32.const 4432) "invalid amount of option\00")
(data (i32.const 4464) "invalid lock up period\00")
(data (i32.const 4496) "invalid fee percent\00")
(data (i32.const 4528) "invalid init fee percent\00")
(data (i32.const 4560) "the token issuance must be within six months\00")
(data (i32.const 4608) "base_eos must be core token\00")
(data (i32.const 4640) "invalid amount of base EOS pool\00")
(data (i32.const 4672) "multiplication overflow or underflow\00")
(data (i32.const 4720) "multiplication underflow\00")
(data (i32.const 4752) "multiplication overflow\00")
(data (i32.const 4784) "consume for new token\00")
(data (i32.const 4816) "trans should be bool\00")
(data (i32.const 4848) "/n time:\00")
(data (i32.const 4864) "finish airdrop\00")
(data (i32.const 4880) "Airdrop!\00")
(data (i32.const 4896) "biteyebiteye\00")
(data (i32.const 4912) "airdrop\00")
(data (i32.const 13328) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 13424) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 13440) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 13456) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(import "env" "__fixdfti" (func $fimport$0 (param i32 f64)))
(import "env" "__floattidf" (func $fimport$1 (param i64 i64) (result f64)))
(import "env" "abort" (func $fimport$2))
(import "env" "action_data_size" (func $fimport$3 (result i32)))
(import "env" "current_receiver" (func $fimport$4 (result i64)))
(import "env" "current_time" (func $fimport$5 (result i64)))
(import "env" "db_end_i64" (func $fimport$6 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$7 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$9 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$11 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$12 (param i32)))
(import "env" "db_store_i64" (func $fimport$13 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$14 (param i32 i64 i32 i32)))
(import "env" "db_upperbound_i64" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "eosio_assert" (func $fimport$16 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$17 (param i32)))
(import "env" "is_account" (func $fimport$18 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$19 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$20 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$21 (param i32 i32 i32) (result i32)))
(import "env" "printdf" (func $fimport$22 (param f64)))
(import "env" "printi" (func $fimport$23 (param i64)))
(import "env" "printn" (func $fimport$24 (param i64)))
(import "env" "prints" (func $fimport$25 (param i32)))
(import "env" "prints_l" (func $fimport$26 (param i32 i32)))
(import "env" "printui" (func $fimport$27 (param i64)))
(import "env" "read_action_data" (func $fimport$28 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$29 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$30 (param i64)))
(import "env" "require_auth2" (func $fimport$31 (param i64 i64)))
(import "env" "require_recipient" (func $fimport$32 (param i64)))
(import "env" "send_deferred" (func $fimport$33 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$34 (param i32 i32)))
(import "env" "transaction_size" (func $fimport$35 (result i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $1))
(export "_ZeqRK11checksum160S1_" (func $2))
(export "_ZneRK11checksum160S1_" (func $3))
(export "now" (func $4))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $5))
(export "_ZN12tokendapppub6detailENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_yS6_" (func $6))
(export "_ZN12tokendapppub6createEyN5eosio5assetE" (func $10))
(export "_ZN12tokendapppub5issueEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $16))
(export "_ZN12tokendapppub3regEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $17))
(export "_ZN12tokendapppub3buyEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $22))
(export "_ZN12tokendapppub4sellEyN5eosio5assetE" (func $86))
(export "_ZN12tokendapppub7consumeEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $89))
(export "_ZN12tokendapppub5claimENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb" (func $92))
(export "_ZN12tokendapppub8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $94))
(export "_ZN12tokendapppub7destroyENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $98))
(export "_ZN12tokendapppub11initdapppubEN5eosio5assetES1_S1_mhhym" (func $102))
(export "_ZN12tokendapppub12hellodapppubEN5eosio5assetES1_S1_mhhym" (func $104))
(export "_ZN12tokendapppub8newtokenEyN5eosio5assetES1_S1_mhhym" (func $112))
(export "_ZN12tokendapppub11setreferfeeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy" (func $113))
(export "_ZN12tokendapppub8settransENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy" (func $114))
(export "_ZN12tokendapppub7receiptEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio5assetES8_S8_" (func $118))
(export "_ZN12tokendapppub10cleantableEv" (func $119))
(export "_ZN12tokendapppub10setairdropEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $123))
(export "_ZN12tokendapppub7airdropEmmy" (func $143))
(export "apply" (func $154))
(export "malloc" (func $187))
(export "free" (func $190))
(export "ceil" (func $207))
(export "pow" (func $208))
(export "sqrt" (func $209))
(export "fabs" (func $210))
(export "scalbn" (func $211))
(export "memchr" (func $212))
(export "strlen" (func $213))
(export "memcmp" (func $214))
(export "_GLOBAL__sub_I_tokendapppub.cpp" (func $0))
(table $0 20 20 anyfunc)
(elem (i32.const 0) $215 $22 $143 $16 $118 $119 $113 $6 $86 $10 $114 $94 $104 $102 $112 $92 $123 $98 $17 $89)



void .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL $205($4, $1)
	$2 = *($1 + [12])
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $205(($4 + [16]), $4)
	CALL void $1((int_32 ($4 + [16])), (int_32 ((int_32)($2 & [255]) != (int_32)[0])), (int_32 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

void .FUNC _ZN12tokendapppub6detailENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_yS6_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 _ZN12tokendapppub6detailENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_S6_S6_S6_S6_S6_S6_yS6_, int_32 $7, int_32 $8, int_64 $9, int_32 $10)
{
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	$17 = (*([0] + [4]) - [48])
	*([0] + [4]) = $17
	if ( (*($1) & [1]) ){ goto $label$2 }
	$13 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$13 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$12 = ($13 + $1)
	$11 = ($1 + [1])
	$1 = $11
	if ( *(($12 + [1])) ){ goto $label$3 }
	$16 = (int_64)0
	if ( ($11 == 0) ){ goto $label$4 }
	$14 = (CASTING uint_64)(uint_32 $11)
	$15 = (int_64)8
	$16 = (int_64)0
	
.LOOP $label$5:
	$1 = *($13)
	if ( ((uint_32)(($1 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$16 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$15 & (int_64)4294967288)) | (int_64)$16)
	
.LABEL $label$6
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)8)
	$14 = ((int_64)$14 + (int_64)-1)
	if ( ((int_64)$14 != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$4
	$1 = [0]
	*(($17 + [40])) = [0]
	*($17 + [24]) = (int_64)-1
	*($17 + [32]) = (int_64)0
	$15 = *($0)
	*($17 + [8]) = $15
	$14 = (uint_64)$16 >> (uint_64)(int_64)8
	*($17 + [16]) = $14)
	$13 = CALL db_find_i64($15, $14, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*(CALL $7(($17 + [8]), $13) + [112]) == (int_32)($17 + [8])), [144])
	$1 = [1]
	
.LABEL $label$7
	CALL eosio_assert($1, [208])
	$1 = *(($17 + [36]))
	if ( ((int_32)$1 == (int_32)*(($17 + [32]))) ){ goto $label$9 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($17 + [8])), [144])
	goto $label$8 
	
.LABEL $label$9
	$1 = [0]
	$13 = CALL db_find_i64(*($17 + [8]), *(($17 + [16])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$8 }
	$1 = CALL $7(($17 + [8]), $13)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($17 + [8])), [144])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [256])
	CALL require_auth(*($1 + [8]))
	$1 = *($10)
	if ( ($1 & [1]) ){ goto $label$11 }
	$1 = uint_32($1 >> [1])
	goto $label$10 
	
.LABEL $label$11
	$1 = *($10 + [4])
	
.LABEL $label$10
	CALL eosio_assert(($1 <= [1025]), [288])
	$12 = *($17 + [32])
	if ( ($12 == 0) ){ goto $label$12 }
	$11 = ($17 + [36])
	$1 = *($11)
	if ( ((int_32)$1 == (int_32)$12) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = ($1 + [-24])
	$13 = *($1)
	*($1) = [0]
	if ( ($13 == 0) ){ goto $label$16 }
	CALL $192($13)
	
.LABEL $label$16
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$15 }
	$1 = *(($17 + [32]))
	goto $label$13 
	
.LABEL $label$14
	$1 = $12
	
.LABEL $label$13
	*($11) = $12
	CALL $192($1)
	
.LABEL $label$12
	*([0] + [4]) = ($17 + [48])
}

void .FUNC $176 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [224])
	*([0] + [4]) = $6
	$2 = *($1)
	CALL $205(($6 + [96]), ($1 + [8]))
	*(($3 = (($6 + [80]) + [8]))) = *(($1 + [32]))
	*(($4 = (($6 + [64]) + [8]))) = *(($1 + [48]))
	*($6 + [80]) = *($1 + [24])
	*($6 + [64]) = *($1 + [40])
	*(($5 = (($6 + [48]) + [8]))) = *(($1 + [64]))
	*($6 + [48]) = *($1 + [56])
	*((($6 + [144]) + [8])) = *($5)
	*((($6 + [128]) + [8])) = *($4)
	*($6 + [144]) = *($6 + [48])
	*($6 + [128]) = *($6 + [64])
	*((($6 + [112]) + [8])) = *($3)
	*($6 + [112]) = *($6 + [80])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	CALL $205(($6 + [208]), ($6 + [96]))
	*(($3 = (($6 + [192]) + [8]))) = *((($6 + [112]) + [8]))
	*(($4 = (($6 + [176]) + [8]))) = *((($6 + [128]) + [8]))
	*($6 + [192]) = *($6 + [112])
	*($6 + [176]) = *($6 + [128])
	*(($5 = (($6 + [160]) + [8]))) = *((($6 + [144]) + [8]))
	*($6 + [160]) = *($6 + [144])
	*((($6 + [32]) + [8])) = *($3)
	*($6 + [32]) = *($6 + [192])
	*((($6 + [16]) + [8])) = *($4)
	*($6 + [16]) = *($6 + [176])
	*(($6 + [8])) = *($5)
	*($6) = *($6 + [160])
	CALL void $0((int_32 $2), (int_64 ($6 + [208])), (int_32 ($6 + [32])), (int_32 ($6 + [16])), (int_32 $6), (int_32 $1))
	if ( ((*($6 + [208]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($6 + [216]))
	
.LABEL $label$2
	if ( ((*($6 + [96]) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*($6 + [104]))
	
.LABEL $label$3
	*([0] + [4]) = ($6 + [224])
}

void .FUNC $177 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	CALL $132(*($1), ($0 + [8]))
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [48]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [56]), *($3 + [4]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $1) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [64]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [352])
	CALL memcpy(($3 + [52]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [352])
	CALL memcpy(($0 + [53]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [56]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [352])
	CALL memcpy(($0 + [64]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $171 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*(($0 + [16])) = (int_64)1397703940
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [112])
	*(($0 + [32])) = (int_64)1397703940
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [112])
	*(($0 + [48])) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [112])
	*($0 + [56]) = [0]
	*($0 + [60 align=1]) = [0]
	*($0 + [64]) = (int_64)0
	*($0 + [72]) = [0]
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $172(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $172 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [48]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	*($4 + [8]) = $0
	CALL $173(($4 + [8]), $1)
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [96])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [320])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [20]) = $4
	*($7 + [16]) = $4
	*($7 + [24]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $191([128])) + [112]) = $0
	*($7 + [32]) = ($7 + [16])
	*($7 + [44]) = ($5 + [8])
	*($7 + [40]) = $5
	*($7 + [48]) = ($5 + [16])
	*($7 + [52]) = ($5 + [32])
	*($7 + [56]) = ($5 + [40])
	*($7 + [60]) = ($5 + [48])
	*($7 + [64]) = ($5 + [56])
	*($7 + [68]) = ($5 + [64])
	*($7 + [72]) = ($5 + [80])
	*($7 + [76]) = ($5 + [88])
	*($7 + [80]) = ($5 + [92])
	*($7 + [84]) = ($5 + [96])
	*($7 + [88]) = ($5 + [97])
	CALL $8(($7 + [40]), ($7 + [32]))
	*($5 + [116]) = $1
	*($7 + [32]) = $5
	*($7 + [40]) = (int_64)7035937633859534848
	$6 = *($5 + [116])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)7035937633859534848
	*($4 + [16]) = $6
	*($7 + [32]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $9(($0 + [24]), ($7 + [32]), ($7 + [40]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [96])
	return $5
}

void .FUNC $178 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	$2 = *($1)
	CALL $205($4, ($1 + [8]))
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $205(($4 + [16]), $4)
	CALL void $1((int_32 $2), (int_64 ($4 + [16])), (int_32 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [320])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($5 = CALL $191([24])) + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [12]) = $0
	CALL $132(($7 + [32]), $5)
	*($5 + [16]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)3724085271119308800
	$6 = *($5 + [16])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)3724085271119308800
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $131(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4) & [1]) == 0) ){ goto $label$10 }
	CALL $192(*($4 + [8]))
	
.LABEL $label$10
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC $189 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [13414]) == 0) ){ goto $label$2 }
	$7 = *([0] + [13416])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [13414]) = [1]
	$7 = ($7 << [16])
	*([0] + [13416]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [13416])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [13416]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [13414]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [13414]) = [1]
	$3 = ($3 << [16])
	*([0] + [13416]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [13416])
	
.LABEL $label$8
	*([0] + [13416]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $189($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [13328])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1984])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [2032])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [48])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8) + [48]) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2096])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $192($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [112])
	*([0] + [4]) = $8
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*(($4 = CALL $191([72])) + [56]) = $1
	*($4) = *(*($3))
	*($4 + [8]) = *(*($3 + [4]))
	*($4 + [24]) = *(*($3 + [8]))
	*($4 + [32]) = *(*($3 + [12]))
	*($4 + [40]) = *(*($3 + [16]))
	*($4 + [16]) = *(*($3 + [20]))
	*($4 + [48]) = ((int_64)*(*($3 + [24])) * (int_64)1000)
	*($8 + [64]) = ($8 + [49])
	*($8 + [60]) = $8
	*($8 + [56]) = $8
	*($8 + [72]) = ($8 + [56])
	*($8 + [84]) = ($4 + [8])
	*($8 + [80]) = $4
	*($8 + [88]) = ($4 + [16])
	*($8 + [92]) = ($4 + [24])
	*($8 + [96]) = ($4 + [32])
	*($8 + [100]) = ($4 + [40])
	$3 = ($4 + [48])
	*($8 + [104]) = $3
	CALL $50(($8 + [80]), ($8 + [72]))
	$5 = (int_64)
	*($4 + [60]) = CALL db_store_i64(*($1 + [8]), (int_64)-8849971982482014208, $2, $5((int_64)4099680000000 - *($4 + [48]))), $8, [49])
	if ( (uint_64)($5 <= *($1 + [16])) ){ goto $label$1 }
	*(($1 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*($8 + [80]) = $4
	$5 = (int_64)
	*($8) = $5((int_64)4099680000000 - *($3)))
	$6 = *($4 + [60])
	*($8 + [56]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = $5
	*($3 + [16]) = $6
	*($8 + [80]) = [0]
	*($3) = $4
	*($7) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $51(($1 + [24]), ($8 + [80]), $8, ($8 + [56]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$4 = *($8 + [80])
	*($8 + [80]) = [0]
	if ( ($4 == 0) ){ goto $label$4 }
	CALL $192($4)
	
.LABEL $label$4
	*([0] + [4]) = ($8 + [112])
}

void .FUNC memory ()
{
	int_64 $0
	int_32 $1
	int_32 $2
	$1 = [0]
	*([0] + [24]) = (int_64)1000000
	*([0] + [16]) = (int_64)1112887300
	*([0] + [32]) = (int_64)1112887300
	CALL eosio_assert([1], [48])
	$0 = (uint_64)*([0] + [32]) >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $0) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$0 = (uint_64)$0 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$0) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = (uint_64)$0 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$0) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$2 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	
.LABEL $label$1
	CALL eosio_assert($2, [112])
}

void .FUNC $43 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $191([72])
	CALL $55($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3 + [48])
	*($7 + [16]) = $2
	$4 = *($3 + [60])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $54(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $192($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $42 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [60]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2224])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)7792047213068156928)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2160])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2160])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $38(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $41 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $191([72])
	CALL $56($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3 + [48])
	*($7 + [16]) = $2
	$4 = *($3 + [60])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $57(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $192($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1984])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [2032])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [48])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8) + [48]) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2096])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $192($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
}

int_32 .FUNC $47 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [60]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2224])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)5486204203854462976)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2160])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2160])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $44(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1984])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [2032])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [48])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8) + [48]) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2096])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $192($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	float_64 $9
	float_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	*($1) = ((float_64)*(*($3)) + (float_64)*($1))
	*($1 + [40]) = *(*($3 + [4]))
	$5 = *($1 + [48])
	$7 = ($1 + [24])
	$9 = *($1 + [24])
	$10 = *(*($3 + [4]))
	if ( (((float_64)$10 <= (float_64)$9) | (((float_64)$10 != (float_64)$10) | ((float_64)$9 != (float_64)$9))) ){ goto $label$1 }
	*($7) = $10
	$10 = *(*(($3 + [4])))
	
.LABEL $label$1
	$6 = ($1 + [40])
	$4 = ($1 + [48])
	$8 = ($1 + [32])
	$9 = *($1 + [32])
	if ( (((float_64)$10 >= (float_64)$9) | (((float_64)$10 != (float_64)$10) | ((float_64)$9 != (float_64)$9))) ){ goto $label$2 }
	*($8) = $10
	
.LABEL $label$2
	*($1 + [8]) = ((float_64)*(*($3 + [8])) + (float_64)*($1 + [8]))
	CALL eosio_assert([1], [1136])
	$12 = $12
	$3 = ($12 + [-64])
	*([0] + [4]) = $3
	*($11 + [12]) = $3
	*($11 + [8]) = $3
	*($11 + [16]) = ($12 + [-8])
	*($11 + [24]) = ($11 + [8])
	*($11 + [36]) = ($1 + [8])
	*($11 + [32]) = $1
	*($11 + [40]) = ($1 + [16])
	*($11 + [44]) = $7
	*($11 + [48]) = $8
	*($11 + [52]) = $6
	*($11 + [56]) = $4
	CALL $52(($11 + [32]), ($11 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($11 + [64])
}

int_32 .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $191([72])) + [56]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [40])
	*($8 + [56]) = ($6 + [48])
	CALL $53(($8 + [32]), ($8 + [24]))
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6 + [48])
	*($8 + [32]) = $5
	$7 = *($6 + [60])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $54(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

int_32 .FUNC $167 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = (*([0] + [4]) - [16])
	$7 = $5
	*([0] + [4]) = $5
	$2 = *($1 + [4])
	$6 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	$5 = ($5 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $1)
	
.LABEL $label$1
	*($7 + [8]) = (int_64)0
	*($7) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [352])
	CALL memcpy($7, $5, [4])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[4]), [352])
	CALL memcpy(($7 | [4]), ($5 + [4]), [4])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [352])
	$4 = ($7 + [8])
	CALL memcpy($4, ($5 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($5)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	$3 = *($4)
	$5 = *($7 + [4])
	$0 = *($7)
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($1) + $6))
	
.LABEL $label$6
	CALL void $1((int_32 $0), (int_32 $5), (int_32 $3), (int_64 $6))
	*([0] + [4]) = ($7 + [16])
	return [1]
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$9 = (*([0] + [4]) - [272])
	$11 = $9
	*([0] + [4]) = $9
	$2 = *($1 + [4])
	$10 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$9 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$9 = [0]
	goto $label$1 
	
.LABEL $label$3
	$9 = ($9 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $9
	
.LABEL $label$2
	CALL read_action_data($9, $1)
	
.LABEL $label$1
	CALL $168(($11 + [56]), $9, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($9)
	
.LABEL $label$5
	*(($1 = (($11 + [160]) + [8]))) = *((($11 + [56]) + [8]))
	*(($9 = (($11 + [144]) + [8]))) = *(($11 + [80]))
	*($11 + [160]) = *($11 + [56])
	*($11 + [144]) = *($11 + [72])
	*(($8 = (($11 + [128]) + [8]))) = *(($11 + [96]))
	*($11 + [128]) = *($11 + [88])
	$7 = *($11 + [120])
	$6 = *($11 + [112])
	$5 = *($11 + [109])
	$4 = *($11 + [108])
	$3 = *($11 + [104])
	*((($11 + [208]) + [8])) = *($8)
	*((($11 + [192]) + [8])) = *($9)
	*($11 + [208]) = *($11 + [128])
	*($11 + [192]) = *($11 + [144])
	*((($11 + [176]) + [8])) = *($1)
	*($11 + [176]) = *($11 + [160])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$10 = *((*($1) + $10))
	
.LABEL $label$6
	*(($9 = (($11 + [256]) + [8]))) = *((($11 + [176]) + [8]))
	*(($2 = (($11 + [240]) + [8]))) = *((($11 + [192]) + [8]))
	*($11 + [256]) = *($11 + [176])
	*($11 + [240]) = *($11 + [192])
	*(($0 = (($11 + [224]) + [8]))) = *((($11 + [208]) + [8]))
	*($11 + [224]) = *($11 + [208])
	*((($11 + [40]) + [8])) = *($9)
	*($11 + [40]) = *($11 + [256])
	*((($11 + [24]) + [8])) = *($2)
	*($11 + [24]) = *($11 + [240])
	*((($11 + [8]) + [8])) = *($0)
	*($11 + [8]) = *($11 + [224])
	CALL void $1((int_32 ($11 + [40])), (int_32 ($11 + [24])), (int_32 ($11 + [8])), (int_32 $3), (int_32 ($4 & [255])), (int_32 ($5 & [255])), (int_32 $6), (int_64 $7), (int_32 $10))
	*([0] + [4]) = ($11 + [272])
	return [1]
}

int_32 .FUNC $164 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$10 = (*([0] + [4]) - [272])
	$12 = $10
	*([0] + [4]) = $10
	$2 = *($1 + [4])
	$11 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$10 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$10 = [0]
	goto $label$1 
	
.LABEL $label$3
	$10 = ($10 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $10
	
.LABEL $label$2
	CALL read_action_data($10, $1)
	
.LABEL $label$1
	CALL $171(($12 + [48]), $10, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($10)
	
.LABEL $label$5
	*(($1 = (($12 + [160]) + [8]))) = *(($12 + [64]))
	$8 = *($12 + [56])
	*(($10 = (($12 + [144]) + [8]))) = *(($12 + [80]))
	$3 = *($12 + [48])
	*($12 + [160]) = $8
	*($12 + [144]) = *($12 + [72])
	*(($9 = (($12 + [128]) + [8]))) = *(($12 + [96]))
	*($12 + [128]) = *($12 + [88])
	$7 = *($12 + [120])
	$8 = *($12 + [112])
	$6 = *($12 + [109])
	$5 = *($12 + [108])
	$4 = *($12 + [104])
	*((($12 + [208]) + [8])) = *($9)
	*((($12 + [192]) + [8])) = *($10)
	*($12 + [208]) = *($12 + [128])
	*($12 + [192]) = *($12 + [144])
	*((($12 + [176]) + [8])) = *($1)
	*($12 + [176]) = *($12 + [160])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$11 = *((*($1) + $11))
	
.LABEL $label$6
	*(($10 = (($12 + [256]) + [8]))) = *((($12 + [176]) + [8]))
	*(($2 = (($12 + [240]) + [8]))) = *((($12 + [192]) + [8]))
	*($12 + [256]) = *($12 + [176])
	*($12 + [240]) = *($12 + [192])
	*(($0 = (($12 + [224]) + [8]))) = *((($12 + [208]) + [8]))
	*($12 + [224]) = *($12 + [208])
	*((($12 + [32]) + [8])) = *($10)
	*($12 + [32]) = *($12 + [256])
	*((($12 + [16]) + [8])) = *($2)
	*($12 + [16]) = *($12 + [240])
	*(($12 + [8])) = *($0)
	*($12) = *($12 + [224])
	CALL void $1((int_32 $3), (int_64 ($12 + [32])), (int_32 ($12 + [16])), (int_32 $12), (int_32 $4), (int_32 ($5 & [255])), (int_32 ($6 & [255])), (int_32 $8), (int_64 $7), (int_32 $11))
	*([0] + [4]) = ($12 + [272])
	return [1]
}

int_32 .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [48])
	*([0] + [4]) = $3
	*(($2 = $3) + [28]) = $0
	*($2 + [16]) = *($1)
	*($2 + [20]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*($2 + [8]) = [0]
	*($2) = (int_64)0
	*($2 + [12]) = [0]
	*($2 + [36]) = $1
	*($2 + [32]) = $1
	*($2 + [40]) = ($1 + $0)
	CALL $132(($2 + [32]), $2)
	CALL eosio_assert(((int_32)*($2 + [40]) != (int_32)*($2 + [36])), [352])
	CALL memcpy(($2 + [47]), *($2 + [36]), [1])
	*($2 + [12]) = ((int_32)*($2 + [47]) != (int_32)[0])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [36]) = ($2 + [16])
	*($2 + [32]) = ($2 + [28])
	CALL $174(($2 + [32]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$5 }
	CALL $192(*(($2 + [8])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [48])
	return [1]
}

int_32 .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [48])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$1 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($6 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $3)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [36]) = $1
	*($5 + [32]) = $1
	*($5 + [40]) = ($1 + $3)
	CALL $132(($5 + [32]), $5)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	CALL $205(($5 + [16]), $5)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL $205(($5 + [32]), ($5 + [16]))
	CALL void $1((int_32 ($5 + [32])), (int_32 $4))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL $192(*($5 + [40]))
	
.LABEL $label$6
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$7 }
	CALL $192(*($5 + [24]))
	
.LABEL $label$7
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	CALL $192(*(($5 + [8])))
	
.LABEL $label$8
	*([0] + [4]) = ($5 + [48])
	return [1]
}

int_32 .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [96])
	*([0] + [4]) = $2
	*(($3 = $2) + [92]) = $0
	*($3 + [80]) = *($1)
	*($3 + [84]) = *($1 + [4])
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	CALL $175(($3 + [8]), $2, $1)
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($2)
	
.LABEL $label$5
	*($3 + [4]) = ($3 + [80])
	*($3) = ($3 + [92])
	CALL $176($3, ($3 + [8]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL $192(*(($3 + [24])))
	
.LABEL $label$6
	*([0] + [4]) = ($3 + [96])
	return [1]
}

int_32 .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [56]) = ($1 + $0)
	*($2 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [352])
	CALL memcpy(($2 + [8]), $1, [8])
	*($2 + [52]) = ($1 + [8])
	CALL $132(($2 + [48]), (($2 + [8]) + [8]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $178(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $192(*(($2 + [24])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

void .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [16]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [24]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [32]), *($2 + [4]), [8])
	$3 = (*($2 + [4]) + [8])
	*($2 + [4]) = $3
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $3) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [40]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy(($0 + [48]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	*($5 + [8]) = $0
	CALL $170(($5 + [8]), $1)
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $168 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [112])
	*(($0 + [24])) = (int_64)1397703940
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [112])
	*(($0 + [40])) = (int_64)1397703940
	*($0 + [32]) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [112])
	*($0 + [48]) = [0]
	*($0 + [52 align=1]) = [0]
	*($0 + [56]) = (int_64)0
	*($0 + [64]) = [0]
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $169(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $175 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	*($0) = (int_64)0
	*($0 + [8]) = (int_64)0
	*($0 + [24]) = (int_64)0
	$4 = [0]
	*(($0 + [16])) = [0]
	*(($0 + [32])) = (int_64)1397703940
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [112])
	*(($0 + [48])) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$5 = [0]
	
.LABEL $label$6
	CALL eosio_assert($5, [112])
	*(($0 + [64])) = (int_64)1397703940
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = [0]
	
.LABEL $label$11
	CALL eosio_assert($5, [112])
	*($6 + [4]) = $1
	*($6) = $1
	*($6 + [8]) = ($1 + $2)
	*($6 + [16]) = $6
	*($6 + [24]) = $0
	CALL $177(($6 + [24]), ($6 + [16]))
	*([0] + [4]) = ($6 + [32])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [4])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$2 = *($0 + [12])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	*($4 + [15]) = *(*($0 + [16]))
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[0]), [688])
	CALL memcpy(*($3 + [4]), ($4 + [15]), [1])
	*($3 + [4]) = (*($3 + [4]) + [1])
	$2 = *($0 + [20])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($0 + [4]), $3, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $55 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [112])
	*([0] + [4]) = $5
	*($0 + [56]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [16]) = *(*($1 + [4]))
	$3 = *($2)
	*($0 + [40]) = *(*($1 + [4]))
	*($0 + [24]) = *(*($1 + [4]))
	*($0 + [32]) = *(*($1 + [4]))
	*($0 + [8]) = *(*($1 + [8]))
	*($0 + [48]) = *(*($1 + [12]))
	*($5 + [64]) = ($5 + [56])
	*($5 + [60]) = $5
	*($5 + [56]) = $5
	*($5 + [72]) = ($5 + [56])
	*($5 + [84]) = ($0 + [8])
	*($5 + [80]) = $0
	*($5 + [88]) = ($0 + [16])
	*($5 + [92]) = ($0 + [24])
	*($5 + [96]) = ($0 + [32])
	*($5 + [100]) = ($0 + [40])
	*($5 + [104]) = ($0 + [48])
	CALL $52(($5 + [80]), ($5 + [72]))
	$4 = *($0 + [48])
	*($0 + [60]) = CALL db_store_i64(*($3 + [8]), (int_64)5486204203854462976, *(*($2 + [8])), $4, $5, [56])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [112])
	return $0
}

int_32 .FUNC $56 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [112])
	*([0] + [4]) = $5
	*($0 + [56]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [16]) = *(*($1 + [4]))
	$3 = *($2)
	*($0 + [40]) = *(*($1 + [4]))
	*($0 + [24]) = *(*($1 + [4]))
	*($0 + [32]) = *(*($1 + [4]))
	*($0 + [8]) = *(*($1 + [8]))
	*($0 + [48]) = *(*($1 + [12]))
	*($5 + [64]) = ($5 + [56])
	*($5 + [60]) = $5
	*($5 + [56]) = $5
	*($5 + [72]) = ($5 + [56])
	*($5 + [84]) = ($0 + [8])
	*($5 + [80]) = $0
	*($5 + [88]) = ($0 + [16])
	*($5 + [92]) = ($0 + [24])
	*($5 + [96]) = ($0 + [32])
	*($5 + [100]) = ($0 + [40])
	*($5 + [104]) = ($0 + [48])
	CALL $58(($5 + [80]), ($5 + [72]))
	$4 = *($0 + [48])
	*($0 + [60]) = CALL db_store_i64(*($3 + [8]), (int_64)7792047213068156928, *(*($2 + [8])), $4, $5, [56])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [112])
	return $0
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy(($3 + [56]), *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$2 = *($0)
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [352])
	CALL memcpy(($2 + [60]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [352])
	CALL memcpy(($2 + [61]), *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($2 + [64]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	$1 = *($1)
	CALL eosio_assert(((uint_32)(*($1 + [8]) - *($1 + [4])) > (uint_32)[3]), [352])
	CALL memcpy(($2 + [72]), *($1 + [4]), [4])
	*($1 + [4]) = (*($1 + [4]) + [4])
}

void .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [56])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [60])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [64])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [68])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [72])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [76])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [80])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [84])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $153 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $150 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [688])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [688])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [688])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $71(CALL $70($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [688])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [688])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $71($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [64])
	*([0] + [4]) = $3
	*(($2 = $3) + [44]) = $0
	*($2 + [32]) = *($1)
	*($2 + [36]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*($2 + [16]) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [52]) = $1
	*($2 + [48]) = $1
	*($2 + [56]) = ($1 + $0)
	CALL $132(($2 + [48]), ($2 + [8]))
	CALL eosio_assert(((uint_32)(*($2 + [56]) - *($2 + [52])) > (uint_32)[7]), [352])
	CALL memcpy(($2 + [24]), *($2 + [52]), [8])
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [52]) = ($2 + [32])
	*($2 + [48]) = ($2 + [44])
	CALL $184(($2 + [48]), ($2 + [8]))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$5 }
	CALL $192(*(($2 + [16])))
	
.LABEL $label$5
	*([0] + [4]) = ($2 + [64])
	return [1]
}

int_32 .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = (*([0] + [4]) - [176])
	*([0] + [4]) = $3
	*(($2 = $3) + [140]) = $0
	*($2 + [128]) = *($1)
	*($2 + [132]) = *($1 + [4])
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL malloc($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($3 - (($0 + [15]) & [-16]))
	*([0] + [4]) = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($2 + [24])) = (int_64)0
	*(($2 + [40])) = (int_64)0
	*(($2 + [48])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*(($2 + [52])) = [0]
	*($2 + [56]) = [0]
	*(($2 + [60])) = [0]
	*(($2 + [64])) = [0]
	*($2 + [68]) = [0]
	*(($2 + [72])) = [0]
	*(($2 + [76])) = [0]
	*($2 + [80]) = [0]
	*(($2 + [84])) = [0]
	*(($2 + [88])) = [0]
	*($2 + [92]) = [0]
	*(($2 + [96])) = [0]
	*(($2 + [100])) = [0]
	*($2 + [104]) = (int_64)0
	*($2 + [112]) = [0]
	*(($2 + [116])) = [0]
	*(($2 + [120])) = [0]
	*($2 + [148]) = $1
	*($2 + [144]) = $1
	*($2 + [152]) = ($1 + $0)
	*($2 + [160]) = ($2 + [144])
	*($2 + [168]) = ($2 + [8])
	CALL $180(($2 + [168]), ($2 + [160]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL free($1)
	
.LABEL $label$4
	*($2 + [148]) = ($2 + [128])
	*($2 + [144]) = ($2 + [140])
	CALL $181(($2 + [144]), ($2 + [8]))
	CALL $182(($2 + [8]))
	*([0] + [4]) = ($2 + [176])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [320])
	*([0] + [4]) = $9
	*($9 + [312]) = $0
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1552]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$9 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1568]
	$7 = (int_64)0
	
.LOOP $label$10:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$15 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$3 = ($3 + [165])
	goto $label$13 
	
.LABEL $label$15
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$12
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$11
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$10 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$9 }
	*($9 + [308]) = [0]
	*($9 + [304]) = [1]
	*($9 + [8 align=4]) = *($9 + [304])
	CALL $155(($9 + [312]), ($9 + [8]))
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$7 }
	
.LABEL $label$8
	*([0] + [4]) = ($9 + [320])
	return (unreachable)
	
.LABEL $label$7
	if ( ((int_64)$2 > (int_64)4921564679018381311) ){ goto $label$33 }
	if ( ((int_64)$2 <= (int_64)-4417354634433839105) ){ goto $label$32 }
	if ( ((int_64)$2 <= (int_64)-4417015721779789825) ){ goto $label$30 }
	if ( ((int_64)$2 == (int_64)-4417015721779789824) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)-3617168760277827584) ){ goto $label$25 }
	if ( ((int_64)$2 != (int_64)3724085270811770880) ){ goto $label$16 }
	*($9 + [172]) = [0]
	*($9 + [168]) = [2]
	*($9 + [144 align=4]) = *($9 + [168])
	CALL $167(($9 + [312]), ($9 + [144]))
	goto $label$16 
	
.LABEL $label$33
	if ( ((int_64)$2 <= (int_64)5382254363446083583) ){ goto $label$31 }
	if ( ((int_64)$2 <= (int_64)7684014134730257519) ){ goto $label$29 }
	if ( ((int_64)$2 == (int_64)7684014134730257520) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)8421050270446685696) ){ goto $label$23 }
	if ( ((int_64)$2 != (int_64)8516769789752901632) ){ goto $label$16 }
	*($9 + [276]) = [0]
	*($9 + [272]) = [3]
	*($9 + [40 align=4]) = *($9 + [272])
	CALL $158(($9 + [312]), ($9 + [40]))
	goto $label$16 
	
.LABEL $label$32
	if ( ((int_64)$2 > (int_64)-5001247386194935809) ){ goto $label$28 }
	if ( ((int_64)$2 == (int_64)-7297632115821117440) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)-5003315193367756800) ){ goto $label$16 }
	*($9 + [252]) = [0]
	*($9 + [248]) = [4]
	*($9 + [64 align=4]) = *($9 + [248])
	CALL $161(($9 + [312]), ($9 + [64]))
	goto $label$16 
	
.LABEL $label$31
	if ( ((int_64)$2 > (int_64)4983106858454614015) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)4921564679018381312) ){ goto $label$21 }
	if ( ((int_64)$2 != (int_64)4923676723943997440) ){ goto $label$16 }
	*($9 + [188]) = [0]
	*($9 + [184]) = [5]
	*($9 + [128 align=4]) = *($9 + [184])
	CALL $166(($9 + [312]), ($9 + [128]))
	goto $label$16 
	
.LABEL $label$30
	if ( ((int_64)$2 == (int_64)-4417354634433839104) ){ goto $label$20 }
	if ( ((int_64)$2 != (int_64)-4417057971920792576) ){ goto $label$16 }
	*($9 + [292]) = [0]
	*($9 + [288]) = [6]
	*($9 + [24 align=4]) = *($9 + [288])
	CALL $156(($9 + [312]), ($9 + [24]))
	goto $label$16 
	
.LABEL $label$29
	if ( ((int_64)$2 == (int_64)5382254363446083584) ){ goto $label$19 }
	if ( ((int_64)$2 != (int_64)5382478046416601088) ){ goto $label$16 }
	*($9 + [284]) = [0]
	*($9 + [280]) = [7]
	*($9 + [32 align=4]) = *($9 + [280])
	CALL $157(($9 + [312]), ($9 + [32]))
	goto $label$16 
	
.LABEL $label$28
	if ( ((int_64)$2 == (int_64)-5001247386194935808) ){ goto $label$18 }
	if ( ((int_64)$2 != (int_64)-4421672816961650688) ){ goto $label$16 }
	*($9 + [236]) = [0]
	*($9 + [232]) = [8]
	*($9 + [80 align=4]) = *($9 + [232])
	CALL $159(($9 + [312]), ($9 + [80]))
	goto $label$16 
	
.LABEL $label$27
	if ( ((int_64)$2 == (int_64)4983106858454614016) ){ goto $label$17 }
	if ( ((int_64)$2 != (int_64)5031766152489992192) ){ goto $label$16 }
	*($9 + [268]) = [0]
	*($9 + [264]) = [9]
	*($9 + [48 align=4]) = *($9 + [264])
	CALL $159(($9 + [312]), ($9 + [48]))
	goto $label$16 
	
.LABEL $label$26
	*($9 + [300]) = [0]
	*($9 + [296]) = [10]
	*($9 + [16 align=4]) = *($9 + [296])
	CALL $156(($9 + [312]), ($9 + [16]))
	goto $label$16 
	
.LABEL $label$25
	*($9 + [244]) = [0]
	*($9 + [240]) = [11]
	*($9 + [72 align=4]) = *($9 + [240])
	CALL $155(($9 + [312]), ($9 + [72]))
	goto $label$16 
	
.LABEL $label$24
	*($9 + [196]) = [0]
	*($9 + [192]) = [12]
	*($9 + [120 align=4]) = *($9 + [192])
	CALL $165(($9 + [312]), ($9 + [120]))
	goto $label$16 
	
.LABEL $label$23
	*($9 + [180]) = [0]
	*($9 + [176]) = [13]
	*($9 + [136 align=4]) = *($9 + [176])
	CALL $165(($9 + [312]), ($9 + [136]))
	goto $label$16 
	
.LABEL $label$22
	*($9 + [204]) = [0]
	*($9 + [200]) = [14]
	*($9 + [112 align=4]) = *($9 + [200])
	CALL $164(($9 + [312]), ($9 + [112]))
	goto $label$16 
	
.LABEL $label$21
	*($9 + [212]) = [0]
	*($9 + [208]) = [15]
	*($9 + [104 align=4]) = *($9 + [208])
	CALL $163(($9 + [312]), ($9 + [104]))
	goto $label$16 
	
.LABEL $label$20
	*($9 + [164]) = [0]
	*($9 + [160]) = [16]
	*($9 + [152 align=4]) = *($9 + [160])
	CALL $158(($9 + [312]), ($9 + [152]))
	goto $label$16 
	
.LABEL $label$19
	*($9 + [220]) = [0]
	*($9 + [216]) = [17]
	*($9 + [96 align=4]) = *($9 + [216])
	CALL $162(($9 + [312]), ($9 + [96]))
	goto $label$16 
	
.LABEL $label$18
	*($9 + [260]) = [0]
	*($9 + [256]) = [18]
	*($9 + [56 align=4]) = *($9 + [256])
	CALL $160(($9 + [312]), ($9 + [56]))
	goto $label$16 
	
.LABEL $label$17
	*($9 + [228]) = [0]
	*($9 + [224]) = [19]
	*($9 + [88 align=4]) = *($9 + [224])
	CALL $158(($9 + [312]), ($9 + [88]))
	
.LABEL $label$16
	CALL eosio_exit([0])
}

int_32 .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1397703940
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [112])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $185(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $186(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $192(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

int_32 .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [80])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1397703940
	*($5 + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [112])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [64]) = $0
	$1 = ($0 + $2)
	*($5 + [72]) = $1
	CALL eosio_assert(((uint_32)$2 > (uint_32)[7]), [352])
	CALL memcpy(($5 + [8]), $0, [8])
	$4 = ($0 + [8])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [352])
	CALL memcpy((($5 + [8]) + [8]), $4, [8])
	$4 = ($0 + [16])
	CALL eosio_assert(((uint_32)($1 - $4) > (uint_32)[7]), [352])
	CALL memcpy((($5 + [8]) + [16]), $4, [8])
	*($5 + [68]) = ($0 + [24])
	CALL $132(($5 + [64]), (($5 + [8]) + [24]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $179(($5 + [64]), ($5 + [8]))
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $192(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [80])
	return [1]
}

int_32 .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = (*([0] + [4]) - [96])
	$9 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$8 = *($1)
	$1 = [0]
	$5 = [0]
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($7 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	*(($9 + [40])) = (int_64)1397703940
	*($9 + [32]) = (int_64)0
	*($9 + [24]) = (int_64)0
	CALL eosio_assert([1], [48])
	$6 = (int_64)5459781
	
.LOOP $label$5:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	CALL eosio_assert($7, [112])
	CALL eosio_assert(((uint_32)$3 > (uint_32)[7]), [352])
	CALL memcpy(($9 + [24]), $5, [8])
	$7 = ($3 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [352])
	$1 = (($9 + [24]) + [8])
	CALL memcpy($1, ($5 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [352])
	CALL memcpy((($9 + [24]) + [16]), ($5 + [16]), [8])
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL free($5)
	
.LABEL $label$8
	*(($7 = (($9 + [48]) + [8]))) = *(($1 + [8]))
	$6 = *($9 + [24])
	*($9 + [48]) = *($1)
	*((($9 + [64]) + [8])) = *($7)
	*($9 + [64]) = *($9 + [48])
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$9 }
	$8 = *((*($1) + $8))
	
.LABEL $label$9
	$4 = *((($9 + [64]) + [8]))
	*((($9 + [80]) + [8])) = $4
	*((($9 + [8]) + [8])) = $4
	$4 = *($9 + [64])
	*($9 + [80]) = $4
	*($9 + [8]) = $4
	CALL void $1((int_32 $6), (int_64 ($9 + [8])), (int_32 $8))
	*([0] + [4]) = ($9 + [96])
	return [1]
}

void .FUNC $179 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*((($4 + [32]) + [12])) = *(($1 + [20]))
	*(($3 = (($4 + [32]) + [8]))) = *(($1 + [16]))
	*($4 + [32]) = *($1 + [8])
	*($4 + [36]) = *(($1 + [12]))
	$2 = *($1)
	CALL $205(($4 + [16]), ($1 + [24]))
	*((($4 + [48]) + [8])) = *($3)
	*($4 + [48]) = *($4 + [32])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*(*($0)) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($3 = (($4 + [80]) + [8]))) = *((($4 + [48]) + [8]))
	*($4 + [80]) = *($4 + [48])
	CALL $205(($4 + [64]), ($4 + [16]))
	*(($4 + [8])) = *($3)
	*($4) = *($4 + [80])
	CALL void $0((int_32 $2), (int_64 $4), (int_32 ($4 + [64])), (int_32 $1))
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($4 + [72]))
	
.LABEL $label$2
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*($4 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [96])
}

void .FUNC $183 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_64 $9, int_32 $10)
{
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [144])
	*([0] + [4]) = $13
	$0 = *($0 + [4])
	$12 = *($0 + [4])
	$11 = (*(*($0)) + int_32($12 >> [1]))
	$0 = *($0)
	if ( (($12 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($11) + $0))
	
.LABEL $label$1
	CALL $205(($13 + [128]), $1)
	CALL $205(($13 + [112]), $2)
	CALL $205(($13 + [96]), $3)
	CALL $205(($13 + [80]), $4)
	CALL $205(($13 + [64]), $5)
	CALL $205(($13 + [48]), $6)
	CALL $205(($13 + [32]), $7)
	CALL $205(($13 + [16]), $8)
	CALL $205($13, $10)
	CALL void $11((int_32 ($13 + [128])), (int_32 ($13 + [112])), (int_32 ($13 + [96])), (int_32 ($13 + [80])), (int_32 ($13 + [64])), (int_32 ($13 + [48])), (int_32 ($13 + [32])), (int_32 ($13 + [16])), (int_32 $9), (int_64 $13), (int_32 $0))
	if ( ((*($13) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($13 + [8]))
	
.LABEL $label$2
	if ( ((*($13 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*($13 + [24]))
	
.LABEL $label$3
	if ( ((*($13 + [32]) & [1]) == 0) ){ goto $label$4 }
	CALL $192(*($13 + [40]))
	
.LABEL $label$4
	if ( ((*($13 + [48]) & [1]) == 0) ){ goto $label$5 }
	CALL $192(*($13 + [56]))
	
.LABEL $label$5
	if ( ((*($13 + [64]) & [1]) == 0) ){ goto $label$6 }
	CALL $192(*($13 + [72]))
	
.LABEL $label$6
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$7 }
	CALL $192(*($13 + [88]))
	
.LABEL $label$7
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$8 }
	CALL $192(*($13 + [104]))
	
.LABEL $label$8
	if ( ((*($13 + [112]) & [1]) == 0) ){ goto $label$9 }
	CALL $192(*($13 + [120]))
	
.LABEL $label$9
	if ( ((*($13 + [128]) & [1]) == 0) ){ goto $label$10 }
	CALL $192(*($13 + [136]))
	
.LABEL $label$10
	*([0] + [4]) = ($13 + [144])
}

void .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[15]), [688])
	CALL memcpy(*($2 + [4]), $3, [16])
	*($2 + [4]) = (*($2 + [4]) + [16])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[15]), [688])
	CALL memcpy(*($2 + [4]), $3, [16])
	*($2 + [4]) = (*($2 + [4]) + [16])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [688])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [688])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[0]), [688])
	CALL memcpy(*($2 + [4]), $3, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($0 + [48])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[0]), [688])
	CALL memcpy(*($0 + [4]), $2, [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

void .FUNC $68 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [192])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*(($5 = CALL $191([128])) + [112]) = $1
	$3 = CALL memcpy($5, *($3), [98])
	*($7 + [120]) = ($7 + [98])
	*($7 + [116]) = $7
	*($7 + [112]) = $7
	*($7 + [128]) = ($7 + [112])
	*($7 + [140]) = ($3 + [8])
	*($7 + [136]) = $3
	*($7 + [144]) = ($3 + [16])
	*($7 + [148]) = ($3 + [32])
	*($7 + [152]) = ($3 + [40])
	*($7 + [156]) = ($3 + [48])
	*($7 + [160]) = ($3 + [56])
	*($7 + [164]) = ($3 + [64])
	*($7 + [168]) = ($3 + [80])
	*($7 + [172]) = ($3 + [88])
	*($7 + [176]) = ($3 + [92])
	*($7 + [180]) = ($3 + [96])
	*($7 + [184]) = ($3 + [97])
	CALL $69(($7 + [136]), ($7 + [128]))
	*($3 + [116]) = CALL db_store_i64(*($1 + [8]), (int_64)7035937633859534848, $2, (int_64)7035937633859534848, $7, [98])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7035937633859534848) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)7035937633859534849
	
.LABEL $label$1
	*($7 + [136]) = $3
	*($7) = (int_64)7035937633859534848
	$4 = *($3 + [116])
	*($7 + [112]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($5 + [8]) = (int_64)7035937633859534848
	*($5 + [16]) = $4
	*($7 + [136]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $9(($1 + [24]), ($7 + [136]), $7, ($7 + [112]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($7 + [136])
	*($7 + [136]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $192($3)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [192])
}

void .FUNC $65 (int_32 $0)
{
	int_64 $1
	int_64 $2
	float_64 $3
	float_64 $4
	int_64 $5
	int_32 $6
	float_64 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	$1 = *($0 + [40])
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [48])
	if ( ((int_64)$2 == (int_64)$1) ){ goto $label$1 }
	$5 = CALL current_time()
	$1 = *(($0 + [40]))
	$3 = (CASTING float_64)(uint_32 *($0 + [88]))
	$4 = (float_64)
	if ( ((float_64)$4((CASTING float_64)(uint_32 (CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000))) - (CASTING float_64)(uint_32 *($0 + [92])))) >= (float_64)$3) ){ goto $label$2 }
	$1 = (Rounds 0)(((float_64)((float_64)(CASTING float_64)(int_64 $1) * (float_64)$4) / (float_64)$3))
	
.LABEL $label$2
	*(($0 + [48])) = $1
	if ( ((int_64)$1 == (int_64)$2) ){ goto $label$1 }
	$1 = (int_64)
	CALL eosio_assert(((int_64)$1($1 - $2)) > (int_64)0), [2672])
	$5 = *($0 + [32])
	$2 = *($0 + [80])
	if ( ((int_64)$2 != (int_64)$5) ){ goto $label$3 }
	$2 = ((int_64)$2 + (int_64)$1)
	*(($0 + [80])) = $2
	*(($0 + [32])) = $2
	*($0 + [56]) = ((int_64)*($0 + [56]) + (int_64)$1)
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)$2 < (int_64)$5), [2736])
	$2 = *($6)
	*(($6 = ($0 + [32]))) = ((int_64)$2 + (int_64)$1)
	$5 = *(($0 + [80]))
	$6 = ($0 + [24])
	$4 = CALL __floattidf(*($0 + [16]), *($6))
	$7 = (CASTING float_64)(int_64 $5)
	$3 = (float_64)
	$8 = ($0 + [72])
	$4 = (float_64)
	$3 = ((float_64)(CASTING float_64)(int_64 $1) + (float_64)(CASTING float_64)(int_64 $2))
	CALL __fixdfti(($9 + [16]), ((float_64)((float_64)$3 * (float_64)$4(CALL $fimport$1(*($0 + [64]), *($8)) - $4))) / (float_64)$3($3 - $7))))
	*($0 + [64]) = *($9 + [16])
	CALL __fixdfti($9, ((float_64)((float_64)$7 * (float_64)$4) / (float_64)$3))
	*($0 + [16]) = *($9)
	*($8) = *((($9 + [16]) + [8]))
	*($6) = *(($9 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [32])
}

int_32 .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [688])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [688])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [192])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	CALL memcpy($1, *($3), [98])
	CALL eosio_assert([1], [1136])
	*($4 + [120]) = ($4 + [98])
	*($4 + [116]) = $4
	*($4 + [112]) = $4
	*($4 + [128]) = ($4 + [112])
	*($4 + [140]) = ($1 + [8])
	*($4 + [136]) = $1
	*($4 + [144]) = ($1 + [16])
	*($4 + [148]) = ($1 + [32])
	*($4 + [152]) = ($1 + [40])
	*($4 + [156]) = ($1 + [48])
	*($4 + [160]) = ($1 + [56])
	*($4 + [164]) = ($1 + [64])
	*($4 + [168]) = ($1 + [80])
	*($4 + [172]) = ($1 + [88])
	*($4 + [176]) = ($1 + [92])
	*($4 + [180]) = ($1 + [96])
	*($4 + [184]) = ($1 + [97])
	CALL $69(($4 + [136]), ($4 + [128]))
	CALL db_update_i64(*($1 + [116]), $2, $4, [98])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7035937633859534848) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)7035937633859534849
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [192])
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [112]) == (int_32)$0), [144])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $7($0, $3)
	CALL eosio_assert(((int_32)*($3 + [112]) == (int_32)$0), [144])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1616])
	CALL $67($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $68($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $61 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $60 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [112])
	*([0] + [4]) = $5
	*($0 + [56]) = $1
	$1 = *($2 + [4])
	*($0) = *(*($1))
	*($0 + [16]) = *(*($1 + [4]))
	$3 = *($2)
	*($0 + [40]) = *(*($1 + [4]))
	*($0 + [24]) = *(*($1 + [4]))
	*($0 + [32]) = *(*($1 + [4]))
	*($0 + [8]) = *(*($1 + [8]))
	*($0 + [48]) = *(*($1 + [12]))
	*($5 + [64]) = ($5 + [56])
	*($5 + [60]) = $5
	*($5 + [56]) = $5
	*($5 + [72]) = ($5 + [56])
	*($5 + [84]) = ($0 + [8])
	*($5 + [80]) = $0
	*($5 + [88]) = ($0 + [16])
	*($5 + [92]) = ($0 + [24])
	*($5 + [96]) = ($0 + [32])
	*($5 + [100]) = ($0 + [40])
	*($5 + [104]) = ($0 + [48])
	CALL $62(($5 + [80]), ($5 + [72]))
	$4 = *($0 + [48])
	*($0 + [60]) = CALL db_store_i64(*($3 + [8]), (int_64)-7772393099124277248, *(*($2 + [8])), $4, $5, [56])
	if ( (uint_64)($4 <= *($3 + [16])) ){ goto $label$1 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [112])
	return $0
}

void .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($0 + [4]), $2, [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC _ZeqRK11checksum256S1_ (int_32 $0, int_32 _ZeqRK11checksum256S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN12tokendapppub7consumeEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [64])
	*([0] + [4]) = $10
	CALL require_auth($1)
	$8 = [0]
	*(($10 + [40])) = [0]
	*($10 + [16]) = $1
	*($10 + [24]) = (int_64)-1
	*($10 + [32]) = (int_64)0
	$7 = *($0)
	*($10 + [8]) = $7
	$9 = [0]
	$4 = *($2 + [8])
	$5 = (uint_64)$4 >> (uint_64)(int_64)8
	$6 = CALL db_find_i64($7, $1, (int_64)3607749779137757184, $5)
	if ( ((int_32)$6) < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $18(($10 + [8]), $6)
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($10 + [8])), [144])
	
.LABEL $label$1
	$6 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($6, [3584])
	$1 = *($2)
	if ( ((int_64)$1 < (int_64)1) ){ goto $label$2 }
	$8 = ((int_64)$1 <= (int_64)*($9))
	
.LABEL $label$2
	CALL eosio_assert($8, [3616])
	CALL eosio_assert(((int_64)$4 == (int_64)*($9 + [8])), [464])
	CALL $90($0, $5, $1)
	$7 = *($0)
	CALL eosio_assert($6, [1616])
	CALL eosio_assert(((int_32)*($9 + [16]) == (int_32)($10 + [8])), [912])
	CALL eosio_assert(((int_64)*($10 + [8]) == (int_64)CALL $fimport$4()), [960])
	$5 = *($9 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$5), [3344])
	$1 = (int_64)
	*($9) = $1(*($9) - $1))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [3392])
	CALL eosio_assert(((int_64)*($9) < (int_64)4611686018427387904), [3424])
	$1 = (uint_64)$5 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$1) == (int_64)(uint_64)*($9 + [8]) >> (uint_64)(int_64)8)), [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy(($10 + [48]), $9, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy((($10 + [48]) | [8]), ($9 + [8]), [8])
	CALL db_update_i64(*($9 + [20]), $7, ($10 + [48]), [16])
	$0 = (($10 + [8]) + [16])
	if ( (uint_64)($1 <= *($0)) ){ goto $label$3 }
	*($0) = ((int_64)$1 + (int_64)1)
	
.LABEL $label$3
	if ( ((int_64)*($9) != (int_64)0) ){ goto $label$4 }
	CALL eosio_assert($6, [1888])
	CALL eosio_assert($6, [1936])
	$0 = CALL db_next_i64(*(($9 + [20])), ($10 + [48]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL $18(($10 + [8]), $0)
	
.LABEL $label$5
	CALL $88(($10 + [8]), $9)
	
.LABEL $label$4
	$2 = *($10 + [32])
	if ( ($2 == 0) ){ goto $label$6 }
	$6 = ($10 + [36])
	$9 = *($6)
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = ($9 + [-24])
	$0 = *($9)
	*($9) = [0]
	if ( ($0 == 0) ){ goto $label$10 }
	CALL $192($0)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$9 }
	$9 = *(($10 + [32]))
	goto $label$7 
	
.LABEL $label$8
	$9 = $2
	
.LABEL $label$7
	*($6) = $2
	CALL $192($9)
	
.LABEL $label$6
	*([0] + [4]) = ($10 + [64])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [1984])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [2032])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2096])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $192($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [20]))
}

void .FUNC $87 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	float_64 $5
	int_64 $6
	int_64 $7
	float_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [160])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_64)$3 > (int_64)0), [2592])
	*(($10 + [152])) = [0]
	*($10 + [136]) = (int_64)-1
	*($10 + [144]) = (int_64)0
	$6 = *($1)
	*($10 + [120]) = $6
	*($10 + [128]) = $2
	$1 = [0]
	$4 = CALL db_find_i64($6, $2, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$1 = CALL $7(($10 + [120]), $4)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($10 + [120])), [144])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [2832])
	$1 = *(($10 + [148]))
	if ( ((int_32)$1 == (int_32)*(($10 + [144]))) ){ goto $label$3 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($10 + [120])), [144])
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$4 = CALL db_find_i64(*($10 + [120]), *(($10 + [128])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$1 = CALL $7(($10 + [120]), $4)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($10 + [120])), [144])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [256])
	$4 = CALL memcpy($10, $1, [112])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$5() / (uint_64)(int_64)1000000)) > (uint_32)*($4 + [92])), [2320])
	CALL $65($4)
	$6 = *($4 + [80])
	$7 = *($4 + [64])
	$5 = (CASTING float_64)(int_64 $3)
	$2 = (Rounds 0)(((float_64)((float_64)$5 * (float_64)CALL __floattidf($7, $2)) / (float_64)((float_64)$5 + (float_64)(CASTING float_64)(int_64 $6))))
	$2 = *($10)
	*(($10 = ($4 + [72]))) = (int_64))((int_64))($2 - (int_64)$2 >> (int_64)63)) - (CASTING uint_64)(uint_32 (uint_64)($7 <= $2)))
	*($4 + [80]) = ((int_64)$6 + (int_64)$3)
	*($4 + [64]) = (int_64))($7 - $2)
	$3 = (int_64)0
	$1 = ($4 + [24])
	$6 = *($1)
	CALL eosio_assert(( ((int_64)*($4 + [16]) != (int_64)0) ? ((int_64)$6 > (int_64)0) : (int_64)($6 == 0) ), [2368])
	CALL eosio_assert(((int_64)*($4 + [80]) > (int_64)0), [2432])
	$7 = *($1)
	$6 = *($10)
	CALL eosio_assert(( ((uint_64)*($4 + [64]) >= (uint_64)*($4 + [16])) ? ((int_64)$6 >= (int_64)$7) : ((int_64)$6 == (int_64)$7) ), [2496])
	CALL eosio_assert(((int_64)*($4 + [32]) >= (int_64)*($4 + [80])), [2544])
	CALL eosio_assert(((int_64)$2 > (int_64)0), [3504])
	$10 = *($4 + [97])
	if ( ((int_32)$10 == (int_32)*($4 + [96])) ){ goto $label$4 }
	$10 = ($4 + [92])
	if ( ((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)) >= (uint_32)(*($4 + [88]) + *($10))) ){ goto $label$5 }
	$1 = *(($4 + [96]))
	$9 = *(($4 + [97]))
	$6 = CALL current_time()
	$5 = (CASTING float_64)(uint_32 *(($4 + [88])))
	$8 = (CASTING float_64)(uint_32 $9)
	$5 = (CASTING float_64)(uint_32 $1)
	$10 = (CASTING uint_32)(float_64 CALL ceil((float_64))(((float_64)((float_64)$5 + (float_64)$5) + (float_64)((float_64)((float_64)(float_64))($8 - $5) * (float_64)((float_64)$5 + (float_64)$5)) / (float_64)((float_64)$5 + (float_64)(float_64))((CASTING float_64)(uint_32 (CASTING uint_32)(uint_64 ((uint_64)$6 / (uint_64)(int_64)1000000))) - (CASTING float_64)(uint_32 *($10)))))) - $8)))
	goto $label$4 
	
.LABEL $label$5
	$10 = *(($4 + [96]))
	
.LABEL $label$4
	$10 = ($10 & [255])
	if ( ($10 == 0) ){ goto $label$6 }
	if ( ((int_64)*(($4 + [80])) >= (int_64)*(($4 + [32]))) ){ goto $label$6 }
	$3 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $10) * (int_64)$2) + (int_64)99) / (int_64)100)
	
.LABEL $label$6
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [3536])
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$7 }
	CALL $74($4, $3)
	
.LABEL $label$7
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($2 - $3)) > (int_64)0), [3504])
	CALL $66(($4 + [120]), $4, *($4 + [8]))
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [48])
	$3 = (int_64)5459781
	$10 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$1 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$1 = [0]
	
.LABEL $label$8
	CALL eosio_assert($1, [112])
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [48])
	$3 = (int_64)5459781
	$10 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$1 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$1 = [0]
	
.LABEL $label$13
	CALL eosio_assert($1, [112])
	*($0 + [8]) = (int_64)1397703940
	*($0) = $6
	*($0 + [16]) = $2
	*(($0 + [24])) = (int_64)1397703940
	$0 = *($4 + [144])
	if ( ($0 == 0) ){ goto $label$18 }
	$9 = ($4 + [148])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$20 }
	
.LOOP $label$21:
	$10 = ($10 + [-24])
	$1 = *($10)
	*($10) = [0]
	if ( ($1 == 0) ){ goto $label$22 }
	CALL $192($1)
	
.LABEL $label$22
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$21 }
	$10 = *(($4 + [144]))
	goto $label$19 
	
.LABEL $label$20
	$10 = $0
	
.LABEL $label$19
	*($9) = $0
	CALL $192($10)
	
.LABEL $label$18
	*([0] + [4]) = ($4 + [160])
}

void .FUNC _ZN12tokendapppub4sellEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	$20 = (*([0] + [4]) - [224])
	*([0] + [4]) = $20
	CALL require_auth($1)
	$17 = (int_64)0
	$18 = (int_64)59
	$13 = [1328]
	$14 = (int_64)0
	
.LOOP $label$1:
	$16 = (int_64)0
	if ( ((uint_64)$17 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($13)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$16 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$18 & (int_64)4294967295))
	
.LABEL $label$2
	$13 = ($13 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$14 = ((int_64)$16 | (int_64)$14)
	$18 = ((int_64)$18 + (int_64)-5)
	if ( ((int_64)$18 != (int_64)-6) ){ goto $label$1 }
	$15 = $1
	if ( ((int_64)$14 != (int_64)$1) ){ goto $label$5 }
	$15 = CALL $24($1)
	
.LABEL $label$5
	$13 = [0]
	*(($20 + [192])) = [0]
	*($20 + [176]) = (int_64)-1
	*($20 + [184]) = (int_64)0
	$17 = *($0)
	*($20 + [160]) = $17
	*($20 + [168]) = $15
	$11 = [0]
	$4 = *($2 + [8])
	$18 = (uint_64)$4 >> (uint_64)(int_64)8
	$3 = CALL db_find_i64($17, $15, (int_64)3607749779137757184, $18)
	if ( ((int_32)$3) < (int_32)[0]) ){ goto $label$6 }
	$11 = CALL $18(($20 + [160]), $3)
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($20 + [160])), [144])
	
.LABEL $label$6
	$5 = ((int_32)$11 != (int_32)[0])
	CALL eosio_assert($5, [3200])
	CALL eosio_assert(((int_64)$4 == (int_64)*($11 + [8])), [464])
	$6 = *($2)
	if ( ((int_64)$6 < (int_64)1) ){ goto $label$7 }
	$13 = ((int_64)$6 <= (int_64)*($11))
	
.LABEL $label$7
	CALL eosio_assert($13, [3232])
	CALL eosio_assert([1], [48])
	$17 = (int_64)5459781
	$13 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$3 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$3 = [0]
	
.LABEL $label$8
	CALL eosio_assert($3, [112])
	CALL eosio_assert([1], [48])
	$17 = (int_64)5459781
	$13 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$3 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$3 = [0]
	
.LABEL $label$13
	CALL eosio_assert($3, [112])
	CALL $87($20, $0, $18, $6)
	$17 = (int_64)0
	$10 = *(($20 + [24]))
	$9 = *($20 + [16])
	$8 = *($20 + [8])
	$7 = *($20)
	CALL eosio_assert(((int_64)$7 > (int_64)0), [3248])
	$19 = *($0)
	$16 = (int_64)59
	$13 = [1536]
	$14 = (int_64)0
	
.LOOP $label$18:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$23 }
	$3 = *($13)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$22 }
	$3 = ($3 + [165])
	goto $label$21 
	
.LABEL $label$23
	$18 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$22
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$21
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$20
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$19
	$13 = ($13 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$14 = ((int_64)$18 | (int_64)$14)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$18 }
	*($20 + [112]) = $14
	*($20 + [104]) = $19
	$17 = (int_64)0
	$16 = (int_64)59
	$13 = [1552]
	$14 = (int_64)0
	
.LOOP $label$24:
	if ( ((uint_64)$17 > (uint_64)(int_64)10) ){ goto $label$29 }
	$3 = *($13)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$3 = ($3 + [165])
	goto $label$27 
	
.LABEL $label$29
	$18 = (int_64)0
	if ( ((int_64)$17 == (int_64)11) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$26
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$25
	$13 = ($13 + [1])
	$16 = ((int_64)$16 + (int_64)-5)
	$14 = ((int_64)$18 | (int_64)$14)
	$17 = ((int_64)$17 + (int_64)1)
	if ( ((int_64)$17 != (int_64)13) ){ goto $label$24 }
	$17 = (int_64)0
	$16 = (int_64)59
	$13 = [1568]
	$19 = (int_64)0
	
.LOOP $label$30:
	if ( ((uint_64)$17 > (uint_64)(int_64)7) ){ goto $label$35 }
	$3 = *($13)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$34 }
	$3 = ($3 + [165])
	goto $label$33 
	
.LABEL $label$35
	$18 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$32 }
	goto $label$31 
	
.LABEL $label$34
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$33
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$32
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$31
	$13 = ($13 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$30 }
	*($20 + [80]) = $15
	CALL $78(($20 + [88]), ($20 + [80]))
	$13 = CALL $197(($20 + [88]), [3296])
	*(($20 + [24])) = $8
	*($20 + [8]) = $1
	*($20 + [16]) = $7
	*($20) = *($0)
	CALL $205(($20 + [32]), $13)
	$13 = CALL $28(($20 + [120]), ($20 + [104]), $14, $19, $20)
	CALL $29(($20 + [208]), $13)
	$3 = *($20 + [208])
	CALL send_inline($3, (*($20 + [212]) - $3))
	$3 = *($20 + [208])
	if ( ($3 == 0) ){ goto $label$36 }
	*($20 + [212]) = $3
	CALL $192($3)
	
.LABEL $label$36
	$3 = *($13 + [28])
	if ( ($3 == 0) ){ goto $label$37 }
	*(($13 + [32])) = $3
	CALL $192($3)
	
.LABEL $label$37
	$3 = *($13 + [16])
	if ( ($3 == 0) ){ goto $label$38 }
	*(($13 + [20])) = $3
	CALL $192($3)
	
.LABEL $label$38
	if ( ((*($20 + [32]) & [1]) == 0) ){ goto $label$39 }
	CALL $192(*(($20 + [40])))
	
.LABEL $label$39
	if ( ((*($20 + [88]) & [1]) == 0) ){ goto $label$40 }
	CALL $192(*($20 + [96]))
	
.LABEL $label$40
	$18 = *($0)
	CALL eosio_assert($5, [1616])
	CALL eosio_assert(((int_32)*($11 + [16]) == (int_32)($20 + [160])), [912])
	CALL eosio_assert(((int_64)*($20 + [160]) == (int_64)CALL $fimport$4()), [960])
	$17 = *($11 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$17), [3344])
	$16 = (int_64)
	*($11) = $16(*($11) - $6))
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [3392])
	CALL eosio_assert(((int_64)*($11) < (int_64)4611686018427387904), [3424])
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$17) == (int_64)(uint_64)*($11 + [8]) >> (uint_64)(int_64)8)), [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy($20, $11, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy(($20 | [8]), ($11 + [8]), [8])
	CALL db_update_i64(*($11 + [20]), $18, $20, [16])
	$13 = (($20 + [160]) + [16])
	if ( (uint_64)($17 <= *($13)) ){ goto $label$41 }
	*($13) = ((int_64)$17 + (int_64)1)
	
.LABEL $label$41
	$17 = (int_64)0
	if ( ((int_64)*($11) != (int_64)0) ){ goto $label$42 }
	CALL eosio_assert($5, [1888])
	CALL eosio_assert($5, [1936])
	$13 = CALL db_next_i64(*(($11 + [20])), $20)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$43 }
	CALL $18(($20 + [160]), $13)
	
.LABEL $label$43
	CALL $88(($20 + [160]), $11)
	
.LABEL $label$42
	$6 = *($0)
	$16 = (int_64)59
	$13 = [1536]
	$14 = (int_64)0
	
.LOOP $label$44:
	if ( ((uint_64)$17 > (uint_64)(int_64)5) ){ goto $label$49 }
	$3 = *($13)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$48 }
	$3 = ($3 + [165])
	goto $label$47 
	
.LABEL $label$49
	$18 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$48
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$47
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$46
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$45
	$13 = ($13 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$14 = ((int_64)$18 | (int_64)$14)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$44 }
	$17 = (int_64)0
	$16 = (int_64)59
	$13 = [1696]
	$19 = (int_64)0
	
.LOOP $label$50:
	if ( ((uint_64)$17 > (uint_64)(int_64)6) ){ goto $label$55 }
	$3 = *($13)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$54 }
	$3 = ($3 + [165])
	goto $label$53 
	
.LABEL $label$55
	$18 = (int_64)0
	if ( ((uint_64)$17 <= (uint_64)(int_64)11) ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$54
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$53
	$18 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$52
	$18 = ((int_64)((int_64)$18 & (int_64)31) << (int_64)((int_64)$16 & (int_64)4294967295))
	
.LABEL $label$51
	$13 = ($13 + [1])
	$17 = ((int_64)$17 + (int_64)1)
	$19 = ((int_64)$18 | (int_64)$19)
	$16 = ((int_64)$16 + (int_64)-5)
	if ( ((int_64)$16 != (int_64)-6) ){ goto $label$50 }
	*($20 + [88]) = $15
	CALL $78(($20 + [208]), ($20 + [88]))
	$13 = CALL $197(($20 + [208]), [3456])
	$3 = ((int_64)$8 == (int_64)$10)
	CALL eosio_assert($3, [3344])
	$18 = (int_64)
	$11 = ((int_64)$18($9 - $7)) > (int_64)-4611686018427387904
	CALL eosio_assert($11), [3392])
	$5 = ((int_64)$18 < (int_64)4611686018427387904)
	CALL eosio_assert($5, [3424])
	*($20) = $1
	CALL $205(($20 + [8]), $13)
	*(($20 + [48])) = $10
	*(($20 + [32])) = *(($2 + [8]))
	*($20 + [40]) = $9
	*($20 + [24]) = *($2)
	*($20 + [56]) = $18
	*(($20 + [64])) = $10
	*($20 + [120]) = $6
	*($20 + [128]) = $19
	*(($13 = CALL $191([16]))) = $6
	*($13 + [8]) = $14
	*((($20 + [120]) + [32])) = [0]
	$12 = ($13 + [16])
	*(($20 + [144])) = $12
	*(($20 + [140])) = $12
	*($20 + [136]) = $13
	*($20 + [148]) = [0]
	*(($20 + [156])) = [0]
	$13 = *($20 + [8])
	$12 = ( *(($20 + [12])) ? uint_32($13 >> [1]) : ($13 & [1]) )
	$13 = ($12 + [56])
	$17 = (CASTING uint_64)(uint_32 $12)
	$12 = ($20 + [148])
	
.LOOP $label$56:
	$13 = ($13 + [1])
	$17 = (uint_64)$17 >> (uint_64)(int_64)7
	if ( ((int_64)$17) != (int_64)0) ){ goto $label$56 }
	if ( ($13 == 0) ){ goto $label$58 }
	CALL $31($12, $13)
	$12 = *(($20 + [152]))
	$13 = *(($20 + [148]))
	goto $label$57 
	
.LABEL $label$58
	$12 = [0]
	$13 = [0]
	
.LABEL $label$57
	*($20 + [108]) = $13
	*($20 + [104]) = $13
	*($20 + [112]) = $12
	*($20 + [200]) = ($20 + [104])
	*($20 + [80]) = $20
	CALL $32(($20 + [80]), ($20 + [200]))
	CALL $29(($20 + [104]), ($20 + [120]))
	$13 = *($20 + [104])
	CALL send_inline($13, (*($20 + [108]) - $13))
	$13 = *($20 + [104])
	if ( ($13 == 0) ){ goto $label$59 }
	*($20 + [108]) = $13
	CALL $192($13)
	
.LABEL $label$59
	$13 = *($20 + [148])
	if ( ($13 == 0) ){ goto $label$60 }
	*(($20 + [152])) = $13
	CALL $192($13)
	
.LABEL $label$60
	$13 = *($20 + [136])
	if ( ($13 == 0) ){ goto $label$61 }
	*(($20 + [140])) = $13
	CALL $192($13)
	
.LABEL $label$61
	if ( ((*($20 + [8]) & [1]) == 0) ){ goto $label$62 }
	CALL $192(*(($20 + [16])))
	
.LABEL $label$62
	if ( ((*($20 + [208]) & [1]) == 0) ){ goto $label$63 }
	CALL $192(*($20 + [216]))
	
.LABEL $label$63
	$17 = *($2)
	CALL eosio_assert($3, [3344])
	CALL eosio_assert($11, [3392])
	CALL eosio_assert($5, [3424])
	CALL $33($0, $15, ((float_64)(CASTING float_64)(int_64 $17) / (float_64)(float_64)1e4), ((float_64)(CASTING float_64)(int_64 $9) / (float_64)(float_64)1e4), ((float_64)(CASTING float_64)(int_64 $18) / (float_64)(float_64)1e4), [0])
	$11 = *($20 + [184])
	if ( ($11 == 0) ){ goto $label$64 }
	$0 = ($20 + [188])
	$13 = *($0)
	if ( ((int_32)$13 == (int_32)$11) ){ goto $label$66 }
	
.LOOP $label$67:
	$13 = ($13 + [-24])
	$3 = *($13)
	*($13) = [0]
	if ( ($3 == 0) ){ goto $label$68 }
	CALL $192($3)
	
.LABEL $label$68
	if ( ((int_32)$11 != (int_32)$13) ){ goto $label$67 }
	$13 = *(($20 + [184]))
	goto $label$65 
	
.LABEL $label$66
	$13 = $11
	
.LABEL $label$65
	*($0) = $11
	CALL $192($13)
	
.LABEL $label$64
	*([0] + [4]) = ($20 + [224])
}

void .FUNC $85 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([3184])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

void .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$6 = *($0)
	$3 = int_32(($7 - $6) >> [4])
	$4 = ($3 + $1)
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$3 }
	$5 = [268435455]
	$2 = ($2 - $6)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = int_32($2 >> [3])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$4 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $191(($5 << [4]))
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$1 
	
.LABEL $label$5
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $204($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$7 = ($7 - $6)
	$3 = ($2 + ($3 << [4]))
	$4 = ($3 - $7)
	$1 = ($3 + ($1 << [4]))
	$5 = ($2 + ($5 << [4]))
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($4, $6, $7)
	$6 = *($0)
	
.LABEL $label$7
	*($0) = $4
	*(($0 + [4])) = $1
	*(($0 + [8])) = $5
	if ( ($6 == 0) ){ goto $label$8 }
	CALL $192($6)
	
.LABEL $label$8
	(unreachable)
}

int_32 .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [3136])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$7 = *($1)
	$2 = *($1 + [4])
	$6 = int_32(($2 - $7) >> [4])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$6) ){ goto $label$4 }
	CALL $84($1, ($4 - $6))
	$2 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$5 }
	$2 = ($7 + ($4 << [4]))
	*(($1 + [4])) = $2
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = ($0 + [4])
	$6 = *($4)
	
.LOOP $label$6:
	$3 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [352])
	CALL memcpy($7, *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((uint_32)(*($3) - $6) > (uint_32)[7]), [352])
	CALL memcpy(($7 + [8]), *($4), [8])
	$6 = (*($4) + [8])
	*($4) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

void .FUNC $82 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)((int_32)($8 - $7) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ((int_32)($7 - $4) / (int_32)[40])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$3 }
	$7 = [107374182]
	$8 = ((int_32)($8 - $4) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$6 }
	$7 = ($8 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$8 = CALL $191(((int_32)$7 * (int_32)[40]))
	goto $label$2 
	
.LABEL $label$5
	$8 = ($0 + [4])
	
.LOOP $label$7:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = (*($8) + [40])
	*($8) = $7
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$8 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $204($0)
	
.LABEL $label$2
	$2 = ($8 + ((int_32)$7 * (int_32)[40]))
	$8 = ($8 + ((int_32)$5 * (int_32)[40]))
	$7 = $8
	
.LOOP $label$8:
	*($7) = (int_64)0
	*($7 + [16 align=4]) = (int_64)0
	*(($7 + [8])) = (int_64)0
	*(($7 + [24])) = (int_64)0
	*(($7 + [32])) = (int_64)0
	$7 = ($7 + [40])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$10 }
	$3 = ([0] - $4)
	$1 = ($1 + [-20])
	
.LOOP $label$11:
	*(($8 + [-32])) = *(($1 + [-12]))
	*(($8 + [-40])) = *(($1 + [-20]))
	*(($4 = ($8 + [-24]))) = (int_64)0
	*(($5 = ($8 + [-16]))) = [0]
	$6 = ($1 + [-4])
	*($4) = *($6)
	*(($8 + [-20])) = *($1)
	$4 = ($1 + [4])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($8 + [-12]))) = (int_64)0
	*($6) = (int_64)0
	*(($5 = ($8 + [-4]))) = [0]
	$6 = ($1 + [8])
	*($4) = *($6)
	*(($8 + [-8])) = *(($1 + [12]))
	$4 = ($1 + [16])
	*($5) = *($4)
	*($4) = [0]
	*($6) = (int_64)0
	$8 = ($8 + [-40])
	$1 = ($1 + [-40])
	if ( ((int_32)($1 + $3) != (int_32)[-20]) ){ goto $label$11 }
	$4 = *(($0 + [4]))
	$5 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$5 = $4
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $7
	*(($0 + [8])) = $2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$12 }
	$1 = ([0] - $5)
	$7 = ($4 + [-24])
	
.LOOP $label$13:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	*(($7 + [16])) = $8
	CALL $192($8)
	
.LABEL $label$14
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$15 }
	*(($7 + [4])) = $8
	CALL $192($8)
	
.LABEL $label$15
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $1) != (int_32)[-24]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$1 }
	CALL $192($5)
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [3136])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $31($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [352])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$7 = *($0 + [4])
	$8 = *($0 + [8])
	if ( ((uint_32)int_32(($8 - $7) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$4 = int_32(($7 - $5) >> [4])
	$7 = ($4 + $1)
	if ( ((uint_32)$7 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$8 = ($8 - $5)
	if ( ((uint_32)int_32($8 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($8 >> [3])
	$6 = ( $7 ? $6 : ($6 <= $7) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$8 = CALL $191(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $7
	$8 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$7 }
	*(($0 + [4])) = ($7 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $204($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$2 = ($8 + ($6 << [4]))
	$8 = ($8 + ($4 << [4]))
	$6 = $8
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$3 = ($8 + ($1 << [4]))
	$6 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$4 = ([0] - $6)
	$6 = ($7 + [-16])
	
.LOOP $label$11:
	*(($8 + [-16])) = *($6)
	*(($7 = ($8 + [-12]))) = (int_64)0
	*(($1 = ($8 + [-4]))) = [0]
	$5 = ($6 + [4])
	*($7) = *($5)
	*(($8 + [-8])) = *(($6 + [8]))
	$7 = ($6 + [12])
	*($1) = *($7)
	*($7) = [0]
	*($5) = (int_64)0
	$8 = ($8 + [-16])
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $4) != (int_32)[-16]) ){ goto $label$11 }
	$6 = *(($0 + [4]))
	$1 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$1 = $6
	
.LABEL $label$9
	*($0) = $8
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$12 }
	$7 = ([0] - $1)
	$6 = ($6 + [-12])
	
.LOOP $label$13:
	$8 = *($6)
	if ( ($8 == 0) ){ goto $label$14 }
	*(($6 + [4])) = $8
	CALL $192($8)
	
.LABEL $label$14
	$6 = ($6 + [-16])
	if ( ((int_32)($6 + $7) != (int_32)[-12]) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($1 == 0) ){ goto $label$15 }
	CALL $192($1)
	
.LABEL $label$15
	(unreachable)
}

int_32 .FUNC $182 (int_32 $0)
{
	if ( ((*($0 + [104]) & [1]) == 0) ){ goto $label$1 }
	CALL $192(*(($0 + [112])))
	
.LABEL $label$1
	if ( ((*($0 + [84]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*(($0 + [92])))
	
.LABEL $label$2
	if ( ((*($0 + [72]) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*(($0 + [80])))
	
.LABEL $label$3
	if ( ((*($0 + [60]) & [1]) == 0) ){ goto $label$4 }
	CALL $192(*(($0 + [68])))
	
.LABEL $label$4
	if ( ((*($0 + [48]) & [1]) == 0) ){ goto $label$5 }
	CALL $192(*(($0 + [56])))
	
.LABEL $label$5
	if ( ((*($0 + [36]) & [1]) == 0) ){ goto $label$6 }
	CALL $192(*(($0 + [44])))
	
.LABEL $label$6
	if ( ((*($0 + [24]) & [1]) == 0) ){ goto $label$7 }
	CALL $192(*(($0 + [32])))
	
.LABEL $label$7
	if ( ((*($0 + [12]) & [1]) == 0) ){ goto $label$8 }
	CALL $192(*(($0 + [20])))
	
.LABEL $label$8
	if ( ((*($0) & [1]) == 0) ){ goto $label$9 }
	CALL $192(*($0 + [8]))
	
.LABEL $label$9
	return $0
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [688])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [688])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [688])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [688])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [688])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [688])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

void .FUNC $145 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$8 = *($0)
	$9 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$7 = ($8 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$8 = CALL $191(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$8 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = ($8 + ((int_32)$7 * (int_32)[40]))
	$9 = ($8 + ((int_32)$9 * (int_32)[40]))
	$8 = CALL $28($9, $1, *($2), *($3), $4)
	$6 = ($8 + [40])
	$7 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$7) ){ goto $label$6 }
	$4 = ([0] - $7)
	$7 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($7 + [-12]))
	*(($8 + [-40])) = *(($7 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($2 = ($8 + [-16]))) = [0]
	$3 = ($7 + [-4])
	*($1) = *($3)
	*(($8 + [-20])) = *($7)
	$1 = ($7 + [4])
	*($2) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($3) = (int_64)0
	*(($2 = ($8 + [-4]))) = [0]
	$3 = ($7 + [8])
	*($1) = *($3)
	*(($8 + [-8])) = *(($7 + [12]))
	$8 = ($7 + [16])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$9 = ($9 + [-40])
	$8 = $9
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $4) != (int_32)[-20]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$1 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$1 = $7
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$8 }
	$9 = ([0] - $1)
	$7 = ($7 + [-24])
	
.LOOP $label$9:
	$8 = *(($7 + [12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($7 + [16])) = $8
	CALL $192($8)
	
.LABEL $label$10
	$8 = *($7)
	if ( ($8 == 0) ){ goto $label$11 }
	*(($7 + [4])) = $8
	CALL $192($8)
	
.LABEL $label$11
	$7 = ($7 + [-40])
	if ( ((int_32)($7 + $9) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $192($1)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $191([192])) + [176]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [16])
	*($8 + [52]) = ($6 + [24])
	*($8 + [56]) = ($6 + [32])
	*($8 + [60]) = ($6 + [40])
	*($8 + [64]) = ($6 + [48])
	*($8 + [68]) = ($6 + [56])
	*($8 + [72]) = ($6 + [64])
	*($8 + [76]) = ($6 + [72])
	*($8 + [80]) = ($6 + [80])
	*($8 + [84]) = ($6 + [88])
	*($8 + [88]) = ($6 + [96])
	*($8 + [92]) = ($6 + [104])
	*($8 + [96]) = ($6 + [112])
	*($8 + [100]) = ($6 + [120])
	*($8 + [104]) = ($6 + [128])
	*($8 + [108]) = ($6 + [136])
	*($8 + [112]) = ($6 + [144])
	*($8 + [116]) = ($6 + [152])
	*($8 + [120]) = ($6 + [160])
	*($8 + [124]) = ($6 + [168])
	CALL $152(($8 + [40]), ($8 + [32]))
	*($6 + [180]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [180])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $153(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [128])
	return $6
}

void .FUNC $147 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$7 = ( $6 ? $8 : ($8 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	*(($8 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $191([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $31(($8 + [28]), [16])
	$2 = *($8 + [28])
	$1 = (*($2) - $2)
	CALL eosio_assert(((int_32)$1 > (int_32)[3]), [688])
	CALL memcpy($2, $4, [4])
	CALL eosio_assert(((int_32)($1 + [-4]) > (int_32)[3]), [688])
	CALL memcpy(($2 + [4]), ($4 + [4]), [4])
	CALL eosio_assert(((int_32)($1 + [-8]) > (int_32)[7]), [688])
	CALL memcpy(($2 + [8]), ($4 + [8]), [8])
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($4 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$1 = ([0] - $4)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $192($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $192($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $192($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $148($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $31($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $149($4, $1)
	CALL $151(CALL $150(CALL $150($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $141 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*(($4 = CALL $191([24])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [688])
	CALL memcpy(($7 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)5614119998713757696, $2, (int_64)5614119998713757696, ($7 + [16]), [8])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)5614119998713757696) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)5614119998713757697
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)5614119998713757696
	$5 = *($4 + [12])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)5614119998713757696
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $142(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $192($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $140 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	*($1) = *(*($3))
	CALL eosio_assert([1], [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)5614119998713757696) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)5614119998713757697
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN12tokendapppub7airdropEmmy (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [320])
	*([0] + [4]) = $15
	CALL require_auth(*($0))
	*(($4 = ($15 + [216]))) = [0]
	*($15 + [200]) = (int_64)-1
	*($15 + [208]) = (int_64)0
	$12 = *($0)
	*($15 + [184]) = $12
	*($15 + [192]) = $12
	$9 = (int_64)0
	$10 = CALL db_find_i64($12, $12, (int_64)5614119998713757696, (int_64)5614119998713757696)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$10 = CALL $139(($15 + [184]), $10)
	CALL eosio_assert(((int_32)*($10 + [8]) == (int_32)($15 + [184])), [144])
	$9 = *($10)
	$7 = *($15 + [208])
	if ( ($7 == 0) ){ goto $label$1 }
	$8 = ($15 + [212])
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	$10 = ($10 + [-24])
	$5 = *($10)
	*($10) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $192($5)
	
.LABEL $label$5
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$4 }
	$10 = *(($15 + [208]))
	goto $label$2 
	
.LABEL $label$3
	$10 = $7
	
.LABEL $label$2
	*($8) = $7
	CALL $192($10)
	
.LABEL $label$1
	CALL eosio_assert(((uint_32)$2 > (uint_32)$1), [4864])
	*($4) = [0]
	*($15 + [200]) = (int_64)-1
	*($15 + [208]) = (int_64)0
	$12 = *($0)
	*($15 + [184]) = $12
	*($15 + [192]) = $12
	*($15 + [112]) = ((int_64)$9 + (int_64)1)
	CALL $124(($15 + [184]), ($15 + [112]), $12)
	$7 = *($15 + [208])
	if ( ($7 == 0) ){ goto $label$6 }
	$4 = ($15 + [212])
	$10 = *($4)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = ($10 + [-24])
	$5 = *($10)
	*($10) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $192($5)
	
.LABEL $label$10
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$9 }
	$10 = *(($15 + [208]))
	goto $label$7 
	
.LABEL $label$8
	$10 = $7
	
.LABEL $label$7
	*($4) = $7
	CALL $192($10)
	
.LABEL $label$6
	$10 = [0]
	*((($15 + [280]) + [32])) = [0]
	*($15 + [296]) = (int_64)-1
	*($15 + [304]) = (int_64)0
	$12 = *($0)
	*($15 + [280]) = $12
	*($15 + [288]) = $12
	$7 = [0]
	$5 = CALL db_find_i64($12, $12, (int_64)8406896585568179200, $9)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$11 }
	$7 = CALL $144(($15 + [280]), $5)
	CALL eosio_assert(((int_32)*($7 + [176]) == (int_32)($15 + [280])), [144])
	
.LABEL $label$11
	*((($15 + [184]) + [32])) = [0]
	*($15 + [200]) = (int_64)-1
	*($15 + [208]) = (int_64)0
	$12 = *($0)
	*($15 + [184]) = $12
	*($15 + [192]) = $12
	*($15 + [120]) = (int_64)314946699780
	*($15 + [112]) = (int_64)1
	CALL eosio_assert([1], [48])
	$12 = (int_64)1230260546
	
.LOOP $label$13:
	$5 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$12 = (uint_64)$12 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$12) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$5 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	CALL eosio_assert($5, [112])
	$10 = *(($15 + [212]))
	if ( ((int_32)$10 == (int_32)*(($15 + [208]))) ){ goto $label$17 }
	$10 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)($15 + [184])), [144])
	if ( $10 ){ goto $label$16 }
	$10 = ($15 + [112])
	goto $label$16 
	
.LABEL $label$17
	$10 = CALL db_find_i64(*($15 + [184]), *(($15 + [192])), (int_64)3724085271194468352, (int_64)3724085271194468352)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$18 }
	$10 = CALL $133(($15 + [184]), $10)
	CALL eosio_assert(((int_32)*($10 + [16]) == (int_32)($15 + [184])), [144])
	goto $label$16 
	
.LABEL $label$18
	$10 = ($15 + [112])
	
.LABEL $label$16
	*((($15 + [264]) + [8])) = *(($10 + [8]))
	*($15 + [264]) = *($10)
	$4 = *($15 + [208])
	if ( ($4 == 0) ){ goto $label$19 }
	$8 = ($15 + [212])
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$21 }
	
.LOOP $label$22:
	$10 = ($10 + [-24])
	$5 = *($10)
	*($10) = [0]
	if ( ($5 == 0) ){ goto $label$23 }
	CALL $192($5)
	
.LABEL $label$23
	if ( ((int_32)$4 != (int_32)$10) ){ goto $label$22 }
	$10 = *(($15 + [208]))
	goto $label$20 
	
.LABEL $label$21
	$10 = $4
	
.LABEL $label$20
	*($8) = $4
	CALL $192($10)
	
.LABEL $label$19
	*(($15 + [216])) = [0]
	*($15 + [200]) = (int_64)-1
	*($15 + [208]) = (int_64)0
	$12 = *($0)
	*($15 + [184]) = $12
	*($15 + [192]) = $12
	*((($15 + [112]) + [8])) = [0]
	*($15 + [112]) = (int_64)0
	$10 = CALL strlen([4880])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$24 }
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$27 }
	*($15 + [112]) = ($10 << [1])
	$4 = (($15 + [112]) | [1])
	if ( $10 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$5 = (($10 + [16]) & [-16])
	$4 = CALL $191($5)
	*($15 + [112]) = ($5 | [1])
	*($15 + [120]) = $4
	*($15 + [116]) = $10
	
.LABEL $label$26
	CALL memcpy($4, [4880], $10)
	
.LABEL $label$25
	$5 = [0]
	*(($4 + $10)) = [0]
	$10 = *(($15 + [212]))
	if ( ((int_32)$10 == (int_32)*(($15 + [208]))) ){ goto $label$29 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [12]) == (int_32)($15 + [184])), [144])
	goto $label$28 
	
.LABEL $label$29
	$10 = CALL db_find_i64(*($15 + [184]), *(($15 + [192])), (int_64)3724085271119308800, (int_64)3724085271119308800)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$28 }
	$5 = CALL $127(($15 + [184]), $10)
	CALL eosio_assert(((int_32)*($5 + [12]) == (int_32)($15 + [184])), [144])
	
.LABEL $label$28
	CALL $205(($15 + [248]), ( $5 ? ($15 + [112]) : $5 ))
	if ( ((*($15 + [112]) & [1]) == 0) ){ goto $label$30 }
	CALL $192(*($15 + [120]))
	
.LABEL $label$30
	$4 = *($15 + [208])
	if ( ($4 == 0) ){ goto $label$31 }
	$8 = ($15 + [212])
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$4) ){ goto $label$33 }
	
.LOOP $label$34:
	$10 = ($10 + [-24])
	$5 = *($10)
	*($10) = [0]
	if ( ($5 == 0) ){ goto $label$35 }
	if ( ((*($5) & [1]) == 0) ){ goto $label$36 }
	CALL $192(*($5 + [8]))
	
.LABEL $label$36
	CALL $192($5)
	
.LABEL $label$35
	if ( ((int_32)$4 != (int_32)$10) ){ goto $label$34 }
	$10 = *(($15 + [208]))
	goto $label$32 
	
.LABEL $label$33
	$10 = $4
	
.LABEL $label$32
	*($8) = $4
	CALL $192($10)
	
.LABEL $label$31
	$12 = CALL current_time()
	*(($15 + [212])) = [0]
	*(($15 + [216])) = [0]
	*($15 + [196]) = [0]
	*($15 + [200]) = [0]
	*($15 + [204]) = [0]
	*($15 + [208]) = [0]
	*($15 + [184]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($15 + [220]) = [0]
	*(($15 + [224])) = [0]
	*(($15 + [228])) = [0]
	*($15 + [232]) = [0]
	*(($15 + [236])) = [0]
	*(($15 + [240])) = [0]
	if ( (CALL is_account(*($7 + [8])) == 0) ){ goto $label$37 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$43 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$5 = ($5 + [165])
	goto $label$41 
	
.LABEL $label$43
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$39
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$38 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$44:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$45 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$47 }
	$5 = ($5 + [165])
	goto $label$46 
	
.LABEL $label$47
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$46
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$45
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$44 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$48:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$53 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$52 }
	$5 = ($5 + [165])
	goto $label$51 
	
.LABEL $label$53
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$52
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$51
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$50
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$49
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$48 }
	*($15) = $13
	$12 = *(($7 + [8]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *((($15 + [264]) + [8]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$55 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$54 
	
.LABEL $label$55
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$54
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$37 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$37
	if ( (CALL is_account(*($7 + [16])) == 0) ){ goto $label$56 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$57:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$62 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$61 }
	$5 = ($5 + [165])
	goto $label$60 
	
.LABEL $label$62
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$59 }
	goto $label$58 
	
.LABEL $label$61
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$60
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$59
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$58
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$57 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$63:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$64 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$66 }
	$5 = ($5 + [165])
	goto $label$65 
	
.LABEL $label$66
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$65
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$64
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$63 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$67:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$72 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$71 }
	$5 = ($5 + [165])
	goto $label$70 
	
.LABEL $label$72
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$69 }
	goto $label$68 
	
.LABEL $label$71
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$70
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$69
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$68
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$67 }
	*($15) = $13
	$12 = *(($7 + [16]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$74 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$73 
	
.LABEL $label$74
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$73
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$56 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$56
	if ( (CALL is_account(*($7 + [24])) == 0) ){ goto $label$75 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$76:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$81 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$80 }
	$5 = ($5 + [165])
	goto $label$79 
	
.LABEL $label$81
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$78 }
	goto $label$77 
	
.LABEL $label$80
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$79
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$78
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$77
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$76 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$82:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$83 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$85 }
	$5 = ($5 + [165])
	goto $label$84 
	
.LABEL $label$85
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$84
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$83
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$82 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$86:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$91 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$90 }
	$5 = ($5 + [165])
	goto $label$89 
	
.LABEL $label$91
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$90
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$89
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$88
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$87
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$86 }
	*($15) = $13
	$12 = *(($7 + [24]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*((($15 + [112]) + [24])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$93 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$92 
	
.LABEL $label$93
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$92
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$75 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$75
	if ( (CALL is_account(*($7 + [32])) == 0) ){ goto $label$94 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$95:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$100 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$99 }
	$5 = ($5 + [165])
	goto $label$98 
	
.LABEL $label$100
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$99
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$98
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$97
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$96
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$95 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$101:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$102 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$104 }
	$5 = ($5 + [165])
	goto $label$103 
	
.LABEL $label$104
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$103
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$102
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$101 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$105:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$110 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$5 = ($5 + [165])
	goto $label$108 
	
.LABEL $label$110
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$109
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$107
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$106
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$105 }
	*($15) = $13
	$12 = *(($7 + [32]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205((($15 + [112]) + [32]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$112 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$111 
	
.LABEL $label$112
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$111
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$94 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$94
	if ( (CALL is_account(*($7 + [40])) == 0) ){ goto $label$113 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$114:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$119 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$118 }
	$5 = ($5 + [165])
	goto $label$117 
	
.LABEL $label$119
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$116 }
	goto $label$115 
	
.LABEL $label$118
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$117
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$116
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$115
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$114 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$120:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$121 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$123 }
	$5 = ($5 + [165])
	goto $label$122 
	
.LABEL $label$123
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$122
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$121
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$120 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$124:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$129 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$128 }
	$5 = ($5 + [165])
	goto $label$127 
	
.LABEL $label$129
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$128
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$127
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$126
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$125
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$124 }
	*($15) = $13
	$12 = *(($7 + [40]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$131 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$130 
	
.LABEL $label$131
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$130
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$113 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$113
	if ( (CALL is_account(*($7 + [48])) == 0) ){ goto $label$132 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$133:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$138 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$137 }
	$5 = ($5 + [165])
	goto $label$136 
	
.LABEL $label$138
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$137
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$136
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$135
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$134
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$133 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$139:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$140 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$142 }
	$5 = ($5 + [165])
	goto $label$141 
	
.LABEL $label$142
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$141
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$140
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$139 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$143:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$148 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$147 }
	$5 = ($5 + [165])
	goto $label$146 
	
.LABEL $label$148
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$145 }
	goto $label$144 
	
.LABEL $label$147
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$146
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$145
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$144
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$143 }
	*($15) = $13
	$12 = *(($7 + [48]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$150 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$149 
	
.LABEL $label$150
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$149
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$132 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$132
	if ( (CALL is_account(*($7 + [56])) == 0) ){ goto $label$151 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$152:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$157 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$156 }
	$5 = ($5 + [165])
	goto $label$155 
	
.LABEL $label$157
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$156
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$155
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$154
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$153
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$152 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$158:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$159 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$161 }
	$5 = ($5 + [165])
	goto $label$160 
	
.LABEL $label$161
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$160
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$159
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$158 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$162:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$167 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$166 }
	$5 = ($5 + [165])
	goto $label$165 
	
.LABEL $label$167
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$164 }
	goto $label$163 
	
.LABEL $label$166
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$165
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$164
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$163
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$162 }
	*($15) = $13
	$12 = *(($7 + [56]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$169 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$168 
	
.LABEL $label$169
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$168
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$151 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$151
	if ( (CALL is_account(*($7 + [64])) == 0) ){ goto $label$170 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$171:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$176 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$175 }
	$5 = ($5 + [165])
	goto $label$174 
	
.LABEL $label$176
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$173 }
	goto $label$172 
	
.LABEL $label$175
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$174
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$173
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$172
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$171 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$177:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$178 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$180 }
	$5 = ($5 + [165])
	goto $label$179 
	
.LABEL $label$180
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$179
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$178
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$177 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$181:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$186 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$185 }
	$5 = ($5 + [165])
	goto $label$184 
	
.LABEL $label$186
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$183 }
	goto $label$182 
	
.LABEL $label$185
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$184
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$183
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$182
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$181 }
	*($15) = $13
	$12 = *(($7 + [64]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$188 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$187 
	
.LABEL $label$188
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$187
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$170 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$170
	if ( (CALL is_account(*($7 + [72])) == 0) ){ goto $label$189 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$190:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$195 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$194 }
	$5 = ($5 + [165])
	goto $label$193 
	
.LABEL $label$195
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$192 }
	goto $label$191 
	
.LABEL $label$194
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$193
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$192
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$191
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$190 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$196:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$197 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$199 }
	$5 = ($5 + [165])
	goto $label$198 
	
.LABEL $label$199
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$198
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$197
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$196 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$200:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$205 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$204 }
	$5 = ($5 + [165])
	goto $label$203 
	
.LABEL $label$205
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$202 }
	goto $label$201 
	
.LABEL $label$204
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$203
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$202
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$201
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$200 }
	*($15) = $13
	$12 = *(($7 + [72]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$207 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$206 
	
.LABEL $label$207
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$206
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$189 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$189
	if ( (CALL is_account(*($7 + [80])) == 0) ){ goto $label$208 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$209:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$214 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$213 }
	$5 = ($5 + [165])
	goto $label$212 
	
.LABEL $label$214
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$211 }
	goto $label$210 
	
.LABEL $label$213
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$212
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$211
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$210
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$209 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$215:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$216 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$218 }
	$5 = ($5 + [165])
	goto $label$217 
	
.LABEL $label$218
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$217
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$216
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$215 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$219:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$224 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$223 }
	$5 = ($5 + [165])
	goto $label$222 
	
.LABEL $label$224
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$221 }
	goto $label$220 
	
.LABEL $label$223
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$222
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$221
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$220
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$219 }
	*($15) = $13
	$12 = *(($7 + [80]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$226 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$225 
	
.LABEL $label$226
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$225
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$208 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$208
	if ( (CALL is_account(*($7 + [88])) == 0) ){ goto $label$227 }
	$4 = ($15 + [220])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$228:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$233 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$232 }
	$5 = ($5 + [165])
	goto $label$231 
	
.LABEL $label$233
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$230 }
	goto $label$229 
	
.LABEL $label$232
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$231
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$230
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$229
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$228 }
	*($15 + [24]) = $13
	*($15 + [16]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$234:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$235 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$237 }
	$5 = ($5 + [165])
	goto $label$236 
	
.LABEL $label$237
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$236
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$235
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$234 }
	*($15 + [96]) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$238:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$243 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$242 }
	$5 = ($5 + [165])
	goto $label$241 
	
.LABEL $label$243
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$240 }
	goto $label$239 
	
.LABEL $label$242
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$241
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$240
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$239
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$238 }
	*($15) = $13
	$12 = *(($7 + [88]))
	*(($15 + [132])) = *($15 + [268])
	*($15 + [120]) = $12
	*(($15 + [140])) = *(($15 + [276]))
	*(($15 + [136])) = *(($15 + [272]))
	*($15 + [112]) = $6
	*($15 + [128]) = *($15 + [264])
	CALL $205(($15 + [144]), ($15 + [248]))
	$10 = (($15 + [184]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [228]))) ){ goto $label$245 }
	CALL $28($5, ($15 + [16]), *($15 + [96]), *($15), ($15 + [112]))
	*($10) = (*($10) + [40])
	goto $label$244 
	
.LABEL $label$245
	CALL $145($4, ($15 + [16]), ($15 + [96]), $15, ($15 + [112]))
	
.LABEL $label$244
	if ( ((*($15 + [144]) & [1]) == 0) ){ goto $label$227 }
	CALL $192(*(($15 + [152])))
	
.LABEL $label$227
	*(($15 + [204])) = [1]
	*($15 + [120]) = (int_64)0
	$4 = ((int_32)$1 * (int_32)[3])
	*($15 + [112]) = (CASTING uint_64)(uint_32 ($4 + [1]))
	$12 = *($0)
	CALL $146(($15 + [16]), ($15 + [184]))
	$10 = *($15 + [16])
	CALL send_deferred(($15 + [112]), $12, $10, (*($15 + [20]) - $10), [0])
	$10 = *($15 + [16])
	if ( ($10 == 0) ){ goto $label$246 }
	*($15 + [20]) = $10
	CALL $192($10)
	
.LABEL $label$246
	$12 = CALL current_time()
	*(($15 + [140])) = [0]
	*(($15 + [144])) = [0]
	*($15 + [124]) = [0]
	*($15 + [128]) = [0]
	*($15 + [132]) = [0]
	*($15 + [136]) = [0]
	*($15 + [112]) = ((CASTING uint_32)(uint_64 ((uint_64)$12 / (uint_64)(int_64)1000000)) + [60])
	*($15 + [148]) = [0]
	*(($15 + [152])) = [0]
	*(($15 + [156])) = [0]
	*($15 + [160]) = [0]
	*(($15 + [164])) = [0]
	*(($15 + [168])) = [0]
	if ( (CALL is_account(*($7 + [96])) == 0) ){ goto $label$247 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$248:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$253 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$252 }
	$5 = ($5 + [165])
	goto $label$251 
	
.LABEL $label$253
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$250 }
	goto $label$249 
	
.LABEL $label$252
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$251
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$250
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$249
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$248 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$254:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$255 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$257 }
	$5 = ($5 + [165])
	goto $label$256 
	
.LABEL $label$257
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$256
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$255
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$254 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$258:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$263 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$262 }
	$5 = ($5 + [165])
	goto $label$261 
	
.LABEL $label$263
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$260 }
	goto $label$259 
	
.LABEL $label$262
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$261
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$260
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$259
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$258 }
	*($15 + [88]) = $13
	$12 = *(($7 + [96]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$265 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$264 
	
.LABEL $label$265
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$264
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$247 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$247
	if ( (CALL is_account(*($7 + [104])) == 0) ){ goto $label$266 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$267:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$272 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$271 }
	$5 = ($5 + [165])
	goto $label$270 
	
.LABEL $label$272
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$269 }
	goto $label$268 
	
.LABEL $label$271
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$270
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$269
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$268
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$267 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$273:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$274 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$276 }
	$5 = ($5 + [165])
	goto $label$275 
	
.LABEL $label$276
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$275
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$274
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$273 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$277:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$282 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$281 }
	$5 = ($5 + [165])
	goto $label$280 
	
.LABEL $label$282
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$279 }
	goto $label$278 
	
.LABEL $label$281
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$280
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$279
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$278
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$277 }
	*($15 + [88]) = $13
	$12 = *(($7 + [104]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$284 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$283 
	
.LABEL $label$284
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$283
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$266 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$266
	if ( (CALL is_account(*($7 + [112])) == 0) ){ goto $label$285 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$286:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$291 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$290 }
	$5 = ($5 + [165])
	goto $label$289 
	
.LABEL $label$291
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$288 }
	goto $label$287 
	
.LABEL $label$290
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$289
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$288
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$287
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$286 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$292:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$293 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$295 }
	$5 = ($5 + [165])
	goto $label$294 
	
.LABEL $label$295
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$294
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$293
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$292 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$296:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$301 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$300 }
	$5 = ($5 + [165])
	goto $label$299 
	
.LABEL $label$301
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$298 }
	goto $label$297 
	
.LABEL $label$300
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$299
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$298
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$297
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$296 }
	*($15 + [88]) = $13
	$12 = *(($7 + [112]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$303 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$302 
	
.LABEL $label$303
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$302
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$285 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$285
	if ( (CALL is_account(*($7 + [120])) == 0) ){ goto $label$304 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$305:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$310 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$309 }
	$5 = ($5 + [165])
	goto $label$308 
	
.LABEL $label$310
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$307 }
	goto $label$306 
	
.LABEL $label$309
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$308
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$307
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$306
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$305 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$311:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$312 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$314 }
	$5 = ($5 + [165])
	goto $label$313 
	
.LABEL $label$314
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$313
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$312
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$311 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$315:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$320 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$319 }
	$5 = ($5 + [165])
	goto $label$318 
	
.LABEL $label$320
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$317 }
	goto $label$316 
	
.LABEL $label$319
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$318
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$317
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$316
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$315 }
	*($15 + [88]) = $13
	$12 = *(($7 + [120]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$322 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$321 
	
.LABEL $label$322
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$321
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$304 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$304
	if ( (CALL is_account(*($7 + [128])) == 0) ){ goto $label$323 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$324:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$329 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$328 }
	$5 = ($5 + [165])
	goto $label$327 
	
.LABEL $label$329
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$326 }
	goto $label$325 
	
.LABEL $label$328
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$327
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$326
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$325
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$324 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$330:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$331 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$333 }
	$5 = ($5 + [165])
	goto $label$332 
	
.LABEL $label$333
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$332
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$331
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$330 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$334:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$339 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$338 }
	$5 = ($5 + [165])
	goto $label$337 
	
.LABEL $label$339
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$336 }
	goto $label$335 
	
.LABEL $label$338
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$337
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$336
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$335
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$334 }
	*($15 + [88]) = $13
	$12 = *(($7 + [128]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$341 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$340 
	
.LABEL $label$341
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$340
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$323 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$323
	if ( (CALL is_account(*($7 + [136])) == 0) ){ goto $label$342 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$343:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$348 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$347 }
	$5 = ($5 + [165])
	goto $label$346 
	
.LABEL $label$348
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$345 }
	goto $label$344 
	
.LABEL $label$347
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$346
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$345
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$344
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$343 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$349:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$350 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$352 }
	$5 = ($5 + [165])
	goto $label$351 
	
.LABEL $label$352
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$351
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$350
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$349 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$353:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$358 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$357 }
	$5 = ($5 + [165])
	goto $label$356 
	
.LABEL $label$358
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$355 }
	goto $label$354 
	
.LABEL $label$357
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$356
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$355
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$354
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$353 }
	*($15 + [88]) = $13
	$12 = *(($7 + [136]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$360 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$359 
	
.LABEL $label$360
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$359
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$342 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$342
	if ( (CALL is_account(*($7 + [144])) == 0) ){ goto $label$361 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$362:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$367 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$366 }
	$5 = ($5 + [165])
	goto $label$365 
	
.LABEL $label$367
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$364 }
	goto $label$363 
	
.LABEL $label$366
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$365
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$364
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$363
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$362 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$368:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$369 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$371 }
	$5 = ($5 + [165])
	goto $label$370 
	
.LABEL $label$371
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$370
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$369
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$368 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$372:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$377 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$376 }
	$5 = ($5 + [165])
	goto $label$375 
	
.LABEL $label$377
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$374 }
	goto $label$373 
	
.LABEL $label$376
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$375
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$374
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$373
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$372 }
	*($15 + [88]) = $13
	$12 = *(($7 + [144]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$379 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$378 
	
.LABEL $label$379
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$378
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$361 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$361
	if ( (CALL is_account(*($7 + [152])) == 0) ){ goto $label$380 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$381:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$386 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$385 }
	$5 = ($5 + [165])
	goto $label$384 
	
.LABEL $label$386
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$383 }
	goto $label$382 
	
.LABEL $label$385
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$384
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$383
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$382
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$381 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$387:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$388 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$390 }
	$5 = ($5 + [165])
	goto $label$389 
	
.LABEL $label$390
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$389
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$388
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$387 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$391:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$396 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$395 }
	$5 = ($5 + [165])
	goto $label$394 
	
.LABEL $label$396
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$393 }
	goto $label$392 
	
.LABEL $label$395
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$394
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$393
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$392
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$391 }
	*($15 + [88]) = $13
	$12 = *(($7 + [152]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$398 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$397 
	
.LABEL $label$398
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$397
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$380 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$380
	if ( (CALL is_account(*($7 + [160])) == 0) ){ goto $label$399 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$400:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$405 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$404 }
	$5 = ($5 + [165])
	goto $label$403 
	
.LABEL $label$405
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$402 }
	goto $label$401 
	
.LABEL $label$404
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$403
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$402
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$401
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$400 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$406:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$407 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$409 }
	$5 = ($5 + [165])
	goto $label$408 
	
.LABEL $label$409
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$408
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$407
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$406 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$410:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$415 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$414 }
	$5 = ($5 + [165])
	goto $label$413 
	
.LABEL $label$415
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$412 }
	goto $label$411 
	
.LABEL $label$414
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$413
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$412
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$411
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$410 }
	*($15 + [88]) = $13
	$12 = *(($7 + [160]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$417 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$416 
	
.LABEL $label$417
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$416
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$399 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$399
	if ( (CALL is_account(*($7 + [168])) == 0) ){ goto $label$418 }
	$8 = ($15 + [148])
	$6 = *($0)
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$419:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$424 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$423 }
	$5 = ($5 + [165])
	goto $label$422 
	
.LABEL $label$424
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$421 }
	goto $label$420 
	
.LABEL $label$423
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$422
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$421
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$420
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$419 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$14 = (int_64)59
	$10 = [4896]
	$13 = (int_64)0
	
.LOOP $label$425:
	$11 = (int_64)0
	if ( ((uint_64)$12 > (uint_64)(int_64)11) ){ goto $label$426 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$428 }
	$5 = ($5 + [165])
	goto $label$427 
	
.LABEL $label$428
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$427
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$426
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$11 | (int_64)$13)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$425 }
	*($15) = $13
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [1568]
	$13 = (int_64)0
	
.LOOP $label$429:
	if ( ((uint_64)$12 > (uint_64)(int_64)7) ){ goto $label$434 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$433 }
	$5 = ($5 + [165])
	goto $label$432 
	
.LABEL $label$434
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$431 }
	goto $label$430 
	
.LABEL $label$433
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$432
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$431
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$430
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$429 }
	*($15 + [88]) = $13
	$12 = *(($7 + [168]))
	*(($15 + [36])) = *($15 + [268])
	*($15 + [24]) = $12
	*(($15 + [44])) = *(($15 + [276]))
	*(($15 + [40])) = *(($15 + [272]))
	*($15 + [16]) = $6
	*($15 + [32]) = *($15 + [264])
	CALL $205(($15 + [48]), ($15 + [248]))
	$10 = (($15 + [112]) + [40])
	$5 = *($10)
	if ( ((uint_32)$5 >= (uint_32)*(($15 + [156]))) ){ goto $label$436 }
	CALL $28($5, ($15 + [96]), *($15), *($15 + [88]), ($15 + [16]))
	*($10) = (*($10) + [40])
	goto $label$435 
	
.LABEL $label$436
	CALL $145($8, ($15 + [96]), $15, ($15 + [88]), ($15 + [16]))
	
.LABEL $label$435
	if ( ((*($15 + [48]) & [1]) == 0) ){ goto $label$418 }
	CALL $192(*(($15 + [56])))
	
.LABEL $label$418
	*(($15 + [132])) = [1]
	$12 = (int_64)0
	*($15 + [24]) = (int_64)0
	*($15 + [16]) = (CASTING uint_64)(uint_32 ($4 + [2]))
	$14 = *($0)
	CALL $146(($15 + [96]), ($15 + [112]))
	$10 = *($15 + [96])
	CALL send_deferred(($15 + [16]), $14, $10, (*($15 + [100]) - $10), [0])
	$10 = *($15 + [96])
	if ( ($10 == 0) ){ goto $label$437 }
	*($15 + [100]) = $10
	CALL $192($10)
	
.LABEL $label$437
	$14 = CALL current_time()
	*(($15 + [44])) = [0]
	*(($15 + [48])) = [0]
	*($15 + [28]) = [0]
	*($15 + [32]) = [0]
	*($15 + [36]) = [0]
	*($15 + [40]) = [0]
	*($15 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$14 / (uint_64)(int_64)1000000)) + [60])
	*($15 + [52]) = [0]
	*(($15 + [56])) = [0]
	*(($15 + [60])) = [0]
	*($15 + [64]) = [0]
	*(($15 + [68])) = [0]
	*(($15 + [72])) = [0]
	$7 = ($15 + [52])
	$6 = *($0)
	$11 = (int_64)59
	$10 = [1536]
	$13 = (int_64)0
	
.LOOP $label$438:
	if ( ((uint_64)$12 > (uint_64)(int_64)5) ){ goto $label$443 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$442 }
	$5 = ($5 + [165])
	goto $label$441 
	
.LABEL $label$443
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$440 }
	goto $label$439 
	
.LABEL $label$442
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$441
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$440
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$439
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$438 }
	*($15 + [104]) = $13
	*($15 + [96]) = $6
	$12 = (int_64)0
	$11 = (int_64)59
	$10 = [4912]
	$13 = (int_64)0
	
.LOOP $label$444:
	if ( ((uint_64)$12 > (uint_64)(int_64)6) ){ goto $label$449 }
	$5 = *($10)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$448 }
	$5 = ($5 + [165])
	goto $label$447 
	
.LABEL $label$449
	$14 = (int_64)0
	if ( ((uint_64)$12 <= (uint_64)(int_64)11) ){ goto $label$446 }
	goto $label$445 
	
.LABEL $label$448
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$447
	$14 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$446
	$14 = ((int_64)((int_64)$14 & (int_64)31) << (int_64)((int_64)$11 & (int_64)4294967295))
	
.LABEL $label$445
	$10 = ($10 + [1])
	$12 = ((int_64)$12 + (int_64)1)
	$13 = ((int_64)$14 | (int_64)$13)
	$11 = ((int_64)$11 + (int_64)-5)
	if ( ((int_64)$11 != (int_64)-6) ){ goto $label$444 }
	*($15 + [88]) = $13
	*($15 + [4]) = $2
	*($15) = ($1 + [1])
	*($15 + [8]) = $9
	CALL $147($7, ($15 + [96]), $0, ($15 + [88]), $15)
	$12 = *($0)
	*(($15 + [36])) = [1]
	*($15 + [104]) = (int_64)0
	*($15 + [96]) = (CASTING uint_64)(uint_32 $4)
	CALL $146($15, ($15 + [16]))
	$10 = *($15)
	CALL send_deferred(($15 + [96]), $12, $10, (*($15 + [4]) - $10), [0])
	$10 = *($15)
	if ( ($10 == 0) ){ goto $label$450 }
	*($15 + [4]) = $10
	CALL $192($10)
	
.LABEL $label$450
	CALL $79(($15 + [16]))
	CALL $79(($15 + [112]))
	CALL $79(($15 + [184]))
	if ( ((*($15 + [248]) & [1]) == 0) ){ goto $label$451 }
	CALL $192(*($15 + [256]))
	
.LABEL $label$451
	$7 = *($15 + [304])
	if ( ($7 == 0) ){ goto $label$452 }
	$0 = ($15 + [308])
	$10 = *($0)
	if ( ((int_32)$10 == (int_32)$7) ){ goto $label$454 }
	
.LOOP $label$455:
	$10 = ($10 + [-24])
	$5 = *($10)
	*($10) = [0]
	if ( ($5 == 0) ){ goto $label$456 }
	CALL $192($5)
	
.LABEL $label$456
	if ( ((int_32)$7 != (int_32)$10) ){ goto $label$455 }
	$10 = *(($15 + [304]))
	goto $label$453 
	
.LABEL $label$454
	$10 = $7
	
.LABEL $label$453
	*($0) = $7
	CALL $192($10)
	
.LABEL $label$452
	*([0] + [4]) = ($15 + [320])
	return (unreachable)
	
.LABEL $label$24
	CALL $193(($15 + [112]))
}

void .FUNC $142 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $64(*($1), ($0 + [32]))
}

void .FUNC $73 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [688])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [688])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [688])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [688])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [688])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = *($0 + [4])
	$6 = [0]
	$5 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($7 <= *($2)), [3136])
	$7 = *($3)
	$4 = *($7)
	$7 = ($7 + [1])
	*($3) = $7
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$6 = *($1)
	$2 = *($1 + [4])
	$7 = ((int_32)($2 - $6) / (int_32)[40])
	$4 = (CASTING uint_32)(uint_64 $5)
	if ( ((uint_32)$4 <= (uint_32)$7) ){ goto $label$3 }
	CALL $82($1, ($4 - $7))
	$2 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$7) ){ goto $label$2 }
	$4 = ((int_32)$4 * (int_32)[40])
	$3 = ($6 + $4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$4 }
	$6 = (([0] - $6) - $4)
	$4 = ($2 + [-24])
	
.LOOP $label$5:
	$7 = *(($4 + [12]))
	if ( ($7 == 0) ){ goto $label$6 }
	*(($4 + [16])) = $7
	CALL $192($7)
	
.LABEL $label$6
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [4])) = $7
	CALL $192($7)
	
.LABEL $label$7
	$4 = ($4 + [-40])
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $3
	$2 = $3
	
.LABEL $label$2
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$4 = ($0 + [4])
	
.LOOP $label$9:
	$6 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*($6) - *($4)) > (uint_32)[7]), [352])
	CALL memcpy($7, *($4), [8])
	$3 = (*($4) + [8])
	*($4) = $3
	CALL eosio_assert(((uint_32)(*($6) - $3) > (uint_32)[7]), [352])
	CALL memcpy(($7 + [8]), *($4), [8])
	*($4) = (*($4) + [8])
	CALL $81(CALL $83($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [3136])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$3 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $3) >> [4])
	$4 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$3 }
	CALL $80($1, ($4 - $5))
	$7 = *(($1 + [4]))
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$4 >= (uint_32)$5) ){ goto $label$2 }
	$4 = ($4 << [4])
	$2 = ($3 + $4)
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$3 = (([0] - $3) - $4)
	$4 = ($7 + [-12])
	
.LOOP $label$5:
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [4])) = $5
	CALL $192($5)
	
.LABEL $label$6
	$4 = ($4 + [-16])
	if ( ((int_32)($4 + $3) != (int_32)[-12]) ){ goto $label$5 }
	
.LABEL $label$4
	*(($1 + [4])) = $2
	$7 = $2
	
.LABEL $label$2
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$7 }
	$3 = ($0 + [8])
	
.LOOP $label$8:
	$5 = ($0 + [4])
	CALL eosio_assert(((uint_32)(*($3) - *($5)) > (uint_32)[1]), [352])
	CALL memcpy($4, *($5), [2])
	*($5) = (*($5) + [2])
	CALL $81($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$7
	return $0
}

void .FUNC $74 (int_32 $0, int_64 $1)
{
	int_32 $2
	float_64 $3
	int_32 $4
	float_64 $5
	float_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL $65($0)
	CALL eosio_assert(((int_64)$1 > (int_64)0), [2928])
	CALL eosio_assert(((int_64)*($0 + [80]) < (int_64)*($0 + [32])), [2880])
	$2 = ($0 + [24])
	$3 = CALL __floattidf(*($0 + [16]), *($2))
	$4 = ($0 + [72])
	$5 = CALL __floattidf(*($0 + [64]), *($4))
	$5 = (CASTING float_64)(int_64 *($0 + [80]))
	$6 = (float_64)
	$3 = ((float_64)(CASTING float_64)(int_64 $1) + (float_64)(float_64))($5 - $3)
	$6 = (CASTING float_64)(int_64 *($0 + [32]))
	CALL __fixdfti(($8 + [16]), ((float_64)((float_64)$6 * (float_64)$3)) / (float_64)$6($6 - $5))))
	*($0 + [64]) = *($8 + [16])
	CALL __fixdfti($8, ((float_64)((float_64)$5 * (float_64)$3) / (float_64)$6))
	$7 = *($8)
	*($0 + [16]) = $7
	*($4) = *((($8 + [16]) + [8]))
	$1 = *(($8 + [8]))
	*($2) = $1
	CALL eosio_assert(( ((int_64)$7 != (int_64)0) ? ((int_64)$1 > (int_64)0) : (int_64)($1 == 0) ), [2368])
	CALL eosio_assert(((int_64)*($0 + [80]) > (int_64)0), [2432])
	$7 = *($2)
	$1 = *($4)
	CALL eosio_assert(( ((uint_64)*($0 + [64]) >= (uint_64)*($0 + [16])) ? ((int_64)$1 >= (int_64)$7) : ((int_64)$1 == (int_64)$7) ), [2496])
	CALL eosio_assert(((int_64)*($0 + [32]) >= (int_64)*($0 + [80])), [2544])
	*([0] + [4]) = ($8 + [32])
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($1, *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [352])
	CALL memcpy(($1 + [4]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [352])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	$6 = [0]
	$5 = (int_64)0
	
.LOOP $label$1:
	CALL eosio_assert(($4 <= *(($0 + [8]))), [3136])
	$7 = ($0 + [4])
	$4 = *($7)
	$2 = *($4)
	$4 = ($4 + [1])
	*($7) = $4
	$6 = ($6 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $6)) | (int_64)$5)
	$6 = ($6 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$1 }
	*($1 + [12]) = $5
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)*($3) != (int_32)$4), [352])
	$4 = ($0 + [4])
	CALL memcpy(($1 + [16]), *($4), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	$7 = [0]
	$5 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(($6 <= *($3)), [3136])
	$6 = *($4)
	$2 = *($6)
	$6 = ($6 + [1])
	*($4) = $6
	$7 = ($7 & [255])
	$5 = ((int_64)(CASTING uint_64)(uint_32 (($2 & [127]) << $7)) | (int_64)$5)
	$7 = ($7 + [7])
	if ( uint_32($2 >> [7]) ){ goto $label$2 }
	*($1 + [20]) = $5
	return $0
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $191([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [3076]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $206($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $196($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $79 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $192($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $192($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $192($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $192($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $192($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $192($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $192($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $192($5)
	
.LABEL $label$12
	return $0
}

void .FUNC _ZN12tokendapppub7destroyENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [128])
	*([0] + [4]) = $8
	if ( (*($1) & [1]) ){ goto $label$2 }
	$4 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$3 = ($4 + $1)
	$2 = ($1 + [1])
	$1 = $2
	if ( *(($3 + [1])) ){ goto $label$3 }
	$7 = (int_64)0
	if ( ($2 == 0) ){ goto $label$4 }
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (int_64)8
	$7 = (int_64)0
	
.LOOP $label$5:
	$1 = *($4)
	if ( ((uint_32)(($1 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$7 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$6 & (int_64)4294967288)) | (int_64)$7)
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)8)
	$5 = ((int_64)$5 + (int_64)-1)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$4
	*(($8 + [112])) = [0]
	*($8 + [96]) = (int_64)-1
	*($8 + [104]) = (int_64)0
	$5 = *($0)
	*($8 + [80]) = $5
	$6 = (uint_64)$7 >> (uint_64)(int_64)8
	*($8 + [88]) = $6)
	$1 = [0]
	$4 = CALL db_find_i64($5, $6, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$7 }
	$1 = CALL $7(($8 + [80]), $4)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($8 + [80])), [144])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [208])
	$1 = *(($8 + [108]))
	if ( ((int_32)$1 == (int_32)*(($8 + [104]))) ){ goto $label$9 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($8 + [80])), [144])
	goto $label$8 
	
.LABEL $label$9
	$1 = [0]
	$4 = CALL db_find_i64(*($8 + [80]), *(($8 + [88])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	$1 = CALL $7(($8 + [80]), $4)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($8 + [80])), [144])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [256])
	$5 = *($1 + [80])
	$7 = *($1 + [32])
	CALL require_auth(*($1 + [8]))
	CALL eosio_assert(((int_64)$7 == (int_64)$5), [4112])
	$1 = *(($8 + [108]))
	if ( ((int_32)$1 == (int_32)*(($8 + [104]))) ){ goto $label$12 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($8 + [80])), [144])
	if ( $1 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$1 = CALL db_find_i64(*($8 + [80]), *(($8 + [88])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$10 }
	$1 = CALL $7(($8 + [80]), $1)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($8 + [80])), [144])
	
.LABEL $label$11
	CALL eosio_assert([1], [1888])
	CALL eosio_assert([1], [1936])
	$4 = CALL db_next_i64(*($1 + [116]), ($8 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	CALL $7(($8 + [80]), $4)
	
.LABEL $label$13
	CALL $99(($8 + [80]), $1)
	
.LABEL $label$10
	*((($8 + [40]) + [32])) = [0]
	*($8 + [56]) = (int_64)-1
	*($8 + [64]) = (int_64)0
	$5 = *($0)
	*($8 + [40]) = $5
	*($8 + [48]) = $6
	$1 = CALL db_find_i64($5, $6, (int_64)-4157508551318700032, $6)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$14 }
	$1 = CALL $11(($8 + [40]), $1)
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)($8 + [40])), [144])
	CALL eosio_assert([1], [1888])
	CALL eosio_assert([1], [1936])
	$4 = CALL db_next_i64(*($1 + [44]), $8)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$15 }
	CALL $11(($8 + [40]), $4)
	
.LABEL $label$15
	CALL $100(($8 + [40]), $1)
	
.LABEL $label$14
	*(($8 + [32])) = [0]
	*($8 + [16]) = (int_64)-1
	*($8 + [24]) = (int_64)0
	$5 = *($0)
	*($8) = $5
	*($8 + [8]) = $6
	$1 = CALL db_find_i64($5, $6, (int_64)-5001621769904193536, (int_64)-5001621769904193536)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$16 }
	CALL eosio_assert(((int_32)*(CALL $26($8, $1) + [8]) == (int_32)$8), [144])
	$1 = *(($8 + [28]))
	if ( ((int_32)$1 == (int_32)*(($8 + [24]))) ){ goto $label$18 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$8), [144])
	if ( $1 ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	$1 = CALL db_find_i64(*($8), *(($8 + [8])), (int_64)-5001621769904193536, (int_64)-5001621769904193536)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$16 }
	$1 = CALL $26($8, $1)
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$8), [144])
	
.LABEL $label$17
	CALL eosio_assert([1], [1888])
	CALL eosio_assert([1], [1936])
	$4 = CALL db_next_i64(*($1 + [12]), ($8 + [120]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$19 }
	CALL $26($8, $4)
	
.LABEL $label$19
	CALL $101($8, $1)
	
.LABEL $label$16
	$3 = *($8 + [24])
	if ( ($3 == 0) ){ goto $label$20 }
	$2 = ($8 + [28])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$22 }
	
.LOOP $label$23:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$24 }
	CALL $192($4)
	
.LABEL $label$24
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$23 }
	$1 = *(($8 + [24]))
	goto $label$21 
	
.LABEL $label$22
	$1 = $3
	
.LABEL $label$21
	*($2) = $3
	CALL $192($1)
	
.LABEL $label$20
	$3 = *($8 + [64])
	if ( ($3 == 0) ){ goto $label$25 }
	$2 = ($8 + [68])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$27 }
	
.LOOP $label$28:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$29 }
	CALL $192($4)
	
.LABEL $label$29
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$28 }
	$1 = *(($8 + [64]))
	goto $label$26 
	
.LABEL $label$27
	$1 = $3
	
.LABEL $label$26
	*($2) = $3
	CALL $192($1)
	
.LABEL $label$25
	$3 = *($8 + [104])
	if ( ($3 == 0) ){ goto $label$30 }
	$2 = ($8 + [108])
	$1 = *($2)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$32 }
	
.LOOP $label$33:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$34 }
	CALL $192($4)
	
.LABEL $label$34
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$33 }
	$1 = *(($8 + [104]))
	goto $label$31 
	
.LABEL $label$32
	$1 = $3
	
.LABEL $label$31
	*($2) = $3
	CALL $192($1)
	
.LABEL $label$30
	*([0] + [4]) = ($8 + [128])
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [1984])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [2032])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [2096])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $192($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $192($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [116]))
}

void .FUNC _ZN12tokendapppub8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [192])
	*([0] + [4]) = $14
	*($14 + [80]) = $1
	CALL $78(($14 + [120]), ($14 + [80]))
	$13 = [0]
	if ( CALL $201(($14 + [120]), [46], [0]) ){ goto $label$1 }
	$13 = (CALL $202(($14 + [120]), [46], [-1]) == 0)
	
.LABEL $label$1
	if ( ((*($14 + [120]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($14 + [128]))
	
.LABEL $label$2
	$12 = $1
	if ( ($13 == 0) ){ goto $label$3 }
	$10 = (int_64)0
	$9 = (int_64)59
	$13 = [1328]
	$12 = (int_64)0
	
.LOOP $label$4:
	$11 = (int_64)0
	if ( ((uint_64)$10 > (uint_64)(int_64)11) ){ goto $label$5 }
	$7 = *($13)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$7 = ($7 + [165])
	goto $label$6 
	
.LABEL $label$7
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($7 & [31])) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$5
	$13 = ($13 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$4 }
	
.LABEL $label$3
	CALL eosio_assert(((int_64)$1 != (int_64)$2), [3904])
	CALL require_auth($12)
	CALL eosio_assert(CALL $fimport$18($2), [3936])
	$11 = *($3 + [8])
	*(($14 + [152])) = [0]
	$9 = (uint_64)$11 >> (uint_64)(int_64)8
	*($14 + [128]) = $9)
	*($14 + [136]) = (int_64)-1
	*($14 + [144]) = (int_64)0
	$10 = *($0)
	*($14 + [120]) = $10
	$13 = [0]
	$7 = CALL db_find_i64($10, $9, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$13 = CALL $7(($14 + [120]), $7)
	CALL eosio_assert(((int_32)*($13 + [112]) == (int_32)($14 + [120])), [144])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [416])
	$13 = *(($14 + [148]))
	if ( ((int_32)$13 == (int_32)*(($14 + [144]))) ){ goto $label$10 }
	$13 = *(($13 + [-24]))
	CALL eosio_assert(((int_32)*($13 + [112]) == (int_32)($14 + [120])), [144])
	goto $label$9 
	
.LABEL $label$10
	$13 = [0]
	$7 = CALL db_find_i64(*($14 + [120]), *(($14 + [128])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$9 }
	$13 = CALL $7(($14 + [120]), $7)
	CALL eosio_assert(((int_32)*($13 + [112]) == (int_32)($14 + [120])), [144])
	
.LABEL $label$9
	$7 = [0]
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [256])
	$5 = *($13)
	$6 = *($3)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$13 = [0]
	$10 = $9
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$7 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$7 = [0]
	
.LABEL $label$11
	CALL eosio_assert($7, [800])
	CALL eosio_assert(((int_64)$6 > (int_64)0), [3968])
	CALL eosio_assert(((int_64)$11 == (int_64)$5), [464])
	$13 = *($4)
	if ( ($13 & [1]) ){ goto $label$17 }
	$13 = uint_32($13 >> [1])
	goto $label$16 
	
.LABEL $label$17
	$13 = *($4 + [4])
	
.LABEL $label$16
	CALL eosio_assert(($13 <= [257]), [704])
	*(($14 + [112])) = [0]
	*($14 + [96]) = (int_64)-1
	*($14 + [104]) = (int_64)0
	$10 = *($0)
	*($14 + [80]) = $10
	*($14 + [88]) = $9
	$13 = CALL db_find_i64($10, $9, (int_64)-3617168955010973696, (int_64)-3617168955010973696)
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$19 }
	CALL eosio_assert(((int_32)*(CALL $95(($14 + [80]), $13) + [8]) == (int_32)($14 + [80])), [144])
	CALL eosio_assert(((int_64)CALL $96(($14 + [80])) == (int_64)1), [4000])
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([1], [4000])
	
.LABEL $label$18
	CALL require_recipient($12)
	CALL require_recipient($2)
	*(($14 + [72])) = [0]
	*($14 + [56]) = (int_64)-1
	*($14 + [64]) = (int_64)0
	$10 = *($0)
	*($14 + [40]) = $10
	*($14 + [48]) = $1
	$13 = [0]
	$7 = CALL db_find_i64($10, $1, (int_64)3607749779137757184, $9)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$20 }
	$13 = CALL $18(($14 + [40]), $7)
	CALL eosio_assert(((int_32)*($13 + [16]) == (int_32)($14 + [40])), [144])
	
.LABEL $label$20
	$7 = ((int_32)$13 != (int_32)[0])
	CALL eosio_assert($7, [4032])
	CALL eosio_assert(((int_64)*($13) >= (int_64)$6), [4080])
	CALL eosio_assert($7, [1616])
	CALL eosio_assert(((int_32)*($13 + [16]) == (int_32)($14 + [40])), [912])
	CALL eosio_assert(((int_64)*($14 + [40]) == (int_64)CALL $fimport$4()), [960])
	$10 = *($13 + [8])
	CALL eosio_assert(((int_64)$11 == (int_64)$10), [3344])
	$1 = (int_64)
	*($13) = $1(*($13) - $6))
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [3392])
	CALL eosio_assert(((int_64)*($13) < (int_64)4611686018427387904), [3424])
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$10) == (int_64)(uint_64)*($13 + [8]) >> (uint_64)(int_64)8)), [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy(($14 + [160]), $13, [8])
	CALL eosio_assert([1], [688])
	$4 = (($14 + [160]) | [8])
	CALL memcpy($4, ($13 + [8]), [8])
	CALL db_update_i64(*($13 + [20]), $12, ($14 + [160]), [16])
	$8 = (($14 + [40]) + [16])
	if ( (uint_64)($10 <= *($8)) ){ goto $label$21 }
	*($8) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$21
	if ( ((int_64)*($13) != (int_64)0) ){ goto $label$22 }
	CALL eosio_assert($7, [1888])
	CALL eosio_assert($7, [1936])
	$7 = CALL db_next_i64(*(($13 + [20])), $14)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$23 }
	CALL $18(($14 + [40]), $7)
	
.LABEL $label$23
	CALL $88(($14 + [40]), $13)
	
.LABEL $label$22
	$13 = [0]
	*(($14 + [32])) = [0]
	*($14 + [16]) = (int_64)-1
	*($14 + [24]) = (int_64)0
	$10 = *($0)
	*($14) = $10
	*($14 + [8]) = $2
	$7 = CALL db_find_i64($10, $2, (int_64)3607749779137757184, $9)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$27 }
	$13 = CALL $18($14, $7)
	CALL eosio_assert(((int_32)*($13 + [16]) == (int_32)$14), [144])
	CALL eosio_assert([1], [1616])
	CALL eosio_assert(((int_32)*($13 + [16]) == (int_32)$14), [912])
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$4()), [960])
	$10 = *($13 + [8])
	CALL eosio_assert(((int_64)$11 == (int_64)$10), [1024])
	$9 = ((int_64)*($13) + (int_64)*($3))
	*($13) = $9
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [1072])
	CALL eosio_assert(((int_64)*($13) < (int_64)4611686018427387904), [1104])
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$10) == (int_64)(uint_64)*($13 + [8]) >> (uint_64)(int_64)8)), [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy(($14 + [160]), $13, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy($4, ($13 + [8]), [8])
	CALL db_update_i64(*($13 + [20]), (int_64)0, ($14 + [160]), [16])
	$13 = ($14 + [16])
	if ( (uint_64)($10 <= *($13)) ){ goto $label$26 }
	*($13) = ((int_64)$10 + (int_64)1)
	$0 = *($14 + [24])
	if ( $0 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$4()), [624])
	*(($7 = CALL $191([32])) + [8]) = (int_64)1397703940
	*($7) = (int_64)0
	CALL eosio_assert([1], [48])
	$8 = ($7 + [8])
	$10 = (int_64)5459781
	
.LOOP $label$29:
	$0 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	
.LOOP $label$31:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$28 }
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$31 }
	
.LABEL $label$30
	$0 = [1]
	$13 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[7]) ){ goto $label$29 }
	
.LABEL $label$28
	CALL eosio_assert($0, [112])
	*($7 + [16]) = $14
	*(($13 = ($7 + [8]))) = *(($3 + [8]))
	*($7) = *($3)
	CALL eosio_assert([1], [688])
	CALL memcpy(($14 + [160]), $7, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy($4, $8, [8])
	$10 = (uint_64)*($13) >> (uint_64)(int_64)8
	$0 = CALL db_store_i64(*(($14 + [8])), (int_64)3607749779137757184, $12, $10), ($14 + [160]), [16]
	*($7 + [20]) = $0)
	$3 = ($14 + [16])
	if ( (uint_64)($10 <= *($3)) ){ goto $label$32 }
	*($3) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$32
	*($14 + [184]) = $7
	$10 = (uint_64)*($13) >> (uint_64)(int_64)8
	*($14 + [160]) = $10)
	*($14 + [180]) = $0
	$3 = ($14 + [28])
	$13 = *($3)
	if ( ((uint_32)$13 >= (uint_32)*(($14 + [32]))) ){ goto $label$34 }
	*($13 + [8]) = $10
	*($13 + [16]) = $0
	*($14 + [184]) = [0]
	*($13) = $7
	*($3) = ($13 + [24])
	goto $label$33 
	
.LABEL $label$34
	CALL $20(($14 + [24]), ($14 + [184]), ($14 + [160]), ($14 + [180]))
	
.LABEL $label$33
	$13 = *($14 + [184])
	*($14 + [184]) = [0]
	if ( ($13 == 0) ){ goto $label$26 }
	CALL $192($13)
	
.LABEL $label$26
	$0 = *($14 + [24])
	if ( ($0 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$3 = ($14 + [28])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$36 }
	
.LOOP $label$37:
	$13 = ($13 + [-24])
	$7 = *($13)
	*($13) = [0]
	if ( ($7 == 0) ){ goto $label$38 }
	CALL $192($7)
	
.LABEL $label$38
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$37 }
	$13 = *(($14 + [24]))
	goto $label$35 
	
.LABEL $label$36
	$13 = $0
	
.LABEL $label$35
	*($3) = $0
	CALL $192($13)
	
.LABEL $label$24
	$0 = *($14 + [64])
	if ( ($0 == 0) ){ goto $label$39 }
	$3 = ($14 + [68])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$41 }
	
.LOOP $label$42:
	$13 = ($13 + [-24])
	$7 = *($13)
	*($13) = [0]
	if ( ($7 == 0) ){ goto $label$43 }
	CALL $192($7)
	
.LABEL $label$43
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$42 }
	$13 = *(($14 + [64]))
	goto $label$40 
	
.LABEL $label$41
	$13 = $0
	
.LABEL $label$40
	*($3) = $0
	CALL $192($13)
	
.LABEL $label$39
	$0 = *($14 + [104])
	if ( ($0 == 0) ){ goto $label$44 }
	$3 = ($14 + [108])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$46 }
	
.LOOP $label$47:
	$13 = ($13 + [-24])
	$7 = *($13)
	*($13) = [0]
	if ( ($7 == 0) ){ goto $label$48 }
	CALL $192($7)
	
.LABEL $label$48
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$47 }
	$13 = *(($14 + [104]))
	goto $label$45 
	
.LABEL $label$46
	$13 = $0
	
.LABEL $label$45
	*($3) = $0
	CALL $192($13)
	
.LABEL $label$44
	$0 = *($14 + [144])
	if ( ($0 == 0) ){ goto $label$49 }
	$3 = ($14 + [148])
	$13 = *($3)
	if ( ((int_32)$13 == (int_32)$0) ){ goto $label$51 }
	
.LOOP $label$52:
	$13 = ($13 + [-24])
	$7 = *($13)
	*($13) = [0]
	if ( ($7 == 0) ){ goto $label$53 }
	CALL $192($7)
	
.LABEL $label$53
	if ( ((int_32)$0 != (int_32)$13) ){ goto $label$52 }
	$13 = *(($14 + [144]))
	goto $label$50 
	
.LABEL $label$51
	$13 = $0
	
.LABEL $label$50
	*($3) = $0
	CALL $192($13)
	
.LABEL $label$49
	*([0] + [4]) = ($14 + [192])
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [320])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $191([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [352])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-3617168955010973696
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-3617168955010973696
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $97(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

int_64 .FUNC $96 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *(($0 + [28]))
	if ( ((int_32)$2 == (int_32)*($0 + [24])) ){ goto $label$2 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [144])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	$1 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3617168955010973696, (int_64)-3617168955010973696)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $95($0, $1)
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [144])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [256])
	return *($2)
}

void .FUNC $97 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $90 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [160])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)$2 > (int_64)0), [3648])
	$4 = [0]
	*(($7 + [152])) = [0]
	*($7 + [136]) = (int_64)-1
	*($7 + [144]) = (int_64)0
	$5 = *($0)
	*($7 + [120]) = $5
	*($7 + [128]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $7(($7 + [120]), $0) + [112]) == (int_32)($7 + [120])), [144])
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [2832])
	$4 = *(($7 + [148]))
	if ( ((int_32)$4 == (int_32)*(($7 + [144]))) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)($7 + [120])), [144])
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	$0 = CALL db_find_i64(*($7 + [120]), *(($7 + [128])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $7(($7 + [120]), $0)
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)($7 + [120])), [144])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [256])
	$3 = CALL memcpy($7, $4, [112])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$5() / (uint_64)(int_64)1000000)) > (uint_32)*($3 + [92])), [2320])
	CALL eosio_assert(((int_64))(*($3 + [32]) - *($3 + [80])) > (int_64)$2), [3696])
	CALL $91($3, $2)
	CALL $66(($3 + [120]), $3, *($3 + [8]))
	CALL require_recipient(*($3 + [8]))
	$0 = *($3 + [144])
	if ( ($0 == 0) ){ goto $label$4 }
	$6 = ($3 + [148])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$7 }
	$7 = *(($3 + [144]))
	goto $label$5 
	
.LABEL $label$6
	$7 = $0
	
.LABEL $label$5
	*($6) = $0
	CALL $192($7)
	
.LABEL $label$4
	*([0] + [4]) = ($3 + [160])
}

void .FUNC $91 (int_32 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	float_64 $4
	int_32 $5
	float_64 $6
	float_64 $7
	float_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	CALL $65($0)
	CALL eosio_assert(((int_64)$1 > (int_64)0), [3728])
	CALL eosio_assert(((int_64)((int_64)*($0 + [80]) + (int_64)$1) < (int_64)*($0 + [32])), [3792])
	$2 = *($0 + [80])
	*($0 + [80]) = ((int_64)$2 + (int_64)$1)
	$3 = ($0 + [24])
	$4 = CALL __floattidf(*($0 + [16]), *($3))
	$5 = ($0 + [72])
	$6 = CALL __floattidf(*($0 + [64]), *($5))
	$7 = (CASTING float_64)(int_64 $1)
	$6 = (CASTING float_64)(int_64 $2)
	$8 = (float_64)
	$4 = (float_64)
	$7 = (CASTING float_64)(int_64 *($0 + [32]))
	CALL __fixdfti(($9 + [16]), ((float_64)((float_64)$7 * (float_64)$4($6 - $4))) / (float_64)$8((float_64))($7 - $6) - $7))))
	*($0 + [64]) = *($9 + [16])
	CALL __fixdfti($9, ((float_64)((float_64)((float_64)$7 + (float_64)$6) * (float_64)$4) / (float_64)$8))
	$2 = *($9)
	*($0 + [16]) = $2
	*($5) = *((($9 + [16]) + [8]))
	$1 = *(($9 + [8]))
	*($3) = $1
	CALL eosio_assert(( ((int_64)$2 != (int_64)0) ? ((int_64)$1 > (int_64)0) : (int_64)($1 == 0) ), [2368])
	CALL eosio_assert(((int_64)*($0 + [80]) > (int_64)0), [2432])
	$2 = *($3)
	$1 = *($5)
	CALL eosio_assert(( ((uint_64)*($0 + [64]) >= (uint_64)*($0 + [16])) ? ((int_64)$1 >= (int_64)$2) : ((int_64)$1 == (int_64)$2) ), [2496])
	CALL eosio_assert(((int_64)*($0 + [32]) >= (int_64)*($0 + [80])), [2544])
	*([0] + [4]) = ($9 + [32])
}

void .FUNC _ZN12tokendapppub5claimENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [160])
	*([0] + [4]) = $10
	if ( (*($1) & [1]) ){ goto $label$2 }
	$6 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$4 = ($6 + $1)
	$3 = ($1 + [1])
	$1 = $3
	if ( *(($4 + [1])) ){ goto $label$3 }
	$9 = (int_64)0
	if ( ($3 == 0) ){ goto $label$4 }
	$7 = (CASTING uint_64)(uint_32 $3)
	$8 = (int_64)8
	$9 = (int_64)0
	
.LOOP $label$5:
	$1 = *($6)
	if ( ((uint_32)(($1 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$9 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$8 & (int_64)4294967288)) | (int_64)$9)
	
.LABEL $label$6
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)8)
	$7 = ((int_64)$7 + (int_64)-1)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$4
	*(($10 + [120])) = [0]
	*($10 + [104]) = (int_64)-1
	*($10 + [112]) = (int_64)0
	$8 = *($0)
	*($10 + [88]) = $8
	$7 = (uint_64)$9 >> (uint_64)(int_64)8
	*($10 + [96]) = $7)
	$1 = [0]
	$6 = CALL db_find_i64($8, $7, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$7 }
	$1 = CALL $7(($10 + [88]), $6)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($10 + [88])), [144])
	
.LABEL $label$7
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [208])
	$1 = *(($10 + [116]))
	if ( ((int_32)$1 == (int_32)*(($10 + [112]))) ){ goto $label$9 }
	$6 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)($10 + [88])), [144])
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	$1 = CALL db_find_i64(*($10 + [88]), *(($10 + [96])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$8 }
	$6 = CALL $7(($10 + [88]), $1)
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)($10 + [88])), [144])
	
.LABEL $label$8
	$1 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [256])
	$9 = *($6 + [8])
	CALL require_auth($9)
	CALL $93(($10 + [72]), $0, $7)
	*((($10 + [32]) + [32])) = [0]
	*($10 + [40]) = $9
	*($10 + [48]) = (int_64)-1
	*($10 + [56]) = (int_64)0
	$8 = *($0)
	*($10 + [32]) = $8
	$6 = CALL db_find_i64($8, $9, (int_64)3607749779137757184, $7)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	$1 = CALL $18(($10 + [32]), $6)
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)($10 + [32])), [144])
	CALL eosio_assert([1], [1616])
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)($10 + [32])), [912])
	CALL eosio_assert(((int_64)*($10 + [32]) == (int_64)CALL $fimport$4()), [960])
	$8 = *($1 + [8])
	CALL eosio_assert(((int_64)*($10 + [80]) == (int_64)$8), [1024])
	$5 = ((int_64)*($1) + (int_64)*($10 + [72]))
	*($1) = $5
	CALL eosio_assert(((int_64)$5 > (int_64)-4611686018427387904), [1072])
	CALL eosio_assert(((int_64)*($1) < (int_64)4611686018427387904), [1104])
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$8) == (int_64)(uint_64)*($1 + [8]) >> (uint_64)(int_64)8)), [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy(($10 + [144]), $1, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy((($10 + [144]) | [8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $9, ($10 + [144]), [16])
	$1 = (($10 + [32]) + [16])
	if ( (uint_64)($8 <= *($1)) ){ goto $label$12 }
	*($1) = ((int_64)$8 + (int_64)1)
	if ( $2 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	CALL eosio_assert(((int_64)*($10 + [32]) == (int_64)CALL $fimport$4()), [624])
	*(($6 = CALL $191([32])) + [8]) = (int_64)1397703940
	*($6) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = ($6 + [8])
	$8 = (int_64)5459781
	
.LOOP $label$15:
	$4 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	CALL eosio_assert($4, [112])
	*($6 + [16]) = ($10 + [32])
	*(($1 = ($6 + [8]))) = *((($10 + [72]) + [8]))
	*($6) = *($10 + [72])
	CALL eosio_assert([1], [688])
	CALL memcpy(($10 + [144]), $6, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy((($10 + [144]) | [8]), $3, [8])
	$8 = (uint_64)*($1) >> (uint_64)(int_64)8
	$4 = CALL db_store_i64(*((($10 + [32]) + [8])), (int_64)3607749779137757184, $9, $8), ($10 + [144]), [16]
	*($6 + [20]) = $4)
	$3 = (($10 + [32]) + [16])
	if ( (uint_64)($8 <= *($3)) ){ goto $label$18 }
	*($3) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$18
	*($10 + [136]) = $6
	$8 = (uint_64)*($1) >> (uint_64)(int_64)8
	*($10 + [144]) = $8)
	*($10 + [132]) = $4
	$3 = ($10 + [60])
	$1 = *($3)
	if ( ((uint_32)$1 >= (uint_32)*(($10 + [64]))) ){ goto $label$20 }
	*($1 + [8]) = $8
	*($1 + [16]) = $4
	*($10 + [136]) = [0]
	*($1) = $6
	*($3) = ($1 + [24])
	goto $label$19 
	
.LABEL $label$20
	CALL $20(($10 + [56]), ($10 + [136]), ($10 + [144]), ($10 + [132]))
	
.LABEL $label$19
	$1 = *($10 + [136])
	*($10 + [136]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $192($1)
	
.LABEL $label$12
	if ( ($2 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = *(($10 + [56]))
	$4 = *(($10 + [60]))
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$21 }
	$1 = ($4 + [-24])
	$3 = ([0] - $2)
	
.LOOP $label$22:
	if ( ((int_64)(uint_64)*(*($1) + [8]) >> (uint_64)(int_64)8) == (int_64)$7) ){ goto $label$21 }
	$4 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $3) != (int_32)[-24]) ){ goto $label$22 }
	
.LABEL $label$21
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$24 }
	$1 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)($10 + [32])), [144])
	goto $label$23 
	
.LABEL $label$24
	$1 = [0]
	$6 = CALL db_find_i64(*($10 + [32]), *(($10 + [40])), (int_64)3607749779137757184, $7)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$23 }
	$1 = CALL $18(($10 + [32]), $6)
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)($10 + [32])), [144])
	
.LABEL $label$23
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [3840])
	*(($6 = (($10 + [16]) + [8]))) = *(($1 + [8]))
	$8 = *($1)
	*(($10 + [12])) = *((($10 + [16]) + [12]))
	*(($10 + [8])) = *($6)
	*($10 + [16]) = $8
	*($10 + [4]) = *($10 + [20])
	*($10) = *($10 + [16])
	CALL _ZN12tokendapppub4sellEyN5eosio5assetE($0, $9, $10)
	
.LABEL $label$10
	$4 = *($10 + [56])
	if ( ($4 == 0) ){ goto $label$25 }
	$3 = ($10 + [60])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$27 }
	
.LOOP $label$28:
	$1 = ($1 + [-24])
	$6 = *($1)
	*($1) = [0]
	if ( ($6 == 0) ){ goto $label$29 }
	CALL $192($6)
	
.LABEL $label$29
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$28 }
	$1 = *(($10 + [56]))
	goto $label$26 
	
.LABEL $label$27
	$1 = $4
	
.LABEL $label$26
	*($3) = $4
	CALL $192($1)
	
.LABEL $label$25
	$4 = *($10 + [112])
	if ( ($4 == 0) ){ goto $label$30 }
	$3 = ($10 + [116])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$32 }
	
.LOOP $label$33:
	$1 = ($1 + [-24])
	$6 = *($1)
	*($1) = [0]
	if ( ($6 == 0) ){ goto $label$34 }
	CALL $192($6)
	
.LABEL $label$34
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$33 }
	$1 = *(($10 + [112]))
	goto $label$31 
	
.LABEL $label$32
	$1 = $4
	
.LABEL $label$31
	*($3) = $4
	CALL $192($1)
	
.LABEL $label$30
	*([0] + [4]) = ($10 + [160])
}

void .FUNC $93 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [160])
	*([0] + [4]) = $8
	$3 = [0]
	*(($8 + [152])) = [0]
	*($8 + [136]) = (int_64)-1
	*($8 + [144]) = (int_64)0
	$4 = *($1)
	*($8 + [120]) = $4
	*($8 + [128]) = $2
	$1 = CALL db_find_i64($4, $2, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $7(($8 + [120]), $1) + [112]) == (int_32)($8 + [120])), [144])
	$3 = [1]
	
.LABEL $label$1
	CALL eosio_assert($3, [2832])
	$3 = *(($8 + [148]))
	if ( ((int_32)$3 == (int_32)*(($8 + [144]))) ){ goto $label$3 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [112]) == (int_32)($8 + [120])), [144])
	goto $label$2 
	
.LABEL $label$3
	$3 = [0]
	$1 = CALL db_find_i64(*($8 + [120]), *(($8 + [128])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $7(($8 + [120]), $1)
	CALL eosio_assert(((int_32)*($3 + [112]) == (int_32)($8 + [120])), [144])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [256])
	$1 = CALL memcpy($8, $3, [112])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$5() / (uint_64)(int_64)1000000)) > (uint_32)*($1 + [92])), [2320])
	CALL $65($1)
	$2 = *($1 + [56])
	$4 = *($1 + [48])
	*($1 + [56]) = $4
	$8 = ($1 + [24])
	$5 = *($8)
	CALL eosio_assert(( ((int_64)*($1 + [16]) != (int_64)0) ? ((int_64)$5 > (int_64)0) : (int_64)($5 == 0) ), [2368])
	CALL eosio_assert(((int_64)*($1 + [80]) > (int_64)0), [2432])
	$6 = *($8)
	$5 = *(($1 + [72]))
	CALL eosio_assert(( ((uint_64)*($1 + [64]) >= (uint_64)*($1 + [16])) ? ((int_64)$5 >= (int_64)$6) : ((int_64)$5 == (int_64)$6) ), [2496])
	CALL eosio_assert(((int_64)*($1 + [32]) >= (int_64)*($1 + [80])), [2544])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($4 - $2)) > (int_64)0), [3856])
	CALL $66(($1 + [120]), $1, *($1 + [8]))
	*($0) = $2
	$4 = *($1)
	*($0 + [8]) = $4
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [48])
	$2 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$3 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	CALL eosio_assert($3, [112])
	$0 = *($1 + [144])
	if ( ($0 == 0) ){ goto $label$9 }
	$7 = ($1 + [148])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$11 }
	
.LOOP $label$12:
	$8 = ($8 + [-24])
	$3 = *($8)
	*($8) = [0]
	if ( ($3 == 0) ){ goto $label$13 }
	CALL $192($3)
	
.LABEL $label$13
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$12 }
	$8 = *(($1 + [144]))
	goto $label$10 
	
.LABEL $label$11
	$8 = $0
	
.LABEL $label$10
	*($7) = $0
	CALL $192($8)
	
.LABEL $label$9
	*([0] + [4]) = ($1 + [160])
}

int_32 .FUNC $138 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [112])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $139 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [320])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $191([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [352])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)5614119998713757696
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)5614119998713757696
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $142(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	$5 = (*([0] + [4]) - [16])
	$6 = $5
	*([0] + [4]) = $5
	$2 = *($0)
	CALL $194($1, *(*($0 + [4])))
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $3)
	CALL $64($6, $1)
	*($1 + [16]) = CALL db_store_i64(*($2 + [8]), (int_64)3724085271119308800, *(*($0 + [8])), (int_64)3724085271119308800, $5, $3)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	if ( ((uint_64)*($2 + [16]) > (uint_64)(int_64)3724085271119308800) ){ goto $label$5 }
	*(($2 + [16])) = (int_64)3724085271119308801
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $131 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1) & [1]) == 0) ){ goto $label$11 }
	CALL $192(*($1 + [8]))
	
.LABEL $label$11
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $192($6)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $81($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $196($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $191($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $196($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $192($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $193($7)
	return (unreachable)
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	*(($7 = $8) + [44]) = $1
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [320])
	if ( ($5 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($5)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($8 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($7 + [36]) = $4
	*($7 + [32]) = $4
	*($7 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($7 + [12]) = ($7 + [32])
	*($7 + [16]) = ($7 + [44])
	*($7 + [8]) = $0
	$4 = CALL $191([32])
	$5 = CALL $138($4, $0, ($7 + [8]))
	*($7 + [24]) = $4
	*($7 + [8]) = (int_64)3724085271194468352
	$1 = *($4 + [20])
	*($7 + [4]) = $1
	$3 = ($0 + [28])
	$6 = *($3)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($6 + [8]) = (int_64)3724085271194468352
	*($6 + [16]) = $1
	*($7 + [24]) = [0]
	*($6) = $4
	*($3) = ($6 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $137(($0 + [24]), ($7 + [24]), ($7 + [8]), ($7 + [4]))
	
.LABEL $label$8
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
	return $5
}

void .FUNC $134 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	$3 = *($3)
	*($1) = *($3)
	*(($4 = ($1 + [8]))) = *(($3 + [8]))
	CALL eosio_assert([1], [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy($5, $1, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy(($5 | [8]), $4, [8])
	CALL db_update_i64(*($1 + [20]), $2, $5, [16])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)3724085271194468352) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)3724085271194468353
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
}

void .FUNC $135 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $191([32])
	CALL $136($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)3724085271194468352
	$4 = *($3 + [20])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)3724085271194468352
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $137(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $192($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $136 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [112])
	*($0 + [16]) = $1
	$4 = *($2)
	$5 = *(*($2 + [4]))
	*($0) = *($5)
	*(($1 = ($0 + [8]))) = *(($5 + [8]))
	CALL eosio_assert([1], [688])
	CALL memcpy($6, $0, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy(($6 | [8]), $1, [8])
	*($0 + [20]) = CALL db_store_i64(*($4 + [8]), (int_64)3724085271194468352, *(*($2 + [8])), (int_64)3724085271194468352, $6, [16])
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)3724085271194468352) ){ goto $label$6 }
	*(($4 + [16])) = (int_64)3724085271194468353
	
.LABEL $label$6
	*([0] + [4]) = ($6 + [16])
	return $0
}

void .FUNC $137 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [13440])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [13424]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [13456]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

int_32 .FUNC $202 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$4 }
	$4 = ($0 + [1])
	$0 = uint_32($3 >> [1])
	if ( $0 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = *($0 + [8])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$0 = ( ($2 + [1]) ? $0 : ((uint_32)$0 > (uint_32)$2) )
	$1 = ($1 & [255])
	
.LOOP $label$5:
	if ( ($0 == 0) ){ goto $label$1 }
	$2 = ($4 + $0)
	$0 = ($0 + [-1])
	if ( ((int_32)*(($2 + [-1])) != (int_32)$1) ){ goto $label$5 }
	return $0
	
.LABEL $label$2
	return [-1]
	
.LABEL $label$1
	return [-1]
}

int_32 .FUNC $203 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC $200 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $191($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $192($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $201 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $206 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $191($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_64 .FUNC ceil (float_64 $0)
{
	int_64 $1
	int_32 $2
	float_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	if ( ((float_64)$0 == (float_64)(float_64)0) ){ goto $label$1 }
	$1 = (CASTING int_64)(float_64 $0)
	$2 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)) & [2047]
	if ( ((uint_32)$2) > (uint_32)[1074]) ){ goto $label$1 }
	$4 = ((int_64)$1 < (int_64)0)
	$3 = (float_64))(((float_64)( (float_64)4503599627370496 ? (float_64)-4503599627370496 : $4 ) + (float_64)((float_64)( (float_64)-4503599627370496 ? (float_64)4503599627370496 : $4 ) + (float_64)$0)) - $0)
	if ( ((uint_32)$2 > (uint_32)[1022]) ){ goto $label$2 }
	*($5 + [8]) = $3
	return ( (float_64)-0 ? (float_64)1 : $4 )
	
.LABEL $label$2
	$0 = ((float_64)$3 + (float_64)$0)
	if ( (((float_64)$3 >= (float_64)(float_64)0) | ((float_64)$3 != (float_64)$3)) ){ goto $label$1 }
	$0 = ((float_64)$0 + (float_64)(float_64)1)
	
.LABEL $label$1
	return $0
}

void .FUNC $204 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $191($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [144])
	*([0] + [4]) = $3
	CALL $205(($3 + [128]), $1)
	CALL $205(($3 + [112]), ($1 + [12]))
	CALL $205(($3 + [96]), ($1 + [24]))
	CALL $205(($3 + [80]), ($1 + [36]))
	CALL $205(($3 + [64]), ($1 + [48]))
	CALL $205(($3 + [48]), ($1 + [60]))
	CALL $205(($3 + [32]), ($1 + [72]))
	CALL $205(($3 + [16]), ($1 + [84]))
	$2 = *($1 + [96])
	CALL $205($3, ($1 + [104]))
	CALL $183($0, ($3 + [128]), ($3 + [112]), ($3 + [96]), ($3 + [80]), ($3 + [64]), ($3 + [48]), ($3 + [32]), ($3 + [16]), $2, $3)
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	CALL $192(*($3 + [8]))
	
.LABEL $label$1
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($3 + [24]))
	
.LABEL $label$2
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*($3 + [40]))
	
.LABEL $label$3
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$4 }
	CALL $192(*($3 + [56]))
	
.LABEL $label$4
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$5 }
	CALL $192(*($3 + [72]))
	
.LABEL $label$5
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$6 }
	CALL $192(*($3 + [88]))
	
.LABEL $label$6
	if ( ((*($3 + [96]) & [1]) == 0) ){ goto $label$7 }
	CALL $192(*($3 + [104]))
	
.LABEL $label$7
	if ( ((*($3 + [112]) & [1]) == 0) ){ goto $label$8 }
	CALL $192(*($3 + [120]))
	
.LABEL $label$8
	if ( ((*($3 + [128]) & [1]) == 0) ){ goto $label$9 }
	CALL $192(*($3 + [136]))
	
.LABEL $label$9
	*([0] + [4]) = ($3 + [144])
}

void .FUNC $129 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	*(($3 = CALL $191([24])) + [8]) = [0]
	*($3) = (int_64)0
	*($3 + [12]) = $1
	CALL $130(($7 + [16]), $3)
	*($7 + [32]) = $3
	*($7 + [16]) = (int_64)3724085271119308800
	$4 = *($3 + [16])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = (int_64)3724085271119308800
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $131(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	if ( ((*($1) & [1]) == 0) ){ goto $label$4 }
	CALL $192(*($1 + [8]))
	
.LABEL $label$4
	CALL $192($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

void .FUNC $128 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	$5 = (*([0] + [4]) - [16])
	$6 = $5
	*([0] + [4]) = $5
	CALL eosio_assert(((int_32)*($1 + [12]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	CALL $194($1, *($3))
	CALL eosio_assert([1], [1136])
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$4 = (CASTING uint_64)(uint_32 $3)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	if ( ($3 <= [513]) ){ goto $label$3 }
	$5 = CALL malloc($3)
	goto $label$2 
	
.LABEL $label$3
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	
.LABEL $label$2
	*($6 + [4]) = $5
	*($6) = $5
	*($6 + [8]) = ($5 + $3)
	CALL $64($6, $1)
	CALL db_update_i64(*(($1 + [16])), $2, $5, $3)
	if ( ($3 <= [513]) ){ goto $label$4 }
	CALL free($5)
	
.LABEL $label$4
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)3724085271119308800) ){ goto $label$5 }
	*(($0 + [16])) = (int_64)3724085271119308801
	
.LABEL $label$5
	*([0] + [4]) = ($6 + [16])
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[15]), [352])
	CALL memcpy($3, *($2 + [4]), [16])
	*($2 + [4]) = (*($2 + [4]) + [16])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[15]), [352])
	CALL memcpy($3, *($2 + [4]), [16])
	*($2 + [4]) = (*($2 + [4]) + [16])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [352])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [352])
	CALL memcpy($3, *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	$2 = *($0 + [48])
	$0 = *($1)
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)*($0 + [4])), [352])
	CALL memcpy($2, *($0 + [4]), [1])
	*($0 + [4]) = (*($0 + [4]) + [1])
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC _ZN12tokendapppub10setairdropEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*($9 + [40]) = $1
	CALL require_auth(*($0))
	*(($6 = ($9 + [32]))) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$1 = *($0)
	*($9) = $1
	*($9 + [8]) = $1
	CALL $124($9, ($9 + [40]), $1)
	$4 = *($9 + [24])
	if ( ($4 == 0) ){ goto $label$1 }
	$7 = ($9 + [28])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $192($5)
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$4 }
	$8 = *(($9 + [24]))
	goto $label$2 
	
.LABEL $label$3
	$8 = $4
	
.LABEL $label$2
	*($7) = $4
	CALL $192($8)
	
.LABEL $label$1
	*($6) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$1 = *($0)
	*($9) = $1
	*($9 + [8]) = $1
	CALL $125($9, $2, $1)
	$4 = *($9 + [24])
	if ( ($4 == 0) ){ goto $label$6 }
	$2 = ($9 + [28])
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $192($5)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$9 }
	$8 = *(($9 + [24]))
	goto $label$7 
	
.LABEL $label$8
	$8 = $4
	
.LABEL $label$7
	*($2) = $4
	CALL $192($8)
	
.LABEL $label$6
	*(($9 + [32])) = [0]
	*($9 + [16]) = (int_64)-1
	*($9 + [24]) = (int_64)0
	$1 = *($0)
	*($9) = $1
	*($9 + [8]) = $1
	CALL $126($9, $3, $1)
	$4 = *($9 + [24])
	if ( ($4 == 0) ){ goto $label$11 }
	$0 = ($9 + [28])
	$8 = *($0)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$13 }
	
.LOOP $label$14:
	$8 = ($8 + [-24])
	$5 = *($8)
	*($8) = [0]
	if ( ($5 == 0) ){ goto $label$15 }
	if ( ((*($5) & [1]) == 0) ){ goto $label$16 }
	CALL $192(*($5 + [8]))
	
.LABEL $label$16
	CALL $192($5)
	
.LABEL $label$15
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$14 }
	$8 = *(($9 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$8 = $4
	
.LABEL $label$12
	*($0) = $4
	CALL $192($8)
	
.LABEL $label$11
	*([0] + [4]) = ($9 + [48])
}

void .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)*($2 + [8]) != (int_32)*($2 + [4])), [352])
	CALL memcpy(($4 + [15]), *($2 + [4]), [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	*($3) = ((int_32)*($4 + [15]) != (int_32)[0])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [24])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $121 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [1984])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [2032])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [48])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)$2 == (int_64)*(*($8) + [48])) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2096])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $192($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [60]))
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $191([72])) + [56]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [40])
	*($8 + [56]) = ($6 + [48])
	CALL $122(($8 + [32]), ($8 + [24]))
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = (int_64)
	*($8 + [32]) = $5((int_64)4099680000000 - *($6 + [48])))
	$7 = *($6 + [60])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $51(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC $126 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [12]) == (int_32)$0), [144])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3724085271119308800, (int_64)3724085271119308800)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $127($0, $3)
	CALL eosio_assert(((int_32)*($3 + [12]) == (int_32)$0), [144])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1616])
	CALL $128($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $129($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $125 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$0), [144])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)3724085271194468352, (int_64)3724085271194468352)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $133($0, $3)
	CALL eosio_assert(((int_32)*($3 + [16]) == (int_32)$0), [144])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1616])
	CALL $134($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $135($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $124 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [144])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)5614119998713757696, (int_64)5614119998713757696)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $139($0, $3)
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [144])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1616])
	CALL $140($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $141($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $14 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [352])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC _ZN12tokendapppub5issueEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	$7 = [0]
	$4 = *($2 + [8])
	$8 = (uint_64)$4 >> (uint_64)(int_64)8
	$6 = $8)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = (uint_64)$6 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$6) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [112])
	$7 = *($3)
	if ( ($7 & [1]) ){ goto $label$7 }
	$7 = uint_32($7 >> [1])
	goto $label$6 
	
.LABEL $label$7
	$7 = *($3 + [4])
	
.LABEL $label$6
	CALL eosio_assert(($7 <= [257]), [704])
	$3 = [0]
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $8
	$5 = [0]
	$7 = CALL db_find_i64($6, $8, (int_64)-4157508551318700032, $8)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$5 = CALL $11(($9 + [8]), $7)
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($9 + [8])), [144])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [736])
	CALL require_auth(*($5 + [32]))
	$0 = ($5 + [32])
	$6 = *($2)
	if ( ((uint_64)((int_64)$6 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$7 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	
.LOOP $label$13:
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$8) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	$3 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$3 = [0]
	
.LABEL $label$9
	CALL eosio_assert($3, [800])
	CALL eosio_assert(((int_64)$6 > (int_64)0), [832])
	CALL eosio_assert(((int_64)$4 == (int_64)*($5 + [8])), [464])
	CALL eosio_assert(((int_64)$6 <= (int_64))(*($5 + [16]) - *($5))), [864])
	CALL eosio_assert(((int_32)*($5 + [40]) == (int_32)($9 + [8])), [912])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$4()), [960])
	$8 = *($5 + [8])
	CALL eosio_assert(((int_64)$4 == (int_64)$8), [1024])
	$6 = ((int_64)*($5) + (int_64)$6)
	*($5) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [1072])
	CALL eosio_assert(((int_64)*($5) < (int_64)4611686018427387904), [1104])
	$6 = (uint_64)$8 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$6) == (int_64)(uint_64)*($5 + [8]) >> (uint_64)(int_64)8)), [1136])
	*($9 + [96]) = (($9 + [48]) + [40])
	*($9 + [92]) = ($9 + [48])
	*($9 + [88]) = ($9 + [48])
	*($9 + [104]) = ($9 + [88])
	*($9 + [116]) = ($5 + [16])
	*($9 + [112]) = $5
	*($9 + [120]) = $0
	CALL $13(($9 + [112]), ($9 + [104]))
	CALL db_update_i64(*($5 + [44]), (int_64)0, ($9 + [48]), [40])
	$7 = (($9 + [8]) + [16])
	if ( (uint_64)($6 <= *($7)) ){ goto $label$14 }
	*($7) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$14
	$3 = *($9 + [32])
	if ( ($3 == 0) ){ goto $label$15 }
	$2 = ($9 + [36])
	$7 = *($2)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$17 }
	
.LOOP $label$18:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	CALL $192($5)
	
.LABEL $label$19
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$18 }
	$7 = *(($9 + [32]))
	goto $label$16 
	
.LABEL $label$17
	$7 = $3
	
.LABEL $label$16
	*($2) = $3
	CALL $192($7)
	
.LABEL $label$15
	*([0] + [4]) = ($9 + [128])
}

void .FUNC _ZN12tokendapppub3regEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	*([0] + [4]) = $9
	CALL require_auth($1)
	$5 = *($2)
	if ( ($5 & [1]) ){ goto $label$2 }
	$5 = uint_32($5 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$5 = *($2 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($5 <= [8]), [1200])
	if ( (*($2) & [1]) ){ goto $label$4 }
	$5 = ($2 + [1])
	goto $label$3 
	
.LABEL $label$4
	$5 = *($2 + [8])
	
.LABEL $label$3
	$2 = [-1]
	
.LOOP $label$5:
	$4 = ($5 + $2)
	$3 = ($2 + [1])
	$2 = $3
	if ( *(($4 + [1])) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($3 == 0) ){ goto $label$6 }
	$6 = (CASTING uint_64)(uint_32 $3)
	$7 = (int_64)8
	$8 = (int_64)0
	
.LOOP $label$7:
	$2 = *($5)
	if ( ((uint_32)(($2 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$8 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$7 & (int_64)4294967288)) | (int_64)$8)
	
.LABEL $label$8
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)8)
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$7 }
	
.LABEL $label$6
	*((($9 + [48]) + [32])) = [0]
	*($9 + [64]) = (int_64)-1
	*($9 + [72]) = (int_64)0
	$6 = *($0)
	*($9 + [48]) = $6
	$7 = (uint_64)$8 >> (uint_64)(int_64)8
	*($9 + [56]) = $7)
	$2 = [0]
	$5 = CALL db_find_i64($6, $7, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*(CALL $7(($9 + [48]), $5) + [112]) == (int_32)($9 + [48])), [144])
	$2 = [1]
	
.LABEL $label$9
	CALL eosio_assert($2, [1232])
	*((($9 + [8]) + [32])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	*($9 + [16]) = $1
	$2 = CALL db_find_i64($6, $1, (int_64)3607749779137757184, $7)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)*(CALL $18(($9 + [8]), $2) + [16]) == (int_32)($9 + [8])), [144])
	$4 = *($9 + [32])
	if ( $4 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$7 = *($0)
	*($9) = ($9 + [48])
	*($9 + [120]) = $7
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)CALL $fimport$4()), [624])
	*($9 + [100]) = $9
	*($9 + [96]) = ($9 + [8])
	*($9 + [104]) = ($9 + [120])
	*(($5 = CALL $191([32])) + [8]) = (int_64)1397703940
	*($5) = (int_64)0
	CALL eosio_assert([1], [48])
	$7 = (int_64)5459781
	$2 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$4 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$4 = [0]
	
.LABEL $label$13
	CALL eosio_assert($4, [112])
	*($5 + [16]) = ($9 + [8])
	CALL $19(($9 + [96]), $5)
	*($9 + [112]) = $5
	$7 = (uint_64)*(($5 + [8])) >> (uint_64)(int_64)8
	*($9 + [96]) = $7)
	$4 = *($5 + [20])
	*($9 + [92]) = $4
	$3 = ($9 + [36])
	$2 = *($3)
	if ( ((uint_32)$2 >= (uint_32)*(($9 + [40]))) ){ goto $label$19 }
	*($2 + [8]) = $7
	*($2 + [16]) = $4
	*($9 + [112]) = [0]
	*($2) = $5
	*($3) = ($2 + [24])
	goto $label$18 
	
.LABEL $label$19
	CALL $20(($9 + [32]), ($9 + [112]), ($9 + [96]), ($9 + [92]))
	
.LABEL $label$18
	$2 = *($9 + [112])
	*($9 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$20 }
	CALL $192($2)
	
.LABEL $label$20
	$4 = *($9 + [32])
	if ( ($4 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$3 = ($9 + [36])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$22 }
	
.LOOP $label$23:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$24 }
	CALL $192($5)
	
.LABEL $label$24
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$23 }
	$2 = *(($9 + [32]))
	goto $label$21 
	
.LABEL $label$22
	$2 = $4
	
.LABEL $label$21
	*($3) = $4
	CALL $192($2)
	
.LABEL $label$10
	$4 = *($9 + [72])
	if ( ($4 == 0) ){ goto $label$25 }
	$3 = ($9 + [76])
	$2 = *($3)
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$27 }
	
.LOOP $label$28:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$29 }
	CALL $192($5)
	
.LABEL $label$29
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$28 }
	$2 = *(($9 + [72]))
	goto $label$26 
	
.LABEL $label$27
	$2 = $4
	
.LABEL $label$26
	*($3) = $4
	CALL $192($2)
	
.LABEL $label$25
	*([0] + [4]) = ($9 + [128])
}

void .FUNC _ZN12tokendapppub6createEyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [160])
	*([0] + [4]) = $13
	CALL require_auth($1)
	$11 = [0]
	$3 = *($2 + [8])
	$4 = (uint_64)$3 >> (uint_64)(int_64)8
	$10 = $4)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [112])
	$12 = [0]
	$6 = [0]
	$5 = *($2)
	if ( ((uint_64)((int_64)$5 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$6 }
	$11 = [0]
	$10 = $4
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$10) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$6 = [1]
	$11 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$6 = [0]
	
.LABEL $label$6
	CALL eosio_assert($6, [368])
	CALL eosio_assert(((int_64)$5 > (int_64)0), [384])
	*(($13 + [72])) = [0]
	*($13 + [56]) = (int_64)-1
	*($13 + [64]) = (int_64)0
	$10 = *($0)
	*($13 + [40]) = $10
	*($13 + [48]) = $4
	$11 = CALL db_find_i64($10, $4, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert(((int_32)*(CALL $7(($13 + [40]), $11) + [112]) == (int_32)($13 + [40])), [144])
	$12 = [1]
	
.LABEL $label$11
	CALL eosio_assert($12, [416])
	$11 = *(($13 + [68]))
	if ( ((int_32)$11 == (int_32)*(($13 + [64]))) ){ goto $label$13 }
	$11 = *(($11 + [-24]))
	CALL eosio_assert(((int_32)*($11 + [112]) == (int_32)($13 + [40])), [144])
	goto $label$12 
	
.LABEL $label$13
	$11 = [0]
	$6 = CALL db_find_i64(*($13 + [40]), *(($13 + [48])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	$11 = CALL $7(($13 + [40]), $6)
	CALL eosio_assert(((int_32)*($11 + [112]) == (int_32)($13 + [40])), [144])
	
.LABEL $label$12
	$6 = [0]
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [256])
	$10 = *($11 + [48])
	$7 = *($11 + [40])
	$8 = *($11 + [32])
	$9 = *($11 + [8])
	CALL eosio_assert(((int_64)*($11) == (int_64)$3), [464])
	CALL eosio_assert(((int_64)$9 == (int_64)$1), [496])
	CALL eosio_assert(((int_64))(((int_64)$7 + (int_64)$8) - $10) == (int_64)$5), [544])
	*(($13 + [32])) = [0]
	*($13 + [16]) = (int_64)-1
	*($13 + [24]) = (int_64)0
	$10 = *($0)
	*($13) = $10
	*($13 + [8]) = $4
	$11 = CALL db_find_i64($10, $4, (int_64)-4157508551318700032, $4)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$15 }
	CALL eosio_assert(((int_32)*(CALL $11($13, $11) + [40]) == (int_32)$13), [144])
	goto $label$14 
	
.LABEL $label$15
	$6 = [1]
	
.LABEL $label$14
	CALL eosio_assert($6, [576])
	CALL eosio_assert(((int_64)*($13) == (int_64)CALL $fimport$4()), [624])
	$11 = CALL $191([56])
	CALL $12($11)
	*($11 + [40]) = $13
	*($11 + [8]) = $3
	*(($11 + [28])) = *(($2 + [12]))
	*(($11 + [24])) = *(($2 + [8]))
	*(($11 + [20])) = *(($2 + [4]))
	*($11 + [16]) = *($2)
	*($11 + [32]) = $1
	*($13 + [128]) = (($13 + [80]) + [40])
	*($13 + [124]) = ($13 + [80])
	*($13 + [120]) = ($13 + [80])
	*($13 + [136]) = ($13 + [120])
	*($13 + [148]) = ($11 + [16])
	*($13 + [144]) = $11
	*($13 + [152]) = ($11 + [32])
	CALL $13(($13 + [144]), ($13 + [136]))
	$10 = (uint_64)*($11 + [8]) >> (uint_64)(int_64)8
	$6 = CALL db_store_i64(*(($13 + [8])), (int_64)-4157508551318700032, $1, $10), ($13 + [80]), [40]
	*($11 + [44]) = $6)
	$2 = ($13 + [16])
	if ( (uint_64)($10 <= *($2)) ){ goto $label$16 }
	*($2) = ((int_64)$10 + (int_64)1)
	
.LABEL $label$16
	*($13 + [144]) = $11
	$10 = (uint_64)*(($11 + [8])) >> (uint_64)(int_64)8
	*($13 + [80]) = $10)
	*($13 + [120]) = $6
	$2 = *(($13 + [28]))
	if ( ((uint_32)$2 >= (uint_32)*(($13 + [32]))) ){ goto $label$18 }
	*($2 + [8]) = $10
	*($2 + [16]) = $6
	*($13 + [144]) = [0]
	*($2) = $11
	*(($13 + [28])) = ($2 + [24])
	goto $label$17 
	
.LABEL $label$18
	CALL $14(($13 + [24]), ($13 + [144]), ($13 + [80]), ($13 + [120]))
	
.LABEL $label$17
	$11 = *($13 + [144])
	*($13 + [144]) = [0]
	if ( ($11 == 0) ){ goto $label$19 }
	CALL $192($11)
	
.LABEL $label$19
	$6 = *($13 + [24])
	if ( ($6 == 0) ){ goto $label$20 }
	$0 = ($13 + [28])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$22 }
	
.LOOP $label$23:
	$11 = ($11 + [-24])
	$2 = *($11)
	*($11) = [0]
	if ( ($2 == 0) ){ goto $label$24 }
	CALL $192($2)
	
.LABEL $label$24
	if ( ((int_32)$6 != (int_32)$11) ){ goto $label$23 }
	$11 = *(($13 + [24]))
	goto $label$21 
	
.LABEL $label$22
	$11 = $6
	
.LABEL $label$21
	*($0) = $6
	CALL $192($11)
	
.LABEL $label$20
	$6 = *($13 + [64])
	if ( ($6 == 0) ){ goto $label$25 }
	$0 = ($13 + [68])
	$11 = *($0)
	if ( ((int_32)$11 == (int_32)$6) ){ goto $label$27 }
	
.LOOP $label$28:
	$11 = ($11 + [-24])
	$2 = *($11)
	*($11) = [0]
	if ( ($2 == 0) ){ goto $label$29 }
	CALL $192($2)
	
.LABEL $label$29
	if ( ((int_32)$6 != (int_32)$11) ){ goto $label$28 }
	$11 = *(($13 + [64]))
	goto $label$26 
	
.LABEL $label$27
	$11 = $6
	
.LABEL $label$26
	*($0) = $6
	CALL $192($11)
	
.LABEL $label$25
	*([0] + [4]) = ($13 + [160])
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $191([56])
	CALL $12($6)
	*($6 + [40]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [16])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [32])
	CALL $15(($8 + [32]), ($8 + [24]))
	*($6 + [44]) = $1
	*($8 + [24]) = $6
	$5 = (uint_64)*($6 + [8]) >> (uint_64)(int_64)8
	*($8 + [32]) = $5)
	$7 = *($6 + [44])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $14(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $12 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [48])
	$1 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [112])
	*(($2 = ($0 + [24]))) = (int_64)1397703940
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [48])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [112])
	return $0
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$0 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($2 + [4]), $0, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $132(*($1), ($0 + [32]))
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $191([32])
	$6 = CALL $21($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $20(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = *([0] + [4])
	$8 = $9
	$2 = *($0)
	$6 = *(*($0 + [4]))
	$7 = *(($6 + [28]))
	if ( ((int_32)$7 == (int_32)*($6 + [24])) ){ goto $label$2 }
	$7 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($7 + [112]) == (int_32)$6), [144])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$3 = CALL db_find_i64(*($6), *($6 + [8]), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $7($6, $3)
	CALL eosio_assert(((int_32)*($7 + [112]) == (int_32)$6), [144])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [256])
	$4 = *($7)
	CALL eosio_assert([1], [48])
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$7 = [1]
	$6 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	CALL eosio_assert($7, [112])
	*($1 + [8]) = $4
	*($1) = (int_64)0
	$7 = $9
	$6 = ($7 + [-16])
	*([0] + [4]) = $6
	CALL eosio_assert([1], [688])
	CALL memcpy($6, $1, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy(($7 + [-8]), ($1 + [8]), [8])
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [20]) = CALL db_store_i64(*($2 + [8]), (int_64)3607749779137757184, *(*($0 + [8])), $5), $6, [16])
	if ( (uint_64)($5 <= *($2 + [16])) ){ goto $label$8 }
	*(($2 + [16])) = ((int_64)$5 + (int_64)1)
	
.LABEL $label$8
	*([0] + [4]) = $8
}

void .FUNC $184 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL $205($4, $1)
	$2 = *($1 + [16])
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$1 = (*(*($0)) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL $205(($4 + [16]), $4)
	CALL void $1((int_32 ($4 + [16])), (int_32 $2), (int_64 $0))
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($4 + [24]))
	
.LABEL $label$2
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*($4 + [8]))
	
.LABEL $label$3
	*([0] + [4]) = ($4 + [32])
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $188([4920], $0)
}

void .FUNC $186 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $205(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $205(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $192(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $192(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $132(*($1), *($0))
	$0 = *($0)
	CALL $132(*($1), ($0 + [12]))
	CALL $132(*($1), ($0 + [24]))
	CALL $132(*($1), ($0 + [36]))
	CALL $132(*($1), ($0 + [48]))
	CALL $132(*($1), ($0 + [60]))
	CALL $132(*($1), ($0 + [72]))
	CALL $132(*($1), ($0 + [84]))
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [96]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $132(*($1), ($0 + [104]))
}

void .FUNC $116 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	*($1) = *(*($3))
	CALL eosio_assert([1], [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-3617168955010973696) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-3617168955010973695
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $117 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*(($4 = CALL $191([24])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [688])
	CALL memcpy(($7 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-3617168955010973696, $2, (int_64)-3617168955010973696, ($7 + [16]), [8])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-3617168955010973696) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-3617168955010973695
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)-3617168955010973696
	$5 = *($4 + [12])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-3617168955010973696
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $97(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $192($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZN12tokendapppub8settransENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	*([0] + [4]) = $9
	if ( (*($1) & [1]) ){ goto $label$2 }
	$5 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$5 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$4 = ($5 + $1)
	$3 = ($1 + [1])
	$1 = $3
	if ( *(($4 + [1])) ){ goto $label$3 }
	$8 = (int_64)0
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = (CASTING uint_64)(uint_32 $3)
	$7 = (int_64)8
	$8 = (int_64)0
	
.LOOP $label$5:
	$1 = *($5)
	if ( ((uint_32)(($1 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$8 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$7 & (int_64)4294967288)) | (int_64)$8)
	
.LABEL $label$6
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)8)
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$4
	$1 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	$7 = (uint_64)$8 >> (uint_64)(int_64)8
	*($9 + [16]) = $7)
	$5 = CALL db_find_i64($6, $7, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*(CALL $7(($9 + [8]), $5) + [112]) == (int_32)($9 + [8])), [144])
	$1 = [1]
	
.LABEL $label$7
	CALL eosio_assert($1, [208])
	$1 = *(($9 + [36]))
	if ( ((int_32)$1 == (int_32)*(($9 + [32]))) ){ goto $label$9 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($9 + [8])), [144])
	goto $label$8 
	
.LABEL $label$9
	$1 = [0]
	$5 = CALL db_find_i64(*($9 + [8]), *(($9 + [16])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$1 = CALL $7(($9 + [8]), $5)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($9 + [8])), [144])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [256])
	$6 = *($1 + [8])
	CALL require_auth($6)
	CALL eosio_assert(((int_64)((int_64)$2 | (int_64)1) == (int_64)1), [4816])
	*(($9 + [88])) = [0]
	*($9 + [64]) = $7
	*($9 + [72]) = (int_64)-1
	*($9 + [80]) = (int_64)0
	*($9 + [56]) = *($0)
	*($9 + [48]) = $2
	CALL $115(($9 + [56]), ($9 + [48]), $6)
	$4 = *($9 + [80])
	if ( ($4 == 0) ){ goto $label$10 }
	$3 = ($9 + [84])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = ($1 + [-24])
	$5 = *($1)
	*($1) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	CALL $192($5)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$13 }
	$1 = *(($9 + [80]))
	goto $label$11 
	
.LABEL $label$12
	$1 = $4
	
.LABEL $label$11
	*($3) = $4
	CALL $192($1)
	
.LABEL $label$10
	$4 = *($9 + [32])
	if ( ($4 == 0) ){ goto $label$15 }
	$3 = ($9 + [36])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$17 }
	
.LOOP $label$18:
	$1 = ($1 + [-24])
	$5 = *($1)
	*($1) = [0]
	if ( ($5 == 0) ){ goto $label$19 }
	CALL $192($5)
	
.LABEL $label$19
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$18 }
	$1 = *(($9 + [32]))
	goto $label$16 
	
.LABEL $label$17
	$1 = $4
	
.LABEL $label$16
	*($3) = $4
	CALL $192($1)
	
.LABEL $label$15
	*([0] + [4]) = ($9 + [96])
}

void .FUNC $115 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [144])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-3617168955010973696, (int_64)-3617168955010973696)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $95($0, $3)
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [144])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1616])
	CALL $116($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $117($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC _ZN12tokendapppub8newtokenEyN5eosio5assetES1_S1_mhhym (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_64 $8, int_32 $9)
{
	int_32 $10
	float_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	$18 = (*([0] + [4]) - [272])
	*([0] + [4]) = $18
	CALL require_auth($1)
	$14 = *([0] + [32])
	$16 = *([0] + [24])
	$13 = [-1]
	$17 = *($3 + [8])
	$15 = $17
	
.LOOP $label$2:
	$13 = ($13 + [1])
	if ( ((uint_32)$13 > (uint_32)[7]) ){ goto $label$1 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((uint_32)$13 > (uint_32)[3]) ){ goto $label$3 }
	$13 = [0]
	
.LOOP $label$5:
	$10 = ($13 + [1])
	if ( ((uint_32)$13 > (uint_32)[7]) ){ goto $label$4 }
	$13 = $10
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$4
	$11 = CALL pow((float_64)10, (CASTING float_64)(uint_32 ([5] - $10)))
	$14 = *([0] + [32])
	$15 = *([0] + [24])
	CALL eosio_assert([1], [4672])
	CALL eosio_assert(((int_64)$15 > (int_64)-4611686018427387904), [4720])
	CALL eosio_assert(((int_64)$15 < (int_64)4611686018427387904), [4752])
	$16 = ((int_64)$15 * (int_64)(Rounds 0)($11))
	
.LABEL $label$3
	*($18 + [192]) = $14
	*(($18 + [176])) = [0]
	*($18 + [184]) = $16
	*($18 + [168]) = (int_64)0
	$13 = CALL strlen([4784])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$10 }
	*($18 + [168]) = ($13 << [1])
	$10 = (($18 + [168]) | [1])
	if ( $13 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$12 = (($13 + [16]) & [-16])
	$10 = CALL $191($12)
	*($18 + [168]) = ($12 | [1])
	*($18 + [176]) = $10
	*($18 + [172]) = $13
	
.LABEL $label$9
	CALL memcpy($10, [4784], $13)
	
.LABEL $label$8
	*(($10 + $13)) = [0]
	*((($18 + [72]) + [8])) = *((($18 + [184]) + [8]))
	*($18 + [72]) = *($18 + [184])
	CALL _ZN12tokendapppub7consumeEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($0, $1, ($18 + [72]), $18)
	if ( ((*($18 + [168]) & [1]) == 0) ){ goto $label$11 }
	CALL $192(*($18 + [176]))
	
.LABEL $label$11
	*(($13 = (($18 + [152]) + [8]))) = *(($2 + [8]))
	$12 = ($3 + [8])
	*(($10 = (($18 + [136]) + [8]))) = *($12)
	*($18 + [152]) = *($2)
	*($18 + [136]) = *($3)
	*(($2 = (($18 + [120]) + [8]))) = *(($4 + [8]))
	*($18 + [120]) = *($4)
	*((($18 + [56]) + [8])) = *($13)
	*($18 + [56]) = *($18 + [152])
	*((($18 + [40]) + [8])) = *($10)
	*($18 + [40]) = *($18 + [136])
	*((($18 + [24]) + [8])) = *($2)
	*($18 + [24]) = *($18 + [120])
	CALL $105($0, $1, ($18 + [56]), ($18 + [40]), ($18 + [24]), $5, $6, $7, $9)
	CALL $106($0, (uint_64)*($12) >> (uint_64)(int_64)8), $8, $1)
	$8 = *($0)
	$15 = (int_64)0
	$14 = (int_64)59
	$13 = [1536]
	$16 = (int_64)0
	
.LOOP $label$12:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$17 }
	$10 = *($13)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$16 }
	$10 = ($10 + [165])
	goto $label$15 
	
.LABEL $label$17
	$17 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$15
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$14
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$13
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$12 }
	*(($13 = (($18 + [104]) + [8]))) = *(($3 + [8]))
	*($18 + [104]) = *($3)
	*(($10 = (($18 + [200]) + [8]))) = *($13)
	*($18 + [200]) = *($18 + [104])
	*(($13 = CALL $191([16]))) = $1
	*($13 + [8]) = $16
	*(($18 + [252])) = *((($18 + [200]) + [12]))
	$2 = ($13 + [16])
	*($18 + [224]) = $2
	*(($4 = (($18 + [232]) + [16]))) = *($10)
	*($18 + [216]) = $13
	*($18 + [220]) = $2
	*($18 + [232]) = $1
	*((($18 + [232]) + [12])) = *($18 + [204])
	*($18 + [240]) = *($18 + [200])
	*(($18 + [8])) = *($18 + [240])
	*(($18 + [16])) = *($4)
	*($18) = *($18 + [232])
	CALL $107($8, (int_64)5031766152489992192, ($18 + [216]), $18)
	$13 = *($18 + [216])
	if ( ($13 == 0) ){ goto $label$18 }
	*($18 + [220]) = $13
	CALL $192($13)
	
.LABEL $label$18
	$8 = *($0)
	$15 = (int_64)0
	$14 = (int_64)59
	$13 = [1536]
	$16 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$15 > (uint_64)(int_64)5) ){ goto $label$24 }
	$10 = *($13)
	if ( ((uint_32)(($10 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$10 = ($10 + [165])
	goto $label$22 
	
.LABEL $label$24
	$17 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$10 = ( ($10 + [208]) ? [0] : ((($10 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $10) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$14 & (int_64)4294967295))
	
.LABEL $label$20
	$13 = ($13 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$17 | (int_64)$16)
	$14 = ((int_64)$14 + (int_64)-5)
	if ( ((int_64)$14 != (int_64)-6) ){ goto $label$19 }
	*(($18 + [224])) = [0]
	*($18 + [216]) = (int_64)0
	$13 = CALL strlen([1408])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$27 }
	*($18 + [216]) = ($13 << [1])
	$10 = (($18 + [216]) | [1])
	if ( $13 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	$0 = (($13 + [16]) & [-16])
	$10 = CALL $191($0)
	*($18 + [216]) = ($0 | [1])
	*($18 + [224]) = $10
	*($18 + [220]) = $13
	
.LABEL $label$26
	CALL memcpy($10, [1408], $13)
	
.LABEL $label$25
	*(($10 + $13)) = [0]
	*(($10 = (($18 + [88]) + [8]))) = *(($3 + [8]))
	*($18 + [88]) = *($3)
	$3 = *($18 + [216])
	*($18 + [216]) = [0]
	$0 = *($18 + [224])
	$2 = *($18 + [220])
	*($18 + [220]) = [0]
	*($18 + [224]) = [0]
	*(($13 = CALL $191([16]))) = $1
	*($13 + [8]) = $16
	*(($18 + [252])) = *((($18 + [88]) + [12]))
	*((($18 + [232]) + [12])) = *($18 + [92])
	$4 = ($13 + [16])
	*($18 + [208]) = $4
	*((($18 + [232]) + [16])) = *($10)
	*($18 + [200]) = $13
	*($18 + [232]) = $1
	*($18 + [204]) = $4
	*($18 + [240]) = *($18 + [88])
	*($18 + [256]) = $3
	*(($18 + [260])) = $2
	*(($13 = ($18 + [264]))) = $0
	CALL $108($8, (int_64)8516769789752901632, ($18 + [200]), ($18 + [232]))
	if ( ((*($18 + [256]) & [1]) == 0) ){ goto $label$28 }
	CALL $192(*($13))
	
.LABEL $label$28
	$13 = *($18 + [200])
	if ( ($13 == 0) ){ goto $label$29 }
	*($18 + [204]) = $13
	CALL $192($13)
	
.LABEL $label$29
	if ( ((*($18 + [216]) & [1]) == 0) ){ goto $label$30 }
	CALL $192(*(($18 + [224])))
	
.LABEL $label$30
	*([0] + [4]) = ($18 + [272])
	return (unreachable)
	
.LABEL $label$7
	CALL $193(($18 + [168]))
	
.LABEL $label$6
	CALL $193(($18 + [216]))
	(unreachable)
}

void .FUNC _ZN12tokendapppub11setreferfeeENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEy (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	if ( (*($1) & [1]) ){ goto $label$2 }
	$5 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$5 = *($1 + [8])
	
.LABEL $label$1
	$1 = [-1]
	
.LOOP $label$3:
	$4 = ($5 + $1)
	$3 = ($1 + [1])
	$1 = $3
	if ( *(($4 + [1])) ){ goto $label$3 }
	$8 = (int_64)0
	if ( ($3 == 0) ){ goto $label$4 }
	$6 = (CASTING uint_64)(uint_32 $3)
	$7 = (int_64)8
	$8 = (int_64)0
	
.LOOP $label$5:
	$1 = *($5)
	if ( ((uint_32)(($1 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$8 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$7 & (int_64)4294967288)) | (int_64)$8)
	
.LABEL $label$6
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)8)
	$6 = ((int_64)$6 + (int_64)-1)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$5 }
	
.LABEL $label$4
	$1 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$6 = *($0)
	*($9 + [8]) = $6
	$7 = (uint_64)$8 >> (uint_64)(int_64)8
	*($9 + [16]) = $7)
	$5 = CALL db_find_i64($6, $7, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*(CALL $7(($9 + [8]), $5) + [112]) == (int_32)($9 + [8])), [144])
	$1 = [1]
	
.LABEL $label$7
	CALL eosio_assert($1, [208])
	$1 = *(($9 + [36]))
	if ( ((int_32)$1 == (int_32)*(($9 + [32]))) ){ goto $label$9 }
	$1 = *(($1 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($9 + [8])), [144])
	goto $label$8 
	
.LABEL $label$9
	$1 = [0]
	$5 = CALL db_find_i64(*($9 + [8]), *(($9 + [16])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$8 }
	$1 = CALL $7(($9 + [8]), $5)
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)($9 + [8])), [144])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [256])
	$6 = *($1 + [8])
	CALL require_auth($6)
	CALL $106($0, $7, $2, $6)
	$4 = *($9 + [32])
	if ( ($4 == 0) ){ goto $label$10 }
	$3 = ($9 + [36])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = ($1 + [-24])
	$5 = *($1)
	*($1) = [0]
	if ( ($5 == 0) ){ goto $label$14 }
	CALL $192($5)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$13 }
	$1 = *(($9 + [32]))
	goto $label$11 
	
.LABEL $label$12
	$1 = $4
	
.LABEL $label$11
	*($3) = $4
	CALL $192($1)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [48])
}

void .FUNC $110 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	*($1) = *(*($3))
	CALL eosio_assert([1], [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), $2, $4, [8])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-5001621769904193536) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)-5001621769904193535
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $111 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*(($4 = CALL $191([24])) + [8]) = $1
	*($4) = *(*($3))
	CALL eosio_assert([1], [688])
	CALL memcpy(($7 + [16]), $4, [8])
	*($4 + [12]) = CALL db_store_i64(*($1 + [8]), (int_64)-5001621769904193536, $2, (int_64)-5001621769904193536, ($7 + [16]), [8])
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)-5001621769904193536) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)-5001621769904193535
	
.LABEL $label$1
	*($7 + [8]) = $4
	*($7 + [16]) = (int_64)-5001621769904193536
	$5 = *($4 + [12])
	*($7 + [4]) = $5
	$6 = ($1 + [28])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($3 + [8]) = (int_64)-5001621769904193536
	*($3 + [16]) = $5
	*($7 + [8]) = [0]
	*($3) = $4
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $73(($1 + [24]), ($7 + [8]), ($7 + [16]), ($7 + [4]))
	
.LABEL $label$2
	*($0 + [4]) = $4
	*($0) = $1
	$1 = *($7 + [8])
	*($7 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $192($1)
	
.LABEL $label$4
	*([0] + [4]) = ($7 + [32])
}

void .FUNC _ZN12tokendapppub7receiptEyNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEN5eosio5assetES8_S8_ (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	CALL require_auth(*($0))
}

void .FUNC _ZN12tokendapppub10cleantableEv (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [48])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	*(($5 + [32])) = [0]
	*($5 + [16]) = (int_64)-1
	$2 = *($0)
	*($5) = $2
	*($5 + [8]) = $2
	*($5 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($2, $2, (int_64)-8849971982482014208, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $120($5, $0)
	
.LOOP $label$2:
	CALL prints([4848])
	CALL printui(*($0 + [48]))
	CALL eosio_assert([1], [1888])
	CALL eosio_assert([1], [1936])
	$4 = [0]
	$1 = CALL db_next_i64(*($0 + [60]), ($5 + [40]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $120($5, $1)
	
.LABEL $label$3
	CALL $121($5, $0)
	$0 = $4
	if ( $4 ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($5 + [24])
	if ( ($1 == 0) ){ goto $label$4 }
	$3 = ($5 + [28])
	$0 = *($3)
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$6 }
	
.LOOP $label$7:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$1 != (int_32)$0) ){ goto $label$7 }
	$0 = *(($5 + [24]))
	goto $label$5 
	
.LABEL $label$6
	$0 = $1
	
.LABEL $label$5
	*($3) = $1
	CALL $192($0)
	
.LABEL $label$4
	*([0] + [4]) = ($5 + [48])
}

void .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $31($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [688])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [688])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $71(CALL $70($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

int_32 .FUNC $28 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [32])
	*([0] + [4]) = $9
	*($0 + [8]) = $3
	*($0) = $2
	*($0 + [16 align=4]) = (int_64)0
	*(($5 = ($0 + [24]))) = [0]
	$8 = CALL $191([16])
	*($0 + [16]) = $8
	*(($6 = ($0 + [20]))) = $8
	$7 = ($8 + [16])
	*($5) = $7
	*(($8 + [8])) = *(($1 + [8]))
	*($8) = *($1)
	*($6) = $7
	*($0 + [28]) = [0]
	*(($0 + [32])) = [0]
	*(($0 + [36])) = [0]
	$8 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($1 + [32])
	$2 = (CASTING uint_64)(uint_32 $1)
	$1 = ($0 + [28])
	
.LOOP $label$1:
	$8 = ($8 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$1 }
	if ( ($8 == 0) ){ goto $label$3 }
	CALL $31($1, $8)
	$1 = *(($0 + [32]))
	$8 = *(($0 + [28]))
	goto $label$2 
	
.LABEL $label$3
	$1 = [0]
	$8 = [0]
	
.LABEL $label$2
	*($9 + [4]) = $8
	*($9) = $8
	*($9 + [8]) = $1
	*($9 + [16]) = $9
	*($9 + [24]) = $4
	CALL $72(($9 + [24]), ($9 + [16]))
	*([0] + [4]) = ($9 + [32])
	return $0
}

int_32 .FUNC $21 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [48])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [112])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [352])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [352])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $191(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $204($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $192($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $192($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $23 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([3152])
	CALL prints_l($2, $3)
	CALL prints([3168])
	CALL $85($1, [0])
	*([0] + [4]) = $10
}

void .FUNC _ZN12tokendapppub3buyEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_64 $20
	int_32 $21
	$21 = (*([0] + [4]) - [320])
	*([0] + [4]) = $21
	$13 = *($0)
	if ( ((int_64)$13 == (int_64)$1) ){ goto $label$7 }
	if ( ((int_64)$1 == (int_64)6138902473215781008) ){ goto $label$7 }
	if ( ((int_64)$13 != (int_64)$2) ){ goto $label$7 }
	CALL prints([1280])
	CALL printn($1)
	CALL prints([1312])
	CALL printn($2)
	CALL prints([1312])
	CALL $23($3)
	CALL prints([1312])
	$12 = *($4)
	$18 = ($12 & [1])
	$11 = ($4 + [1])
	CALL prints_l(( *($4 + [8]) ? $11 : $18 ), ( *($4 + [4]) ? uint_32($12 >> [1]) : $18 ))
	CALL prints([1312])
	$2 = (int_64)0
	$13 = (int_64)59
	$12 = [1328]
	$14 = (int_64)0
	
.LOOP $label$8:
	$15 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$9 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$18 = ($18 + [165])
	goto $label$10 
	
.LABEL $label$11
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$15 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$9
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$8 }
	if ( ((int_64)$14 != (int_64)$1) ){ goto $label$12 }
	$1 = CALL $24($1)
	
.LABEL $label$12
	CALL prints([1344])
	CALL printn($1)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)1397703940), [1744])
	$12 = *($4)
	if ( ($12 & [1]) ){ goto $label$14 }
	$18 = uint_32($12 >> [1])
	$16 = $11
	goto $label$13 
	
.LABEL $label$14
	$18 = *(($4 + [4]))
	$16 = *(($4 + [8]))
	
.LABEL $label$13
	$12 = CALL strlen([1360])
	if ( ($12 == 0) ){ goto $label$29 }
	if ( ((int_32)$18 < (int_32)$12) ){ goto $label$28 }
	$5 = ($16 + $18)
	$8 = $16
	
.LOOP $label$30:
	$18 = (($18 - $12) + [1])
	if ( ($18 == 0) ){ goto $label$28 }
	$18 = CALL memchr($8, [45], $18)
	if ( ($18 == 0) ){ goto $label$28 }
	if ( (CALL memcmp($18, [1360], $12) == 0) ){ goto $label$31 }
	$8 = ($18 + [1])
	$18 = ($5 - $8)
	if ( ((int_32)$18 >= (int_32)$12) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$31
	if ( ((int_32)$18 == (int_32)$5) ){ goto $label$28 }
	if ( ((int_32)($18 - $16) == (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$29
	$12 = *($4)
	if ( ($12 & [1]) ){ goto $label$27 }
	$8 = uint_32($12 >> [1])
	goto $label$26 
	
.LABEL $label$28
	*(($21 + [280])) = [0]
	*($21 + [272]) = (int_64)0
	$12 = CALL strlen([1408])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$34 }
	*($21 + [272]) = ($12 << [1])
	$18 = (($21 + [272]) | [1])
	if ( $12 ){ goto $label$33 }
	goto $label$32 
	
.LABEL $label$34
	$8 = (($12 + [16]) & [-16])
	$18 = CALL $191($8)
	*($21 + [272]) = ($8 | [1])
	*($21 + [280]) = $18
	*($21 + [276]) = $12
	
.LABEL $label$33
	CALL memcpy($18, [1408], $12)
	
.LABEL $label$32
	*(($18 + $12)) = [0]
	*(($21 + [264])) = [0]
	*($21 + [256]) = (int_64)0
	$12 = CALL strlen([1424])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$37 }
	*($21 + [256]) = ($12 << [1])
	$18 = (($21 + [256]) | [1])
	if ( $12 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$8 = (($12 + [16]) & [-16])
	$18 = CALL $191($8)
	*($21 + [256]) = ($8 | [1])
	*($21 + [264]) = $18
	*($21 + [260]) = $12
	
.LABEL $label$36
	CALL memcpy($18, [1424], $12)
	
.LABEL $label$35
	*(($18 + $12)) = [0]
	*(($21 + [248])) = [0]
	*($21 + [240]) = (int_64)0
	$12 = CALL strlen([1408])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$40 }
	*($21 + [240]) = ($12 << [1])
	$18 = (($21 + [240]) | [1])
	if ( $12 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	$8 = (($12 + [16]) & [-16])
	$18 = CALL $191($8)
	*($21 + [240]) = ($8 | [1])
	*($21 + [248]) = $18
	*($21 + [244]) = $12
	
.LABEL $label$39
	CALL memcpy($18, [1408], $12)
	
.LABEL $label$38
	*(($18 + $12)) = [0]
	*(($21 + [232])) = [0]
	*($21 + [224]) = (int_64)0
	$12 = CALL strlen([1440])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$43 }
	*($21 + [224]) = ($12 << [1])
	$18 = (($21 + [224]) | [1])
	if ( $12 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$8 = (($12 + [16]) & [-16])
	$18 = CALL $191($8)
	*($21 + [224]) = ($8 | [1])
	*($21 + [232]) = $18
	*($21 + [228]) = $12
	
.LABEL $label$42
	CALL memcpy($18, [1440], $12)
	
.LABEL $label$41
	*(($18 + $12)) = [0]
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$45 }
	$18 = uint_32($8 >> [1])
	$17 = $11
	goto $label$44 
	
.LABEL $label$45
	$18 = *(($4 + [4]))
	$17 = *(($4 + [8]))
	
.LABEL $label$44
	$6 = (($21 + [256]) | [1])
	$5 = ($12 & [1])
	$12 = *($21 + [256])
	$12 = ( *($21 + [260]) ? uint_32($12 >> [1]) : $5 )
	if ( ($12 == 0) ){ goto $label$24 }
	if ( ((int_32)$18 < (int_32)$12) ){ goto $label$23 }
	$16 = ($17 + $18)
	$7 = ( *($21 + [264]) ? $6 : $5 )
	$5 = *($7)
	$8 = $17
	
.LOOP $label$46:
	$18 = (($18 - $12) + [1])
	if ( ($18 == 0) ){ goto $label$23 }
	$18 = CALL memchr($8, $5, $18)
	if ( ($18 == 0) ){ goto $label$23 }
	if ( (CALL memcmp($18, $7, $12) == 0) ){ goto $label$25 }
	$8 = ($18 + [1])
	$18 = ($16 - $8)
	if ( ((int_32)$18 >= (int_32)$12) ){ goto $label$46 }
	goto $label$23 
	
.LABEL $label$27
	$8 = *(($4 + [4]))
	$11 = *(($4 + [8]))
	
.LABEL $label$26
	$5 = [0]
	$18 = CALL strlen([1360])
	if ( ($18 == 0) ){ goto $label$47 }
	$5 = ($11 + $8)
	$12 = $5
	if ( ((int_32)$8 < (int_32)$18) ){ goto $label$48 }
	$12 = $11
	
.LOOP $label$50:
	$8 = (($8 - $18) + [1])
	if ( ($8 == 0) ){ goto $label$49 }
	$12 = CALL memchr($12, [45], $8)
	if ( ($12 == 0) ){ goto $label$49 }
	if ( (CALL memcmp($12, [1360], $18) == 0) ){ goto $label$48 }
	$12 = ($12 + [1])
	$8 = ($5 - $12)
	if ( ((int_32)$8 >= (int_32)$18) ){ goto $label$50 }
	
.LABEL $label$49
	$12 = $5
	
.LABEL $label$48
	$5 = ( [-1] ? ($12 - $11) : ((int_32)$12 == (int_32)$5) )
	
.LABEL $label$47
	$12 = [-1]
	CALL eosio_assert(((int_32)$5 != (int_32)[-1]), [1376])
	CALL $206($21, $4, [0], $5, $4)
	$18 = *($21)
	CALL eosio_assert((( *($21 + [4]) ? uint_32($18 >> [1]) : ($18 & [1]) ) <= [8]), [112])
	$18 = ( *($21 + [8]) ? ($21 | [1]) : (*($21) & [1]) )
	
.LOOP $label$51:
	$11 = ($18 + $12)
	$4 = ($12 + [1])
	$12 = $4
	if ( *(($11 + [1])) ){ goto $label$51 }
	if ( ($4 == 0) ){ goto $label$53 }
	$13 = (CASTING uint_64)(uint_32 $4)
	$2 = (int_64)8
	$15 = (int_64)0
	
.LOOP $label$54:
	$12 = *($18)
	if ( ((uint_32)(($12 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$55 }
	$15 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$2 & (int_64)4294967288)) | (int_64)$15)
	
.LABEL $label$55
	$18 = ($18 + [1])
	$2 = ((int_64)$2 + (int_64)8)
	$13 = ((int_64)$13 + (int_64)-1)
	if ( ((int_64)$13 != (int_64)0) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$53
	$15 = (int_64)0
	
.LABEL $label$52
	CALL $25($0, (uint_64)$15 >> (uint_64)(int_64)8), *($3))
	if ( ((*($21) & [1]) == 0) ){ goto $label$7 }
	CALL $192(*(($21 + [8])))
	goto $label$7 
	
.LABEL $label$25
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$23 }
	if ( ((int_32)($18 - $17) == (int_32)[-1]) ){ goto $label$23 }
	$8 = *($4)
	
.LABEL $label$24
	if ( ($8 & [1]) ){ goto $label$22 }
	$8 = uint_32(($8 & [254]) >> [1])
	goto $label$21 
	
.LABEL $label$23
	$8 = *($4)
	if ( ($8 & [1]) ){ goto $label$57 }
	$18 = uint_32($8 >> [1])
	$17 = $11
	goto $label$56 
	
.LABEL $label$57
	$18 = *(($4 + [4]))
	$17 = *(($4 + [8]))
	
.LABEL $label$56
	$6 = (($21 + [224]) | [1])
	$5 = ($12 & [1])
	$12 = *($21 + [224])
	$12 = ( *($21 + [228]) ? uint_32($12 >> [1]) : $5 )
	if ( ($12 == 0) ){ goto $label$19 }
	if ( ((int_32)$18 < (int_32)$12) ){ goto $label$18 }
	$16 = ($17 + $18)
	$7 = ( *($21 + [232]) ? $6 : $5 )
	$5 = *($7)
	$8 = $17
	
.LOOP $label$58:
	$18 = (($18 - $12) + [1])
	if ( ($18 == 0) ){ goto $label$18 }
	$18 = CALL memchr($8, $5, $18)
	if ( ($18 == 0) ){ goto $label$18 }
	if ( (CALL memcmp($18, $7, $12) == 0) ){ goto $label$20 }
	$8 = ($18 + [1])
	$18 = ($16 - $8)
	if ( ((int_32)$18 >= (int_32)$12) ){ goto $label$58 }
	goto $label$18 
	
.LABEL $label$22
	$8 = *(($4 + [4]))
	$11 = *(($4 + [8]))
	
.LABEL $label$21
	$5 = [0]
	$16 = ($12 & [1])
	$12 = *($21 + [256])
	$18 = ( *($21 + [260]) ? uint_32($12 >> [1]) : $16 )
	if ( ($18 == 0) ){ goto $label$59 }
	$5 = ($11 + $8)
	$12 = $5
	if ( ((int_32)$8 < (int_32)$18) ){ goto $label$60 }
	$7 = ( *((($21 + [256]) + [8])) ? $6 : $16 )
	$16 = *($7)
	$12 = $11
	
.LOOP $label$62:
	$8 = (($8 - $18) + [1])
	if ( ($8 == 0) ){ goto $label$61 }
	$12 = CALL memchr($12, $16, $8)
	if ( ($12 == 0) ){ goto $label$61 }
	if ( (CALL memcmp($12, $7, $18) == 0) ){ goto $label$60 }
	$12 = ($12 + [1])
	$8 = ($5 - $12)
	if ( ((int_32)$8 >= (int_32)$18) ){ goto $label$62 }
	
.LABEL $label$61
	$12 = $5
	
.LABEL $label$60
	$5 = ( [-1] ? ($12 - $11) : ((int_32)$12 == (int_32)$5) )
	
.LABEL $label$59
	CALL $206($21, $4, [0], $5, $4)
	$18 = *($21)
	$11 = ($18 & [1])
	$12 = ($21 | [1])
	CALL prints_l(( *($21 + [8]) ? $12 : $11 ), ( *($21 + [4]) ? uint_32($18 >> [1]) : $11 ))
	$18 = *($21)
	CALL eosio_assert((( *($21 + [4]) ? uint_32($18 >> [1]) : ($18 & [1]) ) <= [8]), [112])
	$18 = ( *($21 + [8]) ? $12 : (*($21) & [1]) )
	$12 = [-1]
	
.LOOP $label$63:
	$11 = ($18 + $12)
	$8 = ($12 + [1])
	$12 = $8
	if ( *(($11 + [1])) ){ goto $label$63 }
	if ( ($8 == 0) ){ goto $label$65 }
	$15 = (CASTING uint_64)(uint_32 $8)
	$13 = (int_64)8
	$2 = (int_64)0
	
.LOOP $label$66:
	$12 = *($18)
	if ( ((uint_32)(($12 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$2 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$13 & (int_64)4294967288)) | (int_64)$2)
	
.LABEL $label$67
	$18 = ($18 + [1])
	$13 = ((int_64)$13 + (int_64)8)
	$15 = ((int_64)$15 + (int_64)-1)
	if ( ((int_64)$15 != (int_64)0) ){ goto $label$66 }
	goto $label$64 
	
.LABEL $label$65
	$2 = (int_64)0
	
.LABEL $label$64
	$12 = *($21 + [256])
	CALL $206(($21 + [184]), $4, (( *($21 + [260]) ? uint_32($12 >> [1]) : ($12 & [1]) ) + $5), [-1], $4)
	if ( (*($21 + [272]) & [1]) ){ goto $label$69 }
	*($21 + [272]) = [0]
	goto $label$68 
	
.LABEL $label$69
	*(*($21 + [280])) = [0]
	*($21 + [276]) = [0]
	
.LABEL $label$68
	CALL $196(($21 + [272]), [0])
	*((($21 + [272]) + [8])) = *((($21 + [184]) + [8]))
	*($21 + [272]) = *($21 + [184])
	$12 = *($21 + [188])
	*($21 + [276]) = $12
	$18 = *($21 + [272])
	CALL eosio_assert((( $12 ? uint_32($18 >> [1]) : ($18 & [1]) ) <= [13]), [1456])
	if ( ((*($21) & [1]) == 0) ){ goto $label$15 }
	CALL $192(*(($21 + [8])))
	goto $label$15 
	
.LABEL $label$20
	if ( ((int_32)$18 == (int_32)$16) ){ goto $label$18 }
	if ( ((int_32)($18 - $17) == (int_32)[-1]) ){ goto $label$18 }
	$8 = *($4)
	
.LABEL $label$19
	if ( ($8 & [1]) ){ goto $label$17 }
	$8 = uint_32(($8 & [254]) >> [1])
	goto $label$16 
	
.LABEL $label$18
	$12 = *($4)
	if ( ($12 & [1]) ){ goto $label$71 }
	$12 = uint_32($12 >> [1])
	goto $label$70 
	
.LABEL $label$71
	$12 = *(($4 + [4]))
	
.LABEL $label$70
	CALL eosio_assert(($12 <= [8]), [1200])
	if ( ((*($4) & [1]) == 0) ){ goto $label$72 }
	$11 = *(($4 + [8]))
	
.LABEL $label$72
	$12 = [-1]
	
.LOOP $label$73:
	$18 = ($11 + $12)
	$4 = ($12 + [1])
	$12 = $4
	if ( *(($18 + [1])) ){ goto $label$73 }
	if ( ($4 == 0) ){ goto $label$74 }
	$15 = (CASTING uint_64)(uint_32 $4)
	$13 = (int_64)8
	$2 = (int_64)0
	
.LOOP $label$75:
	$12 = *($11)
	if ( ((uint_32)(($12 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$76 }
	$2 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$13 & (int_64)4294967288)) | (int_64)$2)
	
.LABEL $label$76
	$11 = ($11 + [1])
	$13 = ((int_64)$13 + (int_64)8)
	$15 = ((int_64)$15 + (int_64)-1)
	if ( ((int_64)$15 != (int_64)0) ){ goto $label$75 }
	goto $label$15 
	
.LABEL $label$74
	$2 = (int_64)0
	goto $label$15 
	
.LABEL $label$17
	$8 = *(($4 + [4]))
	$11 = *(($4 + [8]))
	
.LABEL $label$16
	$5 = [0]
	$16 = ($12 & [1])
	$12 = *($21 + [224])
	$18 = ( *($21 + [228]) ? uint_32($12 >> [1]) : $16 )
	if ( ($18 == 0) ){ goto $label$77 }
	$5 = ($11 + $8)
	$12 = $5
	if ( ((int_32)$8 < (int_32)$18) ){ goto $label$78 }
	$7 = ( *((($21 + [224]) + [8])) ? $6 : $16 )
	$16 = *($7)
	$12 = $11
	
.LOOP $label$80:
	$8 = (($8 - $18) + [1])
	if ( ($8 == 0) ){ goto $label$79 }
	$12 = CALL memchr($12, $16, $8)
	if ( ($12 == 0) ){ goto $label$79 }
	if ( (CALL memcmp($12, $7, $18) == 0) ){ goto $label$78 }
	$12 = ($12 + [1])
	$8 = ($5 - $12)
	if ( ((int_32)$8 >= (int_32)$18) ){ goto $label$80 }
	
.LABEL $label$79
	$12 = $5
	
.LABEL $label$78
	$5 = ( [-1] ? ($12 - $11) : ((int_32)$12 == (int_32)$5) )
	
.LABEL $label$77
	CALL $206($21, $4, [0], $5, $4)
	$12 = *($21)
	CALL eosio_assert((( *($21 + [4]) ? uint_32($12 >> [1]) : ($12 & [1]) ) <= [8]), [112])
	$18 = ( *($21 + [8]) ? ($21 | [1]) : (*($21) & [1]) )
	$12 = [-1]
	
.LOOP $label$81:
	$11 = ($18 + $12)
	$8 = ($12 + [1])
	$12 = $8
	if ( *(($11 + [1])) ){ goto $label$81 }
	if ( ($8 == 0) ){ goto $label$83 }
	$15 = (CASTING uint_64)(uint_32 $8)
	$13 = (int_64)8
	$2 = (int_64)0
	
.LOOP $label$84:
	$12 = *($18)
	if ( ((uint_32)(($12 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$85 }
	$2 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $12) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$13 & (int_64)4294967288)) | (int_64)$2)
	
.LABEL $label$85
	$18 = ($18 + [1])
	$13 = ((int_64)$13 + (int_64)8)
	$15 = ((int_64)$15 + (int_64)-1)
	if ( ((int_64)$15 != (int_64)0) ){ goto $label$84 }
	goto $label$82 
	
.LABEL $label$83
	$2 = (int_64)0
	
.LABEL $label$82
	$12 = *($21 + [224])
	CALL $206(($21 + [184]), $4, (( *($21 + [228]) ? uint_32($12 >> [1]) : ($12 & [1]) ) + $5), [-1], $4)
	if ( (*($21 + [240]) & [1]) ){ goto $label$87 }
	*($21 + [240]) = [0]
	goto $label$86 
	
.LABEL $label$87
	*(*($21 + [248])) = [0]
	*($21 + [244]) = [0]
	
.LABEL $label$86
	CALL $196(($21 + [240]), [0])
	*((($21 + [240]) + [8])) = *((($21 + [184]) + [8]))
	*($21 + [240]) = *($21 + [184])
	$12 = *($21 + [188])
	*($21 + [244]) = $12
	$18 = *($21 + [240])
	CALL eosio_assert((( $12 ? uint_32($18 >> [1]) : ($18 & [1]) ) <= [13]), [1456])
	if ( ((*($21) & [1]) == 0) ){ goto $label$15 }
	CALL $192(*(($21 + [8])))
	
.LABEL $label$15
	$8 = [0]
	*(($21 + [216])) = [0]
	*($21 + [200]) = (int_64)-1
	*($21 + [208]) = (int_64)0
	$13 = *($0)
	*($21 + [184]) = $13
	$9 = (uint_64)$2 >> (uint_64)(int_64)8
	*($21 + [192]) = $9)
	$12 = CALL db_find_i64($13, $9, (int_64)-5001621769904193536, (int_64)-5001621769904193536)
	if ( ((int_32)$12 <= (int_32)[-1]) ){ goto $label$88 }
	CALL eosio_assert(((int_32)*(CALL $26(($21 + [184]), $12) + [8]) == (int_32)($21 + [184])), [144])
	$2 = CALL $27(($21 + [184]))
	$2 = ((uint_64)((int_64)((int_64)$13 * (int_64)$2) + (int_64)9999) / (uint_64)(int_64)10000)
	$10 = (int_64)((int_64)$2 << (int_64)32) >> (int_64)32
	$13 = *($3)
	CALL eosio_assert(((int_64)$13 > (int_64)$10)), [1488])
	$8 = (CASTING uint_32)(uint_64 $2)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$88 }
	*(($21 + [176])) = [0]
	*($21 + [160]) = (int_64)-1
	*($21 + [168]) = (int_64)0
	$2 = *($0)
	*($21 + [144]) = $2
	*($21 + [152]) = $9
	$12 = [0]
	$18 = CALL db_find_i64($2, $9, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$89 }
	$12 = CALL $7(($21 + [144]), $18)
	CALL eosio_assert(((int_32)*($12 + [112]) == (int_32)($21 + [144])), [144])
	
.LABEL $label$89
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [416])
	$5 = *($21 + [272])
	$12 = CALL strlen([1408])
	if ( ((int_32)$12 != (int_32)( *($21 + [276]) ? uint_32($5 >> [1]) : ($5 & [1]) )) ){ goto $label$97 }
	if ( (CALL $203(($21 + [272]), [0], [-1], [1408], $12) == 0) ){ goto $label$96 }
	$5 = *($21 + [272])
	
.LABEL $label$97
	$7 = (($21 + [272]) | [1])
	$16 = *($21 + [280])
	$12 = ( $16 ? $7 : ($5 & [1]) )
	$18 = [-1]
	
.LOOP $label$98:
	$11 = ($12 + $18)
	$4 = ($18 + [1])
	$18 = $4
	if ( *(($11 + [1])) ){ goto $label$98 }
	$14 = (CASTING uint_64)(uint_32 $4)
	$2 = (int_64)0
	$13 = (int_64)59
	$19 = (int_64)0
	
.LOOP $label$99:
	$15 = (int_64)0
	if ( ((uint_64)$2 >= (uint_64)$14) ){ goto $label$100 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$102 }
	$18 = ($18 + [165])
	goto $label$101 
	
.LABEL $label$102
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$101
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$100
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$104 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	goto $label$103 
	
.LABEL $label$104
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$103
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$19 = ((int_64)$15 | (int_64)$19)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$99 }
	if ( ((int_64)$19 != (int_64)$1) ){ goto $label$90 }
	$12 = *(($21 + [172]))
	if ( ((int_32)$12 == (int_32)*(($21 + [168]))) ){ goto $label$95 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [112]) == (int_32)($21 + [144])), [144])
	goto $label$94 
	
.LABEL $label$96
	$12 = *(($21 + [172]))
	if ( ((int_32)$12 == (int_32)*(($21 + [168]))) ){ goto $label$93 }
	$12 = *(($12 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [112]) == (int_32)($21 + [144])), [144])
	goto $label$92 
	
.LABEL $label$95
	$12 = [0]
	$18 = CALL db_find_i64(*($21 + [144]), *(($21 + [152])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$94 }
	$12 = CALL $7(($21 + [144]), $18)
	CALL eosio_assert(((int_32)*($12 + [112]) == (int_32)($21 + [144])), [144])
	
.LABEL $label$94
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [256])
	goto $label$91 
	
.LABEL $label$93
	$12 = [0]
	$18 = CALL db_find_i64(*($21 + [144]), *(($21 + [152])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$18 < (int_32)[0]) ){ goto $label$92 }
	$12 = CALL $7(($21 + [144]), $18)
	CALL eosio_assert(((int_32)*($12 + [112]) == (int_32)($21 + [144])), [144])
	
.LABEL $label$92
	CALL eosio_assert(((int_32)$12 != (int_32)[0]), [256])
	$7 = (($21 + [272]) | [1])
	
.LABEL $label$91
	$19 = *($12 + [8])
	$16 = *(($21 + [280]))
	$5 = *($21 + [272])
	
.LABEL $label$90
	$12 = ($5 & [1])
	CALL prints_l(( $16 ? $7 : $12 ), ( *($21 + [276]) ? uint_32(($5 & [254]) >> [1]) : $12 ))
	$20 = *($0)
	$2 = (int_64)0
	$15 = (int_64)59
	$12 = [1536]
	$14 = (int_64)0
	
.LOOP $label$105:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$110 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$18 = ($18 + [165])
	goto $label$108 
	
.LABEL $label$110
	$13 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$109
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$107
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$106
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$105 }
	*($21 + [96]) = $14
	*($21 + [88]) = $20
	$2 = (int_64)0
	$15 = (int_64)59
	$12 = [1552]
	$14 = (int_64)0
	
.LOOP $label$111:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$116 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$115 }
	$18 = ($18 + [165])
	goto $label$114 
	
.LABEL $label$116
	$13 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$115
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$114
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$113
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$112
	$12 = ($12 + [1])
	$15 = ((int_64)$15 + (int_64)-5)
	$14 = ((int_64)$13 | (int_64)$14)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$111 }
	$2 = (int_64)0
	$15 = (int_64)59
	$12 = [1568]
	$20 = (int_64)0
	
.LOOP $label$117:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$122 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$121 }
	$18 = ($18 + [165])
	goto $label$120 
	
.LABEL $label$122
	$13 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$121
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$120
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$119
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$118
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$20 = ((int_64)$13 | (int_64)$20)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$117 }
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [48])
	$2 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$125:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$124 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$126 }
	
.LOOP $label$127:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$124 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$127 }
	
.LABEL $label$126
	$18 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$125 }
	goto $label$123 
	
.LABEL $label$124
	$18 = [0]
	
.LABEL $label$123
	CALL eosio_assert($18, [112])
	*(($21 + [80])) = [0]
	*($21 + [72]) = (int_64)0
	$12 = CALL strlen([1584])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$130 }
	*($21 + [72]) = ($12 << [1])
	$18 = (($21 + [72]) | [1])
	if ( $12 ){ goto $label$129 }
	goto $label$128 
	
.LABEL $label$130
	$11 = (($12 + [16]) & [-16])
	$18 = CALL $191($11)
	*($21 + [72]) = ($11 | [1])
	*($21 + [80]) = $18
	*($21 + [76]) = $12
	
.LABEL $label$129
	CALL memcpy($18, [1584], $12)
	
.LABEL $label$128
	*(($18 + $12)) = [0]
	*(($21 + [24])) = (int_64)1397703940
	*(($21 + [36])) = *($21 + [76])
	*($21 + [8]) = $19
	$12 = ($21 + [80])
	*(($21 + [40])) = *($12)
	*($21) = *($0)
	*($21 + [16]) = $10
	*($21 + [32]) = *($21 + [72])
	*($21 + [72]) = [0]
	*($21 + [76]) = [0]
	*($12) = [0]
	$12 = CALL $28(($21 + [104]), ($21 + [88]), $14, $20, $21)
	CALL $29(($21 + [304]), $12)
	$18 = *($21 + [304])
	CALL send_inline($18, (*($21 + [308]) - $18))
	$18 = *($21 + [304])
	if ( ($18 == 0) ){ goto $label$131 }
	*($21 + [308]) = $18
	CALL $192($18)
	
.LABEL $label$131
	$18 = *($12 + [28])
	if ( ($18 == 0) ){ goto $label$132 }
	*(($12 + [32])) = $18
	CALL $192($18)
	
.LABEL $label$132
	$18 = *($12 + [16])
	if ( ($18 == 0) ){ goto $label$133 }
	*(($12 + [20])) = $18
	CALL $192($18)
	
.LABEL $label$133
	if ( ((*(($21 + [32])) & [1]) == 0) ){ goto $label$134 }
	CALL $192(*(($21 + [40])))
	
.LABEL $label$134
	if ( ((*($21 + [72]) & [1]) == 0) ){ goto $label$135 }
	CALL $192(*(($21 + [80])))
	
.LABEL $label$135
	$11 = *($21 + [168])
	if ( ($11 == 0) ){ goto $label$88 }
	$4 = ($21 + [172])
	$12 = *($4)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$137 }
	
.LOOP $label$138:
	$12 = ($12 + [-24])
	$18 = *($12)
	*($12) = [0]
	if ( ($18 == 0) ){ goto $label$139 }
	CALL $192($18)
	
.LABEL $label$139
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$138 }
	$12 = *(($21 + [168]))
	goto $label$136 
	
.LABEL $label$137
	$12 = $11
	
.LABEL $label$136
	*($4) = $11
	CALL $192($12)
	
.LABEL $label$88
	$10 = (CASTING int_64)(int_32 $8)
	CALL $30(($21 + [88]), $0, $9, (int_64))(*($3) - $10))
	$12 = *($21 + [240])
	$18 = CALL strlen([1408])
	if ( ((int_32)$18 != (int_32)( *($21 + [244]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$141 }
	$19 = $1
	if ( (CALL $203(($21 + [240]), [0], [-1], [1408], $18) == 0) ){ goto $label$140 }
	$12 = *($21 + [240])
	
.LABEL $label$141
	$12 = ( *($21 + [248]) ? (($21 + [240]) | [1]) : ($12 & [1]) )
	$18 = [-1]
	
.LOOP $label$142:
	$11 = ($12 + $18)
	$4 = ($18 + [1])
	$18 = $4
	if ( *(($11 + [1])) ){ goto $label$142 }
	$14 = (CASTING uint_64)(uint_32 $4)
	$2 = (int_64)0
	$13 = (int_64)59
	$19 = (int_64)0
	
.LOOP $label$143:
	$15 = (int_64)0
	if ( ((uint_64)$2 >= (uint_64)$14) ){ goto $label$144 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$146 }
	$18 = ($18 + [165])
	goto $label$145 
	
.LABEL $label$146
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$145
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$144
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$148 }
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	goto $label$147 
	
.LABEL $label$148
	$15 = ((int_64)$15 & (int_64)15)
	
.LABEL $label$147
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$19 = ((int_64)$15 | (int_64)$19)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$143 }
	
.LABEL $label$140
	$12 = [0]
	*((($21 + [144]) + [32])) = [0]
	*($21 + [160]) = (int_64)-1
	*($21 + [168]) = (int_64)0
	$2 = *($0)
	*($21 + [144]) = $2
	*($21 + [152]) = $19
	$18 = CALL db_find_i64($2, $19, (int_64)3607749779137757184, $9)
	if ( ((int_32)$18 <= (int_32)[-1]) ){ goto $label$150 }
	$12 = CALL $18(($21 + [144]), $18)
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)($21 + [144])), [144])
	$13 = *($0)
	CALL eosio_assert([1], [1616])
	CALL eosio_assert(((int_32)*($12 + [16]) == (int_32)($21 + [144])), [912])
	CALL eosio_assert(((int_64)*($21 + [144]) == (int_64)CALL $fimport$4()), [960])
	$2 = *($12 + [8])
	CALL eosio_assert(((int_64)*($21 + [96]) == (int_64)$2), [1024])
	$15 = ((int_64)*($12) + (int_64)*($21 + [88]))
	*($12) = $15
	CALL eosio_assert(((int_64)$15 > (int_64)-4611686018427387904), [1072])
	CALL eosio_assert(((int_64)*($12) < (int_64)4611686018427387904), [1104])
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	CALL eosio_assert(((int_64)$2) == (int_64)(uint_64)*($12 + [8]) >> (uint_64)(int_64)8)), [1136])
	CALL eosio_assert([1], [688])
	CALL memcpy($21, $12, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy(($21 | [8]), ($12 + [8]), [8])
	CALL db_update_i64(*($12 + [20]), $13, $21, [16])
	$12 = (($21 + [144]) + [16])
	if ( (uint_64)($2 <= *($12)) ){ goto $label$149 }
	*($12) = ((int_64)$2 + (int_64)1)
	goto $label$149 
	
.LABEL $label$150
	$13 = *($0)
	CALL eosio_assert(((int_64)*($21 + [144]) == (int_64)CALL $fimport$4()), [624])
	*(($18 = CALL $191([32])) + [8]) = (int_64)1397703940
	*($18) = (int_64)0
	CALL eosio_assert([1], [48])
	$4 = ($18 + [8])
	$2 = (int_64)5459781
	
.LOOP $label$152:
	$11 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$151 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$153 }
	
.LOOP $label$154:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$151 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$154 }
	
.LABEL $label$153
	$11 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$152 }
	
.LABEL $label$151
	CALL eosio_assert($11, [112])
	*($18 + [16]) = ($21 + [144])
	*(($12 = ($18 + [8]))) = *((($21 + [88]) + [8]))
	*($18) = *($21 + [88])
	CALL eosio_assert([1], [688])
	CALL memcpy($21, $18, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy(($21 | [8]), $4, [8])
	$2 = (uint_64)*($12) >> (uint_64)(int_64)8
	$11 = CALL db_store_i64(*((($21 + [144]) + [8])), (int_64)3607749779137757184, $13, $2), $21, [16]
	*($18 + [20]) = $11)
	$4 = (($21 + [144]) + [16])
	if ( (uint_64)($2 <= *($4)) ){ goto $label$155 }
	*($4) = ((int_64)$2 + (int_64)1)
	
.LABEL $label$155
	*($21 + [104]) = $18
	$2 = (uint_64)*($12) >> (uint_64)(int_64)8
	*($21) = $2)
	*($21 + [304]) = $11
	$4 = ($21 + [172])
	$12 = *($4)
	if ( ((uint_32)$12 >= (uint_32)*(($21 + [176]))) ){ goto $label$157 }
	*($12 + [8]) = $2
	*($12 + [16]) = $11
	*($21 + [104]) = [0]
	*($12) = $18
	*($4) = ($12 + [24])
	goto $label$156 
	
.LABEL $label$157
	CALL $20(($21 + [168]), ($21 + [104]), $21, ($21 + [304]))
	
.LABEL $label$156
	$12 = *($21 + [104])
	*($21 + [104]) = [0]
	if ( ($12 == 0) ){ goto $label$149 }
	CALL $192($12)
	
.LABEL $label$149
	CALL prints([1664])
	$12 = *($21 + [240])
	$18 = ($12 & [1])
	CALL prints_l(( *($21 + [248]) ? (($21 + [240]) | [1]) : $18 ), ( *($21 + [244]) ? uint_32($12 >> [1]) : $18 ))
	$9 = *($0)
	$2 = (int_64)0
	$15 = (int_64)59
	$12 = [1536]
	$14 = (int_64)0
	
.LOOP $label$158:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$163 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$162 }
	$18 = ($18 + [165])
	goto $label$161 
	
.LABEL $label$163
	$13 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$162
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$161
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$160
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$159
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$13 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$158 }
	$2 = (int_64)0
	$15 = (int_64)59
	$12 = [1696]
	$20 = (int_64)0
	
.LOOP $label$164:
	if ( ((uint_64)$2 > (uint_64)(int_64)6) ){ goto $label$169 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$168 }
	$18 = ($18 + [165])
	goto $label$167 
	
.LABEL $label$169
	$13 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$166 }
	goto $label$165 
	
.LABEL $label$168
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$167
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$166
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$165
	$12 = ($12 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$20 = ((int_64)$13 | (int_64)$20)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$164 }
	*(($21 + [80])) = [0]
	*($21 + [72]) = (int_64)0
	$12 = CALL strlen([1712])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$172 }
	*($21 + [72]) = ($12 << [1])
	$18 = (($21 + [72]) | [1])
	if ( $12 ){ goto $label$171 }
	goto $label$170 
	
.LABEL $label$172
	$11 = (($12 + [16]) & [-16])
	$18 = CALL $191($11)
	*($21 + [72]) = ($11 | [1])
	*($21 + [80]) = $18
	*($21 + [76]) = $12
	
.LABEL $label$171
	CALL memcpy($18, [1712], $12)
	
.LABEL $label$170
	*(($18 + $12)) = [0]
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [48])
	$2 = (int_64)5459781
	$12 = [0]
	
.LOOP $label$175:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$174 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$176 }
	
.LOOP $label$177:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$174 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$177 }
	
.LABEL $label$176
	$18 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$175 }
	goto $label$173 
	
.LABEL $label$174
	$18 = [0]
	
.LABEL $label$173
	CALL eosio_assert($18, [112])
	$12 = (($21 + [72]) + [8])
	*(($21 + [16])) = *($12)
	*(($18 = ($21 + [12]))) = *($21 + [76])
	*($21) = $19
	*($21 + [8]) = *($21 + [72])
	*($21 + [72]) = [0]
	*($21 + [76]) = [0]
	*($12) = [0]
	*(($21 + [32])) = *(($3 + [8]))
	*($21 + [24]) = *($3)
	*(($21 + [48])) = *((($21 + [88]) + [8]))
	*($21 + [40]) = *($21 + [88])
	*($21 + [56]) = $10
	*(($21 + [64])) = (int_64)1397703940
	*($21 + [104]) = $9
	*($21 + [112]) = $20
	*($21 + [120]) = [0]
	*(($11 = ($21 + [124]))) = [0]
	*(($4 = ($21 + [128]))) = [0]
	*(($12 = CALL $191([16]))) = $9
	*($12 + [8]) = $14
	*((($21 + [104]) + [32])) = [0]
	$5 = ($12 + [16])
	*($4) = $5
	*($11) = $5
	*($21 + [120]) = $12
	*($21 + [132]) = [0]
	*(($21 + [140])) = [0]
	$12 = *($21 + [8])
	$18 = ( *($18) ? uint_32($12 >> [1]) : ($12 & [1]) )
	$12 = ($18 + [56])
	$2 = (CASTING uint_64)(uint_32 $18)
	$18 = ($21 + [132])
	
.LOOP $label$178:
	$12 = ($12 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$178 }
	if ( ($12 == 0) ){ goto $label$180 }
	CALL $31($18, $12)
	$18 = *(($21 + [136]))
	$12 = *(($21 + [132]))
	goto $label$179 
	
.LABEL $label$180
	$18 = [0]
	$12 = [0]
	
.LABEL $label$179
	*($21 + [308]) = $12
	*($21 + [304]) = $12
	*($21 + [312]) = $18
	*($21 + [288]) = ($21 + [304])
	*($21 + [296]) = $21
	CALL $32(($21 + [296]), ($21 + [288]))
	CALL $29(($21 + [304]), ($21 + [104]))
	$12 = *($21 + [304])
	CALL send_inline($12, (*($21 + [308]) - $12))
	$12 = *($21 + [304])
	if ( ($12 == 0) ){ goto $label$181 }
	*($21 + [308]) = $12
	CALL $192($12)
	
.LABEL $label$181
	$12 = *($21 + [132])
	if ( ($12 == 0) ){ goto $label$182 }
	*(($21 + [136])) = $12
	CALL $192($12)
	
.LABEL $label$182
	$12 = *($21 + [120])
	if ( ($12 == 0) ){ goto $label$183 }
	*(($21 + [124])) = $12
	CALL $192($12)
	
.LABEL $label$183
	if ( ((*(($21 + [8])) & [1]) == 0) ){ goto $label$184 }
	CALL $192(*(($21 + [16])))
	
.LABEL $label$184
	if ( ((*($21 + [72]) & [1]) == 0) ){ goto $label$185 }
	CALL $192(*(($21 + [80])))
	
.LABEL $label$185
	CALL $33($0, $1, ((float_64)(CASTING float_64)(int_64 *($21 + [88])) / (float_64)(float_64)1e4), ((float_64)(CASTING float_64)(int_64 *($3)) / (float_64)(float_64)1e4), ((float_64)(CASTING float_64)(int_32 $8) / (float_64)(float_64)1e4), [1])
	CALL prints([1728])
	$11 = *($21 + [168])
	if ( ($11 == 0) ){ goto $label$186 }
	$4 = ($21 + [172])
	$12 = *($4)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$188 }
	
.LOOP $label$189:
	$12 = ($12 + [-24])
	$18 = *($12)
	*($12) = [0]
	if ( ($18 == 0) ){ goto $label$190 }
	CALL $192($18)
	
.LABEL $label$190
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$189 }
	$12 = *(($21 + [168]))
	goto $label$187 
	
.LABEL $label$188
	$12 = $11
	
.LABEL $label$187
	*($4) = $11
	CALL $192($12)
	
.LABEL $label$186
	$11 = *($21 + [208])
	if ( ($11 == 0) ){ goto $label$191 }
	$4 = ($21 + [212])
	$12 = *($4)
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$193 }
	
.LOOP $label$194:
	$12 = ($12 + [-24])
	$18 = *($12)
	*($12) = [0]
	if ( ($18 == 0) ){ goto $label$195 }
	CALL $192($18)
	
.LABEL $label$195
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$194 }
	$12 = *(($21 + [208]))
	goto $label$192 
	
.LABEL $label$193
	$12 = $11
	
.LABEL $label$192
	*($4) = $11
	CALL $192($12)
	
.LABEL $label$191
	if ( ((*($21 + [224]) & [1]) == 0) ){ goto $label$196 }
	CALL $192(*($21 + [232]))
	
.LABEL $label$196
	if ( ((*($21 + [240]) & [1]) == 0) ){ goto $label$197 }
	CALL $192(*(($21 + [248])))
	
.LABEL $label$197
	if ( ((*($21 + [256]) & [1]) == 0) ){ goto $label$198 }
	CALL $192(*(($21 + [264])))
	
.LABEL $label$198
	if ( ((*($21 + [272]) & [1]) == 0) ){ goto $label$7 }
	CALL $192(*($21 + [280]))
	
.LABEL $label$7
	*([0] + [4]) = ($21 + [320])
	return (unreachable)
	
.LABEL $label$6
	CALL $193(($21 + [272]))
	
.LABEL $label$5
	CALL $193(($21 + [256]))
	
.LABEL $label$4
	CALL $193(($21 + [240]))
	
.LABEL $label$3
	CALL $193(($21 + [224]))
	
.LABEL $label$2
	CALL $193(($21 + [72]))
	
.LABEL $label$1
	CALL $193(($21 + [72]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $25 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [160])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_64)$2 > (int_64)0), [2784])
	$4 = [0]
	*(($7 + [152])) = [0]
	*($7 + [136]) = (int_64)-1
	*($7 + [144]) = (int_64)0
	$5 = *($0)
	*($7 + [120]) = $5
	*($7 + [128]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $7(($7 + [120]), $0) + [112]) == (int_32)($7 + [120])), [144])
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [2832])
	$4 = *(($7 + [148]))
	if ( ((int_32)$4 == (int_32)*(($7 + [144]))) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)($7 + [120])), [144])
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	$0 = CALL db_find_i64(*($7 + [120]), *(($7 + [128])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $7(($7 + [120]), $0)
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)($7 + [120])), [144])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [256])
	$3 = CALL memcpy($7, $4, [112])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$5() / (uint_64)(int_64)1000000)) > (uint_32)*($3 + [92])), [2320])
	CALL eosio_assert(((int_64)*($3 + [80]) < (int_64)*($3 + [32])), [2880])
	CALL $74($3, $2)
	CALL $66(($3 + [120]), $3, *($3 + [8]))
	$0 = *($3 + [144])
	if ( ($0 == 0) ){ goto $label$4 }
	$6 = ($3 + [148])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$6 }
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$7 }
	$7 = *(($3 + [144]))
	goto $label$5 
	
.LABEL $label$6
	$7 = $0
	
.LABEL $label$5
	*($6) = $0
	CALL $192($7)
	
.LABEL $label$4
	*([0] + [4]) = ($3 + [160])
}

int_64 .FUNC $24 (int_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$2 = (*([0] + [4]) - [96])
	*([0] + [4]) = $2
	$12 = CALL transaction_size()
	$7 = ($2 - (($12 + [15]) & [-16]))
	*([0] + [4]) = $7
	$6 = CALL read_transaction($7, $12)
	$9 = CALL current_time()
	*((($12 = $2) + [44])) = [0]
	*(($12 + [48])) = [0]
	*($12 + [28]) = [0]
	*($12 + [32]) = [0]
	*($12 + [36]) = [0]
	*($12 + [40]) = [0]
	*($12 + [16]) = ((CASTING uint_32)(uint_64 ((uint_64)$9 / (uint_64)(int_64)1000000)) + [60])
	*($12 + [52]) = [0]
	*(($12 + [56])) = [0]
	*(($12 + [60])) = [0]
	*($12 + [64]) = [0]
	*(($12 + [68])) = [0]
	*(($12 + [72])) = [0]
	*($12 + [84]) = $7
	*($12 + [80]) = $7
	*($12 + [88]) = ($7 + $6)
	CALL $75(($12 + [80]), ($12 + [16]))
	CALL $77(CALL $76(CALL $76(($12 + [80]), ($12 + [40])), ($12 + [52])), ($12 + [64]))
	$9 = *(*($12 + [52]))
	CALL prints([2976])
	CALL printn($9)
	$9 = *(*($12 + [52]) + [8])
	CALL prints([2992])
	CALL printn($9)
	$9 = *(*(*($12 + [52]) + [16]) + [8])
	CALL prints([3008])
	CALL printn($9)
	$6 = *($12 + [52])
	$1 = *($6)
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1328]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$2 = ($2 + [165])
	goto $label$3 
	
.LABEL $label$4
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($2 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$1 != (int_64)$10) ){ goto $label$5 }
	$9 = *($6 + [8])
	if ( ((int_64)$9 != (int_64)*(*($6 + [16]) + [8])) ){ goto $label$5 }
	CALL prints([3024])
	CALL printn($9)
	*($12 + [8]) = $9
	CALL $78(($12 + [80]), ($12 + [8]))
	CALL prints([3040])
	$2 = *($12 + [80])
	$6 = ($2 & [1])
	$7 = (($12 + [80]) | [1])
	CALL prints_l(( *($12 + [88]) ? $7 : $6 ), ( *($12 + [84]) ? uint_32($2 >> [1]) : $6 ))
	CALL $199(($12 + [80]), [0], [1], [46])
	CALL prints([3056])
	$2 = *($12 + [80])
	$6 = ($2 & [1])
	CALL prints_l(( *($12 + [88]) ? $7 : $6 ), ( *($12 + [84]) ? uint_32($2 >> [1]) : $6 ))
	$3 = (*($12 + [80]) & [1])
	$4 = *($12 + [88])
	$7 = ( $4 ? $7 : $3 )
	$2 = [-1]
	
.LOOP $label$6:
	$6 = ($7 + $2)
	$5 = ($2 + [1])
	$2 = $5
	if ( *(($6 + [1])) ){ goto $label$6 }
	$10 = (CASTING uint_64)(uint_32 $5)
	$9 = (int_64)0
	$8 = (int_64)59
	$0 = (int_64)0
	
.LOOP $label$7:
	$11 = (int_64)0
	if ( ((uint_64)$9 >= (uint_64)$10) ){ goto $label$8 }
	$2 = *($7)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$2 = ($2 + [165])
	goto $label$9 
	
.LABEL $label$10
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$12 }
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	goto $label$11 
	
.LABEL $label$12
	$11 = ((int_64)$11 & (int_64)15)
	
.LABEL $label$11
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$0 = ((int_64)$11 | (int_64)$0)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$7 }
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $192($4)
	
.LABEL $label$5
	CALL $79(($12 + [16]))
	*([0] + [4]) = ($12 + [96])
	return $0
}

int_64 .FUNC $27 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *(($0 + [28]))
	if ( ((int_32)$2 == (int_32)*($0 + [24])) ){ goto $label$2 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [144])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	$1 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5001621769904193536, (int_64)-5001621769904193536)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $26($0, $1)
	CALL eosio_assert(((int_32)*($2 + [8]) == (int_32)$0), [144])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [256])
	return *($2)
}

int_32 .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	$7 = $8
	*([0] + [4]) = $8
	$2 = *($0 + [24])
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$5 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($5 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $5
	$4 = ($5 + [-24])
	$5 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$4 }
	$5 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [320])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$6 }
	$6 = CALL malloc($4)
	CALL db_get_i64($1, $6, $4)
	CALL free($6)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($8 - (($4 + [15]) & [-16]))
	*([0] + [4]) = $6
	CALL db_get_i64($1, $6, $4)
	
.LABEL $label$5
	*(($5 = CALL $191([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [352])
	CALL memcpy($5, $6, [8])
	*($5 + [12]) = $1
	*($7 + [24]) = $5
	*($7 + [16]) = (int_64)-5001621769904193536
	$6 = *($5 + [12])
	*($7 + [12]) = $6
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = (int_64)-5001621769904193536
	*($4 + [16]) = $6
	*($7 + [24]) = [0]
	*($4) = $5
	*($1) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $73(($0 + [24]), ($7 + [24]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$7
	$4 = *($7 + [24])
	*($7 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [32])
	return $5
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1984])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [2032])
	$6 = ($0 + [28])
	$5 = *($6)
	CALL eosio_assert(((int_32)$5 != (int_32)*($0 + [24])), [2096])
	$4 = ($5 + [-24])
	$6 = *($6)
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	$2 = ([0] - $6)
	
.LOOP $label$4:
	$6 = ($4 + [24])
	$3 = *($6)
	*($6) = [0]
	$5 = *($4)
	*($4) = $3
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $192($5)
	
.LABEL $label$5
	*(($4 + [16])) = *(($4 + [40]))
	*(($4 + [8])) = *(($4 + [32]))
	$4 = $6
	if ( ((int_32)($6 + $2) != (int_32)[-24]) ){ goto $label$4 }
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$6 = $4
	
.LABEL $label$2
	
.LOOP $label$6:
	$5 = ($5 + [-24])
	$4 = *($5)
	*($5) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $192($4)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $6
	CALL db_remove_i64(*($1 + [12]))
}

void .FUNC $100 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [1984])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [2032])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1 + [8])
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( (uint_64)(((int_64)*(*($8) + [8]) ^ (int_64)$2) <= (int_64)256) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2096])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $192($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $192($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [44]))
}

void .FUNC $103 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = *([0] + [4])
	$9 = $10
	CALL eosio_assert(((int_32)*($1 + [16]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	$5 = *((*($3) + [8]))
	$7 = *($1 + [8])
	CALL eosio_assert([1], [48])
	$4 = (uint_64)$7 >> (uint_64)(int_64)8)
	$3 = [0]
	$6 = (uint_64)$5 >> (uint_64)(int_64)8
	$7 = $6)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$7) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$8 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	
.LABEL $label$1
	CALL eosio_assert($8, [112])
	*(($8 = ($1 + [8]))) = $5
	*($1) = (int_64)9000
	CALL eosio_assert(((int_64)$4 == (int_64)$6), [1136])
	$10 = $10
	$3 = ($10 + [-16])
	*([0] + [4]) = $3
	CALL eosio_assert([1], [688])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert([1], [688])
	CALL memcpy(($10 + [-8]), $8, [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ((int_64)$4 + (int_64)1)
	
.LABEL $label$6
	*([0] + [4]) = $9
}

void .FUNC _ZN12tokendapppub11initdapppubEN5eosio5assetES1_S1_mhhym (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [176])
	*([0] + [4]) = $14
	CALL require_auth((int_64)4301693184432061600)
	*($14 + [152]) = (int_64)-1
	*($14 + [160]) = [0]
	*($14 + [136]) = *($0)
	$9 = *($2 + [8])
	$10 = (uint_64)$9 >> (uint_64)(int_64)8
	*($14 + [144]) = $10)
	*(($14 + [164])) = [0]
	*((($14 + [136]) + [32])) = [0]
	$11 = *($1)
	$12 = (int_64)$11 >> (int_64)63
	*(($14 + [40])) = $12)
	*($14 + [24]) = (int_64)4301693184432061600
	*($14 + [16]) = $9
	*($14 + [32]) = $11
	$9 = *($3)
	$13 = (int_64)
	*($14 + [48]) = $13(*($2) - $9))
	*($14 + [56]) = $9
	*($14 + [64]) = (int_64)0
	*($14 + [72]) = (int_64)0
	*(($14 + [88])) = $12
	*($14 + [80]) = $11
	*($14 + [96]) = $13
	*($14 + [104]) = $4
	$11 = CALL current_time()
	*($14 + [112]) = $5
	*($14 + [113]) = $6
	$6 = (CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000))
	*($14 + [108]) = ( $6 ? $8 : ((uint_32)$6 > (uint_32)$8) )
	CALL $66(($14 + [136]), ($14 + [16]), (int_64)4301693184432061600)
	*((($14 + [16]) + [32])) = [0]
	*($14 + [24]) = (int_64)4301693184432061600
	*($14 + [32]) = (int_64)-1
	*($14 + [40]) = (int_64)0
	$11 = *($0)
	*($14 + [16]) = $11
	$8 = [0]
	$6 = CALL db_find_i64($11, (int_64)4301693184432061600, (int_64)3607749779137757184, $10)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $18(($14 + [16]), $6)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($14 + [16])), [144])
	
.LABEL $label$1
	$11 = *($0)
	*($14 + [8]) = $2
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [1616])
	CALL $103(($14 + [16]), $8, $11, ($14 + [8]))
	$8 = *($14 + [40])
	if ( ($8 == 0) ){ goto $label$2 }
	$6 = ($14 + [44])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$6 }
	CALL $192($0)
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	$2 = *(($14 + [40]))
	goto $label$3 
	
.LABEL $label$4
	$2 = $8
	
.LABEL $label$3
	*($6) = $8
	CALL $192($2)
	
.LABEL $label$2
	$8 = *($14 + [160])
	if ( ($8 == 0) ){ goto $label$7 }
	$6 = ($14 + [164])
	$2 = *($6)
	if ( ((int_32)$2 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = ($2 + [-24])
	$0 = *($2)
	*($2) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $192($0)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$10 }
	$2 = *(($14 + [160]))
	goto $label$8 
	
.LABEL $label$9
	$2 = $8
	
.LABEL $label$8
	*($6) = $8
	CALL $192($2)
	
.LABEL $label$7
	*([0] + [4]) = ($14 + [176])
}

void .FUNC $105 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_64 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [160])
	*([0] + [4]) = $16
	$14 = [0]
	$9 = *($3 + [8])
	$15 = (uint_64)$9 >> (uint_64)(int_64)8
	$13 = $15)
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$13 = (uint_64)$13 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$13) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$10 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$10 = [0]
	
.LABEL $label$1
	CALL eosio_assert($10, [112])
	CALL eosio_assert(((int_64)$9 == (int_64)*($4 + [8])), [4240])
	$10 = [0]
	*(($16 + [152])) = [0]
	*($16 + [136]) = (int_64)-1
	*($16 + [144]) = (int_64)0
	$13 = *($0)
	*($16 + [120]) = $13
	*($16 + [128]) = $15
	$14 = CALL db_find_i64($13, $15, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$14 < (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*(CALL $7(($16 + [120]), $14) + [112]) == (int_32)($16 + [120])), [144])
	$14 = [0]
	goto $label$6 
	
.LABEL $label$7
	$14 = [1]
	
.LABEL $label$6
	CALL eosio_assert($14, [4320])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)1397703940), [4608])
	$13 = *($2)
	CALL eosio_assert((uint_64)(((int_64)$13 + (int_64)-1) <= (int_64)10000000000000), [4640])
	$11 = *($3)
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) >= (uint_64)(int_64)9223372036854775807) ){ goto $label$8 }
	$14 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$15 = (uint_64)$15 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$15) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$10 = [1]
	$14 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$10 = [0]
	
.LABEL $label$8
	CALL eosio_assert($10, [4352])
	CALL eosio_assert((uint_64)(((int_64)$11 + (int_64)-1) <= (int_64)100000000000000000), [4384])
	$15 = *($4)
	CALL eosio_assert((((int_64)$15 > (int_64)-1) & ((int_64)$11 >= (int_64)$15)), [4432])
	CALL eosio_assert(($5 <= [-1141367295]), [4464])
	CALL eosio_assert(($6 <= [100]), [4496])
	CALL eosio_assert((($7 <= [100]) & ((uint_32)$7 >= (uint_32)$6)), [4528])
	CALL eosio_assert(((uint_32)((CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$5() / (uint_64)(int_64)1000000)) + [15552000]) >= (uint_32)$8), [4560])
	$12 = (int_64)$13 >> (int_64)63
	*(($16 + [24])) = $12)
	*($16 + [16]) = $13
	*($16 + [8]) = $1
	*($16) = $9
	$11 = (int_64)
	*($16 + [32]) = $11($11 - $15))
	*($16 + [40]) = $15
	*($16 + [48]) = (int_64)0
	*($16 + [56]) = (int_64)0
	*(($16 + [72])) = $12
	*($16 + [64]) = $13
	*($16 + [80]) = $11
	*($16 + [88]) = $5
	$13 = CALL current_time()
	*($16 + [96]) = $6
	*($16 + [97]) = $7
	$14 = (CASTING uint_32)(uint_64 ((uint_64)$13 / (uint_64)(int_64)1000000))
	*($16 + [92]) = ( $14 ? $8 : ((uint_32)$14 > (uint_32)$8) )
	CALL $66(($16 + [120]), $16, $1)
	$6 = *($16 + [144])
	if ( ($6 == 0) ){ goto $label$13 }
	$7 = ($16 + [148])
	$14 = *($7)
	if ( ((int_32)$14 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$14 = ($14 + [-24])
	$10 = *($14)
	*($14) = [0]
	if ( ($10 == 0) ){ goto $label$17 }
	CALL $192($10)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$14) ){ goto $label$16 }
	$14 = *(($16 + [144]))
	goto $label$14 
	
.LABEL $label$15
	$14 = $6
	
.LABEL $label$14
	*($7) = $6
	CALL $192($14)
	
.LABEL $label$13
	*([0] + [4]) = ($16 + [160])
}

void .FUNC _ZN12tokendapppub12hellodapppubEN5eosio5assetES1_S1_mhhym (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_64 $7, int_32 $8)
{
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [224])
	*([0] + [4]) = $16
	CALL require_auth((int_64)4301693184432061600)
	*(($10 = (($16 + [136]) + [8]))) = *(($1 + [8]))
	$11 = ($2 + [8])
	*(($12 = (($16 + [120]) + [8]))) = *($11)
	*($16 + [136]) = *($1)
	*($16 + [120]) = *($2)
	*(($1 = (($16 + [104]) + [8]))) = *(($3 + [8]))
	*($16 + [104]) = *($3)
	*((($16 + [56]) + [8])) = *($10)
	*($16 + [56]) = *($16 + [136])
	*((($16 + [40]) + [8])) = *($12)
	*($16 + [40]) = *($16 + [120])
	*((($16 + [24]) + [8])) = *($1)
	*($16 + [24]) = *($16 + [104])
	CALL $105($0, (int_64)4301693184432061600, ($16 + [56]), ($16 + [40]), ($16 + [24]), $4, $5, $6, $8)
	CALL $106($0, (uint_64)*($11) >> (uint_64)(int_64)8), $7, (int_64)4301693184432061600)
	$9 = *($0)
	$7 = (int_64)0
	$13 = (int_64)59
	$3 = [1536]
	$14 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$6 }
	$1 = *($3)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$1 = ($1 + [165])
	goto $label$4 
	
.LABEL $label$6
	$15 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$1 }
	*(($3 = (($16 + [88]) + [8]))) = *(($2 + [8]))
	*($16 + [88]) = *($2)
	*(($1 = (($16 + [192]) + [8]))) = *($3)
	*($16 + [192]) = *($16 + [88])
	*(($3 = CALL $191([16]))) = (int_64)4301693184432061600
	*($3 + [8]) = $14
	*(($16 + [172])) = *((($16 + [192]) + [12]))
	$4 = ($3 + [16])
	*($16 + [216]) = $4
	*(($5 = (($16 + [152]) + [16]))) = *($1)
	*($16 + [208]) = $3
	*($16 + [212]) = $4
	*($16 + [152]) = (int_64)4301693184432061600
	*((($16 + [152]) + [12])) = *($16 + [196])
	*($16 + [160]) = *($16 + [192])
	*(($16 + [8])) = *($16 + [160])
	*(($16 + [16])) = *($5)
	*($16) = *($16 + [152])
	CALL $107($9, (int_64)5031766152489992192, ($16 + [208]), $16)
	$3 = *($16 + [208])
	if ( ($3 == 0) ){ goto $label$7 }
	*($16 + [212]) = $3
	CALL $192($3)
	
.LABEL $label$7
	$9 = *($0)
	$7 = (int_64)0
	$13 = (int_64)59
	$3 = [1536]
	$14 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$7 > (uint_64)(int_64)5) ){ goto $label$13 }
	$1 = *($3)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$1 = ($1 + [165])
	goto $label$11 
	
.LABEL $label$13
	$15 = (int_64)0
	if ( ((uint_64)$7 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$9
	$3 = ($3 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$14 = ((int_64)$15 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$8 }
	*(($16 + [216])) = [0]
	*($16 + [208]) = (int_64)0
	$3 = CALL strlen([1408])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$17 }
	*($16 + [208]) = ($3 << [1])
	$1 = (($16 + [208]) | [1])
	if ( $3 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$0 = (($3 + [16]) & [-16])
	$1 = CALL $191($0)
	*($16 + [208]) = ($0 | [1])
	*($16 + [216]) = $1
	*($16 + [212]) = $3
	
.LABEL $label$16
	CALL memcpy($1, [1408], $3)
	
.LABEL $label$15
	*(($1 + $3)) = [0]
	*(($1 = (($16 + [72]) + [8]))) = *(($2 + [8]))
	*($16 + [72]) = *($2)
	$2 = *($16 + [208])
	*($16 + [208]) = [0]
	$0 = *($16 + [216])
	$4 = *($16 + [212])
	*($16 + [212]) = [0]
	*($16 + [216]) = [0]
	*(($3 = CALL $191([16]))) = (int_64)4301693184432061600
	*($3 + [8]) = $14
	*(($16 + [172])) = *((($16 + [72]) + [12]))
	*((($16 + [152]) + [12])) = *($16 + [76])
	$5 = ($3 + [16])
	*($16 + [200]) = $5
	*((($16 + [152]) + [16])) = *($1)
	*($16 + [192]) = $3
	*($16 + [152]) = (int_64)4301693184432061600
	*($16 + [196]) = $5
	*($16 + [160]) = *($16 + [72])
	*($16 + [176]) = $2
	*(($16 + [180])) = $4
	*(($3 = ($16 + [184]))) = $0
	CALL $108($9, (int_64)8516769789752901632, ($16 + [192]), ($16 + [152]))
	if ( ((*($16 + [176]) & [1]) == 0) ){ goto $label$18 }
	CALL $192(*($3))
	
.LABEL $label$18
	$3 = *($16 + [192])
	if ( ($3 == 0) ){ goto $label$19 }
	*($16 + [196]) = $3
	CALL $192($3)
	
.LABEL $label$19
	if ( ((*($16 + [208]) & [1]) == 0) ){ goto $label$20 }
	CALL $192(*(($16 + [216])))
	
.LABEL $label$20
	*([0] + [4]) = ($16 + [224])
	return (unreachable)
	
.LABEL $label$14
	CALL $193(($16 + [208]))
}

void .FUNC $107 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $191($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*((($9 + [8]) + [8])) = [0]
	*((($9 + [24]) + [24])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*(($8 = ($9 + [56]))) = [0]
	*(($9 + [60])) = [0]
	CALL $31(($9 + [52]), [24])
	$8 = *($9 + [52])
	$2 = (*($8) - $8)
	CALL eosio_assert(((int_32)$2 > (int_32)[7]), [688])
	CALL memcpy($8, $3, [8])
	CALL eosio_assert(((int_32)($2 + [-8]) > (int_32)[7]), [688])
	CALL memcpy(($8 + [8]), ($3 + [8]), [8])
	CALL eosio_assert(((int_32)($2 + [-16]) > (int_32)[7]), [688])
	CALL memcpy(($8 + [16]), ($3 + [16]), [8])
	CALL $29(($9 + [64]), ($9 + [24]))
	$8 = *($9 + [64])
	CALL send_inline($8, (*($9 + [68]) - $8))
	$8 = *($9 + [64])
	if ( ($8 == 0) ){ goto $label$4 }
	*($9 + [68]) = $8
	CALL $192($8)
	
.LABEL $label$4
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$5 }
	*(($9 + [56])) = $8
	CALL $192($8)
	
.LABEL $label$5
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$6 }
	*(($9 + [44])) = $8
	CALL $192($8)
	
.LABEL $label$6
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [12]) = $8
	CALL $192($8)
	
.LABEL $label$7
	*([0] + [4]) = ($9 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $204(($9 + [8]))
}

void .FUNC $106 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [48])
	*([0] + [4]) = $8
	CALL eosio_assert((uint_64)($2 <= (int_64)10000), [4176])
	$7 = [0]
	*(($8 + [40])) = [0]
	*($8 + [24]) = (int_64)-1
	*($8 + [32]) = (int_64)0
	$5 = *($0)
	*($8 + [8]) = $5
	*($8 + [16]) = $1
	$0 = CALL db_find_i64($5, $1, (int_64)-5001621769904193536, (int_64)-5001621769904193536)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*(CALL $26(($8 + [8]), $0) + [8]) == (int_32)($8 + [8])), [144])
	goto $label$1 
	
.LABEL $label$2
	$7 = [1]
	
.LABEL $label$1
	CALL eosio_assert($7, [4208])
	*($8) = $2
	CALL $109(($8 + [8]), $8, $3)
	$4 = *($8 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	$6 = ($8 + [36])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	
.LOOP $label$6:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $192($0)
	
.LABEL $label$7
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$6 }
	$7 = *(($8 + [32]))
	goto $label$4 
	
.LABEL $label$5
	$7 = $4
	
.LABEL $label$4
	*($6) = $4
	CALL $192($7)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
}

void .FUNC $109 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *(($0 + [28]))
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$3 = *(($3 + [-24]))
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [144])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5001621769904193536, (int_64)-5001621769904193536)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	$3 = CALL $26($0, $3)
	CALL eosio_assert(((int_32)*($3 + [8]) == (int_32)$0), [144])
	
.LABEL $label$3
	*($4) = $1
	CALL eosio_assert([1], [1616])
	CALL $110($0, $3, $2, $4)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $1
	CALL $111($4, $0, $2, ($4 + [8]))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $108 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	*($9 + [16]) = [0]
	*($9 + [8]) = (int_64)0
	$6 = [0]
	$7 = [0]
	$8 = [0]
	$4 = (*($2 + [4]) - *($2))
	$5 = int_32($4 >> [4])
	if ( ($5 == 0) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$8 = CALL $191($4)
	$6 = ($8 + ($5 << [4]))
	*(($9 + [16])) = $6
	*($9 + [8]) = $8
	*($9 + [12]) = $8
	$7 = *($2)
	$2 = (*(($2 + [4])) - $7)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($8, $7, $2)
	$7 = ($8 + $2)
	*($9 + [12]) = $7
	goto $label$2 
	
.LABEL $label$3
	$7 = $8
	
.LABEL $label$2
	*(($9 + [44])) = $7
	*($9 + [32]) = $1
	*(($9 + [16])) = [0]
	*((($9 + [24]) + [24])) = $6
	*($9 + [24]) = $0
	*($9 + [40]) = $8
	*($9 + [8]) = (int_64)0
	*($9 + [52]) = [0]
	*(($9 + [56])) = [0]
	*(($9 + [60])) = [0]
	$8 = *($3 + [24])
	$2 = ( *(($3 + [28])) ? uint_32($8 >> [1]) : ($8 & [1]) )
	$8 = ($2 + [24])
	$0 = (CASTING uint_64)(uint_32 $2)
	$6 = ($3 + [24])
	$2 = (($9 + [24]) + [28])
	
.LOOP $label$4:
	$8 = ($8 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($8 == 0) ){ goto $label$6 }
	CALL $31($2, $8)
	$2 = *(($9 + [56]))
	$8 = *(($9 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$8 = [0]
	
.LABEL $label$5
	*($9 + [64]) = $8
	*($9 + [72]) = $2
	CALL eosio_assert(((int_32)($2 - $8) > (int_32)[7]), [688])
	CALL memcpy($8, $3, [8])
	$7 = ($8 + [8])
	CALL eosio_assert(((int_32)($2 - $7) > (int_32)[7]), [688])
	CALL memcpy($7, ($3 + [8]), [8])
	$7 = ($8 + [16])
	CALL eosio_assert(((int_32)($2 - $7) > (int_32)[7]), [688])
	CALL memcpy($7, ($3 + [16]), [8])
	*($9 + [68]) = ($8 + [24])
	CALL $64(($9 + [64]), $6)
	CALL $29(($9 + [64]), ($9 + [24]))
	$8 = *($9 + [64])
	CALL send_inline($8, (*($9 + [68]) - $8))
	$8 = *($9 + [64])
	if ( ($8 == 0) ){ goto $label$7 }
	*($9 + [68]) = $8
	CALL $192($8)
	
.LABEL $label$7
	$8 = *($9 + [52])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($9 + [56])) = $8
	CALL $192($8)
	
.LABEL $label$8
	$8 = *($9 + [40])
	if ( ($8 == 0) ){ goto $label$9 }
	*(($9 + [44])) = $8
	CALL $192($8)
	
.LABEL $label$9
	$8 = *($9 + [8])
	if ( ($8 == 0) ){ goto $label$10 }
	*($9 + [12]) = $8
	CALL $192($8)
	
.LABEL $label$10
	*([0] + [4]) = ($9 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $204(($9 + [8]))
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC $38 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $191([72])) + [56]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [40])
	*($8 + [56]) = ($6 + [48])
	CALL $59(($8 + [32]), ($8 + [24]))
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6 + [48])
	*($8 + [32]) = $5
	$7 = *($6 + [60])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $57(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $39 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	float_64 $9
	float_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	*($1) = ((float_64)*(*($3)) + (float_64)*($1))
	*($1 + [40]) = *(*($3 + [4]))
	$5 = *($1 + [48])
	$7 = ($1 + [24])
	$9 = *($1 + [24])
	$10 = *(*($3 + [4]))
	if ( (((float_64)$10 <= (float_64)$9) | (((float_64)$10 != (float_64)$10) | ((float_64)$9 != (float_64)$9))) ){ goto $label$1 }
	*($7) = $10
	$10 = *(*(($3 + [4])))
	
.LABEL $label$1
	$6 = ($1 + [40])
	$4 = ($1 + [48])
	$8 = ($1 + [32])
	$9 = *($1 + [32])
	if ( (((float_64)$10 >= (float_64)$9) | (((float_64)$10 != (float_64)$10) | ((float_64)$9 != (float_64)$9))) ){ goto $label$2 }
	*($8) = $10
	
.LABEL $label$2
	*($1 + [8]) = ((float_64)*(*($3 + [8])) + (float_64)*($1 + [8]))
	CALL eosio_assert([1], [1136])
	$12 = $12
	$3 = ($12 + [-64])
	*([0] + [4]) = $3
	*($11 + [12]) = $3
	*($11 + [8]) = $3
	*($11 + [16]) = ($12 + [-8])
	*($11 + [24]) = ($11 + [8])
	*($11 + [36]) = ($1 + [8])
	*($11 + [32]) = $1
	*($11 + [40]) = ($1 + [16])
	*($11 + [44]) = $7
	*($11 + [48]) = $8
	*($11 + [52]) = $6
	*($11 + [56]) = $4
	CALL $58(($11 + [32]), ($11 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($11 + [64])
}

void .FUNC $36 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [48])
	*([0] + [4]) = $7
	*($7 + [40]) = $2
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$4()), [624])
	*($7 + [20]) = $3
	*($7 + [16]) = $1
	*($7 + [24]) = ($7 + [40])
	$3 = CALL $191([72])
	CALL $60($3, $1, ($7 + [16]))
	*($7 + [32]) = $3
	$2 = *($3 + [48])
	*($7 + [16]) = $2
	$4 = *($3 + [60])
	*($7 + [12]) = $4
	$6 = ($1 + [28])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$2 }
	*($5 + [8]) = $2
	*($5 + [16]) = $4
	*($7 + [32]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$1 
	
.LABEL $label$2
	CALL $61(($1 + [24]), ($7 + [32]), ($7 + [16]), ($7 + [12]))
	
.LABEL $label$1
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($7 + [32])
	*($7 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $192($1)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [48])
}

int_32 .FUNC $37 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [60]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2224])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)-7772393099124277248)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2160])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2160])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $34(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [64])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [320])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $191([72])) + [56]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	*($8 + [48]) = ($6 + [32])
	*($8 + [52]) = ($6 + [40])
	*($8 + [56]) = ($6 + [48])
	CALL $63(($8 + [32]), ($8 + [24]))
	*($6 + [60]) = $1
	*($8 + [24]) = $6
	$5 = *($6 + [48])
	*($8 + [32]) = $5
	$7 = *($6 + [60])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $61(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $192($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [64])
	return $6
}

void .FUNC $35 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	float_64 $9
	float_64 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	$11 = $12
	*([0] + [4]) = $12
	CALL eosio_assert(((int_32)*($1 + [56]) == (int_32)$0), [912])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$4()), [960])
	*($1) = ((float_64)*(*($3)) + (float_64)*($1))
	*($1 + [40]) = *(*($3 + [4]))
	$5 = *($1 + [48])
	$7 = ($1 + [24])
	$9 = *($1 + [24])
	$10 = *(*($3 + [4]))
	if ( (((float_64)$10 <= (float_64)$9) | (((float_64)$10 != (float_64)$10) | ((float_64)$9 != (float_64)$9))) ){ goto $label$1 }
	*($7) = $10
	$10 = *(*(($3 + [4])))
	
.LABEL $label$1
	$6 = ($1 + [40])
	$4 = ($1 + [48])
	$8 = ($1 + [32])
	$9 = *($1 + [32])
	if ( (((float_64)$10 >= (float_64)$9) | (((float_64)$10 != (float_64)$10) | ((float_64)$9 != (float_64)$9))) ){ goto $label$2 }
	*($8) = $10
	
.LABEL $label$2
	*($1 + [8]) = ((float_64)*(*($3 + [8])) + (float_64)*($1 + [8]))
	CALL eosio_assert([1], [1136])
	$12 = $12
	$3 = ($12 + [-64])
	*([0] + [4]) = $3
	*($11 + [12]) = $3
	*($11 + [8]) = $3
	*($11 + [16]) = ($12 + [-8])
	*($11 + [24]) = ($11 + [8])
	*($11 + [36]) = ($1 + [8])
	*($11 + [32]) = $1
	*($11 + [40]) = ($1 + [16])
	*($11 + [44]) = $7
	*($11 + [48]) = $8
	*($11 + [52]) = $6
	*($11 + [56]) = $4
	CALL $62(($11 + [32]), ($11 + [24]))
	CALL db_update_i64(*($1 + [60]), $2, $3, [56])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	*([0] + [4]) = ($11 + [64])
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	CALL $64(*($1), ($0 + [8]))
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [48]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [56]), [8])
	$1 = (*($3 + [4]) + [8])
	*($3 + [4]) = $1
	CALL eosio_assert(((int_32)(*($3 + [8]) - $1) > (int_32)[7]), [688])
	CALL memcpy(*($3 + [4]), ($0 + [64]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $33 (int_32 $0, int_64 $1, float_64 $2, float_64 $3, float_64 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [304])
	*([0] + [4]) = $10
	*($10 + [296]) = $1
	*($10 + [288]) = $2
	*($10 + [280]) = $3
	*($10 + [272]) = $4
	*($10 + [271]) = $5
	$1 = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$5 = (CASTING uint_32)(uint_64 $1)
	*($10 + [264]) = $5
	CALL prints([1776])
	CALL printui(((int_64)$1 & (int_64)4294967295))
	$7 = ((int_64)(CASTING uint_64)(uint_32 ((uint_32)$5 / (uint_32)[60])) * (int_64)60000)
	*($10 + [256]) = $7
	CALL prints([1792])
	CALL printui($7)
	$1 = ((int_64)(CASTING uint_64)(uint_32 ((int_32)((uint_32)$5 / (uint_32)[3600]) * (int_32)[60])) * (int_64)60000)
	*($10 + [248]) = $1
	CALL prints([1824])
	CALL printui($1)
	$1 = ((int_64)(CASTING uint_64)(uint_32 ((int_32)((uint_32)$5 / (uint_32)[86400]) * (int_32)[3600])) * (int_64)24000)
	*($10 + [240]) = $1
	CALL prints([1840])
	CALL printui($1)
	$3 = ((float_64)$3 / (float_64)$2)
	*($10 + [232]) = $3
	CALL prints([1856])
	CALL printdf($3)
	*(($10 + [224])) = [0]
	*($10 + [208]) = (int_64)-1
	*($10 + [216]) = (int_64)0
	$1 = *($0)
	*($10 + [192]) = $1
	*($10 + [200]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)-7772393099124277248, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $34(($10 + [192]), $5)
	CALL eosio_assert(((int_32)*($5 + [56]) == (int_32)($10 + [192])), [144])
	$1 = *($0)
	*($10 + [148]) = ($10 + [232])
	*($10 + [144]) = ($10 + [288])
	*($10 + [152]) = ($10 + [280])
	CALL eosio_assert([1], [1616])
	CALL $35(($10 + [192]), $5, $1, ($10 + [144]))
	goto $label$1 
	
.LABEL $label$2
	CALL prints([1872])
	$1 = *($0)
	*($10 + [148]) = ($10 + [232])
	*($10 + [144]) = ($10 + [288])
	*($10 + [152]) = ($10 + [280])
	*($10 + [156]) = ($10 + [256])
	CALL $36(($10 + [96]), ($10 + [192]), $1, ($10 + [144]))
	
.LABEL $label$1
	$5 = [0]
	$9 = [0]
	$8 = ($10 + [200])
	$6 = CALL db_upperbound_i64(*($10 + [192]), *($8), (int_64)-7772393099124277248, ((int_64)*($10 + [256]) + (int_64)-3600000))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$9 = CALL $34(($10 + [192]), $6)
	
.LABEL $label$3
	*($10 + [188]) = $9
	*($10 + [184]) = ($10 + [192])
	$9 = CALL db_lowerbound_i64(*($10 + [192]), *($8), (int_64)-7772393099124277248, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $34(($10 + [192]), $9)
	
.LABEL $label$4
	if ( ((int_32)*($10 + [188]) == (int_32)$5) ){ goto $label$5 }
	CALL $37(($10 + [184]))
	
.LABEL $label$5
	$5 = [0]
	$9 = CALL db_lowerbound_i64(*($10 + [192]), *(($10 + [200])), (int_64)-7772393099124277248, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$6 }
	$5 = CALL $34(($10 + [192]), $9)
	
.LABEL $label$6
	if ( ((int_32)$5 == (int_32)*($10 + [188])) ){ goto $label$7 }
	
.LOOP $label$8:
	$9 = [0]
	$8 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($8, [1888])
	CALL eosio_assert($8, [1936])
	$8 = CALL db_next_i64(*($5 + [60]), ($10 + [144]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$9 }
	$9 = CALL $34(($10 + [192]), $8)
	
.LABEL $label$9
	CALL $40(($10 + [192]), $5)
	$5 = $9
	if ( ((int_32)$9 != (int_32)*($10 + [188])) ){ goto $label$8 }
	
.LABEL $label$7
	*(($10 + [176])) = [0]
	$1 = *($0)
	*($10 + [144]) = $1
	*($10 + [160]) = (int_64)-1
	*($10 + [168]) = (int_64)0
	*($10 + [152]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)7792047213068156928, *($10 + [248]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$11 }
	$5 = CALL $38(($10 + [144]), $5)
	CALL eosio_assert(((int_32)*($5 + [56]) == (int_32)($10 + [144])), [144])
	$1 = *($0)
	*($10 + [100]) = ($10 + [232])
	*($10 + [96]) = ($10 + [288])
	*($10 + [104]) = ($10 + [280])
	CALL eosio_assert([1], [1616])
	CALL $39(($10 + [144]), $5, $1, ($10 + [96]))
	goto $label$10 
	
.LABEL $label$11
	CALL prints([1968])
	CALL printui(*($10 + [248]))
	$1 = *($0)
	*($10 + [100]) = ($10 + [232])
	*($10 + [96]) = ($10 + [288])
	*($10 + [104]) = ($10 + [280])
	*($10 + [108]) = ($10 + [248])
	CALL $41(($10 + [48]), ($10 + [144]), $1, ($10 + [96]))
	
.LABEL $label$10
	$5 = [0]
	$9 = [0]
	$8 = ($10 + [152])
	$6 = CALL db_upperbound_i64(*($10 + [144]), *($8), (int_64)7792047213068156928, ((int_64)*($10 + [248]) + (int_64)-216000000))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	$9 = CALL $38(($10 + [144]), $6)
	
.LABEL $label$12
	*($10 + [140]) = $9
	*($10 + [136]) = ($10 + [144])
	$9 = CALL db_lowerbound_i64(*($10 + [144]), *($8), (int_64)7792047213068156928, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$13 }
	$5 = CALL $38(($10 + [144]), $9)
	
.LABEL $label$13
	if ( ((int_32)*($10 + [140]) == (int_32)$5) ){ goto $label$14 }
	CALL $42(($10 + [136]))
	
.LABEL $label$14
	$5 = [0]
	$9 = CALL db_lowerbound_i64(*($10 + [144]), *(($10 + [152])), (int_64)7792047213068156928, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	$5 = CALL $38(($10 + [144]), $9)
	
.LABEL $label$15
	if ( ((int_32)$5 == (int_32)*($10 + [140])) ){ goto $label$16 }
	
.LOOP $label$17:
	$9 = [0]
	$8 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($8, [1888])
	CALL eosio_assert($8, [1936])
	$8 = CALL db_next_i64(*($5 + [60]), ($10 + [96]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$18 }
	$9 = CALL $38(($10 + [144]), $8)
	
.LABEL $label$18
	CALL $46(($10 + [144]), $5)
	$5 = $9
	if ( ((int_32)$9 != (int_32)*($10 + [140])) ){ goto $label$17 }
	
.LABEL $label$16
	*(($10 + [128])) = [0]
	$1 = *($0)
	*($10 + [96]) = $1
	*($10 + [112]) = (int_64)-1
	*($10 + [120]) = (int_64)0
	*($10 + [104]) = $1
	$5 = CALL db_find_i64($1, $1, (int_64)5486204203854462976, *($10 + [240]))
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$20 }
	$5 = CALL $44(($10 + [96]), $5)
	CALL eosio_assert(((int_32)*($5 + [56]) == (int_32)($10 + [96])), [144])
	$1 = *($0)
	*($10 + [52]) = ($10 + [232])
	*($10 + [48]) = ($10 + [288])
	*($10 + [56]) = ($10 + [280])
	CALL eosio_assert([1], [1616])
	CALL $45(($10 + [96]), $5, $1, ($10 + [48]))
	goto $label$19 
	
.LABEL $label$20
	$1 = *($0)
	*($10 + [52]) = ($10 + [232])
	*($10 + [48]) = ($10 + [288])
	*($10 + [56]) = ($10 + [280])
	*($10 + [60]) = ($10 + [240])
	CALL $43(($10 + [16]), ($10 + [96]), $1, ($10 + [48]))
	
.LABEL $label$19
	$5 = [0]
	$9 = [0]
	$8 = ($10 + [104])
	$6 = CALL db_upperbound_i64(*($10 + [96]), *($8), (int_64)5486204203854462976, ((int_64)*($10 + [240]) + (int_64)-889032704))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$21 }
	$9 = CALL $44(($10 + [96]), $6)
	
.LABEL $label$21
	*($10 + [92]) = $9
	*($10 + [88]) = ($10 + [96])
	$9 = CALL db_lowerbound_i64(*($10 + [96]), *($8), (int_64)5486204203854462976, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$22 }
	$5 = CALL $44(($10 + [96]), $9)
	
.LABEL $label$22
	if ( ((int_32)*($10 + [92]) == (int_32)$5) ){ goto $label$23 }
	CALL $47(($10 + [88]))
	
.LABEL $label$23
	$5 = [0]
	$9 = CALL db_lowerbound_i64(*($10 + [96]), *(($10 + [104])), (int_64)5486204203854462976, (int_64)0)
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$24 }
	$5 = CALL $44(($10 + [96]), $9)
	
.LABEL $label$24
	if ( ((int_32)$5 == (int_32)*($10 + [92])) ){ goto $label$25 }
	
.LOOP $label$26:
	$9 = [0]
	$8 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($8, [1888])
	CALL eosio_assert($8, [1936])
	$8 = CALL db_next_i64(*($5 + [60]), ($10 + [48]))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$27 }
	$9 = CALL $44(($10 + [96]), $8)
	
.LABEL $label$27
	CALL $49(($10 + [96]), $5)
	$5 = $9
	if ( ((int_32)$9 != (int_32)*($10 + [92])) ){ goto $label$26 }
	
.LABEL $label$25
	*(($10 + [80])) = [0]
	*($10 + [64]) = (int_64)-1
	*($10 + [72]) = (int_64)0
	$1 = *($0)
	*($10 + [48]) = $1
	*($10 + [56]) = $1
	*($10 + [20]) = ($10 + [288])
	*($10 + [16]) = ($10 + [296])
	*($10 + [24]) = ($10 + [232])
	*($10 + [28]) = ($10 + [271])
	*($10 + [32]) = ($10 + [272])
	*($10 + [36]) = ($10 + [280])
	*($10 + [40]) = ($10 + [264])
	CALL $48(($10 + [8]), ($10 + [48]), $1, ($10 + [16]))
	$8 = *($10 + [72])
	if ( ($8 == 0) ){ goto $label$28 }
	$0 = ($10 + [76])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$30 }
	
.LOOP $label$31:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$32 }
	CALL $192($9)
	
.LABEL $label$32
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$31 }
	$5 = *(($10 + [72]))
	goto $label$29 
	
.LABEL $label$30
	$5 = $8
	
.LABEL $label$29
	*($0) = $8
	CALL $192($5)
	
.LABEL $label$28
	$8 = *($10 + [120])
	if ( ($8 == 0) ){ goto $label$33 }
	$0 = ($10 + [124])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$35 }
	
.LOOP $label$36:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$37 }
	CALL $192($9)
	
.LABEL $label$37
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$36 }
	$5 = *(($10 + [120]))
	goto $label$34 
	
.LABEL $label$35
	$5 = $8
	
.LABEL $label$34
	*($0) = $8
	CALL $192($5)
	
.LABEL $label$33
	$8 = *($10 + [168])
	if ( ($8 == 0) ){ goto $label$38 }
	$0 = ($10 + [172])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$40 }
	
.LOOP $label$41:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$42 }
	CALL $192($9)
	
.LABEL $label$42
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$41 }
	$5 = *(($10 + [168]))
	goto $label$39 
	
.LABEL $label$40
	$5 = $8
	
.LABEL $label$39
	*($0) = $8
	CALL $192($5)
	
.LABEL $label$38
	$8 = *($10 + [216])
	if ( ($8 == 0) ){ goto $label$43 }
	$0 = ($10 + [220])
	$5 = *($0)
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$45 }
	
.LOOP $label$46:
	$5 = ($5 + [-24])
	$9 = *($5)
	*($5) = [0]
	if ( ($9 == 0) ){ goto $label$47 }
	CALL $192($9)
	
.LABEL $label$47
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$46 }
	$5 = *(($10 + [216]))
	goto $label$44 
	
.LABEL $label$45
	$5 = $8
	
.LABEL $label$44
	*($0) = $8
	CALL $192($5)
	
.LABEL $label$43
	*([0] + [4]) = ($10 + [304])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	float_64 $7
	float_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [160])
	*([0] + [4]) = $10
	CALL eosio_assert(((int_64)$3 > (int_64)0), [2272])
	$4 = [0]
	*(($10 + [152])) = [0]
	*($10 + [136]) = (int_64)-1
	*($10 + [144]) = (int_64)0
	$5 = *($1)
	*($10 + [120]) = $5
	*($10 + [128]) = $2
	$1 = CALL db_find_i64($5, $2, (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert(((int_32)*(CALL $7(($10 + [120]), $1) + [112]) == (int_32)($10 + [120])), [144])
	$4 = [1]
	
.LABEL $label$1
	CALL eosio_assert($4, [416])
	$4 = *(($10 + [148]))
	if ( ((int_32)$4 == (int_32)*(($10 + [144]))) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)($10 + [120])), [144])
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	$1 = CALL db_find_i64(*($10 + [120]), *(($10 + [128])), (int_64)7035937633859534848, (int_64)7035937633859534848)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $7(($10 + [120]), $1)
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)($10 + [120])), [144])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [256])
	$1 = CALL memcpy($10, $4, [112])
	CALL eosio_assert(((uint_32)(CASTING uint_32)(uint_64 ((uint_64)CALL $fimport$5() / (uint_64)(int_64)1000000)) > (uint_32)*($1 + [92])), [2320])
	CALL $65($1)
	$2 = *($1 + [64])
	$5 = ((int_64)$2 + (int_64)$3)
	*($1 + [64]) = $5
	$6 = *($10)
	*(($10 = ($1 + [72]))) = ((int_64)((int_64)$6 + (int_64)$3 >> (int_64)63)) + (int_64)( (int_64)1 ? (CASTING uint_64)(uint_32 (uint_64)($5 <= $2)) : (uint_64)($5 <= $3) ))
	$7 = CALL __floattidf($2, $6)
	$8 = (CASTING float_64)(int_64 $3)
	$3 = (Rounds 0)(((float_64)((float_64)$8 * (float_64)(CASTING float_64)(int_64 $2)) / (float_64)((float_64)$8 + (float_64)$7)))
	$2 = *($1 + [80])
	*($1 + [80]) = (int_64))($2 - $3)
	$4 = ($1 + [24])
	$2 = *($4)
	CALL eosio_assert(( ((int_64)*($1 + [16]) != (int_64)0) ? ((int_64)$2 > (int_64)0) : (int_64)($2 == 0) ), [2368])
	CALL eosio_assert(((int_64)*($1 + [80]) > (int_64)0), [2432])
	$5 = *($4)
	$2 = *($10)
	CALL eosio_assert(( ((uint_64)*($1 + [64]) >= (uint_64)*($1 + [16])) ? ((int_64)$2 >= (int_64)$5) : ((int_64)$2 == (int_64)$5) ), [2496])
	CALL eosio_assert(((int_64)*($1 + [32]) >= (int_64)*($1 + [80])), [2544])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [2592])
	CALL eosio_assert(((int_64)$3 < (int_64)*($1 + [32])), [2640])
	CALL $66(($1 + [120]), $1, *($1 + [8]))
	*($0) = $3
	$2 = *($1)
	*($0 + [8]) = $2
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [48])
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [112])
	$0 = *($1 + [144])
	if ( ($0 == 0) ){ goto $label$9 }
	$9 = ($1 + [148])
	$10 = *($9)
	if ( ((int_32)$10 == (int_32)$0) ){ goto $label$11 }
	
.LOOP $label$12:
	$10 = ($10 + [-24])
	$4 = *($10)
	*($10) = [0]
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $192($4)
	
.LABEL $label$13
	if ( ((int_32)$0 != (int_32)$10) ){ goto $label$12 }
	$10 = *(($1 + [144]))
	goto $label$10 
	
.LABEL $label$11
	$10 = $0
	
.LABEL $label$10
	*($9) = $0
	CALL $192($10)
	
.LABEL $label$9
	*([0] + [4]) = ($1 + [160])
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $191($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $204($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $192($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $215 ()
{
	(unreachable)
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_32 .FUNC $198 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $195($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

int_32 .FUNC $199 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$7 = ($6 & [1])
	if ( $7 ){ goto $label$3 }
	$5 = uint_32($6 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $7 ){ goto $label$6 }
	$7 = [10]
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0)
	$7 = (($6 & [-2]) + [-1])
	
.LABEL $label$5
	if ( ((uint_32)($7 - $5) >= (uint_32)$2) ){ goto $label$8 }
	CALL $200($0, $7, (($5 + $2) - $7), $5, $1, [0], $2)
	$6 = *($0 + [8])
	goto $label$7 
	
.LABEL $label$8
	if ( ($6 & [1]) ){ goto $label$10 }
	$6 = ($0 + [1])
	$7 = ($5 - $1)
	if ( $7 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$6 = *($0 + [8])
	$7 = ($5 - $1)
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$9
	$4 = ($6 + $1)
	CALL memmove(($4 + $2), $4, $7)
	
.LABEL $label$7
	CALL memset(($6 + $1), ($3 & [255]), $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($2 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $2
	
.LABEL $label$11
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $191(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $192($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	return CALL $198($0, $1, CALL $213($1))
}

int_32 .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $195($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $195 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $191($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $192($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $192 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC $193 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [13304])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [13112]
	$1 = (((int_32)$2 * (int_32)[12]) + [13112])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $191 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [13420])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}