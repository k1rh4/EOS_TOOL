(data (i32.const 8192) "at least 1 digit\00-+   0X0x\00")
(data (i32.const 8219) "negative value is not allowed\00(null)\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8342) "out of range of buffer\00")
(data (i32.const 8365) "err_invalid_pair_id\00-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 8404) "err_pair_not_activated\00inf\00")
(data (i32.const 8431) "err_declared_symbol\00INF\00")
(data (i32.const 8455) "err_declared_contract\00nan\00")
(data (i32.const 8481) "err_runtime_not_found\00NAN\00")
(data (i32.const 8507) "not supported yet\00.\00")
(data (i32.const 8527) "creating symbol from empty string\00")
(data (i32.const 8561) "precision should be <= 18\00")
(data (i32.const 8587) "Asset\'s amount and symbol should be separated with space\00")
(data (i32.const 8644) "Missing decimal fraction after decimal point\00")
(data (i32.const 8689) "invalid memo length\00")
(data (i32.const 8709) "invalid char\00")
(data (i32.const 8722) "invalid memo separator\00")
(data (i32.const 8745) "invalid memo parts\00")
(data (i32.const 8764) "0\00")
(data (i32.const 8766) "1\00")
(data (i32.const 8768) "use 0 or 1 to set match flag\00")
(data (i32.const 8797) "price should be positive, malicious action\00")
(data (i32.const 8840) "price exceeds max amount, malicious action\00")
(data (i32.const 8883) "market price should be zero, malicious action\00")
(data (i32.const 8929) "err_invalid_quantity\00")
(data (i32.const 8950) "not enough for trading fee, close it\n\00")
(data (i32.const 8988) "found no order, should not happen\00")
(data (i32.const 9022) "matching engine starts with % price %\n\00")
(data (i32.const 9061) "invalid exchange pair id\00")
(data (i32.const 9086) "lowest not found, should not happed\00")
(data (i32.const 9122) "across lower border, matching is over\00")
(data (i32.const 9160) "matched bid limited order price: \00")
(data (i32.const 9194) "\n\00")
(data (i32.const 9196) "should be market order\00")
(data (i32.const 9219) "matched bid market order %\n\00")
(data (i32.const 9247) "time is up, exit asap to avoid timeout error\00")
(data (i32.const 9292) "order \00")
(data (i32.const 9299) " is settled completely, close it\n\00")
(data (i32.const 9333) "negative ask balance, should not happen\00")
(data (i32.const 9373) "negative bid balance, should not happen\00")
(data (i32.const 9413) "total remain overflow?\00")
(data (i32.const 9436) "bingo1\00")
(data (i32.const 9443) "bingo2\00")
(data (i32.const 9450) "amount overflow\00")
(data (i32.const 9466) "invalid volume, overflow?\00")
(data (i32.const 9492) "invalid target, overflow?\00")
(data (i32.const 9518) "no remainder, should match\00")
(data (i32.const 9545) "bingo3\00")
(data (i32.const 9552) "bingo4\00")
(data (i32.const 9559) "matched bid limited order price: %\n\00")
(data (i32.const 9595) "highest not found, should not happed\00")
(data (i32.const 9632) "across lower border, matching is over\n\00")
(data (i32.const 9671) "matched ask limited order price % \n\00")
(data (i32.const 9707) "matched ask market order %\n\00")
(data (i32.const 9735) "time is up, exit asap to avoid timeout error\n\00")
(data (i32.const 9781) "bingo5\00")
(data (i32.const 9788) "bingo6\00")
(data (i32.const 9795) "recalculate fees\00")
(data (i32.const 9812) "bingo7\00")
(data (i32.const 9819) "bingo8\00")
(data (i32.const 9826) "matched ask limited order price: %\n\00")
(data (i32.const 9862) "invalid order type, should not happen\00")
(data (i32.const 9900) "empty runtime record, should not happen\00")
(data (i32.const 9940) "should not exceed initial amount\00")
(data (i32.const 9973) "smallchange\00")
(data (i32.const 9985) "cancelled\00")
(data (i32.const 9995) "expired\00")
(data (i32.const 10003) "err_order_not_found\00")
(data (i32.const 10023) "err_order_not_active\00")
(data (i32.const 10044) "err_auth_push\00")
(data (i32.const 10058) "err_match_failed\00")
(data (i32.const 10075) "info has more than 256 bytes\00")
(data (i32.const 10104) "err_pair_not_found\00")
(data (i32.const 10123) "no available pending orders\00")
(data (i32.const 10151) "remain shoule be positive, should not happen\00")
(data (i32.const 10196) "found pending order % with type % price %\n\00")
(data (i32.const 10239) "no biding orders? the world is too quiet, let\'s make some noise\00")
(data (i32.const 10303) "err_auth_cancel\00")
(data (i32.const 10319) "GID: \00")
(data (i32.const 10325) " id: \00")
(data (i32.const 10331) " is cancelled\n\00")
(data (i32.const 10346) "take amount should be positive\00")
(data (i32.const 10377) "get amount should be positive\00")
(data (i32.const 10407) "remain should be positive\00")
(data (i32.const 10433) "smallchange2\00")
(data (i32.const 10446) "fee should be positive\00")
(data (i32.const 10469) "system fee should be positive\00")
(data (i32.const 10499) "transfer\00")
(data (i32.const 10508) "try to transfer 0 token with \00")
(data (i32.const 10538) "should be the contract\00")
(data (i32.const 10561) "should be 0.0001 EOS\00")
(data (i32.const 10582) "invalid vote memo length\00")
(data (i32.const 10607) "invalid vote memo parts\00")
(data (i32.const 10631) "vote\00")
(data (i32.const 10636) "should begin with vote\00")
(data (i32.const 10659) "err_invalid_referee\00")
(data (i32.const 10679) "err_cannot_refer_self\00")
(data (i32.const 10701) "got vote  %, %, %\n\00")
(data (i32.const 10720) "err_voting_is_over\00")
(data (i32.const 10739) "err_wrong_manager\00")
(data (i32.const 10757) "err_duplicate_vote\00")
(data (i32.const 10776) "eosio.token\00")
(data (i32.const 10788) "Possible attack, add sender to blacklist!!!\n\00")
(data (i32.const 10833) "You are blacklisted due to previous malicious attacks, stop that silly behaviour!!!\00")
(data (i32.const 10917) "unexpected notification\00")
(data (i32.const 10941) "cannot transfer from self contract\00")
(data (i32.const 10976) "receipt should be the contract\00")
(data (i32.const 11007) "invalid quantity\00")
(data (i32.const 11024) "must transfer positive quantity\00")
(data (i32.const 11056) "memo has more than 256 bytes\00")
(data (i32.const 11085) "Received transfer from \00")
(data (i32.const 11109) " with \00")
(data (i32.const 11116) "err_no_idle_orders\00")
(data (i32.const 11135) "whitelist\00")
(data (i32.const 11145) "Allow whitelist account \00")
(data (i32.const 11170) "blacklist\00")
(data (i32.const 11180) "err_invalid_increment\00")
(data (i32.const 11202) "err_invalid_account\00")
(data (i32.const 11222) "err_invalid_ram_payer\00")
(data (i32.const 11244) "err_unexpected_order_owner\00")
(data (i32.const 11271) " GID = \00")
(data (i32.const 11279) ", expiration=\00")
(data (i32.const 11293) ", owner=\00")
(data (i32.const 11302) "err_exceed_max_reserved\00")
(data (i32.const 11326) "err_exceed_max_order\00")
(data (i32.const 11347) "err_invalid_order_id\00")
(data (i32.const 11368) "manager is not an valid account\00")
(data (i32.const 11400) "manager should not be the quote contract\00")
(data (i32.const 11441) "manager should not be the base contract\00")
(data (i32.const 11481) "manager should not be self\00")
(data (i32.const 11508) "quote symbol is invalid\00")
(data (i32.const 11532) "base symbol is invalid\00")
(data (i32.const 11555) "quote contract is invalid\00")
(data (i32.const 11581) "base contract is invalid\00")
(data (i32.const 11606) "quote should be different from base token\00")
(data (i32.const 11648) "invalid scale\00")
(data (i32.const 11662) "already has this pair\00")
(data (i32.const 11684) "Created exchange pair \00")
(data (i32.const 11707) "/\00")
(data (i32.const 11709) " with manager \00")
(data (i32.const 11724) "exchange pair does not exist\00")
(data (i32.const 11753) "status should not be the same with current value\00")
(data (i32.const 11802) "invalid status\00")
(data (i32.const 11817) "Set status of % to %\00")
(data (i32.const 11838) "should be valid account\00")
(data (i32.const 11862) "should not be inner account\00")
(data (i32.const 11890) "pair_id is out of range\00")
(data (i32.const 11914) "Set manager of pair % from % to %\00")
(data (i32.const 11948) "updated current quote balance for pair %\n\00")
(data (i32.const 11990) "status should be pending\00")
(data (i32.const 12015) "vote threshold should be positive\00")
(data (i32.const 12049) "stake threshold should be positive\00")
(data (i32.const 12084) "manager should be venus\00")
(data (i32.const 12108) "err_invalid_decrement\00")
(data (i32.const 12130) "err_auth_close\00")
(data (i32.const 12145) "removed % orders\n\00")
(data (i32.const 12163) "err_end_of_table\00")
(data (i32.const 12180) "at most 10 orders for each operation\00")
(data (i32.const 12217) "exch pair should not be active\00")
(data (i32.const 12248) "should not be reserved order\00")
(data (i32.const 12277) "pair id mismatch, should not happen\00")
(data (i32.const 12313) "Erased % records from table\n\00")
(data (i32.const 12342) "end of table\00")
(data (i32.const 12355) "should not be active status\00")
(data (i32.const 12383) "not authorized\00")
(data (i32.const 12398) "cannot remove too many records at one time\00")
(data (i32.const 12441) "cannot reset votes of other pair\00")
(data (i32.const 12474) "same status\00")
(data (i32.const 12486) "err_dex_not_active\00")
(data (i32.const 12505) "not a invalid account\00")
(data (i32.const 12527) "invalid role\00")
(data (i32.const 12540) "account should be different\00")
(data (i32.const 12568) "invalid input\00")
(data (i32.const 12582) "should be different value\00")
(data (i32.const 12608) "invalid key\00")
(data (i32.const 12620) "should be different\00")
(data (i32.const 12640) "should be higher than default_min_transaction_cpu_usage\00")
(data (i32.const 12696) "should be lower than default_max_transaction_cpu_usage\00")
(data (i32.const 12751) "at most 10 notify entries\00")
(data (i32.const 12777) "notify entry not found\00")
(data (i32.const 12800) "read_transaction failed\00")
(data (i32.const 12824) "unexpected contract\00")
(data (i32.const 12844) "unexpected action\00")
(data (i32.const 12862) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 12911) "invalid symbol name\00")
(data (i32.const 12931) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 12990) "multiplication overflow\00")
(data (i32.const 13014) "multiplication underflow\00")
(data (i32.const 13039) "divide by zero\00")
(data (i32.const 13054) "signed division overflow\00")
(data (i32.const 13079) "should be positive amount\00")
(data (i32.const 13105) "attempt to add asset with different symbol\00")
(data (i32.const 13148) "addition underflow\00")
(data (i32.const 13167) "addition overflow\00")
(data (i32.const 13185) "attempt to subtract asset with different symbol\00")
(data (i32.const 13233) "subtraction underflow\00")
(data (i32.const 13255) "subtraction overflow\00")
(data (i32.const 13276) "write\00")
(data (i32.const 13282) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 13333) "error reading iterator\00")
(data (i32.const 13356) "read\00")
(data (i32.const 13361) "singleton does not exist\00")
(data (i32.const 13386) "cannot pass end iterator to modify\00")
(data (i32.const 13421) "object passed to modify is not in multi_index\00")
(data (i32.const 13467) "cannot modify objects in table of another contract\00")
(data (i32.const 13518) "updater cannot change primary key when modifying an object\00")
(data (i32.const 13577) "abnormal contract for pair %, suspend it anyway\n\00")
(data (i32.const 13626) "cannot create objects in table of another contract\00")
(data (i32.const 13677) "overflow_exception\00")
(data (i32.const 13696) "underflow_exception\00")
(data (i32.const 13716) "get\00")
(data (i32.const 13720) "cannot increment end iterator\00")
(data (i32.const 13750) ".\00")
(data (i32.const 13752) " \00")
(data (i32.const 13754) ",\00")
(data (i32.const 13756) "err_current_quote\00")
(data (i32.const 13774) "err_exceed_max_votes\00")
(data (i32.const 13795) "next primary key in table is at autoincrement limit\00")
(data (i32.const 13847) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 13901) "cannot decrement iterator at beginning of table\00")
(data (i32.const 13949) "info_congratulations, exch pair % is actived by %\n\00")
(data (i32.const 14000) " | \00")
(data (i32.const 14004) "err_invalid_memo\00")
(data (i32.const 14021) "err_target_account_not_found\00")
(data (i32.const 14050) "err_trade_too_small_for_new_account\00")
(data (i32.const 14086) "err_unreasonable_price\00")
(data (i32.const 14109) "err_trade_too_small\00")
(data (i32.const 14129) "err_invalid_amount\00")
(data (i32.const 14148) "err_amount_too_small\00")
(data (i32.const 14169) "err_runtime_not_found, should not happen\00")
(data (i32.const 14210) "err_invalid_order_type\00")
(data (i32.const 14233) "should be postive quantity\00")
(data (i32.const 14260) "exceed max_exch_pair_id\00")
(data (i32.const 14284) "invalid stake threshold\00")
(data (i32.const 14308) "@\00")
(data (i32.const 14310) "update quote balance % ==> %\n\00")
(data (i32.const 14340) "cannot pass end iterator to erase\00")
(data (i32.const 14374) "object passed to erase is not in multi_index\00")
(data (i32.const 14419) "cannot erase objects in table of another contract\00")
(data (i32.const 14469) "attempt to remove object that was not in multi_index\00")
(data (i32.const 14522) " Erased % records from table %\n\00")
(data (i32.const 24016) "\05\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\18\00\00\00\f88\00\00\00\04\00\00\00\00\00\00\00\00\00\00\01\00\00\00\00\00\00\00\00\00\00\00\00\00\00\n\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 24160) "\d0]\00\00")
(data (i32.const 24176) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 24272) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 26080) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 26544) "0123456789ABCDEF")
(import "env" "db_find_i64" (func $fimport$0 (param i64 i64 i64 i64) (result i32)))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "current_receiver" (func $fimport$2 (result i64)))
(import "env" "prints" (func $fimport$3 (param i32)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "prints_l" (func $fimport$5 (param i32 i32)))
(import "env" "printn" (func $fimport$6 (param i64)))
(import "env" "memcpy" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "__multi3" (func $fimport$8 (param i32 i64 i64 i64 i64)))
(import "env" "db_update_i64" (func $fimport$9 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$10 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_update" (func $fimport$11 (param i32 i64 i32)))
(import "env" "db_idx128_find_primary" (func $fimport$12 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx128_update" (func $fimport$13 (param i32 i64 i32)))
(import "env" "printui" (func $fimport$14 (param i64)))
(import "env" "send_inline" (func $fimport$15 (param i32 i32)))
(import "env" "require_auth" (func $fimport$16 (param i64)))
(import "env" "is_account" (func $fimport$17 (param i64) (result i32)))
(import "env" "require_recipient" (func $fimport$18 (param i64)))
(import "env" "db_store_i64" (func $fimport$19 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_store" (func $fimport$20 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx128_store" (func $fimport$21 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$22 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$23 (param i32 i32) (result i32)))
(import "env" "db_idx128_lowerbound" (func $fimport$24 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx128_next" (func $fimport$25 (param i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$26 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$27 (param i32 i32) (result i32)))
(import "env" "eosio_exit" (func $fimport$28 (param i32)))
(import "env" "transaction_size" (func $fimport$29 (result i32)))
(import "env" "read_transaction" (func $fimport$30 (param i32 i32) (result i32)))
(import "env" "sha256" (func $fimport$31 (param i32 i32 i32)))
(import "env" "printhex" (func $fimport$32 (param i32 i32)))
(import "env" "action_data_size" (func $fimport$33 (result i32)))
(import "env" "read_action_data" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$35 (param i32 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$36))
(import "env" "db_idx128_upperbound" (func $fimport$37 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$38 (param i64)))
(import "env" "db_previous_i64" (func $fimport$39 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$40 (param i64 i64 i64) (result i32)))
(import "env" "db_idx64_upperbound" (func $fimport$41 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$42 (param i32)))
(import "env" "db_idx64_remove" (func $fimport$43 (param i32)))
(import "env" "db_idx128_remove" (func $fimport$44 (param i32)))
(import "env" "memset" (func $fimport$45 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$46 (param i32 i32 i32) (result i32)))
(import "env" "__unordtf2" (func $fimport$47 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$48 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$49 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$50 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$51 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$52 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$53 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$54 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$55 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$56 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$57 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$58 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$59 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$60 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$61 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$62 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$63 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$64 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$65 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $133))
(export "_ZdlPv" (func $166))
(export "_Znwj" (func $164))
(export "_Znaj" (func $165))
(export "_ZdaPv" (func $167))
(table $0 25 25 anyfunc)
(elem (i32.const 1) $82 $98 $112 $104 $40 $75 $83 $105 $111 $78 $37 $77 $102 $74 $103 $108 $73 $39 $106 $63 $53 $184 $186 $187)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 26560))
(global $global$2 i32 (i32.const 26560))


int_32 .FUNC $174 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $205($1)
	$3 = [10]
	$4 = *($0)
	$5 = ($4 & [1])
	if ( ($5 == 0) ){ goto $label$1 }
	$3 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$1
	if ( ((uint_32)$2 <= (uint_32)$3) ){ goto $label$6 }
	if ( $5 ){ goto $label$5 }
	$5 = uint_32($4 >> [1])
	CALL $172($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$6
	if ( $5 ){ goto $label$4 }
	$3 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = *($0 + [4])
	CALL $172($0, $3, ($2 - $3), $5, [0], $5, $2, $1)
	return $0
	
.LABEL $label$4
	$3 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($3, $1, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	return $0
}

int_64 .FUNC $6 (int_64 $0, int_64 $1, int_32 $2, int_64 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$6 = ($global$0 - [144])
	$global$0 = $6
	*($6 + [136]) = $0
	*($6 + [127]) = $2
	*($6 + [128]) = $1
	*(($6 + [112])) = (int_64)0
	*($6 + [88]) = $0
	*($6 + [80]) = $0
	*($6 + [96]) = (int_64)-1
	*($6 + [104]) = (int_64)0
	$2 = CALL db_find_i64($0, $0, (int_64)6291769033721118720, $1)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$2 }
	$2 = CALL $7(($6 + [80]), $2)
	CALL eosio_assert(((int_32)*($2 + [176]) == (int_32)($6 + [80])), [13282])
	*($6 + [76]) = $2
	$7 = [1]
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	*($6 + [76]) = [0]
	$7 = [0]
	
.LABEL $label$1
	*($6 + [72]) = ($6 + [80])
	CALL eosio_assert($7, [8365])
	CALL eosio_assert(((int_32)*($2 + [80]) == (int_32)[1]), [8404])
	$7 = [0]
	$0 = *($2 + [32])
	if ( ((uint_64)((int_64)$0 ^ (int_64)$4) > (uint_64)(int_64)255) ){ goto $label$3 }
	$4 = ((int_64)$4 & (int_64)255)
	$0 = ((int_64)$0 & (int_64)255)
	$1 = (int_64)1
	$8 = *($2 + [64])
	if ( (uint_64)($8 <= (int_64)2) ){ goto $label$4 }
	if ( ((uint_64)$0 >= (uint_64)$4) ){ goto $label$4 }
	$1 = (int_64)1
	
.LOOP $label$5:
	$0 = ((int_64)$0 + (int_64)1)
	$1 = ((int_64)$1 * (int_64)10)
	if ( ((uint_64)$1 >= (uint_64)$8) ){ goto $label$4 }
	if ( (uint_64)($0 <= $4) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = (((int_64)$0 == (int_64)$4) & ((int_64)$1 == (int_64)$8))
	
.LABEL $label$3
	CALL eosio_assert($7, [8431])
	if ( (*($6 + [127]) == 0) ){ goto $label$7 }
	CALL eosio_assert(((int_64)*(($2 + [24])) == (int_64)$3), [8455])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert(((int_64)*(($2 + [40])) == (int_64)$3), [8455])
	
.LABEL $label$6
	*((($6 + [24]) + [32])) = (int_64)0
	*(($6 + [64])) = [0]
	*($6 + [40]) = (int_64)-1
	*($6 + [48]) = (int_64)0
	$0 = *($6 + [136])
	*($6 + [24]) = $0
	*($6 + [32]) = $0
	$2 = [0]
	$7 = CALL db_find_i64($0, $0, (int_64)6291770479543096704, *($6 + [128]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$8 }
	$2 = CALL $8(($6 + [24]), $7)
	CALL eosio_assert(((int_32)*($2 + [184]) == (int_32)($6 + [24])), [13282])
	
.LABEL $label$8
	$7 = ((int_32)$2 != (int_32)[0])
	CALL eosio_assert($7, [8481])
	*($6 + [12]) = $5
	*($6 + [4]) = ($6 + [136])
	*($6) = ($6 + [127])
	*($6 + [8]) = ($6 + [72])
	*($6 + [16]) = ($6 + [80])
	*($6 + [20]) = ($6 + [128])
	CALL eosio_assert($7, [13386])
	CALL $9(($6 + [24]), $2, $6)
	$2 = *($6 + [76])
	$0 = *(( ($2 + [32]) ? ($2 + [16]) : *($6 + [127]) ))
	$5 = *($6 + [48])
	if ( ($5 == 0) ){ goto $label$9 }
	$9 = ($6 + [52])
	$2 = *($9)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$13 }
	CALL _ZdlPv($7)
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$12 }
	$2 = *(($6 + [48]))
	goto $label$10 
	
.LABEL $label$11
	$2 = $5
	
.LABEL $label$10
	*($9) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$9
	$5 = *($6 + [104])
	if ( ($5 == 0) ){ goto $label$14 }
	$9 = ($6 + [108])
	$2 = *($9)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$2 = ($2 + [-24])
	$7 = *($2)
	*($2) = [0]
	if ( ($7 == 0) ){ goto $label$18 }
	CALL _ZdlPv($7)
	
.LABEL $label$18
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$17 }
	$2 = *(($6 + [104]))
	goto $label$15 
	
.LABEL $label$16
	$2 = $5
	
.LABEL $label$15
	*($9) = $5
	CALL _ZdlPv($2)
	
.LABEL $label$14
	$global$0 = ($6 + [144])
	return $0
}

int_32 .FUNC $176 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	if ( ($3 & [1]) ){ goto $label$3 }
	$4 = ($0 + [1])
	$5 = [-1]
	$0 = uint_32($3 >> [1])
	if ( ((uint_32)$0 <= (uint_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [8])
	$5 = [-1]
	$0 = *($0 + [4])
	if ( ((uint_32)$0 > (uint_32)$2) ){ goto $label$1 }
	
.LABEL $label$2
	return $5
	
.LABEL $label$1
	$0 = ($0 - $2)
	if ( ($0 == 0) ){ goto $label$4 }
	$0 = CALL $203(($4 + $2), ($1 & [255]), $0)
	return ( ($0 - $4) ? [-1] : $0 )
	
.LABEL $label$4
	return ( ([0] - $4) ? [-1] : [0] )
}

int_32 .FUNC $177 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $204(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $170 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$6 = ($5 & [1])
	$5 = *($1)
	$5 = ( *($1 + [4]) ? uint_32($5 >> [1]) : $6 )
	if ( ($5 <= $2) ){ goto $label$1 }
	$5 = ($5 - $2)
	$3 = ( $5 ? $3 : ($5 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$3 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$2 }
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$3
	$8 = (($3 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$2
	CALL memcpy($5, (( $7 ? ($1 + [1]) : $6 ) + $2), $3)
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $172($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $172 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $7 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [13333])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $207($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $210($4)
	
.LABEL $label$6
	*(($5 = CALL _Znwj([208])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [176]) = $0
	CALL $142(($3 + [32]), $5)
	*($5 + [180]) = $1
	*($5 + [184 align=4]) = (int_64)-1
	*($5 + [192 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $68(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $178 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $4 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $3) / (int_32)[12])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $3) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL _Znwj(((int_32)$6 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	*(($3 = ($7 + ((int_32)$4 * (int_32)[12])))) = (int_64)0
	*(($3 + [8])) = [0]
	$1 = *($1)
	$2 = *($2)
	$8 = ($2 - $1)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$8 }
	*($3) = ($8 << [1])
	$5 = ($3 + [1])
	$4 = ((int_32)$6 * (int_32)[12])
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$9 = (($8 + [16]) & [-16])
	$5 = CALL _Znwj($9)
	*($3) = ($9 | [1])
	*(($4 = ($7 + ((int_32)$4 * (int_32)[12]))) + [8]) = $5
	*($4 + [4]) = $8
	$4 = ((int_32)$6 * (int_32)[12])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$7
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($1)
	$6 = ($6 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	$5 = ($5 + $8)
	
.LABEL $label$6
	$8 = ($7 + $4)
	*($5) = [0]
	$5 = ($3 + [12])
	$6 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($1 + [-4])
	*(($3 + [-4])) = *($2)
	$1 = ($1 + [-12])
	*(($3 = ($3 + [-12]))) = *($1)
	*($1) = (int_64)0
	*($2) = [0]
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$12 }
	$6 = *(($0 + [4]))
	$2 = *($0)
	goto $label$10 
	
.LABEL $label$11
	$2 = $6
	
.LABEL $label$10
	*($0) = $3
	*(($0 + [4])) = $5
	*(($0 + [8])) = $8
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($6 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*(($6 + [-4])))
	
.LABEL $label$15
	$6 = $1
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ($2 == 0) ){ goto $label$16 }
	CALL _ZdlPv($2)
	
.LABEL $label$16
	return (unreachable)
	
.LABEL $label$5
	CALL $168($3)
	(unreachable)
}

int_32 .FUNC $5 (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [8192])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [8219])
	if ( ((int_64)$1 > (int_64)9) ){ goto $label$1 }
	*($0) = ((CASTING uint_32)(uint_64 $1) + [48])
	return [1]
	
.LABEL $label$1
	$3 = ((uint_64)$1 / (uint_64)(int_64)10)
	$4 = CALL $5($0, $3, $2)
	CALL eosio_assert(((int_32)$4 < (int_32)$2), [8342])
	*(($0 + $4)) = ((CASTING uint_32)(uint_64 (int_64))($1 - ((int_64)$3 * (int_64)10))) | [48])
	return ($4 + [1])
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($0 + [32]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy(($0 + [40]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $3 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($1)
	if ( ($4 & [1]) ){ goto $label$5 }
	$5 = ($1 + [1])
	*($3 + [24]) = $5
	$4 = uint_32($4 >> [1])
	$1 = ($5 + $4)
	*($3 + [16]) = $1
	*($3 + [8]) = $5
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($1 + [8])
	*($3 + [24]) = $5
	$4 = *($1 + [4])
	$1 = ($5 + $4)
	*($3 + [16]) = $1
	*($3 + [8]) = $5
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($2 & [255])
	$7 = ($0 + [8])
	$8 = ($0 + [4])
	$2 = $5
	
.LOOP $label$6:
	if ( ((int_32)*($2) != (int_32)$6) ){ goto $label$12 }
	$1 = *($8)
	if ( ((uint_32)$1 >= (uint_32)*($7)) ){ goto $label$11 }
	*($1) = (int_64)0
	*(($1 + [8])) = [0]
	$9 = ($2 - $5)
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$9 > (uint_32)[10]) ){ goto $label$10 }
	*($1) = ($9 << [1])
	$4 = ($1 + [1])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$12
	$2 = ($2 + [1])
	*($3 + [8]) = $2
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$11
	CALL $4($0, ($3 + [24]), ($3 + [8]))
	goto $label$7 
	
.LABEL $label$10
	$10 = (($9 + [16]) & [-16])
	$4 = CALL _Znwj($10)
	*($1) = ($10 | [1])
	*($1 + [8]) = $4
	*($1 + [4]) = $9
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$9
	$1 = $4
	
.LOOP $label$13:
	*($1) = *($5)
	$1 = ($1 + [1])
	$5 = ($5 + [1])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$13 }
	$4 = ($4 + $9)
	
.LABEL $label$8
	*($4) = [0]
	*($8) = (*($8) + [12])
	
.LABEL $label$7
	$2 = (*($3 + [8]) + [1])
	*($3 + [24]) = $2
	$1 = *($3 + [16])
	$5 = $2
	*($3 + [8]) = $2
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$6 }
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$16 }
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)*($0 + [8])) ){ goto $label$17 }
	*($2) = (int_64)0
	*(($2 + [8])) = [0]
	$4 = ($1 - $5)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$15 }
	*($2) = ($4 << [1])
	$6 = ($2 + [1])
	goto $label$14 
	
.LABEL $label$17
	CALL $4($0, ($3 + [24]), ($3 + [16]))
	
.LABEL $label$16
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$15
	$8 = (($4 + [16]) & [-16])
	$6 = CALL _Znwj($8)
	*($2) = ($8 | [1])
	*($2 + [8]) = $6
	*($2 + [4]) = $4
	
.LABEL $label$14
	$2 = $6
	
.LOOP $label$18:
	*($2) = *($5)
	$2 = ($2 + [1])
	$5 = ($5 + [1])
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$18 }
	*(($6 + $4)) = [0]
	*(($5 = ($0 + [4]))) = (*($5) + [12])
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $168($1)
	
.LABEL $label$1
	CALL $168($2)
}

void .FUNC $189 (int_32 $0)
{
}

int_32 .FUNC $188 (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $49 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *(($0 + [264]))
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [11135]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$4 > (uint_64)(int_64)8) ){ goto $label$6 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$8 = ($8 + [-91])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$9 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$1 }
	$10 = [0]
	*(($2 + [72])) = [0]
	*($2 + [56]) = (int_64)-1
	$4 = (int_64)0
	*($2 + [64]) = (int_64)0
	*($2 + [48]) = $7
	*($2 + [40]) = $3
	$6 = CALL db_find_i64($3, $7, (int_64)-4227605603813100672, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	CALL eosio_assert(((int_32)*(CALL $52(($2 + [40]), $6) + [16]) == (int_32)($2 + [40])), [13282])
	CALL prints([11145])
	CALL printn($1)
	goto $label$11 
	
.LABEL $label$12
	$3 = *(($0 + [264]))
	$5 = (int_64)59
	$6 = [11170]
	$7 = (int_64)0
	
.LOOP $label$13:
	if ( ((uint_64)$4 > (uint_64)(int_64)8) ){ goto $label$18 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$8 = ($8 + [-91])
	goto $label$16 
	
.LABEL $label$18
	$9 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$14
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$9 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$13 }
	$10 = [0]
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	*($2 + [8]) = $7
	*($2) = $3
	$6 = CALL db_find_i64($3, $7, (int_64)-4227605603813100672, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	CALL eosio_assert(((int_32)*(CALL $52($2, $6) + [16]) == (int_32)$2), [13282])
	CALL prints([11145])
	CALL printn($1)
	$10 = [1]
	$0 = *($2 + [24])
	if ( ($0 == 0) ){ goto $label$11 }
	$11 = ($2 + [28])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$21 }
	CALL _ZdlPv($8)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$20 }
	$6 = *(($2 + [24]))
	*($11) = $0
	CALL _ZdlPv($6)
	$0 = *($2 + [64])
	if ( $0 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$19
	*($11) = $0
	CALL _ZdlPv($0)
	$0 = *($2 + [64])
	if ( $0 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$0 = *($2 + [64])
	if ( ($0 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	$11 = ($2 + [68])
	$6 = *($11)
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$8 }
	
.LOOP $label$22:
	$6 = ($6 + [-24])
	$8 = *($6)
	*($6) = [0]
	if ( ($8 == 0) ){ goto $label$23 }
	CALL _ZdlPv($8)
	
.LABEL $label$23
	if ( ((int_32)$0 != (int_32)$6) ){ goto $label$22 }
	$6 = *(($2 + [64]))
	goto $label$7 
	
.LABEL $label$9
	$global$0 = ($2 + [80])
	return $10
	
.LABEL $label$8
	$6 = $0
	
.LABEL $label$7
	*($11) = $0
	CALL _ZdlPv($6)
	$global$0 = ($2 + [80])
	return $10
}

void .FUNC $48 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [64])
	$global$0 = $3
	*($3 + [48]) = $2
	CALL require_auth(*($1))
	if ( ((int_64)*($0) == (int_64)$2) ){ goto $label$3 }
	if ( ((int_64)*(($1 + [24])) != (int_64)1397703940) ){ goto $label$4 }
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [10776]
	$7 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$10 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$8 = ($8 + [-91])
	goto $label$8 
	
.LABEL $label$10
	$9 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$6 = ($6 + [1])
	$5 = ((int_64)$5 + (int_64)4294967291)
	$7 = ((int_64)$9 | (int_64)$7)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$5 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$3 }
	
.LABEL $label$4
	if ( (CALL $49($0, *($1)) == 0) ){ goto $label$2 }
	CALL eosio_assert([0], [10833])
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$3
	CALL prints([10788])
	CALL require_recipient(*(($0 + [264])))
	goto $label$1 
	
.LABEL $label$2
	$4 = *($1)
	$5 = *($0)
	$9 = *($1 + [8])
	if ( ((int_64)$9 != (int_64)$5) ){ goto $label$13 }
	CALL eosio_assert(((int_64)$4 != (int_64)$9), [10941])
	CALL eosio_assert(((int_64)*(($1 + [8])) == (int_64)*($0)), [10976])
	$10 = ($1 + [16])
	$8 = [0]
	if ( ((uint_64)((int_64)*($1 + [16]) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$11 }
	$4 = (uint_64)*(($1 + [24])) >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$4 = $9
	$8 = [1]
	$11 = $6
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$15
	$4 = $9
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$16 }
	$8 = [1]
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$14 }
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert(((int_64)$4 == (int_64)$5), [10917])
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$12
	$8 = [0]
	
.LABEL $label$11
	CALL eosio_assert($8, [11007])
	CALL eosio_assert(((int_64)*($10) > (int_64)0), [11024])
	$6 = ($1 + [32])
	$8 = *($1 + [32])
	if ( ($8 & [1]) ){ goto $label$18 }
	$8 = uint_32($8 >> [1])
	goto $label$17 
	
.LABEL $label$18
	$8 = *(($1 + [36]))
	
.LABEL $label$17
	CALL eosio_assert(($8 <= [257]), [11056])
	CALL prints([11085])
	CALL printn($2)
	CALL prints([11109])
	$4 = *(($1 + [8]))
	CALL printn(*($1))
	CALL prints([14000])
	CALL printn($4)
	CALL prints([14000])
	CALL $19($10)
	CALL prints([14000])
	$6 = *(($1 + [32]))
	$8 = ($6 & [1])
	CALL prints_l(( *(($1 + [40])) ? ($6 + [1]) : $8 ), ( *(($1 + [36])) ? uint_32($6 >> [1]) : $8 ))
	CALL prints([9194])
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [10776]
	$7 = (int_64)0
	
.LOOP $label$19:
	if ( ((uint_64)$4 > (uint_64)(int_64)10) ){ goto $label$24 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$23 }
	$8 = ($8 + [-91])
	goto $label$22 
	
.LABEL $label$24
	$9 = (int_64)0
	if ( ((int_64)$4 == (int_64)11) ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$23
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$22
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$21
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$20
	$6 = ($6 + [1])
	$5 = ((int_64)$5 + (int_64)4294967291)
	$7 = ((int_64)$9 | (int_64)$7)
	$4 = ((int_64)$4 + (int_64)1)
	if ( ((int_64)$4 != (int_64)13) ){ goto $label$19 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$25 }
	if ( CALL $41($0, $1) ){ goto $label$1 }
	
.LABEL $label$25
	*($3 + [40]) = ($0 + [104])
	*($3) = (int_64)0
	*($3 + [8]) = *($1)
	CALL $50(($3 + [56]), ($3 + [40]), $3)
	$6 = [0]
	$8 = *($3 + [60])
	if ( ($8 == 0) ){ goto $label$26 }
	$6 = ( $8 ? [0] : (int_64)(((int_64)((int_64)*($3) ^ (int_64)*($8 + [26])) | (int_64)((int_64)*($3 + [8]) ^ (int_64)*($8 + [16]))) == 0) )
	
.LABEL $label$26
	$8 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($8, [11116])
	*($3 + [56]) = (int_64)0
	*($3 + [39]) = [0]
	*($3 + [38]) = [0]
	*($3 + [37]) = [0]
	*($3) = $1
	*($3 + [8]) = $0
	*($3 + [4]) = ($3 + [39])
	*($3 + [12]) = ($3 + [38])
	*($3 + [16]) = ($3 + [48])
	*($3 + [20]) = ($3 + [37])
	*($3 + [24]) = ($3 + [56])
	CALL eosio_assert($8, [13386])
	CALL $51(*($3 + [40]), $6, $3)
	if ( (*($3 + [39]) == 0) ){ goto $label$1 }
	if ( (*($3 + [38]) == 0) ){ goto $label$27 }
	if ( (*($3 + [37]) & [255]) ){ goto $label$1 }
	
.LABEL $label$27
	CALL $17($0, *($3 + [56]))
	$global$0 = ($3 + [64])
	return 
	
.LABEL $label$1
	$global$0 = ($3 + [64])
}

void .FUNC memory ()
{
}

void .FUNC $43 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx128_lowerbound(*($2), *($2 + [8]), (int_64)-2507752926491967484, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $91($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-2507752926491967488, $6))
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [64])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

int_64 .FUNC $42 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	$0 = (( *($0 + [8]) ? ($0 + [1]) : (*($0) & [1]) ) + [-1])
	
.LOOP $label$1:
	$0 = ($0 + [1])
	if ( CALL $180(*($0)) ){ goto $label$1 }
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$6 }
	$2 = [1]
	goto $label$7 
	
.LABEL $label$8
	$2 = [0]
	
.LABEL $label$7
	$0 = ($0 + [1])
	if ( (CALL $179(*($0)) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$2 = [0]
	if ( CALL $179($1) ){ goto $label$4 }
	
.LABEL $label$5
	$3 = (int_64)0
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = (int_64)0
	
.LOOP $label$9:
	$1 = $0
	if ( (uint_64)($3 <= (int_64)1844674407370955162) ){ goto $label$10 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$10
	$3 = ((int_64)$3 * (int_64)10)
	$4 = *($1)
	$5 = ((int_64)$4 + (int_64)-48)
	if ( (int_64)($5 == 0) ){ goto $label$11 }
	if ( ((uint_64)$3 <= (uint_64)(int_64))((int_64)47 - $4)) ){ goto $label$11 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$11
	$0 = ($1 + [1])
	$3 = ((int_64)$5 + (int_64)$3)
	if ( CALL $179(*(($1 + [1]))) ){ goto $label$9 }
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$12 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$12
	$3 = (int_64))((int_64)0 - $3)
	
.LABEL $label$2
	return $3
}

int_32 .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$2 = ($global$0 - [480])
	$global$0 = $2
	$3 = *($1)
	*($2 + [184]) = $3
	$4 = *($1 + [8])
	$5 = CALL $169(($2 + [168]), ($1 + [32]))
	CALL eosio_assert(((int_64)$4 == (int_64)*($0)), [10538])
	CALL require_auth($3)
	CALL eosio_assert([1], [12862])
	$6 = [0]
	$3 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$3 = $4
	$7 = [1]
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$3 = $4
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$8 = ($6 + [1])
	$6 = $8
	if ( $7 ){ goto $label$5 }
	$7 = [1]
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [12911])
	CALL eosio_assert(((int_64)*(($1 + [24])) == (int_64)1397703940), [12931])
	if ( ((int_64)*($1 + [16]) != (int_64)1) ){ goto $label$13 }
	$1 = CALL $169(($2 + [152]), $5)
	CALL $10($1)
	$6 = *($2 + [152])
	if ( ((uint_32)( *($1 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) > (uint_32)[5]) ){ goto $label$12 }
	CALL prints([10582])
	goto $label$11 
	
.LABEL $label$13
	CALL prints([10561])
	$6 = [0]
	if ( ((*($2 + [168]) & [1]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$12
	*($2 + [144]) = [0]
	*($2 + [136]) = (int_64)0
	CALL $3(($2 + [136]), $1, [58])
	$6 = *($2 + [136])
	if ( ((uint_32)((int_32)(*($2 + [140]) - $6) / (int_32)[12]) > (uint_32)[1]) ){ goto $label$18 }
	CALL prints([10607])
	$8 = *($2 + [136])
	if ( ($8 == 0) ){ goto $label$11 }
	$7 = *($2 + [140])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$17 }
	
.LOOP $label$19:
	$6 = ($7 + [-12])
	if ( ((*($6) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*(($7 + [-4])))
	
.LABEL $label$20
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$19 }
	$6 = *($2 + [136])
	goto $label$16 
	
.LABEL $label$18
	$7 = *($6)
	$8 = CALL $205([10631])
	if ( ((int_32)$8 != (int_32)( *($6 + [4]) ? uint_32($7 >> [1]) : ($7 & [1]) )) ){ goto $label$21 }
	if ( (CALL $177($6, [0], [-1], [10631], $8) == 0) ){ goto $label$10 }
	
.LABEL $label$21
	CALL prints([10636])
	$8 = *($2 + [136])
	if ( ($8 == 0) ){ goto $label$11 }
	$7 = *($2 + [140])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$15 }
	
.LOOP $label$22:
	$6 = ($7 + [-12])
	if ( ((*($6) & [1]) == 0) ){ goto $label$23 }
	CALL _ZdlPv(*(($7 + [-4])))
	
.LABEL $label$23
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$22 }
	$6 = *($2 + [136])
	goto $label$14 
	
.LABEL $label$17
	$6 = $8
	
.LABEL $label$16
	*($2 + [140]) = $8
	CALL _ZdlPv($6)
	goto $label$11 
	
.LABEL $label$15
	$6 = $8
	
.LABEL $label$14
	*($2 + [140]) = $8
	CALL _ZdlPv($6)
	
.LABEL $label$11
	$6 = [0]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$3 = CALL $42((*($2 + [136]) + [12]))
	*($2 + [128]) = $3
	*($2 + [120]) = [0]
	$4 = (int_64)0
	*($2 + [112]) = (int_64)0
	*($2 + [104]) = (int_64)0
	$6 = *($2 + [136])
	if ( (((int_32)(*($2 + [140]) - $6) / (int_32)[12]) <= [3]) ){ goto $label$24 }
	CALL $171(($2 + [112]), ($6 + [24]))
	$6 = ( *(($2 + [120])) ? (($2 + [112]) | [1]) : (*($2 + [112]) & [1]) )
	$7 = [0]
	
.LOOP $label$25:
	$8 = ($6 + $7)
	$9 = ($7 + [1])
	$7 = $9
	if ( *($8) ){ goto $label$25 }
	$10 = (CASTING uint_64)(uint_32 ($9 + [-1]))
	$3 = (int_64)0
	$4 = (int_64)59
	$11 = (int_64)0
	
.LOOP $label$26:
	$12 = (int_64)0
	if ( ((uint_64)$3 >= (uint_64)$10) ){ goto $label$27 }
	$7 = *($6)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$29 }
	$7 = ($7 + [-91])
	goto $label$28 
	
.LABEL $label$29
	$7 = ( ($7 + [-48]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$28
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$27
	if ( ((uint_64)$3 > (uint_64)(int_64)11) ){ goto $label$31 }
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	goto $label$30 
	
.LABEL $label$31
	$12 = ((int_64)$12 & (int_64)15)
	
.LABEL $label$30
	$6 = ($6 + [1])
	$3 = ((int_64)$3 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$4 = ((int_64)$4 + (int_64)4294967291)
	if ( ((int_64)$4 != (int_64)55834574842) ){ goto $label$26 }
	*($2 + [104]) = $11
	CALL eosio_assert(CALL eosio_assert7($11), [10659])
	CALL eosio_assert(((int_64)*($2 + [184]) != (int_64)*($2 + [104])), [10679])
	$4 = *($2 + [104])
	$3 = *($2 + [128])
	
.LABEL $label$24
	$6 = [10701]
	$12 = *($2 + [184])
	$7 = *([10701])
	if ( ($7 == 0) ){ goto $label$32 }
	
.LOOP $label$34:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$33 }
	CALL prints_l($6, [1])
	$6 = ($6 + [1])
	$7 = *($6)
	if ( $7 ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	CALL printn($12)
	$6 = ($6 + [1])
	$7 = *($6)
	if ( ($7 == 0) ){ goto $label$32 }
	
.LOOP $label$36:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$35 }
	CALL prints_l($6, [1])
	$6 = ($6 + [1])
	$7 = *($6)
	if ( $7 ){ goto $label$36 }
	goto $label$32 
	
.LABEL $label$35
	CALL printui($3)
	$6 = ($6 + [1])
	$7 = *($6)
	if ( ($7 == 0) ){ goto $label$32 }
	
.LOOP $label$38:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$37 }
	CALL prints_l($6, [1])
	$6 = ($6 + [1])
	$7 = *($6)
	if ( $7 ){ goto $label$38 }
	goto $label$32 
	
.LABEL $label$37
	CALL printn($4)
	CALL prints(($6 + [1]))
	
.LABEL $label$32
	$13 = ($0 + [16])
	$3 = *($2 + [128])
	$7 = *(($0 + [44]))
	$8 = *(($0 + [40]))
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$40 }
	
.LOOP $label$42:
	$6 = ($7 + [-24])
	$9 = *($6)
	if ( ((int_64)*($9) == (int_64)$3) ){ goto $label$41 }
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$40 }
	CALL eosio_assert(((int_32)*($9 + [176]) == (int_32)$13), [13282])
	goto $label$39 
	
.LABEL $label$40
	$9 = [0]
	$6 = CALL db_find_i64(*($13), *(($0 + [24])), (int_64)6291769033721118720, $3)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$39 }
	$9 = CALL $7($13, $6)
	CALL eosio_assert(((int_32)*($9 + [176]) == (int_32)$13), [13282])
	
.LABEL $label$39
	$7 = [0]
	$14 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($14, [10104])
	CALL eosio_assert((*($9 + [80]) == 0), [10720])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)*(($0 + [256]))), [10739])
	*(($2 + [88])) = (int_64)0
	*(($2 + [96])) = [0]
	*($2 + [72]) = (int_64)-1
	*($2 + [80]) = (int_64)0
	$3 = *($0)
	*($2 + [56]) = $3
	*($2 + [64]) = $3
	*($2 + [48]) = ($2 + [56])
	*($2 + [200]) = *($2 + [128])
	*($2 + [192]) = *($2 + [184])
	CALL $43(($2 + [400]), ($2 + [48]), ($2 + [192]))
	$6 = *($2 + [404])
	if ( ($6 == 0) ){ goto $label$43 }
	$7 = ( $6 ? [0] : (int_64)(((int_64)((int_64)*($2 + [192]) ^ (int_64)*($6 + [16])) | (int_64)((int_64)*($2 + [200]) ^ (int_64)*($6 + [8]))) == 0) )
	
.LABEL $label$43
	CALL eosio_assert(($7 == 0), [10757])
	$15 = ($0 + [56])
	$3 = *($2 + [128])
	$8 = *(($0 + [84]))
	$16 = *(($0 + [80]))
	if ( ((int_32)$16 == (int_32)$8) ){ goto $label$45 }
	
.LOOP $label$47:
	$7 = ($8 + [-24])
	$6 = *($7)
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$46 }
	$8 = $7
	if ( ((int_32)$16 != (int_32)$7) ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$46
	if ( ((int_32)$16 == (int_32)$8) ){ goto $label$45 }
	CALL eosio_assert(((int_32)*($6 + [184]) == (int_32)$15), [13282])
	goto $label$44 
	
.LABEL $label$45
	$6 = [0]
	$7 = CALL db_find_i64(*($15), *(($0 + [64])), (int_64)6291770479543096704, $3)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$44 }
	$6 = CALL $8($15, $7)
	CALL eosio_assert(((int_32)*($6 + [184]) == (int_32)$15), [13282])
	
.LABEL $label$44
	$7 = ((int_32)$6 != (int_32)[0])
	CALL eosio_assert($7, [8481])
	CALL eosio_assert($7, [13386])
	CALL eosio_assert(((int_32)*($6 + [184]) == (int_32)$15), [13421])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$2()), [13467])
	$3 = *($7)
	$4 = ((int_64)$3 + (int_64)1)
	*(($7 = ($6 + [24]))) = $4
	$7 = ($6 + [8])
	$12 = *($7)
	*($2 + [400]) = $12
	$11 = *(($6 + [16]))
	*($2 + [408]) = $11
	*($2 + [424]) = $3
	*($2 + [416]) = ((int_64)$11 + (int_64)$12)
	*($2 + [432]) = (int_64))((int_64)0 - *(($6 + [112])))
	*($2 + [440]) = (int_64))((int_64)0 - *(($6 + [128])))
	$3 = *($6)
	CALL eosio_assert([1], [13518])
	*($2 + [16]) = (($2 + [192]) + [180])
	*($2 + [12]) = ($2 + [192])
	*($2 + [8]) = ($2 + [192])
	CALL $35(($2 + [8]), $6)
	CALL db_update_i64(*($6 + [188]), (int_64)0, ($2 + [192]), [180])
	$8 = ($0 + [72])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$48 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$48
	$8 = (($2 + [400]) + [8])
	*($2 + [464]) = *($7)
	if ( (CALL $204(($2 + [400]), ($2 + [464]), [8]) == 0) ){ goto $label$49 }
	$16 = ($6 + [192])
	$7 = *($16)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$50 }
	$7 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096704, ($2 + [448]), $3)
	*($16) = $7
	
.LABEL $label$50
	CALL db_idx64_update($7, (int_64)0, ($2 + [464]))
	
.LABEL $label$49
	$7 = (($2 + [400]) + [16])
	$16 = ($6 + [16])
	*($2 + [464]) = *($16)
	if ( (CALL $204($8, ($2 + [464]), [8]) == 0) ){ goto $label$51 }
	$15 = ($6 + [196])
	$8 = *($15)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$52 }
	$8 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096705, ($2 + [448]), $3)
	*($15) = $8
	
.LABEL $label$52
	CALL db_idx64_update($8, (int_64)0, ($2 + [464]))
	
.LABEL $label$51
	$8 = (($2 + [400]) + [24])
	*($2 + [464]) = ((int_64)*($16) + (int_64)*(($6 + [8])))
	if ( (CALL $204($7, ($2 + [464]), [8]) == 0) ){ goto $label$53 }
	$16 = ($6 + [200])
	$7 = *($16)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$54 }
	$7 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096706, ($2 + [448]), $3)
	*($16) = $7
	
.LABEL $label$54
	CALL db_idx64_update($7, (int_64)0, ($2 + [464]))
	
.LABEL $label$53
	$7 = ($2 + [432])
	*($2 + [464]) = *(($6 + [24]))
	if ( (CALL $204($8, ($2 + [464]), [8]) == 0) ){ goto $label$55 }
	$16 = ($6 + [204])
	$8 = *($16)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$56 }
	$8 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096707, ($2 + [448]), $3)
	*($16) = $8
	
.LABEL $label$56
	CALL db_idx64_update($8, (int_64)0, ($2 + [464]))
	
.LABEL $label$55
	$8 = ($2 + [440])
	*($2 + [464]) = (int_64))((int_64)0 - *(($6 + [112])))
	if ( (CALL $204($7, ($2 + [464]), [8]) == 0) ){ goto $label$57 }
	$16 = ($6 + [208])
	$7 = *($16)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$58 }
	$7 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096708, ($2 + [448]), $3)
	*($16) = $7
	
.LABEL $label$58
	CALL db_idx64_update($7, (int_64)0, ($2 + [464]))
	
.LABEL $label$57
	*($2 + [464]) = (int_64))((int_64)0 - *(($6 + [128])))
	if ( (CALL $204($8, ($2 + [464]), [8]) == 0) ){ goto $label$59 }
	$7 = ($6 + [212])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$60 }
	$6 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096709, ($2 + [448]), $3)
	*($7) = $6
	
.LABEL $label$60
	CALL db_idx64_update($6, (int_64)0, ($2 + [464]))
	
.LABEL $label$59
	CALL eosio_assert(((int_32)*(($0 + [204])) == (int_32)[1]), [12486])
	$3 = *($0)
	*($2 + [196]) = ($2 + [128])
	*($2 + [192]) = ($2 + [56])
	*($2 + [200]) = ($2 + [184])
	*($2 + [204]) = ($2 + [104])
	*($2 + [8]) = $3
	CALL eosio_assert(((int_64)*($2 + [56]) == (int_64)CALL $fimport$2()), [13626])
	*($2 + [404]) = ($2 + [192])
	*($2 + [400]) = ($2 + [56])
	*($2 + [408]) = ($2 + [8])
	*(($6 = CALL _Znwj([72])) + [40]) = ($2 + [56])
	CALL $44(($2 + [400]), $6)
	*($2 + [464]) = $6
	$3 = *($6)
	*($2 + [400]) = $3
	$8 = *($6 + [44])
	*($2 + [448]) = $8
	$16 = ($2 + [84])
	$7 = *($16)
	if ( ((uint_32)$7 >= (uint_32)*(($2 + [88]))) ){ goto $label$63 }
	*($7 + [8]) = $3
	*($7 + [16]) = $8
	*($2 + [464]) = [0]
	*($7) = $6
	*($16) = ($7 + [24])
	$6 = *($2 + [464])
	*($2 + [464]) = [0]
	if ( ($6 == 0) ){ goto $label$61 }
	goto $label$62 
	
.LABEL $label$63
	CALL $45(($2 + [80]), ($2 + [464]), ($2 + [400]), ($2 + [448]))
	$6 = *($2 + [464])
	*($2 + [464]) = [0]
	if ( ($6 == 0) ){ goto $label$61 }
	
.LABEL $label$62
	CALL _ZdlPv($6)
	
.LABEL $label$61
	if ( (uint_64)($4 <= *($9 + [88])) ){ goto $label$64 }
	*(($2 + [40])) = [0]
	*($2 + [24]) = (int_64)-1
	*($2 + [32]) = (int_64)0
	*($2 + [44]) = [0]
	$3 = *(($0 + [256]))
	*($2 + [8]) = $3
	*($2 + [16]) = $3
	$6 = CALL db_find_i64($3, $3, (int_64)6291763602739167232, *($2 + [128]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$65 }
	$6 = CALL $46(($2 + [8]), $6)
	CALL eosio_assert(((int_32)*($6 + [80]) == (int_32)($2 + [8])), [13282])
	if ( (uint_64)(*($6 + [24]) <= *($9 + [96])) ){ goto $label$65 }
	CALL eosio_assert($14, [13386])
	CALL eosio_assert(((int_32)*($9 + [176]) == (int_32)$13), [13421])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [13467])
	$6 = ($9 + [16])
	$3 = *($6)
	*(($2 + [440])) = $3
	$7 = ($9 + [80])
	$4 = *($7)
	*($7) = [1]
	$12 = *(($9 + [32]))
	*($2 + [432]) = $12
	*($2 + [416]) = $4
	*($2 + [400]) = (uint_64)$3 >> (uint_64)(int_64)8)
	*($2 + [408]) = (uint_64)$12 >> (uint_64)(int_64)8)
	$3 = *($9)
	*($9 + [76]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$4 = *($2 + [184])
	CALL prints([13949])
	CALL printui(*($2 + [128]))
	CALL printn($4)
	CALL eosio_assert(((int_64)$3 == (int_64)*($9)), [13518])
	*($2 + [392]) = (($2 + [192]) + [161])
	*($2 + [388]) = ($2 + [192])
	*($2 + [384]) = ($2 + [192])
	CALL $47(($2 + [384]), $9)
	CALL db_update_i64(*($9 + [180]), (int_64)0, ($2 + [192]), [161])
	$7 = ($0 + [32])
	if ( (uint_64)($3 <= *($7)) ){ goto $label$66 }
	*($7) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$66
	$7 = (($2 + [400]) | [8])
	*($2 + [464]) = (uint_64)*($6) >> (uint_64)(int_64)8)
	if ( (CALL $204(($2 + [400]), ($2 + [464]), [8]) == 0) ){ goto $label$67 }
	$8 = ($9 + [184])
	$6 = *($8)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$68 }
	$6 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118720, ($2 + [448]), $3)
	*($8) = $6
	
.LABEL $label$68
	CALL db_idx64_update($6, (int_64)0, ($2 + [464]))
	
.LABEL $label$67
	$6 = (($2 + [400]) + [16])
	*($2 + [464]) = (uint_64)*(($9 + [32])) >> (uint_64)(int_64)8)
	if ( (CALL $204($7, ($2 + [464]), [8]) == 0) ){ goto $label$69 }
	$8 = ($9 + [188])
	$7 = *($8)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$70 }
	$7 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118721, ($2 + [448]), $3)
	*($8) = $7
	
.LABEL $label$70
	CALL db_idx64_update($7, (int_64)0, ($2 + [464]))
	
.LABEL $label$69
	$7 = (($2 + [400]) + [32])
	*($2 + [464]) = *(($9 + [80]))
	if ( (CALL $204($6, ($2 + [464]), [8]) == 0) ){ goto $label$71 }
	$8 = ($9 + [192])
	$6 = *($8)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$72 }
	$6 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118722, ($2 + [448]), $3)
	*($8) = $6
	
.LABEL $label$72
	CALL db_idx64_update($6, (int_64)0, ($2 + [464]))
	
.LABEL $label$71
	*($2 + [472]) = *(($9 + [16]))
	*($2 + [464]) = *(($9 + [32]))
	if ( (CALL $204($7, ($2 + [464]), [16]) == 0) ){ goto $label$65 }
	$7 = ($9 + [196])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$73 }
	$6 = CALL db_idx128_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118723, ($2 + [448]), $3)
	*($7) = $6
	
.LABEL $label$73
	CALL db_idx128_update($6, (int_64)0, ($2 + [464]))
	
.LABEL $label$65
	$8 = *($2 + [32])
	if ( ($8 == 0) ){ goto $label$64 }
	$0 = ($2 + [36])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$75 }
	
.LOOP $label$76:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$77 }
	CALL _ZdlPv($7)
	
.LABEL $label$77
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$76 }
	$6 = *(($2 + [32]))
	goto $label$74 
	
.LABEL $label$75
	$6 = $8
	
.LABEL $label$74
	*($0) = $8
	CALL _ZdlPv($6)
	
.LABEL $label$64
	$8 = *($2 + [80])
	if ( ($8 == 0) ){ goto $label$78 }
	$0 = ($2 + [84])
	$6 = *($0)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$80 }
	
.LOOP $label$81:
	$6 = ($6 + [-24])
	$7 = *($6)
	*($6) = [0]
	if ( ($7 == 0) ){ goto $label$82 }
	CALL _ZdlPv($7)
	
.LABEL $label$82
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$81 }
	$6 = *(($2 + [80]))
	goto $label$79 
	
.LABEL $label$80
	$6 = $8
	
.LABEL $label$79
	*($0) = $8
	CALL _ZdlPv($6)
	
.LABEL $label$78
	if ( ((*($2 + [112]) & [1]) == 0) ){ goto $label$83 }
	CALL _ZdlPv(*(($2 + [120])))
	
.LABEL $label$83
	$8 = *($2 + [136])
	if ( ($8 == 0) ){ goto $label$84 }
	$7 = *($2 + [140])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$86 }
	
.LOOP $label$87:
	$6 = ($7 + [-12])
	if ( ((*($6) & [1]) == 0) ){ goto $label$88 }
	CALL _ZdlPv(*(($7 + [-4])))
	
.LABEL $label$88
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$87 }
	$6 = *($2 + [136])
	goto $label$85 
	
.LABEL $label$86
	$6 = $8
	
.LABEL $label$85
	*($2 + [140]) = $8
	CALL _ZdlPv($6)
	
.LABEL $label$84
	$6 = [1]
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$8
	if ( (*($2 + [168]) & [1]) ){ goto $label$6 }
	
.LABEL $label$7
	$global$0 = ($2 + [480])
	return $6
	
.LABEL $label$6
	CALL _ZdlPv(*($5 + [8]))
	$global$0 = ($2 + [480])
	return $6
}

void .FUNC $40 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [240])
	$global$0 = $3
	*($3 + [8]) = $2
	CALL require_auth($1)
	*($3) = ($0 + [104])
	CALL $38(($3 + [16]), $3, ($3 + [8]))
	$4 = [0]
	$5 = *($3 + [20])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ( $5 ? [0] : ((int_64)*($3 + [8]) == (int_64)*($5)) )
	
.LABEL $label$1
	$6 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($6, [10003])
	CALL eosio_assert(((int_32)*($4 + [26]) != (int_32)[0]), [10023])
	if ( ((int_64)*($0) == (int_64)$1) ){ goto $label$2 }
	if ( ((int_64)*(($0 + [240])) == (int_64)$1) ){ goto $label$2 }
	CALL eosio_assert(((int_64)*($4 + [16]) == (int_64)$1), [10303])
	
.LABEL $label$2
	$7 = ($0 + [16])
	$1 = *($4 + [24])
	$9 = *(($0 + [44]))
	$8 = *(($0 + [40]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	
.LOOP $label$6:
	$5 = ($9 + [-24])
	$10 = *($5)
	if ( ((int_64)*($10) == (int_64)$1) ){ goto $label$5 }
	$9 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*($10 + [176]) == (int_32)$7), [13282])
	goto $label$3 
	
.LABEL $label$4
	$10 = [0]
	$5 = CALL db_find_i64(*($7), *(($0 + [24])), (int_64)6291769033721118720, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$10 = CALL $7($7, $5)
	CALL eosio_assert(((int_32)*($10 + [176]) == (int_32)$7), [13282])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$10 != (int_32)[0]), [10104])
	$9 = ($4 + [26])
	$2 = *(( ($10 + [24]) ? ($10 + [40]) : (((*($9) + [-1]) & [255]) <= [2]) ))
	CALL eosio_assert($6, [13386])
	$5 = *($3)
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$5), [13421])
	CALL eosio_assert(((int_64)*($5) == (int_64)CALL $fimport$2()), [13467])
	$11 = *(($4 + [16]))
	*(($3 + [200])) = $11
	$1 = *($9)
	*((($3 + [144]) + [24])) = ((int_64)$1 | (int_64)((int_64)*(($4 + [24])) << (int_64)8))
	*($3 + [192]) = $1
	*($3 + [144]) = *($4)
	*($3 + [152]) = *(($4 + [44]))
	*($3 + [176]) = $11
	$11 = *(($4 + [80]))
	*($3 + [160]) = ( (int_64))((int_64)0 - $11) ? $11 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	$1 = *($4 + [8])
	CALL $24($0, $4, [1], $2)
	CALL eosio_assert(((int_64)$1 == (int_64)*($4 + [8])), [13518])
	*($3 + [136]) = (($3 + [16]) + [108])
	*($3 + [132]) = ($3 + [16])
	*($3 + [128]) = ($3 + [16])
	CALL $25(($3 + [128]), $4)
	CALL db_update_i64(*($4 + [116]), (int_64)0, ($3 + [16]), [108])
	if ( (uint_64)($1 <= *($5 + [16])) ){ goto $label$7 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$9 = (($3 + [144]) | [8])
	*($3 + [224]) = *($4)
	if ( (CALL $204(($3 + [144]), ($3 + [224]), [8]) == 0) ){ goto $label$8 }
	$8 = ($4 + [120])
	$10 = *($8)
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$9 }
	$10 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)-6497942333781180416, ($3 + [208]), $1)
	*($8) = $10
	
.LABEL $label$9
	CALL db_idx64_update($10, (int_64)0, ($3 + [224]))
	
.LABEL $label$8
	$10 = (($3 + [144]) + [16])
	*($3 + [224]) = *(($4 + [44]))
	if ( (CALL $204($9, ($3 + [224]), [8]) == 0) ){ goto $label$10 }
	$8 = ($4 + [124])
	$9 = *($8)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$11 }
	$9 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)-6497942333781180415, ($3 + [208]), $1)
	*($8) = $9
	
.LABEL $label$11
	CALL db_idx64_update($9, (int_64)0, ($3 + [224]))
	
.LABEL $label$10
	$9 = ($3 + [176])
	$2 = *(($4 + [80]))
	$11 = *(($4 + [26]))
	*($3 + [232]) = ((int_64)$11 | (int_64)((int_64)*(($4 + [24])) << (int_64)8))
	*($3 + [224]) = ( (int_64))((int_64)0 - $2) ? $2 : (int_64)(((int_64)$11 ^ (int_64)4) == 0) )
	if ( (CALL $204($10, ($3 + [224]), [16]) == 0) ){ goto $label$12 }
	$8 = ($4 + [128])
	$10 = *($8)
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$13 }
	$10 = CALL db_idx128_find_primary(*($5), *($5 + [8]), (int_64)-6497942333781180414, ($3 + [208]), $1)
	*($8) = $10
	
.LABEL $label$13
	CALL db_idx128_update($10, (int_64)0, ($3 + [224]))
	
.LABEL $label$12
	$10 = ($3 + [192])
	*($3 + [224]) = *(($4 + [16]))
	if ( (CALL $204($9, ($3 + [224]), [8]) == 0) ){ goto $label$14 }
	$8 = ($4 + [132])
	$9 = *($8)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$15 }
	$9 = CALL db_idx64_find_primary(*($5), *($5 + [8]), (int_64)-6497942333781180413, ($3 + [208]), $1)
	*($8) = $9
	
.LABEL $label$15
	CALL db_idx64_update($9, (int_64)0, ($3 + [224]))
	
.LABEL $label$14
	*($3 + [232]) = *(($4 + [16]))
	*($3 + [224]) = *(($4 + [26]))
	if ( (CALL $204($10, ($3 + [224]), [16]) == 0) ){ goto $label$16 }
	$10 = ($4 + [136])
	$9 = *($10)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$17 }
	$9 = CALL db_idx128_find_primary(*($5), *($5 + [8]), (int_64)-6497942333781180412, ($3 + [208]), $1)
	*($10) = $9
	
.LABEL $label$17
	CALL db_idx128_update($9, (int_64)0, ($3 + [224]))
	
.LABEL $label$16
	CALL prints([10319])
	CALL printui(*($4 + [8]))
	CALL prints([10325])
	CALL printui(*($4))
	CALL prints([10331])
	$global$0 = ($3 + [240])
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [76]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[31]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [144]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [152]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [160]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [168]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [13333])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $207($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $210($4)
	
.LABEL $label$6
	$5 = CALL _Znwj([96])
	$4 = CALL $150($5)
	*($5 + [80]) = $0
	CALL $151(($3 + [32]), $4)
	*($5 + [88]) = [-1]
	*($5 + [84]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $152(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $45 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $44 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = *($6 + [16])
	if ( ((int_64)$7 != (int_64)-1) ){ goto $label$1 }
	$7 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($6), *($6 + [8]), (int_64)-2507752926491967488, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $91($6, $8)
	*($3 + [20]) = [0]
	*($3 + [16]) = $6
	$7 = *(*(CALL $148(($3 + [16])) + [4]))
	$7 = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($6 + [16])) = $7
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($7 <= (int_64)-2), [13795])
	*($1) = *(($6 + [16]))
	*($1 + [8]) = *(*($5 + [4]))
	*($1 + [16]) = *(*($5 + [8]))
	*($1 + [24]) = *(*($5 + [12]))
	*($1 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert((uint_64)(*($1) <= (int_64)100000), [13774])
	CALL eosio_assert(((int_64)*($1 + [16]) != (int_64)*($1 + [24])), [10679])
	$6 = $2
	$5 = ($6 + [-48])
	$global$0 = $5
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($6 + [-12])
	CALL $149($3, $1)
	$7 = *($1)
	*($1 + [44]) = CALL db_store_i64(*($4 + [8]), (int_64)-2507752926491967488, *(*($0 + [8])), $7, $5, [36])
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$3 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$4 = ($4 + [8])
	$7 = *($4)
	$0 = *(($0 + [8]))
	$9 = *($0)
	$10 = *($1)
	$5 = ($1 + [8])
	*($3 + [16]) = *($5)
	*($1 + [48]) = CALL db_idx64_store($7, (int_64)-2507752926491967488, $9, $10, ($3 + [16]))
	$7 = *($0)
	$9 = *($4)
	$10 = *($1)
	$6 = ($1 + [16])
	*($3 + [16]) = *($6)
	*(($1 + [52])) = CALL db_idx64_store($9, (int_64)-2507752926491967487, $7, $10, ($3 + [16]))
	$7 = *($0)
	$9 = *($4)
	$10 = *($1)
	*($3 + [16]) = *(($1 + [24]))
	*(($1 + [56])) = CALL db_idx64_store($9, (int_64)-2507752926491967486, $7, $10, ($3 + [16]))
	$7 = *($0)
	$9 = *($4)
	$10 = *($1)
	*($3 + [16]) = *(($1 + [32]))
	*(($1 + [60])) = CALL db_idx64_store($9, (int_64)-2507752926491967485, $7, $10, ($3 + [16]))
	$7 = *($0)
	$9 = *($4)
	$10 = *($1)
	*($3 + [24]) = *($5)
	*($3 + [16]) = *($6)
	*(($1 + [64])) = CALL db_idx128_store($9, (int_64)-2507752926491967484, $7, $10, ($3 + [16]))
	$global$0 = ($3 + [32])
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $210($0)
	
.LABEL $label$1
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $207($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [14560])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $207($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $163 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [48])
	$global$0 = $5
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*(*($0)) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	$4 = CALL $169($5, $4)
	$3 = CALL $169(($5 + [16]), $3)
	$2 = CALL $169(($5 + [32]), $2)
	CALL void $7((int_32 $1), (int_64 $2), (int_32 $3), (int_32 $4), (int_32 $0))
	if ( (*($4) & [1]) ){ goto $label$6 }
	if ( (*($3) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*($3 + [8]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($2) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$2
	CALL _ZdlPv(*($2 + [8]))
	$global$0 = ($5 + [48])
}

void .FUNC $162 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [48])
	$global$0 = $4
	$0 = *($0 + [4])
	$5 = *($0 + [4])
	$6 = (*(*($0)) + int_32($5 >> [1]))
	$0 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($6) + $0))
	
.LABEL $label$1
	$3 = CALL $169($4, $3)
	$2 = CALL $169(($4 + [16]), $2)
	$1 = CALL $169(($4 + [32]), $1)
	CALL void $6((int_32 $1), (int_32 $2), (int_32 $3), (int_32 $0))
	if ( (*($3) & [1]) ){ goto $label$6 }
	if ( (*($2) & [1]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL _ZdlPv(*($3 + [8]))
	if ( ((*($2) & [1]) == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv(*($2 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( (*($1) & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$2
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($4 + [48])
}

void .FUNC $161 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	$8 = ($global$0 - [96])
	$global$0 = $8
	$0 = *($0 + [4])
	$9 = *($0 + [4])
	$10 = (*(*($0)) + int_32($9 >> [1]))
	$0 = *($0)
	if ( (($9 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($10) + $0))
	
.LABEL $label$1
	$7 = CALL $169($8, $7)
	$6 = CALL $169(($8 + [16]), $6)
	$5 = CALL $169(($8 + [32]), $5)
	$4 = CALL $169(($8 + [48]), $4)
	$3 = CALL $169(($8 + [64]), $3)
	$2 = CALL $169(($8 + [80]), $2)
	CALL void $10((int_32 $1), (int_64 $2), (int_32 $3), (int_32 $4), (int_32 $5), (int_32 $6), (int_32 $7), (int_32 $0))
	if ( (*($7) & [1]) ){ goto $label$12 }
	if ( (*($6) & [1]) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL _ZdlPv(*($7 + [8]))
	if ( ((*($6) & [1]) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*($6 + [8]))
	$0 = [1]
	if ( ((*($5) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$0 = [1]
	if ( (*($5) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (*($4) & $0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($4) & $0) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*($4 + [8]))
	$0 = [1]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$0 = [1]
	if ( (*($3) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($2) & $0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($3 + [8]))
	if ( ((*($2) & $0) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($2 + [8]))
	$global$0 = ($8 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($8 + [96])
}

int_32 .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = [0]
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($2 <= *($5)), [13716])
	$2 = *($6)
	$7 = *($2)
	$2 = ($2 + [1])
	*($6) = $2
	$3 = ($3 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $3)))
	$3 = ($3 + [7])
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $4)
	$7 = *($1)
	$3 = *($1 + [4])
	$5 = ($3 - $7)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$3 }
	CALL $31($1, ($6 - $5))
	$2 = *(($0 + [4]))
	$3 = *(($1 + [4]))
	$7 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$2 }
	$3 = ($7 + $6)
	*(($1 + [4])) = $3
	
.LABEL $label$2
	$2 = ($3 - $7)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $2) >= (uint_32)$2), [13356])
	$3 = ($0 + [4])
	CALL memcpy($7, *($3), $2)
	*($3) = (*($3) + $2)
	return $0
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $168 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $175 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$3 }
	$5 = uint_32($3 >> [1])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = *($0 + [4])
	if ( ($5 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $4 ){ goto $label$6 }
	$6 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$6 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $4 ? $2 : ($4 <= $2) )
	$4 = ($5 - $1)
	$4 = ($4 - $2)
	if ( ($4 == 0) ){ goto $label$7 }
	$1 = ($6 + $1)
	CALL memmove($1, ($1 + $2), $4)
	$3 = *($0)
	
.LABEL $label$7
	$2 = ($5 - $2)
	if ( ($3 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($6 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $58 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$4 = *(($4 + [-24]))
	CALL eosio_assert(((int_32)*($4 + [176]) == (int_32)$0), [13282])
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $60($0, $4)
	CALL eosio_assert(((int_32)*($4 + [176]) == (int_32)$0), [13282])
	
.LABEL $label$2
	*($3) = $1
	CALL eosio_assert([1], [13386])
	CALL $61($0, $4, $2, $3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	*($3 + [8]) = $1
	CALL $62($3, $0, $2, ($3 + [8]))
	$global$0 = ($3 + [16])
}

void .FUNC $59 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $50 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx128_lowerbound(*($2), *($2 + [8]), (int_64)-6497942333781180412, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [8]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $18($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-6497942333781180416, $6))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [136])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $51 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$3 = ($global$0 - [352])
	$global$0 = $3
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [13421])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [13467])
	$5 = *(($1 + [16]))
	*((($4 = $3) + [88])) = $5
	$7 = ($1 + [24])
	$6 = *(($1 + [26]))
	*((($4 + [32]) + [24])) = ((int_64)$6 | (int_64)((int_64)*($7) << (int_64)8))
	*($4 + [80]) = $6
	*($4 + [32]) = *($1)
	*($4 + [40]) = *(($1 + [44]))
	*($4 + [64]) = $5
	$5 = *(($1 + [80]))
	*($4 + [48]) = ( (int_64))((int_64)0 - $5) ? $5 : (int_64)(((int_64)$6 ^ (int_64)4) == 0) )
	$8 = *($1 + [8])
	$9 = *($2 + [8])
	if ( CALL $14((*($2) + [32]), $1, *($2 + [4])) ){ goto $label$1 }
	CALL eosio_assert([0], [14004])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)*(($9 + [204])) == (int_32)[1]), [12486])
	$10 = ($9 + [16])
	$5 = *($7)
	$12 = *(($9 + [44]))
	$11 = *(($9 + [40]))
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($12 + [-24])
	$13 = *($7)
	if ( ((int_64)*($13) == (int_64)$5) ){ goto $label$4 }
	$12 = $7
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($13 + [176]) == (int_32)$10), [13282])
	goto $label$2 
	
.LABEL $label$3
	$13 = [0]
	$7 = CALL db_find_i64(*(($9 + [16])), *(($9 + [24])), (int_64)6291769033721118720, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$13 = CALL $7($10, $7)
	CALL eosio_assert(((int_32)*($13 + [176]) == (int_32)$10), [13282])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [10104])
	CALL eosio_assert(((int_32)*($13 + [80]) == (int_32)[1]), [8404])
	CALL memcpy(($4 + [176]), $13, [176])
	$7 = *(($1 + [26]))
	$12 = ((($7 + [-1]) & [255]) <= [2])
	*(*($2 + [12])) = $12
	if ( ((int_64)*(($9 + [304])) == (int_64)0) ){ goto $label$9 }
	$12 = ($7 & [255])
	if ( ((int_32)$12 == (int_32)[4]) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	*(($4 + [160])) = [0]
	*($4 + [144]) = (int_64)-1
	*($4 + [152]) = (int_64)0
	$6 = *(*($2))
	*($4 + [136]) = $6
	$14 = *(( ($4 + [216]) ? (($4 + [176]) + [24]) : $12 ))
	*($4 + [128]) = $14
	$15 = *($4 + [208])
	$7 = CALL db_find_i64($14, $6, (int_64)3607749779137757184, (uint_64)( $15 ? *($4 + [192]) : $12 ) >> (uint_64)(int_64)8)
	if ( ((int_32)$7) <= (int_32)[-1]) ){ goto $label$14 }
	CALL eosio_assert(((int_32)*(CALL $2(($4 + [128]), $7) + [16]) == (int_32)($4 + [128])), [13282])
	$13 = *((($4 + [128]) + [24]))
	if ( ($13 == 0) ){ goto $label$10 }
	$11 = ($4 + [156])
	$7 = *($11)
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$13 }
	
.LOOP $label$15:
	$7 = ($7 + [-24])
	$12 = *($7)
	*($7) = [0]
	if ( ($12 == 0) ){ goto $label$16 }
	CALL _ZdlPv($12)
	
.LABEL $label$16
	if ( ((int_32)$13 != (int_32)$7) ){ goto $label$15 }
	$7 = *(($4 + [152]))
	goto $label$12 
	
.LABEL $label$14
	if ( (*(*(($2 + [12]))) == 0) ){ goto $label$11 }
	CALL eosio_assert([0], [14021])
	goto $label$10 
	
.LABEL $label$13
	$7 = $13
	
.LABEL $label$12
	*($11) = $13
	CALL _ZdlPv($7)
	goto $label$10 
	
.LABEL $label$11
	$11 = *($2)
	$16 = *($4 + [232])
	CALL eosio_assert((uint_64)(((int_64)$16 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$6 = (uint_64)$15 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$14 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$6 = $14
	$12 = [1]
	$13 = $7
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$6 = $14
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$7 < (int_32)[6])
	$13 = ($7 + [1])
	$7 = $13
	if ( $12 ){ goto $label$21 }
	$12 = [1]
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$12 = [0]
	
.LABEL $label$17
	CALL eosio_assert($12, [12911])
	CALL eosio_assert(((int_64)*(($11 + [24])) == (int_64)$15), [12931])
	CALL eosio_assert(((int_64)*($11 + [16]) >= (int_64)$16), [14050])
	
.LABEL $label$10
	$7 = *(($1 + [26]))
	$12 = ($7 & [255])
	if ( ((int_32)$12 == (int_32)[4]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( ((int_32)$12 != (int_32)[2]) ){ goto $label$6 }
	
.LABEL $label$7
	*($4 + [136]) = *($4 + [208])
	$6 = ((int_64)*($4 + [232]) * (int_64)10)
	*($4 + [128]) = $6
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$6 = (uint_64)*($4 + [136]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$14 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$25 }
	$6 = $14
	$12 = [1]
	$13 = $7
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$25
	$6 = $14
	
.LOOP $label$26:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$23 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$7 < (int_32)[6])
	$13 = ($7 + [1])
	$7 = $13
	if ( $12 ){ goto $label$26 }
	$12 = [1]
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	$12 = [0]
	
.LABEL $label$22
	CALL eosio_assert($12, [12911])
	$7 = ($1 + [88])
	CALL $153(($4 + [112]), $9, ($4 + [128]), *($4 + [240]), $7)
	*(($12 = (($4 + [128]) + [8]))) = *((($4 + [112]) + [8]))
	*($4 + [128]) = *($4 + [112])
	CALL eosio_assert(((int_64)*($7) == (int_64)*($12)), [12931])
	CALL eosio_assert(((int_64)*($1 + [80]) <= (int_64)*($4 + [128])), [14086])
	$7 = *(($1 + [26]))
	
.LABEL $label$6
	$7 = (($7 & [255]) + [-1])
	if ( ((uint_32)$7 > (uint_32)[3]) ){ goto $label$36 }
	goto $label$37 
	
.LABEL $label$37
	$10 = ($9 + [56])
	$12 = *(($9 + [84]))
	$11 = *(($9 + [80]))
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$29 }
	
.LOOP $label$38:
	$7 = ($12 + [-24])
	$13 = *($7)
	if ( ((int_64)*($13) == (int_64)$5) ){ goto $label$30 }
	$12 = $7
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$38 }
	goto $label$29 
	
.LABEL $label$36
	CALL eosio_assert([0], [14210])
	goto $label$27 
	
.LABEL $label$35
	$5 = *(*($2) + [16])
	$6 = *($1 + [80])
	CALL __multi3($4, $6, (int_64)$6 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	*((($4 + [128]) + [8])) = *(($1 + [88]))
	*($4 + [128]) = $6
	$5 = *(($4 + [8]))
	$6 = *($4)
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ), [13014])
	$5 = *($4 + [224])
	CALL eosio_assert(((int_64)$5 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$5 != (int_64)-1) | ((int_64)$6 != (int_64)-9223372036854775808)), [13054])
	$14 = ((int_64)$6 / (int_64)$5)
	*($4 + [128]) = $14
	$6 = *($4 + [208])
	*($4 + [120]) = $6
	*($4 + [112]) = ((uint_64)*($4 + [232]) / (uint_64)(int_64)10)
	CALL eosio_assert([1], [12862])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = ($4 + [208])
	$7 = [0]
	
.LOOP $label$39:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$5 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$40 }
	$6 = $5
	$12 = [1]
	$13 = $7
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$39 }
	goto $label$31 
	
.LABEL $label$40
	$6 = $5
	
.LOOP $label$41:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$7 < (int_32)[6])
	$13 = ($7 + [1])
	$7 = $13
	if ( $12 ){ goto $label$41 }
	$12 = [1]
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$39 }
	goto $label$31 
	
.LABEL $label$34
	$7 = ($1 + [88])
	$14 = *($7)
	$6 = *(($1 + [80]))
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [12990])
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [13014])
	$5 = *($4 + [224])
	CALL eosio_assert(((int_64)$5 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$6 != (int_64)-9223372036854775808) | ((int_64)$5 != (int_64)-1)), [13054])
	CALL $153(($4 + [128]), $9, (*($2) + [16]), *($4 + [240]), $7)
	CALL eosio_assert(((int_64)$14 == (int_64)*($4 + [136])), [12931])
	CALL eosio_assert(((int_64)*($4 + [128]) >= (int_64)((int_64)$6 / (int_64)$5)), [14086])
	
.LABEL $label$33
	$11 = *($2)
	$5 = *($4 + [232])
	$14 = *($4 + [208])
	CALL eosio_assert([1], [12862])
	$6 = (uint_64)$14 >> (uint_64)(int_64)8)
	$15 = ((uint_64)$5 / (uint_64)(int_64)10)
	$7 = [0]
	
.LOOP $label$44:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$43 }
	$5 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$45 }
	$6 = $5
	$12 = [1]
	$13 = $7
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = $5
	
.LOOP $label$46:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$43 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$7 < (int_32)[6])
	$13 = ($7 + [1])
	$7 = $13
	if ( $12 ){ goto $label$46 }
	$12 = [1]
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$43
	$12 = [0]
	
.LABEL $label$42
	CALL eosio_assert($12, [12911])
	CALL eosio_assert(((int_64)*(($11 + [24])) == (int_64)$14), [12931])
	CALL eosio_assert(((int_64)*($11 + [16]) >= (int_64)$15), [14109])
	$7 = [1]
	$12 = *($2)
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($12 + [16]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [8929])
	$6 = *($12 + [16])
	if ( ((int_64)$6 != (int_64)((int_64)((int_64)$6 + (int_64)999) / (int_64)1000)) ){ goto $label$47 }
	CALL prints([8950])
	$7 = [0]
	
.LABEL $label$47
	CALL eosio_assert($7, [14148])
	goto $label$27 
	
.LABEL $label$32
	$12 = [0]
	
.LABEL $label$31
	CALL eosio_assert($12, [12911])
	CALL $153(($4 + [96]), $9, ($4 + [112]), *($4 + [240]), ($1 + [88]))
	$12 = (($4 + [96]) + [8])
	*(($7 = (($4 + [112]) + [8]))) = *($12)
	*($4 + [112]) = *($4 + [96])
	CALL eosio_assert(((int_64)*($4 + [136]) == (int_64)*($7)), [12931])
	CALL eosio_assert(((int_64)$14 >= (int_64)*($4 + [112])), [14109])
	CALL $23(($4 + [96]), $9, ($4 + [128]), *($4 + [240]), $11)
	*($4 + [136]) = *($12)
	*($4 + [128]) = *($4 + [96])
	CALL eosio_assert(((int_64)*($4 + [128]) > (int_64)0), [14129])
	$7 = [1]
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($4 + [128]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [8929])
	$6 = *($4 + [128])
	if ( ((int_64)$6 != (int_64)((int_64)((int_64)$6 + (int_64)999) / (int_64)1000)) ){ goto $label$48 }
	CALL prints([8950])
	$7 = [0]
	
.LABEL $label$48
	CALL eosio_assert($7, [14148])
	goto $label$27 
	
.LABEL $label$30
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$29 }
	CALL eosio_assert(((int_32)*($13 + [184]) == (int_32)$10), [13282])
	goto $label$28 
	
.LABEL $label$29
	$13 = [0]
	$7 = CALL db_find_i64(*($10), *(($9 + [64])), (int_64)6291770479543096704, $5)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$28 }
	$13 = CALL $8($10, $7)
	CALL eosio_assert(((int_32)*($13 + [184]) == (int_32)$10), [13282])
	
.LABEL $label$28
	$7 = [0]
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [14169])
	if ( ((int_64)*($13 + [96]) < (int_64)1) ){ goto $label$27 }
	$5 = *(*($2) + [16])
	$6 = *($13 + [96])
	CALL __multi3(($4 + [16]), $6, (int_64)$6 >> (int_64)63), $5, (int_64)$5 >> (int_64)63))
	*((($4 + [128]) + [8])) = *(($13 + [104]))
	*($4 + [128]) = $6
	$5 = *((($4 + [16]) + [8]))
	$6 = *($4 + [16])
	CALL eosio_assert(( (uint_64)($6 <= (int_64)4611686018427387904) ? ((int_64)$5 < (int_64)0) : (int_64)($5 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$6 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$5 > (int_64)-1) : ((int_64)$5 == (int_64)-1) ), [13014])
	$5 = *($4 + [224])
	CALL eosio_assert(((int_64)$5 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$5 != (int_64)-1) | ((int_64)$6 != (int_64)-9223372036854775808)), [13054])
	$14 = ((int_64)$6 / (int_64)$5)
	*($4 + [128]) = $14
	$6 = *($4 + [208])
	*($4 + [120]) = $6
	*($4 + [112]) = ((uint_64)*($4 + [232]) / (uint_64)(int_64)10)
	CALL eosio_assert([1], [12862])
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ($4 + [208])
	
.LOOP $label$50:
	$11 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$49 }
	$5 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$51 }
	$6 = $5
	$11 = [1]
	$12 = $7
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	$6 = $5
	
.LOOP $label$52:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$49 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$7 < (int_32)[6])
	$13 = ($7 + [1])
	$7 = $13
	if ( $12 ){ goto $label$52 }
	$11 = [1]
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$50 }
	
.LABEL $label$49
	CALL eosio_assert($11, [12911])
	CALL $153(($4 + [96]), $9, ($4 + [112]), *($4 + [240]), ($1 + [88]))
	$12 = (($4 + [96]) + [8])
	*(($7 = (($4 + [112]) + [8]))) = *($12)
	*($4 + [112]) = *($4 + [96])
	CALL eosio_assert(((int_64)*($4 + [136]) == (int_64)*($7)), [12931])
	CALL eosio_assert(((int_64)$14 >= (int_64)*($4 + [112])), [14109])
	CALL $23(($4 + [96]), $9, ($4 + [128]), *($4 + [240]), $10)
	*($4 + [136]) = *($12)
	*($4 + [128]) = *($4 + [96])
	CALL eosio_assert(((int_64)*($4 + [128]) > (int_64)0), [14129])
	$7 = [1]
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($4 + [128]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [8929])
	$6 = *($4 + [128])
	if ( ((int_64)$6 != (int_64)((int_64)((int_64)$6 + (int_64)999) / (int_64)1000)) ){ goto $label$53 }
	CALL prints([8950])
	$7 = [0]
	
.LABEL $label$53
	CALL eosio_assert($7, [14148])
	
.LABEL $label$27
	$12 = *($2)
	*(($7 = ($4 + [136]))) = *(($12 + [24]))
	*($4 + [128]) = *($12 + [16])
	$14 = CALL $6(*($9), *(($1 + [24])), *(*(($2 + [12]))), *(*($2 + [16])), *(($1 + [88])), ($4 + [128]))
	$12 = *($2)
	CALL eosio_assert(((int_64)*($7) == (int_64)*(($12 + [24]))), [12931])
	$6 = *($4 + [128])
	if ( ((int_64)$6 == (int_64)*($12 + [16])) ){ goto $label$54 }
	*(*($2 + [20])) = [1]
	CALL eosio_assert(((int_64)$6 > (int_64)0), [14233])
	
.LABEL $label$54
	$11 = ($4 + [80])
	$10 = (($4 + [32]) + [32])
	$17 = (($4 + [32]) + [16])
	$18 = (($4 + [32]) | [8])
	$12 = ($9 + [208])
	CALL eosio_assert(((int_64)*($12) != (int_64)-1), [11326])
	$6 = *($12)
	$5 = ((int_64)$6 + (int_64)1)
	*($12) = $5
	CALL $58(($9 + [152]), ($9 + [192]), *($9))
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [11347])
	*($1) = $5
	*($1 + [28]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$6 = CALL current_time()
	$12 = *($9 + [8])
	$5 = *($4 + [128])
	*($1 + [48]) = $5
	$15 = *($7)
	*(($1 + [56])) = $15
	*($1 + [64]) = $5
	*(($1 + [72])) = $15
	*(($1 + [44])) = ($12 + (CASTING uint_32)(uint_64 ((uint_64)$6 / (uint_64)(int_64)1000000)))
	CALL eosio_assert([1], [12862])
	$6 = (uint_64)$14 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$57:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$56 }
	$5 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$58 }
	$6 = $5
	$12 = [1]
	$13 = $7
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$58
	$6 = $5
	
.LOOP $label$59:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$56 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$12 = ((int_32)$7 < (int_32)[6])
	$13 = ($7 + [1])
	$7 = $13
	if ( $12 ){ goto $label$59 }
	$12 = [1]
	$7 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$56
	$12 = [0]
	
.LABEL $label$55
	CALL eosio_assert($12, [12911])
	*(($1 + [104])) = $14
	*($1 + [96]) = (int_64)0
	$7 = ($1 + [8])
	*(*($2 + [24])) = *($7)
	CALL eosio_assert(((int_64)$8 == (int_64)*($7)), [13518])
	$12 = $3
	$7 = ($12 + [-112])
	$global$0 = $7
	*($4 + [116]) = $7
	*($4 + [112]) = $7
	*($4 + [120]) = ($12 + [-4])
	CALL $25(($4 + [112]), $1)
	CALL db_update_i64(*($1 + [116]), (int_64)0, $7, [108])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$60 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$60
	*($4 + [176]) = *($1)
	if ( (CALL $204(($4 + [32]), ($4 + [176]), [8]) == 0) ){ goto $label$61 }
	$12 = ($1 + [120])
	$7 = *($12)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$62 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180416, ($4 + [128]), $8)
	*($12) = $7
	
.LABEL $label$62
	CALL db_idx64_update($7, (int_64)0, ($4 + [176]))
	
.LABEL $label$61
	*($4 + [176]) = *(($1 + [44]))
	if ( (CALL $204($18, ($4 + [176]), [8]) == 0) ){ goto $label$63 }
	$12 = ($1 + [124])
	$7 = *($12)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$64 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180415, ($4 + [128]), $8)
	*($12) = $7
	
.LABEL $label$64
	CALL db_idx64_update($7, (int_64)0, ($4 + [176]))
	
.LABEL $label$63
	$6 = *(($1 + [26]))
	*($4 + [184]) = ((int_64)$6 | (int_64)((int_64)*(($1 + [24])) << (int_64)8))
	$5 = *(($1 + [80]))
	*($4 + [176]) = ( (int_64))((int_64)0 - $5) ? $5 : (int_64)(((int_64)$6 ^ (int_64)4) == 0) )
	if ( (CALL $204($17, ($4 + [176]), [16]) == 0) ){ goto $label$65 }
	$12 = ($1 + [128])
	$7 = *($12)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$66 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180414, ($4 + [128]), $8)
	*($12) = $7
	
.LABEL $label$66
	CALL db_idx128_update($7, (int_64)0, ($4 + [176]))
	
.LABEL $label$65
	*($4 + [176]) = *(($1 + [16]))
	if ( (CALL $204($10, ($4 + [176]), [8]) == 0) ){ goto $label$67 }
	$12 = ($1 + [132])
	$7 = *($12)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$68 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180413, ($4 + [128]), $8)
	*($12) = $7
	
.LABEL $label$68
	CALL db_idx64_update($7, (int_64)0, ($4 + [176]))
	
.LABEL $label$67
	*($4 + [184]) = *(($1 + [16]))
	*($4 + [176]) = *(($1 + [26]))
	if ( (CALL $204($11, ($4 + [176]), [16]) == 0) ){ goto $label$69 }
	$12 = ($1 + [136])
	$7 = *($12)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$70 }
	$7 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180412, ($4 + [128]), $8)
	*($12) = $7
	
.LABEL $label$70
	CALL db_idx128_update($7, (int_64)0, ($4 + [176]))
	
.LABEL $label$69
	$global$0 = ($4 + [352])
	$7
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [13333])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$5 }
	$2 = CALL $207($4)
	CALL db_get_i64($1, $2, $4)
	CALL $210($2)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	CALL db_get_i64($1, $2, $4)
	
.LABEL $label$4
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [13356])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[8]), [13356])
	CALL memcpy(($5 + [8]), ($2 + [8]), [4])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $154(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $53 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_32 $22
	$4 = ($global$0 - [176])
	$global$0 = $4
	*($4 + [24]) = $1
	CALL require_auth($3)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)10), [11180])
	CALL eosio_assert(CALL eosio_assert7($1), [11202])
	CALL eosio_assert(CALL eosio_assert7($3), [11222])
	$5 = ($0 + [104])
	*($4 + [16]) = $5
	CALL $54(($4 + [8]), ($4 + [16]), ($4 + [24]))
	*($4 + [32]) = ((int_64)*($4 + [24]) + (int_64)1)
	CALL $55($4, ($4 + [16]), ($4 + [32]))
	$6 = *($4 + [8])
	*($4 + [32]) = $6
	$1 = (int_64)0
	$7 = (CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)32)
	if ( ($7) == 0) ){ goto $label$1 }
	if ( ((int_32)*($4 + [4]) == (int_32)$7) ){ goto $label$1 }
	$1 = (int_64)0
	
.LOOP $label$2:
	CALL eosio_assert(((int_64)*($7 + [16]) == (int_64)*($4 + [24])), [11244])
	$7 = *($4 + [36])
	$6 = *($7 + [16])
	CALL prints([11271])
	CALL printui(*($7 + [8]))
	CALL prints([11279])
	CALL printui(*($7 + [44]))
	CALL prints([11293])
	CALL printn($6)
	CALL prints([9194])
	$1 = ((int_64)$1 + (int_64)1)
	CALL $56(($4 + [32]))
	$7 = *($4 + [36])
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ((int_32)$7 != (int_32)*($4 + [4])) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)$2) <= (int_64)101), [11302])
	if ( (int_64)($2 == 0) ){ goto $label$3 }
	$8 = ($0 + [128])
	$9 = ($0 + [152])
	$10 = ($0 + [192])
	$11 = (($4 + [32]) + [108])
	$12 = ($0 + [104])
	$13 = ($0 + [208])
	$14 = (($4 + [144]) + [8])
	$15 = ($0 + [112])
	$16 = ($0 + [120])
	$17 = ($0 + [136])
	$18 = ($0 + [132])
	
.LOOP $label$4:
	CALL eosio_assert(((int_64)*($12) == (int_64)CALL $fimport$2()), [13626])
	$7 = CALL _Znwj([144])
	$19 = CALL $57($7)
	*($7 + [112]) = $5
	CALL $36($19)
	CALL eosio_assert(((int_64)*($13) != (int_64)-1), [11326])
	$1 = *($13)
	$6 = ((int_64)$1 + (int_64)1)
	*($13) = $6
	CALL $58($9, $10, *($0))
	CALL eosio_assert((uint_64)($1 <= (int_64)-2), [11347])
	*($7 + [8]) = $6
	*($7 + [16]) = *($4 + [24])
	*($14) = $11
	*($4 + [148]) = ($4 + [32])
	*($4 + [144]) = ($4 + [32])
	CALL $25(($4 + [144]), $19)
	$1 = *($7 + [8])
	*($7 + [116]) = CALL db_store_i64(*($15), (int_64)-6497942333781180416, $3, $1, ($4 + [32]), [108])
	if ( (uint_64)($1 <= *($16)) ){ goto $label$5 }
	*($16) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$19 = ($7 + [8])
	$1 = *($19)
	$6 = *($15)
	*($4 + [160]) = *($7)
	*($7 + [120]) = CALL db_idx64_store($6, (int_64)-6497942333781180416, $3, $1, ($4 + [160]))
	$1 = *($19)
	$6 = *($15)
	*($4 + [160]) = *($7 + [44])
	*($7 + [124]) = CALL db_idx64_store($6, (int_64)-6497942333781180415, $3, $1, ($4 + [160]))
	$1 = *($19)
	$6 = *($15)
	$20 = *($7 + [26])
	*($4 + [168]) = ((int_64)$20 | (int_64)((int_64)*($7 + [24]) << (int_64)8))
	$21 = *($7 + [80])
	*($4 + [160]) = ( (int_64))((int_64)0 - $21) ? $21 : (int_64)(((int_64)$20 ^ (int_64)4) == 0) )
	*($7 + [128]) = CALL db_idx128_store($6, (int_64)-6497942333781180414, $3, $1, ($4 + [160]))
	$1 = *($19)
	$6 = *($15)
	$22 = ($7 + [16])
	*($4 + [160]) = *($22)
	*($7 + [132]) = CALL db_idx64_store($6, (int_64)-6497942333781180413, $3, $1, ($4 + [160]))
	$1 = *($19)
	$6 = *($15)
	*($4 + [168]) = *($22)
	*($4 + [160]) = *($7 + [26])
	*($7 + [136]) = CALL db_idx128_store($6, (int_64)-6497942333781180412, $3, $1, ($4 + [160]))
	*($4 + [160]) = $7
	$1 = *($19)
	*($4 + [32]) = $1
	$22 = *(($7 + [116]))
	*($4 + [144]) = $22
	$19 = *($18)
	if ( ((uint_32)$19 >= (uint_32)*($17)) ){ goto $label$8 }
	*($19 + [8]) = $1
	*($19 + [16]) = $22
	*($4 + [160]) = [0]
	*($19) = $7
	*($18) = ($19 + [24])
	$7 = *($4 + [160])
	*($4 + [160]) = [0]
	if ( $7 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $59($8, ($4 + [160]), ($4 + [32]), ($4 + [144]))
	$7 = *($4 + [160])
	*($4 + [160]) = [0]
	if ( ($7 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv($7)
	
.LABEL $label$6
	$2 = ((int_64)$2 + (int_64)-1)
	if ( ((int_64)($2 == 0) == 0) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($4 + [176])
}

void .FUNC $54 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-6497942333781180413, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [8]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $18($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-6497942333781180416, $6))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [132])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_upperbound(*($2), *($2 + [8]), (int_64)-6497942333781180413, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [8]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $18($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-6497942333781180416, $6))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [132])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $56 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [13720])
	$2 = *($0 + [4])
	$3 = *(($2 + [132]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-6497942333781180413, ($1 + [8]), *($2 + [8]))
	*((*(($0 + [4])) + [132])) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = *($1 + [8])
	$2 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$6:
	$3 = ($2 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8 + [8]) == (int_64)$5) ){ goto $label$4 }
	$2 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($8 + [112]) == (int_32)$6), [13282])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL $18($6, CALL $fimport$0(*($6), *($6 + [8]), (int_64)-6497942333781180416, $5))
	CALL eosio_assert(((int_32)*($8 + [112]) == (int_32)$6), [13282])
	
.LABEL $label$2
	*(($0 + [4])) = $8
	*(($8 + [132])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $57 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [48]) = (int_64)0
	*(($1 = ($0 + [56]))) = (int_64)1397703940
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$5 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [72]))) = (int_64)1397703940
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$10 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [88]))) = (int_64)1397703940
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$15 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [104]))) = (int_64)1397703940
	*($0 + [96]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$2 = $3
	$6 = [1]
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$20
	$2 = $3
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$21 }
	$6 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	
.LABEL $label$19
	CALL eosio_assert($6, [12911])
	return $0
	
.LABEL $label$17
	CALL eosio_assert([0], [12911])
	return $0
	
.LABEL $label$16
	CALL eosio_assert([0], [12911])
	return $0
}

void .FUNC $173 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $152 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $153 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	$5 = ($global$0 - [16])
	$global$0 = $5
	$6 = *($2)
	CALL __multi3($5, $6, (int_64)$6 >> (int_64)63), $3, (int_64)$3 >> (int_64)63))
	$6 = *(($5 + [8]))
	$3 = *($5)
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$6 < (int_64)0) : (int_64)($6 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$6 > (int_64)-1) : ((int_64)$6 == (int_64)-1) ), [13014])
	CALL eosio_assert(((int_64)$3 > (int_64)0), [13079])
	*($0) = $3
	$6 = *($4)
	*($0 + [8]) = $6
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$3 = (uint_64)$6 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$3 = $6
	$4 = [1]
	$2 = $0
	$0 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$3 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$2 = ($0 + [1])
	$0 = $2
	if ( $4 ){ goto $label$5 }
	$4 = [1]
	$0 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [12911])
	$global$0 = ($5 + [16])
}

int_32 .FUNC $150 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)0
	*(($1 = ($0 + [16]))) = (int_64)1397703940
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$5 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [32]))) = (int_64)1397703940
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$10 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [48]))) = (int_64)1397703940
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$15 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [12911])
	*(($0 + [72])) = (int_64)0
	*($0 + [64]) = (int_64)0
	return $0
}

int_32 .FUNC $151 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $156 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *($8 + [48])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-2507752926491967488, $6, *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($9)
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [52]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-2507752926491967487, $6, *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($9)
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [56]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-2507752926491967486, $6, *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($9)
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [60]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-2507752926491967485, $6, *($8))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($9)
	
.LABEL $label$7
	$9 = *($0)
	$7 = *($9 + [4])
	$0 = *(($7 + [64]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$10 }
	$0 = *($9)
	$0 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-2507752926491967484, $6, *($7))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($0)
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $157 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$7 = ($global$0 - [16])
	$global$0 = $7
	$8 = *($0)
	$9 = *($8 + [4])
	$10 = *($9 + [192])
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$2 }
	$10 = *($8)
	$10 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)6291770479543096704, ($7 + [8]), *($9))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($10)
	
.LABEL $label$1
	$8 = *($0)
	$9 = *($8 + [4])
	$10 = *(($9 + [196]))
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$4 }
	$10 = *($8)
	$10 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)6291770479543096705, ($7 + [8]), *($9))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($10)
	
.LABEL $label$3
	$8 = *($0)
	$9 = *($8 + [4])
	$10 = *(($9 + [200]))
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$6 }
	$10 = *($8)
	$10 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)6291770479543096706, ($7 + [8]), *($9))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($10)
	
.LABEL $label$5
	$8 = *($0)
	$9 = *($8 + [4])
	$10 = *(($9 + [204]))
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$8 }
	$10 = *($8)
	$10 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)6291770479543096707, ($7 + [8]), *($9))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($10)
	
.LABEL $label$7
	$8 = *($0)
	$9 = *($8 + [4])
	$10 = *(($9 + [208]))
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$10 }
	$10 = *($8)
	$10 = CALL db_idx64_find_primary(*($10), *($10 + [8]), (int_64)6291770479543096708, ($7 + [8]), *($9))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx64_remove($10)
	
.LABEL $label$9
	$10 = *($0)
	$8 = *($10 + [4])
	$0 = *(($8 + [212]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$12 }
	$0 = *($10)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096709, ($7 + [8]), *($8))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$11 }
	
.LABEL $label$12
	CALL db_idx64_remove($0)
	
.LABEL $label$11
	$global$0 = ($7 + [16])
}

void .FUNC $154 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $155 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$6 = ($global$0 - [16])
	$global$0 = $6
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *($8 + [120])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$2 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-6497942333781180416, $6, *($8 + [8]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($9)
	
.LABEL $label$1
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [124]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$4 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-6497942333781180415, $6, *($8 + [8]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($9)
	
.LABEL $label$3
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [128]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$6 }
	$9 = *($7)
	$9 = CALL db_idx128_find_primary(*($9), *($9 + [8]), (int_64)-6497942333781180414, $6, *($8 + [8]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx128_remove($9)
	
.LABEL $label$5
	$7 = *($0)
	$8 = *($7 + [4])
	$9 = *(($8 + [132]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$8 }
	$9 = *($7)
	$9 = CALL db_idx64_find_primary(*($9), *($9 + [8]), (int_64)-6497942333781180413, $6, *($8 + [8]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($9)
	
.LABEL $label$7
	$9 = *($0)
	$7 = *($9 + [4])
	$0 = *(($7 + [136]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$10 }
	$0 = *($9)
	$0 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-6497942333781180412, $6, *($7 + [8]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$9 }
	
.LABEL $label$10
	CALL db_idx128_remove($0)
	
.LABEL $label$9
	$global$0 = ($6 + [16])
}

void .FUNC $158 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [16])
	$global$0 = $5
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *($7 + [184])
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$2 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)6291769033721118720, $5, *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($8)
	
.LABEL $label$1
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *(($7 + [188]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$4 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)6291769033721118721, $5, *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($8)
	
.LABEL $label$3
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *(($7 + [192]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$6 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)6291769033721118722, $5, *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($8)
	
.LABEL $label$5
	$8 = *($0)
	$6 = *($8 + [4])
	$0 = *(($6 + [196]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$8 }
	$0 = *($8)
	$0 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)6291769033721118723, $5, *($6))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx128_remove($0)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

int_32 .FUNC $159 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [68]), ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [13901])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-7119375476711227392)
	CALL eosio_assert(((int_32)$2 != (int_32)[-1]), [13847])
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [13847])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $93(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $179 (int_32 $0)
{
	return (($0 + [-48]) <= [10])
}

int_32 .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [12]) = $1
	$1 = CALL $200(*([0] + [24160]), $0, $1)
	$global$0 = ($2 + [16])
	return $1
}

int_32 .FUNC $69 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [32]) = (int_64)0
	*(($1 = ($0 + [40]))) = (int_64)1397703940
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$5 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [56]))) = (int_64)1397703940
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$10 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [72]))) = (int_64)1397703940
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$15 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [88]))) = (int_64)1397703940
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$2 = $3
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$20 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$4 = [0]
	
.LABEL $label$16
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [104]))) = (int_64)1397703940
	*($0 + [96]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$2 = $3
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$25 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$4 = [0]
	
.LABEL $label$21
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [120]))) = (int_64)1397703940
	*($0 + [112]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$29
	$2 = $3
	
.LOOP $label$30:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$27 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$30 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$4 = [0]
	
.LABEL $label$26
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [136]))) = (int_64)1397703940
	*($0 + [128]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$34
	$2 = $3
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$35 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$4 = [0]
	
.LABEL $label$31
	CALL eosio_assert($4, [12911])
	*(($1 = ($0 + [160]))) = (int_64)1397703940
	*($0 + [152]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (uint_64)*($1) >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$40 }
	$2 = $3
	$6 = [1]
	$4 = $1
	$1 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$40
	$2 = $3
	
.LOOP $label$41:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$37 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$41 }
	$6 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$38 }
	
.LABEL $label$39
	CALL eosio_assert($6, [12911])
	return $0
	
.LABEL $label$37
	CALL eosio_assert([0], [12911])
	return $0
	
.LABEL $label$36
	CALL eosio_assert([0], [12911])
	return $0
}

void .FUNC $68 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $65 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx128_upperbound(*($2), *($2 + [8]), (int_64)6291769033721118723, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [176]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $7($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)6291769033721118720, $6))
	CALL eosio_assert(((int_32)*($4 + [176]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [196])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $64 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx128_lowerbound(*($2), *($2 + [8]), (int_64)6291769033721118723, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [176]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $7($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)6291769033721118720, $6))
	CALL eosio_assert(((int_32)*($4 + [176]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [196])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	$7 = ($6 + [224])
	CALL eosio_assert((uint_64)(*($7) <= (int_64)65535), [14260])
	$8 = (int_64)1
	*($7) = ((int_64)*($7) + (int_64)1)
	CALL $58(($6 + [152]), ($6 + [192]), *($6))
	*($1) = *($7)
	*($1 + [8]) = *(*($5 + [4]))
	$7 = *($5 + [8])
	*(($1 + [24])) = *(($7 + [8]))
	*($1 + [16]) = *($7)
	$7 = *($5 + [12])
	*($1 + [32]) = *($7)
	*(($1 + [40])) = *(($7 + [8]))
	$7 = *(*($5 + [8]))
	CALL eosio_assert(($7 <= [19]), [8561])
	$9 = (int_64)1
	if ( ($7 == 0) ){ goto $label$1 }
	$9 = (int_64)1
	
.LOOP $label$2:
	if ( (uint_64)($9 <= (int_64)1844674407370955162) ){ goto $label$3 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$3
	$9 = ((int_64)$9 * (int_64)10)
	$7 = ($7 + [-1])
	if ( ($7 & [255]) ){ goto $label$2 }
	
.LABEL $label$1
	*($1 + [48]) = $9
	$7 = *(*(($5 + [12])))
	CALL eosio_assert(($7 <= [19]), [8561])
	if ( ($7 == 0) ){ goto $label$4 }
	$8 = (int_64)1
	
.LOOP $label$5:
	if ( (uint_64)($8 <= (int_64)1844674407370955162) ){ goto $label$6 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$6
	$8 = ((int_64)$8 * (int_64)10)
	$7 = ($7 + [-1])
	if ( ($7 & [255]) ){ goto $label$5 }
	
.LABEL $label$4
	*($1 + [56]) = $8
	*($1 + [64]) = *(*($5 + [16]))
	$8 = CALL current_time()
	*($1 + [76]) = [0]
	*($1 + [80]) = [0]
	*($1 + [72]) = ((uint_64)$8 / (uint_64)(int_64)1000000)
	if ( ((int_64)*(*(($5 + [4]))) != (int_64)*(($6 + [256]))) ){ goto $label$8 }
	*($1 + [96]) = (int_64)10000000000
	*(($1 + [88])) = (int_64)1000
	CALL eosio_assert([1], [14284])
	goto $label$7 
	
.LABEL $label$8
	*($1 + [96]) = (int_64)0
	*(($1 + [88])) = (int_64)0
	
.LABEL $label$7
	*($1 + [160]) = (int_64)0
	*($1 + [168]) = (int_64)0
	*($1 + [152]) = (int_64)0
	*($1 + [144]) = (int_64)0
	$5 = $2
	$7 = ($5 + [-176])
	$global$0 = $7
	*($3 + [4]) = $7
	*($3) = $7
	*($3 + [8]) = ($5 + [-15])
	CALL $47($3, $1)
	$8 = *($1)
	*($1 + [180]) = CALL db_store_i64(*($4 + [8]), (int_64)6291769033721118720, *(*($0 + [8])), $8, $7, [161])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$9 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$7 = ($4 + [8])
	$8 = *($7)
	$5 = *(($0 + [8]))
	$9 = *($5)
	$10 = *($1)
	*($3 + [16]) = (uint_64)*($1 + [16]) >> (uint_64)(int_64)8)
	*($1 + [184]) = CALL db_idx64_store($8, (int_64)6291769033721118720, $9, $10, ($3 + [16]))
	$8 = *($5)
	$9 = *($7)
	$10 = *($1)
	*($3 + [16]) = (uint_64)*($1 + [32]) >> (uint_64)(int_64)8)
	*(($1 + [188])) = CALL db_idx64_store($9, (int_64)6291769033721118721, $8, $10, ($3 + [16]))
	$8 = *($5)
	$9 = *($7)
	$10 = *($1)
	*($3 + [16]) = *(($1 + [80]))
	*(($1 + [192])) = CALL db_idx64_store($9, (int_64)6291769033721118722, $8, $10, ($3 + [16]))
	$8 = *($5)
	$9 = *($7)
	$10 = *($1)
	*($3 + [24]) = *($1 + [16])
	*($3 + [16]) = *($1 + [32])
	*(($1 + [196])) = CALL db_idx128_store($9, (int_64)6291769033721118723, $8, $10, ($3 + [16]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $66 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [13720])
	$2 = *($0 + [4])
	$3 = *(($2 + [196]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	$3 = *(*($0))
	$3 = CALL db_idx128_find_primary(*($3), *($3 + [8]), (int_64)6291769033721118723, $1, *($2))
	*((*(($0 + [4])) + [196])) = $3
	
.LABEL $label$1
	*($1) = (int_64)0
	$4 = CALL db_idx128_next($3, $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = *($1)
	$2 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$6:
	$3 = ($2 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$4 }
	$2 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$6), [13282])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL $7($6, CALL $fimport$0(*($6), *($6 + [8]), (int_64)6291769033721118720, $5))
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$6), [13282])
	
.LABEL $label$2
	*(($0 + [4])) = $8
	*(($8 + [196])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $61 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [192])
	$global$0 = $4
	CALL eosio_assert(((int_32)*($1 + [176]) == (int_32)$0), [13421])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [13467])
	$1 = CALL memcpy($1, *($3), [176])
	CALL eosio_assert([1], [13518])
	*($4 + [184]) = ($4 + [173])
	*($4 + [180]) = $4
	*($4 + [176]) = $4
	CALL $144(($4 + [176]), $1)
	CALL db_update_i64(*($1 + [180]), $2, $4, [173])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$1 }
	*(($0 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$1
	$global$0 = ($4 + [192])
}

int_32 .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [13333])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $207($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $210($4)
	
.LABEL $label$6
	*(($5 = CALL _Znwj([192])) + [176]) = $0
	CALL $138(($3 + [32]), $5)
	*($5 + [180]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)7235159537265672192
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = (int_64)7235159537265672192
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $139(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $63 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_32 $15
	$5 = ($global$0 - [144])
	$global$0 = $5
	*($5 + [88]) = $4
	$6 = *(($0 + [248]))
	*($5 + [96]) = $1
	CALL require_auth($6)
	CALL eosio_assert(CALL eosio_assert7($1), [11368])
	$7 = *($2 + [8])
	CALL eosio_assert(((int_64)$7 != (int_64)$1), [11400])
	$8 = *($3 + [8])
	CALL eosio_assert(((int_64)$8 != (int_64)$1), [11441])
	CALL eosio_assert(((int_64)*($0) != (int_64)$1), [11481])
	$9 = *($2)
	$1 = (uint_64)$9 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $6
	$11 = [1]
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$1 = $6
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$11 = ((int_32)$10 < (int_32)[6])
	$12 = ($10 + [1])
	$10 = $12
	if ( $11 ){ goto $label$5 }
	$11 = [1]
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$11 = [0]
	
.LABEL $label$1
	CALL eosio_assert($11, [11508])
	$13 = *($3)
	$1 = (uint_64)$13 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$6 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$1 = $6
	$11 = [1]
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$1 = $6
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$11 = ((int_32)$10 < (int_32)[6])
	$12 = ($10 + [1])
	$10 = $12
	if ( $11 ){ goto $label$10 }
	$11 = [1]
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$11 = [0]
	
.LABEL $label$6
	CALL eosio_assert($11, [11532])
	CALL eosio_assert(CALL eosio_assert7($7), [11555])
	CALL eosio_assert(CALL eosio_assert7($8), [11581])
	CALL eosio_assert((((int_64)$7 != (int_64)$8) | ((int_64)$9 != (int_64)$13)), [11606])
	$10 = [0]
	if ( ((uint_64)((int_64)$4 + (int_64)-1) > (uint_64)(int_64)99999999) ){ goto $label$11 }
	$10 = [1]
	if ( ((int_64)$4 == (int_64)1) ){ goto $label$11 }
	$10 = (((uint_32)(CASTING uint_32)(uint_64 $4) % (uint_32)[10]) == 0)
	
.LABEL $label$11
	CALL eosio_assert($10, [11648])
	*($5 + [72]) = $9
	*($5 + [64]) = $13
	$14 = ($0 + [16])
	*($5 + [56]) = $14
	CALL $64(($5 + [48]), ($5 + [56]), ($5 + [64]))
	$1 = *($5 + [64])
	$6 = ((int_64)$1 + (int_64)1)
	*($5 + [16]) = $6
	*($5 + [24]) = ((int_64)*($5 + [72]) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($6 <= $1)))
	CALL $65(($5 + [40]), ($5 + [56]), ($5 + [16]))
	$1 = *($5 + [48])
	*($5 + [16]) = $1
	$10 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ($10) == 0) ){ goto $label$14 }
	if ( ((int_32)*($5 + [44]) == (int_32)$10) ){ goto $label$13 }
	$12 = ($2 + [8])
	$11 = [0]
	if ( ((int_64)*($10 + [16]) != (int_64)$9) ){ goto $label$15 }
	$15 = [12]
	goto $label$12 
	
.LABEL $label$15
	$15 = [0]
	goto $label$12 
	
.LABEL $label$14
	$15 = [1]
	goto $label$12 
	
.LABEL $label$13
	$15 = [1]
	
.LABEL $label$12
	
.LOOP $label$16:
	goto $label$41 
	
.LABEL $label$45
	if ( ((int_64)*(($10 + [24])) != (int_64)*($12)) ){ goto $label$27 }
	$15 = [13]
	goto $label$16 
	
.LABEL $label$44
	if ( ((int_64)*($10 + [32]) != (int_64)*($3)) ){ goto $label$29 }
	$15 = [14]
	goto $label$16 
	
.LABEL $label$43
	$11 = ((int_64)*(($10 + [40])) == (int_64)*(($3 + [8])))
	goto $label$28 
	
.LABEL $label$42
	$11 = [0]
	if ( ((int_64)*($10 + [16]) == (int_64)*($2)) ){ goto $label$26 }
	$15 = [0]
	goto $label$16 
	
.LABEL $label$41
	CALL eosio_assert(((int_32)$11 ^ (int_32)[1]), [11662])
	CALL $66(($5 + [16]))
	$10 = *($5 + [20])
	if ( ($10 == 0) ){ goto $label$30 }
	$15 = [10]
	goto $label$16 
	
.LABEL $label$40
	if ( ((int_32)$10 != (int_32)*($5 + [44])) ){ goto $label$25 }
	$15 = [1]
	goto $label$16 
	
.LABEL $label$39
	$1 = *($0)
	*($5 + [16]) = $0
	*($5 + [24]) = $2
	*($5 + [28]) = $3
	*($5 + [20]) = ($5 + [96])
	*($5 + [32]) = ($5 + [88])
	*($5 + [112]) = $1
	CALL eosio_assert(((int_64)*($14) == (int_64)CALL $fimport$2()), [13626])
	*($5) = $14
	*($5 + [4]) = ($5 + [16])
	*($5 + [8]) = ($5 + [112])
	*(($10 = CALL _Znwj([208])) + [24]) = (int_64)0
	*($10 + [16]) = (int_64)0
	*($10 + [32]) = (int_64)0
	*($10 + [40]) = (int_64)0
	*($10 + [176]) = $14
	CALL $67($5, $10)
	*($5 + [136]) = $10
	$1 = *($10)
	*($5) = $1
	$12 = *($10 + [180])
	*($5 + [128]) = $12
	$14 = ($0 + [44])
	$11 = *($14)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [48]))) ){ goto $label$24 }
	$15 = [9]
	goto $label$16 
	
.LABEL $label$38
	*($11 + [8]) = $1
	*($11 + [16]) = $12
	*($5 + [136]) = [0]
	*($11) = $10
	*($14) = ($11 + [24])
	$10 = *($5 + [136])
	*($5 + [136]) = [0]
	if ( $10 ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$37
	CALL $68(($0 + [40]), ($5 + [136]), $5, ($5 + [128]))
	$10 = *($5 + [136])
	*($5 + [136]) = [0]
	if ( ($10 == 0) ){ goto $label$23 }
	$15 = [3]
	goto $label$16 
	
.LABEL $label$36
	CALL _ZdlPv($10)
	$15 = [4]
	goto $label$16 
	
.LABEL $label$35
	CALL $1($5, *($0), $2)
	$1 = *($0)
	*($5 + [20]) = $3
	*($5 + [16]) = $0
	*($5 + [28]) = $2
	*($5 + [24]) = ($5 + [88])
	*($5 + [32]) = $5
	*($5 + [136]) = $1
	CALL eosio_assert(((int_64)*($0 + [56]) == (int_64)CALL $fimport$2()), [13626])
	$11 = ($0 + [56])
	*($5 + [112]) = $11
	*($5 + [116]) = ($5 + [16])
	*($5 + [120]) = ($5 + [136])
	$10 = CALL _Znwj([216])
	CALL $69($10)
	*($10 + [184]) = $11
	CALL $70(($5 + [112]), $10)
	*($5 + [128]) = $10
	$1 = *($10)
	*($5 + [112]) = $1
	$12 = *($10 + [188])
	*($5 + [108]) = $12
	$14 = ($0 + [84])
	$11 = *($14)
	if ( ((uint_32)$11 >= (uint_32)*(($0 + [88]))) ){ goto $label$20 }
	$15 = [8]
	goto $label$16 
	
.LABEL $label$34
	*($11 + [8]) = $1
	*($11 + [16]) = $12
	*($5 + [128]) = [0]
	*($11) = $10
	*($14) = ($11 + [24])
	$10 = *($5 + [128])
	*($5 + [128]) = [0]
	if ( $10 ){ goto $label$17 }
	goto $label$18 
	
.LABEL $label$33
	CALL $71(($0 + [80]), ($5 + [128]), ($5 + [112]), ($5 + [108]))
	$10 = *($5 + [128])
	*($5 + [128]) = [0]
	if ( ($10 == 0) ){ goto $label$19 }
	$15 = [6]
	goto $label$16 
	
.LABEL $label$32
	CALL _ZdlPv($10)
	$15 = [7]
	goto $label$16 
	
.LABEL $label$31
	CALL prints([11684])
	CALL $72($2, [1])
	CALL prints([14308])
	CALL printn(*(($2 + [8])))
	CALL prints([11707])
	CALL $72($3, [1])
	CALL prints([14308])
	CALL printn(*(($3 + [8])))
	CALL prints([11709])
	CALL printui(*($5 + [96]))
	$global$0 = ($5 + [144])
	return 
	
.LABEL $label$30
	$15 = [1]
	goto $label$16 
	
.LABEL $label$29
	$15 = [0]
	goto $label$16 
	
.LABEL $label$28
	$15 = [0]
	goto $label$16 
	
.LABEL $label$27
	$15 = [0]
	goto $label$16 
	
.LABEL $label$26
	$15 = [12]
	goto $label$16 
	
.LABEL $label$25
	$15 = [11]
	goto $label$16 
	
.LABEL $label$24
	$15 = [2]
	goto $label$16 
	
.LABEL $label$23
	$15 = [4]
	goto $label$16 
	
.LABEL $label$22
	$15 = [4]
	goto $label$16 
	
.LABEL $label$21
	$15 = [3]
	goto $label$16 
	
.LABEL $label$20
	$15 = [5]
	goto $label$16 
	
.LABEL $label$19
	$15 = [7]
	goto $label$16 
	
.LABEL $label$18
	$15 = [7]
	goto $label$16 
	
.LABEL $label$17
	$15 = [6]
	goto $label$16 
	$15
}

void .FUNC $62 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [208])
	$global$0 = $4
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$2()), [13626])
	*(($5 = CALL _Znwj([192])) + [176]) = $1
	$3 = CALL memcpy($5, *($3), [176])
	*($4 + [200]) = (($4 + [16]) + [173])
	*($4 + [196]) = ($4 + [16])
	*($4 + [192]) = ($4 + [16])
	CALL $144(($4 + [192]), $3)
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)7235159537265672192, $2, (int_64)7235159537265672192, ($4 + [16]), [173])
	*($3 + [180]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)7235159537265672192) ){ goto $label$1 }
	*(($1 + [16])) = (int_64)7235159537265672193
	
.LABEL $label$1
	*($4 + [192]) = $3
	*($4 + [16]) = (int_64)7235159537265672192
	*($4 + [12]) = $6
	$7 = ($1 + [28])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($5 + [8]) = (int_64)7235159537265672192
	*($5 + [16]) = $6
	*($4 + [192]) = [0]
	*($5) = $3
	*($7) = ($5 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $139(($1 + [24]), ($4 + [192]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [192])
	*($4 + [192]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($4 + [208])
}

void .FUNC $1 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = [0]
	*(($3 + [40])) = [0]
	*($3 + [24]) = (int_64)-1
	*($3 + [32]) = (int_64)0
	$5 = *($2 + [8])
	*($3 + [8]) = $5
	$6 = *($2)
	*($3 + [16]) = $1
	$7 = [0]
	$8 = CALL db_find_i64($5, $1, (int_64)3607749779137757184, (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_32)$8) < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $2(($3 + [8]), $8)
	CALL eosio_assert(((int_32)*($7 + [16]) == (int_32)($3 + [8])), [13282])
	
.LABEL $label$1
	*($0) = (int_64)0
	$1 = *($2)
	*($0 + [8]) = $1
	CALL eosio_assert([1], [12862])
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	
.LOOP $label$3:
	$9 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$1 = $5
	$9 = [1]
	$2 = $4
	$4 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$1 = $5
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$8 = ($4 + [1])
	$4 = $8
	if ( $2 ){ goto $label$5 }
	$9 = [1]
	$4 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$3 }
	
.LABEL $label$2
	CALL eosio_assert($9, [12911])
	if ( ($7 == 0) ){ goto $label$6 }
	*($0) = *($7)
	*(($0 + [8])) = *(($7 + [8]))
	
.LABEL $label$6
	$8 = *($3 + [32])
	if ( ($8 == 0) ){ goto $label$7 }
	$9 = ($3 + [36])
	$4 = *($9)
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($3 + [32]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $8
	
.LABEL $label$8
	*($9) = $8
	CALL _ZdlPv($4)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
}

int_64 .FUNC $89 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)6291769033721118720, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $7($0, $4)
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	$3 = (int_64)0
	
.LOOP $label$2:
	$5 = [0]
	$6 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($6, [14340])
	CALL eosio_assert($6, [13720])
	$6 = CALL db_next_i64(*($4 + [180]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $7($0, $6)
	
.LABEL $label$3
	CALL $96($0, $4)
	$3 = ((int_64)$3 + (int_64)1)
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = $5
	if ( (uint_64)($3 <= $1) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = [14522]
	$5 = *([14522])
	if ( ($5 == 0) ){ goto $label$4 }
	
.LOOP $label$6:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$5 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$6 
	
.LABEL $label$5
	CALL printui($3)
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	
.LOOP $label$8:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$7 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$8 
	
.LABEL $label$7
	CALL printn((int_64)6291769033721118720)
	CALL prints(($4 + [1]))
	
.LABEL $label$4
	$global$0 = ($2 + [16])
	return $3
}

int_64 .FUNC $88 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)6291770479543096704, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $8($0, $4)
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	$3 = (int_64)0
	
.LOOP $label$2:
	$5 = [0]
	$6 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($6, [14340])
	CALL eosio_assert($6, [13720])
	$6 = CALL db_next_i64(*($4 + [188]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $8($0, $6)
	
.LABEL $label$3
	CALL $95($0, $4)
	$3 = ((int_64)$3 + (int_64)1)
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = $5
	if ( (uint_64)($3 <= $1) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = [14522]
	$5 = *([14522])
	if ( ($5 == 0) ){ goto $label$4 }
	
.LOOP $label$6:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$5 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$6 
	
.LABEL $label$5
	CALL printui($3)
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	
.LOOP $label$8:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$7 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$8 
	
.LABEL $label$7
	CALL printn((int_64)6291770479543096704)
	CALL prints(($4 + [1]))
	
.LABEL $label$4
	$global$0 = ($2 + [16])
	return $3
}

int_64 .FUNC $87 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)-7119375476711227392, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $93($0, $4)
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	$3 = (int_64)0
	
.LOOP $label$2:
	$5 = [0]
	$6 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($6, [14340])
	CALL eosio_assert($6, [13720])
	$6 = CALL db_next_i64(*($4 + [68]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $93($0, $6)
	
.LABEL $label$3
	CALL $94($0, $4)
	$3 = ((int_64)$3 + (int_64)1)
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = $5
	if ( (uint_64)($3 <= $1) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = [14522]
	$5 = *([14522])
	if ( ($5 == 0) ){ goto $label$4 }
	
.LOOP $label$6:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$5 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$6 
	
.LABEL $label$5
	CALL printui($3)
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	
.LOOP $label$8:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$7 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$8 
	
.LABEL $label$7
	CALL printn((int_64)-7119375476711227392)
	CALL prints(($4 + [1]))
	
.LABEL $label$4
	$global$0 = ($2 + [16])
	return $3
}

int_64 .FUNC $86 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (int_64)0
	$4 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)-2507752926491967488, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $91($0, $4)
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	$3 = (int_64)0
	
.LOOP $label$2:
	$5 = [0]
	$6 = ((int_32)$4 != (int_32)[0])
	CALL eosio_assert($6, [14340])
	CALL eosio_assert($6, [13720])
	$6 = CALL db_next_i64(*($4 + [44]), ($2 + [8]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$5 = CALL $91($0, $6)
	
.LABEL $label$3
	CALL $92($0, $4)
	$3 = ((int_64)$3 + (int_64)1)
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = $5
	if ( (uint_64)($3 <= $1) ){ goto $label$2 }
	
.LABEL $label$1
	$4 = [14522]
	$5 = *([14522])
	if ( ($5 == 0) ){ goto $label$4 }
	
.LOOP $label$6:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$5 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$6 
	
.LABEL $label$5
	CALL printui($3)
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	
.LOOP $label$8:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$7 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$5 = *($4)
	if ( ($5 == 0) ){ goto $label$4 }
	goto $label$8 
	
.LABEL $label$7
	CALL printn((int_64)-2507752926491967488)
	CALL prints(($4 + [1]))
	
.LABEL $label$4
	$global$0 = ($2 + [16])
	return $3
}

int_32 .FUNC $85 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [13720])
	$2 = *($0 + [4])
	$3 = *(($2 + [192]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)6291769033721118722, ($1 + [8]), *($2))
	*((*(($0 + [4])) + [192])) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = *($1 + [8])
	$2 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$6:
	$3 = ($2 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$4 }
	$2 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$6), [13282])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL $7($6, CALL $fimport$0(*($6), *($6 + [8]), (int_64)6291769033721118720, $5))
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$6), [13282])
	
.LABEL $label$2
	*(($0 + [4])) = $8
	*(($8 + [192])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)6291769033721118722, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [176]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $7($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)6291769033721118720, $6))
	CALL eosio_assert(((int_32)*($4 + [176]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [192])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $83 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [288])
	$global$0 = $2
	CALL require_auth(*($0))
	CALL eosio_assert((*(($0 + [204])) == 0), [12355])
	$3 = ($0 + [16])
	*($2 + [8]) = $3
	*($2 + [208]) = (int_64)1
	CALL $84(($2 + [16]), ($2 + [8]), ($2 + [208]))
	$4 = *($2 + [20])
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_64)*($2 + [208]) != (int_64)*($4 + [80])) ){ goto $label$4 }
	$5 = *($2 + [16])
	*($2) = $5
	if ( (uint_64)($5 <= (int_64)4294967296) ){ goto $label$3 }
	$6 = (($2 + [16]) + [161])
	$7 = (($2 + [208]) + [32])
	$8 = (($2 + [208]) + [16])
	$9 = (($2 + [208]) | [8])
	$10 = ($2 + [248])
	$11 = (int_64)1
	
.LOOP $label$5:
	$1 = *($2 + [4])
	CALL $85($2)
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [13386])
	$4 = *($2 + [8])
	CALL eosio_assert(((int_32)*($1 + [176]) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*($4) == (int_64)CALL $fimport$2()), [13467])
	$0 = ($1 + [16])
	$5 = *($0)
	*($10) = $5
	$3 = ($1 + [32])
	$12 = *($3)
	*($7) = $12
	$13 = ($1 + [80])
	*($8) = *($13)
	*($13) = [2]
	*($2 + [208]) = (uint_64)$5 >> (uint_64)(int_64)8)
	*($2 + [216]) = (uint_64)$12 >> (uint_64)(int_64)8)
	$5 = *($1)
	*($1 + [76]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [13518])
	*((($2 + [192]) + [8])) = $6
	*($2 + [196]) = ($2 + [16])
	*($2 + [192]) = ($2 + [16])
	CALL $47(($2 + [192]), $1)
	CALL db_update_i64(*($1 + [180]), (int_64)0, ($2 + [16]), [161])
	if ( (uint_64)($5 <= *($4 + [16])) ){ goto $label$6 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($2 + [272]) = (uint_64)*($0) >> (uint_64)(int_64)8)
	if ( (CALL $204(($2 + [208]), ($2 + [272]), [8]) == 0) ){ goto $label$7 }
	$14 = ($1 + [184])
	$15 = *($14)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$8 }
	$15 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)6291769033721118720, ($2 + [256]), $5)
	*($14) = $15
	
.LABEL $label$8
	CALL db_idx64_update($15, (int_64)0, ($2 + [272]))
	
.LABEL $label$7
	*($2 + [272]) = (uint_64)*($3) >> (uint_64)(int_64)8)
	if ( (CALL $204($9, ($2 + [272]), [8]) == 0) ){ goto $label$9 }
	$14 = ($1 + [188])
	$15 = *($14)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$10 }
	$15 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)6291769033721118721, ($2 + [256]), $5)
	*($14) = $15
	
.LABEL $label$10
	CALL db_idx64_update($15, (int_64)0, ($2 + [272]))
	
.LABEL $label$9
	*($2 + [272]) = *($13)
	if ( (CALL $204($8, ($2 + [272]), [8]) == 0) ){ goto $label$11 }
	$15 = ($1 + [192])
	$13 = *($15)
	if ( ((int_32)$13 > (int_32)[-1]) ){ goto $label$12 }
	$13 = CALL db_idx64_find_primary(*($4), *($4 + [8]), (int_64)6291769033721118722, ($2 + [256]), $5)
	*($15) = $13
	
.LABEL $label$12
	CALL db_idx64_update($13, (int_64)0, ($2 + [272]))
	
.LABEL $label$11
	*($2 + [280]) = *($0)
	*($2 + [272]) = *($3)
	if ( (CALL $204($7, ($2 + [272]), [16]) == 0) ){ goto $label$13 }
	$0 = ($1 + [196])
	$1 = *($0)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$14 }
	$1 = CALL db_idx128_find_primary(*($4), *($4 + [8]), (int_64)6291769033721118723, ($2 + [256]), $5)
	*($0) = $1
	
.LABEL $label$14
	CALL db_idx128_update($1, (int_64)0, ($2 + [272]))
	
.LABEL $label$13
	if ( ((uint_64)$11 > (uint_64)(int_64)9) ){ goto $label$2 }
	$11 = ((int_64)$11 + (int_64)1)
	if ( *($2 + [4]) ){ goto $label$5 }
	goto $label$2 
	
.LABEL $label$4
	*($2 + [4]) = [0]
	*($2) = ($2 + [8])
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$2 }
	$4 = CALL db_lowerbound_i64(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118720, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$15 }
	CALL $7($3, $4)
	
.LABEL $label$15
	*(($2 + [48])) = (int_64)0
	*(($2 + [56])) = [0]
	*($2 + [32]) = (int_64)-1
	*($2 + [40]) = (int_64)0
	$5 = *($0)
	*($2 + [16]) = $5
	*($2 + [24]) = $5
	$5 = CALL $86(($2 + [16]), (int_64)10)
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$16 }
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$16 }
	$4 = CALL db_lowerbound_i64(*($0 + [104]), *(($0 + [112])), (int_64)-6497942333781180416, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$17 }
	$13 = ($0 + [104])
	$1 = CALL $18($13, $4)
	$5 = (int_64)1
	
.LOOP $label$18:
	$11 = *($1 + [16])
	CALL prints([11271])
	CALL printui(*($1 + [8]))
	CALL prints([11279])
	CALL printui(*($1 + [44]))
	CALL prints([11293])
	CALL printn($11)
	CALL prints([9194])
	if ( (*($1 + [26]) == 0) ){ goto $label$19 }
	CALL $40($0, *($0), *($1))
	
.LABEL $label$19
	$4 = [0]
	$3 = ((int_32)$1 != (int_32)[0])
	CALL eosio_assert($3, [14340])
	CALL eosio_assert($3, [13720])
	$3 = CALL db_next_i64(*($1 + [116]), ($2 + [208]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$20 }
	$4 = CALL $18($13, $3)
	
.LABEL $label$20
	CALL $81($13, $1)
	if ( ($4 == 0) ){ goto $label$16 }
	$3 = (uint_64)($5 <= (int_64)10)
	$5 = ((int_64)$5 + (int_64)1)
	$1 = $4
	if ( $3 ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$1 == (int_32)[3]) ){ goto $label$16 }
	*(($2 + [240])) = [0]
	*($2 + [224]) = (int_64)-1
	*($2 + [232]) = (int_64)0
	*($2 + [244]) = [0]
	$5 = *($0)
	*($2 + [208]) = $5
	*($2 + [216]) = $5
	$5 = CALL $87(($2 + [208]), (int_64)10)
	if ( ((int_32)$1 == (int_32)[4]) ){ goto $label$21 }
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$21 }
	$5 = CALL $88(($0 + [56]), (int_64)10)
	if ( ((int_32)$1 == (int_32)[5]) ){ goto $label$21 }
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$21 }
	$5 = CALL $89($3, (int_64)10)
	if ( ((int_32)$1 == (int_32)[6]) ){ goto $label$21 }
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$1 }
	
.LABEL $label$21
	$0 = *($2 + [232])
	if ( ($0 == 0) ){ goto $label$16 }
	$3 = ($2 + [236])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$23 }
	
.LOOP $label$24:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$25 }
	CALL _ZdlPv($4)
	
.LABEL $label$25
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$24 }
	$1 = *(($2 + [232]))
	goto $label$22 
	
.LABEL $label$23
	$1 = $0
	
.LABEL $label$22
	*($3) = $0
	CALL _ZdlPv($1)
	
.LABEL $label$16
	$0 = *($2 + [40])
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = ($2 + [44])
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$0) ){ goto $label$27 }
	
.LOOP $label$28:
	$1 = ($1 + [-24])
	$4 = *($1)
	*($1) = [0]
	if ( ($4 == 0) ){ goto $label$29 }
	CALL _ZdlPv($4)
	
.LABEL $label$29
	if ( ((int_32)$0 != (int_32)$1) ){ goto $label$28 }
	$1 = *(($2 + [40]))
	goto $label$26 
	
.LABEL $label$27
	$1 = $0
	
.LABEL $label$26
	*($3) = $0
	CALL _ZdlPv($1)
	
.LABEL $label$2
	$global$0 = ($2 + [288])
	return (unreachable)
	
.LABEL $label$1
	CALL $90(($0 + [152]))
	CALL eosio_exit([0])
}

void .FUNC $82 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = *(($0 + [240]))
	CALL require_auth($4)
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)-1) <= (int_64)65534), [11890])
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)10), [12180])
	$5 = ($0 + [16])
	$7 = *(($0 + [44]))
	$6 = *(($0 + [40]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($9 + [176]) == (int_32)$5), [13282])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [24])), (int_64)6291769033721118720, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $7($5, $8)
	CALL eosio_assert(((int_32)*($9 + [176]) == (int_32)$5), [13282])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9061])
	CALL eosio_assert(((int_32)*($9 + [80]) != (int_32)[1]), [12217])
	$10 = *($9 + [32])
	*($3 + [40]) = ($0 + [104])
	CALL eosio_assert([1], [12862])
	$8 = [0]
	$10 = (uint_64)$10 >> (uint_64)(int_64)8
	$11 = $10)
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$12 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$11 = $12
	$7 = [1]
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$8
	$11 = $12
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$6 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$9 }
	$7 = [1]
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	
.LABEL $label$5
	CALL eosio_assert($7, [12911])
	*($3 + [16]) = (int_64)0
	$12 = ((int_64)((int_64)$1 << (int_64)8) & (int_64)16776960)
	*($3 + [24]) = ((int_64)$12 | (int_64)1)
	CALL $20(($3 + [32]), ($3 + [40]), ($3 + [16]))
	CALL eosio_assert([1], [12862])
	$8 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$10 = $11
	$7 = [1]
	$9 = $8
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$13
	$10 = $11
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$9 = ($8 + [1])
	$8 = $9
	if ( $7 ){ goto $label$14 }
	$7 = [1]
	$8 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$7 = [0]
	
.LABEL $label$10
	CALL eosio_assert($7, [12911])
	$10 = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = ((int_64)$12 | (int_64)5)
	CALL $21(($3 + [8]), ($3 + [40]), ($3 + [16]))
	$11 = *($3 + [32])
	*($3 + [16]) = $11
	if ( (int_64)($2 == 0) ){ goto $label$15 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32)
	if ( ((int_32)*($3 + [12]) == (int_32)$8)) ){ goto $label$15 }
	$10 = (int_64)0
	
.LOOP $label$16:
	CALL $22(($3 + [16]))
	CALL eosio_assert(((int_32)*($8 + [26]) != (int_32)[0]), [12248])
	CALL eosio_assert(((int_64)*($8 + [24]) == (int_64)$1), [12277])
	CALL $40($0, $4, *($8))
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((uint_64)$10 >= (uint_64)$2) ){ goto $label$15 }
	$8 = *($3 + [20])
	if ( ((int_32)$8 != (int_32)*($3 + [12])) ){ goto $label$16 }
	
.LABEL $label$15
	$8 = [12313]
	$7 = *([12313])
	if ( ($7 == 0) ){ goto $label$17 }
	
.LOOP $label$19:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$18 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( $7 ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	CALL printui($10)
	CALL prints(($8 + [1]))
	
.LABEL $label$17
	CALL eosio_assert(((int_64)$10 != (int_64)0), [12342])
	$global$0 = ($3 + [48])
}

void .FUNC $81 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [112]) == (int_32)$0), [14374])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [14419])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1 + [8])
	if ( ((int_64)*(*(($6 + [-24])) + [8]) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9) + [8]) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [14469])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [116]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $155(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $80 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [13720])
	$2 = *($0 + [4])
	$3 = *(($2 + [136]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	$3 = *(*($0))
	$3 = CALL db_idx128_find_primary(*($3), *($3 + [8]), (int_64)-6497942333781180412, $1, *($2 + [8]))
	*((*(($0 + [4])) + [136])) = $3
	
.LABEL $label$1
	*($1) = (int_64)0
	$4 = CALL db_idx128_next($3, $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = *($1)
	$2 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$6:
	$3 = ($2 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8 + [8]) == (int_64)$5) ){ goto $label$4 }
	$2 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($8 + [112]) == (int_32)$6), [13282])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL $18($6, CALL $fimport$0(*($6), *($6 + [8]), (int_64)-6497942333781180416, $5))
	CALL eosio_assert(((int_32)*($8 + [112]) == (int_32)$6), [13282])
	
.LABEL $label$2
	*(($0 + [4])) = $8
	*(($8 + [136])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $182 (int_32 $0)
{
}

int_32 .FUNC $149 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $148 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [44]), ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [13901])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)-2507752926491967488)
	CALL eosio_assert(((int_32)$2 != (int_32)[-1]), [13847])
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	CALL eosio_assert(((int_32)uint_32($2 >> [31]) ^ (int_32)[1]), [13847])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $91(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[1]), [13356])
	CALL memcpy(($1 + [24]), *($0 + [4]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [13356])
	CALL memcpy(($1 + [26]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [28]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [36]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [13356])
	CALL memcpy(($1 + [40]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [44]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [12]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [136]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [144]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [152]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [160]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [168]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [32]), *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
	return $0
}

int_32 .FUNC $146 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($6) - $5) > (int_32)[0]), [13276])
	CALL memcpy(*($3), ($2 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $8 ){ goto $label$1 }
	$7 = ($3 & [1])
	$3 = *($1)
	$3 = ( *(($1 + [4])) ? uint_32($3 >> [1]) : $7 )
	if ( ($3 == 0) ){ goto $label$2 }
	$8 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) >= (int_32)$3), [13276])
	$5 = ($0 + [4])
	CALL memcpy(*($5), ( $8 ? ($1 + [1]) : $7 ), $3)
	*($5) = (*($5) + $3)
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $140 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	*($0 + [8]) = (int_64)1397703940
	*($0) = (int_64)0
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$3 = $5
	$6 = [1]
	$7 = $4
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$3 = $5
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$5 }
	$6 = [1]
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [12911])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($0, *($4 + [4]), [8])
	$6 = (*($4 + [4]) + [8])
	*($4 + [4]) = $6
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $6) > (uint_32)[7]), [13356])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

int_32 .FUNC $143 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [128]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [136]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [144]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [152]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [160]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [168]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [176]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [72]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [76]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [13356])
	CALL memcpy(($1 + [80]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[31]), [13356])
	CALL memcpy(($1 + [112]), *($0 + [4]), [32])
	$2 = (*($0 + [4]) + [32])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [144]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [152]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [160]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [168]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([13754])
	
.LABEL $label$1
	$3 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)8)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)16)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)24)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)40)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)48)
	*($2 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)56)
	*($2 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($2 + [15]), [1])
	
.LABEL $label$2
	$global$0 = ($2 + [16])
}

void .FUNC $73 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [272])
	$global$0 = $3
	CALL require_auth(*(($0 + [240])))
	$4 = ($0 + [16])
	$6 = *(($0 + [44]))
	$5 = *(($0 + [40]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$4), [13282])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [24])), (int_64)6291769033721118720, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $7($4, $7)
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$4), [13282])
	
.LABEL $label$1
	$7 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($7, [11724])
	CALL eosio_assert(((int_32)*($8 + [80]) != (int_32)$2), [11753])
	CALL eosio_assert(($2 <= [4]), [11802])
	CALL eosio_assert($7, [13386])
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($8 + [16])
	$9 = *($7)
	*(($3 + [232])) = $9
	$10 = *($8 + [80])
	*($8 + [80]) = $2
	$11 = *(($8 + [32]))
	*($3 + [224]) = $11
	*($3 + [208]) = $10
	*($3 + [192]) = (uint_64)$9 >> (uint_64)(int_64)8)
	*($3 + [200]) = (uint_64)$11 >> (uint_64)(int_64)8)
	$9 = *($8)
	*($8 + [76]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$9 == (int_64)*($8)), [13518])
	*($3 + [184]) = ($3 + [161])
	*($3 + [180]) = $3
	*($3 + [176]) = $3
	CALL $47(($3 + [176]), $8)
	CALL db_update_i64(*($8 + [180]), (int_64)0, $3, [161])
	$6 = ($0 + [32])
	if ( (uint_64)($9 <= *($6)) ){ goto $label$5 }
	*($6) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$6 = (($3 + [192]) | [8])
	*($3 + [256]) = (uint_64)*($7) >> (uint_64)(int_64)8)
	if ( (CALL $204(($3 + [192]), ($3 + [256]), [8]) == 0) ){ goto $label$6 }
	$5 = ($8 + [184])
	$7 = *($5)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$7 }
	$7 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118720, ($3 + [240]), $9)
	*($5) = $7
	
.LABEL $label$7
	CALL db_idx64_update($7, (int_64)0, ($3 + [256]))
	
.LABEL $label$6
	$7 = (($3 + [192]) + [16])
	*($3 + [256]) = (uint_64)*(($8 + [32])) >> (uint_64)(int_64)8)
	if ( (CALL $204($6, ($3 + [256]), [8]) == 0) ){ goto $label$8 }
	$5 = ($8 + [188])
	$6 = *($5)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$9 }
	$6 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118721, ($3 + [240]), $9)
	*($5) = $6
	
.LABEL $label$9
	CALL db_idx64_update($6, (int_64)0, ($3 + [256]))
	
.LABEL $label$8
	$6 = (($3 + [192]) + [32])
	*($3 + [256]) = *(($8 + [80]))
	if ( (CALL $204($7, ($3 + [256]), [8]) == 0) ){ goto $label$10 }
	$5 = ($8 + [192])
	$7 = *($5)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$11 }
	$7 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118722, ($3 + [240]), $9)
	*($5) = $7
	
.LABEL $label$11
	CALL db_idx64_update($7, (int_64)0, ($3 + [256]))
	
.LABEL $label$10
	*($3 + [264]) = *(($8 + [16]))
	*($3 + [256]) = *(($8 + [32]))
	if ( (CALL $204($6, ($3 + [256]), [16]) == 0) ){ goto $label$12 }
	$7 = ($8 + [196])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$13 }
	$8 = CALL db_idx128_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118723, ($3 + [240]), $9)
	*($7) = $8
	
.LABEL $label$13
	CALL db_idx128_update($8, (int_64)0, ($3 + [256]))
	
.LABEL $label$12
	$9 = (CASTING uint_64)(uint_32 $2)
	$8 = [11817]
	$7 = *([11817])
	if ( ($7 == 0) ){ goto $label$14 }
	
.LOOP $label$16:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$15 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( ($7 == 0) ){ goto $label$14 }
	goto $label$16 
	
.LABEL $label$15
	CALL printui($1)
	$8 = ($8 + [1])
	$7 = *($8)
	if ( ($7 == 0) ){ goto $label$14 }
	
.LOOP $label$18:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$17 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( ($7 == 0) ){ goto $label$14 }
	goto $label$18 
	
.LABEL $label$17
	CALL printui($9)
	CALL prints(($8 + [1]))
	
.LABEL $label$14
	$global$0 = ($3 + [272])
}

void .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	*($1 + [8]) = (int_64)0
	*($1 + [16]) = (int_64)0
	*($1 + [24]) = (int_64)0
	$4 = *($0 + [4])
	*($1) = *((*($4) + [224]))
	$5 = *(*($4 + [4]))
	$6 = ((int_64)$5 & (int_64)255)
	$7 = *($0)
	$8 = *(*($4 + [8]))
	if ( (uint_64)($8 <= (int_64)2) ){ goto $label$1 }
	if ( ((uint_64)$6 > (uint_64)(int_64)17) ){ goto $label$1 }
	$9 = (int_64)1
	
.LOOP $label$2:
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$9 * (int_64)10)
	if ( ((uint_64)$9 >= (uint_64)$8) ){ goto $label$1 }
	if ( (uint_64)($6 <= (int_64)18) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert([1], [12862])
	$8 = ((int_64)$6 | (int_64)((int_64)$5 & (int_64)-256))
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$6 = $9
	$11 = [1]
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$6 = $9
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = ((int_32)$10 < (int_32)[6])
	$12 = ($10 + [1])
	$10 = $12
	if ( $11 ){ goto $label$7 }
	$11 = [1]
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$11 = [0]
	
.LABEL $label$3
	CALL eosio_assert($11, [12911])
	*(($1 + [104])) = $8
	*($1 + [96]) = (int_64)0
	*(($1 + [88])) = $8
	*($1 + [80]) = (int_64)0
	*(($1 + [72])) = $8
	*($1 + [64]) = (int_64)0
	*(($1 + [56])) = $8
	*($1 + [48]) = (int_64)0
	*(($1 + [40])) = $8
	*($1 + [32]) = (int_64)0
	$8 = *(*($4 + [12]))
	CALL eosio_assert([1], [12862])
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$6 = $9
	$11 = [1]
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$11
	$6 = $9
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = ((int_32)$10 < (int_32)[6])
	$12 = ($10 + [1])
	$10 = $12
	if ( $11 ){ goto $label$12 }
	$11 = [1]
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$11 = [0]
	
.LABEL $label$8
	CALL eosio_assert($11, [12911])
	*(($1 + [120])) = $8
	*($1 + [112]) = (int_64)0
	$8 = *(*(($4 + [4])))
	CALL eosio_assert([1], [12862])
	$6 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$6 = $9
	$11 = [1]
	$12 = $10
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$16
	$6 = $9
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$14 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$11 = ((int_32)$10 < (int_32)[6])
	$12 = ($10 + [1])
	$10 = $12
	if ( $11 ){ goto $label$17 }
	$11 = [1]
	$10 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$11 = [0]
	
.LABEL $label$13
	CALL eosio_assert($11, [12911])
	*(($1 + [136])) = $8
	*($1 + [128]) = (int_64)0
	*($1 + [144]) = [0]
	$10 = *($4 + [16])
	*($1 + [152]) = *($10)
	*(($1 + [160])) = *(($10 + [8]))
	*($1 + [176]) = (int_64)0
	*($1 + [168]) = (int_64)0
	$11 = $2
	$10 = ($11 + [-192])
	$global$0 = $10
	*($3 + [12]) = $10
	*($3 + [8]) = $10
	*($3 + [16]) = ($11 + [-12])
	CALL $35(($3 + [8]), $1)
	$6 = *($1)
	*($1 + [188]) = CALL db_store_i64(*($7 + [8]), (int_64)6291770479543096704, *(*($0 + [8])), $6, $10, [180])
	if ( (uint_64)($6 <= *($7 + [16])) ){ goto $label$18 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	$10 = ($7 + [8])
	$6 = *($10)
	$11 = *(($0 + [8]))
	$9 = *($11)
	$8 = *($1)
	$12 = ($1 + [8])
	*($3 + [24]) = *($12)
	*($1 + [192]) = CALL db_idx64_store($6, (int_64)6291770479543096704, $9, $8, ($3 + [24]))
	$6 = *($11)
	$9 = *($10)
	$8 = *($1)
	$4 = ($1 + [16])
	*($3 + [24]) = *($4)
	*(($1 + [196])) = CALL db_idx64_store($9, (int_64)6291770479543096705, $6, $8, ($3 + [24]))
	$6 = *($11)
	$9 = *($10)
	$8 = *($1)
	*($3 + [24]) = ((int_64)*($4) + (int_64)*($12))
	*(($1 + [200])) = CALL db_idx64_store($9, (int_64)6291770479543096706, $6, $8, ($3 + [24]))
	$6 = *($11)
	$9 = *($10)
	$8 = *($1)
	*($3 + [24]) = *(($1 + [24]))
	*(($1 + [204])) = CALL db_idx64_store($9, (int_64)6291770479543096707, $6, $8, ($3 + [24]))
	$6 = *($11)
	$9 = *($10)
	$8 = *($1)
	*($3 + [24]) = (int_64))((int_64)0 - *(($1 + [112])))
	*(($1 + [208])) = CALL db_idx64_store($9, (int_64)6291770479543096708, $6, $8, ($3 + [24]))
	$6 = *($11)
	$9 = *($10)
	$8 = *($1)
	*($3 + [24]) = (int_64))((int_64)0 - *(($1 + [128])))
	*(($1 + [212])) = CALL db_idx64_store($9, (int_64)6291770479543096709, $6, $8, ($3 + [24]))
	$global$0 = ($3 + [32])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [160])
	$global$0 = $3
	CALL eosio_assert(((int_32)*($1 + [184]) == (int_32)$0), [13421])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [13467])
	$5 = *(($1 + [8]))
	*(($4 = $3)) = $5
	$6 = *(($1 + [16]))
	*($4 + [8]) = $6
	*($4 + [24]) = *(($1 + [24]))
	*($4 + [16]) = ((int_64)$6 + (int_64)$5)
	*($4 + [32]) = (int_64))((int_64)0 - *(($1 + [112])))
	*($4 + [40]) = (int_64))((int_64)0 - *(($1 + [128])))
	$5 = *($1)
	CALL $1(($4 + [80]), *(*($2)), (*(*($2 + [4]) + [4]) + [16]))
	*(($2 = (($4 + [64]) + [8]))) = *(($1 + [160]))
	*(($7 = (($4 + [48]) + [8]))) = *((($4 + [80]) + [8]))
	*($4 + [64]) = *($1 + [152])
	*($4 + [48]) = *($4 + [80])
	*((($4 + [112]) + [8])) = *($7)
	*((($4 + [96]) + [8])) = *($2)
	*($4 + [112]) = *($4 + [48])
	*($4 + [96]) = *($4 + [64])
	$8 = ($1 + [152])
	$9 = ($4 + [40])
	$10 = ($4 + [32])
	$11 = ($4 + [24])
	$12 = ($4 + [16])
	$13 = ($4 + [8])
	$2 = [14310]
	$7 = *([14310])
	if ( ($7 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$2 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$7 = *($2)
	if ( ($7 == 0) ){ goto $label$1 }
	goto $label$3 
	
.LABEL $label$2
	CALL $19(($4 + [96]))
	*(($7 = (($4 + [128]) + [8]))) = *((($4 + [112]) + [8]))
	*($4 + [128]) = *($4 + [112])
	*((($4 + [144]) + [8])) = *($7)
	*($4 + [144]) = *($4 + [128])
	$2 = ($2 + [1])
	$7 = *($2)
	if ( ($7 == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$4 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$7 = *($2)
	if ( ($7 == 0) ){ goto $label$1 }
	goto $label$5 
	
.LABEL $label$4
	CALL $19(($4 + [144]))
	CALL prints(($2 + [1]))
	
.LABEL $label$1
	*(($8 + [8])) = *((($4 + [80]) + [8]))
	*($8) = *($4 + [80])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [13518])
	$7 = $3
	$2 = ($7 + [-192])
	$global$0 = $2
	*($4 + [148]) = $2
	*($4 + [144]) = $2
	*($4 + [152]) = ($7 + [-12])
	CALL $35(($4 + [144]), $1)
	CALL db_update_i64(*($1 + [188]), (int_64)0, $2, [180])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$6 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$6
	*($4 + [128]) = *(($1 + [8]))
	if ( (CALL $204($4, ($4 + [128]), [8]) == 0) ){ goto $label$7 }
	$7 = ($1 + [192])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096704, ($4 + [112]), $5)
	*($7) = $2
	
.LABEL $label$8
	CALL db_idx64_update($2, (int_64)0, ($4 + [128]))
	
.LABEL $label$7
	$2 = ($1 + [16])
	*($4 + [128]) = *($2)
	if ( (CALL $204($13, ($4 + [128]), [8]) == 0) ){ goto $label$9 }
	$3 = ($1 + [196])
	$7 = *($3)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$10 }
	$7 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096705, ($4 + [112]), $5)
	*($3) = $7
	
.LABEL $label$10
	CALL db_idx64_update($7, (int_64)0, ($4 + [128]))
	
.LABEL $label$9
	*($4 + [128]) = ((int_64)*($2) + (int_64)*(($1 + [8])))
	if ( (CALL $204($12, ($4 + [128]), [8]) == 0) ){ goto $label$11 }
	$7 = ($1 + [200])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$12 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096706, ($4 + [112]), $5)
	*($7) = $2
	
.LABEL $label$12
	CALL db_idx64_update($2, (int_64)0, ($4 + [128]))
	
.LABEL $label$11
	*($4 + [128]) = *(($1 + [24]))
	if ( (CALL $204($11, ($4 + [128]), [8]) == 0) ){ goto $label$13 }
	$7 = ($1 + [204])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096707, ($4 + [112]), $5)
	*($7) = $2
	
.LABEL $label$14
	CALL db_idx64_update($2, (int_64)0, ($4 + [128]))
	
.LABEL $label$13
	*($4 + [128]) = (int_64))((int_64)0 - *(($1 + [112])))
	if ( (CALL $204($10, ($4 + [128]), [8]) == 0) ){ goto $label$15 }
	$7 = ($1 + [208])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$16 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096708, ($4 + [112]), $5)
	*($7) = $2
	
.LABEL $label$16
	CALL db_idx64_update($2, (int_64)0, ($4 + [128]))
	
.LABEL $label$15
	*($4 + [128]) = (int_64))((int_64)0 - *(($1 + [128])))
	if ( (CALL $204($9, ($4 + [128]), [8]) == 0) ){ goto $label$17 }
	$7 = ($1 + [212])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$18 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096709, ($4 + [112]), $5)
	*($7) = $2
	
.LABEL $label$18
	CALL db_idx64_update($2, (int_64)0, ($4 + [128]))
	
.LABEL $label$17
	$global$0 = ($4 + [160])
}

void .FUNC $77 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [272])
	$global$0 = $4
	CALL require_auth(*($0))
	$5 = ($0 + [16])
	$7 = *(($0 + [44]))
	$6 = *(($0 + [40]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$1) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($9 + [176]) == (int_32)$5), [13282])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [24])), (int_64)6291769033721118720, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $7($5, $8)
	CALL eosio_assert(((int_32)*($9 + [176]) == (int_32)$5), [13282])
	
.LABEL $label$1
	$8 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($8, [11724])
	CALL eosio_assert((*($9 + [80]) == 0), [11990])
	CALL eosio_assert([1], [12015])
	CALL eosio_assert([1], [12049])
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)*(($0 + [256]))), [12084])
	CALL eosio_assert($8, [13386])
	CALL eosio_assert(((int_32)*($9 + [176]) == (int_32)$5), [13421])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [13467])
	*($9 + [96]) = $3
	*($9 + [88]) = $2
	$8 = ($9 + [16])
	$1 = *($8)
	*(($4 + [232])) = $1
	$2 = *(($9 + [32]))
	*($4 + [224]) = $2
	*($4 + [208]) = *($9 + [80])
	*($4 + [192]) = (uint_64)$1 >> (uint_64)(int_64)8)
	*($4 + [200]) = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = *($9)
	CALL eosio_assert([1], [13518])
	*($4 + [184]) = ($4 + [161])
	*($4 + [180]) = $4
	*($4 + [176]) = $4
	CALL $47(($4 + [176]), $9)
	CALL db_update_i64(*($9 + [180]), (int_64)0, $4, [161])
	$7 = ($0 + [32])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$5 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$7 = (($4 + [192]) | [8])
	*($4 + [256]) = (uint_64)*($8) >> (uint_64)(int_64)8)
	if ( (CALL $204(($4 + [192]), ($4 + [256]), [8]) == 0) ){ goto $label$6 }
	$6 = ($9 + [184])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$7 }
	$8 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118720, ($4 + [240]), $1)
	*($6) = $8
	
.LABEL $label$7
	CALL db_idx64_update($8, (int_64)0, ($4 + [256]))
	
.LABEL $label$6
	$8 = (($4 + [192]) + [16])
	*($4 + [256]) = (uint_64)*(($9 + [32])) >> (uint_64)(int_64)8)
	if ( (CALL $204($7, ($4 + [256]), [8]) == 0) ){ goto $label$8 }
	$6 = ($9 + [188])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118721, ($4 + [240]), $1)
	*($6) = $7
	
.LABEL $label$9
	CALL db_idx64_update($7, (int_64)0, ($4 + [256]))
	
.LABEL $label$8
	$7 = (($4 + [192]) + [32])
	*($4 + [256]) = *(($9 + [80]))
	if ( (CALL $204($8, ($4 + [256]), [8]) == 0) ){ goto $label$10 }
	$6 = ($9 + [192])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$11 }
	$8 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118722, ($4 + [240]), $1)
	*($6) = $8
	
.LABEL $label$11
	CALL db_idx64_update($8, (int_64)0, ($4 + [256]))
	
.LABEL $label$10
	*($4 + [264]) = *(($9 + [16]))
	*($4 + [256]) = *(($9 + [32]))
	if ( (CALL $204($7, ($4 + [256]), [16]) == 0) ){ goto $label$12 }
	$8 = ($9 + [196])
	$9 = *($8)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$13 }
	$9 = CALL db_idx128_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118723, ($4 + [240]), $1)
	*($8) = $9
	
.LABEL $label$13
	CALL db_idx128_update($9, (int_64)0, ($4 + [256]))
	
.LABEL $label$12
	$global$0 = ($4 + [272])
}

void .FUNC $74 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [272])
	$global$0 = $3
	$4 = ($0 + [248])
	CALL require_auth(*($4))
	CALL eosio_assert(CALL eosio_assert7($2), [11838])
	CALL eosio_assert(((int_64)*($0) != (int_64)$2), [11862])
	CALL eosio_assert(((int_64)*(($0 + [264])) != (int_64)$2), [11862])
	CALL eosio_assert(((int_64)*(($0 + [272])) != (int_64)$2), [11862])
	CALL eosio_assert(((int_64)*(($0 + [240])) != (int_64)$2), [11862])
	CALL eosio_assert(((int_64)*(($0 + [232])) != (int_64)$2), [11862])
	CALL eosio_assert(((int_64)*($4) != (int_64)$2), [11862])
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)-1) <= (int_64)65534), [11890])
	$5 = ($0 + [16])
	$7 = *(($0 + [44]))
	$6 = *(($0 + [40]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$4 = ($7 + [-24])
	$8 = *($4)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$7 = $4
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$5), [13282])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$4 = CALL db_find_i64(*($5), *(($0 + [24])), (int_64)6291769033721118720, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $7($5, $4)
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$5), [13282])
	
.LABEL $label$1
	$6 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($6, [11724])
	CALL eosio_assert(((int_64)*($8 + [8]) != (int_64)$2), [11753])
	$9 = *($8 + [8])
	$4 = [11914]
	$7 = *([11914])
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$5 }
	goto $label$7 
	
.LABEL $label$6
	CALL printui($1)
	$4 = ($4 + [1])
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$9:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$8 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$5 }
	goto $label$9 
	
.LABEL $label$8
	CALL printui($9)
	$4 = ($4 + [1])
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$11:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$10 }
	CALL prints_l($4, [1])
	$4 = ($4 + [1])
	$7 = *($4)
	if ( ($7 == 0) ){ goto $label$5 }
	goto $label$11 
	
.LABEL $label$10
	CALL printui($2)
	CALL prints(($4 + [1]))
	
.LABEL $label$5
	CALL eosio_assert($6, [13386])
	CALL eosio_assert(((int_32)*($8 + [176]) == (int_32)$5), [13421])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [13467])
	*($8 + [8]) = $2
	$4 = ($8 + [16])
	$1 = *($4)
	*(($3 + [232])) = $1
	$2 = *(($8 + [32]))
	*($3 + [224]) = $2
	*($3 + [208]) = *(($8 + [80]))
	*($3 + [192]) = (uint_64)$1 >> (uint_64)(int_64)8)
	*($3 + [200]) = (uint_64)$2 >> (uint_64)(int_64)8)
	$1 = *($8)
	*($8 + [76]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [13518])
	*($3 + [184]) = ($3 + [161])
	*($3 + [180]) = $3
	*($3 + [176]) = $3
	CALL $47(($3 + [176]), $8)
	CALL db_update_i64(*($8 + [180]), (int_64)0, $3, [161])
	$7 = ($0 + [32])
	if ( (uint_64)($1 <= *($7)) ){ goto $label$12 }
	*($7) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$7 = (($3 + [192]) | [8])
	*($3 + [256]) = (uint_64)*($4) >> (uint_64)(int_64)8)
	if ( (CALL $204(($3 + [192]), ($3 + [256]), [8]) == 0) ){ goto $label$13 }
	$6 = ($8 + [184])
	$4 = *($6)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$14 }
	$4 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118720, ($3 + [240]), $1)
	*($6) = $4
	
.LABEL $label$14
	CALL db_idx64_update($4, (int_64)0, ($3 + [256]))
	
.LABEL $label$13
	$4 = (($3 + [192]) + [16])
	*($3 + [256]) = (uint_64)*(($8 + [32])) >> (uint_64)(int_64)8)
	if ( (CALL $204($7, ($3 + [256]), [8]) == 0) ){ goto $label$15 }
	$6 = ($8 + [188])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$16 }
	$7 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118721, ($3 + [240]), $1)
	*($6) = $7
	
.LABEL $label$16
	CALL db_idx64_update($7, (int_64)0, ($3 + [256]))
	
.LABEL $label$15
	$7 = (($3 + [192]) + [32])
	*($3 + [256]) = *(($8 + [80]))
	if ( (CALL $204($4, ($3 + [256]), [8]) == 0) ){ goto $label$17 }
	$6 = ($8 + [192])
	$4 = *($6)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$18 }
	$4 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118722, ($3 + [240]), $1)
	*($6) = $4
	
.LABEL $label$18
	CALL db_idx64_update($4, (int_64)0, ($3 + [256]))
	
.LABEL $label$17
	*($3 + [264]) = *(($8 + [16]))
	*($3 + [256]) = *(($8 + [32]))
	if ( (CALL $204($7, ($3 + [256]), [16]) == 0) ){ goto $label$19 }
	$7 = ($8 + [196])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$20 }
	$4 = CALL db_idx128_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118723, ($3 + [240]), $1)
	*($7) = $4
	
.LABEL $label$20
	CALL db_idx128_update($4, (int_64)0, ($3 + [256]))
	
.LABEL $label$19
	$global$0 = ($3 + [272])
}

void .FUNC $75 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL require_auth(*(($0 + [240])))
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)-1) <= (int_64)65534), [11890])
	$3 = ($0 + [16])
	$5 = *(($0 + [44]))
	$4 = *(($0 + [40]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($7 + [176]) == (int_32)$3), [13282])
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL db_find_i64(*($3), *(($0 + [24])), (int_64)6291769033721118720, $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$5 }
	$7 = CALL $7($3, $6)
	CALL eosio_assert(((int_32)*($7 + [176]) == (int_32)$3), [13282])
	goto $label$1 
	
.LABEL $label$5
	$7 = [0]
	
.LABEL $label$1
	*($2 + [12]) = $7
	*($2 + [8]) = $3
	$8 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [11724])
	$3 = ($0 + [56])
	$5 = *(($0 + [84]))
	$7 = *(($0 + [80]))
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$9:
	$6 = ($5 + [-24])
	$4 = *($6)
	if ( ((int_64)*($4) == (int_64)$1) ){ goto $label$8 }
	$5 = $6
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$7 }
	CALL eosio_assert(((int_32)*($4 + [184]) == (int_32)$3), [13282])
	$8 = $4
	goto $label$6 
	
.LABEL $label$7
	$6 = CALL db_find_i64(*($3), *(($0 + [64])), (int_64)6291770479543096704, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $8($3, $6)
	CALL eosio_assert(((int_32)*($8 + [184]) == (int_32)$3), [13282])
	
.LABEL $label$6
	$6 = ((int_32)$8 != (int_32)[0])
	CALL eosio_assert($6, [8481])
	*($2) = $0
	*($2 + [4]) = ($2 + [8])
	CALL eosio_assert($6, [13386])
	CALL $76($3, $8, $2)
	$6 = [11948]
	$5 = *([11948])
	if ( ($5 == 0) ){ goto $label$10 }
	
.LOOP $label$12:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$11 }
	CALL prints_l($6, [1])
	$6 = ($6 + [1])
	$5 = *($6)
	if ( ($5 == 0) ){ goto $label$10 }
	goto $label$12 
	
.LABEL $label$11
	CALL printui($1)
	CALL prints(($6 + [1]))
	
.LABEL $label$10
	$global$0 = ($2 + [16])
}

void .FUNC $78 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL require_auth($1)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)10), [12108])
	*($3 + [40]) = ($0 + [104])
	*($3 + [24]) = $1
	$4 = (int_64)0
	*($3 + [16]) = (int_64)0
	CALL $50(($3 + [32]), ($3 + [40]), ($3 + [16]))
	*($3 + [24]) = ((int_64)$1 + (int_64)1)
	*($3 + [16]) = (int_64)0
	CALL $79(($3 + [8]), ($3 + [40]), ($3 + [16]))
	$5 = *($3 + [32])
	*($3) = $5
	$6 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( ((int_32)*($3 + [12]) == (int_32)$6)) ){ goto $label$1 }
	$4 = (int_64)0
	
.LOOP $label$2:
	if ( ((uint_64)$4 >= (uint_64)$2) ){ goto $label$1 }
	if ( ($6 == 0) ){ goto $label$1 }
	$5 = *($3)
	CALL $80($3)
	CALL eosio_assert(((int_64)*($6 + [16]) == (int_64)$1), [12130])
	$7 = *($6 + [16])
	CALL prints([11271])
	CALL printui(*($6 + [8]))
	CALL prints([11279])
	CALL printui(*($6 + [44]))
	CALL prints([11293])
	CALL printn($7)
	CALL prints([9194])
	if ( (*($6 + [26]) == 0) ){ goto $label$3 }
	CALL $40($0, $1, *($6))
	
.LABEL $label$3
	*($3 + [16]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)32) | (int_64)$5)
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [14340])
	CALL $80(($3 + [16]))
	CALL $81(*($3 + [40]), $6)
	$4 = ((int_64)$4 + (int_64)1)
	$6 = *($3 + [4])
	if ( ((int_32)$6 != (int_32)*($3 + [12])) ){ goto $label$2 }
	
.LABEL $label$1
	$6 = [12145]
	$0 = *([12145])
	if ( ($0 == 0) ){ goto $label$4 }
	
.LOOP $label$6:
	if ( ((int_32)$0 == (int_32)[37]) ){ goto $label$5 }
	CALL prints_l($6, [1])
	$6 = ($6 + [1])
	$0 = *($6)
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$6 
	
.LABEL $label$5
	CALL printui($4)
	CALL prints(($6 + [1]))
	
.LABEL $label$4
	CALL eosio_assert(((int_64)$4 != (int_64)0), [12163])
	$global$0 = ($3 + [48])
}

void .FUNC $79 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx128_upperbound(*($2), *($2 + [8]), (int_64)-6497942333781180412, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [8]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $18($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-6497942333781180416, $6))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [136])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $98 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [80]) = $2
	CALL require_auth($1)
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)-1) <= (int_64)65534), [11890])
	CALL eosio_assert(((int_64)*(($0 + [240])) == (int_64)$1), [12383])
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)-1) <= (int_64)100), [12398])
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*($4 + [48]) = (int_64)-1
	*($4 + [56]) = (int_64)0
	$1 = *($0)
	*($4 + [32]) = $1
	*($4 + [40]) = $1
	*($4 + [24]) = ($4 + [32])
	CALL $99(($4 + [16]), ($4 + [24]), ($4 + [80]))
	*($4 + [88]) = ((int_64)*($4 + [80]) + (int_64)1)
	CALL $100(($4 + [8]), ($4 + [24]), ($4 + [88]))
	$1 = (int_64)0
	$0 = *($4 + [20])
	if ( ((int_32)*($4 + [12]) == (int_32)$0) ){ goto $label$1 }
	$1 = (int_64)0
	$5 = *($4 + [16])
	
.LOOP $label$2:
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_64)$1 >= (uint_64)$3) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*($0 + [8]) == (int_64)*($4 + [80])), [12441])
	*($4 + [88]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $5))
	CALL eosio_assert([1], [14340])
	CALL $101(($4 + [88]))
	CALL $92(*($4 + [24]), $0)
	$1 = ((int_64)$1 + (int_64)1)
	$2 = *($4 + [88])
	$5 = (CASTING uint_32)(uint_64 $2)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( ((int_32)*($4 + [12]) != (int_32)$0)) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$1 != (int_64)0), [12342])
	$6 = *($4 + [56])
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ($4 + [60])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$7 }
	CALL _ZdlPv($5)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($4 + [56]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $6
	
.LABEL $label$4
	*($7) = $6
	CALL _ZdlPv($0)
	
.LABEL $label$3
	$global$0 = ($4 + [96])
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-2507752926491967488, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $91($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-2507752926491967488, $6))
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [48])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $94 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [64]) == (int_32)$0), [14374])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [14419])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [14469])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [68]))
	$6 = *(($1 + [72]))
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$13 }
	$6 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-7119375476711227392, ($2 + [8]), *($1))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$12 }
	
.LABEL $label$13
	CALL db_idx64_remove($6)
	
.LABEL $label$12
	$global$0 = ($2 + [16])
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [184]) == (int_32)$0), [14374])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [14419])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [14469])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [188]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $157(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]), ($0 + [41]))
	$global$0 = ($2 + [16])
}

void .FUNC $96 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [176]) == (int_32)$0), [14374])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [14419])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [14469])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [180]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $158(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]))
	$global$0 = ($2 + [16])
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	CALL eosio_assert(((int_32)*($1 + [176]) == (int_32)$0), [14374])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [14419])
	$2 = ($0 + [28])
	$3 = *($2)
	CALL eosio_assert(((int_32)$3 != (int_32)*($0 + [24])), [14469])
	$4 = *($2)
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	$2 = $3
	
.LOOP $label$4:
	$5 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $5
	if ( ($3 == 0) ){ goto $label$5 }
	CALL _ZdlPv($3)
	
.LABEL $label$5
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$4 }
	$5 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = ($3 + [-24])
	
.LABEL $label$2
	
.LOOP $label$6:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$7 }
	CALL _ZdlPv($2)
	
.LABEL $label$7
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$6 }
	
.LABEL $label$1
	*(($0 + [28])) = $5
	CALL db_remove_i64(*($1 + [180]))
}

void .FUNC $90 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *(($0 + [28]))
	if ( ((int_32)$2 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [176]) == (int_32)$0), [13282])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $60($0, $2)
	CALL eosio_assert(((int_32)*($2 + [176]) == (int_32)$0), [13282])
	
.LABEL $label$2
	CALL eosio_assert([1], [14340])
	CALL eosio_assert([1], [13720])
	$3 = CALL db_next_i64(*($2 + [180]), ($1 + [8]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	CALL $60($0, $3)
	
.LABEL $label$4
	CALL $97($0, $2)
	
.LABEL $label$1
	$global$0 = ($1 + [16])
}

int_32 .FUNC $91 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [13333])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $207($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $210($4)
	
.LABEL $label$6
	*(($5 = CALL _Znwj([72])) + [40]) = $0
	CALL $147(($3 + [32]), $5)
	*($5 + [44]) = $1
	*($5 + [48 align=4]) = (int_64)-1
	*($5 + [56 align=4]) = (int_64)-1
	*($5 + [64]) = [-1]
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $45(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL eosio_assert(((int_32)*($1 + [40]) == (int_32)$0), [14374])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [14419])
	$3 = *($0 + [24])
	$4 = $3
	$5 = ($0 + [28])
	$6 = *($5)
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$1 }
	$7 = *($1)
	if ( ((int_64)*(*(($6 + [-24]))) != (int_64)$7) ){ goto $label$2 }
	$4 = $6
	goto $label$1 
	
.LABEL $label$2
	$8 = ($3 + [24])
	
.LOOP $label$4:
	if ( ((int_32)$8 == (int_32)$6) ){ goto $label$3 }
	$9 = ($6 + [-48])
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_64)*(*($9)) != (int_64)$7) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	$4 = $3
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)$3), [14469])
	$3 = *($5)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = $4
	
.LOOP $label$8:
	$9 = *($6)
	*($6) = [0]
	$8 = ($6 + [-24])
	$4 = *($8)
	*($8) = $9
	if ( ($4 == 0) ){ goto $label$9 }
	CALL _ZdlPv($4)
	
.LABEL $label$9
	*(($6 + [-8])) = *(($6 + [16]))
	*(($6 + [-16])) = *(($6 + [8]))
	$6 = ($6 + [24])
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$8 }
	$9 = ($6 + [-24])
	$4 = *(($0 + [28]))
	if ( ((int_32)($4 + [24]) != (int_32)$6) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$9 = ($4 + [-24])
	
.LABEL $label$6
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$11 }
	CALL _ZdlPv($6)
	
.LABEL $label$11
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$10 }
	
.LABEL $label$5
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [44]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $156(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]), ($0 + [40]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [13333])
	if ( ((uint_32)$4 <= (uint_32)[512]) ){ goto $label$5 }
	$2 = CALL $207($4)
	CALL db_get_i64($1, $2, $4)
	CALL $210($2)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	CALL db_get_i64($1, $2, $4)
	
.LABEL $label$4
	*(($5 = CALL _Znwj([80])) + [64]) = $0
	CALL eosio_assert(((uint_32)$4 > (uint_32)[7]), [13356])
	CALL memcpy($5, $2, [8])
	CALL eosio_assert(((uint_32)($4 + [-8]) > (uint_32)[31]), [13356])
	CALL memcpy(($5 + [16]), ($2 + [8]), [32])
	CALL eosio_assert(((int_32)($4 & [-4]) != (int_32)[40]), [13356])
	CALL memcpy(($5 + [48]), ($2 + [40]), [4])
	*($5 + [72]) = [-1]
	*($5 + [68]) = $1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$8 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $110(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $138 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]), [13356])
	CALL memcpy(($1 + [8]), *($0 + [4]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)*($0 + [8]) != (int_32)$2), [13356])
	CALL memcpy(($1 + [12]), *($0 + [4]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [32]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [40]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [48]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [56]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [64]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [72]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [80]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [88]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [96]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [104]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [112]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [120]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [128]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [136]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [144]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [152]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [160]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [168]), *($0 + [4]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $130 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	$1 = CALL $169($2, ($1 + [68]))
	$7 = CALL $169(($2 + [16]), ($1 + [56]))
	$6 = CALL $169(($2 + [32]), ($1 + [44]))
	$5 = CALL $169(($2 + [48]), ($1 + [32]))
	$4 = CALL $169(($2 + [64]), ($1 + [20]))
	$3 = CALL $169(($2 + [80]), ($1 + [8]))
	CALL $161($0, *($1), $3, $4, $5, $6, $7, $1)
	if ( (*($1) & [1]) ){ goto $label$11 }
	if ( (*($7) & [1]) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($7) & [1]) == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL _ZdlPv(*($7 + [8]))
	$1 = [1]
	if ( ((*($6) & [1]) == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$1 = [1]
	if ( (*($6) & [1]) ){ goto $label$7 }
	
.LABEL $label$8
	if ( (*($5) & $1) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	CALL _ZdlPv(*($6 + [8]))
	if ( ((*($5) & $1) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL _ZdlPv(*($5 + [8]))
	$1 = [1]
	if ( ((*($4) & [1]) == 0) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$1 = [1]
	if ( (*($4) & [1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( (*($3) & $1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($3) & $1) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($3 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$1
	$global$0 = ($2 + [96])
}

void .FUNC $131 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [48])
	$global$0 = $2
	$1 = CALL $169($2, ($1 + [24]))
	$4 = CALL $169(($2 + [16]), ($1 + [12]))
	$3 = CALL $169(($2 + [32]), $1)
	CALL $162($0, $3, $4, $1)
	if ( (*($1) & [1]) ){ goto $label$5 }
	if ( (*($4) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($3) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	CALL _ZdlPv(*($3 + [8]))
	$global$0 = ($2 + [48])
}

void .FUNC $132 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [48])
	$global$0 = $2
	$1 = CALL $169($2, ($1 + [32]))
	$4 = CALL $169(($2 + [16]), ($1 + [20]))
	$3 = CALL $169(($2 + [32]), ($1 + [8]))
	CALL $163($0, *($1), $3, $4, $1)
	if ( (*($1) & [1]) ){ goto $label$5 }
	if ( (*($4) & [1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	CALL _ZdlPv(*($1 + [8]))
	if ( ((*($4) & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( (*($3) & [1]) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [48])
	return 
	
.LABEL $label$1
	CALL _ZdlPv(*($3 + [8]))
	$global$0 = ($2 + [48])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [368])
	$global$0 = $3
	CALL memory()
	$4 = CALL $134($3, $0)
	CALL $113($4, $1, $2)
	CALL $135($4)
	CALL $182([0])
	$global$0 = ($3 + [368])
}

int_32 .FUNC $134 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_64 $25
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [300]
	*($0) = $1
	*($0 + [16]) = $1
	*($0 + [56]) = $1
	*($0 + [104]) = $1
	*(($0 + [24])) = $1
	*(($0 + [32])) = (int_64)-1
	$3 = (int_64)0
	*(($0 + [40])) = (int_64)0
	*(($0 + [48])) = (int_64)0
	*(($0 + [64])) = $1
	*(($0 + [72])) = (int_64)-1
	*(($0 + [80])) = (int_64)0
	*(($0 + [88])) = (int_64)0
	$4 = [0]
	*(($0 + [96])) = [0]
	*(($0 + [112])) = $1
	*(($0 + [120])) = (int_64)-1
	*(($0 + [128])) = [0]
	*(($0 + [140])) = [0]
	*(($0 + [132])) = (int_64)0
	*(($0 + [144])) = [0]
	*($0 + [152]) = $1
	*(($0 + [160])) = $1
	*(($0 + [168])) = (int_64)-1
	*(($5 = ($0 + [176]))) = (int_64)0
	*(($0 + [184])) = [0]
	$6 = CALL db_find_i64($1, $1, (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$4 }
	$4 = ($0 + [152])
	CALL eosio_assert(((int_32)*(CALL $60($4, $6) + [176]) == (int_32)$4), [13282])
	$6 = *(($0 + [180]))
	if ( ((int_32)$6 == (int_32)*($5)) ){ goto $label$3 }
	$5 = *(($6 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [176]) == (int_32)$4), [13282])
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0)
	$6 = (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	$8 = (int_64)1000
	$9 = (int_64)75000
	$10 = (int_64)0
	$11 = (int_64)0
	$12 = (int_64)0
	$13 = (int_64)0
	$14 = (int_64)0
	$15 = (int_64)0
	$16 = (int_64)0
	$17 = (int_64)0
	$18 = (int_64)0
	$1 = *($0)
	$19 = $1
	$20 = $1
	$21 = $1
	$22 = $1
	$23 = $1
	$24 = (int_64)0
	$25 = (int_64)0
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = CALL db_find_i64(*(($0 + [152])), *(($0 + [160])), (int_64)7235159537265672192, (int_64)7235159537265672192)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $60($4, $6)
	CALL eosio_assert(((int_32)*($5 + [176]) == (int_32)$4), [13282])
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [13361])
	*(($2 + [14])) = *(($5 + [15]))
	*($2 + [12]) = *($5 + [13 align=1])
	$3 = *($5 + [168])
	$10 = *($5 + [160])
	$11 = *($5 + [152])
	$12 = *($5 + [144])
	$13 = *($5 + [136])
	$14 = *($5 + [128])
	$15 = *($5 + [120])
	$16 = *($5 + [112])
	$17 = *($5 + [104])
	$18 = *($5 + [96])
	$9 = *($5 + [88])
	$1 = *($5 + [80])
	$19 = *($5 + [72])
	$20 = *($5 + [64])
	$21 = *($5 + [56])
	$22 = *($5 + [48])
	$23 = *($5 + [40])
	$24 = *($5 + [32])
	$8 = *($5 + [24])
	$25 = *($5 + [16])
	$4 = *($5 + [12])
	$6 = *($5 + [8])
	$7 = *($5)
	
.LABEL $label$1
	*($0 + [192]) = $7
	*($0 + [205 align=1]) = *($2 + [12])
	*(($0 + [200])) = $6
	*(($0 + [204])) = $4
	*(($0 + [208])) = $25
	*(($0 + [216])) = $8
	*(($0 + [224])) = $24
	*(($0 + [232])) = $23
	*(($0 + [240])) = $22
	*(($0 + [248])) = $21
	*(($0 + [256])) = $20
	*(($0 + [264])) = $19
	*(($0 + [272])) = $1
	*(($0 + [280])) = $9
	*(($0 + [288])) = $18
	*(($0 + [207])) = *(($2 + [14]))
	*(($0 + [304])) = $16
	*(($0 + [296])) = $17
	*(($0 + [312])) = $15
	*(($0 + [320])) = $14
	*(($0 + [328])) = $13
	*(($0 + [336])) = $12
	*(($0 + [344])) = $11
	*(($0 + [352])) = $10
	*(($0 + [360])) = $3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $135 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $58(($0 + [152]), ($0 + [192]), *($0))
	$1 = *(($0 + [176]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [180])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [176]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [128]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [132])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [128]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *(($0 + [80]))
	if ( ($1 == 0) ){ goto $label$11 }
	$2 = ($0 + [84])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	CALL _ZdlPv($4)
	
.LABEL $label$15
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [80]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $1
	
.LABEL $label$12
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$1 = *(($0 + [40]))
	if ( ($1 == 0) ){ goto $label$16 }
	$2 = ($0 + [44])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$18 }
	
.LOOP $label$19:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$20 }
	CALL _ZdlPv($4)
	
.LABEL $label$20
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$19 }
	$3 = *(($0 + [40]))
	goto $label$17 
	
.LABEL $label$18
	$3 = $1
	
.LABEL $label$17
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [13276])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$2 }
	$6 = ($0 + [4])
	
.LOOP $label$3:
	$5 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [13276])
	CALL memcpy(*($6), $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[7]), [13276])
	CALL memcpy(*($6), ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($5) - $4) > (int_32)[0]), [13276])
	CALL memcpy(*($6), ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $4) >= (int_32)$6), [13276])
	$4 = ($0 + [4])
	CALL memcpy(*($4), $7, $6)
	*($4) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $209($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($9)), [8256])
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$10:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$12 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$13 }
	
.LABEL $label$12
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$14 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$11
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$10 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $209 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [15608]) == 0) ){ goto $label$2 }
	$2 = *([0] + [15612])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [15608]) = [1]
	$2 = ($2 << [16])
	*([0] + [15612]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [15612])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [15612]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [15608]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [15608]) = [1]
	$3 = ($3 << [16])
	*([0] + [15612]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [15612])
	
.LABEL $label$10
	*([0] + [15612]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

void .FUNC $202 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	
.LABEL $label$18
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$16
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$15
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$9
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$8
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$7
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$5
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$3
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$2
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($3, *($1))
	*($0 + [8]) = *(($3 + [8]))
	*($0) = *($3)
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$1
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$4 = *($1)
	*($0 + [8]) = *($1 + [8])
	*($0) = $4
	$global$0 = ($3 + [16])
	$1
}

int_32 .FUNC $203 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $200 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [288])
	$global$0 = $3
	*($3 + [284]) = $2
	*(($3 + [272])) = (int_64)0
	*(($3 + [264])) = (int_64)0
	*(($3 + [256])) = (int_64)0
	*($3 + [248]) = (int_64)0
	*($3 + [240]) = (int_64)0
	*($3 + [280]) = *($3 + [284])
	$4 = [0]
	$2 = [-1]
	if ( ((int_32)CALL $201([0], $1, ($3 + [280]), ($3 + [80]), ($3 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $188($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) <= (int_32)[0]) ){ goto $label$6 }
	$5 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	*($0) = ($2 & [-33])
	$5 = ($2 & [32])
	if ( *($0 + [48]) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($3 + [80])
	*($0 + [28]) = $3
	*($0 + [20]) = $3
	$7 = *($0 + [44])
	*($0 + [44]) = $3
	$2 = CALL $201($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	if ( ($7 == 0) ){ goto $label$3 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $7
	*($6) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$7 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $7 )
	goto $label$3 
	
.LABEL $label$4
	$2 = CALL $201($0, $1, ($3 + [280]), ($3 + [80]), ($3 + [240]))
	
.LABEL $label$3
	$1 = *($0)
	*($0) = ($1 | $5)
	$1 = ($1 & [32])
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $189($0)
	
.LABEL $label$7
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	$global$0 = ($3 + [288])
	return $2
}

int_32 .FUNC $201 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_64 $29
	int_64 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	$5 = ($global$0 - [8128])
	$global$0 = $5
	$6 = (($5 + [704]) | [8])
	$7 = (($5 + [704]) | [9])
	$8 = ([-2] - ($5 + [704]))
	$9 = ($5 + [7664])
	$10 = (($5 + [692]) + [12])
	$11 = (($5 + [352]) + [54])
	$12 = (($5 + [352]) + [55])
	$13 = [0]
	$14 = [0]
	$15 = [0]
	
.LOOP $label$4:
	if ( ($0 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$1 = *($17)
	if ( ($1 == 0) ){ goto $label$1 }
	$15 = $17
	$1 = ($1 & [255])
	if ( ($1 == 0) ){ goto $label$24 }
	
.LOOP $label$25:
	if ( ((int_32)$1 == (int_32)[37]) ){ goto $label$23 }
	$1 = *($15 + [1])
	$15 = ($15 + [1])
	$1 = ($1 & [255])
	if ( $1 ){ goto $label$25 }
	
.LABEL $label$24
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$22 }
	goto $label$3 
	
.LABEL $label$23
	$18 = $15
	
.LOOP $label$27:
	if ( ((int_32)*(($18 + [1])) != (int_32)[37]) ){ goto $label$26 }
	$15 = ($15 + [1])
	$19 = *($18 + [2])
	$1 = ($18 + [2])
	$18 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$27 }
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$22 
	
.LABEL $label$26
	$1 = $18
	$18 = ([2147483647] - $14)
	$15 = ($15 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	
.LABEL $label$22
	if ( (*($0) & [32]) ){ goto $label$28 }
	CALL $191($17, $15, $0)
	
.LABEL $label$28
	if ( $15 ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	
.LOOP $label$29:
	$17 = $1
	if ( ((int_32)$15 > (int_32)([2147483647] - $14)) ){ goto $label$3 }
	$14 = ($15 + $14)
	$15 = *($17)
	if ( ($15 == 0) ){ goto $label$31 }
	$1 = $17
	$15 = ($15 & [255])
	if ( ($15 == 0) ){ goto $label$33 }
	
.LOOP $label$34:
	if ( ((int_32)$15 == (int_32)[37]) ){ goto $label$32 }
	$15 = *($1 + [1])
	$1 = ($1 + [1])
	$15 = ($15 & [255])
	if ( $15 ){ goto $label$34 }
	
.LABEL $label$33
	$18 = ([2147483647] - $14)
	$15 = ($1 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$32
	$18 = $1
	$15 = $1
	
.LOOP $label$36:
	if ( ((int_32)*(($15 + [1])) != (int_32)[37]) ){ goto $label$35 }
	$18 = ($18 + [1])
	$19 = *($15 + [2])
	$1 = ($15 + [2])
	$15 = $1
	if ( ((int_32)$19 == (int_32)[37]) ){ goto $label$36 }
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	goto $label$30 
	
.LABEL $label$35
	$1 = $15
	$18 = ([2147483647] - $14)
	$15 = ($18 - $17)
	if ( ((int_32)$15 <= (int_32)$18) ){ goto $label$30 }
	goto $label$3 
	
.LABEL $label$31
	if ( $0 ){ goto $label$1 }
	if ( ($13 == 0) ){ goto $label$46 }
	$1 = [1]
	$15 = *($4 + [4])
	if ( ($15 == 0) ){ goto $label$37 }
	CALL $202(($3 + [16]), $15, $2)
	$15 = *($4 + [8])
	if ( ($15 == 0) ){ goto $label$45 }
	CALL $202(($3 + [32]), $15, $2)
	$15 = *($4 + [12])
	if ( ($15 == 0) ){ goto $label$44 }
	CALL $202(($3 + [48]), $15, $2)
	$15 = *($4 + [16])
	if ( ($15 == 0) ){ goto $label$43 }
	CALL $202(($3 + [64]), $15, $2)
	$15 = *($4 + [20])
	if ( ($15 == 0) ){ goto $label$42 }
	CALL $202(($3 + [80]), $15, $2)
	$15 = *($4 + [24])
	if ( ($15 == 0) ){ goto $label$41 }
	CALL $202(($3 + [96]), $15, $2)
	$15 = *($4 + [28])
	if ( ($15 == 0) ){ goto $label$40 }
	CALL $202(($3 + [112]), $15, $2)
	$15 = *($4 + [32])
	if ( ($15 == 0) ){ goto $label$39 }
	CALL $202(($3 + [128]), $15, $2)
	$15 = *($4 + [36])
	if ( ($15 == 0) ){ goto $label$38 }
	CALL $202(($3 + [144]), $15, $2)
	$global$0 = ($5 + [8128])
	return [1]
	
.LABEL $label$46
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$45
	$1 = [2]
	goto $label$37 
	
.LABEL $label$44
	$1 = [3]
	goto $label$37 
	
.LABEL $label$43
	$1 = [4]
	goto $label$37 
	
.LABEL $label$42
	$1 = [5]
	goto $label$37 
	
.LABEL $label$41
	$1 = [6]
	goto $label$37 
	
.LABEL $label$40
	$1 = [7]
	goto $label$37 
	
.LABEL $label$39
	$1 = [8]
	goto $label$37 
	
.LABEL $label$38
	$1 = [9]
	
.LABEL $label$37
	$15 = ($4 + ($1 << [2]))
	
.LOOP $label$47:
	if ( *($15) ){ goto $label$18 }
	$15 = ($15 + [4])
	$14 = [1]
	$1 = ($1 + [1])
	if ( ((uint_32)$1 <= (uint_32)[9]) ){ goto $label$47 }
	goto $label$1 
	
.LABEL $label$30
	if ( $15 ){ goto $label$29 }
	
.LABEL $label$19
	$15 = ($1 + [1])
	$16 = *($1 + [1])
	$20 = ($16 + [-48])
	if ( ((uint_32)$20 > (uint_32)[9]) ){ goto $label$50 }
	$19 = ((int_32)*($1 + [2]) == (int_32)[36])
	$15 = ( ($1 + [3]) ? $15 : $19 )
	$21 = ( $20 ? [-1] : $19 )
	$13 = ( [1] ? $13 : $19 )
	$22 = [0]
	$16 = *(($1 + ( [3] ? [1] : $19 )))
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	goto $label$49 
	
.LABEL $label$50
	$21 = [-1]
	$22 = [0]
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$48 }
	
.LABEL $label$49
	$1 = ([1] << $1)
	if ( (($1 & [75913]) == 0) ){ goto $label$48 }
	$19 = ($15 + [1])
	$22 = [0]
	
.LOOP $label$51:
	$22 = ($1 | $22)
	$15 = $19
	$16 = *($15)
	$1 = ($16 + [-32])
	if ( ((uint_32)$1 >= (uint_32)[32]) ){ goto $label$48 }
	$19 = ($15 + [1])
	$1 = ([1] << $1)
	if ( ($1 & [75913]) ){ goto $label$51 }
	
.LABEL $label$48
	if ( ((int_32)$16 != (int_32)[42]) ){ goto $label$57 }
	$1 = (*($15 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$56 }
	if ( ((int_32)*($15 + [2]) != (int_32)[36]) ){ goto $label$56 }
	*(($4 + ($1 << [2]))) = [10]
	$23 = ($15 + [3])
	$13 = [1]
	$20 = *((($3 + (*(($15 + [1])) << [4])) + [-768]))
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	goto $label$55 
	
.LABEL $label$57
	$20 = [0]
	$19 = ($16 + [-48])
	if ( ((uint_32)$19 > (uint_32)[9]) ){ goto $label$54 }
	$1 = [0]
	
.LOOP $label$58:
	$20 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$59 }
	$1 = ((int_32)$1 * (int_32)[10])
	$20 = ( [-1] ? ($1 + $19) : ((int_32)$19 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$59
	$19 = *($15 + [1])
	$23 = ($15 + [1])
	$15 = $23
	$1 = $20
	$19 = ($19 + [-48])
	if ( ($19 <= [10]) ){ goto $label$58 }
	if ( ((int_32)$20 >= (int_32)[0]) ){ goto $label$52 }
	goto $label$3 
	
.LABEL $label$56
	if ( $13 ){ goto $label$18 }
	$23 = ($15 + [1])
	if ( ($0 == 0) ){ goto $label$53 }
	$15 = *($2)
	*($2) = ($15 + [4])
	$13 = [0]
	$20 = *($15)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$52 }
	
.LABEL $label$55
	$20 = ([0] - $20)
	$22 = ($22 | [8192])
	goto $label$52 
	
.LABEL $label$54
	$23 = $15
	goto $label$52 
	
.LABEL $label$53
	$13 = [0]
	$20 = [0]
	
.LABEL $label$52
	$15 = [0]
	$16 = [-1]
	if ( ((int_32)*($23) != (int_32)[46]) ){ goto $label$66 }
	$19 = *($23 + [1])
	if ( ((int_32)$19 != (int_32)[42]) ){ goto $label$65 }
	$1 = (*($23 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$64 }
	if ( ((int_32)*($23 + [3]) != (int_32)[36]) ){ goto $label$64 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($23 + [4])
	$16 = *((($3 + (*(($23 + [2])) << [4])) + [-768]))
	goto $label$61 
	
.LABEL $label$66
	$1 = $23
	$24 = [0]
	goto $label$60 
	
.LABEL $label$65
	$1 = ($23 + [1])
	$25 = ($19 + [-48])
	if ( ((uint_32)$25 > (uint_32)[9]) ){ goto $label$63 }
	$23 = [0]
	$19 = $1
	
.LOOP $label$67:
	$16 = [-1]
	if ( ((uint_32)$23 > (uint_32)[214748364]) ){ goto $label$68 }
	$1 = ((int_32)$23 * (int_32)[10])
	$16 = ( [-1] ? ($1 + $25) : ((int_32)$25 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$68
	$24 = [1]
	$25 = *($19 + [1])
	$1 = ($19 + [1])
	$19 = $1
	$23 = $16
	$25 = ($25 + [-48])
	if ( ($25 <= [10]) ){ goto $label$67 }
	goto $label$60 
	
.LABEL $label$64
	if ( $13 ){ goto $label$18 }
	$1 = ($23 + [2])
	if ( ($0 == 0) ){ goto $label$62 }
	$19 = *($2)
	*($2) = ($19 + [4])
	$16 = *($19)
	goto $label$61 
	
.LABEL $label$63
	$24 = [1]
	$16 = [0]
	goto $label$60 
	
.LABEL $label$62
	$16 = [0]
	
.LABEL $label$61
	$24 = ((int_32)uint_32($16 >> [31]) ^ (int_32)[1])
	
.LABEL $label$60
	
.LOOP $label$69:
	$19 = $15
	$15 = (*($1) + [-65])
	if ( ((uint_32)$15 > (uint_32)[57]) ){ goto $label$18 }
	$1 = ($1 + [1])
	$15 = *(((((int_32)$19 * (int_32)[58]) + $15) + [26080]))
	if ( (($15 + [-1]) <= [8]) ){ goto $label$69 }
	if ( ($15 == 0) ){ goto $label$18 }
	if ( ((int_32)$15 != (int_32)[27]) ){ goto $label$72 }
	if ( ((int_32)$21 > (int_32)[-1]) ){ goto $label$18 }
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$72
	if ( ((int_32)$21 < (int_32)[0]) ){ goto $label$73 }
	*(($4 + ($21 << [2]))) = $15
	$15 = ($3 + ($21 << [4]))
	*($5 + [424]) = *(($15 + [8]))
	*($5 + [416]) = *($15)
	$15 = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	goto $label$71 
	
.LABEL $label$73
	if ( ($0 == 0) ){ goto $label$70 }
	CALL $202(($5 + [416]), $15, $2)
	
.LABEL $label$71
	$23 = ($22 & [-65537])
	$21 = ( $23 ? $22 : ($22 & [8192]) )
	$26 = [0]
	$27 = [8209]
	$15 = *(($1 + [-1]))
	$28 = ( ( ($15 & [-33]) ? $15 : ((int_32)($15 & [15]) == (int_32)[3]) ) ? $15 : $19 )
	$15 = ($28 + [-65])
	if ( ((uint_32)$15 > (uint_32)[55]) ){ goto $label$9 }
	$22 = $12
	goto $label$101 
	
.LABEL $label$101
	if ( ((int_32)$16 > (int_32)[-1]) ){ goto $label$102 }
	if ( $24 ){ goto $label$3 }
	
.LABEL $label$102
	$29 = *($5 + [424])
	$30 = *($5 + [416])
	*($5 + [748]) = [0]
	if ( (CALL $192($30, $29) == 0) ){ goto $label$103 }
	$31 = [1]
	$32 = [8385]
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	if ( ((int_32)CALL $193($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$103
	if ( ($21 & [2048]) ){ goto $label$99 }
	$31 = ($21 & [1])
	$32 = ( [8391] ? [8386] : $31 )
	if ( ((int_32)CALL $193($30, $29) > (int_32)[1]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$100
	$29 = *($5 + [416])
	if ( ((int_64)$29 <= (int_64)-1) ){ goto $label$86 }
	if ( ($21 & [2048]) ){ goto $label$84 }
	$26 = ($21 & [1])
	$27 = ( [8211] ? [8209] : $26 )
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$99
	$31 = [1]
	$32 = [8388]
	if ( ((int_32)CALL $193($30, $29) <= (int_32)[1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$98
	*((($5 + [344]) + [4])) = [0]
	*($5 + [344]) = *($5 + [416])
	*($5 + [416]) = ($5 + [344])
	$16 = [-1]
	$17 = ($5 + [344])
	goto $label$96 
	
.LABEL $label$97
	$17 = *($5 + [416])
	if ( ($16 == 0) ){ goto $label$80 }
	
.LABEL $label$96
	$15 = [0]
	$18 = $17
	
.LOOP $label$104:
	$19 = *($18)
	if ( ($19 == 0) ){ goto $label$82 }
	$19 = CALL $195(($5 + [340]), $19)
	$22 = ((int_32)$19 < (int_32)[0])
	if ( $22 ){ goto $label$83 }
	if ( ((uint_32)$19 > (uint_32)($16 - $15)) ){ goto $label$83 }
	$18 = ($18 + [4])
	$15 = ($19 + $15)
	if ( ((uint_32)$16 > (uint_32)$15) ){ goto $label$104 }
	goto $label$82 
	
.LABEL $label$95
	*((($5 + [352]) + [54])) = *($5 + [416])
	$16 = [1]
	$17 = $11
	$22 = $12
	$21 = $23
	goto $label$8 
	
.LABEL $label$94
	$17 = CALL $198(*(CALL $181()))
	goto $label$88 
	
.LABEL $label$93
	$15 = [0]
	$18 = ($19 & [255])
	if ( ((uint_32)$18 > (uint_32)[7]) ){ goto $label$4 }
	goto $label$105 
	
.LABEL $label$105
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$92
	$17 = $12
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$106 }
	$17 = $12
	
.LOOP $label$107:
	*(($17 = ($17 + [-1]))) = (((CASTING uint_32)(uint_64 $29) & [7]) | [48])
	$29 = (uint_64)$29 >> (uint_64)(int_64)3
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$107 }
	
.LABEL $label$106
	if ( ($21 & [8]) ){ goto $label$81 }
	$26 = [0]
	$27 = [8209]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$91
	$16 = ( $16 ? [8] : ((uint_32)$16 > (uint_32)[8]) )
	$21 = ($21 | [8])
	$28 = [120]
	
.LABEL $label$90
	$26 = [0]
	$27 = [8209]
	$29 = *($5 + [416])
	if ( (int_64)($29 == 0) ){ goto $label$108 }
	$15 = ($28 & [32])
	$17 = $12
	
.LOOP $label$109:
	*(($17 = ($17 + [-1]))) = (*((((CASTING uint_32)(uint_64 $29) & [15]) + [26544])) | $15)
	$29 = (uint_64)$29 >> (uint_64)(int_64)4
	if ( ((int_64)$29) != (int_64)0) ){ goto $label$109 }
	if ( (($21 & [8]) == 0) ){ goto $label$12 }
	if ( (int_64)(*($5 + [416]) == 0) ){ goto $label$12 }
	$27 = (int_32($28 >> [4]) + [8209])
	$26 = [2]
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$108
	$17 = $12
	if ( $24 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$89
	$15 = *($5 + [416])
	$17 = ( $15 ? [8249] : $15 )
	
.LABEL $label$88
	$26 = [0]
	$15 = CALL $206($17, ( [2147483647] ? $16 : ((int_32)$16 < (int_32)[0]) ))
	$22 = ($17 + $15)
	if ( ((int_32)$16 <= (int_32)[-1]) ){ goto $label$85 }
	$21 = $23
	$16 = $15
	goto $label$8 
	
.LABEL $label$87
	$26 = [0]
	$27 = [8209]
	$29 = *($5 + [416])
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$86
	$29 = (int_64)
	*($5 + [416]) = $29((int_64)0 - $29))
	$26 = [1]
	$27 = [8209]
	if ( ((uint_64)$29 >= (uint_64)(int_64)4294967296) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$85
	$21 = $23
	$16 = $15
	if ( (*($22) == 0) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$84
	$26 = [1]
	$27 = [8210]
	if ( (uint_64)($29 <= (int_64)4294967296) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$83
	if ( $22 ){ goto $label$2 }
	
.LABEL $label$82
	if ( ((int_32)$15 < (int_32)[0]) ){ goto $label$3 }
	$23 = ($21 & [73728])
	if ( $23 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$81
	$15 = ($12 - $17)
	$27 = ( [8209] ? [8214] : ((int_32)$16 > (int_32)$15) )
	$26 = ((int_32)$16 <= (int_32)$15)
	goto $label$12 
	
.LABEL $label$80
	$15 = [0]
	$23 = ($21 & [73728])
	if ( ($23 == 0) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$79
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$78
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$77
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$76
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$75
	*(*($5 + [416])) = $14
	goto $label$4 
	
.LABEL $label$74
	*(*($5 + [416])) = (CASTING int_64)(int_32 $14)
	goto $label$4 
	
.LABEL $label$70
	$global$0 = ($5 + [8128])
	return [0]
	
.LABEL $label$18
	*(CALL $181()) = [22]
	goto $label$2 
	
.LABEL $label$17
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$16 }
	$18 = ($25 <= [256])
	$25 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $25 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$111 }
	$18 = ($19 == 0)
	$19 = $25
	
.LOOP $label$112:
	if ( (($18 & [1]) == 0) ){ goto $label$113 }
	CALL $191(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$113
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$112 }
	if ( $22 ){ goto $label$16 }
	$25 = ($25 & [255])
	goto $label$110 
	
.LABEL $label$111
	if ( $19 ){ goto $label$16 }
	
.LABEL $label$110
	CALL $191(($5 + [432]), $25, $0)
	
.LABEL $label$16
	if ( ($15 == 0) ){ goto $label$114 }
	$18 = [0]
	
.LOOP $label$115:
	$19 = *($17)
	if ( ($19 == 0) ){ goto $label$114 }
	$19 = CALL $195(($5 + [340]), $19)
	$18 = ($19 + $18)
	if ( ((uint_32)$18 > (uint_32)$15) ){ goto $label$114 }
	if ( (*($0) & [32]) ){ goto $label$116 }
	CALL $191(($5 + [340]), $19, $0)
	
.LABEL $label$116
	$17 = ($17 + [4])
	if ( ($18 <= $15) ){ goto $label$115 }
	
.LABEL $label$114
	if ( ((int_32)$23 != (int_32)[8192]) ){ goto $label$117 }
	if ( ((int_32)$20 <= (int_32)$15) ){ goto $label$117 }
	$18 = ($22 <= [256])
	$22 = ($20 - $15)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$119 }
	$18 = ($19 == 0)
	$19 = $22
	
.LOOP $label$120:
	if ( (($18 & [1]) == 0) ){ goto $label$121 }
	CALL $191(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$121
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$120 }
	if ( $16 ){ goto $label$117 }
	$22 = ($22 & [255])
	goto $label$118 
	
.LABEL $label$119
	if ( $19 ){ goto $label$117 }
	
.LABEL $label$118
	CALL $191(($5 + [432]), $22, $0)
	
.LABEL $label$117
	$15 = ( $20 ? $15 : ((int_32)$20 > (int_32)$15) )
	goto $label$4 
	
.LABEL $label$15
	$30 = $29
	$17 = $12
	goto $label$13 
	
.LABEL $label$14
	$17 = $12
	
.LOOP $label$122:
	$30 = ((uint_64)$29 / (uint_64)(int_64)10)
	*(($17 = ($17 + [-1]))) = ((CASTING uint_32)(uint_64 (int_64))($29 - ((int_64)$30 * (int_64)10))) | [48])
	$15 = ((uint_64)$29 > (uint_64)(int_64)42949672959)
	$29 = $30
	if ( $15 ){ goto $label$122 }
	
.LABEL $label$13
	$15 = (CASTING uint_32)(uint_64 $30)
	if ( ($15 == 0) ){ goto $label$12 }
	
.LOOP $label$123:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$123 }
	
.LABEL $label$12
	if ( ($24 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$16 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$10
	$21 = ( ($21 & [-65537]) ? $21 : ((int_32)$16 > (int_32)[-1]) )
	$29 = *($5 + [416])
	if ( $16 ){ goto $label$124 }
	if ( ((int_64)($29 == 0) == 0) ){ goto $label$124 }
	$17 = $12
	$22 = $12
	$16 = [0]
	goto $label$8 
	
.LABEL $label$124
	$15 = (($12 - $17) + (int_64)($29 == 0))
	$16 = ( $16 ? $15 : ((int_32)$16 > (int_32)$15) )
	
.LABEL $label$9
	$22 = $12
	
.LABEL $label$8
	$24 = ($22 - $17)
	$28 = ( $24 ? $16 : ((int_32)$16 < (int_32)$24) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$3 }
	$25 = ($26 + $28)
	$15 = ( $25 ? $20 : ((int_32)$20 < (int_32)$25) )
	if ( ((int_32)$15 > (int_32)$18) ){ goto $label$3 }
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$125 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$125 }
	$18 = ($36 <= [256])
	$36 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $36 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$127 }
	$18 = ($19 == 0)
	$19 = $36
	
.LOOP $label$128:
	if ( (($18 & [1]) == 0) ){ goto $label$129 }
	CALL $191(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$129
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$128 }
	if ( $23 ){ goto $label$125 }
	$36 = ($36 & [255])
	goto $label$126 
	
.LABEL $label$127
	if ( $19 ){ goto $label$125 }
	
.LABEL $label$126
	CALL $191(($5 + [432]), $36, $0)
	
.LABEL $label$125
	if ( (*($0) & [32]) ){ goto $label$130 }
	CALL $191($27, $26, $0)
	
.LABEL $label$130
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$131 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$131 }
	$18 = ($26 <= [256])
	$26 = ($15 - $25)
	CALL memset(($5 + [432]), [48], ( $26 ? [256] : $18 ))
	$22 = *($0)
	$19 = ($22 & [32])
	if ( $18 ){ goto $label$133 }
	$18 = ($19 == 0)
	$19 = $26
	
.LOOP $label$134:
	if ( (($18 & [1]) == 0) ){ goto $label$135 }
	CALL $191(($5 + [432]), [256], $0)
	$22 = *($0)
	
.LABEL $label$135
	$23 = ($22 & [32])
	$18 = ($23 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$134 }
	if ( $23 ){ goto $label$131 }
	$26 = ($26 & [255])
	goto $label$132 
	
.LABEL $label$133
	if ( $19 ){ goto $label$131 }
	
.LABEL $label$132
	CALL $191(($5 + [432]), $26, $0)
	
.LABEL $label$131
	if ( ((int_32)$24 >= (int_32)$16) ){ goto $label$136 }
	$18 = ($23 <= [256])
	$23 = ($28 - $24)
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $18 ))
	$16 = *($0)
	$19 = ($16 & [32])
	if ( $18 ){ goto $label$138 }
	$18 = ($19 == 0)
	$19 = $23
	
.LOOP $label$139:
	if ( (($18 & [1]) == 0) ){ goto $label$140 }
	CALL $191(($5 + [432]), [256], $0)
	$16 = *($0)
	
.LABEL $label$140
	$22 = ($16 & [32])
	$18 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$139 }
	if ( $22 ){ goto $label$136 }
	$23 = ($23 & [255])
	goto $label$137 
	
.LABEL $label$138
	if ( $19 ){ goto $label$136 }
	
.LABEL $label$137
	CALL $191(($5 + [432]), $23, $0)
	
.LABEL $label$136
	if ( (*($0) & [32]) ){ goto $label$141 }
	CALL $191($17, $24, $0)
	
.LABEL $label$141
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$4 }
	if ( ((int_32)$25 >= (int_32)$20) ){ goto $label$4 }
	$18 = ($16 <= [256])
	$16 = ($15 - $25)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$143 }
	$18 = ($19 == 0)
	$19 = $16
	
.LOOP $label$144:
	if ( (($18 & [1]) == 0) ){ goto $label$145 }
	CALL $191(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$145
	$20 = ($17 & [32])
	$18 = ($20 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$144 }
	if ( $20 ){ goto $label$4 }
	$16 = ($16 & [255])
	goto $label$142 
	
.LABEL $label$143
	if ( $19 ){ goto $label$4 }
	
.LABEL $label$142
	CALL $191(($5 + [432]), $16, $0)
	goto $label$4 
	
.LABEL $label$7
	$23 = CALL __unordtf2($30, $29, $30, $29)
	$16 = ($31 + [3])
	if ( ($21 & [8192]) ){ goto $label$146 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$146 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$148 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$149:
	if ( (($15 & [1]) == 0) ){ goto $label$150 }
	CALL $191(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$150
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$149 }
	if ( $17 ){ goto $label$146 }
	$22 = ($22 & [255])
	goto $label$147 
	
.LABEL $label$148
	if ( $18 ){ goto $label$146 }
	
.LABEL $label$147
	CALL $191(($5 + [432]), $22, $0)
	
.LABEL $label$146
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$155 }
	CALL $191($32, $31, $0)
	if ( ((*($0) & [32]) == 0) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$155
	if ( ($15 & [32]) ){ goto $label$153 }
	
.LABEL $label$154
	$15 = uint_32(($28 & [32]) >> [5])
	CALL $191(( ( [8477] ? [8503] : $15 ) ? ( [8427] ? [8451] : $15 ) : $23 ), [3], $0)
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	goto $label$152 
	
.LABEL $label$153
	if ( ((int_32)($21 & [73728]) != (int_32)[8192]) ){ goto $label$151 }
	
.LABEL $label$152
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$151 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$157 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$158:
	if ( (($15 & [1]) == 0) ){ goto $label$159 }
	CALL $191(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$159
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$158 }
	if ( $17 ){ goto $label$151 }
	$22 = ($22 & [255])
	goto $label$156 
	
.LABEL $label$157
	if ( $18 ){ goto $label$151 }
	
.LABEL $label$156
	CALL $191(($5 + [432]), $22, $0)
	
.LABEL $label$151
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	goto $label$5 
	
.LABEL $label$6
	CALL $199(($5 + [320]), $30, $29, ($5 + [748]))
	$30 = *($5 + [328])
	$29 = *($5 + [320])
	CALL __addtf3(($5 + [304]), $29, $30, $29, $30)
	$30 = *((($5 + [304]) + [8]))
	$29 = *($5 + [304])
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$160 }
	*($5 + [748]) = (*($5 + [748]) + [-1])
	
.LABEL $label$160
	$33 = ($28 | [32])
	if ( ((int_32)$33 != (int_32)[97]) ){ goto $label$173 }
	$22 = ($28 & [32])
	$26 = ( ($32 + [9]) ? $32 : $22 )
	if ( ((uint_32)$16 > (uint_32)[26]) ){ goto $label$171 }
	if ( (([27] - $16) == 0) ){ goto $label$171 }
	$15 = ($16 + [-27])
	$34 = (int_64)4612248968380809216
	$35 = (int_64)0
	
.LOOP $label$174:
	CALL __multf3(($5 + [208]), $35, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($5 + [208]) + [8]))
	$35 = *($5 + [208])
	$15 = ($15 + [1])
	if ( $15 ){ goto $label$174 }
	if ( ((int_32)*($26) != (int_32)[45]) ){ goto $label$172 }
	CALL __subtf3(($5 + [160]), $29, ((int_64)$30 ^ (int_64)-9223372036854775808), $35, $34)
	CALL __addtf3(($5 + [144]), $35, $34, *($5 + [160]), *((($5 + [160]) + [8])))
	$30 = ((int_64)*((($5 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$29 = *($5 + [144])
	goto $label$171 
	
.LABEL $label$173
	$15 = ((int_32)$16 < (int_32)[0])
	if ( (CALL __netf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$176 }
	CALL __multf3(($5 + [288]), $29, $30, (int_64)0, (int_64)4619285842798575616)
	$22 = (*($5 + [748]) + [-28])
	*($5 + [748]) = $22
	$30 = *((($5 + [288]) + [8]))
	$29 = *($5 + [288])
	goto $label$175 
	
.LABEL $label$176
	$22 = *($5 + [748])
	
.LABEL $label$175
	$27 = ( [6] ? $16 : $15 )
	$36 = ( ($5 + [752]) ? $9 : ((int_32)$22 < (int_32)[0]) )
	$19 = $36
	
.LOOP $label$177:
	$15 = CALL __fixunstfsi($29, $30)
	CALL __floatunsitf(($5 + [272]), $15)
	CALL __subtf3(($5 + [256]), $29, $30, *($5 + [272]), *((($5 + [272]) + [8])))
	CALL __multf3(($5 + [240]), *($5 + [256]), *((($5 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($19) = $15
	$19 = ($19 + [4])
	$30 = *((($5 + [240]) + [8]))
	$29 = *($5 + [240])
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$177 }
	if ( ((int_32)$22 < (int_32)[1]) ){ goto $label$180 }
	$18 = $36
	
.LOOP $label$181:
	$17 = ( $22 ? [29] : ((int_32)$22 < (int_32)[29]) )
	$15 = ($19 + [-4])
	if ( ($15 <= $18) ){ goto $label$182 }
	$30 = (CASTING uint_64)(uint_32 $17)
	$29 = (int_64)0
	
.LOOP $label$183:
	$29 = ((uint_64)$29 / (uint_64)(int_64)1000000000)
	$29 = ((int_64)((int_64)*($15) << (int_64)$30) + (int_64)((int_64)$29 & (int_64)4294967295))
	*($15) = (int_64))($29 - ((int_64)$29 * (int_64)1000000000))
	$15 = ($15 + [-4])
	if ( ((uint_32)$15 >= (uint_32)$18) ){ goto $label$183 }
	$15 = (CASTING uint_32)(uint_64 $29)
	if ( ($15 == 0) ){ goto $label$182 }
	*(($18 = ($18 + [-4]))) = $15
	
.LABEL $label$182
	
.LOOP $label$185:
	$15 = $19
	if ( ((uint_32)$15 <= (uint_32)$18) ){ goto $label$184 }
	$19 = ($15 + [-4])
	if ( (*($19) == 0) ){ goto $label$185 }
	
.LABEL $label$184
	$19 = $15
	$22 = ($22 - $17)
	if ( ((int_32)$22 > (int_32)[0]) ){ goto $label$181 }
	*($5 + [748]) = $22
	if ( ((int_32)$22 > (int_32)[-1]) ){ goto $label$178 }
	goto $label$179 
	
.LABEL $label$180
	$15 = $19
	$18 = $36
	if ( ((int_32)$22 > (int_32)[-1]) ){ goto $label$178 }
	
.LABEL $label$179
	$26 = (((uint_32)($27 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$33 != (int_32)[102]) ){ goto $label$187 }
	$37 = ($36 + ($26 << [2]))
	
.LOOP $label$188:
	$19 = ([0] - $22)
	$23 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$190 }
	$25 = uint_32([1000000000] >> $23)
	$24 = ((int_32)([-1] << $23) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$191:
	$16 = *($19)
	*($19) = (uint_32($16 >> $23) + $17)
	$17 = ((int_32)($16 & $24) * (int_32)$25)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$191 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$189 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$189 
	
.LABEL $label$190
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$189
	$15 = ( $37 ? $15 : ((int_32)int_32(($15 - $36) >> [2]) > (int_32)$26) )
	$22 = ($23 + $22)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$188 }
	goto $label$186 
	
.LABEL $label$187
	
.LOOP $label$192:
	$19 = ([0] - $22)
	$23 = ( $19 ? [9] : ((int_32)$19 < (int_32)[9]) )
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$194 }
	$25 = uint_32([1000000000] >> $23)
	$24 = ((int_32)([-1] << $23) ^ (int_32)[-1])
	$17 = [0]
	$19 = $18
	
.LOOP $label$195:
	$16 = *($19)
	*($19) = (uint_32($16 >> $23) + $17)
	$17 = ((int_32)($16 & $24) * (int_32)$25)
	$19 = ($19 + [4])
	if ( ($19 <= $15) ){ goto $label$195 }
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	if ( ($17 == 0) ){ goto $label$193 }
	*($15) = $17
	$15 = ($15 + [4])
	goto $label$193 
	
.LABEL $label$194
	$18 = ( $18 ? ($18 + [4]) : *($18) )
	
.LABEL $label$193
	$15 = ( ($18 + ($26 << [2])) ? $15 : ((int_32)int_32(($15 - $18) >> [2]) > (int_32)$26) )
	$22 = ($23 + $22)
	if ( ((int_32)$22 < (int_32)[0]) ){ goto $label$192 }
	
.LABEL $label$186
	*($5 + [748]) = $22
	
.LABEL $label$178
	$19 = [0]
	if ( ((uint_32)$18 >= (uint_32)$15) ){ goto $label$196 }
	$19 = ((int_32)int_32(($36 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$196 }
	$17 = [10]
	
.LOOP $label$197:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$197 }
	
.LABEL $label$196
	$23 = ((int_32)$33 == (int_32)[103])
	$25 = (((int_32)$27 != (int_32)[0]) & $23)
	$16 = ( [0] ? $19 : ((int_32)$33 == (int_32)[102]) )
	$17 = (($27 - $16) - $25)
	if ( ((int_32)$17 >= (int_32)(((int_32)int_32(($15 - $36) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$198 }
	$24 = ($17 + [147456])
	$26 = ((int_32)$24 / (int_32)[9])
	$37 = ($36 + ($26 << [2]))
	$22 = ($37 + [-65532])
	$17 = [10]
	$26 = ((int_32)$26 * (int_32)[9])
	if ( ((int_32)($24 - $26) > (int_32)[7]) ){ goto $label$199 }
	$16 = (((($27 + ([0] - $25)) + [147455]) - $16) - $26)
	$17 = [10]
	
.LOOP $label$200:
	$17 = ((int_32)$17 * (int_32)[10])
	$16 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[7]) ){ goto $label$200 }
	
.LABEL $label$199
	$24 = ((uint_32)$25 / (uint_32)$17)
	$25 = *($22)
	$16 = ($25 - ((int_32)$24 * (int_32)$17))
	$26 = ($22 + [4])
	if ( ((int_32)$26 != (int_32)$15) ){ goto $label$202 }
	if ( ($16 == 0) ){ goto $label$201 }
	
.LABEL $label$202
	if ( ($24 & [1]) ){ goto $label$204 }
	$29 = (int_64)4643211215818981376
	$30 = (int_64)0
	if ( ((uint_32)$22 <= (uint_32)$18) ){ goto $label$203 }
	if ( ((int_32)$17 != (int_32)[1000000000]) ){ goto $label$203 }
	if ( ((*(($22 + [-4])) & [1]) == 0) ){ goto $label$203 }
	
.LABEL $label$204
	$29 = (int_64)4643211215818981376
	$30 = (int_64)1
	
.LABEL $label$203
	$34 = (int_64)4611123068473966592
	$24 = uint_32($17 >> [1])
	if ( ($16 <= $24) ){ goto $label$205 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$16 == (int_32)$24) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$15) )
	
.LABEL $label$205
	if ( ($31 == 0) ){ goto $label$206 }
	if ( ((int_32)*($32) != (int_32)[45]) ){ goto $label$206 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$29 = ((int_64)$29 ^ (int_64)-9223372036854775808)
	
.LABEL $label$206
	CALL __addtf3(($5 + [224]), $30, $29, (int_64)0, $34)
	$16 = ($25 - $16)
	*($22) = $16
	if ( (CALL __eqtf2(*($5 + [224]), *((($5 + [224]) + [8])), $30, $29) == 0) ){ goto $label$201 }
	$19 = ($16 + $17)
	*($22) = $19
	if ( ($19 <= [1000000000]) ){ goto $label$207 }
	$19 = ($37 + [-65536])
	
.LOOP $label$208:
	*(($19 + [4])) = [0]
	if ( ((uint_32)$19 >= (uint_32)$18) ){ goto $label$209 }
	*(($18 = ($18 + [-4]))) = [0]
	
.LABEL $label$209
	$17 = (*($19) + [1])
	*($19) = $17
	$19 = ($19 + [-4])
	if ( ((uint_32)$17 > (uint_32)[999999999]) ){ goto $label$208 }
	$22 = ($19 + [4])
	
.LABEL $label$207
	$19 = ((int_32)int_32(($36 - $18) >> [2]) * (int_32)[9])
	$16 = *($18)
	if ( ($16 <= [10]) ){ goto $label$201 }
	$17 = [10]
	
.LOOP $label$210:
	$19 = ($19 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( ((uint_32)$16 >= (uint_32)$17) ){ goto $label$210 }
	
.LABEL $label$201
	$17 = ($22 + [4])
	$15 = ( $17 ? $15 : ((uint_32)$15 > (uint_32)$17) )
	
.LABEL $label$198
	$22 = ([0] - $19)
	
.LOOP $label$213:
	$16 = $15
	if ( ((uint_32)$16 <= (uint_32)$18) ){ goto $label$212 }
	$15 = ($16 + [-4])
	if ( (*($15) == 0) ){ goto $label$213 }
	$24 = [1]
	if ( $23 ){ goto $label$211 }
	goto $label$162 
	
.LABEL $label$212
	$24 = [0]
	if ( ($23 == 0) ){ goto $label$162 }
	
.LABEL $label$211
	$15 = ($27 + ($27 == 0))
	if ( ((int_32)$15 <= (int_32)$19) ){ goto $label$170 }
	if ( ((int_32)$19 < (int_32)[-4]) ){ goto $label$170 }
	$28 = ($28 + [-1])
	$27 = (($15 + [-1]) - $19)
	$23 = ($21 & [8])
	if ( ($23 == 0) ){ goto $label$169 }
	goto $label$161 
	
.LABEL $label$172
	CALL __addtf3(($5 + [192]), $29, $30, $35, $34)
	CALL __subtf3(($5 + [176]), *($5 + [192]), *((($5 + [192]) + [8])), $35, $34)
	$30 = *((($5 + [176]) + [8]))
	$29 = *($5 + [176])
	
.LABEL $label$171
	$19 = $10
	$15 = int_32($23 >> [31])
	$23 = *($5 + [748])
	$15 = ((int_32)($23 + $15) ^ (int_32)$15)
	if ( ($15 == 0) ){ goto $label$215 }
	$18 = [0]
	
.LOOP $label$216:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [692]) + $18) + [11])) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$216 }
	$19 = ((($5 + [692]) + $18) + [12])
	if ( $18 ){ goto $label$214 }
	
.LABEL $label$215
	*(($19 = ($19 + [-1]))) = [48]
	
.LABEL $label$214
	$25 = ($31 | [2])
	*(($24 = ($19 + [-2]))) = ($28 + [15])
	*(($19 + [-1])) = ( [45] ? [43] : ((int_32)$23 < (int_32)[0]) )
	if ( ($21 & [8]) ){ goto $label$217 }
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$168 }
	$15 = ($5 + [704])
	
.LOOP $label$218:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [80]), $18)
	CALL __subtf3(($5 + [64]), $29, $30, *($5 + [80]), *((($5 + [80]) + [8])))
	CALL __multf3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [26544])) | $22)
	$30 = *((($5 + [48]) + [8]))
	$29 = *($5 + [48])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$219 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$219
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$218 }
	goto $label$167 
	
.LABEL $label$217
	$15 = ($5 + [704])
	
.LOOP $label$220:
	$18 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [128]), $18)
	CALL __subtf3(($5 + [112]), $29, $30, *($5 + [128]), *((($5 + [128]) + [8])))
	CALL __multf3(($5 + [96]), *($5 + [112]), *((($5 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($15) = (*(($18 + [26544])) | $22)
	$30 = *((($5 + [96]) + [8]))
	$29 = *($5 + [96])
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$221 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$221
	$15 = $18
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$220 }
	goto $label$167 
	
.LABEL $label$170
	$27 = ($15 + [-1])
	$28 = ($28 + [-2])
	$23 = ($21 & [8])
	if ( $23 ){ goto $label$161 }
	
.LABEL $label$169
	$15 = [9]
	if ( ($24 == 0) ){ goto $label$222 }
	$23 = *(($16 + [-4]))
	if ( ($23 == 0) ){ goto $label$222 }
	$15 = [0]
	if ( ((uint_32)$23 % (uint_32)[10]) ){ goto $label$222 }
	$17 = [10]
	$15 = [0]
	
.LOOP $label$223:
	$15 = ($15 + [1])
	$17 = ((int_32)$17 * (int_32)[10])
	if ( (((uint_32)$23 % (uint_32)$17) == 0) ){ goto $label$223 }
	
.LABEL $label$222
	$17 = (((int_32)int_32(($16 - $36) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($28 | [32]) != (int_32)[102]) ){ goto $label$166 }
	$23 = [0]
	$15 = ($17 - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$27 = ( $27 ? $15 : ((int_32)$27 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$168
	$18 = ($5 + [704])
	
.LOOP $label$224:
	$19 = CALL __fixtfsi($29, $30)
	CALL __floatsitf(($5 + [32]), $19)
	CALL __subtf3(($5 + [16]), $29, $30, *($5 + [32]), *((($5 + [32]) + [8])))
	CALL __multf3($5, *($5 + [16]), *((($5 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($15 = $18)) = (*(($19 + [26544])) | $22)
	$30 = *(($5 + [8]))
	$29 = *($5)
	$18 = ($15 + [1])
	if ( ((int_32)($18 - ($5 + [704])) != (int_32)[1]) ){ goto $label$225 }
	if ( (CALL __eqtf2($29, $30, (int_64)0, (int_64)0) == 0) ){ goto $label$225 }
	*(($15 + [1])) = [46]
	$18 = ($15 + [2])
	
.LABEL $label$225
	if ( CALL __netf2($29, $30, (int_64)0, (int_64)0) ){ goto $label$224 }
	
.LABEL $label$167
	$15 = [-1]
	$22 = ($10 - $24)
	if ( ((int_32)(([2147483645] - $25) - $22) < (int_32)$16) ){ goto $label$5 }
	$23 = ($18 - ($5 + [704]))
	$28 = ( ( ($16 + [2]) ? $23 : ((int_32)($8 + $18) < (int_32)$16) ) ? $23 : $16 )
	$16 = (($22 + $25) + $28)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$163 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$163 }
	$15 = ($27 <= [256])
	$27 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $27 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$165 }
	$15 = ($18 == 0)
	$18 = $27
	
.LOOP $label$226:
	if ( (($15 & [1]) == 0) ){ goto $label$227 }
	CALL $191(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$227
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$226 }
	if ( $17 ){ goto $label$163 }
	$27 = ($27 & [255])
	goto $label$164 
	
.LABEL $label$166
	$23 = [0]
	$15 = (($17 + $19) - $15)
	$15 = ( $15 ? [0] : ((int_32)$15 > (int_32)[0]) )
	$27 = ( $27 ? $15 : ((int_32)$27 < (int_32)$15) )
	goto $label$161 
	
.LABEL $label$165
	if ( $18 ){ goto $label$163 }
	
.LABEL $label$164
	CALL $191(($5 + [432]), $27, $0)
	
.LABEL $label$163
	if ( (*($0) & [32]) ){ goto $label$228 }
	CALL $191($26, $25, $0)
	
.LABEL $label$228
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$229 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$229 }
	$15 = ($25 <= [256])
	$25 = ($20 - $16)
	CALL memset(($5 + [432]), [48], ( $25 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$231 }
	$15 = ($18 == 0)
	$18 = $25
	
.LOOP $label$232:
	if ( (($15 & [1]) == 0) ){ goto $label$233 }
	CALL $191(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$233
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$232 }
	if ( $17 ){ goto $label$229 }
	$25 = ($25 & [255])
	goto $label$230 
	
.LABEL $label$231
	if ( $18 ){ goto $label$229 }
	
.LABEL $label$230
	CALL $191(($5 + [432]), $25, $0)
	
.LABEL $label$229
	if ( (*($0) & [32]) ){ goto $label$234 }
	CALL $191(($5 + [704]), $23, $0)
	
.LABEL $label$234
	$23 = ($28 - $23)
	if ( ((int_32)$23 < (int_32)[1]) ){ goto $label$235 }
	$15 = ($23 <= [256])
	CALL memset(($5 + [432]), [48], ( $23 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$237 }
	$15 = ($18 == 0)
	$18 = $23
	
.LOOP $label$238:
	if ( (($15 & [1]) == 0) ){ goto $label$239 }
	CALL $191(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$239
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$238 }
	if ( $17 ){ goto $label$235 }
	$23 = ($23 & [255])
	goto $label$236 
	
.LABEL $label$237
	if ( $18 ){ goto $label$235 }
	
.LABEL $label$236
	CALL $191(($5 + [432]), $23, $0)
	
.LABEL $label$235
	if ( (*($0) & [32]) ){ goto $label$240 }
	CALL $191($24, $22, $0)
	
.LABEL $label$240
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$241 }
	if ( ((int_32)$20 <= (int_32)$16) ){ goto $label$241 }
	$15 = ($22 <= [256])
	$22 = ($20 - $16)
	CALL memset(($5 + [432]), [32], ( $22 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$243 }
	$15 = ($18 == 0)
	$18 = $22
	
.LOOP $label$244:
	if ( (($15 & [1]) == 0) ){ goto $label$245 }
	CALL $191(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$245
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$244 }
	if ( $17 ){ goto $label$241 }
	$22 = ($22 & [255])
	goto $label$242 
	
.LABEL $label$243
	if ( $18 ){ goto $label$241 }
	
.LABEL $label$242
	CALL $191(($5 + [432]), $22, $0)
	
.LABEL $label$241
	$15 = ( $20 ? $16 : ((int_32)$20 > (int_32)$16) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$162
	$23 = ($21 & [8])
	
.LABEL $label$161
	$15 = [-1]
	$25 = ($27 | $23)
	if ( ((int_32)$27 > (int_32)( [2147483645] ? [2147483646] : $25 )) ){ goto $label$5 }
	$26 = (($27 + ((int_32)$25 != (int_32)[0])) + [1])
	$33 = ((int_32)($28 | [32]) != (int_32)[102])
	if ( $33 ){ goto $label$247 }
	if ( ((int_32)$19 > (int_32)([2147483647] - $26)) ){ goto $label$5 }
	$19 = ( $19 ? [0] : ((int_32)$19 > (int_32)[0]) )
	goto $label$246 
	
.LABEL $label$247
	$17 = $10
	$38 = ((int_32)$19 < (int_32)[0])
	$15 = ( $22 ? $19 : $38 )
	if ( ($15 == 0) ){ goto $label$248 }
	
.LOOP $label$249:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($17 = ($17 + [-1]))) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$22 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $22 ){ goto $label$249 }
	
.LABEL $label$248
	if ( ((int_32)($10 - $17) > (int_32)[1]) ){ goto $label$250 }
	$15 = ($17 + [-1])
	
.LOOP $label$251:
	*($15) = [48]
	$19 = ($10 - $15)
	$17 = ($15 + [-1])
	$15 = $17
	if ( ((int_32)$19 < (int_32)[2]) ){ goto $label$251 }
	$17 = ($17 + [1])
	
.LABEL $label$250
	*(($37 = ($17 + [-2]))) = $28
	$15 = [-1]
	*(($17 + [-1])) = ( [45] ? [43] : $38 )
	$19 = ($10 - $37)
	if ( ((int_32)$19 > (int_32)([2147483647] - $26)) ){ goto $label$5 }
	
.LABEL $label$246
	$15 = [-1]
	$19 = ($19 + $26)
	if ( ((int_32)$19 > (int_32)((int_32)$31 ^ (int_32)[2147483647])) ){ goto $label$5 }
	$26 = ($19 + $31)
	$21 = ($21 & [73728])
	if ( $21 ){ goto $label$252 }
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$252 }
	$15 = ($28 <= [256])
	$28 = ($20 - $26)
	CALL memset(($5 + [432]), [32], ( $28 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$254 }
	$15 = ($19 == 0)
	$19 = $28
	
.LOOP $label$255:
	if ( (($15 & [1]) == 0) ){ goto $label$256 }
	CALL $191(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$256
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$255 }
	if ( $22 ){ goto $label$252 }
	$28 = ($28 & [255])
	goto $label$253 
	
.LABEL $label$254
	if ( $19 ){ goto $label$252 }
	
.LABEL $label$253
	CALL $191(($5 + [432]), $28, $0)
	
.LABEL $label$252
	if ( (*($0) & [32]) ){ goto $label$257 }
	CALL $191($32, $31, $0)
	
.LABEL $label$257
	if ( ((int_32)$21 != (int_32)[65536]) ){ goto $label$258 }
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$258 }
	$15 = ($28 <= [256])
	$28 = ($20 - $26)
	CALL memset(($5 + [432]), [48], ( $28 ? [256] : $15 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $15 ){ goto $label$260 }
	$15 = ($19 == 0)
	$19 = $28
	
.LOOP $label$261:
	if ( (($15 & [1]) == 0) ){ goto $label$262 }
	CALL $191(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$262
	$22 = ($17 & [32])
	$15 = ($22 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$261 }
	if ( $22 ){ goto $label$258 }
	$28 = ($28 & [255])
	goto $label$259 
	
.LABEL $label$260
	if ( $19 ){ goto $label$258 }
	
.LABEL $label$259
	CALL $191(($5 + [432]), $28, $0)
	
.LABEL $label$258
	if ( $33 ){ goto $label$273 }
	$23 = ( $36 ? $18 : ((uint_32)$18 > (uint_32)$36) )
	$22 = $23
	
.LOOP $label$274:
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$276 }
	$18 = [0]
	
.LOOP $label$277:
	$19 = ((uint_32)$15 / (uint_32)[10])
	*(($6 + $18)) = (($15 - ((int_32)$19 * (int_32)[10])) | [48])
	$18 = ($18 + [-1])
	$17 = ((uint_32)$15 > (uint_32)[9])
	$15 = $19
	if ( $17 ){ goto $label$277 }
	goto $label$275 
	
.LABEL $label$276
	$18 = [0]
	
.LABEL $label$275
	$15 = ($7 + $18)
	if ( ((int_32)$22 == (int_32)$23) ){ goto $label$281 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$280 }
	
.LOOP $label$282:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$282 }
	$15 = ($5 + [704])
	if ( ((*($0) & [32]) == 0) ){ goto $label$279 }
	goto $label$278 
	
.LABEL $label$281
	if ( $18 ){ goto $label$280 }
	*(($15 = ($15 + [-1]))) = [48]
	
.LABEL $label$280
	if ( (*($0) & [32]) ){ goto $label$278 }
	
.LABEL $label$279
	CALL $191($15, ($7 - $15), $0)
	
.LABEL $label$278
	$22 = ($22 + [4])
	if ( ((uint_32)$22 <= (uint_32)$36) ){ goto $label$274 }
	if ( ($25 == 0) ){ goto $label$283 }
	if ( (*($0) & [32]) ){ goto $label$283 }
	CALL $191([8525], [1], $0)
	
.LABEL $label$283
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$272 }
	if ( ((uint_32)$22 >= (uint_32)$16) ){ goto $label$271 }
	
.LOOP $label$284:
	$15 = $7
	$18 = *($22)
	if ( ($18 == 0) ){ goto $label$286 }
	$15 = $7
	
.LOOP $label$287:
	$19 = ((uint_32)$18 / (uint_32)[10])
	*(($15 = ($15 + [-1]))) = (($18 - ((int_32)$19 * (int_32)[10])) | [48])
	$17 = ((uint_32)$18 > (uint_32)[9])
	$18 = $19
	if ( $17 ){ goto $label$287 }
	if ( ((uint_32)$15 <= (uint_32)($5 + [704])) ){ goto $label$285 }
	
.LABEL $label$286
	
.LOOP $label$288:
	*(($15 = ($15 + [-1]))) = [48]
	if ( ((uint_32)$15 > (uint_32)($5 + [704])) ){ goto $label$288 }
	
.LABEL $label$285
	if ( (*($0) & [32]) ){ goto $label$289 }
	CALL $191($15, ( $27 ? [9] : ((int_32)$27 < (int_32)[9]) ), $0)
	
.LABEL $label$289
	$15 = ($27 + [-9])
	if ( ((int_32)$27 < (int_32)[10]) ){ goto $label$270 }
	$27 = $15
	$22 = ($22 + [4])
	if ( ($22 <= $16) ){ goto $label$284 }
	goto $label$270 
	
.LABEL $label$273
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$266 }
	$25 = ( $16 ? ($18 + [4]) : $24 )
	if ( ($23 == 0) ){ goto $label$268 }
	$22 = $18
	
.LOOP $label$290:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$292 }
	$19 = [0]
	
.LOOP $label$293:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$293 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$291 }
	
.LABEL $label$292
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$291
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$295 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$294 }
	
.LOOP $label$296:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$296 }
	goto $label$294 
	
.LABEL $label$295
	$15 = *($0)
	if ( ($15 & [32]) ){ goto $label$297 }
	CALL $191($17, [1], $0)
	$15 = *($0)
	
.LABEL $label$297
	$17 = ($17 + [1])
	if ( ($15 & [32]) ){ goto $label$294 }
	CALL $191([8525], [1], $0)
	
.LABEL $label$294
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$298 }
	CALL $191($17, ( $15 ? $27 : ((int_32)$27 > (int_32)$15) ), $0)
	
.LABEL $label$298
	$27 = ($27 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$267 }
	if ( ((int_32)$27 > (int_32)[-1]) ){ goto $label$290 }
	goto $label$267 
	
.LABEL $label$272
	$15 = $27
	if ( ((int_32)$15 >= (int_32)[1]) ){ goto $label$269 }
	goto $label$265 
	
.LABEL $label$271
	$15 = $27
	
.LABEL $label$270
	if ( ((int_32)$15 < (int_32)[1]) ){ goto $label$265 }
	
.LABEL $label$269
	$18 = ($15 <= [256])
	CALL memset(($5 + [432]), [48], ( $15 ? [256] : $18 ))
	$17 = *($0)
	$19 = ($17 & [32])
	if ( $18 ){ goto $label$300 }
	$18 = ($19 == 0)
	$19 = $15
	
.LOOP $label$301:
	if ( (($18 & [1]) == 0) ){ goto $label$302 }
	CALL $191(($5 + [432]), [256], $0)
	$17 = *($0)
	
.LABEL $label$302
	$16 = ($17 & [32])
	$18 = ($16 == 0)
	$19 = ($19 + [-256])
	if ( ((uint_32)$19 > (uint_32)[255]) ){ goto $label$301 }
	if ( $16 ){ goto $label$265 }
	$15 = ($15 & [255])
	goto $label$299 
	
.LABEL $label$300
	if ( $19 ){ goto $label$265 }
	
.LABEL $label$299
	CALL $191(($5 + [432]), $15, $0)
	if ( ((int_32)$21 == (int_32)[8192]) ){ goto $label$264 }
	goto $label$263 
	
.LABEL $label$268
	$22 = $18
	
.LOOP $label$303:
	$17 = $7
	$15 = *($22)
	if ( ($15 == 0) ){ goto $label$305 }
	$19 = [0]
	
.LOOP $label$306:
	$17 = ((uint_32)$15 / (uint_32)[10])
	*(((($5 + [704]) + $19) + [8])) = (($15 - ((int_32)$17 * (int_32)[10])) | [48])
	$19 = ($19 + [-1])
	$16 = ((uint_32)$15 > (uint_32)[9])
	$15 = $17
	if ( $16 ){ goto $label$306 }
	$17 = ((($5 + [704]) + $19) + [9])
	if ( $19 ){ goto $label$304 }
	
.LABEL $label$305
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$304
	if ( ((int_32)$22 == (int_32)$18) ){ goto $label$308 }
	if ( ((uint_32)$17 <= (uint_32)($5 + [704])) ){ goto $label$307 }
	
.LOOP $label$309:
	*(($17 = ($17 + [-1]))) = [48]
	if ( ((uint_32)$17 > (uint_32)($5 + [704])) ){ goto $label$309 }
	goto $label$307 
	
.LABEL $label$308
	if ( (*($0) & [32]) ){ goto $label$310 }
	CALL $191($17, [1], $0)
	
.LABEL $label$310
	$17 = ($17 + [1])
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$307 }
	if ( (*($0) & [32]) ){ goto $label$307 }
	CALL $191([8525], [1], $0)
	
.LABEL $label$307
	$15 = ($7 - $17)
	if ( (*($0) & [32]) ){ goto $label$311 }
	CALL $191($17, ( $15 ? $27 : ((int_32)$27 > (int_32)$15) ), $0)
	
.LABEL $label$311
	$27 = ($27 - $15)
	$22 = ($22 + [4])
	if ( ((uint_32)$22 >= (uint_32)$25) ){ goto $label$267 }
	if ( ((int_32)$27 > (int_32)[-1]) ){ goto $label$303 }
	
.LABEL $label$267
	if ( ((int_32)$27 < (int_32)[1]) ){ goto $label$266 }
	$18 = ($27 <= [256])
	CALL memset(($5 + [432]), [48], ( $27 ? [256] : $18 ))
	$19 = *($0)
	$15 = ($19 & [32])
	if ( $18 ){ goto $label$313 }
	$15 = ($15 == 0)
	$18 = $27
	
.LOOP $label$314:
	if ( (($15 & [1]) == 0) ){ goto $label$315 }
	CALL $191(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$315
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$314 }
	if ( $17 ){ goto $label$266 }
	$27 = ($27 & [255])
	goto $label$312 
	
.LABEL $label$313
	if ( $15 ){ goto $label$266 }
	
.LABEL $label$312
	CALL $191(($5 + [432]), $27, $0)
	
.LABEL $label$266
	if ( (*($0) & [32]) ){ goto $label$265 }
	CALL $191($37, ($10 - $37), $0)
	
.LABEL $label$265
	if ( ((int_32)$21 != (int_32)[8192]) ){ goto $label$263 }
	
.LABEL $label$264
	if ( ((int_32)$20 <= (int_32)$26) ){ goto $label$263 }
	$15 = ($16 <= [256])
	$16 = ($20 - $26)
	CALL memset(($5 + [432]), [32], ( $16 ? [256] : $15 ))
	$19 = *($0)
	$18 = ($19 & [32])
	if ( $15 ){ goto $label$317 }
	$15 = ($18 == 0)
	$18 = $16
	
.LOOP $label$318:
	if ( (($15 & [1]) == 0) ){ goto $label$319 }
	CALL $191(($5 + [432]), [256], $0)
	$19 = *($0)
	
.LABEL $label$319
	$17 = ($19 & [32])
	$15 = ($17 == 0)
	$18 = ($18 + [-256])
	if ( ((uint_32)$18 > (uint_32)[255]) ){ goto $label$318 }
	if ( $17 ){ goto $label$263 }
	$16 = ($16 & [255])
	goto $label$316 
	
.LABEL $label$317
	if ( $18 ){ goto $label$263 }
	
.LABEL $label$316
	CALL $191(($5 + [432]), $16, $0)
	
.LABEL $label$263
	$15 = ( $20 ? $26 : ((int_32)$20 > (int_32)$26) )
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$4 }
	
.LABEL $label$3
	*(CALL $181()) = [75]
	
.LABEL $label$2
	$14 = [-1]
	
.LABEL $label$1
	$global$0 = ($5 + [8128])
	$15
	$18
	return $14
}

int_32 .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL $203($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC $207 (int_32 $0)
{
	return CALL $208([15616], $0)
}

int_32 .FUNC $204 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $205 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $181 ()
{
	return [14564]
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$1 = CALL $169($2, ($1 + [8]))
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$5 = (*(*($0)) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($5) + $0))
	
.LABEL $label$1
	$4 = CALL $169(($2 + [16]), $1)
	CALL void $5((int_32 $3), (int_64 $4), (int_32 $0))
	if ( (*($2 + [16]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*($1 + [8]))
	$global$0 = ($2 + [32])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [32])
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $160($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $173($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $173($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $168($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [13333])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $207($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $210($4)
	
.LABEL $label$6
	$5 = CALL _Znwj([216])
	$4 = CALL $69($5)
	*($5 + [184]) = $0
	CALL $143(($3 + [32]), $4)
	*($5 + [188]) = $1
	*($5 + [192 align=4]) = (int_64)-1
	*($5 + [200 align=4]) = (int_64)-1
	*($5 + [208 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$6 = *($5)
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $71(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $9 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	$3 = ($global$0 - [336])
	$global$0 = $3
	CALL eosio_assert(((int_32)*($1 + [184]) == (int_32)$0), [13421])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [13467])
	$5 = ($1 + [8])
	$6 = *($5)
	*(($4 = $3)) = $6
	$7 = ($1 + [16])
	$8 = *($7)
	*($4 + [8]) = $8
	*($4 + [24]) = *(($1 + [24]))
	*($4 + [16]) = ((int_64)$8 + (int_64)$6)
	*($4 + [32]) = (int_64))((int_64)0 - *(($1 + [112])))
	*($4 + [40]) = (int_64))((int_64)0 - *(($1 + [128])))
	$9 = *($1)
	if ( (*(*($2)) == 0) ){ goto $label$3 }
	CALL eosio_assert(((int_64)$6 != (int_64)-1), [11326])
	*($5) = ((int_64)*($5) + (int_64)1)
	CALL $1(($4 + [48]), *(*($2 + [4])), (*(*($2 + [8]) + [4]) + [16]))
	$6 = *($1 + [152])
	$7 = ($1 + [160])
	$8 = *($7)
	$5 = *($2 + [12])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)$8), [13105])
	$6 = ((int_64)$6 + (int_64)*($5))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [13167])
	$10 = *($4 + [56])
	CALL eosio_assert(((int_64)$8 == (int_64)$10), [12931])
	$11 = ($1 + [152])
	$12 = *($4 + [48])
	if ( ((int_64)$12 != (int_64)$6) ){ goto $label$2 }
	*($7) = $8
	*($11) = $6
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert(((int_64)$8 != (int_64)-1), [11326])
	*($7) = ((int_64)*($7) + (int_64)1)
	goto $label$1 
	
.LABEL $label$2
	$7 = *($2 + [16])
	$5 = *(*(($2 + [8])) + [4])
	CALL eosio_assert(((int_32)$5 != (int_32)[0]), [13386])
	CALL eosio_assert(((int_32)$7 == (int_32)*($5 + [176])), [13421])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$2()), [13467])
	$13 = ($5 + [16])
	$6 = *($13)
	*(($4 + [296])) = $6
	$14 = ($5 + [80])
	$8 = *($14)
	*($14) = [2]
	$15 = *(($5 + [32]))
	*($4 + [288]) = $15
	*($4 + [272]) = $8
	*($4 + [256]) = (uint_64)$6 >> (uint_64)(int_64)8)
	*($4 + [264]) = (uint_64)$15 >> (uint_64)(int_64)8)
	$6 = *($5)
	CALL eosio_assert([1], [13518])
	*($4 + [248]) = (($4 + [64]) + [161])
	*($4 + [244]) = ($4 + [64])
	*($4 + [240]) = ($4 + [64])
	CALL $47(($4 + [240]), $5)
	CALL db_update_i64(*($5 + [180]), (int_64)0, ($4 + [64]), [161])
	if ( (uint_64)($6 <= *($7 + [16])) ){ goto $label$4 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	$14 = (($4 + [256]) | [8])
	*($4 + [320]) = (uint_64)*($13) >> (uint_64)(int_64)8)
	if ( (CALL $204(($4 + [256]), ($4 + [320]), [8]) == 0) ){ goto $label$5 }
	$16 = ($5 + [184])
	$13 = *($16)
	if ( ((int_32)$13 > (int_32)[-1]) ){ goto $label$6 }
	$13 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)6291769033721118720, ($4 + [304]), $6)
	*($16) = $13
	
.LABEL $label$6
	CALL db_idx64_update($13, (int_64)0, ($4 + [320]))
	
.LABEL $label$5
	$13 = (($4 + [256]) + [16])
	*($4 + [320]) = (uint_64)*(($5 + [32])) >> (uint_64)(int_64)8)
	if ( (CALL $204($14, ($4 + [320]), [8]) == 0) ){ goto $label$7 }
	$16 = ($5 + [188])
	$14 = *($16)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$8 }
	$14 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)6291769033721118721, ($4 + [304]), $6)
	*($16) = $14
	
.LABEL $label$8
	CALL db_idx64_update($14, (int_64)0, ($4 + [320]))
	
.LABEL $label$7
	$14 = (($4 + [256]) + [32])
	*($4 + [320]) = *(($5 + [80]))
	if ( (CALL $204($13, ($4 + [320]), [8]) == 0) ){ goto $label$9 }
	$16 = ($5 + [192])
	$13 = *($16)
	if ( ((int_32)$13 > (int_32)[-1]) ){ goto $label$10 }
	$13 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)6291769033721118722, ($4 + [304]), $6)
	*($16) = $13
	
.LABEL $label$10
	CALL db_idx64_update($13, (int_64)0, ($4 + [320]))
	
.LABEL $label$9
	*($4 + [328]) = *(($5 + [16]))
	*($4 + [320]) = *(($5 + [32]))
	if ( (CALL $204($14, ($4 + [320]), [16]) == 0) ){ goto $label$11 }
	$13 = ($5 + [196])
	$5 = *($13)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$12 }
	$5 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)6291769033721118723, ($4 + [304]), $6)
	*($13) = $5
	
.LABEL $label$12
	CALL db_idx128_update($5, (int_64)0, ($4 + [320]))
	
.LABEL $label$11
	CALL eosio_assert(((int_64)*(($1 + [160])) == (int_64)$10), [13185])
	$6 = (int_64)
	CALL eosio_assert(((int_64)$6($12 - *(($1 + [152])))) > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$6 < (int_64)4611686018427387904), [13255])
	*(($5 = *(($2 + [12]))) + [8]) = $10
	*($5) = $6
	*(($11 + [8])) = *((($4 + [48]) + [8]))
	*($11) = *($4 + [48])
	$6 = *(*($2 + [20]))
	$2 = [13577]
	$5 = *([13577])
	if ( ($5 == 0) ){ goto $label$1 }
	
.LOOP $label$14:
	if ( ((int_32)$5 == (int_32)[37]) ){ goto $label$13 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$5 = *($2)
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$14 
	
.LABEL $label$13
	CALL printui($6)
	CALL prints(($2 + [1]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$9 == (int_64)*($1)), [13518])
	$5 = $3
	$2 = ($5 + [-192])
	$global$0 = $2
	*($4 + [68]) = $2
	*($4 + [64]) = $2
	*($4 + [72]) = ($5 + [-12])
	CALL $35(($4 + [64]), $1)
	CALL db_update_i64(*($1 + [188]), (int_64)0, $2, [180])
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$2 = ($4 + [8])
	*($4 + [256]) = *(($1 + [8]))
	if ( (CALL $204($4, ($4 + [256]), [8]) == 0) ){ goto $label$16 }
	$3 = ($1 + [192])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$17 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096704, ($4 + [320]), $9)
	*($3) = $5
	
.LABEL $label$17
	CALL db_idx64_update($5, (int_64)0, ($4 + [256]))
	
.LABEL $label$16
	$5 = ($4 + [16])
	$3 = ($1 + [16])
	*($4 + [256]) = *($3)
	if ( (CALL $204($2, ($4 + [256]), [8]) == 0) ){ goto $label$18 }
	$7 = ($1 + [196])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$19 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096705, ($4 + [320]), $9)
	*($7) = $2
	
.LABEL $label$19
	CALL db_idx64_update($2, (int_64)0, ($4 + [256]))
	
.LABEL $label$18
	$2 = ($4 + [24])
	*($4 + [256]) = ((int_64)*($3) + (int_64)*(($1 + [8])))
	if ( (CALL $204($5, ($4 + [256]), [8]) == 0) ){ goto $label$20 }
	$3 = ($1 + [200])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$21 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096706, ($4 + [320]), $9)
	*($3) = $5
	
.LABEL $label$21
	CALL db_idx64_update($5, (int_64)0, ($4 + [256]))
	
.LABEL $label$20
	$5 = ($4 + [32])
	*($4 + [256]) = *(($1 + [24]))
	if ( (CALL $204($2, ($4 + [256]), [8]) == 0) ){ goto $label$22 }
	$3 = ($1 + [204])
	$2 = *($3)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$23 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096707, ($4 + [320]), $9)
	*($3) = $2
	
.LABEL $label$23
	CALL db_idx64_update($2, (int_64)0, ($4 + [256]))
	
.LABEL $label$22
	$2 = ($4 + [40])
	*($4 + [256]) = (int_64))((int_64)0 - *(($1 + [112])))
	if ( (CALL $204($5, ($4 + [256]), [8]) == 0) ){ goto $label$24 }
	$3 = ($1 + [208])
	$5 = *($3)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$25 }
	$5 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096708, ($4 + [320]), $9)
	*($3) = $5
	
.LABEL $label$25
	CALL db_idx64_update($5, (int_64)0, ($4 + [256]))
	
.LABEL $label$24
	*($4 + [256]) = (int_64))((int_64)0 - *(($1 + [128])))
	if ( (CALL $204($2, ($4 + [256]), [8]) == 0) ){ goto $label$26 }
	$1 = ($1 + [212])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$27 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096709, ($4 + [320]), $9)
	*($1) = $2
	
.LABEL $label$27
	CALL db_idx64_update($2, (int_64)0, ($4 + [256]))
	
.LABEL $label$26
	$global$0 = ($4 + [336])
}

int_32 .FUNC $123 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [64])
	$global$0 = $2
	*(($3 = $2) + [44]) = $0
	*($3 + [32]) = *($1)
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL $207($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($2 - (($0 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [56]) = ($1 + $0)
	*($3 + [48]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [13356])
	CALL memcpy(($3 + [8]), $1, [8])
	*($3 + [52]) = ($1 + [8])
	CALL $128(($3 + [48]), (($3 + [8]) + [8]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL $210($1)
	
.LABEL $label$4
	*($3 + [52]) = ($3 + [32])
	*($3 + [48]) = ($3 + [44])
	CALL $129(($3 + [48]), ($3 + [8]))
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [24])))
	
.LABEL $label$5
	$global$0 = ($3 + [64])
	return [1]
}

int_32 .FUNC $122 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL $207($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [13356])
	CALL memcpy($3, $6, [8])
	CALL eosio_assert(((int_32)$1 != (int_32)[8]), [13356])
	$2 = ($3 + [8])
	CALL memcpy($2, ($6 + [8]), [1])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL $210($6)
	
.LABEL $label$4
	$1 = ($0 + int_32($4 >> [1]))
	$6 = *($2)
	$7 = *($3)
	if ( (($4 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $7), (int_64 ($6 & [255])), (int_32 $5))
	$global$0 = ($3 + [16])
	return [1]
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [80])
	$global$0 = $2
	*(($3 = $2) + [60]) = $0
	*($3 + [48]) = *($1)
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL $207($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($2 - (($0 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [24])) = (int_64)0
	*(($3 + [40])) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [68]) = $1
	*($3 + [64]) = $1
	*($3 + [72]) = ($1 + $0)
	CALL $128(($3 + [64]), ($3 + [8]))
	CALL $128(($3 + [64]), ($3 + [20]))
	CALL $128(($3 + [64]), ($3 + [32]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL $210($1)
	
.LABEL $label$4
	*($3 + [68]) = ($3 + [48])
	*($3 + [64]) = ($3 + [60])
	CALL $131(($3 + [64]), ($3 + [8]))
	if ( (*($3 + [32]) & [1]) ){ goto $label$9 }
	if ( (*($3 + [20]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*(($3 + [40])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($3 + [28])))
	$1 = [1]
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$1 = [1]
	if ( (*($3 + [8]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($3 + [80])
	return $1
	
.LABEL $label$5
	CALL _ZdlPv(*(($3 + [16])))
	$global$0 = ($3 + [80])
	return $1
}

int_32 .FUNC $120 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL $207($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($3 + [8]) = (int_64)0
	*($3) = [0]
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [13356])
	CALL memcpy($3, $6, [1])
	CALL eosio_assert(((uint_32)($1 + [-1]) > (uint_32)[7]), [13356])
	$2 = ($3 + [8])
	CALL memcpy($2, ($6 + [1]), [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL $210($6)
	
.LABEL $label$4
	$1 = ($0 + int_32($4 >> [1]))
	$7 = *($2)
	$6 = *($3)
	if ( (($4 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 ($6 & [255])), (int_32 $7), (int_64 $5))
	$global$0 = ($3 + [16])
	return [1]
}

int_32 .FUNC $2 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [13333])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $207($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $210($4)
	
.LABEL $label$6
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$5 = CALL _Znwj([32])
	$4 = CALL $140($5, $0, ($3 + [8]))
	*($3 + [24]) = $5
	$6 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [8]) = $6)
	$2 = *($5 + [20])
	*($3 + [4]) = $2
	$7 = ($0 + [28])
	$1 = *($7)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($1 + [8]) = $6
	*($1 + [16]) = $2
	*($3 + [24]) = [0]
	*($1) = $5
	*($7) = ($1 + [24])
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $5 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $141(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($5)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return $4
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $128($0, ($1 + [32]))
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[7]), [13356])
	CALL memcpy($1, *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [8]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [16]), *($0 + [4]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]), [13356])
	CALL memcpy(($1 + [24]), *($0 + [4]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

int_32 .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [176])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$6 = CALL action_data_size()
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ($6 <= [513]) ){ goto $label$3 }
	$1 = CALL $207($6)
	goto $label$2 
	
.LABEL $label$4
	$1 = [0]
	goto $label$1 
	
.LABEL $label$3
	$1 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$2
	CALL read_action_data($1, $6)
	
.LABEL $label$1
	*(($2 = ($3 + [48]))) = (int_64)0
	*(($7 = ($3 + [64]))) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [72]) = (int_64)0
	*($3 + [164]) = $1
	*($3 + [160]) = $1
	*($3 + [168]) = ($1 + $6)
	*($3 + [128]) = ($3 + [160])
	*($3 + [144]) = ($3 + [32])
	CALL $127(($3 + [144]), ($3 + [128]))
	if ( ($6 <= [513]) ){ goto $label$5 }
	CALL $210($1)
	
.LABEL $label$5
	*(($1 = (($3 + [96]) + [8]))) = *($2)
	*(($6 = (($3 + [80]) + [8]))) = *($7)
	*($3 + [96]) = *($3 + [40])
	*($3 + [80]) = *($3 + [56])
	$8 = *(($3 + [72]))
	$9 = *($3 + [32])
	*((($3 + [128]) + [8])) = *($6)
	*((($3 + [112]) + [8])) = *($1)
	*($3 + [128]) = *($3 + [80])
	*($3 + [112]) = *($3 + [96])
	$1 = ($0 + int_32($4 >> [1]))
	if ( (($4 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	$10 = *((($3 + [112]) + [8]))
	*((($3 + [160]) + [8])) = $10
	$11 = *((($3 + [128]) + [8]))
	*((($3 + [144]) + [8])) = $11
	*((($3 + [16]) + [8])) = $10
	*(($3 + [8])) = $11
	$10 = *($3 + [112])
	*($3 + [160]) = $10
	$11 = *($3 + [128])
	*($3 + [144]) = $11
	*($3 + [16]) = $10
	*($3) = $11
	CALL void $1((int_32 $9), (int_64 ($3 + [16])), (int_32 $3), (int_32 $8), (int_64 $5))
	$global$0 = ($3 + [176])
	return [1]
}

int_32 .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [112])
	$global$0 = $2
	*(($3 = $2) + [92]) = $0
	*($3 + [80]) = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL $207($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	*(($3 + [16])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [40])) = (int_64)0
	*(($3 + [48])) = (int_64)0
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [104]) = ($2 + $1)
	*($3 + [96]) = $2
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [13356])
	CALL memcpy($3, $2, [8])
	*($3 + [100]) = ($2 + [8])
	CALL $128(($3 + [96]), ($3 + [8]))
	CALL $128(($3 + [96]), ($3 + [20]))
	CALL $128(($3 + [96]), ($3 + [32]))
	CALL $128(($3 + [96]), ($3 + [44]))
	CALL $128(($3 + [96]), ($3 + [56]))
	CALL $128(($3 + [96]), ($3 + [68]))
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL $210($2)
	
.LABEL $label$5
	*($3 + [100]) = ($3 + [80])
	*($3 + [96]) = ($3 + [92])
	CALL $130(($3 + [96]), $3)
	if ( (*($3 + [68]) & [1]) ){ goto $label$16 }
	if ( (*($3 + [56]) & [1]) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL _ZdlPv(*(($3 + [76])))
	if ( ((*($3 + [56]) & [1]) == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL _ZdlPv(*(($3 + [64])))
	$2 = [1]
	if ( ((*($3 + [44]) & [1]) == 0) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$2 = [1]
	if ( (*($3 + [44]) & [1]) ){ goto $label$12 }
	
.LABEL $label$13
	if ( (*($3 + [32]) & $2) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL _ZdlPv(*(($3 + [52])))
	if ( ((*($3 + [32]) & $2) == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL _ZdlPv(*(($3 + [40])))
	$2 = [1]
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$2 = [1]
	if ( (*($3 + [20]) & [1]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((*($3 + [8]) & $2) == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	CALL _ZdlPv(*(($3 + [28])))
	if ( ((*($3 + [8]) & $2) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL _ZdlPv(*(($3 + [16])))
	
.LABEL $label$6
	$global$0 = ($3 + [112])
	return [1]
}

int_32 .FUNC $14 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [64])
	$global$0 = $3
	$0 = CALL $169(($3 + [48]), $0)
	CALL $10($0)
	$4 = *($3 + [48])
	if ( ((uint_32)( *($0 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ) > (uint_32)[11]) ){ goto $label$4 }
	CALL prints([8689])
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)CALL $176($0, [45], [0]) == (int_32)[-1]) ){ goto $label$5 }
	CALL prints([8709])
	goto $label$3 
	
.LABEL $label$5
	$4 = *($3 + [48])
	$5 = ($4 & [1])
	$6 = ( *($0 + [8]) ? ($0 + [1]) : $5 )
	if ( ((int_32)*($6) != (int_32)[35]) ){ goto $label$9 }
	$4 = ( *(($0 + [4])) ? uint_32($4 >> [1]) : $5 )
	if ( ((int_32)(*((($6 + $4) + [-1])) & [255]) != (int_32)[35]) ){ goto $label$9 }
	*($3 + [40]) = [0]
	*($3 + [32]) = (int_64)0
	$4 = CALL $170(($3 + [16]), $0, [1], ($4 + [-2]), $0)
	CALL $3(($3 + [32]), $4, [58])
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$10
	$5 = [2]
	$4 = *($3 + [32])
	$6 = (*($3 + [36]) - $4)
	$7 = ((int_32)$6 / (int_32)[12])
	if ( ((uint_32)$7 > (uint_32)[2]) ){ goto $label$8 }
	CALL prints([8745])
	$2 = *($3 + [32])
	if ( ($2 == 0) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$9
	CALL prints([8722])
	goto $label$3 
	
.LABEL $label$8
	$8 = CALL $15($4)
	$4 = CALL $16((*($3 + [32]) + [12]))
	CALL $13(($3 + [16]), (*($3 + [32]) + [24]))
	*($2) = [1]
	if ( ((int_32)$6 == (int_32)[36]) ){ goto $label$11 }
	$5 = *($3 + [32])
	$6 = *($5 + [36])
	$9 = CALL $205([8764])
	if ( ((int_32)$9 != (int_32)( *(($5 + [40])) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$14 }
	if ( (CALL $177(($5 + [36]), [0], [-1], [8764], $9) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$5 = *($3 + [32])
	$6 = [0]
	$9 = *($5 + [36])
	$10 = CALL $205([8766])
	if ( ((int_32)$10 != (int_32)( *(($5 + [40])) ? uint_32($9 >> [1]) : ($9 & [1]) )) ){ goto $label$12 }
	$6 = (CALL $177(($5 + [36]), [0], [-1], [8766], $10) == 0)
	goto $label$12 
	
.LABEL $label$13
	$6 = [1]
	
.LABEL $label$12
	CALL eosio_assert($6, [8768])
	if ( CALL $16((*($3 + [32]) + [36])) ){ goto $label$15 }
	*($2) = [0]
	
.LABEL $label$15
	if ( ($7 <= [5]) ){ goto $label$11 }
	$2 = CALL $169($3, (*($3 + [32]) + [48]))
	if ( ((*($3) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($2 + [8]))
	
.LABEL $label$11
	if ( ((int_32)$4 == (int_32)[4]) ){ goto $label$19 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$18 }
	
.LABEL $label$19
	$11 = *($3 + [16])
	if ( ((int_64)$11 <= (int_64)0) ){ goto $label$16 }
	if ( ((int_64)$11 < (int_64)4611686018427387903) ){ goto $label$17 }
	CALL prints([8840])
	$5 = [2]
	$2 = *($3 + [32])
	if ( $2 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$18
	if ( (int_64)(*($3 + [16]) == 0) ){ goto $label$17 }
	CALL prints([8883])
	$5 = [2]
	$2 = *($3 + [32])
	if ( $2 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$17
	*($1 + [26]) = $4
	*($1 + [24]) = $8
	*($1 + [80]) = *($3 + [16])
	*(($1 + [88])) = *(($3 + [24]))
	$5 = [1]
	$2 = *($3 + [32])
	if ( $2 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$16
	CALL prints([8797])
	$5 = [2]
	$2 = *($3 + [32])
	if ( ($2 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$1 = *($3 + [36])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($1 + [-12])
	if ( ((*($4) & [1]) == 0) ){ goto $label$23 }
	CALL _ZdlPv(*(($1 + [-4])))
	
.LABEL $label$23
	$1 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$22 }
	$4 = *($3 + [32])
	goto $label$20 
	
.LABEL $label$21
	$4 = $2
	
.LABEL $label$20
	*($3 + [36]) = $2
	CALL _ZdlPv($4)
	
.LABEL $label$6
	$4 = [1]
	if ( ((int_32)$5 == (int_32)[2]) ){ goto $label$3 }
	if ( (*($3 + [48]) & [1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL _ZdlPv(*($0 + [8]))
	$global$0 = ($3 + [64])
	return $4
	
.LABEL $label$1
	$global$0 = ($3 + [64])
	return $4
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$0 = (( *($0 + [8]) ? ($0 + [1]) : (*($0) & [1]) ) + [-1])
	
.LOOP $label$1:
	$0 = ($0 + [1])
	if ( CALL $180(*($0)) ){ goto $label$1 }
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$6 }
	$2 = [1]
	goto $label$7 
	
.LABEL $label$8
	$2 = [0]
	
.LABEL $label$7
	$0 = ($0 + [1])
	if ( (CALL $179(*($0)) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$2 = [0]
	if ( CALL $179($1) ){ goto $label$4 }
	
.LABEL $label$5
	$3 = [0]
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	
.LOOP $label$9:
	$1 = $0
	if ( (($3 & [65535]) <= [6554]) ){ goto $label$10 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$10
	$3 = ((int_32)$3 * (int_32)[10])
	$0 = *($1)
	$4 = ($0 + [-48])
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((uint_32)($3 & [65535]) <= (uint_32)(([47] - $0) & [65535])) ){ goto $label$11 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$11
	$0 = ($1 + [1])
	$3 = ($4 + $3)
	if ( CALL $179(*(($1 + [1]))) ){ goto $label$9 }
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ($3 & [65535]) ){ goto $label$12 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$12
	$3 = ([0] - $3)
	
.LABEL $label$2
	return ($3 & [65535])
}

int_32 .FUNC $16 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$0 = (( *($0 + [8]) ? ($0 + [1]) : (*($0) & [1]) ) + [-1])
	
.LOOP $label$1:
	$0 = ($0 + [1])
	if ( CALL $180(*($0)) ){ goto $label$1 }
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$6 }
	$2 = [1]
	goto $label$7 
	
.LABEL $label$8
	$2 = [0]
	
.LABEL $label$7
	$0 = ($0 + [1])
	if ( (CALL $179(*($0)) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$2 = [0]
	if ( CALL $179($1) ){ goto $label$4 }
	
.LABEL $label$5
	$3 = [0]
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	
.LOOP $label$9:
	$1 = $0
	if ( (($3 & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$10
	$3 = ((int_32)$3 * (int_32)[10])
	$0 = *($1)
	$4 = ($0 + [-48])
	if ( (($4 & [255]) == 0) ){ goto $label$11 }
	if ( ((uint_32)($3 & [255]) <= (uint_32)(([47] - $0) & [255])) ){ goto $label$11 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$11
	$0 = ($1 + [1])
	$3 = ($4 + $3)
	if ( CALL $179(*(($1 + [1]))) ){ goto $label$9 }
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ($3 & [255]) ){ goto $label$12 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$12
	$3 = ([0] - $3)
	
.LABEL $label$2
	return ($3 & [255])
}

int_64 .FUNC $17 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_64 $36
	int_64 $37
	int_64 $38
	int_32 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_32 $43
	int_32 $44
	int_32 $45
	int_64 $46
	int_64 $47
	int_64 $48
	int_32 $49
	int_32 $50
	int_32 $51
	int_32 $52
	$2 = ($global$0 - [1680])
	$global$0 = $2
	$3 = CALL current_time()
	$4 = ($0 + [104])
	$5 = *(($0 + [280]))
	$7 = *(($0 + [132]))
	$6 = *(($0 + [128]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9 + [8]) == (int_64)$1) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($9 + [112]) == (int_32)$4), [13282])
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	$8 = CALL db_find_i64(*($4), *(($0 + [112])), (int_64)-6497942333781180416, $1)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $18($4, $8)
	CALL eosio_assert(((int_32)*($9 + [112]) == (int_32)$4), [13282])
	
.LABEL $label$1
	$10 = ((int_64)$5 + (int_64)$3)
	$11 = ((int_32)$9 != (int_32)[0])
	CALL eosio_assert($11, [8988])
	*(($8 = (($2 + [1440]) + [8]))) = *(($9 + [88]))
	*($2 + [1440]) = *($9 + [80])
	$3 = *($9 + [16])
	*((($2 + [1584]) + [8])) = *($8)
	*($2 + [1584]) = *($2 + [1440])
	$12 = ($9 + [80])
	$8 = [9022]
	$7 = *([9022])
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	CALL printn($3)
	*(($7 = (($2 + [1456]) + [8]))) = *((($2 + [1584]) + [8]))
	*($2 + [1456]) = *($2 + [1584])
	*((($2 + [1264]) + [8])) = *($7)
	*($2 + [1264]) = *($2 + [1456])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$9:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$8 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( $7 ){ goto $label$9 }
	goto $label$5 
	
.LABEL $label$8
	CALL $19(($2 + [1264]))
	CALL prints(($8 + [1]))
	
.LABEL $label$5
	$13 = ($0 + [16])
	$3 = *($9 + [24])
	$7 = *(($0 + [44]))
	$14 = *(($0 + [40]))
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$13:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$12 }
	$7 = $8
	if ( ((int_32)$14 != (int_32)$8) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	if ( ((int_32)$14 == (int_32)$7) ){ goto $label$11 }
	CALL eosio_assert(((int_32)*($6 + [176]) == (int_32)$13), [13282])
	goto $label$10 
	
.LABEL $label$11
	$6 = [0]
	$8 = CALL db_find_i64(*($13), *(($0 + [24])), (int_64)6291769033721118720, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$10 }
	$6 = CALL $7($13, $8)
	CALL eosio_assert(((int_32)*($6 + [176]) == (int_32)$13), [13282])
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [9061])
	CALL memcpy(($2 + [1264]), $6, [176])
	CALL eosio_assert(((int_32)*($2 + [1344]) == (int_32)[1]), [8404])
	*($2 + [1256]) = $4
	$15 = *($2 + [1296])
	$3 = ((int_64)$15 & (int_64)255)
	$16 = *($2 + [1328])
	if ( (uint_64)($16 <= (int_64)2) ){ goto $label$14 }
	if ( ((uint_64)$3 > (uint_64)(int_64)17) ){ goto $label$14 }
	$5 = (int_64)1
	
.LOOP $label$15:
	$3 = ((int_64)$3 + (int_64)1)
	$5 = ((int_64)$5 * (int_64)10)
	if ( ((uint_64)$5 >= (uint_64)$16) ){ goto $label$14 }
	if ( (uint_64)($3 <= (int_64)18) ){ goto $label$15 }
	
.LABEL $label$14
	$13 = ($2 + [1296])
	*($2 + [1240]) = (int_64)0
	$3 = ((int_64)$3 | (int_64)((int_64)$15 & (int_64)-256))
	*($2 + [1248]) = $3
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	
.LOOP $label$18:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$3 = $5
	$6 = [1]
	$14 = $7
	$7 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$3 = $5
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$14 = ($7 + [1])
	$7 = $14
	if ( $6 ){ goto $label$20 }
	$6 = [1]
	$7 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$6 = [0]
	
.LABEL $label$16
	CALL eosio_assert($6, [12911])
	$7 = (($2 + [1240]) + [8])
	*((($2 + [1224]) + [8])) = *($7)
	*($2 + [1224]) = *($2 + [1240])
	*((($2 + [1208]) + [8])) = *($7)
	*($2 + [1208]) = *($2 + [1240])
	*($2 + [1192]) = (int_64)0
	*($2 + [1200]) = *($2 + [1280])
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)*($2 + [1200]) >> (uint_64)(int_64)8)
	
.LOOP $label$23:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$24 }
	$3 = $5
	$6 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$24
	$3 = $5
	
.LOOP $label$25:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$22 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $6 ){ goto $label$25 }
	$6 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$6 = [0]
	
.LABEL $label$21
	CALL eosio_assert($6, [12911])
	*($2 + [1176]) = (int_64)0
	*($2 + [1184]) = *(($2 + [1296]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)*($2 + [1184]) >> (uint_64)(int_64)8)
	
.LOOP $label$27:
	$14 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$28 }
	$3 = $5
	$14 = [1]
	$8 = $7
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$3 = $5
	
.LOOP $label$29:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$26 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$6 = ($7 + [1])
	$7 = $6
	if ( $8 ){ goto $label$29 }
	$14 = [1]
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$27 }
	
.LABEL $label$26
	CALL eosio_assert($14, [12911])
	$8 = (*(($9 + [26])) + [-1])
	if ( ((uint_32)$8 > (uint_32)[3]) ){ goto $label$68 }
	goto $label$72 
	
.LABEL $label$72
	$14 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$73:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$74 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$73 }
	goto $label$61 
	
.LABEL $label$74
	$3 = $5
	
.LOOP $label$75:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$62 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$75 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$73 }
	goto $label$61 
	
.LABEL $label$71
	$14 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$76:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$67 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$77 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$76 }
	goto $label$66 
	
.LABEL $label$77
	$3 = $5
	
.LOOP $label$78:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$67 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$78 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$76 }
	goto $label$66 
	
.LABEL $label$70
	$14 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$79:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$64 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$80 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$79 }
	goto $label$63 
	
.LABEL $label$80
	$3 = $5
	
.LOOP $label$81:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$64 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$81 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$79 }
	goto $label$63 
	
.LABEL $label$69
	$14 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$82:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$60 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$83 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$82 }
	goto $label$59 
	
.LABEL $label$83
	$3 = $5
	
.LOOP $label$84:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$60 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$84 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$82 }
	goto $label$59 
	
.LABEL $label$68
	CALL $183([9862], [0])
	goto $label$65 
	
.LABEL $label$67
	$7 = [0]
	
.LABEL $label$66
	CALL eosio_assert($7, [12911])
	*($2 + [1456]) = (int_64)0
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $14) & (int_64)65535) << (int_64)8) | (int_64)2)
	CALL $20(($2 + [1168]), ($2 + [1256]), ($2 + [1456]))
	$14 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$87:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$86 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$88 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$87 }
	goto $label$85 
	
.LABEL $label$88
	$3 = $5
	
.LOOP $label$89:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$86 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$89 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$87 }
	goto $label$85 
	
.LABEL $label$86
	$7 = [0]
	
.LABEL $label$85
	CALL eosio_assert($7, [12911])
	*($2 + [1456]) = (int_64)4611686018427387903
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $14) & (int_64)65535) << (int_64)8) | (int_64)2)
	CALL $21(($2 + [1160]), ($2 + [1256]), ($2 + [1456]))
	$3 = *($2 + [1168])
	*($2 + [1152]) = $3
	if ( ((int_32)*($2 + [1164]) == (int_32)(CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32))) ){ goto $label$65 }
	$17 = ($0 + [112])
	$18 = (($2 + [1584]) + [48])
	$19 = ($2 + [1616])
	$20 = (($2 + [1584]) + [16])
	$21 = (($2 + [1584]) | [8])
	$22 = (($2 + [808]) | [1])
	$23 = (($2 + [824]) | [1])
	$24 = (($2 + [1456]) + [108])
	$6 = *($2 + [1156])
	$25 = ($9 + [24])
	$26 = ($9 + [64])
	$27 = ($9 + [72])
	$28 = ($2 + [1640])
	$29 = ($2 + [1304])
	$30 = ($0 + [104])
	$31 = ($9 + [116])
	$5 = (int_64)0
	
.LOOP $label$90:
	if ( ((int_32)*($6 + [24]) != (int_32)*($25)) ){ goto $label$36 }
	if ( ((int_32)*($6 + [26]) != (int_32)[2]) ){ goto $label$36 }
	CALL $22(($2 + [1152]))
	*(($8 = (($2 + [840]) + [8]))) = *(($6 + [88]))
	*($2 + [840]) = *($6 + [80])
	*(($12 = (($2 + [1456]) + [8]))) = *($8)
	*($2 + [1456]) = *($2 + [840])
	$14 = ($6 + [80])
	$8 = [9826]
	$7 = *([9826])
	if ( ($7 == 0) ){ goto $label$91 }
	
.LOOP $label$93:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$92 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( $7 ){ goto $label$93 }
	goto $label$91 
	
.LABEL $label$92
	CALL $19(($2 + [1456]))
	CALL prints(($8 + [1]))
	
.LABEL $label$91
	if ( ((uint_64)CALL current_time() >= (uint_64)$10) ){ goto $label$41 }
	$3 = *($26)
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$42 }
	CALL eosio_assert(((int_64)$3 > (int_64)0), [9333])
	CALL eosio_assert(((int_64)*($6 + [64]) > (int_64)0), [9373])
	$15 = *($27)
	$16 = *($26)
	*(($7 = (($2 + [1128]) + [8]))) = *(($14 + [8]))
	*($2 + [1128]) = *($14)
	$1 = *($6 + [64])
	$3 = *($2 + [1128])
	CALL __multi3(($2 + [760]), $3, (int_64)$3 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	*(($8 = (($2 + [1112]) + [8]))) = *($7)
	*($2 + [1112]) = $3
	$3 = *((($2 + [760]) + [8]))
	$1 = *($2 + [760])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [13014])
	*($2 + [1112]) = $1
	$3 = *((($2 + [1264]) + [48]))
	CALL eosio_assert(((int_64)$3 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-1) | ((int_64)*($2 + [1112]) != (int_64)-9223372036854775808)), [13054])
	*($2 + [1112]) = ((int_64)*($2 + [1112]) / (int_64)$3)
	CALL $23(($2 + [1456]), $0, ($2 + [1112]), *((($2 + [1264]) + [64])), $13)
	*($8) = *($12)
	*($2 + [1112]) = *($2 + [1456])
	CALL eosio_assert(((int_64)*($2 + [1112]) > (int_64)0), [9413])
	$1 = ((int_64)((int_64)$16 + (int_64)999) / (int_64)1000)
	$16 = (int_64)
	if ( ((int_64)$16($16 - $1)) == (int_64)0) ){ goto $label$44 }
	CALL eosio_assert(((int_64)*($8) == (int_64)$15), [12931])
	$3 = *($2 + [1112])
	if ( ((int_64)$3 > (int_64)$16) ){ goto $label$45 }
	$15 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	if ( ((int_64)$3 != (int_64)$15) ){ goto $label$96 }
	CALL prints([8950])
	if ( ((int_32)*($6 + [26]) != (int_32)[2]) ){ goto $label$94 }
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($6 + [16])
	$16 = *($7)
	*($28) = $16
	$12 = ($6 + [26])
	$3 = *($12)
	*($18) = $3
	*($19) = $16
	$32 = ($6 + [24])
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*($32) << (int_64)8))
	$16 = *($14)
	*($20) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$33 = ($6 + [44])
	*($2 + [1592]) = *($33)
	$3 = *($6 + [8])
	CALL $24($0, $6, [3], *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*((($2 + [1096]) + [8])) = $24
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$97 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$97
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$98 }
	$34 = ($6 + [120])
	$35 = *($34)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$99 }
	$35 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($34) = $35
	
.LABEL $label$99
	CALL db_idx64_update($35, (int_64)0, ($2 + [1664]))
	
.LABEL $label$98
	*($2 + [1664]) = *($33)
	if ( (CALL $204($21, ($2 + [1664]), [8]) == 0) ){ goto $label$100 }
	$35 = ($6 + [124])
	$33 = *($35)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$101 }
	$33 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($35) = $33
	
.LABEL $label$101
	CALL db_idx64_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$100
	$16 = *($14)
	$1 = *($12)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($32) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$102 }
	$32 = ($6 + [128])
	$14 = *($32)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$103 }
	$14 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($32) = $14
	
.LABEL $label$103
	CALL db_idx128_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$102
	*($2 + [1664]) = *($7)
	if ( (CALL $204($19, ($2 + [1664]), [8]) == 0) ){ goto $label$104 }
	$32 = ($6 + [132])
	$14 = *($32)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$105 }
	$14 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($32) = $14
	
.LABEL $label$105
	CALL db_idx64_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$104
	*($2 + [1672]) = *($7)
	*($2 + [1664]) = *($12)
	if ( (CALL $204($18, ($2 + [1664]), [16]) == 0) ){ goto $label$95 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$106 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$106
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	goto $label$95 
	
.LABEL $label$96
	$16 = *($8)
	*(($32 = (($2 + [1096]) + [8]))) = *(($6 + [72]))
	*($2 + [1096]) = *($6 + [64])
	*($12) = $16
	CALL eosio_assert([1], [13105])
	*($2 + [1456]) = ((int_64)$15 << (int_64)1)
	CALL eosio_assert([1], [13148])
	CALL eosio_assert([1], [13167])
	CALL $26($0, ($2 + [1264]), ($2 + [1456]), *($6), *($9), *($2 + [1128]), *($2 + [1096]))
	$1 = *($6 + [16])
	$36 = *($0)
	$37 = *($29)
	*($12) = $16
	CALL eosio_assert([1], [13185])
	$38 = (int_64)
	*($2 + [1456]) = $38($3 - $15))
	$39 = ((int_64)$38 > (int_64)-4611686018427387904)
	CALL eosio_assert($39, [13233])
	$40 = ((int_64)$38 < (int_64)4611686018427387904)
	CALL eosio_assert($40, [13255])
	*(($33 = (($2 + [824]) + [8]))) = [0]
	*($2 + [824]) = (int_64)0
	$8 = CALL $205([9781])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$47 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$109 }
	*($2 + [824]) = ($8 << [1])
	$12 = $23
	if ( $8 ){ goto $label$108 }
	goto $label$107 
	
.LABEL $label$109
	$35 = (($8 + [16]) & [-16])
	$12 = CALL _Znwj($35)
	*($33) = $12
	*($2 + [824]) = ($35 | [1])
	*($2 + [828]) = $8
	
.LABEL $label$108
	CALL memcpy($12, [9781], $8)
	
.LABEL $label$107
	*(($12 + $8)) = [0]
	CALL $27($0, $37, $36, $1, ($2 + [1456]), ($2 + [824]))
	if ( ((*($2 + [824]) & [1]) == 0) ){ goto $label$110 }
	CALL _ZdlPv(*($33))
	
.LABEL $label$110
	$12 = ($9 + [16])
	$1 = *($12)
	*(($35 = (($2 + [808]) + [8]))) = [0]
	*($2 + [808]) = (int_64)0
	$36 = *($0)
	$41 = (($2 + [1264]) + [24])
	$37 = *($41)
	$8 = CALL $205([9788])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$48 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$113 }
	*($2 + [808]) = ($8 << [1])
	$33 = $22
	if ( $8 ){ goto $label$112 }
	goto $label$111 
	
.LABEL $label$113
	$34 = (($8 + [16]) & [-16])
	$33 = CALL _Znwj($34)
	*($35) = $33
	*($2 + [808]) = ($34 | [1])
	*($2 + [812]) = $8
	
.LABEL $label$112
	CALL memcpy($33, [9788], $8)
	
.LABEL $label$111
	*(($33 + $8)) = [0]
	CALL $27($0, $37, $36, $1, ($2 + [1096]), ($2 + [808]))
	if ( ((*($2 + [808]) & [1]) == 0) ){ goto $label$114 }
	CALL _ZdlPv(*($35))
	
.LABEL $label$114
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$35 = ($6 + [16])
	$36 = *($35)
	*($28) = $36
	$34 = ($6 + [26])
	$1 = *($34)
	*($18) = $1
	*($19) = $36
	$43 = ($6 + [24])
	*(($42 = (($2 + [1584]) + [24]))) = ((int_64)$1 | (int_64)((int_64)*($43) << (int_64)8))
	$36 = *($14)
	*($20) = ( (int_64))((int_64)0 - $36) ? $36 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$44 = ($6 + [44])
	*($2 + [1592]) = *($44)
	$1 = *($6 + [8])
	*(($45 = (($2 + [1648]) + [8]))) = $16
	*(($33 = (($2 + [1664]) + [8]))) = *($32)
	*($2 + [1664]) = *($2 + [1096])
	CALL eosio_assert([1], [13185])
	*($2 + [1648]) = $38
	CALL eosio_assert($39, [13233])
	CALL eosio_assert($40, [13255])
	*((($2 + [744]) + [8])) = *($33)
	*((($2 + [728]) + [8])) = *($45)
	*($2 + [744]) = *($2 + [1664])
	*($2 + [728]) = *($2 + [1648])
	CALL $28($0, $6, ($2 + [744]), ($2 + [728]), *($41))
	CALL eosio_assert(((int_64)$1 == (int_64)*($6 + [8])), [13518])
	*(($39 = (($2 + [1048]) + [8]))) = $24
	*($2 + [1052]) = ($2 + [1456])
	*($2 + [1048]) = ($2 + [1456])
	CALL $25(($2 + [1048]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($1 <= *($8 + [16])) ){ goto $label$115 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$115
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$116 }
	$41 = ($6 + [120])
	$40 = *($41)
	if ( ((int_32)$40 > (int_32)[-1]) ){ goto $label$117 }
	$40 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $1)
	*($41) = $40
	
.LABEL $label$117
	CALL db_idx64_update($40, (int_64)0, ($2 + [1664]))
	
.LABEL $label$116
	*($2 + [1664]) = *($44)
	if ( (CALL $204($21, ($2 + [1664]), [8]) == 0) ){ goto $label$118 }
	$41 = ($6 + [124])
	$40 = *($41)
	if ( ((int_32)$40 > (int_32)[-1]) ){ goto $label$119 }
	$40 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $1)
	*($41) = $40
	
.LABEL $label$119
	CALL db_idx64_update($40, (int_64)0, ($2 + [1664]))
	
.LABEL $label$118
	$38 = *($14)
	$36 = *($34)
	*($2 + [1672]) = ((int_64)$36 | (int_64)((int_64)*($43) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $38) ? $38 : (int_64)(((int_64)$36 ^ (int_64)4) == 0) )
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$120 }
	$40 = ($6 + [128])
	$14 = *($40)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$121 }
	$14 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $1)
	*($40) = $14
	
.LABEL $label$121
	CALL db_idx128_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$120
	*($2 + [1664]) = *($35)
	if ( (CALL $204($19, ($2 + [1664]), [8]) == 0) ){ goto $label$122 }
	$40 = ($6 + [132])
	$14 = *($40)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$123 }
	$14 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $1)
	*($40) = $14
	
.LABEL $label$123
	CALL db_idx64_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$122
	*($2 + [1672]) = *($35)
	*($2 + [1664]) = *($34)
	if ( (CALL $204($18, ($2 + [1664]), [16]) == 0) ){ goto $label$124 }
	$14 = ($6 + [136])
	$6 = *($14)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$125 }
	$6 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $1)
	*($14) = $6
	
.LABEL $label$125
	CALL db_idx128_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$124
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*($30) == (int_64)CALL $fimport$2()), [13467])
	$38 = *($12)
	*($28) = $38
	$8 = ($9 + [26])
	$1 = *($8)
	*($18) = $1
	*($19) = $38
	*($42) = ((int_64)$1 | (int_64)((int_64)*($25) << (int_64)8))
	$6 = ($9 + [80])
	$38 = *($6)
	*($20) = ( (int_64))((int_64)0 - $38) ? $38 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($9)
	$14 = ($9 + [44])
	*($2 + [1592]) = *($14)
	$35 = ($9 + [8])
	$1 = *($35)
	*($33) = $16
	CALL eosio_assert([1], [13105])
	$3 = ((int_64)$3 + (int_64)$15)
	*($2 + [1664]) = $3
	$34 = ((int_64)$3 > (int_64)-4611686018427387904)
	CALL eosio_assert($34, [13148])
	$40 = ((int_64)$3 < (int_64)4611686018427387904)
	CALL eosio_assert($40, [13167])
	*((($2 + [712]) + [8])) = *($33)
	$15 = *($32)
	*((($2 + [696]) + [8])) = $15
	*($45) = $15
	*($2 + [712]) = *($2 + [1664])
	$15 = *($2 + [1096])
	*($2 + [696]) = $15
	*($2 + [1648]) = $15
	CALL $28($0, $9, ($2 + [712]), ($2 + [696]), *($29))
	CALL eosio_assert(((int_64)$1 == (int_64)*($35)), [13518])
	*($39) = $24
	*($2 + [1052]) = ($2 + [1456])
	*($2 + [1048]) = ($2 + [1456])
	CALL $25(($2 + [1048]), $9)
	CALL db_update_i64(*($31), (int_64)0, ($2 + [1456]), [108])
	$33 = ($0 + [120])
	if ( (uint_64)($1 <= *($33)) ){ goto $label$126 }
	*($33) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$126
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$127 }
	$35 = ($9 + [120])
	$33 = *($35)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$128 }
	$33 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180416, ($2 + [1648]), $1)
	*($35) = $33
	
.LABEL $label$128
	CALL db_idx64_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$127
	*($2 + [1664]) = *($14)
	if ( (CALL $204($21, ($2 + [1664]), [8]) == 0) ){ goto $label$129 }
	$33 = ($9 + [124])
	$14 = *($33)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$130 }
	$14 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180415, ($2 + [1648]), $1)
	*($33) = $14
	
.LABEL $label$130
	CALL db_idx64_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$129
	$15 = *($6)
	$38 = *($8)
	*($2 + [1672]) = ((int_64)$38 | (int_64)((int_64)*($25) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $15) ? $15 : (int_64)(((int_64)$38 ^ (int_64)4) == 0) )
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$131 }
	$14 = ($9 + [128])
	$6 = *($14)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$132 }
	$6 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180414, ($2 + [1648]), $1)
	*($14) = $6
	
.LABEL $label$132
	CALL db_idx128_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$131
	*($2 + [1664]) = *($12)
	if ( (CALL $204($19, ($2 + [1664]), [8]) == 0) ){ goto $label$133 }
	$14 = ($9 + [132])
	$6 = *($14)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$134 }
	$6 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180413, ($2 + [1648]), $1)
	*($14) = $6
	
.LABEL $label$134
	CALL db_idx64_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$133
	*($2 + [1672]) = *($12)
	*($2 + [1664]) = *($8)
	if ( (CALL $204($18, ($2 + [1664]), [16]) == 0) ){ goto $label$135 }
	$6 = ($9 + [136])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$136 }
	$8 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180412, ($2 + [1648]), $1)
	*($6) = $8
	
.LABEL $label$136
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$135
	*(($8 = (($2 + [1240]) + [8]))) = *($7)
	$1 = *($2 + [1240])
	*($2 + [1240]) = *($2 + [1128])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$138 }
	$8 = (($2 + [1224]) + [8])
	$1 = *($7)
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [12931])
	$15 = *($2 + [1128])
	$7 = ( ($2 + [1128]) ? ($2 + [1224]) : ((int_64)$15 < (int_64)*($2 + [1224])) )
	*($8) = *(($7 + [8]))
	*($2 + [1224]) = *($7)
	$8 = (($2 + [1208]) + [8])
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [12931])
	$7 = ( ($2 + [1128]) ? ($2 + [1208]) : ((int_64)$15 > (int_64)*($2 + [1208])) )
	*($8) = *(($7 + [8]))
	*($2 + [1208]) = *($7)
	goto $label$137 
	
.LABEL $label$138
	$1 = *($8)
	*((($2 + [1208]) + [8])) = $1
	*((($2 + [1224]) + [8])) = $1
	$1 = *($2 + [1240])
	*($2 + [1224]) = $1
	*($2 + [1208]) = $1
	
.LABEL $label$137
	CALL eosio_assert(((int_64)*($32) == (int_64)*((($2 + [1192]) + [8]))), [13105])
	$1 = ((int_64)*($2 + [1192]) + (int_64)*($2 + [1096]))
	*($2 + [1192]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1192]) < (int_64)4611686018427387904), [13167])
	CALL eosio_assert([1], [13105])
	CALL eosio_assert($34, [13148])
	CALL eosio_assert($40, [13167])
	CALL eosio_assert(((int_64)$16 == (int_64)*((($2 + [1176]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1176]) + (int_64)$3)
	*($2 + [1176]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1176]) < (int_64)4611686018427387904), [13167])
	
.LABEL $label$95
	$5 = ((int_64)$5 + (int_64)1)
	
.LABEL $label$94
	$6 = *($2 + [1156])
	if ( ((int_32)$6 != (int_32)*($2 + [1164])) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$65
	$5 = (int_64)0
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$64
	$7 = [0]
	
.LABEL $label$63
	CALL eosio_assert($7, [12911])
	*($2 + [1456]) = (int_64)0
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $14) & (int_64)65535) << (int_64)8) | (int_64)4)
	CALL $20(($2 + [1168]), ($2 + [1256]), ($2 + [1456]))
	CALL eosio_assert(((int_32)*($2 + [1172]) != (int_32)[0]), [9595])
	$8 = (*(($9 + [26])) + [-1])
	if ( ((uint_32)$8 > (uint_32)[3]) ){ goto $label$52 }
	$3 = *(*($2 + [1172]) + [8])
	$14 = [4]
	$20 = [4]
	goto $label$51 
	
.LABEL $label$139
	$14 = [4]
	$20 = ( [3] ? [4] : ((int_64)$3 == (int_64)$1) )
	goto $label$51 
	
.LABEL $label$62
	$7 = [0]
	
.LABEL $label$61
	CALL eosio_assert($7, [12911])
	*($2 + [1456]) = (int_64)0
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $14) & (int_64)65535) << (int_64)8) | (int_64)4)
	CALL $20(($2 + [1168]), ($2 + [1256]), ($2 + [1456]))
	$14 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$140:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$58 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$141 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$140 }
	goto $label$57 
	
.LABEL $label$141
	$3 = $5
	
.LOOP $label$142:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$58 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$142 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$140 }
	goto $label$57 
	
.LABEL $label$60
	$7 = [0]
	
.LABEL $label$59
	CALL eosio_assert($7, [12911])
	*($2 + [1456]) = (int_64)0
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $14) & (int_64)65535) << (int_64)8) | (int_64)2)
	CALL $20(($2 + [1168]), ($2 + [1256]), ($2 + [1456]))
	CALL eosio_assert(((int_32)*($2 + [1172]) != (int_32)[0]), [9086])
	$8 = (*(($9 + [26])) + [-1])
	if ( ((uint_32)$8 > (uint_32)[3]) ){ goto $label$38 }
	$3 = *(*($2 + [1172]) + [8])
	$26 = [4]
	$14 = [4]
	goto $label$37 
	
.LABEL $label$143
	$26 = [4]
	$14 = ( [3] ? [4] : ((int_64)$3 == (int_64)$1) )
	goto $label$37 
	
.LABEL $label$58
	$7 = [0]
	
.LABEL $label$57
	CALL eosio_assert($7, [12911])
	$5 = (int_64)0
	*($2 + [1456]) = (int_64)0
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $14) & (int_64)65535) << (int_64)8) | (int_64)5)
	CALL $21(($2 + [1160]), ($2 + [1256]), ($2 + [1456]))
	$3 = *($2 + [1168])
	*($2 + [1152]) = $3
	if ( ((int_32)*($2 + [1164]) == (int_32)(CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32))) ){ goto $label$36 }
	$32 = ($9 + [64])
	$20 = (($2 + [1584]) + [48])
	$25 = ($2 + [1616])
	$26 = (($2 + [1584]) + [16])
	$45 = (($2 + [1584]) | [8])
	$22 = (($2 + [936]) | [1])
	$23 = (($2 + [952]) | [1])
	$34 = (($2 + [1456]) + [108])
	$6 = *($2 + [1156])
	$33 = ($9 + [24])
	$28 = (($2 + [1584]) + [56])
	$21 = ($2 + [1304])
	$17 = ($9 + [112])
	$29 = ($0 + [104])
	$30 = ($9 + [116])
	$5 = (int_64)0
	
.LOOP $label$144:
	if ( ((int_32)*($6 + [24]) != (int_32)*($33)) ){ goto $label$36 }
	if ( ((int_32)*($6 + [26]) != (int_32)[4]) ){ goto $label$36 }
	CALL $22(($2 + [1152]))
	*(($8 = (($2 + [1000]) + [8]))) = *(($6 + [88]))
	*($2 + [1000]) = *($6 + [80])
	*(($18 = (($2 + [1456]) + [8]))) = *($8)
	*($2 + [1456]) = *($2 + [1000])
	$12 = ($6 + [80])
	$8 = [9559]
	$7 = *([9559])
	if ( ($7 == 0) ){ goto $label$145 }
	
.LOOP $label$147:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$146 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( $7 ){ goto $label$147 }
	goto $label$145 
	
.LABEL $label$146
	CALL $19(($2 + [1456]))
	CALL prints(($8 + [1]))
	
.LABEL $label$145
	if ( ((uint_64)CALL current_time() >= (uint_64)$10) ){ goto $label$39 }
	$3 = *($32)
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$40 }
	CALL eosio_assert(((int_64)$3 > (int_64)0), [9333])
	CALL eosio_assert(((int_64)*($6 + [64]) > (int_64)0), [9373])
	*(($19 = (($2 + [1128]) + [8]))) = *(($12 + [8]))
	*($2 + [1128]) = *($12)
	$16 = *($32)
	$3 = *($2 + [1128])
	CALL __multi3(($2 + [376]), $3, (int_64)$3 >> (int_64)63), $16, (int_64)$16 >> (int_64)63))
	*(($8 = (($2 + [1112]) + [8]))) = *($19)
	*($2 + [1112]) = $3
	$3 = *((($2 + [376]) + [8]))
	$16 = *($2 + [376])
	CALL eosio_assert(( (uint_64)($16 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$16 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [13014])
	*($2 + [1112]) = $16
	$24 = (($2 + [1264]) + [48])
	$3 = *($24)
	CALL eosio_assert(((int_64)$3 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-1) | ((int_64)*($2 + [1112]) != (int_64)-9223372036854775808)), [13054])
	*($2 + [1112]) = ((int_64)*($2 + [1112]) / (int_64)$3)
	$35 = (($2 + [1264]) + [64])
	CALL $23(($2 + [1456]), $0, ($2 + [1112]), *($35), $13)
	*($8) = *($18)
	*($2 + [1112]) = *($2 + [1456])
	CALL eosio_assert(((int_64)*($2 + [1112]) > (int_64)0), [9413])
	$46 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	$3 = *($6 + [64])
	$16 = (int_64)
	if ( ((int_64)$16($3 - $46)) == (int_64)0) ){ goto $label$150 }
	$36 = *(($6 + [72]))
	CALL eosio_assert(((int_64)*($8) == (int_64)$36), [12931])
	$3 = *($2 + [1112])
	if ( ((int_64)$3 <= (int_64)$16) ){ goto $label$46 }
	$47 = ((int_64)((int_64)$16 + (int_64)999) / (int_64)1000)
	if ( ((int_64)$16 != (int_64)$47) ){ goto $label$149 }
	CALL prints([8950])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($6 + [16])
	$16 = *($7)
	*($28) = $16
	$14 = ($6 + [26])
	$3 = *($14)
	*($20) = $3
	*($25) = $16
	$18 = ($6 + [24])
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*($18) << (int_64)8))
	$16 = *($12)
	*($26) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$19 = ($6 + [44])
	*($2 + [1592]) = *($19)
	$3 = *($6 + [8])
	CALL $24($0, $6, [3], *($21))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*((($2 + [1096]) + [8])) = $34
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$151 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$151
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$152 }
	$35 = ($6 + [120])
	$24 = *($35)
	if ( ((int_32)$24 > (int_32)[-1]) ){ goto $label$153 }
	$24 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($35) = $24
	
.LABEL $label$153
	CALL db_idx64_update($24, (int_64)0, ($2 + [1664]))
	
.LABEL $label$152
	*($2 + [1664]) = *($19)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$154 }
	$24 = ($6 + [124])
	$19 = *($24)
	if ( ((int_32)$19 > (int_32)[-1]) ){ goto $label$155 }
	$19 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($24) = $19
	
.LABEL $label$155
	CALL db_idx64_update($19, (int_64)0, ($2 + [1664]))
	
.LABEL $label$154
	$16 = *($12)
	$1 = *($14)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($18) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($26, ($2 + [1664]), [16]) == 0) ){ goto $label$156 }
	$18 = ($6 + [128])
	$12 = *($18)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$157 }
	$12 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($18) = $12
	
.LABEL $label$157
	CALL db_idx128_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$156
	*($2 + [1664]) = *($7)
	if ( (CALL $204($25, ($2 + [1664]), [8]) == 0) ){ goto $label$158 }
	$18 = ($6 + [132])
	$12 = *($18)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$159 }
	$12 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($18) = $12
	
.LABEL $label$159
	CALL db_idx64_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$158
	*($2 + [1672]) = *($7)
	*($2 + [1664]) = *($14)
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$148 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$160 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$160
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	goto $label$148 
	
.LABEL $label$150
	CALL prints([8950])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($6 + [16])
	$16 = *($7)
	*($28) = $16
	$14 = ($6 + [26])
	$3 = *($14)
	*($20) = $3
	*($25) = $16
	$18 = ($6 + [24])
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*($18) << (int_64)8))
	$16 = *($12)
	*($26) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$19 = ($6 + [44])
	*($2 + [1592]) = *($19)
	$3 = *($6 + [8])
	CALL $24($0, $6, [3], *($21))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*((($2 + [1096]) + [8])) = $34
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$161 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$161
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$162 }
	$35 = ($6 + [120])
	$24 = *($35)
	if ( ((int_32)$24 > (int_32)[-1]) ){ goto $label$163 }
	$24 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($35) = $24
	
.LABEL $label$163
	CALL db_idx64_update($24, (int_64)0, ($2 + [1664]))
	
.LABEL $label$162
	*($2 + [1664]) = *($19)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$164 }
	$24 = ($6 + [124])
	$19 = *($24)
	if ( ((int_32)$19 > (int_32)[-1]) ){ goto $label$165 }
	$19 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($24) = $19
	
.LABEL $label$165
	CALL db_idx64_update($19, (int_64)0, ($2 + [1664]))
	
.LABEL $label$164
	$16 = *($12)
	$1 = *($14)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($18) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($26, ($2 + [1664]), [16]) == 0) ){ goto $label$166 }
	$18 = ($6 + [128])
	$12 = *($18)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$167 }
	$12 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($18) = $12
	
.LABEL $label$167
	CALL db_idx128_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$166
	*($2 + [1664]) = *($7)
	if ( (CALL $204($25, ($2 + [1664]), [8]) == 0) ){ goto $label$168 }
	$18 = ($6 + [132])
	$12 = *($18)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$169 }
	$12 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($18) = $12
	
.LABEL $label$169
	CALL db_idx64_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$168
	*($2 + [1672]) = *($7)
	*($2 + [1664]) = *($14)
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$148 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$170 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$170
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	goto $label$148 
	
.LABEL $label$149
	$3 = *($35)
	CALL __multi3(($2 + [296]), $3, (int_64)$3 >> (int_64)63), $16, (int_64)$16 >> (int_64)63))
	$1 = *((($2 + [296]) + [8]))
	$3 = *($2 + [296])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [13014])
	$1 = *($24)
	CALL __multi3(($2 + [280]), $3, (int_64)$3 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	$3 = *((($2 + [280]) + [8]))
	$37 = *($2 + [280])
	CALL eosio_assert(( (uint_64)($37 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$37 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [13014])
	CALL eosio_assert(((int_64)$37 > (int_64)0), [9450])
	$15 = *($2 + [1128])
	CALL eosio_assert(((int_64)$15 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$37 != (int_64)-9223372036854775808) | ((int_64)$15 != (int_64)-1)), [13054])
	$38 = ((int_64)$37 / (int_64)$15)
	CALL eosio_assert(((int_64)$38 > (int_64)0), [9466])
	$3 = *(($9 + [56]))
	*(($27 = (($2 + [1096]) + [8]))) = $3
	*($2 + [1096]) = $38
	CALL eosio_assert((uint_64)(((int_64)$38 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$173:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$172 }
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$174 }
	$3 = $1
	$7 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$173 }
	goto $label$171 
	
.LABEL $label$174
	$3 = $1
	
.LOOP $label$175:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$172 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $7 ){ goto $label$175 }
	$7 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$173 }
	goto $label$171 
	
.LABEL $label$172
	$7 = [0]
	
.LABEL $label$171
	CALL __multi3(($2 + [264]), $38, (int_64)$38 >> (int_64)63), $15, (int_64)$15 >> (int_64)63))
	CALL eosio_assert($7, [12911])
	$48 = *($19)
	$1 = *((($2 + [264]) + [8]))
	$3 = *($2 + [264])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [13014])
	*(($8 = (($2 + [1048]) + [8]))) = $48
	$1 = *($24)
	CALL eosio_assert(((int_64)$1 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-9223372036854775808) | ((int_64)$1 != (int_64)-1)), [13054])
	*($2 + [1048]) = ((int_64)$3 / (int_64)$1)
	CALL $23(($2 + [1456]), $0, ($2 + [1048]), *($35), $13)
	*($8) = *($18)
	*($2 + [1048]) = *($2 + [1456])
	CALL eosio_assert(((int_64)*($2 + [1048]) > (int_64)0), [9492])
	if ( ((int_64))($37 - ((int_64)$38 * (int_64)$15)) == (int_64)0) ){ goto $label$178 }
	$47 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	$3 = *($2 + [1048])
	if ( ((int_64)$3 != (int_64)$47) ){ goto $label$177 }
	CALL prints([8950])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($6 + [16])
	$16 = *($7)
	*($28) = $16
	$14 = ($6 + [26])
	$3 = *($14)
	*($20) = $3
	*($25) = $16
	$18 = ($6 + [24])
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*($18) << (int_64)8))
	$16 = *($12)
	*($26) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$19 = ($6 + [44])
	*($2 + [1592]) = *($19)
	$3 = *($6 + [8])
	CALL $24($0, $6, [3], *($21))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*((($2 + [1568]) + [8])) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$179 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$179
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$180 }
	$35 = ($6 + [120])
	$24 = *($35)
	if ( ((int_32)$24 > (int_32)[-1]) ){ goto $label$181 }
	$24 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($35) = $24
	
.LABEL $label$181
	CALL db_idx64_update($24, (int_64)0, ($2 + [1664]))
	
.LABEL $label$180
	*($2 + [1664]) = *($19)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$182 }
	$24 = ($6 + [124])
	$19 = *($24)
	if ( ((int_32)$19 > (int_32)[-1]) ){ goto $label$183 }
	$19 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($24) = $19
	
.LABEL $label$183
	CALL db_idx64_update($19, (int_64)0, ($2 + [1664]))
	
.LABEL $label$182
	$16 = *($12)
	$1 = *($14)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($18) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($26, ($2 + [1664]), [16]) == 0) ){ goto $label$184 }
	$18 = ($6 + [128])
	$12 = *($18)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$185 }
	$12 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($18) = $12
	
.LABEL $label$185
	CALL db_idx128_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$184
	*($2 + [1664]) = *($7)
	if ( (CALL $204($25, ($2 + [1664]), [8]) == 0) ){ goto $label$186 }
	$18 = ($6 + [132])
	$12 = *($18)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$187 }
	$12 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($18) = $12
	
.LABEL $label$187
	CALL db_idx64_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$186
	*($2 + [1672]) = *($7)
	*($2 + [1664]) = *($14)
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$148 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$188 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$188
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	goto $label$148 
	
.LABEL $label$178
	CALL eosio_assert(((int_64)*($8) == (int_64)$36), [12931])
	CALL eosio_assert(((int_64)*($2 + [1048]) == (int_64)$16), [9518])
	goto $label$176 
	
.LABEL $label$177
	$36 = *($8)
	$46 = $47
	
.LABEL $label$176
	*($18) = $36
	CALL eosio_assert([1], [13105])
	$3 = ((int_64)$46 + (int_64)$47)
	*($2 + [1456]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13167])
	CALL $26($0, ($2 + [1264]), ($2 + [1456]), *($9), *($6), $15, $38)
	$14 = ($9 + [16])
	$16 = *($14)
	$1 = *($0)
	$15 = *($21)
	$3 = *($8)
	*($18) = $3
	*($2 + [1456]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$36 == (int_64)$3), [13185])
	$3 = (int_64)
	*($2 + [1456]) = $3(*($2 + [1456]) - $47))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13255])
	*(($24 = (($2 + [952]) + [8]))) = [0]
	*($2 + [952]) = (int_64)0
	$7 = CALL $205([9545])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$49 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$191 }
	*($2 + [952]) = ($7 << [1])
	$18 = $23
	if ( $7 ){ goto $label$190 }
	goto $label$189 
	
.LABEL $label$191
	$35 = (($7 + [16]) & [-16])
	$18 = CALL _Znwj($35)
	*($24) = $18
	*($2 + [952]) = ($35 | [1])
	*($2 + [956]) = $7
	
.LABEL $label$190
	CALL memcpy($18, [9545], $7)
	
.LABEL $label$189
	*(($18 + $7)) = [0]
	CALL $27($0, $15, $1, $16, ($2 + [1456]), ($2 + [952]))
	if ( ((*($2 + [952]) & [1]) == 0) ){ goto $label$192 }
	CALL _ZdlPv(*($24))
	
.LABEL $label$192
	*(($24 = (($2 + [936]) + [8]))) = [0]
	*($2 + [936]) = (int_64)0
	$3 = *($6 + [16])
	$16 = *($0)
	$40 = (($2 + [1264]) + [24])
	$1 = *($40)
	$7 = CALL $205([9552])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$50 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$195 }
	*($2 + [936]) = ($7 << [1])
	$18 = $22
	if ( $7 ){ goto $label$194 }
	goto $label$193 
	
.LABEL $label$195
	$35 = (($7 + [16]) & [-16])
	$18 = CALL _Znwj($35)
	*($24) = $18
	*($2 + [936]) = ($35 | [1])
	*($2 + [940]) = $7
	
.LABEL $label$194
	CALL memcpy($18, [9552], $7)
	
.LABEL $label$193
	*(($18 + $7)) = [0]
	CALL $27($0, $1, $16, $3, ($2 + [1096]), ($2 + [936]))
	if ( ((*($2 + [936]) & [1]) == 0) ){ goto $label$196 }
	CALL _ZdlPv(*($24))
	
.LABEL $label$196
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$7 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$7), [13421])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$2()), [13467])
	$24 = ($6 + [16])
	$16 = *($24)
	*($28) = $16
	$35 = ($6 + [26])
	$3 = *($35)
	*($20) = $3
	*($25) = $16
	$42 = ($6 + [24])
	*(($41 = (($2 + [1584]) + [24]))) = ((int_64)$3 | (int_64)((int_64)*($42) << (int_64)8))
	$16 = *($12)
	*($26) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$43 = ($6 + [44])
	*($2 + [1592]) = *($43)
	$3 = *($6 + [8])
	$16 = *($8)
	*(($18 = (($2 + [1664]) + [8]))) = $16
	*($2 + [1664]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$36 == (int_64)$16), [13105])
	$16 = ((int_64)*($2 + [1664]) + (int_64)$46)
	*($2 + [1664]) = $16
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [13167])
	*((($2 + [248]) + [8])) = *($18)
	$16 = *($27)
	*((($2 + [232]) + [8])) = $16
	*(($39 = (($2 + [1648]) + [8]))) = $16
	*($2 + [248]) = *($2 + [1664])
	$16 = *($2 + [1096])
	*($2 + [232]) = $16
	*($2 + [1648]) = $16
	CALL $28($0, $6, ($2 + [248]), ($2 + [232]), *($21))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*(($44 = (($2 + [1568]) + [8]))) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($7 + [16])) ){ goto $label$197 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$197
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$198 }
	$49 = ($6 + [120])
	$31 = *($49)
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$199 }
	$31 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($49) = $31
	
.LABEL $label$199
	CALL db_idx64_update($31, (int_64)0, ($2 + [1664]))
	
.LABEL $label$198
	*($2 + [1664]) = *($43)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$200 }
	$31 = ($6 + [124])
	$43 = *($31)
	if ( ((int_32)$43 > (int_32)[-1]) ){ goto $label$201 }
	$43 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($31) = $43
	
.LABEL $label$201
	CALL db_idx64_update($43, (int_64)0, ($2 + [1664]))
	
.LABEL $label$200
	$16 = *($12)
	$1 = *($35)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($42) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($26, ($2 + [1664]), [16]) == 0) ){ goto $label$202 }
	$42 = ($6 + [128])
	$12 = *($42)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$203 }
	$12 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($42) = $12
	
.LABEL $label$203
	CALL db_idx128_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$202
	*($2 + [1664]) = *($24)
	if ( (CALL $204($25, ($2 + [1664]), [8]) == 0) ){ goto $label$204 }
	$42 = ($6 + [132])
	$12 = *($42)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$205 }
	$12 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($42) = $12
	
.LABEL $label$205
	CALL db_idx64_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$204
	*($2 + [1672]) = *($24)
	*($2 + [1664]) = *($35)
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$206 }
	$12 = ($6 + [136])
	$6 = *($12)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$207 }
	$6 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($12) = $6
	
.LABEL $label$207
	CALL db_idx128_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$206
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*($17) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*($29) == (int_64)CALL $fimport$2()), [13467])
	$16 = *($14)
	*($28) = $16
	$7 = ($9 + [26])
	$3 = *($7)
	*($20) = $3
	*($25) = $16
	*($41) = ((int_64)$3 | (int_64)((int_64)*($33) << (int_64)8))
	$6 = ($9 + [80])
	$16 = *($6)
	*($26) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($9)
	$12 = ($9 + [44])
	*($2 + [1592]) = *($12)
	$24 = ($9 + [8])
	$3 = *($24)
	*($18) = *($27)
	$16 = *($8)
	*($39) = $16
	*($2 + [1664]) = *($2 + [1096])
	*($2 + [1648]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$36 == (int_64)$16), [13185])
	$16 = (int_64)
	*($2 + [1648]) = $16(*($2 + [1648]) - $47))
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [13255])
	*((($2 + [216]) + [8])) = *($18)
	*((($2 + [200]) + [8])) = *($39)
	*($2 + [216]) = *($2 + [1664])
	*($2 + [200]) = *($2 + [1648])
	CALL $28($0, $9, ($2 + [216]), ($2 + [200]), *($40))
	CALL eosio_assert(((int_64)$3 == (int_64)*($24)), [13518])
	*($44) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $9)
	CALL db_update_i64(*($30), (int_64)0, ($2 + [1456]), [108])
	$18 = ($0 + [120])
	if ( (uint_64)($3 <= *($18)) ){ goto $label$208 }
	*($18) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$208
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$209 }
	$24 = ($9 + [120])
	$18 = *($24)
	if ( ((int_32)$18 > (int_32)[-1]) ){ goto $label$210 }
	$18 = CALL db_idx64_find_primary(*($29), *(($0 + [112])), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($24) = $18
	
.LABEL $label$210
	CALL db_idx64_update($18, (int_64)0, ($2 + [1664]))
	
.LABEL $label$209
	*($2 + [1664]) = *($12)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$211 }
	$18 = ($9 + [124])
	$12 = *($18)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$212 }
	$12 = CALL db_idx64_find_primary(*($29), *(($0 + [112])), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($18) = $12
	
.LABEL $label$212
	CALL db_idx64_update($12, (int_64)0, ($2 + [1664]))
	
.LABEL $label$211
	$16 = *($6)
	$1 = *($7)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($33) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($26, ($2 + [1664]), [16]) == 0) ){ goto $label$213 }
	$12 = ($9 + [128])
	$6 = *($12)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$214 }
	$6 = CALL db_idx128_find_primary(*($29), *(($0 + [112])), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($12) = $6
	
.LABEL $label$214
	CALL db_idx128_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$213
	*($2 + [1664]) = *($14)
	if ( (CALL $204($25, ($2 + [1664]), [8]) == 0) ){ goto $label$215 }
	$12 = ($9 + [132])
	$6 = *($12)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$216 }
	$6 = CALL db_idx64_find_primary(*($29), *(($0 + [112])), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($12) = $6
	
.LABEL $label$216
	CALL db_idx64_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$215
	*($2 + [1672]) = *($14)
	*($2 + [1664]) = *($7)
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$217 }
	$6 = ($9 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$218 }
	$7 = CALL db_idx128_find_primary(*($29), *(($0 + [112])), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$218
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$217
	*(($7 = (($2 + [1240]) + [8]))) = *($19)
	$3 = *($2 + [1240])
	*($2 + [1240]) = *($2 + [1128])
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$220 }
	$7 = (($2 + [1224]) + [8])
	$3 = *($19)
	CALL eosio_assert(((int_64)$3 == (int_64)*($7)), [12931])
	$16 = *($2 + [1128])
	$6 = ( ($2 + [1128]) ? ($2 + [1224]) : ((int_64)$16 < (int_64)*($2 + [1224])) )
	*($7) = *(($6 + [8]))
	*($2 + [1224]) = *($6)
	$7 = (($2 + [1208]) + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)*($7)), [12931])
	$6 = ( ($2 + [1128]) ? ($2 + [1208]) : ((int_64)$16 > (int_64)*($2 + [1208])) )
	*($7) = *(($6 + [8]))
	*($2 + [1208]) = *($6)
	goto $label$219 
	
.LABEL $label$220
	$3 = *($7)
	*((($2 + [1208]) + [8])) = $3
	*((($2 + [1224]) + [8])) = $3
	$3 = *($2 + [1240])
	*($2 + [1224]) = $3
	*($2 + [1208]) = $3
	
.LABEL $label$219
	CALL eosio_assert(((int_64)*($27) == (int_64)*((($2 + [1192]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1192]) + (int_64)*($2 + [1096]))
	*($2 + [1192]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1192]) < (int_64)4611686018427387904), [13167])
	$3 = *($2 + [1048])
	$16 = *($8)
	CALL eosio_assert(((int_64)$36 == (int_64)$16), [13105])
	$3 = ((int_64)$3 + (int_64)$46)
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13167])
	CALL eosio_assert(((int_64)$16 == (int_64)*((($2 + [1176]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1176]) + (int_64)$3)
	*($2 + [1176]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1176]) < (int_64)4611686018427387904), [13167])
	
.LABEL $label$148
	$5 = ((int_64)$5 + (int_64)1)
	$6 = *($2 + [1156])
	if ( ((int_32)$6 != (int_32)*($2 + [1164])) ){ goto $label$144 }
	goto $label$36 
	
.LABEL $label$56
	$14 = [2]
	$20 = [2]
	goto $label$51 
	
.LABEL $label$55
	$26 = [2]
	$14 = [2]
	goto $label$37 
	
.LABEL $label$54
	$14 = [2]
	$20 = ( [1] ? [2] : ((int_64)$3 == (int_64)$1) )
	goto $label$51 
	
.LABEL $label$53
	$26 = [2]
	$14 = ( [1] ? [2] : ((int_64)$3 == (int_64)$1) )
	goto $label$37 
	
.LABEL $label$52
	CALL eosio_assert([0], [8507])
	
.LABEL $label$51
	$18 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$223:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$222 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$224 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$223 }
	goto $label$221 
	
.LABEL $label$224
	$3 = $5
	
.LOOP $label$225:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$222 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$225 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$223 }
	goto $label$221 
	
.LABEL $label$222
	$7 = [0]
	
.LABEL $label$221
	CALL eosio_assert($7, [12911])
	$5 = (int_64)0
	*($2 + [1456]) = (int_64)0
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $18) & (int_64)65535) << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $20) & (int_64)255))
	CALL $20(($2 + [1160]), ($2 + [1256]), ($2 + [1456]))
	$26 = ($9 + [24])
	*($2 + [1464]) = ((int_64)((int_64)*($26) << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $14) & (int_64)255))
	$21 = ($14 & [255])
	$3 = *($9 + [80])
	*($2 + [1456]) = ( (int_64))((int_64)0 - $3) ? $3 : ((int_32)$21 == (int_32)[4]) )
	CALL $21(($2 + [1152]), ($2 + [1256]), ($2 + [1456]))
	$3 = *($2 + [1160])
	*($2 + [1144]) = $3
	if ( ((int_32)*($2 + [1156]) == (int_32)(CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32))) ){ goto $label$36 }
	$22 = ($0 + [112])
	$14 = (($2 + [1584]) + [48])
	$18 = ($2 + [1616])
	$19 = (($2 + [1584]) + [16])
	$45 = (($2 + [1584]) | [8])
	$50 = (($2 + [888]) | [1])
	$51 = (($2 + [904]) | [1])
	$34 = (($2 + [1456]) + [108])
	$6 = *($2 + [1148])
	$39 = ($20 & [255])
	$32 = ($9 + [64])
	$40 = ($9 + [72])
	$28 = ($2 + [1640])
	$41 = ($2 + [1304])
	$23 = ($0 + [104])
	$49 = ($9 + [116])
	$5 = (int_64)0
	
.LOOP $label$233:
	if ( ((int_32)*($6 + [24]) != (int_32)*($26)) ){ goto $label$36 }
	$8 = *($6 + [26])
	if ( ($8 <= $39) ){ goto $label$36 }
	if ( ((uint_32)$8 > (uint_32)$21) ){ goto $label$36 }
	CALL $22(($2 + [1144]))
	$8 = *($6 + [26])
	if ( ((int_32)$8 != (int_32)[2]) ){ goto $label$239 }
	CALL eosio_assert(((int_64)*(($6 + [88])) == (int_64)*(($9 + [88]))), [12931])
	if ( ((int_64)*($6 + [80]) > (int_64)*(($9 + [80]))) ){ goto $label$235 }
	$7 = ($6 + [80])
	*(($8 = (($2 + [920]) + [8]))) = *(($7 + [8]))
	*($2 + [920]) = *($7)
	*((($2 + [1456]) + [8])) = *($8)
	*($2 + [1456]) = *($2 + [920])
	$8 = [9671]
	$7 = *([9671])
	if ( ($7 == 0) ){ goto $label$238 }
	
.LOOP $label$240:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$237 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( $7 ){ goto $label$240 }
	goto $label$238 
	
.LABEL $label$239
	CALL eosio_assert(((int_32)$8 == (int_32)[1]), [9196])
	$3 = *($6 + [8])
	$8 = [9707]
	$7 = *([9707])
	if ( ($7 == 0) ){ goto $label$238 }
	
.LOOP $label$242:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$241 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( $7 ){ goto $label$242 }
	goto $label$238 
	
.LABEL $label$241
	CALL printui($3)
	CALL prints(($8 + [1]))
	
.LABEL $label$238
	if ( ((uint_64)CALL current_time() >= (uint_64)$10) ){ goto $label$236 }
	goto $label$234 
	
.LABEL $label$237
	CALL $19(($2 + [1456]))
	CALL prints(($8 + [1]))
	if ( (uint_64)(CALL current_time() <= $10) ){ goto $label$234 }
	
.LABEL $label$236
	CALL prints([9735])
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$235
	CALL prints([9632])
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$234
	$3 = *($32)
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$243 }
	CALL eosio_assert(((int_64)$3 > (int_64)0), [9333])
	CALL eosio_assert(((int_64)*($6 + [64]) > (int_64)0), [9373])
	$15 = *($40)
	$16 = *($32)
	$8 = ($6 + [26])
	$20 = ($6 + [80])
	$7 = ( $12 ? $20 : ((int_32)*($8) == (int_32)[1]) )
	*(($25 = (($2 + [1128]) + [8]))) = *(($7 + [8]))
	*($2 + [1128]) = *($7)
	$1 = *($6 + [64])
	$3 = *($2 + [1128])
	CALL __multi3(($2 + [568]), $3, (int_64)$3 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	*(($7 = (($2 + [1112]) + [8]))) = *($25)
	*($2 + [1112]) = $3
	$3 = *((($2 + [568]) + [8]))
	$1 = *($2 + [568])
	CALL eosio_assert(( (uint_64)($1 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$1 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [13014])
	*($2 + [1112]) = $1
	$3 = *((($2 + [1264]) + [48]))
	CALL eosio_assert(((int_64)$3 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-1) | ((int_64)*($2 + [1112]) != (int_64)-9223372036854775808)), [13054])
	*($2 + [1112]) = ((int_64)*($2 + [1112]) / (int_64)$3)
	CALL $23(($2 + [1456]), $0, ($2 + [1112]), *((($2 + [1264]) + [64])), $13)
	$33 = (($2 + [1456]) + [8])
	*($7) = *($33)
	*($2 + [1112]) = *($2 + [1456])
	CALL eosio_assert(((int_64)*($2 + [1112]) > (int_64)0), [9413])
	$1 = ((int_64)((int_64)$16 + (int_64)999) / (int_64)1000)
	$16 = (int_64)
	if ( ((int_64)$16($16 - $1)) == (int_64)0) ){ goto $label$232 }
	CALL eosio_assert(((int_64)*($7) == (int_64)$15), [12931])
	$3 = *($2 + [1112])
	if ( ((int_64)$3 > (int_64)$16) ){ goto $label$231 }
	$15 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	if ( ((int_64)$3 != (int_64)$15) ){ goto $label$245 }
	CALL prints([8950])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$7 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$7), [13421])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$2()), [13467])
	$25 = ($6 + [16])
	$16 = *($25)
	*($28) = $16
	$3 = *($8)
	*($14) = $3
	*($18) = $16
	$33 = ($6 + [24])
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*($33) << (int_64)8))
	$16 = *($20)
	*($19) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$24 = ($6 + [44])
	*($2 + [1592]) = *($24)
	$3 = *($6 + [8])
	CALL $24($0, $6, [3], *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*((($2 + [1096]) + [8])) = $34
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($7 + [16])) ){ goto $label$246 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$246
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$247 }
	$27 = ($6 + [120])
	$35 = *($27)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$248 }
	$35 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($27) = $35
	
.LABEL $label$248
	CALL db_idx64_update($35, (int_64)0, ($2 + [1664]))
	
.LABEL $label$247
	*($2 + [1664]) = *($24)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$249 }
	$35 = ($6 + [124])
	$24 = *($35)
	if ( ((int_32)$24 > (int_32)[-1]) ){ goto $label$250 }
	$24 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($35) = $24
	
.LABEL $label$250
	CALL db_idx64_update($24, (int_64)0, ($2 + [1664]))
	
.LABEL $label$249
	$16 = *($20)
	$1 = *($8)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($33) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($19, ($2 + [1664]), [16]) == 0) ){ goto $label$251 }
	$33 = ($6 + [128])
	$20 = *($33)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$252 }
	$20 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($33) = $20
	
.LABEL $label$252
	CALL db_idx128_update($20, (int_64)0, ($2 + [1664]))
	
.LABEL $label$251
	*($2 + [1664]) = *($25)
	if ( (CALL $204($18, ($2 + [1664]), [8]) == 0) ){ goto $label$253 }
	$33 = ($6 + [132])
	$20 = *($33)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$254 }
	$20 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($33) = $20
	
.LABEL $label$254
	CALL db_idx64_update($20, (int_64)0, ($2 + [1664]))
	
.LABEL $label$253
	*($2 + [1672]) = *($25)
	*($2 + [1664]) = *($8)
	if ( (CALL $204($14, ($2 + [1664]), [16]) == 0) ){ goto $label$244 }
	$6 = ($6 + [136])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$255 }
	$8 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$255
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	goto $label$244 
	
.LABEL $label$245
	$16 = *($7)
	*(($24 = (($2 + [1096]) + [8]))) = *(($6 + [72]))
	*($2 + [1096]) = *($6 + [64])
	*($33) = $16
	CALL eosio_assert([1], [13105])
	*($2 + [1456]) = ((int_64)$15 << (int_64)1)
	CALL eosio_assert([1], [13148])
	CALL eosio_assert([1], [13167])
	CALL $26($0, ($2 + [1264]), ($2 + [1456]), *($6), *($9), *($2 + [1128]), *($2 + [1096]))
	$1 = *($6 + [16])
	$36 = *($0)
	$37 = *($41)
	*($33) = $16
	CALL eosio_assert([1], [13185])
	$38 = (int_64)
	*($2 + [1456]) = $38($3 - $15))
	$42 = ((int_64)$38 > (int_64)-4611686018427387904)
	CALL eosio_assert($42, [13233])
	$43 = ((int_64)$38 < (int_64)4611686018427387904)
	CALL eosio_assert($43, [13255])
	*(($35 = (($2 + [904]) + [8]))) = [0]
	*($2 + [904]) = (int_64)0
	$7 = CALL $205([9781])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$229 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$258 }
	*($2 + [904]) = ($7 << [1])
	$33 = $51
	if ( $7 ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$258
	$27 = (($7 + [16]) & [-16])
	$33 = CALL _Znwj($27)
	*($35) = $33
	*($2 + [904]) = ($27 | [1])
	*($2 + [908]) = $7
	
.LABEL $label$257
	CALL memcpy($33, [9781], $7)
	
.LABEL $label$256
	*(($33 + $7)) = [0]
	CALL $27($0, $37, $36, $1, ($2 + [1456]), ($2 + [904]))
	if ( ((*($2 + [904]) & [1]) == 0) ){ goto $label$259 }
	CALL _ZdlPv(*($35))
	
.LABEL $label$259
	$33 = ($9 + [16])
	$1 = *($33)
	*(($27 = (($2 + [888]) + [8]))) = [0]
	*($2 + [888]) = (int_64)0
	$36 = *($0)
	$44 = (($2 + [1264]) + [24])
	$37 = *($44)
	$7 = CALL $205([9788])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$228 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$262 }
	*($2 + [888]) = ($7 << [1])
	$35 = $50
	if ( $7 ){ goto $label$261 }
	goto $label$260 
	
.LABEL $label$262
	$29 = (($7 + [16]) & [-16])
	$35 = CALL _Znwj($29)
	*($27) = $35
	*($2 + [888]) = ($29 | [1])
	*($2 + [892]) = $7
	
.LABEL $label$261
	CALL memcpy($35, [9788], $7)
	
.LABEL $label$260
	*(($35 + $7)) = [0]
	CALL $27($0, $37, $36, $1, ($2 + [1096]), ($2 + [888]))
	if ( ((*($2 + [888]) & [1]) == 0) ){ goto $label$263 }
	CALL _ZdlPv(*($27))
	
.LABEL $label$263
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$7 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$7), [13421])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$2()), [13467])
	$27 = ($6 + [16])
	$36 = *($27)
	*($28) = $36
	$1 = *($8)
	*($14) = $1
	*($18) = $36
	$30 = ($6 + [24])
	*(($17 = (($2 + [1584]) + [24]))) = ((int_64)$1 | (int_64)((int_64)*($30) << (int_64)8))
	$36 = *($20)
	*($19) = ( (int_64))((int_64)0 - $36) ? $36 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$31 = ($6 + [44])
	*($2 + [1592]) = *($31)
	$1 = *($6 + [8])
	*(($29 = (($2 + [1648]) + [8]))) = $16
	*(($35 = (($2 + [1664]) + [8]))) = *($24)
	*($2 + [1664]) = *($2 + [1096])
	CALL eosio_assert([1], [13185])
	*($2 + [1648]) = $38
	CALL eosio_assert($42, [13233])
	CALL eosio_assert($43, [13255])
	*((($2 + [552]) + [8])) = *($35)
	*((($2 + [536]) + [8])) = *($29)
	*($2 + [552]) = *($2 + [1664])
	*($2 + [536]) = *($2 + [1648])
	CALL $28($0, $6, ($2 + [552]), ($2 + [536]), *($44))
	CALL eosio_assert(((int_64)$1 == (int_64)*($6 + [8])), [13518])
	*(($42 = (($2 + [1048]) + [8]))) = $34
	*($2 + [1052]) = ($2 + [1456])
	*($2 + [1048]) = ($2 + [1456])
	CALL $25(($2 + [1048]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($1 <= *($7 + [16])) ){ goto $label$264 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$264
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$265 }
	$44 = ($6 + [120])
	$43 = *($44)
	if ( ((int_32)$43 > (int_32)[-1]) ){ goto $label$266 }
	$43 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $1)
	*($44) = $43
	
.LABEL $label$266
	CALL db_idx64_update($43, (int_64)0, ($2 + [1664]))
	
.LABEL $label$265
	*($2 + [1664]) = *($31)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$267 }
	$44 = ($6 + [124])
	$43 = *($44)
	if ( ((int_32)$43 > (int_32)[-1]) ){ goto $label$268 }
	$43 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $1)
	*($44) = $43
	
.LABEL $label$268
	CALL db_idx64_update($43, (int_64)0, ($2 + [1664]))
	
.LABEL $label$267
	$38 = *($20)
	$36 = *($8)
	*($2 + [1672]) = ((int_64)$36 | (int_64)((int_64)*($30) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $38) ? $38 : (int_64)(((int_64)$36 ^ (int_64)4) == 0) )
	if ( (CALL $204($19, ($2 + [1664]), [16]) == 0) ){ goto $label$269 }
	$43 = ($6 + [128])
	$20 = *($43)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$270 }
	$20 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $1)
	*($43) = $20
	
.LABEL $label$270
	CALL db_idx128_update($20, (int_64)0, ($2 + [1664]))
	
.LABEL $label$269
	*($2 + [1664]) = *($27)
	if ( (CALL $204($18, ($2 + [1664]), [8]) == 0) ){ goto $label$271 }
	$43 = ($6 + [132])
	$20 = *($43)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$272 }
	$20 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $1)
	*($43) = $20
	
.LABEL $label$272
	CALL db_idx64_update($20, (int_64)0, ($2 + [1664]))
	
.LABEL $label$271
	*($2 + [1672]) = *($27)
	*($2 + [1664]) = *($8)
	if ( (CALL $204($14, ($2 + [1664]), [16]) == 0) ){ goto $label$273 }
	$6 = ($6 + [136])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$274 }
	$8 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $1)
	*($6) = $8
	
.LABEL $label$274
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$273
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*($23) == (int_64)CALL $fimport$2()), [13467])
	$38 = *($33)
	*($28) = $38
	$8 = ($9 + [26])
	$1 = *($8)
	*($14) = $1
	*($18) = $38
	*($17) = ((int_64)$1 | (int_64)((int_64)*($26) << (int_64)8))
	$7 = ($9 + [80])
	$38 = *($7)
	*($19) = ( (int_64))((int_64)0 - $38) ? $38 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($9)
	$6 = ($9 + [44])
	*($2 + [1592]) = *($6)
	$20 = ($9 + [8])
	$1 = *($20)
	*($35) = $16
	CALL eosio_assert([1], [13105])
	$3 = ((int_64)$3 + (int_64)$15)
	*($2 + [1664]) = $3
	$27 = ((int_64)$3 > (int_64)-4611686018427387904)
	CALL eosio_assert($27, [13148])
	$43 = ((int_64)$3 < (int_64)4611686018427387904)
	CALL eosio_assert($43, [13167])
	*((($2 + [520]) + [8])) = *($35)
	$15 = *($24)
	*((($2 + [504]) + [8])) = $15
	*($29) = $15
	*($2 + [520]) = *($2 + [1664])
	$15 = *($2 + [1096])
	*($2 + [504]) = $15
	*($2 + [1648]) = $15
	CALL $28($0, $9, ($2 + [520]), ($2 + [504]), *($41))
	CALL eosio_assert(((int_64)$1 == (int_64)*($20)), [13518])
	*($42) = $34
	*($2 + [1052]) = ($2 + [1456])
	*($2 + [1048]) = ($2 + [1456])
	CALL $25(($2 + [1048]), $9)
	CALL db_update_i64(*($49), (int_64)0, ($2 + [1456]), [108])
	$20 = ($0 + [120])
	if ( (uint_64)($1 <= *($20)) ){ goto $label$275 }
	*($20) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$275
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$276 }
	$35 = ($9 + [120])
	$20 = *($35)
	if ( ((int_32)$20 > (int_32)[-1]) ){ goto $label$277 }
	$20 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180416, ($2 + [1648]), $1)
	*($35) = $20
	
.LABEL $label$277
	CALL db_idx64_update($20, (int_64)0, ($2 + [1664]))
	
.LABEL $label$276
	*($2 + [1664]) = *($6)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$278 }
	$20 = ($9 + [124])
	$6 = *($20)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$279 }
	$6 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180415, ($2 + [1648]), $1)
	*($20) = $6
	
.LABEL $label$279
	CALL db_idx64_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$278
	$15 = *($7)
	$38 = *($8)
	*($2 + [1672]) = ((int_64)$38 | (int_64)((int_64)*($26) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $15) ? $15 : (int_64)(((int_64)$38 ^ (int_64)4) == 0) )
	if ( (CALL $204($19, ($2 + [1664]), [16]) == 0) ){ goto $label$280 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$281 }
	$7 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180414, ($2 + [1648]), $1)
	*($6) = $7
	
.LABEL $label$281
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$280
	*($2 + [1664]) = *($33)
	if ( (CALL $204($18, ($2 + [1664]), [8]) == 0) ){ goto $label$282 }
	$6 = ($9 + [132])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$283 }
	$7 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180413, ($2 + [1648]), $1)
	*($6) = $7
	
.LABEL $label$283
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$282
	*($2 + [1672]) = *($33)
	*($2 + [1664]) = *($8)
	if ( (CALL $204($14, ($2 + [1664]), [16]) == 0) ){ goto $label$284 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$285 }
	$8 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180412, ($2 + [1648]), $1)
	*($7) = $8
	
.LABEL $label$285
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$284
	*(($8 = (($2 + [1240]) + [8]))) = *($25)
	$1 = *($2 + [1240])
	*($2 + [1240]) = *($2 + [1128])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$287 }
	$8 = (($2 + [1224]) + [8])
	$1 = *($25)
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [12931])
	$15 = *($2 + [1128])
	$7 = ( ($2 + [1128]) ? ($2 + [1224]) : ((int_64)$15 < (int_64)*($2 + [1224])) )
	*($8) = *(($7 + [8]))
	*($2 + [1224]) = *($7)
	$8 = (($2 + [1208]) + [8])
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [12931])
	$7 = ( ($2 + [1128]) ? ($2 + [1208]) : ((int_64)$15 > (int_64)*($2 + [1208])) )
	*($8) = *(($7 + [8]))
	*($2 + [1208]) = *($7)
	goto $label$286 
	
.LABEL $label$287
	$1 = *($8)
	*((($2 + [1208]) + [8])) = $1
	*((($2 + [1224]) + [8])) = $1
	$1 = *($2 + [1240])
	*($2 + [1224]) = $1
	*($2 + [1208]) = $1
	
.LABEL $label$286
	CALL eosio_assert(((int_64)*($24) == (int_64)*((($2 + [1192]) + [8]))), [13105])
	$1 = ((int_64)*($2 + [1192]) + (int_64)*($2 + [1096]))
	*($2 + [1192]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1192]) < (int_64)4611686018427387904), [13167])
	CALL eosio_assert([1], [13105])
	CALL eosio_assert($27, [13148])
	CALL eosio_assert($43, [13167])
	CALL eosio_assert(((int_64)$16 == (int_64)*((($2 + [1176]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1176]) + (int_64)$3)
	*($2 + [1176]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1176]) < (int_64)4611686018427387904), [13167])
	
.LABEL $label$244
	$5 = ((int_64)$5 + (int_64)1)
	$6 = *($2 + [1148])
	if ( ((int_32)$6 != (int_32)*($2 + [1156])) ){ goto $label$233 }
	goto $label$36 
	
.LABEL $label$243
	CALL prints([9292])
	CALL printui(*($9))
	CALL prints([9299])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [0], *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1136]) = $34
	*($2 + [1132]) = ($2 + [1456])
	*($2 + [1128]) = ($2 + [1456])
	CALL $25(($2 + [1128]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$288 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$288
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$289 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$290 }
	$7 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$290
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$289
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$291 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$292 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$292
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$291
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$293 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$294 }
	$7 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$294
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$293
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$295 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$296 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$296
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$295
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$297 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$298 }
	$8 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$298
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$297
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$232
	CALL prints([8950])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [3], *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1104]) = $34
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$299 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$299
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$300 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$301 }
	$7 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$301
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$300
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$302 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$303 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$303
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$302
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$304 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$305 }
	$7 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$305
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$304
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$306 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$307 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$307
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$306
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$230 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$308 }
	$8 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$308
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	goto $label$230 
	
.LABEL $label$231
	$46 = ((int_64)((int_64)$16 + (int_64)999) / (int_64)1000)
	if ( ((int_64)$16 != (int_64)$46) ){ goto $label$309 }
	CALL prints([8950])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [3], *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1104]) = $34
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$310 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$310
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$311 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$312 }
	$7 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$312
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$311
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$313 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$314 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$314
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$313
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$315 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$316 }
	$7 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$316
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$315
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$317 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$318 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$318
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$317
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$230 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$319 }
	$8 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$319
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	goto $label$230 
	
.LABEL $label$309
	$3 = *(($2 + [1328]))
	CALL __multi3(($2 + [488]), $3, (int_64)$3 >> (int_64)63), $16, (int_64)$16 >> (int_64)63))
	$10 = *((($2 + [488]) + [8]))
	$3 = *($2 + [488])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [13014])
	$10 = *(($2 + [1312]))
	CALL __multi3(($2 + [472]), $3, (int_64)$3 >> (int_64)63), $10, (int_64)$10 >> (int_64)63))
	$3 = *((($2 + [472]) + [8]))
	$37 = *($2 + [472])
	CALL eosio_assert(( (uint_64)($37 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$37 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [13014])
	CALL eosio_assert(((int_64)$37 > (int_64)0), [9450])
	$38 = *($2 + [1128])
	CALL eosio_assert(((int_64)$38 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$37 != (int_64)-9223372036854775808) | ((int_64)$38 != (int_64)-1)), [13054])
	$36 = ((int_64)$37 / (int_64)$38)
	CALL eosio_assert(((int_64)$36 > (int_64)0), [9466])
	*($2 + [1096]) = $36
	$3 = *(($6 + [56]))
	*($2 + [1104]) = $3
	CALL eosio_assert((uint_64)(((int_64)$36 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$322:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$321 }
	$10 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$323 }
	$3 = $10
	$7 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$322 }
	goto $label$320 
	
.LABEL $label$323
	$3 = $10
	
.LOOP $label$324:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$321 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $7 ){ goto $label$324 }
	$7 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$322 }
	goto $label$320 
	
.LABEL $label$321
	$7 = [0]
	
.LABEL $label$320
	CALL __multi3(($2 + [456]), $36, (int_64)$36 >> (int_64)63), $38, (int_64)$38 >> (int_64)63))
	CALL eosio_assert($7, [12911])
	$47 = *((($2 + [1128]) + [8]))
	$10 = *((($2 + [456]) + [8]))
	$3 = *($2 + [456])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [13014])
	*($2 + [1056]) = $47
	$10 = *(($2 + [1312]))
	CALL eosio_assert(((int_64)$10 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-9223372036854775808) | ((int_64)$10 != (int_64)-1)), [13054])
	*($2 + [1048]) = ((int_64)$3 / (int_64)$10)
	CALL $23(($2 + [1456]), $0, ($2 + [1048]), *(($2 + [1328])), $13)
	*($2 + [1056]) = *((($2 + [1456]) + [8]))
	*($2 + [1048]) = *($2 + [1456])
	CALL eosio_assert(((int_64)*($2 + [1048]) > (int_64)0), [9492])
	if ( ((int_64))($37 - ((int_64)$36 * (int_64)$38)) == (int_64)0) ){ goto $label$327 }
	CALL prints([9795])
	$1 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	$3 = *($2 + [1048])
	if ( ((int_64)$3 != (int_64)$1) ){ goto $label$326 }
	CALL prints([8950])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [3], *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1576]) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$328 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$328
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$329 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$330 }
	$7 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$330
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$329
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$331 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$332 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$332
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$331
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$333 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$334 }
	$7 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$334
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$333
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$335 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$336 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$336
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$335
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$230 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$337 }
	$8 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$337
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	goto $label$230 
	
.LABEL $label$327
	CALL eosio_assert(((int_64)*((($2 + [1048]) + [8])) == (int_64)$15), [12931])
	CALL eosio_assert(((int_64)*($2 + [1048]) == (int_64)$16), [9518])
	goto $label$325 
	
.LABEL $label$326
	$15 = *((($2 + [1048]) + [8]))
	$46 = $1
	
.LABEL $label$325
	*($2 + [1464]) = $15
	CALL eosio_assert([1], [13105])
	$3 = ((int_64)$46 + (int_64)$1)
	*($2 + [1456]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13167])
	CALL $26($0, ($2 + [1264]), ($2 + [1456]), *($6), *($9), $38, $36)
	$16 = *($6 + [16])
	$10 = *($0)
	$38 = *(($2 + [1304]))
	$3 = *((($2 + [1048]) + [8]))
	*((($2 + [1456]) + [8])) = $3
	*($2 + [1456]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$15 == (int_64)$3), [13185])
	$3 = (int_64)
	*($2 + [1456]) = $3(*($2 + [1456]) - $46))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13255])
	*((($2 + [872]) + [8])) = [0]
	*($2 + [872]) = (int_64)0
	$8 = CALL $205([9812])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$227 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$340 }
	*($2 + [872]) = ($8 << [1])
	$7 = (($2 + [872]) | [1])
	if ( $8 ){ goto $label$339 }
	goto $label$338 
	
.LABEL $label$340
	$14 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($14)
	*($2 + [872]) = ($14 | [1])
	*($2 + [880]) = $7
	*($2 + [876]) = $8
	
.LABEL $label$339
	CALL memcpy($7, [9812], $8)
	
.LABEL $label$338
	*(($7 + $8)) = [0]
	CALL $27($0, $38, $10, $16, ($2 + [1456]), ($2 + [872]))
	if ( ((*($2 + [872]) & [1]) == 0) ){ goto $label$341 }
	CALL _ZdlPv(*($2 + [880]))
	
.LABEL $label$341
	$3 = *(($9 + [16]))
	*(($2 + [864])) = [0]
	*($2 + [856]) = (int_64)0
	$16 = *($0)
	$10 = *(($2 + [1288]))
	$8 = CALL $205([9819])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$226 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$344 }
	*($2 + [856]) = ($8 << [1])
	$7 = (($2 + [856]) | [1])
	if ( $8 ){ goto $label$343 }
	goto $label$342 
	
.LABEL $label$344
	$14 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($14)
	*($2 + [856]) = ($14 | [1])
	*($2 + [864]) = $7
	*($2 + [860]) = $8
	
.LABEL $label$343
	CALL memcpy($7, [9819], $8)
	
.LABEL $label$342
	*(($7 + $8)) = [0]
	CALL $27($0, $10, $16, $3, ($2 + [1096]), ($2 + [856]))
	if ( ((*($2 + [856]) & [1]) == 0) ){ goto $label$345 }
	CALL _ZdlPv(*($2 + [864]))
	
.LABEL $label$345
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	$16 = *((($2 + [1048]) + [8]))
	*(($7 = (($2 + [1664]) + [8]))) = $16
	*($2 + [1664]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$15 == (int_64)$16), [13105])
	$16 = ((int_64)*($2 + [1664]) + (int_64)$1)
	*($2 + [1664]) = $16
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [13167])
	*((($2 + [440]) + [8])) = *($7)
	$16 = *((($2 + [1096]) + [8]))
	*((($2 + [424]) + [8])) = $16
	*((($2 + [1648]) + [8])) = $16
	*($2 + [440]) = *($2 + [1664])
	$16 = *($2 + [1096])
	*($2 + [424]) = $16
	*($2 + [1648]) = $16
	CALL $28($0, $9, ($2 + [440]), ($2 + [424]), *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1576]) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$346 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$346
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$347 }
	$14 = ($9 + [120])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$348 }
	$7 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($14) = $7
	
.LABEL $label$348
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$347
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$349 }
	$14 = ($9 + [124])
	$8 = *($14)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$350 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($14) = $8
	
.LABEL $label$350
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$349
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$10 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$10 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$10 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$351 }
	$14 = ($9 + [128])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$352 }
	$7 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($14) = $7
	
.LABEL $label$352
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$351
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$353 }
	$14 = ($9 + [132])
	$8 = *($14)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$354 }
	$8 = CALL db_idx64_find_primary(*($4), *($22), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($14) = $8
	
.LABEL $label$354
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$353
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$355 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$356 }
	$8 = CALL db_idx128_find_primary(*($4), *($22), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$356
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$355
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($6 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($6 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($6 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($6)
	*($2 + [1592]) = *(($6 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($6 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$3 = *($6 + [8])
	*(($7 = (($2 + [1664]) + [8]))) = *((($2 + [1096]) + [8]))
	$16 = *((($2 + [1048]) + [8]))
	*(($9 = (($2 + [1648]) + [8]))) = $16
	*($2 + [1664]) = *($2 + [1096])
	*($2 + [1648]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$15 == (int_64)$16), [13185])
	$16 = (int_64)
	*($2 + [1648]) = $16(*($2 + [1648]) - $46))
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [13255])
	*((($2 + [408]) + [8])) = *($7)
	*((($2 + [392]) + [8])) = *($9)
	*($2 + [408]) = *($2 + [1664])
	*($2 + [392]) = *($2 + [1648])
	CALL $28($0, $6, ($2 + [408]), ($2 + [392]), *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*($2 + [1576]) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$357 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$357
	$7 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$358 }
	$14 = ($6 + [120])
	$9 = *($14)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$359 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($14) = $9
	
.LABEL $label$359
	CALL db_idx64_update($9, (int_64)0, ($2 + [1664]))
	
.LABEL $label$358
	$9 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($6 + [44]))
	if ( (CALL $204($7, ($2 + [1664]), [8]) == 0) ){ goto $label$360 }
	$14 = ($6 + [124])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$361 }
	$7 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($14) = $7
	
.LABEL $label$361
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$360
	$7 = ($2 + [1616])
	$16 = *(($6 + [80]))
	$10 = *(($6 + [26]))
	*($2 + [1672]) = ((int_64)$10 | (int_64)((int_64)*(($6 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$10 ^ (int_64)4) == 0) )
	if ( (CALL $204($9, ($2 + [1664]), [16]) == 0) ){ goto $label$362 }
	$14 = ($6 + [128])
	$9 = *($14)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$363 }
	$9 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($14) = $9
	
.LABEL $label$363
	CALL db_idx128_update($9, (int_64)0, ($2 + [1664]))
	
.LABEL $label$362
	$9 = ($2 + [1632])
	*($2 + [1664]) = *(($6 + [16]))
	if ( (CALL $204($7, ($2 + [1664]), [8]) == 0) ){ goto $label$364 }
	$14 = ($6 + [132])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$365 }
	$7 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($14) = $7
	
.LABEL $label$365
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$364
	*($2 + [1672]) = *(($6 + [16]))
	*($2 + [1664]) = *(($6 + [26]))
	if ( (CALL $204($9, ($2 + [1664]), [16]) == 0) ){ goto $label$366 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$367 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$367
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$366
	$8 = (($2 + [1128]) + [8])
	*(($7 = (($2 + [1240]) + [8]))) = *($8)
	$3 = *($2 + [1240])
	*($2 + [1240]) = *($2 + [1128])
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$369 }
	$8 = (($2 + [1224]) + [8])
	$3 = *($8)
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [12931])
	$16 = *($2 + [1128])
	$7 = ( ($2 + [1128]) ? ($2 + [1224]) : ((int_64)$16 < (int_64)*($2 + [1224])) )
	*($8) = *(($7 + [8]))
	*($2 + [1224]) = *($7)
	$8 = (($2 + [1208]) + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [12931])
	$7 = ( ($2 + [1128]) ? ($2 + [1208]) : ((int_64)$16 > (int_64)*($2 + [1208])) )
	*($8) = *(($7 + [8]))
	*($2 + [1208]) = *($7)
	goto $label$368 
	
.LABEL $label$369
	$3 = *($7)
	*((($2 + [1208]) + [8])) = $3
	*((($2 + [1224]) + [8])) = $3
	$3 = *($2 + [1240])
	*($2 + [1224]) = $3
	*($2 + [1208]) = $3
	
.LABEL $label$368
	CALL eosio_assert(((int_64)*((($2 + [1096]) + [8])) == (int_64)*((($2 + [1192]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1192]) + (int_64)*($2 + [1096]))
	*($2 + [1192]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1192]) < (int_64)4611686018427387904), [13167])
	$3 = *($2 + [1048])
	$16 = *((($2 + [1048]) + [8]))
	CALL eosio_assert(((int_64)$15 == (int_64)$16), [13105])
	$3 = ((int_64)$3 + (int_64)$1)
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13167])
	CALL eosio_assert(((int_64)$16 == (int_64)*((($2 + [1176]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1176]) + (int_64)$3)
	*($2 + [1176]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1176]) < (int_64)4611686018427387904), [13167])
	
.LABEL $label$230
	$5 = ((int_64)$5 + (int_64)1)
	goto $label$36 
	
.LABEL $label$229
	CALL $168(($2 + [904]))
	
.LABEL $label$228
	CALL $168(($2 + [888]))
	
.LABEL $label$227
	CALL $168(($2 + [872]))
	
.LABEL $label$226
	CALL $168(($2 + [856]))
	
.LABEL $label$50
	CALL $168(($2 + [936]))
	
.LABEL $label$49
	CALL $168(($2 + [952]))
	
.LABEL $label$48
	CALL $168(($2 + [808]))
	
.LABEL $label$47
	CALL $168(($2 + [824]))
	
.LABEL $label$46
	$10 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	if ( ((int_64)$3 != (int_64)$10) ){ goto $label$373 }
	CALL prints([8950])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [3], *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1104]) = $34
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$374 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$374
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$375 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$376 }
	$7 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$376
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$375
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$377 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$378 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$378
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$377
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$379 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$380 }
	$7 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$380
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$379
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$381 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$382 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$382
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$381
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$372 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$383 }
	$8 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$383
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	goto $label$372 
	
.LABEL $label$373
	$16 = *((($2 + [1112]) + [8]))
	*((($2 + [1096]) + [8])) = *(($32 + [8]))
	*($2 + [1096]) = *($32)
	*($2 + [1464]) = $16
	CALL eosio_assert([1], [13105])
	*($2 + [1456]) = ((int_64)$10 << (int_64)1)
	CALL eosio_assert([1], [13148])
	CALL eosio_assert([1], [13167])
	CALL $26($0, ($2 + [1264]), ($2 + [1456]), *($9), *($6), *($2 + [1128]), *($2 + [1096]))
	$1 = *(($9 + [16]))
	$38 = *($0)
	$36 = *(($2 + [1304]))
	*($2 + [1464]) = $16
	CALL eosio_assert([1], [13185])
	$15 = (int_64)
	*($2 + [1456]) = $15($3 - $10))
	$14 = ((int_64)$15 > (int_64)-4611686018427387904)
	CALL eosio_assert($14, [13233])
	$13 = ((int_64)$15 < (int_64)4611686018427387904)
	CALL eosio_assert($13, [13255])
	*((($2 + [984]) + [8])) = [0]
	*($2 + [984]) = (int_64)0
	$8 = CALL $205([9436])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$371 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$386 }
	*($2 + [984]) = ($8 << [1])
	$7 = (($2 + [984]) | [1])
	if ( $8 ){ goto $label$385 }
	goto $label$384 
	
.LABEL $label$386
	$12 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($12)
	*($2 + [984]) = ($12 | [1])
	*($2 + [992]) = $7
	*($2 + [988]) = $8
	
.LABEL $label$385
	CALL memcpy($7, [9436], $8)
	
.LABEL $label$384
	*(($7 + $8)) = [0]
	CALL $27($0, $36, $38, $1, ($2 + [1456]), ($2 + [984]))
	if ( ((*($2 + [984]) & [1]) == 0) ){ goto $label$387 }
	CALL _ZdlPv(*($2 + [992]))
	
.LABEL $label$387
	*(($2 + [976])) = [0]
	*($2 + [968]) = (int_64)0
	$1 = *($6 + [16])
	$38 = *($0)
	$36 = *(($2 + [1288]))
	$8 = CALL $205([9443])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$370 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$390 }
	*($2 + [968]) = ($8 << [1])
	$7 = (($2 + [968]) | [1])
	if ( $8 ){ goto $label$389 }
	goto $label$388 
	
.LABEL $label$390
	$12 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($12)
	*($2 + [968]) = ($12 | [1])
	*($2 + [976]) = $7
	*($2 + [972]) = $8
	
.LABEL $label$389
	CALL memcpy($7, [9443], $8)
	
.LABEL $label$388
	*(($7 + $8)) = [0]
	CALL $27($0, $36, $38, $1, ($2 + [1096]), ($2 + [968]))
	if ( ((*($2 + [968]) & [1]) == 0) ){ goto $label$391 }
	CALL _ZdlPv(*($2 + [976]))
	
.LABEL $label$391
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$38 = *(($9 + [16]))
	*(($2 + [1640])) = $38
	$1 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $1
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $38
	$38 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $38) ? $38 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$1 = *($8)
	*(($7 = (($2 + [1664]) + [8]))) = *((($2 + [1096]) + [8]))
	*($2 + [1656]) = $16
	*($2 + [1664]) = *($2 + [1096])
	CALL eosio_assert([1], [13185])
	*($2 + [1648]) = $15
	CALL eosio_assert($14, [13233])
	CALL eosio_assert($13, [13255])
	*((($2 + [360]) + [8])) = *($7)
	*((($2 + [344]) + [8])) = *($2 + [1656])
	*($2 + [360]) = *($2 + [1664])
	*($2 + [344]) = *($2 + [1648])
	CALL $28($0, $9, ($2 + [360]), ($2 + [344]), *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [13518])
	*($2 + [1056]) = $34
	*($2 + [1052]) = ($2 + [1456])
	*($2 + [1048]) = ($2 + [1456])
	CALL $25(($2 + [1048]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$392 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$392
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$393 }
	$14 = ($9 + [120])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$394 }
	$7 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180416, ($2 + [1648]), $1)
	*($14) = $7
	
.LABEL $label$394
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$393
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$395 }
	$14 = ($9 + [124])
	$8 = *($14)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$396 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180415, ($2 + [1648]), $1)
	*($14) = $8
	
.LABEL $label$396
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$395
	$8 = ($2 + [1616])
	$15 = *(($9 + [80]))
	$38 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$38 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $15) ? $15 : (int_64)(((int_64)$38 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$397 }
	$14 = ($9 + [128])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$398 }
	$7 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180414, ($2 + [1648]), $1)
	*($14) = $7
	
.LABEL $label$398
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$397
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$399 }
	$14 = ($9 + [132])
	$8 = *($14)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$400 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180413, ($2 + [1648]), $1)
	*($14) = $8
	
.LABEL $label$400
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$399
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$401 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$402 }
	$8 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180412, ($2 + [1648]), $1)
	*($7) = $8
	
.LABEL $label$402
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$401
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$15 = *(($6 + [16]))
	*(($2 + [1640])) = $15
	$1 = *(($6 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$1 | (int_64)((int_64)*(($6 + [24])) << (int_64)8))
	*($2 + [1632]) = $1
	*($2 + [1584]) = *($6)
	*($2 + [1592]) = *(($6 + [44]))
	*($2 + [1616]) = $15
	$15 = *(($6 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $15) ? $15 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	$1 = *($6 + [8])
	*($2 + [1672]) = $16
	CALL eosio_assert([1], [13105])
	$3 = ((int_64)$3 + (int_64)$10)
	*($2 + [1664]) = $3
	$7 = ((int_64)$3 > (int_64)-4611686018427387904)
	CALL eosio_assert($7, [13148])
	$9 = ((int_64)$3 < (int_64)4611686018427387904)
	CALL eosio_assert($9, [13167])
	*((($2 + [328]) + [8])) = *($2 + [1672])
	$10 = *((($2 + [1096]) + [8]))
	*((($2 + [312]) + [8])) = $10
	*((($2 + [1648]) + [8])) = $10
	*($2 + [328]) = *($2 + [1664])
	$10 = *($2 + [1096])
	*($2 + [312]) = $10
	*($2 + [1648]) = $10
	CALL $28($0, $6, ($2 + [328]), ($2 + [312]), *(($2 + [1304])))
	CALL eosio_assert(((int_64)$1 == (int_64)*($6 + [8])), [13518])
	*($2 + [1056]) = $34
	*($2 + [1052]) = ($2 + [1456])
	*($2 + [1048]) = ($2 + [1456])
	CALL $25(($2 + [1048]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($1 <= *($8 + [16])) ){ goto $label$403 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$403
	$14 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$404 }
	$13 = ($6 + [120])
	$4 = *($13)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$405 }
	$4 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $1)
	*($13) = $4
	
.LABEL $label$405
	CALL db_idx64_update($4, (int_64)0, ($2 + [1664]))
	
.LABEL $label$404
	$4 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($6 + [44]))
	if ( (CALL $204($14, ($2 + [1664]), [8]) == 0) ){ goto $label$406 }
	$13 = ($6 + [124])
	$14 = *($13)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$407 }
	$14 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $1)
	*($13) = $14
	
.LABEL $label$407
	CALL db_idx64_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$406
	$14 = ($2 + [1616])
	$10 = *(($6 + [80]))
	$15 = *(($6 + [26]))
	*($2 + [1672]) = ((int_64)$15 | (int_64)((int_64)*(($6 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $10) ? $10 : (int_64)(((int_64)$15 ^ (int_64)4) == 0) )
	if ( (CALL $204($4, ($2 + [1664]), [16]) == 0) ){ goto $label$408 }
	$13 = ($6 + [128])
	$4 = *($13)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$409 }
	$4 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $1)
	*($13) = $4
	
.LABEL $label$409
	CALL db_idx128_update($4, (int_64)0, ($2 + [1664]))
	
.LABEL $label$408
	$4 = ($2 + [1632])
	*($2 + [1664]) = *(($6 + [16]))
	if ( (CALL $204($14, ($2 + [1664]), [8]) == 0) ){ goto $label$410 }
	$13 = ($6 + [132])
	$14 = *($13)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$411 }
	$14 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $1)
	*($13) = $14
	
.LABEL $label$411
	CALL db_idx64_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$410
	*($2 + [1672]) = *(($6 + [16]))
	*($2 + [1664]) = *(($6 + [26]))
	if ( (CALL $204($4, ($2 + [1664]), [16]) == 0) ){ goto $label$412 }
	$14 = ($6 + [136])
	$6 = *($14)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$413 }
	$6 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $1)
	*($14) = $6
	
.LABEL $label$413
	CALL db_idx128_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$412
	$8 = (($2 + [1128]) + [8])
	*(($6 = (($2 + [1240]) + [8]))) = *($8)
	$1 = *($2 + [1240])
	*($2 + [1240]) = *($2 + [1128])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$415 }
	$8 = (($2 + [1224]) + [8])
	$1 = *($8)
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [12931])
	$10 = *($2 + [1128])
	$6 = ( ($2 + [1128]) ? ($2 + [1224]) : ((int_64)$10 < (int_64)*($2 + [1224])) )
	*($8) = *(($6 + [8]))
	*($2 + [1224]) = *($6)
	$8 = (($2 + [1208]) + [8])
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [12931])
	$6 = ( ($2 + [1128]) ? ($2 + [1208]) : ((int_64)$10 > (int_64)*($2 + [1208])) )
	*($8) = *(($6 + [8]))
	*($2 + [1208]) = *($6)
	goto $label$414 
	
.LABEL $label$415
	$1 = *($6)
	*((($2 + [1208]) + [8])) = $1
	*((($2 + [1224]) + [8])) = $1
	$1 = *($2 + [1240])
	*($2 + [1224]) = $1
	*($2 + [1208]) = $1
	
.LABEL $label$414
	CALL eosio_assert(((int_64)*($2 + [1104]) == (int_64)*((($2 + [1192]) + [8]))), [13105])
	$1 = ((int_64)*($2 + [1192]) + (int_64)*($2 + [1096]))
	*($2 + [1192]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1192]) < (int_64)4611686018427387904), [13167])
	CALL eosio_assert([1], [13105])
	CALL eosio_assert($7, [13148])
	CALL eosio_assert($9, [13167])
	CALL eosio_assert(((int_64)$16 == (int_64)*((($2 + [1176]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1176]) + (int_64)$3)
	*($2 + [1176]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1176]) < (int_64)4611686018427387904), [13167])
	
.LABEL $label$372
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$371
	CALL $168(($2 + [984]))
	
.LABEL $label$370
	CALL $168(($2 + [968]))
	
.LABEL $label$45
	$46 = ((int_64)((int_64)$16 + (int_64)999) / (int_64)1000)
	if ( ((int_64)$16 != (int_64)$46) ){ goto $label$416 }
	CALL prints([8950])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [3], *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1104]) = $24
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$417 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$417
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$418 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$419 }
	$7 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$419
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$418
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$420 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$421 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$421
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$420
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$422 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$423 }
	$7 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$423
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$422
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$424 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$425 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$425
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$424
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$43 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$426 }
	$8 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$426
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	goto $label$43 
	
.LABEL $label$416
	$3 = *(($2 + [1328]))
	CALL __multi3(($2 + [680]), $3, (int_64)$3 >> (int_64)63), $16, (int_64)$16 >> (int_64)63))
	$10 = *((($2 + [680]) + [8]))
	$3 = *($2 + [680])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [13014])
	$10 = *(($2 + [1312]))
	CALL __multi3(($2 + [664]), $3, (int_64)$3 >> (int_64)63), $10, (int_64)$10 >> (int_64)63))
	$3 = *((($2 + [664]) + [8]))
	$37 = *($2 + [664])
	CALL eosio_assert(( (uint_64)($37 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$37 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [13014])
	CALL eosio_assert(((int_64)$37 > (int_64)0), [9450])
	$38 = *($2 + [1128])
	CALL eosio_assert(((int_64)$38 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$37 != (int_64)-9223372036854775808) | ((int_64)$38 != (int_64)-1)), [13054])
	$36 = ((int_64)$37 / (int_64)$38)
	CALL eosio_assert(((int_64)$36 > (int_64)0), [9466])
	*($2 + [1096]) = $36
	$3 = *(($6 + [56]))
	*($2 + [1104]) = $3
	CALL eosio_assert((uint_64)(((int_64)$36 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$429:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$428 }
	$10 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$430 }
	$3 = $10
	$7 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$429 }
	goto $label$427 
	
.LABEL $label$430
	$3 = $10
	
.LOOP $label$431:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$428 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $7 ){ goto $label$431 }
	$7 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$429 }
	goto $label$427 
	
.LABEL $label$428
	$7 = [0]
	
.LABEL $label$427
	CALL __multi3(($2 + [648]), $36, (int_64)$36 >> (int_64)63), $38, (int_64)$38 >> (int_64)63))
	CALL eosio_assert($7, [12911])
	$47 = *((($2 + [1128]) + [8]))
	$10 = *((($2 + [648]) + [8]))
	$3 = *($2 + [648])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$10 < (int_64)0) : (int_64)($10 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$10 > (int_64)-1) : ((int_64)$10 == (int_64)-1) ), [13014])
	*($2 + [1056]) = $47
	$10 = *(($2 + [1312]))
	CALL eosio_assert(((int_64)$10 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-9223372036854775808) | ((int_64)$10 != (int_64)-1)), [13054])
	*($2 + [1048]) = ((int_64)$3 / (int_64)$10)
	CALL $23(($2 + [1456]), $0, ($2 + [1048]), *(($2 + [1328])), $13)
	*($2 + [1056]) = *((($2 + [1456]) + [8]))
	*($2 + [1048]) = *($2 + [1456])
	CALL eosio_assert(((int_64)*($2 + [1048]) > (int_64)0), [9492])
	if ( ((int_64))($37 - ((int_64)$36 * (int_64)$38)) == (int_64)0) ){ goto $label$434 }
	CALL prints([9795])
	$1 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	$3 = *($2 + [1048])
	if ( ((int_64)$3 != (int_64)$1) ){ goto $label$433 }
	CALL prints([8950])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [3], *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1576]) = $24
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$435 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$435
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$436 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$437 }
	$7 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$437
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$436
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$438 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$439 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$439
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$438
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$440 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$441 }
	$7 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$441
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$440
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$442 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$443 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$443
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$442
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$43 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$444 }
	$8 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$444
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	goto $label$43 
	
.LABEL $label$434
	CALL eosio_assert(((int_64)*((($2 + [1048]) + [8])) == (int_64)$15), [12931])
	CALL eosio_assert(((int_64)*($2 + [1048]) == (int_64)$16), [9518])
	goto $label$432 
	
.LABEL $label$433
	$15 = *((($2 + [1048]) + [8]))
	$46 = $1
	
.LABEL $label$432
	*($2 + [1464]) = $15
	CALL eosio_assert([1], [13105])
	$3 = ((int_64)$46 + (int_64)$1)
	*($2 + [1456]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13167])
	CALL $26($0, ($2 + [1264]), ($2 + [1456]), *($6), *($9), $38, $36)
	$16 = *($6 + [16])
	$10 = *($0)
	$38 = *(($2 + [1304]))
	$3 = *((($2 + [1048]) + [8]))
	*((($2 + [1456]) + [8])) = $3
	*($2 + [1456]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$15 == (int_64)$3), [13185])
	$3 = (int_64)
	*($2 + [1456]) = $3(*($2 + [1456]) - $46))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13255])
	*((($2 + [792]) + [8])) = [0]
	*($2 + [792]) = (int_64)0
	$8 = CALL $205([9812])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$446 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$449 }
	*($2 + [792]) = ($8 << [1])
	$7 = (($2 + [792]) | [1])
	if ( $8 ){ goto $label$448 }
	goto $label$447 
	
.LABEL $label$449
	$14 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($14)
	*($2 + [792]) = ($14 | [1])
	*($2 + [800]) = $7
	*($2 + [796]) = $8
	
.LABEL $label$448
	CALL memcpy($7, [9812], $8)
	
.LABEL $label$447
	*(($7 + $8)) = [0]
	CALL $27($0, $38, $10, $16, ($2 + [1456]), ($2 + [792]))
	if ( ((*($2 + [792]) & [1]) == 0) ){ goto $label$450 }
	CALL _ZdlPv(*($2 + [800]))
	
.LABEL $label$450
	$3 = *(($9 + [16]))
	*(($2 + [784])) = [0]
	*($2 + [776]) = (int_64)0
	$16 = *($0)
	$10 = *(($2 + [1288]))
	$8 = CALL $205([9819])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$445 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$453 }
	*($2 + [776]) = ($8 << [1])
	$7 = (($2 + [776]) | [1])
	if ( $8 ){ goto $label$452 }
	goto $label$451 
	
.LABEL $label$453
	$14 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($14)
	*($2 + [776]) = ($14 | [1])
	*($2 + [784]) = $7
	*($2 + [780]) = $8
	
.LABEL $label$452
	CALL memcpy($7, [9819], $8)
	
.LABEL $label$451
	*(($7 + $8)) = [0]
	CALL $27($0, $10, $16, $3, ($2 + [1096]), ($2 + [776]))
	if ( ((*($2 + [776]) & [1]) == 0) ){ goto $label$454 }
	CALL _ZdlPv(*($2 + [784]))
	
.LABEL $label$454
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	$16 = *((($2 + [1048]) + [8]))
	*(($7 = (($2 + [1664]) + [8]))) = $16
	*($2 + [1664]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$15 == (int_64)$16), [13105])
	$16 = ((int_64)*($2 + [1664]) + (int_64)$1)
	*($2 + [1664]) = $16
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [13167])
	*((($2 + [632]) + [8])) = *($7)
	$16 = *((($2 + [1096]) + [8]))
	*((($2 + [616]) + [8])) = $16
	*((($2 + [1648]) + [8])) = $16
	*($2 + [632]) = *($2 + [1664])
	$16 = *($2 + [1096])
	*($2 + [616]) = $16
	*($2 + [1648]) = $16
	CALL $28($0, $9, ($2 + [632]), ($2 + [616]), *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1576]) = $24
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$455 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$455
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$456 }
	$14 = ($9 + [120])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$457 }
	$7 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($14) = $7
	
.LABEL $label$457
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$456
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$458 }
	$14 = ($9 + [124])
	$8 = *($14)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$459 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($14) = $8
	
.LABEL $label$459
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$458
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$10 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$10 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$10 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$460 }
	$14 = ($9 + [128])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$461 }
	$7 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($14) = $7
	
.LABEL $label$461
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$460
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$462 }
	$14 = ($9 + [132])
	$8 = *($14)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$463 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($14) = $8
	
.LABEL $label$463
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$462
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$464 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$465 }
	$8 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$465
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$464
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($6 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($6 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($6 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($6)
	*($2 + [1592]) = *(($6 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($6 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$3 = *($6 + [8])
	*(($7 = (($2 + [1664]) + [8]))) = *((($2 + [1096]) + [8]))
	$16 = *((($2 + [1048]) + [8]))
	*(($9 = (($2 + [1648]) + [8]))) = $16
	*($2 + [1664]) = *($2 + [1096])
	*($2 + [1648]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$15 == (int_64)$16), [13185])
	$16 = (int_64)
	*($2 + [1648]) = $16(*($2 + [1648]) - $46))
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [13255])
	*((($2 + [600]) + [8])) = *($7)
	*((($2 + [584]) + [8])) = *($9)
	*($2 + [600]) = *($2 + [1664])
	*($2 + [584]) = *($2 + [1648])
	CALL $28($0, $6, ($2 + [600]), ($2 + [584]), *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*($2 + [1576]) = $24
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$466 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$466
	$7 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$467 }
	$14 = ($6 + [120])
	$9 = *($14)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$468 }
	$9 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($14) = $9
	
.LABEL $label$468
	CALL db_idx64_update($9, (int_64)0, ($2 + [1664]))
	
.LABEL $label$467
	$9 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($6 + [44]))
	if ( (CALL $204($7, ($2 + [1664]), [8]) == 0) ){ goto $label$469 }
	$14 = ($6 + [124])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$470 }
	$7 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($14) = $7
	
.LABEL $label$470
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$469
	$7 = ($2 + [1616])
	$16 = *(($6 + [80]))
	$10 = *(($6 + [26]))
	*($2 + [1672]) = ((int_64)$10 | (int_64)((int_64)*(($6 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$10 ^ (int_64)4) == 0) )
	if ( (CALL $204($9, ($2 + [1664]), [16]) == 0) ){ goto $label$471 }
	$14 = ($6 + [128])
	$9 = *($14)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$472 }
	$9 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($14) = $9
	
.LABEL $label$472
	CALL db_idx128_update($9, (int_64)0, ($2 + [1664]))
	
.LABEL $label$471
	$9 = ($2 + [1632])
	*($2 + [1664]) = *(($6 + [16]))
	if ( (CALL $204($7, ($2 + [1664]), [8]) == 0) ){ goto $label$473 }
	$14 = ($6 + [132])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$474 }
	$7 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($14) = $7
	
.LABEL $label$474
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$473
	*($2 + [1672]) = *(($6 + [16]))
	*($2 + [1664]) = *(($6 + [26]))
	if ( (CALL $204($9, ($2 + [1664]), [16]) == 0) ){ goto $label$475 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$476 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$476
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$475
	$8 = (($2 + [1128]) + [8])
	*(($7 = (($2 + [1240]) + [8]))) = *($8)
	$3 = *($2 + [1240])
	*($2 + [1240]) = *($2 + [1128])
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$478 }
	$8 = (($2 + [1224]) + [8])
	$3 = *($8)
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [12931])
	$16 = *($2 + [1128])
	$7 = ( ($2 + [1128]) ? ($2 + [1224]) : ((int_64)$16 < (int_64)*($2 + [1224])) )
	*($8) = *(($7 + [8]))
	*($2 + [1224]) = *($7)
	$8 = (($2 + [1208]) + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [12931])
	$7 = ( ($2 + [1128]) ? ($2 + [1208]) : ((int_64)$16 > (int_64)*($2 + [1208])) )
	*($8) = *(($7 + [8]))
	*($2 + [1208]) = *($7)
	goto $label$477 
	
.LABEL $label$478
	$3 = *($7)
	*((($2 + [1208]) + [8])) = $3
	*((($2 + [1224]) + [8])) = $3
	$3 = *($2 + [1240])
	*($2 + [1224]) = $3
	*($2 + [1208]) = $3
	
.LABEL $label$477
	CALL eosio_assert(((int_64)*((($2 + [1096]) + [8])) == (int_64)*((($2 + [1192]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1192]) + (int_64)*($2 + [1096]))
	*($2 + [1192]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1192]) < (int_64)4611686018427387904), [13167])
	$3 = *($2 + [1048])
	$16 = *((($2 + [1048]) + [8]))
	CALL eosio_assert(((int_64)$15 == (int_64)$16), [13105])
	$3 = ((int_64)$3 + (int_64)$1)
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13167])
	CALL eosio_assert(((int_64)$16 == (int_64)*((($2 + [1176]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1176]) + (int_64)$3)
	*($2 + [1176]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1176]) < (int_64)4611686018427387904), [13167])
	goto $label$43 
	
.LABEL $label$446
	CALL $168(($2 + [792]))
	
.LABEL $label$445
	CALL $168(($2 + [776]))
	
.LABEL $label$44
	CALL prints([8950])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [3], *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1104]) = $24
	*($2 + [1100]) = ($2 + [1456])
	*($2 + [1096]) = ($2 + [1456])
	CALL $25(($2 + [1096]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$479 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$479
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$480 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$481 }
	$7 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$481
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$480
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$482 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$483 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$483
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$482
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$484 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$485 }
	$7 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$485
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$484
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$486 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$487 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$487
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$486
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$43 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$488 }
	$8 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$488
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$43
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$42
	CALL prints([9292])
	CALL printui(*($9))
	CALL prints([9299])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [0], *(($2 + [1304])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1136]) = $24
	*($2 + [1132]) = ($2 + [1456])
	*($2 + [1128]) = ($2 + [1456])
	CALL $25(($2 + [1128]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$489 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$489
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$490 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$491 }
	$7 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$491
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$490
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$492 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$493 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$493
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$492
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$494 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$495 }
	$7 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$495
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$494
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$496 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$497 }
	$8 = CALL db_idx64_find_primary(*($4), *($17), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$497
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$496
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$498 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$499 }
	$8 = CALL db_idx128_find_primary(*($4), *($17), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$499
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$498
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$41
	CALL prints([9247])
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$40
	CALL prints([9292])
	CALL printui(*($9))
	CALL prints([9299])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [0], *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1136]) = $34
	*($2 + [1132]) = ($2 + [1456])
	*($2 + [1128]) = ($2 + [1456])
	CALL $25(($2 + [1128]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$500 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$500
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$501 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$502 }
	$7 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$502
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$501
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$503 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$504 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$504
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$503
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$505 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$506 }
	$7 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$506
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$505
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$507 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$508 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$508
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$507
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$509 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$510 }
	$8 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$510
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$509
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$39
	CALL prints([9247])
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$38
	CALL eosio_assert([0], [8507])
	
.LABEL $label$37
	$18 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$513:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$512 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$514 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$513 }
	goto $label$511 
	
.LABEL $label$514
	$3 = $5
	
.LOOP $label$515:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$512 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$515 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$513 }
	goto $label$511 
	
.LABEL $label$512
	$7 = [0]
	
.LABEL $label$511
	CALL eosio_assert($7, [12911])
	*($2 + [1456]) = (int_64)0
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $18) & (int_64)65535) << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $14) & (int_64)255))
	CALL $20(($2 + [1160]), ($2 + [1256]), ($2 + [1456]))
	$18 = *(($9 + [24]))
	$3 = *(($9 + [88]))
	CALL eosio_assert([1], [12862])
	$19 = ($26 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$518:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$517 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$519 }
	$3 = $5
	$7 = [1]
	$6 = $8
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$518 }
	goto $label$516 
	
.LABEL $label$519
	$3 = $5
	
.LOOP $label$520:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$517 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$6 = ($8 + [1])
	$8 = $6
	if ( $7 ){ goto $label$520 }
	$7 = [1]
	$8 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$518 }
	goto $label$516 
	
.LABEL $label$517
	$7 = [0]
	
.LABEL $label$516
	CALL eosio_assert($7, [12911])
	$5 = (int_64)0
	*($2 + [1456]) = (int_64)0
	*($2 + [1464]) = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $18) & (int_64)65535) << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $19) & (int_64)255))
	CALL $21(($2 + [1152]), ($2 + [1256]), ($2 + [1456]))
	$3 = *($2 + [1160])
	*($2 + [1144]) = $3
	if ( ((int_32)*($2 + [1156]) == (int_32)(CASTING uint_32)(uint_64 (uint_64)$3 >> (uint_64)(int_64)32))) ){ goto $label$36 }
	$25 = ($9 + [64])
	$18 = (($2 + [1584]) + [48])
	$19 = ($2 + [1616])
	$20 = (($2 + [1584]) + [16])
	$45 = (($2 + [1584]) | [8])
	$50 = (($2 + [1016]) | [1])
	$51 = (($2 + [1032]) | [1])
	$34 = (($2 + [1456]) + [108])
	$6 = *($2 + [1148])
	$32 = ($9 + [24])
	$27 = ($14 & [255])
	$28 = (($2 + [1584]) + [56])
	$21 = ($2 + [1304])
	$22 = ($9 + [112])
	$40 = ($0 + [104])
	$23 = ($9 + [116])
	$5 = (int_64)0
	
.LOOP $label$522:
	if ( ((int_32)*($6 + [24]) != (int_32)*($32)) ){ goto $label$36 }
	$8 = *($6 + [26])
	if ( ($8 <= $27) ){ goto $label$36 }
	if ( ((uint_32)$8 > (uint_32)($26 & [255])) ){ goto $label$36 }
	CALL $22(($2 + [1144]))
	$8 = *($6 + [26])
	if ( ((int_32)$8 != (int_32)[4]) ){ goto $label$526 }
	CALL eosio_assert(((int_64)*(($6 + [88])) == (int_64)*(($9 + [88]))), [12931])
	if ( ((int_64)*($6 + [80]) < (int_64)*(($9 + [80]))) ){ goto $label$524 }
	CALL prints([9160])
	CALL $19(($6 + [80]))
	CALL prints([9194])
	if ( ((uint_64)CALL current_time() >= (uint_64)$10) ){ goto $label$525 }
	goto $label$523 
	
.LABEL $label$526
	CALL eosio_assert(((int_32)$8 == (int_32)[3]), [9196])
	$3 = *($6 + [8])
	$8 = [9219]
	$7 = *([9219])
	if ( ($7 == 0) ){ goto $label$528 }
	
.LOOP $label$529:
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$527 }
	CALL prints_l($8, [1])
	$8 = ($8 + [1])
	$7 = *($8)
	if ( $7 ){ goto $label$529 }
	
.LABEL $label$528
	if ( (uint_64)(CALL current_time() <= $10) ){ goto $label$523 }
	goto $label$525 
	
.LABEL $label$527
	CALL printui($3)
	CALL prints(($8 + [1]))
	if ( (uint_64)(CALL current_time() <= $10) ){ goto $label$523 }
	
.LABEL $label$525
	CALL prints([9247])
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$524
	CALL prints([9122])
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$523
	$3 = *($25)
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$530 }
	CALL eosio_assert(((int_64)$3 > (int_64)0), [9333])
	CALL eosio_assert(((int_64)*($6 + [64]) > (int_64)0), [9373])
	$16 = *($25)
	$3 = *($12)
	CALL __multi3(($2 + [184]), $3, (int_64)$3 >> (int_64)63), $16, (int_64)$16 >> (int_64)63))
	$7 = ($12 + [8])
	*(($8 = (($2 + [1128]) + [8]))) = *($7)
	*($2 + [1128]) = $3
	$3 = *((($2 + [184]) + [8]))
	$16 = *($2 + [184])
	CALL eosio_assert(( (uint_64)($16 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$16 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [13014])
	*($2 + [1128]) = $16
	$24 = (($2 + [1264]) + [48])
	$3 = *($24)
	CALL eosio_assert(((int_64)$3 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-1) | ((int_64)*($2 + [1128]) != (int_64)-9223372036854775808)), [13054])
	*($2 + [1128]) = ((int_64)*($2 + [1128]) / (int_64)$3)
	$35 = (($2 + [1264]) + [64])
	CALL $23(($2 + [1456]), $0, ($2 + [1128]), *($35), $13)
	$33 = (($2 + [1456]) + [8])
	*($8) = *($33)
	*($2 + [1128]) = *($2 + [1456])
	CALL eosio_assert(((int_64)*($2 + [1128]) > (int_64)0), [9413])
	$46 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	$3 = *($6 + [64])
	$16 = (int_64)
	if ( ((int_64)$16($3 - $46)) == (int_64)0) ){ goto $label$533 }
	$36 = *(($6 + [72]))
	CALL eosio_assert(((int_64)*($8) == (int_64)$36), [12931])
	$3 = *($2 + [1128])
	if ( ((int_64)$3 <= (int_64)$16) ){ goto $label$521 }
	$47 = ((int_64)((int_64)$16 + (int_64)999) / (int_64)1000)
	if ( ((int_64)$16 != (int_64)$47) ){ goto $label$532 }
	CALL prints([8950])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($6 + [16])
	$16 = *($7)
	*($28) = $16
	$14 = ($6 + [26])
	$3 = *($14)
	*($18) = $3
	*($19) = $16
	$33 = ($6 + [24])
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*($33) << (int_64)8))
	$24 = ($6 + [80])
	$16 = *($24)
	*($20) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$35 = ($6 + [44])
	*($2 + [1592]) = *($35)
	$3 = *($6 + [8])
	CALL $24($0, $6, [3], *($21))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*((($2 + [1112]) + [8])) = $34
	*($2 + [1116]) = ($2 + [1456])
	*($2 + [1112]) = ($2 + [1456])
	CALL $25(($2 + [1112]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$534 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$534
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$535 }
	$39 = ($6 + [120])
	$29 = *($39)
	if ( ((int_32)$29 > (int_32)[-1]) ){ goto $label$536 }
	$29 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($39) = $29
	
.LABEL $label$536
	CALL db_idx64_update($29, (int_64)0, ($2 + [1664]))
	
.LABEL $label$535
	*($2 + [1664]) = *($35)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$537 }
	$29 = ($6 + [124])
	$35 = *($29)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$538 }
	$35 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($29) = $35
	
.LABEL $label$538
	CALL db_idx64_update($35, (int_64)0, ($2 + [1664]))
	
.LABEL $label$537
	$16 = *($24)
	$1 = *($14)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($33) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$539 }
	$24 = ($6 + [128])
	$33 = *($24)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$540 }
	$33 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($24) = $33
	
.LABEL $label$540
	CALL db_idx128_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$539
	*($2 + [1664]) = *($7)
	if ( (CALL $204($19, ($2 + [1664]), [8]) == 0) ){ goto $label$541 }
	$24 = ($6 + [132])
	$33 = *($24)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$542 }
	$33 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($24) = $33
	
.LABEL $label$542
	CALL db_idx64_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$541
	*($2 + [1672]) = *($7)
	*($2 + [1664]) = *($14)
	if ( (CALL $204($18, ($2 + [1664]), [16]) == 0) ){ goto $label$531 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$543 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$543
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	goto $label$531 
	
.LABEL $label$533
	CALL prints([8950])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($6 + [16])
	$16 = *($7)
	*($28) = $16
	$14 = ($6 + [26])
	$3 = *($14)
	*($18) = $3
	*($19) = $16
	$33 = ($6 + [24])
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*($33) << (int_64)8))
	$24 = ($6 + [80])
	$16 = *($24)
	*($20) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$35 = ($6 + [44])
	*($2 + [1592]) = *($35)
	$3 = *($6 + [8])
	CALL $24($0, $6, [3], *($21))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*((($2 + [1112]) + [8])) = $34
	*($2 + [1116]) = ($2 + [1456])
	*($2 + [1112]) = ($2 + [1456])
	CALL $25(($2 + [1112]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$544 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$544
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$545 }
	$39 = ($6 + [120])
	$29 = *($39)
	if ( ((int_32)$29 > (int_32)[-1]) ){ goto $label$546 }
	$29 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($39) = $29
	
.LABEL $label$546
	CALL db_idx64_update($29, (int_64)0, ($2 + [1664]))
	
.LABEL $label$545
	*($2 + [1664]) = *($35)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$547 }
	$29 = ($6 + [124])
	$35 = *($29)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$548 }
	$35 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($29) = $35
	
.LABEL $label$548
	CALL db_idx64_update($35, (int_64)0, ($2 + [1664]))
	
.LABEL $label$547
	$16 = *($24)
	$1 = *($14)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($33) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$549 }
	$24 = ($6 + [128])
	$33 = *($24)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$550 }
	$33 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($24) = $33
	
.LABEL $label$550
	CALL db_idx128_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$549
	*($2 + [1664]) = *($7)
	if ( (CALL $204($19, ($2 + [1664]), [8]) == 0) ){ goto $label$551 }
	$24 = ($6 + [132])
	$33 = *($24)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$552 }
	$33 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($24) = $33
	
.LABEL $label$552
	CALL db_idx64_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$551
	*($2 + [1672]) = *($7)
	*($2 + [1664]) = *($14)
	if ( (CALL $204($18, ($2 + [1664]), [16]) == 0) ){ goto $label$531 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$553 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$553
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	goto $label$531 
	
.LABEL $label$532
	$3 = *($35)
	CALL __multi3(($2 + [104]), $3, (int_64)$3 >> (int_64)63), $16, (int_64)$16 >> (int_64)63))
	*(($29 = (($2 + [1112]) + [8]))) = *($7)
	*($2 + [1112]) = *($12)
	$1 = *((($2 + [104]) + [8]))
	$3 = *($2 + [104])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [13014])
	$1 = *($24)
	CALL __multi3(($2 + [88]), $3, (int_64)$3 >> (int_64)63), $1, (int_64)$1 >> (int_64)63))
	$3 = *((($2 + [88]) + [8]))
	$37 = *($2 + [88])
	CALL eosio_assert(( (uint_64)($37 <= (int_64)4611686018427387904) ? ((int_64)$3 < (int_64)0) : (int_64)($3 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$37 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$3 > (int_64)-1) : ((int_64)$3 == (int_64)-1) ), [13014])
	CALL eosio_assert(((int_64)$37 > (int_64)0), [9450])
	$15 = *($2 + [1112])
	CALL eosio_assert(((int_64)$15 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$37 != (int_64)-9223372036854775808) | ((int_64)$15 != (int_64)-1)), [13054])
	$38 = ((int_64)$37 / (int_64)$15)
	CALL eosio_assert(((int_64)$38 > (int_64)0), [9466])
	$3 = *(($9 + [56]))
	*(($39 = (($2 + [1096]) + [8]))) = $3
	*($2 + [1096]) = $38
	CALL eosio_assert((uint_64)(((int_64)$38 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$556:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$555 }
	$1 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$557 }
	$3 = $1
	$7 = [1]
	$14 = $8
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$556 }
	goto $label$554 
	
.LABEL $label$557
	$3 = $1
	
.LOOP $label$558:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$555 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$14 = ($8 + [1])
	$8 = $14
	if ( $7 ){ goto $label$558 }
	$7 = [1]
	$8 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$556 }
	goto $label$554 
	
.LABEL $label$555
	$7 = [0]
	
.LABEL $label$554
	CALL __multi3(($2 + [72]), $38, (int_64)$38 >> (int_64)63), $15, (int_64)$15 >> (int_64)63))
	CALL eosio_assert($7, [12911])
	$48 = *($29)
	$1 = *((($2 + [72]) + [8]))
	$3 = *($2 + [72])
	CALL eosio_assert(( (uint_64)($3 <= (int_64)4611686018427387904) ? ((int_64)$1 < (int_64)0) : (int_64)($1 == 0) ), [12990])
	CALL eosio_assert(( ((uint_64)$3 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$1 > (int_64)-1) : ((int_64)$1 == (int_64)-1) ), [13014])
	*(($8 = (($2 + [1048]) + [8]))) = $48
	$1 = *($24)
	CALL eosio_assert(((int_64)$1 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-9223372036854775808) | ((int_64)$1 != (int_64)-1)), [13054])
	*($2 + [1048]) = ((int_64)$3 / (int_64)$1)
	CALL $23(($2 + [1456]), $0, ($2 + [1048]), *($35), $13)
	*($8) = *($33)
	*($2 + [1048]) = *($2 + [1456])
	CALL eosio_assert(((int_64)*($2 + [1048]) > (int_64)0), [9492])
	if ( ((int_64))($37 - ((int_64)$38 * (int_64)$15)) == (int_64)0) ){ goto $label$561 }
	$47 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	$3 = *($2 + [1048])
	if ( ((int_64)$3 != (int_64)$47) ){ goto $label$560 }
	CALL prints([8950])
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($6 + [16])
	$16 = *($7)
	*($28) = $16
	$14 = ($6 + [26])
	$3 = *($14)
	*($18) = $3
	*($19) = $16
	$33 = ($6 + [24])
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*($33) << (int_64)8))
	$24 = ($6 + [80])
	$16 = *($24)
	*($20) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$35 = ($6 + [44])
	*($2 + [1592]) = *($35)
	$3 = *($6 + [8])
	CALL $24($0, $6, [3], *($21))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*((($2 + [1568]) + [8])) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($8 + [16])) ){ goto $label$562 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$562
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$563 }
	$39 = ($6 + [120])
	$29 = *($39)
	if ( ((int_32)$29 > (int_32)[-1]) ){ goto $label$564 }
	$29 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($39) = $29
	
.LABEL $label$564
	CALL db_idx64_update($29, (int_64)0, ($2 + [1664]))
	
.LABEL $label$563
	*($2 + [1664]) = *($35)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$565 }
	$29 = ($6 + [124])
	$35 = *($29)
	if ( ((int_32)$35 > (int_32)[-1]) ){ goto $label$566 }
	$35 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($29) = $35
	
.LABEL $label$566
	CALL db_idx64_update($35, (int_64)0, ($2 + [1664]))
	
.LABEL $label$565
	$16 = *($24)
	$1 = *($14)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($33) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$567 }
	$24 = ($6 + [128])
	$33 = *($24)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$568 }
	$33 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($24) = $33
	
.LABEL $label$568
	CALL db_idx128_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$567
	*($2 + [1664]) = *($7)
	if ( (CALL $204($19, ($2 + [1664]), [8]) == 0) ){ goto $label$569 }
	$24 = ($6 + [132])
	$33 = *($24)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$570 }
	$33 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($24) = $33
	
.LABEL $label$570
	CALL db_idx64_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$569
	*($2 + [1672]) = *($7)
	*($2 + [1664]) = *($14)
	if ( (CALL $204($18, ($2 + [1664]), [16]) == 0) ){ goto $label$531 }
	$6 = ($6 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$571 }
	$7 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$571
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	goto $label$531 
	
.LABEL $label$561
	CALL eosio_assert(((int_64)*($8) == (int_64)$36), [12931])
	CALL eosio_assert(((int_64)*($2 + [1048]) == (int_64)$16), [9518])
	goto $label$559 
	
.LABEL $label$560
	$36 = *($8)
	$46 = $47
	
.LABEL $label$559
	*($33) = $36
	CALL eosio_assert([1], [13105])
	$3 = ((int_64)$46 + (int_64)$47)
	*($2 + [1456]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13167])
	CALL $26($0, ($2 + [1264]), ($2 + [1456]), *($9), *($6), $15, $38)
	$14 = ($9 + [16])
	$16 = *($14)
	$1 = *($0)
	$15 = *($21)
	$3 = *($8)
	*($33) = $3
	*($2 + [1456]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$36 == (int_64)$3), [13185])
	$3 = (int_64)
	*($2 + [1456]) = $3(*($2 + [1456]) - $47))
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13255])
	*(($24 = (($2 + [1032]) + [8]))) = [0]
	*($2 + [1032]) = (int_64)0
	$7 = CALL $205([9545])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$33 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$574 }
	*($2 + [1032]) = ($7 << [1])
	$33 = $51
	if ( $7 ){ goto $label$573 }
	goto $label$572 
	
.LABEL $label$574
	$35 = (($7 + [16]) & [-16])
	$33 = CALL _Znwj($35)
	*($24) = $33
	*($2 + [1032]) = ($35 | [1])
	*($2 + [1036]) = $7
	
.LABEL $label$573
	CALL memcpy($33, [9545], $7)
	
.LABEL $label$572
	*(($33 + $7)) = [0]
	CALL $27($0, $15, $1, $16, ($2 + [1456]), ($2 + [1032]))
	if ( ((*($2 + [1032]) & [1]) == 0) ){ goto $label$575 }
	CALL _ZdlPv(*($24))
	
.LABEL $label$575
	*(($24 = (($2 + [1016]) + [8]))) = [0]
	*($2 + [1016]) = (int_64)0
	$3 = *($6 + [16])
	$16 = *($0)
	$42 = (($2 + [1264]) + [24])
	$1 = *($42)
	$7 = CALL $205([9552])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$32 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$578 }
	*($2 + [1016]) = ($7 << [1])
	$33 = $50
	if ( $7 ){ goto $label$577 }
	goto $label$576 
	
.LABEL $label$578
	$35 = (($7 + [16]) & [-16])
	$33 = CALL _Znwj($35)
	*($24) = $33
	*($2 + [1016]) = ($35 | [1])
	*($2 + [1020]) = $7
	
.LABEL $label$577
	CALL memcpy($33, [9552], $7)
	
.LABEL $label$576
	*(($33 + $7)) = [0]
	CALL $27($0, $1, $16, $3, ($2 + [1096]), ($2 + [1016]))
	if ( ((*($2 + [1016]) & [1]) == 0) ){ goto $label$579 }
	CALL _ZdlPv(*($24))
	
.LABEL $label$579
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$7 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$7), [13421])
	CALL eosio_assert(((int_64)*($7) == (int_64)CALL $fimport$2()), [13467])
	$24 = ($6 + [16])
	$16 = *($24)
	*($28) = $16
	$35 = ($6 + [26])
	$3 = *($35)
	*($18) = $3
	*($19) = $16
	$44 = ($6 + [24])
	*(($43 = (($2 + [1584]) + [24]))) = ((int_64)$3 | (int_64)((int_64)*($44) << (int_64)8))
	$17 = ($6 + [80])
	$16 = *($17)
	*($20) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($6)
	$30 = ($6 + [44])
	*($2 + [1592]) = *($30)
	$3 = *($6 + [8])
	$16 = *($8)
	*(($33 = (($2 + [1664]) + [8]))) = $16
	*($2 + [1664]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$36 == (int_64)$16), [13105])
	$16 = ((int_64)*($2 + [1664]) + (int_64)$46)
	*($2 + [1664]) = $16
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [13167])
	*((($2 + [56]) + [8])) = *($33)
	$16 = *($39)
	*((($2 + [40]) + [8])) = $16
	*(($41 = (($2 + [1648]) + [8]))) = $16
	*($2 + [56]) = *($2 + [1664])
	$16 = *($2 + [1096])
	*($2 + [40]) = $16
	*($2 + [1648]) = $16
	CALL $28($0, $6, ($2 + [56]), ($2 + [40]), *($21))
	CALL eosio_assert(((int_64)$3 == (int_64)*($6 + [8])), [13518])
	*(($31 = (($2 + [1568]) + [8]))) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($3 <= *($7 + [16])) ){ goto $label$580 }
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$580
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$581 }
	$52 = ($6 + [120])
	$49 = *($52)
	if ( ((int_32)$49 > (int_32)[-1]) ){ goto $label$582 }
	$49 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($52) = $49
	
.LABEL $label$582
	CALL db_idx64_update($49, (int_64)0, ($2 + [1664]))
	
.LABEL $label$581
	*($2 + [1664]) = *($30)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$583 }
	$49 = ($6 + [124])
	$30 = *($49)
	if ( ((int_32)$30 > (int_32)[-1]) ){ goto $label$584 }
	$30 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($49) = $30
	
.LABEL $label$584
	CALL db_idx64_update($30, (int_64)0, ($2 + [1664]))
	
.LABEL $label$583
	$16 = *($17)
	$1 = *($35)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($44) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$585 }
	$17 = ($6 + [128])
	$44 = *($17)
	if ( ((int_32)$44 > (int_32)[-1]) ){ goto $label$586 }
	$44 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($17) = $44
	
.LABEL $label$586
	CALL db_idx128_update($44, (int_64)0, ($2 + [1664]))
	
.LABEL $label$585
	*($2 + [1664]) = *($24)
	if ( (CALL $204($19, ($2 + [1664]), [8]) == 0) ){ goto $label$587 }
	$17 = ($6 + [132])
	$44 = *($17)
	if ( ((int_32)$44 > (int_32)[-1]) ){ goto $label$588 }
	$44 = CALL db_idx64_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($17) = $44
	
.LABEL $label$588
	CALL db_idx64_update($44, (int_64)0, ($2 + [1664]))
	
.LABEL $label$587
	*($2 + [1672]) = *($24)
	*($2 + [1664]) = *($35)
	if ( (CALL $204($18, ($2 + [1664]), [16]) == 0) ){ goto $label$589 }
	$24 = ($6 + [136])
	$6 = *($24)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$590 }
	$6 = CALL db_idx128_find_primary(*($7), *($7 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($24) = $6
	
.LABEL $label$590
	CALL db_idx128_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$589
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*($22) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*($40) == (int_64)CALL $fimport$2()), [13467])
	$16 = *($14)
	*($28) = $16
	$7 = ($9 + [26])
	$3 = *($7)
	*($18) = $3
	*($19) = $16
	*($43) = ((int_64)$3 | (int_64)((int_64)*($32) << (int_64)8))
	$6 = ($9 + [80])
	$16 = *($6)
	*($20) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	*($2 + [1584]) = *($9)
	$24 = ($9 + [44])
	*($2 + [1592]) = *($24)
	$35 = ($9 + [8])
	$3 = *($35)
	*($33) = *($39)
	$16 = *($8)
	*($41) = $16
	*($2 + [1664]) = *($2 + [1096])
	*($2 + [1648]) = *($2 + [1048])
	CALL eosio_assert(((int_64)$36 == (int_64)$16), [13185])
	$16 = (int_64)
	*($2 + [1648]) = $16(*($2 + [1648]) - $47))
	CALL eosio_assert(((int_64)$16 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$16 < (int_64)4611686018427387904), [13255])
	*((($2 + [24]) + [8])) = *($33)
	*((($2 + [8]) + [8])) = *($41)
	*($2 + [24]) = *($2 + [1664])
	*($2 + [8]) = *($2 + [1648])
	CALL $28($0, $9, ($2 + [24]), ($2 + [8]), *($42))
	CALL eosio_assert(((int_64)$3 == (int_64)*($35)), [13518])
	*($31) = $34
	*($2 + [1572]) = ($2 + [1456])
	*($2 + [1568]) = ($2 + [1456])
	CALL $25(($2 + [1568]), $9)
	CALL db_update_i64(*($23), (int_64)0, ($2 + [1456]), [108])
	$33 = ($0 + [120])
	if ( (uint_64)($3 <= *($33)) ){ goto $label$591 }
	*($33) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$591
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$592 }
	$35 = ($9 + [120])
	$33 = *($35)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$593 }
	$33 = CALL db_idx64_find_primary(*($40), *(($0 + [112])), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($35) = $33
	
.LABEL $label$593
	CALL db_idx64_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$592
	*($2 + [1664]) = *($24)
	if ( (CALL $204($45, ($2 + [1664]), [8]) == 0) ){ goto $label$594 }
	$24 = ($9 + [124])
	$33 = *($24)
	if ( ((int_32)$33 > (int_32)[-1]) ){ goto $label$595 }
	$33 = CALL db_idx64_find_primary(*($40), *(($0 + [112])), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($24) = $33
	
.LABEL $label$595
	CALL db_idx64_update($33, (int_64)0, ($2 + [1664]))
	
.LABEL $label$594
	$16 = *($6)
	$1 = *($7)
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*($32) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($20, ($2 + [1664]), [16]) == 0) ){ goto $label$596 }
	$33 = ($9 + [128])
	$6 = *($33)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$597 }
	$6 = CALL db_idx128_find_primary(*($40), *(($0 + [112])), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($33) = $6
	
.LABEL $label$597
	CALL db_idx128_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$596
	*($2 + [1664]) = *($14)
	if ( (CALL $204($19, ($2 + [1664]), [8]) == 0) ){ goto $label$598 }
	$33 = ($9 + [132])
	$6 = *($33)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$599 }
	$6 = CALL db_idx64_find_primary(*($40), *(($0 + [112])), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($33) = $6
	
.LABEL $label$599
	CALL db_idx64_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$598
	*($2 + [1672]) = *($14)
	*($2 + [1664]) = *($7)
	if ( (CALL $204($18, ($2 + [1664]), [16]) == 0) ){ goto $label$600 }
	$6 = ($9 + [136])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$601 }
	$7 = CALL db_idx128_find_primary(*($40), *(($0 + [112])), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$601
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$600
	*(($7 = (($2 + [1240]) + [8]))) = *($29)
	$3 = *($2 + [1240])
	*($2 + [1240]) = *($2 + [1112])
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$603 }
	$7 = (($2 + [1224]) + [8])
	$3 = *($29)
	CALL eosio_assert(((int_64)$3 == (int_64)*($7)), [12931])
	$16 = *($2 + [1112])
	$6 = ( ($2 + [1112]) ? ($2 + [1224]) : ((int_64)$16 < (int_64)*($2 + [1224])) )
	*($7) = *(($6 + [8]))
	*($2 + [1224]) = *($6)
	$7 = (($2 + [1208]) + [8])
	CALL eosio_assert(((int_64)$3 == (int_64)*($7)), [12931])
	$6 = ( ($2 + [1112]) ? ($2 + [1208]) : ((int_64)$16 > (int_64)*($2 + [1208])) )
	*($7) = *(($6 + [8]))
	*($2 + [1208]) = *($6)
	goto $label$602 
	
.LABEL $label$603
	$3 = *($7)
	*((($2 + [1208]) + [8])) = $3
	*((($2 + [1224]) + [8])) = $3
	$3 = *($2 + [1240])
	*($2 + [1224]) = $3
	*($2 + [1208]) = $3
	
.LABEL $label$602
	CALL eosio_assert(((int_64)*($39) == (int_64)*((($2 + [1192]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1192]) + (int_64)*($2 + [1096]))
	*($2 + [1192]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1192]) < (int_64)4611686018427387904), [13167])
	$3 = *($2 + [1048])
	$16 = *($8)
	CALL eosio_assert(((int_64)$36 == (int_64)$16), [13105])
	$3 = ((int_64)$3 + (int_64)$46)
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)$3 < (int_64)4611686018427387904), [13167])
	CALL eosio_assert(((int_64)$16 == (int_64)*((($2 + [1176]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1176]) + (int_64)$3)
	*($2 + [1176]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1176]) < (int_64)4611686018427387904), [13167])
	
.LABEL $label$531
	$5 = ((int_64)$5 + (int_64)1)
	$6 = *($2 + [1148])
	if ( ((int_32)$6 != (int_32)*($2 + [1156])) ){ goto $label$522 }
	goto $label$36 
	
.LABEL $label$530
	CALL prints([9292])
	CALL printui(*($9))
	CALL prints([9299])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [0], *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1136]) = $34
	*($2 + [1132]) = ($2 + [1456])
	*($2 + [1128]) = ($2 + [1456])
	CALL $25(($2 + [1128]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$604 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$604
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$605 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$606 }
	$7 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$606
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$605
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$607 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$608 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$608
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$607
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$609 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$610 }
	$7 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$610
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$609
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$611 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$612 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$612
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$611
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$613 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$614 }
	$8 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$614
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$613
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$521
	$10 = ((int_64)((int_64)$3 + (int_64)999) / (int_64)1000)
	if ( ((int_64)$3 != (int_64)$10) ){ goto $label$616 }
	CALL prints([8950])
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$16 = *(($9 + [16]))
	*(($2 + [1640])) = $16
	$3 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$3 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $3
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $16
	$16 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$3 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$3 = *($8)
	CALL $24($0, $9, [3], *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$3 == (int_64)*($8)), [13518])
	*($2 + [1120]) = $34
	*($2 + [1116]) = ($2 + [1456])
	*($2 + [1112]) = ($2 + [1456])
	CALL $25(($2 + [1112]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($3 <= *($8)) ){ goto $label$617 }
	*($8) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$617
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$618 }
	$6 = ($9 + [120])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$619 }
	$7 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180416, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$619
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$618
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$620 }
	$6 = ($9 + [124])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$621 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180415, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$621
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$620
	$8 = ($2 + [1616])
	$16 = *(($9 + [80]))
	$1 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $16) ? $16 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$622 }
	$6 = ($9 + [128])
	$7 = *($6)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$623 }
	$7 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180414, ($2 + [1648]), $3)
	*($6) = $7
	
.LABEL $label$623
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$622
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$624 }
	$6 = ($9 + [132])
	$8 = *($6)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$625 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180413, ($2 + [1648]), $3)
	*($6) = $8
	
.LABEL $label$625
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$624
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$615 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$626 }
	$8 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180412, ($2 + [1648]), $3)
	*($7) = $8
	
.LABEL $label$626
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	goto $label$615 
	
.LABEL $label$616
	$16 = *((($2 + [1128]) + [8]))
	*((($2 + [1112]) + [8])) = *(($25 + [8]))
	*($2 + [1112]) = *($25)
	*((($2 + [1096]) + [8])) = *(($12 + [8]))
	*($2 + [1096]) = *($12)
	*($2 + [1464]) = $16
	CALL eosio_assert([1], [13105])
	*($2 + [1456]) = ((int_64)$10 << (int_64)1)
	CALL eosio_assert([1], [13148])
	CALL eosio_assert([1], [13167])
	CALL $26($0, ($2 + [1264]), ($2 + [1456]), *($9), *($6), *($2 + [1096]), *($2 + [1112]))
	$1 = *(($9 + [16]))
	$38 = *($0)
	$36 = *(($2 + [1304]))
	*($2 + [1464]) = $16
	CALL eosio_assert([1], [13185])
	$15 = (int_64)
	*($2 + [1456]) = $15($3 - $10))
	$14 = ((int_64)$15 > (int_64)-4611686018427387904)
	CALL eosio_assert($14, [13233])
	$13 = ((int_64)$15 < (int_64)4611686018427387904)
	CALL eosio_assert($13, [13255])
	*((($2 + [1080]) + [8])) = [0]
	*($2 + [1080]) = (int_64)0
	$8 = CALL $205([9436])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$31 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$629 }
	*($2 + [1080]) = ($8 << [1])
	$7 = (($2 + [1080]) | [1])
	if ( $8 ){ goto $label$628 }
	goto $label$627 
	
.LABEL $label$629
	$12 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($12)
	*($2 + [1080]) = ($12 | [1])
	*($2 + [1088]) = $7
	*($2 + [1084]) = $8
	
.LABEL $label$628
	CALL memcpy($7, [9436], $8)
	
.LABEL $label$627
	*(($7 + $8)) = [0]
	CALL $27($0, $36, $38, $1, ($2 + [1456]), ($2 + [1080]))
	if ( ((*($2 + [1080]) & [1]) == 0) ){ goto $label$630 }
	CALL _ZdlPv(*($2 + [1088]))
	
.LABEL $label$630
	*(($2 + [1072])) = [0]
	*($2 + [1064]) = (int_64)0
	$1 = *($6 + [16])
	$38 = *($0)
	$36 = *(($2 + [1288]))
	$8 = CALL $205([9443])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$30 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$633 }
	*($2 + [1064]) = ($8 << [1])
	$7 = (($2 + [1064]) | [1])
	if ( $8 ){ goto $label$632 }
	goto $label$631 
	
.LABEL $label$633
	$12 = (($8 + [16]) & [-16])
	$7 = CALL _Znwj($12)
	*($2 + [1064]) = ($12 | [1])
	*($2 + [1072]) = $7
	*($2 + [1068]) = $8
	
.LABEL $label$632
	CALL memcpy($7, [9443], $8)
	
.LABEL $label$631
	*(($7 + $8)) = [0]
	CALL $27($0, $36, $38, $1, ($2 + [1112]), ($2 + [1064]))
	if ( ((*($2 + [1064]) & [1]) == 0) ){ goto $label$634 }
	CALL _ZdlPv(*($2 + [1072]))
	
.LABEL $label$634
	CALL eosio_assert($11, [13386])
	CALL eosio_assert(((int_32)*(($9 + [112])) == (int_32)$4), [13421])
	CALL eosio_assert(((int_64)*(($0 + [104])) == (int_64)CALL $fimport$2()), [13467])
	$38 = *(($9 + [16]))
	*(($2 + [1640])) = $38
	$1 = *(($9 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$1 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1632]) = $1
	*($2 + [1584]) = *($9)
	*($2 + [1592]) = *(($9 + [44]))
	*($2 + [1616]) = $38
	$38 = *(($9 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $38) ? $38 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	$8 = ($9 + [8])
	$1 = *($8)
	*(($7 = (($2 + [1664]) + [8]))) = *((($2 + [1112]) + [8]))
	*($2 + [1656]) = $16
	*($2 + [1664]) = *($2 + [1112])
	CALL eosio_assert([1], [13185])
	*($2 + [1648]) = $15
	CALL eosio_assert($14, [13233])
	CALL eosio_assert($13, [13255])
	*((($2 + [168]) + [8])) = *($7)
	*((($2 + [152]) + [8])) = *($2 + [1656])
	*($2 + [168]) = *($2 + [1664])
	*($2 + [152]) = *($2 + [1648])
	CALL $28($0, $9, ($2 + [168]), ($2 + [152]), *((($2 + [1264]) + [24])))
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [13518])
	*($2 + [1056]) = $34
	*($2 + [1052]) = ($2 + [1456])
	*($2 + [1048]) = ($2 + [1456])
	CALL $25(($2 + [1048]), $9)
	CALL db_update_i64(*(($9 + [116])), (int_64)0, ($2 + [1456]), [108])
	$8 = ($0 + [120])
	if ( (uint_64)($1 <= *($8)) ){ goto $label$635 }
	*($8) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$635
	$8 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($9)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$636 }
	$14 = ($9 + [120])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$637 }
	$7 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180416, ($2 + [1648]), $1)
	*($14) = $7
	
.LABEL $label$637
	CALL db_idx64_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$636
	$7 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($9 + [44]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$638 }
	$14 = ($9 + [124])
	$8 = *($14)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$639 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180415, ($2 + [1648]), $1)
	*($14) = $8
	
.LABEL $label$639
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$638
	$8 = ($2 + [1616])
	$15 = *(($9 + [80]))
	$38 = *(($9 + [26]))
	*($2 + [1672]) = ((int_64)$38 | (int_64)((int_64)*(($9 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $15) ? $15 : (int_64)(((int_64)$38 ^ (int_64)4) == 0) )
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$640 }
	$14 = ($9 + [128])
	$7 = *($14)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$641 }
	$7 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180414, ($2 + [1648]), $1)
	*($14) = $7
	
.LABEL $label$641
	CALL db_idx128_update($7, (int_64)0, ($2 + [1664]))
	
.LABEL $label$640
	$7 = ($2 + [1632])
	*($2 + [1664]) = *(($9 + [16]))
	if ( (CALL $204($8, ($2 + [1664]), [8]) == 0) ){ goto $label$642 }
	$14 = ($9 + [132])
	$8 = *($14)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$643 }
	$8 = CALL db_idx64_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180413, ($2 + [1648]), $1)
	*($14) = $8
	
.LABEL $label$643
	CALL db_idx64_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$642
	*($2 + [1672]) = *(($9 + [16]))
	*($2 + [1664]) = *(($9 + [26]))
	if ( (CALL $204($7, ($2 + [1664]), [16]) == 0) ){ goto $label$644 }
	$7 = ($9 + [136])
	$8 = *($7)
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$645 }
	$8 = CALL db_idx128_find_primary(*(($0 + [104])), *(($0 + [112])), (int_64)-6497942333781180412, ($2 + [1648]), $1)
	*($7) = $8
	
.LABEL $label$645
	CALL db_idx128_update($8, (int_64)0, ($2 + [1664]))
	
.LABEL $label$644
	CALL eosio_assert(((int_32)$6 != (int_32)[0]), [13386])
	$8 = *($2 + [1256])
	CALL eosio_assert(((int_32)*($6 + [112]) == (int_32)$8), [13421])
	CALL eosio_assert(((int_64)*($8) == (int_64)CALL $fimport$2()), [13467])
	$15 = *(($6 + [16]))
	*(($2 + [1640])) = $15
	$1 = *(($6 + [26]))
	*((($2 + [1584]) + [24])) = ((int_64)$1 | (int_64)((int_64)*(($6 + [24])) << (int_64)8))
	*($2 + [1632]) = $1
	*($2 + [1584]) = *($6)
	*($2 + [1592]) = *(($6 + [44]))
	*($2 + [1616]) = $15
	$15 = *(($6 + [80]))
	*($2 + [1600]) = ( (int_64))((int_64)0 - $15) ? $15 : (int_64)(((int_64)$1 ^ (int_64)4) == 0) )
	$1 = *($6 + [8])
	*($2 + [1672]) = $16
	CALL eosio_assert([1], [13105])
	$3 = ((int_64)$3 + (int_64)$10)
	*($2 + [1664]) = $3
	$7 = ((int_64)$3 > (int_64)-4611686018427387904)
	CALL eosio_assert($7, [13148])
	$9 = ((int_64)$3 < (int_64)4611686018427387904)
	CALL eosio_assert($9, [13167])
	*((($2 + [136]) + [8])) = *($2 + [1672])
	$10 = *((($2 + [1112]) + [8]))
	*((($2 + [120]) + [8])) = $10
	*((($2 + [1648]) + [8])) = $10
	*($2 + [136]) = *($2 + [1664])
	$10 = *($2 + [1112])
	*($2 + [120]) = $10
	*($2 + [1648]) = $10
	CALL $28($0, $6, ($2 + [136]), ($2 + [120]), *(($2 + [1304])))
	CALL eosio_assert(((int_64)$1 == (int_64)*($6 + [8])), [13518])
	*($2 + [1056]) = $34
	*($2 + [1052]) = ($2 + [1456])
	*($2 + [1048]) = ($2 + [1456])
	CALL $25(($2 + [1048]), $6)
	CALL db_update_i64(*($6 + [116]), (int_64)0, ($2 + [1456]), [108])
	if ( (uint_64)($1 <= *($8 + [16])) ){ goto $label$646 }
	*(($8 + [16])) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$646
	$14 = (($2 + [1584]) | [8])
	*($2 + [1664]) = *($6)
	if ( (CALL $204(($2 + [1584]), ($2 + [1664]), [8]) == 0) ){ goto $label$647 }
	$13 = ($6 + [120])
	$4 = *($13)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$648 }
	$4 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180416, ($2 + [1648]), $1)
	*($13) = $4
	
.LABEL $label$648
	CALL db_idx64_update($4, (int_64)0, ($2 + [1664]))
	
.LABEL $label$647
	$4 = (($2 + [1584]) + [16])
	*($2 + [1664]) = *(($6 + [44]))
	if ( (CALL $204($14, ($2 + [1664]), [8]) == 0) ){ goto $label$649 }
	$13 = ($6 + [124])
	$14 = *($13)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$650 }
	$14 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180415, ($2 + [1648]), $1)
	*($13) = $14
	
.LABEL $label$650
	CALL db_idx64_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$649
	$14 = ($2 + [1616])
	$10 = *(($6 + [80]))
	$15 = *(($6 + [26]))
	*($2 + [1672]) = ((int_64)$15 | (int_64)((int_64)*(($6 + [24])) << (int_64)8))
	*($2 + [1664]) = ( (int_64))((int_64)0 - $10) ? $10 : (int_64)(((int_64)$15 ^ (int_64)4) == 0) )
	if ( (CALL $204($4, ($2 + [1664]), [16]) == 0) ){ goto $label$651 }
	$13 = ($6 + [128])
	$4 = *($13)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$652 }
	$4 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180414, ($2 + [1648]), $1)
	*($13) = $4
	
.LABEL $label$652
	CALL db_idx128_update($4, (int_64)0, ($2 + [1664]))
	
.LABEL $label$651
	$4 = ($2 + [1632])
	*($2 + [1664]) = *(($6 + [16]))
	if ( (CALL $204($14, ($2 + [1664]), [8]) == 0) ){ goto $label$653 }
	$13 = ($6 + [132])
	$14 = *($13)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$654 }
	$14 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180413, ($2 + [1648]), $1)
	*($13) = $14
	
.LABEL $label$654
	CALL db_idx64_update($14, (int_64)0, ($2 + [1664]))
	
.LABEL $label$653
	*($2 + [1672]) = *(($6 + [16]))
	*($2 + [1664]) = *(($6 + [26]))
	if ( (CALL $204($4, ($2 + [1664]), [16]) == 0) ){ goto $label$655 }
	$14 = ($6 + [136])
	$6 = *($14)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$656 }
	$6 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-6497942333781180412, ($2 + [1648]), $1)
	*($14) = $6
	
.LABEL $label$656
	CALL db_idx128_update($6, (int_64)0, ($2 + [1664]))
	
.LABEL $label$655
	*(($8 = (($2 + [1240]) + [8]))) = *((($2 + [1096]) + [8]))
	$1 = *($2 + [1240])
	*($2 + [1240]) = *($2 + [1096])
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$658 }
	$8 = (($2 + [1224]) + [8])
	$1 = *($2 + [1104])
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [12931])
	$10 = *($2 + [1096])
	$6 = ( ($2 + [1096]) ? ($2 + [1224]) : ((int_64)$10 < (int_64)*($2 + [1224])) )
	*($8) = *(($6 + [8]))
	*($2 + [1224]) = *($6)
	$8 = (($2 + [1208]) + [8])
	CALL eosio_assert(((int_64)$1 == (int_64)*($8)), [12931])
	$6 = ( ($2 + [1096]) ? ($2 + [1208]) : ((int_64)$10 > (int_64)*($2 + [1208])) )
	*($8) = *(($6 + [8]))
	*($2 + [1208]) = *($6)
	goto $label$657 
	
.LABEL $label$658
	$1 = *($8)
	*((($2 + [1208]) + [8])) = $1
	*((($2 + [1224]) + [8])) = $1
	$1 = *($2 + [1240])
	*($2 + [1224]) = $1
	*($2 + [1208]) = $1
	
.LABEL $label$657
	CALL eosio_assert(((int_64)*($2 + [1120]) == (int_64)*((($2 + [1192]) + [8]))), [13105])
	$1 = ((int_64)*($2 + [1192]) + (int_64)*($2 + [1112]))
	*($2 + [1192]) = $1
	CALL eosio_assert(((int_64)$1 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1192]) < (int_64)4611686018427387904), [13167])
	CALL eosio_assert([1], [13105])
	CALL eosio_assert($7, [13148])
	CALL eosio_assert($9, [13167])
	CALL eosio_assert(((int_64)$16 == (int_64)*((($2 + [1176]) + [8]))), [13105])
	$3 = ((int_64)*($2 + [1176]) + (int_64)$3)
	*($2 + [1176]) = $3
	CALL eosio_assert(((int_64)$3 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($2 + [1176]) < (int_64)4611686018427387904), [13167])
	
.LABEL $label$615
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)*($2 + [1240]) >= (int_64)1) ){ goto $label$35 }
	goto $label$34 
	
.LABEL $label$36
	if ( ((int_64)*($2 + [1240]) < (int_64)1) ){ goto $label$34 }
	
.LABEL $label$35
	CALL $29($0, *($2 + [1264]), ($2 + [1240]), ($2 + [1224]), ($2 + [1208]), ($2 + [1192]), ($2 + [1176]))
	
.LABEL $label$34
	$global$0 = ($2 + [1680])
	return $5
	
.LABEL $label$33
	CALL $168(($2 + [1032]))
	
.LABEL $label$32
	CALL $168(($2 + [1016]))
	
.LABEL $label$31
	CALL $168(($2 + [1080]))
	
.LABEL $label$30
	CALL $168(($2 + [1064]))
	$8
	$8
	$8
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $10 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = *($0)
	$3 = ($2 & [1])
	$1 = ($0 + [1])
	$4 = ( *($0 + [8]) ? $1 : $3 )
	$5 = ( *($0 + [4]) ? uint_32($2 >> [1]) : $3 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = ($4 + $5)
	$2 = $4
	
.LOOP $label$4:
	if ( (CALL $180(*($2)) == 0) ){ goto $label$3 }
	$2 = ($2 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$4 }
	$2 = $3
	
.LABEL $label$3
	$3 = (*($0) & [1])
	goto $label$1 
	
.LABEL $label$2
	$2 = $4
	
.LABEL $label$1
	CALL $175($0, ($4 - ( *($0 + [8]) ? $1 : $3 )), ($2 - $4))
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$10 }
	$6 = $1
	$2 = (($0 + uint_32($2 >> [1])) + [1])
	if ( ((int_32)$2 != (int_32)$6) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$6 = *(($0 + [8]))
	$2 = ($6 + *($0 + [4]))
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LABEL $label$9
	if ( (CALL $180(*(($2 + [-1]))) == 0) ){ goto $label$8 }
	$4 = ($6 + [1])
	
.LOOP $label$11:
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$7 }
	$5 = ($2 + [-2])
	$3 = ($2 + [-1])
	$2 = $3
	if ( CALL $180(*($5)) ){ goto $label$11 }
	$2 = $3
	
.LABEL $label$8
	$5 = [1]
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$2 = $6
	$5 = [1]
	$4 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$5 = *(($0 + [8]))
	CALL $175($0, ($2 - $5), (($5 + *($0 + [4])) - $2))
	return 
	
.LABEL $label$5
	CALL $175($0, ($2 - $1), ((($0 + uint_32($4 >> $5)) + $5) - $2))
}

int_64 .FUNC $11 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$0 = (( *($0 + [8]) ? ($0 + [1]) : (*($0) & [1]) ) + [-1])
	
.LOOP $label$1:
	$0 = ($0 + [1])
	if ( CALL $180(*($0)) ){ goto $label$1 }
	$1 = *($0)
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$8 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$6 }
	$2 = [1]
	goto $label$7 
	
.LABEL $label$8
	$2 = [0]
	
.LABEL $label$7
	$0 = ($0 + [1])
	if ( (CALL $179(*($0)) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$2 = [0]
	if ( CALL $179($1) ){ goto $label$4 }
	
.LABEL $label$5
	$3 = (int_64)0
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = (int_64)0
	
.LOOP $label$9:
	$1 = $0
	if ( ((int_64)$3 < (int_64)1) ){ goto $label$11 }
	if ( ((int_64)((uint_64)(int_64)9223372036854775807 / (uint_64)$3) > (int_64)9) ){ goto $label$10 }
	CALL eosio_assert([0], [13677])
	goto $label$10 
	
.LABEL $label$11
	if ( ((int_64)$3 > (int_64)-922337203685477581) ){ goto $label$10 }
	CALL eosio_assert([0], [13696])
	
.LABEL $label$10
	$3 = ((int_64)$3 * (int_64)10)
	$0 = *($1)
	$4 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56
	$5 = ((int_64)$4) + (int_64)-48)
	if ( ((int_32)$0 < (int_32)[49]) ){ goto $label$14 }
	if ( ((int_64)$3 <= (int_64))((int_64)-9223372036854775761 - $4)) ){ goto $label$13 }
	CALL eosio_assert([0], [13677])
	goto $label$13 
	
.LABEL $label$14
	$6 = (int_64)0
	if ( ((int_32)$0 == (int_32)[48]) ){ goto $label$12 }
	if ( ((int_64)$3 >= (int_64))((int_64)-9223372036854775760 - $4)) ){ goto $label$13 }
	CALL eosio_assert([0], [13696])
	
.LABEL $label$13
	$6 = $5
	
.LABEL $label$12
	$0 = ($1 + [1])
	$3 = ((int_64)$6 + (int_64)$3)
	if ( CALL $179(*(($1 + [1]))) ){ goto $label$9 }
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_64)$3 != (int_64)-9223372036854775808) ){ goto $label$15 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$15
	$3 = (int_64))((int_64)0 - $3)
	
.LABEL $label$2
	return $3
}

int_64 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = CALL $169($2, $1)
	CALL $10($3)
	$1 = [0]
	$4 = *($2)
	CALL eosio_assert(((int_32)( *($3 + [4]) ? uint_32($4 >> [1]) : ($4 & [1]) ) != (int_32)[0]), [8527])
	CALL eosio_assert(($0 <= [19]), [8561])
	$6 = (*($2) & [1])
	$5 = *($3 + [8])
	$3 = ( $5 ? ($3 + [1]) : $6 )
	
.LOOP $label$1:
	$4 = ($3 + $1)
	$7 = ($1 + [1])
	$1 = $7
	if ( *($4) ){ goto $label$1 }
	$8 = (int_64)0
	if ( ((int_32)$7 == (int_32)[1]) ){ goto $label$2 }
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($7 + [-1])) << (int_64)3)
	$10 = (int_64)0
	$8 = (int_64)0
	
.LOOP $label$3:
	$1 = *($3)
	if ( ((uint_32)(($1 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$8 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56) << (int_64)((int_64)((int_64)$10 + (int_64)8) & (int_64)4294967288)) | (int_64)$8)
	
.LABEL $label$4
	$3 = ($3 + [1])
	$10 = ((int_64)$10 + (int_64)8)
	if ( ((int_64)$9 != (int_64)$10) ){ goto $label$3 }
	
.LABEL $label$2
	$10 = ((int_64)$8 | (int_64)(CASTING uint_64)(uint_32 $0))
	if ( ($6 == 0) ){ goto $label$5 }
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$global$0 = ($2 + [16])
	return $10
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = CALL $169(($2 + [48]), $1)
	CALL $10($3)
	$1 = CALL $176($3, [32], [0])
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [8587])
	$4 = CALL $170(($2 + [32]), $3, ($1 + [1]), [-1], $3)
	CALL $10($4)
	$5 = CALL $170(($2 + [16]), $3, [0], $1, $3)
	$1 = CALL $176($5, [46], [0])
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [8644])
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$4 }
	$6 = *($2 + [16])
	$7 = CALL $12((((( *($5 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) - $1) + [-1]) & [255]), $4)
	$6 = CALL $170($2, $5, [0], $1, $5)
	$8 = CALL $11($6)
	if ( ((*($2) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($6 + [8]))
	
.LABEL $label$5
	$1 = CALL $170($2, $5, ($1 + [1]), [-1], $5)
	$9 = CALL $11($1)
	if ( ((*($2) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$6
	if ( ((int_32)*(( *($5 + [8]) ? ($5 + [1]) : (*($2 + [16]) & [1]) )) != (int_32)[45]) ){ goto $label$1 }
	if ( ((int_64)$9 < (int_64)1) ){ goto $label$3 }
	if ( ((int_64)((int_64)-9223372036854775808 / (int_64)$9) < (int_64)0) ){ goto $label$2 }
	CALL eosio_assert([0], [13696])
	goto $label$2 
	
.LABEL $label$4
	$7 = CALL $12([0], $4)
	$8 = CALL $11($5)
	$9 = (int_64)0
	goto $label$1 
	
.LABEL $label$3
	if ( (int_64)($9 == 0) ){ goto $label$2 }
	if ( ((int_64)((int_64)9223372036854775807 / (int_64)$9) < (int_64)0) ){ goto $label$2 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$2
	$9 = (int_64))((int_64)0 - $9)
	
.LABEL $label$1
	$1 = (CASTING uint_32)(uint_64 $7)
	$6 = ($1 & [255])
	CALL eosio_assert(($6 <= [19]), [8561])
	$10 = (int_64)1
	if ( ($6 == 0) ){ goto $label$7 }
	$10 = (int_64)1
	
.LOOP $label$8:
	if ( (uint_64)($10 <= (int_64)1844674407370955162) ){ goto $label$9 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$9
	$10 = ((int_64)$10 * (int_64)10)
	$1 = ($1 + [-1])
	if ( ($1 & [255]) ){ goto $label$8 }
	
.LABEL $label$7
	if ( ((int_64)$8 < (int_64)1) ){ goto $label$16 }
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$15 }
	if ( ((int_64)$8 <= (int_64)((uint_64)(int_64)9223372036854775807 / (uint_64)$10)) ){ goto $label$13 }
	CALL eosio_assert([0], [13677])
	$10 = ((int_64)$10 * (int_64)$8)
	if ( ((int_64)$9 >= (int_64)1) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	if ( ((int_64)$10 < (int_64)1) ){ goto $label$14 }
	if ( ((int_64)$8 >= (int_64)((int_64)-9223372036854775808 / (int_64)$10)) ){ goto $label$13 }
	CALL eosio_assert([0], [13696])
	$10 = ((int_64)$10 * (int_64)$8)
	if ( ((int_64)$9 < (int_64)1) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$15
	if ( ((int_64)$10 >= (int_64)((int_64)-9223372036854775808 / (int_64)$8)) ){ goto $label$13 }
	CALL eosio_assert([0], [13696])
	$10 = ((int_64)$10 * (int_64)$8)
	if ( ((int_64)$9 >= (int_64)1) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$14
	if ( (int_64)($8 == 0) ){ goto $label$13 }
	if ( ((int_64)$10 >= (int_64)((int_64)9223372036854775807 / (int_64)$8)) ){ goto $label$13 }
	CALL eosio_assert([0], [13677])
	
.LABEL $label$13
	$10 = ((int_64)$10 * (int_64)$8)
	if ( ((int_64)$9 < (int_64)1) ){ goto $label$11 }
	
.LABEL $label$12
	if ( ((int_64)$10 <= (int_64))((int_64)9223372036854775807 - $9)) ){ goto $label$10 }
	CALL eosio_assert([0], [13677])
	goto $label$10 
	
.LABEL $label$11
	if ( (int_64)($9 == 0) ){ goto $label$10 }
	if ( ((int_64)$10 >= (int_64))((int_64)-9223372036854775808 - $9)) ){ goto $label$10 }
	CALL eosio_assert([0], [13696])
	
.LABEL $label$10
	*($0 + [8]) = $7
	$10 = ((int_64)$10 + (int_64)$9)
	*($0) = $10
	CALL eosio_assert((uint_64)(((int_64)$10 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$19:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$18 }
	$9 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$10 = $9
	$0 = [1]
	$6 = $1
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$20
	$10 = $9
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$18 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$0 = ((int_32)$1 < (int_32)[6])
	$6 = ($1 + [1])
	$1 = $6
	if ( $0 ){ goto $label$21 }
	$0 = [1]
	$1 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$19 }
	goto $label$17 
	
.LABEL $label$18
	$0 = [0]
	
.LABEL $label$17
	CALL eosio_assert($0, [12911])
	if ( (*($2 + [16]) & [1]) ){ goto $label$26 }
	if ( (*($2 + [32]) & [1]) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	CALL _ZdlPv(*($5 + [8]))
	if ( ((*($2 + [32]) & [1]) == 0) ){ goto $label$24 }
	
.LABEL $label$25
	CALL _ZdlPv(*($4 + [8]))
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$24
	if ( (*($2 + [48]) & [1]) ){ goto $label$22 }
	
.LABEL $label$23
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$22
	CALL _ZdlPv(*($3 + [8]))
	$global$0 = ($2 + [64])
}

int_32 .FUNC $185 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *($0 + [28])
	CALL prints_l($3, (*($0 + [20]) - $3))
	CALL prints_l($1, $2)
	return ((*($0 + [20]) + $2) - *($0 + [28]))
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($5 >> [31]) ^ (int_32)[1]), [13333])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$4 = CALL $207($5)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $210($4)
	
.LABEL $label$6
	$5 = CALL _Znwj([144])
	$4 = CALL $57($5)
	*($5 + [112]) = $0
	CALL $145(($3 + [32]), $4)
	*($5 + [116]) = $1
	*($5 + [120 align=4]) = (int_64)-1
	*($5 + [128 align=4]) = (int_64)-1
	*($5 + [136]) = [-1]
	*($3 + [24]) = $5
	$6 = *($5 + [8])
	*($3 + [16]) = $6
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$4 = *($2)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $6
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($2) = ($4 + [24])
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $59(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $19 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$1 = $global$0
	$2 = $1
	$3 = *($0 + [8])
	$4 = (int_64)($3 == 0)
	if ( $4 ){ goto $label$2 }
	$5 = ((int_64)$3 + (int_64)1)
	$6 = (int_64)1
	
.LOOP $label$3:
	$6 = ((int_64)$6 * (int_64)10)
	$5 = ((int_64)$5 + (int_64)-1)
	if ( ((int_64)$5 > (int_64)1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = (int_64)1
	
.LABEL $label$1
	$7 = ($0 + [8])
	$8 = (CASTING uint_32)(uint_64 $3)
	$1 = ($1 - (($8 + [16]) & [496]))
	$global$0 = $1
	*(($9 = ($1 + $8))) = [0]
	$10 = *($0)
	if ( $4 ){ goto $label$4 }
	$3 = ((int_64)$3 + (int_64)1)
	$5 = ((int_64)$10 % (int_64)$6)
	$0 = ($9 + [-1])
	
.LOOP $label$5:
	$11 = ((int_64)$5 / (int_64)10)
	*($0) = ((CASTING uint_32)(uint_64 (int_64))($5 - ((int_64)$11 * (int_64)10))) + [48])
	$0 = ($0 + [-1])
	$5 = $11
	$3 = ((int_64)$3 + (int_64)-1)
	if ( ((int_64)$3 > (int_64)1) ){ goto $label$5 }
	
.LABEL $label$4
	CALL printi(((int_64)$10 / (int_64)$6))
	CALL prints([13750])
	CALL prints_l($1, $8)
	CALL prints([13752])
	CALL $72($7, [0])
	$global$0 = $2
}

int_32 .FUNC $184 (int_32 $0)
{
	return [0]
}

int_64 .FUNC $187 (int_32 $0, int_64 $1, int_32 $2)
{
	return (int_64)-1
}

int_32 .FUNC $186 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $185($0, $1, $2)
}

int_32 .FUNC $180 (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL $207($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [13356])
	CALL memcpy(($3 + [8]), $2, [8])
	$6 = ($1 & [-8])
	CALL eosio_assert(((int_32)$6 != (int_32)[8]), [13356])
	$7 = (($3 + [8]) + [8])
	CALL memcpy($7, ($2 + [8]), [8])
	CALL eosio_assert(((int_32)$6 != (int_32)[16]), [13356])
	$6 = (($3 + [8]) + [16])
	CALL memcpy($6, ($2 + [16]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL $210($2)
	
.LABEL $label$5
	$1 = ($0 + int_32($4 >> [1]))
	$8 = *($6)
	$9 = *($7)
	$10 = *($3 + [8])
	if ( (($4 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $10), (int_64 $9), (int_64 $8), (int_64 $5))
	$global$0 = ($3 + [32])
	return [1]
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [80])
	$global$0 = $2
	*(($3 = $2) + [60]) = $0
	*($3 + [48]) = *($1)
	$1 = [0]
	$0 = CALL action_data_size()
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ($0 <= [513]) ){ goto $label$3 }
	$1 = CALL $207($0)
	goto $label$2 
	
.LABEL $label$3
	$1 = ($2 - (($0 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$2
	CALL read_action_data($1, $0)
	
.LABEL $label$1
	*(($3 + [16])) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [40])) = [0]
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [72]) = ($1 + $0)
	*($3 + [64]) = $1
	CALL eosio_assert(((uint_32)$0 > (uint_32)[7]), [13356])
	CALL memcpy($3, $1, [8])
	*($3 + [68]) = ($1 + [8])
	CALL $128(($3 + [64]), ($3 + [8]))
	CALL $128(($3 + [64]), ($3 + [20]))
	CALL $128(($3 + [64]), ($3 + [32]))
	if ( ($0 <= [513]) ){ goto $label$4 }
	CALL $210($1)
	
.LABEL $label$4
	*($3 + [68]) = ($3 + [48])
	*($3 + [64]) = ($3 + [60])
	CALL $132(($3 + [64]), $3)
	if ( (*($3 + [32]) & [1]) ){ goto $label$9 }
	if ( (*($3 + [20]) & [1]) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL _ZdlPv(*(($3 + [40])))
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL _ZdlPv(*(($3 + [28])))
	$1 = [1]
	if ( ((*($3 + [8]) & [1]) == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$1 = [1]
	if ( (*($3 + [8]) & [1]) ){ goto $label$5 }
	
.LABEL $label$6
	$global$0 = ($3 + [80])
	return $1
	
.LABEL $label$5
	CALL _ZdlPv(*(($3 + [16])))
	$global$0 = ($3 + [80])
	return $1
}

void .FUNC $114 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$4 = CALL $207($3)
	goto $label$1 
	
.LABEL $label$2
	$4 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$1
	CALL read_action_data($4, $3)
	*(($0 + [24])) = (int_64)1397703940
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$5 = (int_64)5459781
	$1 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$5 = $6
	$7 = [1]
	$8 = $1
	$1 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$6
	$5 = $6
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$7 = ((int_32)$1 < (int_32)[6])
	$8 = ($1 + [1])
	$1 = $8
	if ( $7 ){ goto $label$7 }
	$7 = [1]
	$1 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	
.LABEL $label$3
	CALL eosio_assert($7, [12911])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($2 + [4]) = $4
	*($2) = $4
	*($2 + [8]) = ($4 + $3)
	CALL $126($2, $0)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $115 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL $207($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [13356])
	CALL memcpy($3, $2, [8])
	CALL eosio_assert(((int_32)($1 & [-8]) != (int_32)[8]), [13356])
	$6 = ($3 + [8])
	CALL memcpy($6, ($2 + [8]), [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL $210($2)
	
.LABEL $label$5
	$1 = ($0 + int_32($4 >> [1]))
	$7 = *($6)
	$8 = *($3)
	if ( (($4 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $8), (int_64 $7), (int_64 $5))
	$global$0 = ($3 + [16])
	return [1]
}

void .FUNC $112 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [128])
	$global$0 = $5
	CALL require_auth(*(($0 + [248])))
	*((($5 + [8]) + [32])) = [0]
	*($5 + [24]) = (int_64)-1
	*($5 + [32]) = (int_64)0
	*($5 + [44]) = [0]
	$6 = *($0)
	*($5 + [8]) = $6
	*($5 + [16]) = $6
	$0 = [0]
	$7 = CALL db_find_i64($6, $6, (int_64)-7119375476711227392, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $93(($5 + [8]), $7)
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)($5 + [8])), [13282])
	
.LABEL $label$1
	$7 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($7, [12777])
	CALL eosio_assert($7, [13386])
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)($5 + [8])), [13421])
	CALL eosio_assert(((int_64)*($5 + [8]) == (int_64)CALL $fimport$2()), [13467])
	$7 = ($0 + [48])
	*($5 + [104]) = (CASTING uint_64)(uint_32 ([0] - *($7)))
	$6 = *($0)
	CALL $107(($5 + [48]), $0)
	*(($0 + [40])) = *((($5 + [48]) + [24]))
	*(($0 + [32])) = *((($5 + [48]) + [16]))
	*(($0 + [24])) = *($5 + [56])
	*($0 + [16]) = *($5 + [48])
	CALL eosio_assert(((int_64)$6 == (int_64)*($0)), [13518])
	CALL eosio_assert([1], [13276])
	CALL memcpy(($5 + [48]), $0, [8])
	CALL eosio_assert([1], [13276])
	CALL memcpy((($5 + [48]) | [8]), ($0 + [16]), [32])
	CALL eosio_assert([1], [13276])
	CALL memcpy((($5 + [48]) + [40]), $7, [4])
	CALL db_update_i64(*($0 + [68]), (int_64)0, ($5 + [48]), [44])
	$8 = (($5 + [8]) + [16])
	if ( (uint_64)($6 <= *($8)) ){ goto $label$2 }
	*($8) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($5 + [120]) = (CASTING uint_64)(uint_32 ([0] - *($7)))
	if ( (CALL $204(($5 + [104]), ($5 + [120]), [8]) == 0) ){ goto $label$3 }
	$7 = ($0 + [72])
	$0 = *($7)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = CALL db_idx64_find_primary(*($5 + [8]), *(($5 + [16])), (int_64)-7119375476711227392, ($5 + [112]), $6)
	*($7) = $0
	
.LABEL $label$4
	CALL db_idx64_update($0, (int_64)0, ($5 + [120]))
	
.LABEL $label$3
	$8 = *($5 + [32])
	if ( ($8 == 0) ){ goto $label$5 }
	$9 = ($5 + [36])
	$0 = *($9)
	if ( ((int_32)$0 == (int_32)$8) ){ goto $label$7 }
	
.LOOP $label$8:
	$0 = ($0 + [-24])
	$7 = *($0)
	*($0) = [0]
	if ( ($7 == 0) ){ goto $label$9 }
	CALL _ZdlPv($7)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$0) ){ goto $label$8 }
	$0 = *(($5 + [32]))
	goto $label$6 
	
.LABEL $label$7
	$0 = $8
	
.LABEL $label$6
	*($9) = $8
	CALL _ZdlPv($0)
	
.LABEL $label$5
	$global$0 = ($5 + [128])
}

void .FUNC $113 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [384])
	$global$0 = $3
	$4 = (int_64)0
	$5 = (int_64)59
	$6 = [10499]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$4 > (uint_64)(int_64)7) ){ goto $label$6 }
	$8 = *($6)
	if ( ((uint_32)(($8 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$8 = ($8 + [-91])
	goto $label$4 
	
.LABEL $label$6
	$9 = (int_64)0
	if ( ((uint_64)$4 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$8 = ( ($8 + [-48]) ? [0] : ((($8 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$6 = ($6 + [1])
	$4 = ((int_64)$4 + (int_64)1)
	$7 = ((int_64)$9 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)4294967291)
	if ( ((int_64)$5 != (int_64)55834574842) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	CALL $114(($3 + [336]))
	CALL $48($0, ($3 + [336]), $1)
	if ( ((*($3 + [368]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($3 + [376])))
	
.LABEL $label$8
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$7
	if ( ((int_64)*($0) != (int_64)$1) ){ goto $label$42 }
	if ( ((int_64)$2 <= (int_64)-4417032211186843649) ){ goto $label$41 }
	if ( ((int_64)$2 <= (int_64)3626306333850992639) ){ goto $label$40 }
	if ( ((int_64)$2 > (int_64)4929617609699534735) ){ goto $label$38 }
	if ( ((int_64)$2 == (int_64)3626306333850992640) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)4730614996831743488) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)4923676789315731456) ){ goto $label$33 }
	goto $label$15 
	
.LABEL $label$42
	CALL eosio_assert([0], [12824])
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$41
	if ( ((int_64)$2 > (int_64)-4417358184711307265) ){ goto $label$39 }
	if ( ((int_64)$2 <= (int_64)-5003132314734034945) ){ goto $label$37 }
	if ( ((int_64)$2 == (int_64)-5003132314734034944) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)-4994302320998088704) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)-4994301845979529216) ){ goto $label$31 }
	goto $label$15 
	
.LABEL $label$40
	if ( ((int_64)$2 <= (int_64)-4416958111101747201) ){ goto $label$36 }
	if ( ((int_64)$2 == (int_64)-4416958111101747200) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-3778238612387135488) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-3075276116180887584) ){ goto $label$34 }
	goto $label$15 
	
.LABEL $label$39
	if ( ((int_64)$2 <= (int_64)-4417147892590205793) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-4417147892590205792) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)-4417095296943986688) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-4417095151395012608) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$38
	if ( ((int_64)$2 == (int_64)4929617609699534736) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)5378050753137711072) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)5031766168059248640) ){ goto $label$34 }
	goto $label$15 
	
.LABEL $label$37
	if ( ((int_64)$2 == (int_64)-6533259467254599168) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)-5858954416790437888) ){ goto $label$34 }
	goto $label$15 
	
.LABEL $label$36
	if ( ((int_64)$2 == (int_64)-4417032211186843648) ){ goto $label$18 }
	if ( ((int_64)$2 == (int_64)-4417020932104838512) ){ goto $label$19 }
	goto $label$15 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)-4417358184711307264) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)-4417147996767666176) ){ goto $label$15 }
	
.LABEL $label$34
	CALL eosio_assert(((int_32)*(($0 + [204])) == (int_32)[1]), [12486])
	if ( ((int_64)$2 <= (int_64)-4417032211186843649) ){ goto $label$32 }
	if ( ((int_64)$2 <= (int_64)3626306333850992639) ){ goto $label$30 }
	if ( ((int_64)$2 > (int_64)4929617609699534735) ){ goto $label$23 }
	if ( ((int_64)$2 == (int_64)3626306333850992640) ){ goto $label$14 }
	if ( ((int_64)$2 == (int_64)4730614996831743488) ){ goto $label$27 }
	if ( ((int_64)$2 != (int_64)4923676789315731456) ){ goto $label$15 }
	
.LABEL $label$33
	*($3 + [308]) = [0]
	*($3 + [304]) = [1]
	*($3 + [24]) = *($3 + [304])
	CALL $115($0, ($3 + [24]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$32
	if ( ((int_64)$2 > (int_64)-4417358184711307265) ){ goto $label$29 }
	if ( ((int_64)$2 <= (int_64)-5003132314734034945) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-5003132314734034944) ){ goto $label$26 }
	if ( ((int_64)$2 == (int_64)-4994302320998088704) ){ goto $label$25 }
	if ( ((int_64)$2 != (int_64)-4994301845979529216) ){ goto $label$15 }
	
.LABEL $label$31
	*($3 + [260]) = [0]
	*($3 + [256]) = [2]
	*($3 + [72]) = *($3 + [256])
	CALL $116($0, ($3 + [72]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$30
	if ( ((int_64)$2 <= (int_64)-4416958111101747201) ){ goto $label$20 }
	if ( ((int_64)$2 == (int_64)-4416958111101747200) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-3778238612387135488) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)-3075276116180887584) ){ goto $label$15 }
	*($3 + [172]) = [0]
	*($3 + [168]) = [3]
	*($3 + [160]) = *($3 + [168])
	CALL $117($0, ($3 + [160]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$29
	if ( ((int_64)$2 <= (int_64)-4417147892590205793) ){ goto $label$17 }
	if ( ((int_64)$2 == (int_64)-4417147892590205792) ){ goto $label$24 }
	if ( ((int_64)$2 == (int_64)-4417095296943986688) ){ goto $label$11 }
	if ( ((int_64)$2 != (int_64)-4417095151395012608) ){ goto $label$15 }
	
.LABEL $label$28
	*($3 + [212]) = [0]
	*($3 + [208]) = [4]
	*($3 + [120]) = *($3 + [208])
	CALL $115($0, ($3 + [120]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$27
	*($3 + [316]) = [0]
	*($3 + [312]) = [5]
	*($3 + [16]) = *($3 + [312])
	CALL $115($0, ($3 + [16]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$26
	*($3 + [276]) = [0]
	*($3 + [272]) = [6]
	*($3 + [56]) = *($3 + [272])
	CALL $118($0, ($3 + [56]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$25
	*($3 + [268]) = [0]
	*($3 + [264]) = [7]
	*($3 + [64]) = *($3 + [264])
	CALL $119($0, ($3 + [64]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$24
	*($3 + [204]) = [0]
	*($3 + [200]) = [8]
	*($3 + [128]) = *($3 + [200])
	CALL $118($0, ($3 + [128]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$23
	if ( ((int_64)$2 == (int_64)4929617609699534736) ){ goto $label$22 }
	if ( ((int_64)$2 == (int_64)5031766168059248640) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)5378050753137711072) ){ goto $label$15 }
	*($3 + [180]) = [0]
	*($3 + [176]) = [9]
	*($3 + [152]) = *($3 + [176])
	CALL $118($0, ($3 + [152]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$22
	*($3 + [324]) = [0]
	*($3 + [320]) = [10]
	*($3 + [8]) = *($3 + [320])
	CALL $115($0, ($3 + [8]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$21
	if ( ((int_64)$2 == (int_64)-6533259467254599168) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)-5858954416790437888) ){ goto $label$15 }
	*($3 + [244]) = [0]
	*($3 + [240]) = [11]
	*($3 + [88]) = *($3 + [240])
	CALL $115($0, ($3 + [88]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$20
	if ( ((int_64)$2 == (int_64)-4417032211186843648) ){ goto $label$18 }
	if ( ((int_64)$2 != (int_64)-4417020932104838512) ){ goto $label$15 }
	
.LABEL $label$19
	*($3 + [252]) = [0]
	*($3 + [248]) = [12]
	*($3 + [80]) = *($3 + [248])
	CALL $116($0, ($3 + [80]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$18
	*($3 + [228]) = [0]
	*($3 + [224]) = [13]
	*($3 + [104]) = *($3 + [224])
	CALL $119($0, ($3 + [104]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$17
	if ( ((int_64)$2 == (int_64)-4417358184711307264) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)-4417147996767666176) ){ goto $label$15 }
	*($3 + [284]) = [0]
	*($3 + [280]) = [14]
	*($3 + [48]) = *($3 + [280])
	CALL $115($0, ($3 + [48]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$16
	*($3 + [220]) = [0]
	*($3 + [216]) = [15]
	*($3 + [112]) = *($3 + [216])
	CALL $120($0, ($3 + [112]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$15
	CALL eosio_assert([0], [12844])
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$14
	*($3 + [188]) = [0]
	*($3 + [184]) = [16]
	*($3 + [144]) = *($3 + [184])
	CALL $121($0, ($3 + [144]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$13
	*($3 + [292]) = [0]
	*($3 + [288]) = [17]
	*($3 + [40]) = *($3 + [288])
	CALL $122($0, ($3 + [40]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$12
	*($3 + [236]) = [0]
	*($3 + [232]) = [18]
	*($3 + [96]) = *($3 + [232])
	CALL $123($0, ($3 + [96]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$11
	*($3 + [196]) = [0]
	*($3 + [192]) = [19]
	*($3 + [136]) = *($3 + [192])
	CALL $124($0, ($3 + [136]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$10
	*($3 + [300]) = [0]
	*($3 + [296]) = [20]
	*($3 + [32]) = *($3 + [296])
	CALL $125($0, ($3 + [32]))
	$global$0 = ($3 + [384])
	return 
	
.LABEL $label$9
	*($3 + [332]) = [0]
	*($3 + [328]) = [21]
	*($3) = *($3 + [328])
	CALL $116($0, $3)
	$global$0 = ($3 + [384])
}

void .FUNC $110 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $178($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $111 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL require_auth(*(($0 + [248])))
	*(($2 + [32])) = [0]
	*($2 + [16]) = (int_64)-1
	*($2 + [24]) = (int_64)0
	*($2 + [36]) = [0]
	$3 = *($0)
	*($2) = $3
	*($2 + [8]) = $3
	$0 = [0]
	$4 = CALL db_find_i64($3, $3, (int_64)-7119375476711227392, $1)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$0 = CALL $93($2, $4)
	CALL eosio_assert(((int_32)*($0 + [64]) == (int_32)$2), [13282])
	
.LABEL $label$1
	$4 = ((int_32)$0 != (int_32)[0])
	CALL eosio_assert($4, [12777])
	CALL eosio_assert($4, [14340])
	CALL eosio_assert($4, [13720])
	$4 = CALL db_next_i64(*($0 + [68]), ($2 + [40]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $93($2, $4)
	
.LABEL $label$2
	CALL $94($2, $0)
	$5 = *($2 + [24])
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = ($2 + [28])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$4 = *($0)
	*($0) = [0]
	if ( ($4 == 0) ){ goto $label$7 }
	CALL _ZdlPv($4)
	
.LABEL $label$7
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($2 + [24]))
	goto $label$4 
	
.LABEL $label$5
	$0 = $5
	
.LABEL $label$4
	*($6) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$3
	$global$0 = ($2 + [48])
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$2 = CALL $207($1)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $1)
	
.LABEL $label$1
	*($3 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [13356])
	CALL memcpy(($3 + [8]), $2, [8])
	$6 = *($3 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL $210($2)
	
.LABEL $label$5
	$1 = ($0 + int_32($4 >> [1]))
	if ( (($4 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $6), (int_64 $5))
	$global$0 = ($3 + [16])
	return [1]
}

int_32 .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($1 + [4])
	$5 = *($1)
	$6 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$6 = CALL $207($1)
	goto $label$2 
	
.LABEL $label$3
	$6 = ($2 - (($1 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$2
	CALL read_action_data($6, $1)
	
.LABEL $label$1
	*($3 + [8]) = [0]
	CALL eosio_assert(((int_32)$1 != (int_32)[0]), [13356])
	CALL memcpy(($3 + [8]), $6, [1])
	$2 = *($3 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL $210($6)
	
.LABEL $label$4
	$1 = ($0 + int_32($4 >> [1]))
	if ( (($4 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 ($2 & [255])), (int_32 $5))
	$global$0 = ($3 + [16])
	return [1]
}

void .FUNC $29 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$7 = ($global$0 - [32])
	$global$0 = $7
	$8 = ($0 + [56])
	$10 = *(($0 + [84]))
	$9 = *(($0 + [80]))
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	
.LOOP $label$4:
	$11 = ($10 + [-24])
	$12 = *($11)
	if ( ((int_64)*($12) == (int_64)$1) ){ goto $label$3 }
	$10 = $11
	if ( ((int_32)$9 != (int_32)$11) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($12 + [184]) == (int_32)$8), [13282])
	goto $label$1 
	
.LABEL $label$2
	$12 = [0]
	$11 = CALL db_find_i64(*($8), *(($0 + [64])), (int_64)6291770479543096704, $1)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$1 }
	$12 = CALL $8($8, $11)
	CALL eosio_assert(((int_32)*($12 + [184]) == (int_32)$8), [13282])
	
.LABEL $label$1
	$11 = ((int_32)$12 != (int_32)[0])
	CALL eosio_assert($11, [9900])
	*($7 + [12]) = $5
	*($7 + [8]) = $2
	*($7 + [16]) = $6
	*($7 + [20]) = $3
	*($7 + [24]) = $4
	CALL eosio_assert($11, [13386])
	CALL $34($8, $12, ($7 + [8]))
	$global$0 = ($7 + [32])
}

int_32 .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [16])
	$global$0 = $5
	$6 = *($2)
	CALL eosio_assert(((int_64)$6 > (int_64)0), [10346])
	$7 = *($3)
	CALL eosio_assert(((int_64)$7 > (int_64)0), [10377])
	$2 = ($1 + [72])
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*($2)), [13185])
	$6 = (int_64)
	*($1 + [64]) = $6(*($1 + [64]) - $6))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)*($1 + [64]) < (int_64)4611686018427387904), [13255])
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [104]))), [13105])
	$6 = ((int_64)$7 + (int_64)*($1 + [96]))
	*($1 + [96]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($1 + [96]) < (int_64)4611686018427387904), [13167])
	*($1 + [32]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($1 + [64]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [10407])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($1 + [64]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [8929])
	$3 = [0]
	$6 = *($1 + [64])
	if ( ((int_64)$6 != (int_64)((int_64)((int_64)$6 + (int_64)999) / (int_64)1000)) ){ goto $label$2 }
	CALL prints([8950])
	CALL eosio_assert(((int_64)*($2) == (int_64)*(($1 + [56]))), [12931])
	$8 = ($1 + [64])
	CALL eosio_assert(((int_64)*($8) < (int_64)*($1 + [48])), [9940])
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$6 = *($1 + [16])
	$7 = *($0)
	$3 = CALL $205([10433])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($5) = ($3 << [1])
	$2 = ($5 | [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$9 = (($3 + [16]) & [-16])
	$2 = CALL _Znwj($9)
	*($5) = ($9 | [1])
	*($5 + [8]) = $2
	*($5 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($2, [10433], $3)
	
.LABEL $label$3
	*(($2 + $3)) = [0]
	CALL $27($0, $4, $7, $6, $8, $5)
	$3 = [1]
	if ( ((*($5) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$6
	CALL $36($1)
	
.LABEL $label$2
	$global$0 = ($5 + [16])
	return $3
	
.LABEL $label$1
	CALL $168($5)
	return (unreachable)
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx128_upperbound(*($2), *($2 + [8]), (int_64)-6497942333781180414, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [8]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $18($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-6497942333781180416, $6))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [128])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx128_lowerbound(*($2), *($2 + [8]), (int_64)-6497942333781180414, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [8]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $18($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-6497942333781180416, $6))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [128])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	$5 = *($2)
	CALL eosio_assert(((int_64)$3 != (int_64)0), [13039])
	CALL eosio_assert((((int_64)$3 != (int_64)-1) | ((int_64)$5 != (int_64)-9223372036854775808)), [13054])
	$3 = ((int_64)$5 / (int_64)$3)
	CALL eosio_assert(((int_64)$3 > (int_64)0), [13079])
	*($0) = $3
	$5 = *($4)
	*($0 + [8]) = $5
	CALL eosio_assert((uint_64)(((int_64)$3 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [12862])
	$3 = (uint_64)$5 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$1 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$3 = $5
	$6 = [1]
	$4 = $0
	$0 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$3 = $5
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$2 = ($0 + [1])
	$0 = $2
	if ( $4 ){ goto $label$6 }
	$6 = [1]
	$0 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert($6, [12911])
	return 
	
.LABEL $label$2
	CALL eosio_assert([0], [12911])
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [12911])
}

int_32 .FUNC $22 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [13720])
	$2 = *($0 + [4])
	$3 = *(($2 + [128]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	$3 = *(*($0))
	$3 = CALL db_idx128_find_primary(*($3), *($3 + [8]), (int_64)-6497942333781180414, $1, *($2 + [8]))
	*((*(($0 + [4])) + [128])) = $3
	
.LABEL $label$1
	*($1) = (int_64)0
	$4 = CALL db_idx128_next($3, $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = *($1)
	$2 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$6:
	$3 = ($2 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8 + [8]) == (int_64)$5) ){ goto $label$4 }
	$2 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($8 + [112]) == (int_32)$6), [13282])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL $18($6, CALL $fimport$0(*($6), *($6 + [8]), (int_64)-6497942333781180416, $5))
	CALL eosio_assert(((int_32)*($8 + [112]) == (int_32)$6), [13282])
	
.LABEL $label$2
	*(($0 + [4])) = $8
	*(($8 + [128])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[1]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [2])
	$2 = (*($0 + [4]) + [2])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [26]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [28]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [36]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[0]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [1])
	$2 = (*($0 + [4]) + [1])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [44]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$4 = ($global$0 - [304])
	$global$0 = $4
	CALL eosio_assert(((int_64)*(($1 + [72])) == (int_64)*(($1 + [56]))), [12931])
	CALL eosio_assert(((int_64)*($1 + [64]) <= (int_64)*($1 + [48])), [9940])
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $205([9973])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, [9973], $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$6 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$5 }
	CALL $174(($4 + [16]), [9985])
	goto $label$5 
	
.LABEL $label$6
	CALL $174(($4 + [16]), [9995])
	
.LABEL $label$5
	$8 = ($1 + [64])
	if ( ((uint_32)((*($1 + [26]) + [-1]) & [255]) > (uint_32)[1]) ){ goto $label$7 }
	$9 = ($0 + [56])
	$10 = *($1 + [24])
	$2 = *(($0 + [84]))
	$7 = *(($0 + [80]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$9 }
	
.LOOP $label$11:
	$6 = ($2 + [-24])
	$5 = *($6)
	if ( ((int_64)*($5) == (int_64)$10) ){ goto $label$10 }
	$2 = $6
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$9 }
	CALL eosio_assert(((int_32)*($5 + [184]) == (int_32)$9), [13282])
	goto $label$8 
	
.LABEL $label$9
	$5 = [0]
	$6 = CALL db_find_i64(*($9), *(($0 + [64])), (int_64)6291770479543096704, $10)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$5 = CALL $8($9, $6)
	CALL eosio_assert(((int_32)*($5 + [184]) == (int_32)$9), [13282])
	
.LABEL $label$8
	$6 = ((int_32)$5 != (int_32)[0])
	CALL eosio_assert($6, [9900])
	CALL eosio_assert($6, [13386])
	CALL eosio_assert(((int_32)*($5 + [184]) == (int_32)$9), [13421])
	CALL eosio_assert(((int_64)*(($0 + [56])) == (int_64)CALL $fimport$2()), [13467])
	$6 = ($5 + [8])
	$10 = *($6)
	*($4 + [240]) = $10
	$11 = *(($5 + [16]))
	*($4 + [248]) = $11
	*($4 + [264]) = *(($5 + [24]))
	*($4 + [256]) = ((int_64)$11 + (int_64)$10)
	*($4 + [272]) = (int_64))((int_64)0 - *(($5 + [112])))
	*($4 + [280]) = (int_64))((int_64)0 - *(($5 + [128])))
	$10 = *($5)
	CALL eosio_assert(((int_64)*(($1 + [72])) == (int_64)*(($5 + [160]))), [13185])
	$11 = (int_64)
	*($5 + [152]) = $11(*($5 + [152]) - *($1 + [64])))
	CALL eosio_assert(((int_64)$11 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)*($5 + [152]) < (int_64)4611686018427387904), [13255])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($5 + [152]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [13756])
	CALL eosio_assert(((int_64)$10 == (int_64)*($5)), [13518])
	*($4 + [232]) = (($4 + [32]) + [180])
	*($4 + [228]) = ($4 + [32])
	*($4 + [224]) = ($4 + [32])
	CALL $35(($4 + [224]), $5)
	CALL db_update_i64(*($5 + [188]), (int_64)0, ($4 + [32]), [180])
	$2 = ($0 + [72])
	if ( (uint_64)($10 <= *($2)) ){ goto $label$12 }
	*($2) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$2 = (($4 + [240]) + [8])
	*($4 + [296]) = *($6)
	if ( (CALL $204(($4 + [240]), ($4 + [296]), [8]) == 0) ){ goto $label$13 }
	$7 = ($5 + [192])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$14 }
	$6 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096704, ($4 + [288]), $10)
	*($7) = $6
	
.LABEL $label$14
	CALL db_idx64_update($6, (int_64)0, ($4 + [296]))
	
.LABEL $label$13
	$6 = (($4 + [240]) + [16])
	$7 = ($5 + [16])
	*($4 + [296]) = *($7)
	if ( (CALL $204($2, ($4 + [296]), [8]) == 0) ){ goto $label$15 }
	$9 = ($5 + [196])
	$2 = *($9)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$16 }
	$2 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096705, ($4 + [288]), $10)
	*($9) = $2
	
.LABEL $label$16
	CALL db_idx64_update($2, (int_64)0, ($4 + [296]))
	
.LABEL $label$15
	$2 = (($4 + [240]) + [24])
	*($4 + [296]) = ((int_64)*($7) + (int_64)*(($5 + [8])))
	if ( (CALL $204($6, ($4 + [296]), [8]) == 0) ){ goto $label$17 }
	$7 = ($5 + [200])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$18 }
	$6 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096706, ($4 + [288]), $10)
	*($7) = $6
	
.LABEL $label$18
	CALL db_idx64_update($6, (int_64)0, ($4 + [296]))
	
.LABEL $label$17
	$6 = ($4 + [272])
	*($4 + [296]) = *(($5 + [24]))
	if ( (CALL $204($2, ($4 + [296]), [8]) == 0) ){ goto $label$19 }
	$7 = ($5 + [204])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$20 }
	$2 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096707, ($4 + [288]), $10)
	*($7) = $2
	
.LABEL $label$20
	CALL db_idx64_update($2, (int_64)0, ($4 + [296]))
	
.LABEL $label$19
	$2 = ($4 + [280])
	*($4 + [296]) = (int_64))((int_64)0 - *(($5 + [112])))
	if ( (CALL $204($6, ($4 + [296]), [8]) == 0) ){ goto $label$21 }
	$7 = ($5 + [208])
	$6 = *($7)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$22 }
	$6 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096708, ($4 + [288]), $10)
	*($7) = $6
	
.LABEL $label$22
	CALL db_idx64_update($6, (int_64)0, ($4 + [296]))
	
.LABEL $label$21
	*($4 + [296]) = (int_64))((int_64)0 - *(($5 + [128])))
	if ( (CALL $204($2, ($4 + [296]), [8]) == 0) ){ goto $label$7 }
	$6 = ($5 + [212])
	$5 = *($6)
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$23 }
	$5 = CALL db_idx64_find_primary(*(($0 + [56])), *(($0 + [64])), (int_64)6291770479543096709, ($4 + [288]), $10)
	*($6) = $5
	
.LABEL $label$23
	CALL db_idx64_update($5, (int_64)0, ($4 + [296]))
	
.LABEL $label$7
	$5 = CALL $169($4, ($4 + [16]))
	CALL $27($0, $3, *($0), *($1 + [16]), $8, $5)
	if ( ((*($5) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$24
	CALL $36($1)
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$25 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$25
	$global$0 = ($4 + [304])
	return (unreachable)
	
.LABEL $label$1
	CALL $168(($4 + [16]))
}

void .FUNC $27 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	$6 = ($global$0 - [128])
	$global$0 = $6
	if ( ((int_64)*($4) < (int_64)1) ){ goto $label$3 }
	$7 = *($0)
	$8 = (int_64)6
	
.LOOP $label$4:
	$8 = ((int_64)$8 + (int_64)1)
	if ( ((int_64)$8 != (int_64)13) ){ goto $label$4 }
	$8 = (int_64)0
	$9 = (int_64)59
	$0 = [10499]
	$10 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$8 > (uint_64)(int_64)7) ){ goto $label$10 }
	$11 = *($0)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$11 = ($11 + [-91])
	goto $label$8 
	
.LABEL $label$10
	$12 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$11 = ( ($11 + [-48]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $11) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$6
	$0 = ($0 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$10 = ((int_64)$12 | (int_64)$10)
	$9 = ((int_64)$9 + (int_64)4294967291)
	if ( ((int_64)$9 != (int_64)55834574842) ){ goto $label$5 }
	*((($6 + [8]) + [24])) = *(($4 + [8]))
	*($6 + [16]) = $3
	*($6 + [8]) = $2
	*($6 + [24]) = *($4)
	$11 = CALL $169((($6 + [8]) + [32]), $5)
	*($6 + [64]) = $10
	*($6 + [56]) = $1
	*(($0 = CALL _Znwj([16]))) = $7
	*($0 + [8]) = (int_64)3617214756542218240
	*((($6 + [56]) + [36])) = [0]
	$4 = ($0 + [16])
	*((($6 + [56]) + [24])) = $4
	*(($6 + [76])) = $4
	*($6 + [72]) = $0
	*($6 + [84 align=4]) = (int_64)0
	$0 = *($11)
	$11 = ( *((($6 + [8]) + [36])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($11 + [32])
	$8 = (CASTING uint_64)(uint_32 $11)
	$11 = ($6 + [84])
	
.LOOP $label$11:
	$0 = ($0 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$11 }
	if ( ($0 == 0) ){ goto $label$2 }
	CALL $31($11, $0)
	$11 = *(($6 + [88]))
	$0 = *(($6 + [84]))
	goto $label$1 
	
.LABEL $label$3
	CALL prints([10508])
	$0 = *($5)
	$11 = ($0 & [1])
	CALL prints_l(( *($5 + [8]) ? ($5 + [1]) : $11 ), ( *($5 + [4]) ? uint_32($0 >> [1]) : $11 ))
	CALL prints([9194])
	$global$0 = ($6 + [128])
	return 
	
.LABEL $label$2
	$11 = [0]
	$0 = [0]
	
.LABEL $label$1
	*($6 + [116]) = $0
	*($6 + [112]) = $0
	*($6 + [120]) = $11
	*($6 + [96]) = ($6 + [112])
	*($6 + [104]) = ($6 + [8])
	CALL $32(($6 + [104]), ($6 + [96]))
	CALL $33(($6 + [112]), ($6 + [56]))
	$0 = *($6 + [112])
	CALL send_inline($0, (*($6 + [116]) - $0))
	$0 = *($6 + [112])
	if ( ($0 == 0) ){ goto $label$12 }
	*($6 + [116]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$12
	$0 = *($6 + [84])
	if ( ($0 == 0) ){ goto $label$13 }
	*(($6 + [88])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$13
	$0 = *($6 + [72])
	if ( ($0 == 0) ){ goto $label$14 }
	*(($6 + [76])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$14
	if ( ((*($6 + [40]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*(($6 + [48])))
	
.LABEL $label$15
	$global$0 = ($6 + [128])
}

void .FUNC $26 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$7 = ($global$0 - [80])
	$global$0 = $7
	CALL eosio_assert(((int_64)*($2) > (int_64)0), [10446])
	$8 = ($2 + [8])
	*((($7 + [64]) + [8])) = *($8)
	*($7 + [64]) = *($2)
	CALL eosio_assert([1], [13039])
	$9 = *($7 + [64])
	CALL eosio_assert([1], [13054])
	$10 = ((int_64)$9 / (int_64)2)
	*($7 + [64]) = $10
	*($7 + [56]) = [0]
	*($7 + [48]) = (int_64)0
	CALL $30($7, ($7 + [48]), *($1), $3, $4, $5, $6)
	if ( ((int_64)$9 <= (int_64)1) ){ goto $label$1 }
	$11 = CALL $169(($7 + [32]), ($7 + [48]))
	CALL $27($0, *(($1 + [40])), *($0), *($1 + [8]), ($7 + [64]), $11)
	if ( ((*($11) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($11 + [8]))
	
.LABEL $label$1
	$9 = *($8)
	*((($7 + [16]) + [8])) = $9
	*($7 + [16]) = *($2)
	CALL eosio_assert(((int_64)$9 == (int_64)*($7 + [72])), [13185])
	$9 = (int_64)
	*($7 + [16]) = $9(*($7 + [16]) - $10))
	CALL eosio_assert(((int_64)$9 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)$9 < (int_64)4611686018427387904), [13255])
	CALL eosio_assert(((int_64)$9 > (int_64)0), [10469])
	$2 = CALL $169($7, ($7 + [48]))
	CALL $27($0, *(($1 + [40])), *($0), *(($0 + [272])), ($7 + [16]), $2)
	if ( (*($2) & [1]) ){ goto $label$4 }
	if ( (*($7 + [48]) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL _ZdlPv(*($2 + [8]))
	if ( ((*($7 + [48]) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL _ZdlPv(*(($7 + [56])))
	$global$0 = ($7 + [80])
	return 
	
.LABEL $label$2
	$global$0 = ($7 + [80])
}

int_32 .FUNC $101 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL eosio_assert(((int_32)*($0 + [4]) != (int_32)[0]), [13720])
	$2 = *($0 + [4])
	$3 = *($2 + [48])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-2507752926491967488, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [48]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = *($1 + [8])
	$2 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$6:
	$3 = ($2 + [-24])
	$8 = *($3)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$4 }
	$2 = $3
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$5
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$4
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$6), [13282])
	goto $label$2 
	
.LABEL $label$3
	$8 = CALL $91($6, CALL $fimport$0(*($6), *($6 + [8]), (int_64)-2507752926491967488, $5))
	CALL eosio_assert(((int_32)*($8 + [40]) == (int_32)$6), [13282])
	
.LABEL $label$2
	*(($0 + [4])) = $8
	*(($8 + [48])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_upperbound(*($2), *($2 + [8]), (int_64)-2507752926491967488, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $91($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-2507752926491967488, $6))
	CALL eosio_assert(((int_32)*($4 + [40]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [48])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $103 (int_32 $0, int_32 $1, int_64 $2)
{
	CALL require_auth(*($0))
	CALL eosio_assert(CALL eosio_assert7($2), [12505])
	$1 = ($1 + [-1])
	CALL eosio_assert((($1 & [255]) <= [6]), [12527])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$8
	$1 = ($0 + [240])
	CALL eosio_assert(((int_64)*($1) != (int_64)$2), [12540])
	*($1) = $2
	goto $label$1 
	
.LABEL $label$7
	CALL eosio_assert([0], [12527])
	goto $label$1 
	
.LABEL $label$6
	$1 = ($0 + [248])
	CALL eosio_assert(((int_64)*($1) != (int_64)$2), [12540])
	*($1) = $2
	goto $label$1 
	
.LABEL $label$5
	$1 = ($0 + [256])
	CALL eosio_assert(((int_64)*($1) != (int_64)$2), [12540])
	*($1) = $2
	goto $label$1 
	
.LABEL $label$4
	$1 = ($0 + [264])
	CALL eosio_assert(((int_64)*($1) != (int_64)$2), [12540])
	*($1) = $2
	goto $label$1 
	
.LABEL $label$3
	$1 = ($0 + [272])
	CALL eosio_assert(((int_64)*($1) != (int_64)$2), [12540])
	*($1) = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = ($0 + [232])
	CALL eosio_assert(((int_64)*($1) != (int_64)$2), [12540])
	*($1) = $2
	
.LABEL $label$1
	CALL $58(($0 + [152]), ($0 + [192]), *($0))
	$1
}

void .FUNC $102 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL require_auth(*(($0 + [248])))
	CALL eosio_assert(($1 <= [2]), [11802])
	$2 = ($0 + [204])
	CALL eosio_assert(((int_32)*($2) != (int_32)$1), [12474])
	*($2) = $1
	CALL $58(($0 + [152]), ($0 + [192]), *($0))
}

void .FUNC $105 (int_32 $0, int_64 $1)
{
	int_32 $2
	CALL require_auth(*(($0 + [248])))
	$2 = ($0 + [280])
	CALL eosio_assert(((int_64)*($2) != (int_64)$1), [12620])
	CALL eosio_assert(((uint_64)$1 > (uint_64)(int_64)99), [12640])
	CALL eosio_assert((uint_64)($1 <= (int_64)150001), [12696])
	*($2) = $1
	CALL $58(($0 + [152]), ($0 + [192]), *($0))
}

void .FUNC $104 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	CALL require_auth(*(($0 + [248])))
	$3 = ($0 + [192])
	if ( ((int_64)$1 != (int_64)1) ){ goto $label$2 }
	CALL eosio_assert((uint_64)($2 <= (int_64)2), [12568])
	$4 = ($0 + [304])
	CALL eosio_assert(((int_64)*($4) != (int_64)$2), [12582])
	*($4) = $2
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [12608])
	
.LABEL $label$1
	CALL $58(($0 + [152]), $3, *($0))
}

void .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = CALL transaction_size()
	$2 = $global$0
	$4 = ($2 - (($3 + [15]) & [-16]))
	$global$0 = $4
	$5 = CALL read_transaction($4, $3)
	CALL eosio_assert(((int_32)$3 == (int_32)$5), [12800])
	CALL sha256($4, $5, $0)
	CALL printhex($0, [32])
	$global$0 = $2
}

void .FUNC $106 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$8 = ($global$0 - [272])
	$global$0 = $8
	CALL require_auth(*(($0 + [240])))
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)-1) <= (int_64)65534), [11890])
	$9 = ($0 + [16])
	$11 = *(($0 + [44]))
	$10 = *(($0 + [40]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$2 }
	
.LOOP $label$4:
	$12 = ($11 + [-24])
	$13 = *($12)
	if ( ((int_64)*($13) == (int_64)$1) ){ goto $label$3 }
	$11 = $12
	if ( ((int_32)$10 != (int_32)$12) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$2 }
	CALL eosio_assert(((int_32)*($13 + [176]) == (int_32)$9), [13282])
	goto $label$1 
	
.LABEL $label$2
	$13 = [0]
	$12 = CALL db_find_i64(*($9), *(($0 + [24])), (int_64)6291769033721118720, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$1 }
	$13 = CALL $7($9, $12)
	CALL eosio_assert(((int_32)*($13 + [176]) == (int_32)$9), [13282])
	
.LABEL $label$1
	$12 = ((int_32)$13 != (int_32)[0])
	CALL eosio_assert($12, [9061])
	CALL eosio_assert($12, [13386])
	CALL eosio_assert(((int_32)*($13 + [176]) == (int_32)$9), [13421])
	CALL eosio_assert(((int_64)*(($0 + [16])) == (int_64)CALL $fimport$2()), [13467])
	$12 = ($13 + [16])
	$1 = *($12)
	*(($8 + [232])) = $1
	$14 = *(($13 + [32]))
	*($8 + [224]) = $14
	*($8 + [208]) = *(($13 + [80]))
	*($8 + [192]) = (uint_64)$1 >> (uint_64)(int_64)8)
	*($8 + [200]) = (uint_64)$14 >> (uint_64)(int_64)8)
	$1 = *($13)
	CALL $107($8, $8)
	*(($13 + [136])) = *(($8 + [24]))
	*(($13 + [128])) = *(($8 + [16]))
	*(($13 + [120])) = *($8 + [8])
	*($13 + [112]) = *($8)
	*($13 + [76]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	CALL eosio_assert(((int_64)$1 == (int_64)*($13)), [13518])
	*($8 + [184]) = ($8 + [161])
	*($8 + [180]) = $8
	*($8 + [176]) = $8
	CALL $47(($8 + [176]), $13)
	CALL db_update_i64(*($13 + [180]), (int_64)0, $8, [161])
	$11 = ($0 + [32])
	if ( (uint_64)($1 <= *($11)) ){ goto $label$5 }
	*($11) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$11 = (($8 + [192]) | [8])
	*($8 + [256]) = (uint_64)*($12) >> (uint_64)(int_64)8)
	if ( (CALL $204(($8 + [192]), ($8 + [256]), [8]) == 0) ){ goto $label$6 }
	$10 = ($13 + [184])
	$12 = *($10)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$7 }
	$12 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118720, ($8 + [240]), $1)
	*($10) = $12
	
.LABEL $label$7
	CALL db_idx64_update($12, (int_64)0, ($8 + [256]))
	
.LABEL $label$6
	$12 = (($8 + [192]) + [16])
	*($8 + [256]) = (uint_64)*(($13 + [32])) >> (uint_64)(int_64)8)
	if ( (CALL $204($11, ($8 + [256]), [8]) == 0) ){ goto $label$8 }
	$10 = ($13 + [188])
	$11 = *($10)
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$9 }
	$11 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118721, ($8 + [240]), $1)
	*($10) = $11
	
.LABEL $label$9
	CALL db_idx64_update($11, (int_64)0, ($8 + [256]))
	
.LABEL $label$8
	$11 = (($8 + [192]) + [32])
	*($8 + [256]) = *(($13 + [80]))
	if ( (CALL $204($12, ($8 + [256]), [8]) == 0) ){ goto $label$10 }
	$10 = ($13 + [192])
	$12 = *($10)
	if ( ((int_32)$12 > (int_32)[-1]) ){ goto $label$11 }
	$12 = CALL db_idx64_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118722, ($8 + [240]), $1)
	*($10) = $12
	
.LABEL $label$11
	CALL db_idx64_update($12, (int_64)0, ($8 + [256]))
	
.LABEL $label$10
	*($8 + [264]) = *(($13 + [16]))
	*($8 + [256]) = *(($13 + [32]))
	if ( (CALL $204($11, ($8 + [256]), [16]) == 0) ){ goto $label$12 }
	$12 = ($13 + [196])
	$13 = *($12)
	if ( ((int_32)$13 > (int_32)[-1]) ){ goto $label$13 }
	$13 = CALL db_idx128_find_primary(*(($0 + [16])), *(($0 + [24])), (int_64)6291769033721118723, ($8 + [240]), $1)
	*($12) = $13
	
.LABEL $label$13
	CALL db_idx128_update($13, (int_64)0, ($8 + [256]))
	
.LABEL $label$12
	$global$0 = ($8 + [272])
}

void .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	$6 = *($5 + [16])
	if ( ((int_64)$6 != (int_64)-1) ){ goto $label$1 }
	$6 = (int_64)0
	$7 = CALL db_lowerbound_i64(*($5), *($5 + [8]), (int_64)-7119375476711227392, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	CALL $93($5, $7)
	*($3 + [4]) = [0]
	*($3) = $5
	$6 = *(*(CALL $159($3) + [4]))
	$6 = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($5 + [16])) = $6
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($6 <= (int_64)-2), [13795])
	*($1) = *(($5 + [16]))
	CALL $107($3, $1)
	*(($1 + [40])) = *(($3 + [24]))
	*(($1 + [32])) = *(($3 + [16]))
	*(($1 + [24])) = *($3 + [8])
	*($1 + [16]) = *($3)
	*($1 + [48]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$5 = $2
	$2 = ($5 + [-48])
	$global$0 = $2
	CALL eosio_assert([1], [13276])
	CALL memcpy($2, $1, [8])
	CALL eosio_assert([1], [13276])
	CALL memcpy(($5 + [-40]), ($1 + [16]), [32])
	CALL eosio_assert([1], [13276])
	$5 = ($1 + [48])
	CALL memcpy(($5 + [-8]), $5, [4])
	$6 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($4 + [8]), (int_64)-7119375476711227392, *(*($0 + [8])), $6, $2, [44])
	if ( (uint_64)($6 <= *($4 + [16])) ){ goto $label$3 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$6 = *(($4 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($3) = (CASTING uint_64)(uint_32 ([0] - *($5)))
	*($1 + [72]) = CALL db_idx64_store($6, (int_64)-7119375476711227392, $8, $9, $3)
	$global$0 = ($3 + [32])
}

void .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [96])
	$global$0 = $4
	CALL require_auth(*(($0 + [248])))
	*(($5 = ($4 + [48]))) = [0]
	*($4 + [32]) = (int_64)-1
	*($4 + [52]) = [0]
	$6 = *($0)
	*($4 + [16]) = $6
	*($4 + [24]) = $6
	*($4 + [40]) = (int_64)0
	$7 = CALL db_lowerbound_i64($6, $6, (int_64)-7119375476711227392, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$7 = CALL $93(($4 + [16]), $7)
	$8 = [1]
	CALL eosio_assert([1], [13720])
	$7 = CALL db_next_i64(*($7 + [68]), ($4 + [64]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$6 = (int_64)1
	
.LOOP $label$3:
	$7 = CALL $93(($4 + [16]), $7)
	CALL eosio_assert([1], [13720])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = CALL db_next_i64(*($7 + [68]), ($4 + [64]))
	if ( ((int_32)$7 >= (int_32)[0]) ){ goto $label$3 }
	$8 = (uint_64)($6 <= (int_64)10)
	goto $label$1 
	
.LABEL $label$2
	$8 = [1]
	
.LABEL $label$1
	CALL eosio_assert($8, [12751])
	$6 = *($0)
	*($4 + [12]) = $0
	*($4 + [8]) = ($4 + [16])
	*($4 + [88]) = $6
	CALL eosio_assert(((int_64)*($4 + [16]) == (int_64)CALL $fimport$2()), [13626])
	*($4 + [68]) = ($4 + [8])
	*($4 + [64]) = ($4 + [16])
	*($4 + [72]) = ($4 + [88])
	*(($7 = CALL _Znwj([80])) + [64]) = ($4 + [16])
	CALL $109(($4 + [64]), $7)
	*($4 + [80]) = $7
	$6 = *($7)
	*($4 + [64]) = $6
	$8 = *($7 + [68])
	*($4 + [60]) = $8
	$9 = ($4 + [44])
	$0 = *($9)
	if ( ((uint_32)$0 >= (uint_32)*($5)) ){ goto $label$6 }
	*($0 + [8]) = $6
	*($0 + [16]) = $8
	*($4 + [80]) = [0]
	*($0) = $7
	*($9) = ($0 + [24])
	$7 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( $7 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $110(($4 + [40]), ($4 + [80]), ($4 + [64]), ($4 + [60]))
	$7 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	CALL _ZdlPv($7)
	
.LABEL $label$4
	$8 = *($4 + [40])
	if ( ($8 == 0) ){ goto $label$7 }
	$5 = ($4 + [44])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$9 }
	
.LOOP $label$10:
	$7 = ($7 + [-24])
	$0 = *($7)
	*($7) = [0]
	if ( ($0 == 0) ){ goto $label$11 }
	CALL _ZdlPv($0)
	
.LABEL $label$11
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$10 }
	$7 = *(($4 + [40]))
	goto $label$8 
	
.LABEL $label$9
	$7 = $8
	
.LABEL $label$8
	*($5) = $8
	CALL _ZdlPv($7)
	
.LABEL $label$7
	$global$0 = ($4 + [96])
}

void .FUNC $38 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-6497942333781180416, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4 + [8]) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $18($7, CALL $fimport$0(*($7), *($7 + [8]), (int_64)-6497942333781180416, $6))
	CALL eosio_assert(((int_32)*($4 + [112]) == (int_32)$7), [13282])
	
.LABEL $label$2
	*(($4 + [120])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $39 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL require_auth(*(($0 + [232])))
	$4 = *($2)
	if ( ($4 & [1]) ){ goto $label$2 }
	$2 = uint_32($4 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($2 + [4])
	
.LABEL $label$1
	CALL eosio_assert(($2 <= [257]), [10075])
	CALL eosio_assert((uint_64)(((int_64)$1 + (int_64)-1) <= (int_64)65534), [8365])
	$5 = ($0 + [16])
	$4 = *(($0 + [44]))
	$6 = *(($0 + [40]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$6:
	$2 = ($4 + [-24])
	$7 = *($2)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$5 }
	$4 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$4 }
	CALL eosio_assert(((int_32)*($7 + [176]) == (int_32)$5), [13282])
	goto $label$3 
	
.LABEL $label$4
	$7 = [0]
	$2 = CALL db_find_i64(*($5), *(($0 + [24])), (int_64)6291769033721118720, $1)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $7($5, $2)
	CALL eosio_assert(((int_32)*($7 + [176]) == (int_32)$5), [13282])
	
.LABEL $label$3
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [10104])
	CALL eosio_assert(((int_32)*($7 + [80]) == (int_32)[1]), [8404])
	$8 = *($7 + [32])
	*($3 + [56]) = ($0 + [104])
	CALL eosio_assert([1], [12862])
	$2 = [0]
	$9 = (uint_64)$8 >> (uint_64)(int_64)8
	$8 = $9)
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$8 = $10
	$4 = [1]
	$7 = $2
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$8 = $10
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$7 = ($2 + [1])
	$2 = $7
	if ( $4 ){ goto $label$11 }
	$4 = [1]
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	
.LABEL $label$7
	CALL eosio_assert($4, [12911])
	*($3 + [128]) = (int_64)0
	$1 = ((int_64)((int_64)$1 << (int_64)8) & (int_64)16776960)
	*($3 + [136]) = ((int_64)$1 | (int_64)1)
	CALL $20(($3 + [48]), ($3 + [56]), ($3 + [128]))
	$2 = *($3 + [52])
	if ( ($2 == 0) ){ goto $label$17 }
	if ( ((uint_32)((*($2 + [26]) + [-1]) & [255]) > (uint_32)[1]) ){ goto $label$14 }
	CALL eosio_assert(((int_64)*($2 + [64]) > (int_64)0), [10151])
	$2 = *($3 + [52])
	*(($4 = (($3 + [32]) + [8]))) = *(($2 + [88]))
	*($3 + [32]) = *($2 + [80])
	$10 = *($2 + [26])
	$8 = *($2)
	*((($3 + [64]) + [8])) = *($4)
	*($3 + [64]) = *($3 + [32])
	$2 = [10196]
	$4 = *([10196])
	if ( ($4 == 0) ){ goto $label$15 }
	
.LOOP $label$18:
	if ( ((int_32)$4 == (int_32)[37]) ){ goto $label$16 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( $4 ){ goto $label$18 }
	goto $label$15 
	
.LABEL $label$17
	CALL prints([10123])
	goto $label$12 
	
.LABEL $label$16
	CALL printui($8)
	*(($4 = (($3 + [80]) + [8]))) = *((($3 + [64]) + [8]))
	*($3 + [80]) = *($3 + [64])
	*((($3 + [96]) + [8])) = *($4)
	*($3 + [96]) = *($3 + [80])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$15 }
	
.LOOP $label$20:
	if ( ((int_32)$4 == (int_32)[37]) ){ goto $label$19 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( $4 ){ goto $label$20 }
	goto $label$15 
	
.LABEL $label$19
	CALL printui($10)
	*(($4 = (($3 + [112]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [112]) = *($3 + [96])
	*((($3 + [128]) + [8])) = *($4)
	*($3 + [128]) = *($3 + [112])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$15 }
	
.LOOP $label$22:
	if ( ((int_32)$4 == (int_32)[37]) ){ goto $label$21 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( $4 ){ goto $label$22 }
	goto $label$15 
	
.LABEL $label$21
	CALL $19(($3 + [128]))
	CALL prints(($2 + [1]))
	
.LABEL $label$15
	if ( ((int_64)(CALL $17($0, *(*($3 + [52]) + [8])) == 0) == 0) ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert([1], [12862])
	$2 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$8 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$9 = $8
	$4 = [1]
	$7 = $2
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$26
	$9 = $8
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$7 = ($2 + [1])
	$2 = $7
	if ( $4 ){ goto $label$27 }
	$4 = [1]
	$2 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	$4 = [0]
	
.LABEL $label$23
	CALL eosio_assert($4, [12911])
	*($3 + [128]) = (int_64)0
	*($3 + [136]) = ((int_64)$1 | (int_64)3)
	CALL $20(($3 + [24]), ($3 + [56]), ($3 + [128]))
	$2 = *($3 + [28])
	if ( ($2 == 0) ){ goto $label$30 }
	if ( ((uint_32)((*($2 + [26]) + [-3]) & [255]) > (uint_32)[1]) ){ goto $label$12 }
	CALL eosio_assert(((int_64)*($2 + [64]) > (int_64)0), [10151])
	$2 = *($3 + [28])
	*(($4 = (($3 + [8]) + [8]))) = *(($2 + [88]))
	*($3 + [8]) = *($2 + [80])
	$9 = *($2 + [26])
	$8 = *($2)
	*((($3 + [64]) + [8])) = *($4)
	*($3 + [64]) = *($3 + [8])
	$2 = [10196]
	$4 = *([10196])
	if ( ($4 == 0) ){ goto $label$28 }
	
.LOOP $label$31:
	if ( ((int_32)$4 == (int_32)[37]) ){ goto $label$29 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( $4 ){ goto $label$31 }
	goto $label$28 
	
.LABEL $label$30
	CALL prints([10123])
	goto $label$12 
	
.LABEL $label$29
	CALL printui($8)
	*(($4 = (($3 + [80]) + [8]))) = *((($3 + [64]) + [8]))
	*($3 + [80]) = *($3 + [64])
	*((($3 + [96]) + [8])) = *($4)
	*($3 + [96]) = *($3 + [80])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$28 }
	
.LOOP $label$33:
	if ( ((int_32)$4 == (int_32)[37]) ){ goto $label$32 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( $4 ){ goto $label$33 }
	goto $label$28 
	
.LABEL $label$32
	CALL printui($9)
	*(($4 = (($3 + [112]) + [8]))) = *((($3 + [96]) + [8]))
	*($3 + [112]) = *($3 + [96])
	*((($3 + [128]) + [8])) = *($4)
	*($3 + [128]) = *($3 + [112])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$28 }
	
.LOOP $label$35:
	if ( ((int_32)$4 == (int_32)[37]) ){ goto $label$34 }
	CALL prints_l($2, [1])
	$2 = ($2 + [1])
	$4 = *($2)
	if ( $4 ){ goto $label$35 }
	goto $label$28 
	
.LABEL $label$34
	CALL $19(($3 + [128]))
	CALL prints(($2 + [1]))
	
.LABEL $label$28
	if ( (int_64)(CALL $17($0, *(*($3 + [28]) + [8])) == 0) ){ goto $label$12 }
	
.LABEL $label$13
	$global$0 = ($3 + [144])
	return 
	
.LABEL $label$12
	CALL eosio_assert([0], [10239])
	$global$0 = ($3 + [144])
}

void .FUNC $36 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$1 = [0]
	*($0 + [24]) = [0]
	*($0) = (int_64)0
	*($0 + [26]) = [0]
	*($0 + [28 align=4]) = (int_64)0
	*($0 + [36]) = [0]
	*($0 + [40]) = [0]
	*($0 + [44]) = [0]
	CALL eosio_assert([1], [12862])
	$2 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$2 = $3
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$5 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [12911])
	*(($0 + [56])) = (int_64)1397703940
	*($0 + [48]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (int_64)5459781
	$1 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$2 = $3
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$10 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [12911])
	*(($0 + [72])) = (int_64)1397703940
	*($0 + [64]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (int_64)5459781
	$1 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$2 = $3
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$15 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [12911])
	*(($0 + [88])) = (int_64)1397703940
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [12862])
	$2 = (int_64)5459781
	$1 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$3 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$2 = $3
	$4 = [1]
	$5 = $1
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$19
	$2 = $3
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$4 = ((int_32)$1 < (int_32)[6])
	$5 = ($1 + [1])
	$1 = $5
	if ( $4 ){ goto $label$20 }
	$4 = [1]
	$1 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$4 = [0]
	
.LABEL $label$16
	CALL eosio_assert($4, [12911])
	*(($0 + [104])) = (int_64)1397703940
	*($0 + [96]) = (int_64)0
}

void .FUNC $37 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [16]) = $2
	CALL require_auth($1)
	*($3 + [8]) = ($0 + [104])
	CALL $38(($3 + [24]), ($3 + [8]), ($3 + [16]))
	$4 = [0]
	$5 = *($3 + [28])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ( $5 ? [0] : ((int_64)*($3 + [16]) == (int_64)*($5)) )
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [10003])
	CALL eosio_assert(((int_32)*($4 + [26]) != (int_32)[0]), [10023])
	if ( ((int_64)*($4 + [16]) == (int_64)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [10044])
	
.LABEL $label$2
	if ( ((int_64)CALL $17($0, *($4 + [8])) == (int_64)0) ){ goto $label$3 }
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$3
	CALL eosio_assert([0], [10058])
	$global$0 = ($3 + [32])
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [80])
	$global$0 = $3
	CALL eosio_assert(((int_32)*($1 + [184]) == (int_32)$0), [13421])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$2()), [13467])
	$5 = *(($1 + [8]))
	*(($4 = $3) + [16]) = $5
	$6 = *(($1 + [16]))
	*($4 + [24]) = $6
	*($4 + [40]) = *(($1 + [24]))
	*($4 + [32]) = ((int_64)$6 + (int_64)$5)
	*($4 + [48]) = (int_64))((int_64)0 - *(($1 + [112])))
	*($4 + [56]) = (int_64))((int_64)0 - *(($1 + [128])))
	$5 = *($1)
	$7 = (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
	if ( ((int_32)((uint_32)$7 / (uint_32)[86400]) != (int_32)((uint_32)*($1 + [144]) / (uint_32)[86400])) ){ goto $label$2 }
	$9 = ($1 + [104])
	$8 = *($2 + [12])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)*($9)), [12931])
	$8 = ( *($2 + [12]) ? ($1 + [96]) : ((int_64)*($8) < (int_64)*($1 + [96])) )
	*($1 + [96]) = *($8)
	*($9) = *(($8 + [8]))
	$9 = ($1 + [88])
	$8 = *($2 + [16])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)*($9)), [12931])
	$8 = ( *($2 + [16]) ? ($1 + [80]) : ((int_64)*($8) > (int_64)*($1 + [80])) )
	*($1 + [80]) = *($8)
	*($9) = *(($8 + [8]))
	$8 = *($2 + [4])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)*(($1 + [120]))), [13105])
	$6 = ((int_64)*($1 + [112]) + (int_64)*($8))
	*($1 + [112]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($1 + [112]) < (int_64)4611686018427387904), [13167])
	$8 = *($2 + [8])
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)*(($1 + [136]))), [13105])
	$6 = ((int_64)*($1 + [128]) + (int_64)*($8))
	*($1 + [128]) = $6
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [13148])
	CALL eosio_assert(((int_64)*($1 + [128]) < (int_64)4611686018427387904), [13167])
	$8 = ($1 + [32])
	$9 = ($2 + [4])
	goto $label$1 
	
.LABEL $label$2
	$8 = *($2)
	*($1 + [96]) = *($8)
	*(($1 + [104])) = *(($8 + [8]))
	$8 = *($2)
	*($1 + [80]) = *($8)
	$6 = *(($8 + [8]))
	*(($1 + [72])) = *(($1 + [40]))
	*($1 + [64]) = *($1 + [32])
	*(($1 + [88])) = $6
	$8 = *($2)
	*($1 + [48]) = *($8)
	*(($1 + [56])) = *(($8 + [8]))
	$8 = *($2 + [4])
	*($1 + [112]) = *($8)
	*(($1 + [120])) = *(($8 + [8]))
	$8 = *($2 + [8])
	*($1 + [128]) = *($8)
	*(($1 + [136])) = *(($8 + [8]))
	$9 = ($2 + [4])
	$8 = ($1 + [32])
	
.LABEL $label$1
	$2 = *($2)
	*($8) = *($2)
	*(($8 + [8])) = *(($2 + [8]))
	*(($1 + [144])) = $7
	$2 = *($9)
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)*(($1 + [160]))), [13185])
	$6 = (int_64)
	*($1 + [152]) = $6(*($1 + [152]) - *($2)))
	CALL eosio_assert(((int_64)$6 > (int_64)-4611686018427387904), [13233])
	CALL eosio_assert(((int_64)*($1 + [152]) < (int_64)4611686018427387904), [13255])
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($1 + [152]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [13756])
	CALL eosio_assert(((int_64)$5 == (int_64)*($1)), [13518])
	$3 = $3
	$2 = ($3 + [-192])
	$global$0 = $2
	*($4 + [4]) = $2
	*($4) = $2
	*($4 + [8]) = ($3 + [-12])
	CALL $35($4, $1)
	CALL db_update_i64(*($1 + [188]), (int_64)0, $2, [180])
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$2 = (($4 + [16]) + [8])
	*($4 + [72]) = *(($1 + [8]))
	if ( (CALL $204(($4 + [16]), ($4 + [72]), [8]) == 0) ){ goto $label$4 }
	$8 = ($1 + [192])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$5 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096704, ($4 + [64]), $5)
	*($8) = $3
	
.LABEL $label$5
	CALL db_idx64_update($3, (int_64)0, ($4 + [72]))
	
.LABEL $label$4
	$3 = (($4 + [16]) + [16])
	$8 = ($1 + [16])
	*($4 + [72]) = *($8)
	if ( (CALL $204($2, ($4 + [72]), [8]) == 0) ){ goto $label$6 }
	$7 = ($1 + [196])
	$2 = *($7)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$7 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096705, ($4 + [64]), $5)
	*($7) = $2
	
.LABEL $label$7
	CALL db_idx64_update($2, (int_64)0, ($4 + [72]))
	
.LABEL $label$6
	$2 = (($4 + [16]) + [24])
	*($4 + [72]) = ((int_64)*($8) + (int_64)*(($1 + [8])))
	if ( (CALL $204($3, ($4 + [72]), [8]) == 0) ){ goto $label$8 }
	$8 = ($1 + [200])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$9 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096706, ($4 + [64]), $5)
	*($8) = $3
	
.LABEL $label$9
	CALL db_idx64_update($3, (int_64)0, ($4 + [72]))
	
.LABEL $label$8
	$3 = (($4 + [16]) + [32])
	*($4 + [72]) = *(($1 + [24]))
	if ( (CALL $204($2, ($4 + [72]), [8]) == 0) ){ goto $label$10 }
	$8 = ($1 + [204])
	$2 = *($8)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$11 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096707, ($4 + [64]), $5)
	*($8) = $2
	
.LABEL $label$11
	CALL db_idx64_update($2, (int_64)0, ($4 + [72]))
	
.LABEL $label$10
	$2 = (($4 + [16]) + [40])
	*($4 + [72]) = (int_64))((int_64)0 - *(($1 + [112])))
	if ( (CALL $204($3, ($4 + [72]), [8]) == 0) ){ goto $label$12 }
	$8 = ($1 + [208])
	$3 = *($8)
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$13 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096708, ($4 + [64]), $5)
	*($8) = $3
	
.LABEL $label$13
	CALL db_idx64_update($3, (int_64)0, ($4 + [72]))
	
.LABEL $label$12
	*($4 + [72]) = (int_64))((int_64)0 - *(($1 + [128])))
	if ( (CALL $204($2, ($4 + [72]), [8]) == 0) ){ goto $label$14 }
	$2 = ($1 + [212])
	$1 = *($2)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$15 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6291770479543096709, ($4 + [64]), $5)
	*($2) = $1
	
.LABEL $label$15
	CALL db_idx64_update($1, (int_64)0, ($4 + [72]))
	
.LABEL $label$14
	$global$0 = ($4 + [80])
}

int_32 .FUNC $35 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [32]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [40]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [48]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [56]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [64]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [72]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [80]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [88]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [96]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [104]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [112]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [120]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [128]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [136]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[3]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [144]), [4])
	$2 = (*($0 + [4]) + [4])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [152]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [160]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [168]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($0 + [4]), ($1 + [176]), [8])
	*($0 + [4]) = (*($0 + [4]) + [8])
	return $0
}

void .FUNC $32 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [13276])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [13276])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [13276])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [13276])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $146(*($1), ($0 + [32]))
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [16]
	$4 = ($1 + [16])
	$6 = *($1 + [16])
	$5 = *(($1 + [20]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$2 }
	$3 = (($7 & [-16]) + $3)
	
.LABEL $label$2
	$6 = *(($1 + [32]))
	$5 = *($1 + [28])
	$3 = (($5 - $3) - $6)
	$7 = ($1 + [28])
	$8 = (CASTING uint_64)(uint_32 ($6 - $5))
	
.LOOP $label$3:
	$3 = ($3 + [-1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	$5 = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $31($0, ([0] - $3))
	$5 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	
.LABEL $label$4
	*($2) = $3
	*($2 + [8]) = $5
	$0 = ($5 - $3)
	CALL eosio_assert(((int_32)$0 > (int_32)[7]), [13276])
	CALL memcpy($3, $1, [8])
	CALL eosio_assert(((int_32)($0 + [-8]) > (int_32)[7]), [13276])
	CALL memcpy(($3 + [8]), ($1 + [8]), [8])
	*($2 + [4]) = ($3 + [16])
	CALL $137(CALL $136($2, $4), $7)
	$global$0 = ($2 + [16])
}

void .FUNC $30 (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_64 $4, int_64 $5, int_64 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$7 = ($global$0 - [128])
	$global$0 = $7
	*($7 + [20]) = [58]
	*($7 + [16]) = [1701144106]
	*(($8 = (($8 = (($7 + [16]) | [5])) + CALL $5($8, $2, [20])))) = [58]
	*(($8 = (($8 = ($8 + [1])) + CALL $5($8, $3, [20])))) = [58]
	*(($8 = (($8 = ($8 + [1])) + CALL $5($8, $4, [20])))) = [58]
	*(($8 = (($8 = ($8 + [1])) + CALL $5($8, $5, [20])))) = [58]
	*((($8 = ($8 + [1])) + CALL $5($8, $6, [20]))) = [42]
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$8 = CALL $205(($7 + [16]))
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$4 }
	*($7) = ($8 << [1])
	$9 = ($7 | [1])
	if ( $8 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($7) = ($10 | [1])
	*($7 + [8]) = $9
	*($7 + [4]) = $8
	
.LABEL $label$3
	CALL memcpy($9, ($7 + [16]), $8)
	
.LABEL $label$2
	*(($9 + $8)) = [0]
	if ( (*($1) & [1]) ){ goto $label$6 }
	*($1) = [0]
	goto $label$5 
	
.LABEL $label$6
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$5
	CALL $173($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$global$0 = ($7 + [128])
	return (unreachable)
	
.LABEL $label$1
	CALL $168($7)
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $178($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $210 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [24000])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [23808]
	$3 = (((int_32)$1 * (int_32)[12]) + [23808])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $198 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL $197([24272], *([0] + [20]))
	$1 = [0]
	
.LOOP $label$4:
	if ( ((int_32)*(($1 + [24176])) == (int_32)$0) ){ goto $label$3 }
	$2 = [87]
	$1 = ($1 + [1])
	if ( ((int_32)$1 != (int_32)[87]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$2 = $1
	if ( ($1 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = [24272]
	
.LOOP $label$5:
	$0 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $0 ){ goto $label$5 }
	$1 = $3
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	return CALL $197($3, *([0] + [20]))
	return .LABEL $label$1
}

void .FUNC $199 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$6 = ($5) & [32767]
	if ( ((int_32)$6) == (int_32)[32767]) ){ goto $label$1 }
	if ( $6 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($4, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL $199(($4 + [16]), *($4), *(($4 + [8])), $3)
	$5 = (*($3) + [-120])
	$2 = *($4 + [24])
	$1 = *($4 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($5 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($5 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	
.LABEL $label$2
	*($3) = $5
	
.LABEL $label$1
	*($0) = $1
	*($0 + [8]) = $2
	$global$0 = ($4 + [32])
}

int_32 .FUNC $196 (int_32 $0, int_32 $1)
{
	return $0
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	return CALL $196($0, $1)
}

int_32 .FUNC $194 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL $181()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL $181()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC $195 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL $194($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $192 (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC $193 (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [2] ? [3] : (int_64)(((int_64)$2 | (int_64)$0) == 0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

int_32 .FUNC $190 (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $191 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($2 + [20])
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$5 = [0]
	if ( CALL $190($2) ){ goto $label$2 }
	$4 = *($2 + [20])
	if ( ((*(($2 + [16])) - $4) <= $1) ){ goto $label$1 }
	
.LABEL $label$3
	$6 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$5 }
	$6 = [0]
	$5 = $0
	$3 = [0]
	
.LOOP $label$6:
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$5 }
	$3 = ($3 + [1])
	$7 = ($5 + $1)
	$8 = ($5 + [-1])
	$5 = $8
	if ( ((int_32)*(($7 + [-1])) != (int_32)[10]) ){ goto $label$6 }
	$6 = (($1 - $3) + [1])
	$5 = CALL int_32 $2((int_32 $0), (int_32 $6), (int_32 *($2 + [36])))
	if ( ($5 <= $6) ){ goto $label$2 }
	$0 = (($8 + $1) + [1])
	$4 = *(($2 + [20]))
	$1 = ($3 + [-1])
	
.LABEL $label$5
	CALL memcpy($4, $0, $1)
	*(($3 = ($2 + [20]))) = (*($3) + $1)
	$5 = ($6 + $1)
	
.LABEL $label$2
	return $5
	return .LABEL $label$1
}