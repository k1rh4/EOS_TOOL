(data (i32.const 8192) "read_transaction failed\00malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 8303) ".\00")
(data (i32.const 8305) " \00")
(data (i32.const 8307) "how did u get so big asset?\00stoull\00")
(data (i32.const 8342) ";\00")
(data (i32.const 8344) "active\00")
(data (i32.const 8351) "transfer\00")
(data (i32.const 8360) "Inner exception : unknown asset symbol \00%d\00")
(data (i32.const 8403) "onerror\00%u\00")
(data (i32.const 8414) "eosio\00")
(data (i32.const 8420) "onerror action\'s are only valid from the \"eosio\" system account\00%lu\00")
(data (i32.const 8488) "such easy account is not exist : \00")
(data (i32.const 8522) "such easy account is turned off: \00%llu\00")
(data (i32.const 8561) "virtualusers\00")
(data (i32.const 8574) "profit_sharing should be less than 100 (%)\00")
(data (i32.const 8617) "bingobetgame\00")
(data (i32.const 17052) "hash duplicate : h1 : \00")
(data (i32.const 17075) " h2: \00")
(data (i32.const 17081) "variable \00")
(data (i32.const 17091) " not found\00")
(data (i32.const 17102) "There is no avaliable hash in tHashes table\00")
(data (i32.const 17146) "i:\00")
(data (i32.const 17149) " requirehashs should be on top of the tHashes table and be in exact order. h1: \00: no conversion\00")
(data (i32.const 17245) ", h2: \00: out of range\00")
(data (i32.const 17267) "addregrecord\00")
(data (i32.const 17280) "spreadbet\00")
(data (i32.const 17290) "The Game is on maintenance. Wait a bit\00")
(data (i32.const 17329) "game of that type is not exist\00")
(data (i32.const 17360) "Current Game is on maintenance. Wait a bit\00")
(data (i32.const 17403) "caller_id and game_type gor jackpot should be equal. Current:\00")
(data (i32.const 17465) " & \00")
(data (i32.const 17469) "Jackpot of that type \00")
(data (i32.const 17491) " already exists. Its hash: \00")
(data (i32.const 17519) "that hash already used\00")
(data (i32.const 17542) "unable to find key\00")
(data (i32.const 17561) "procaction\00")
(data (i32.const 17572) "There is no actions with current seed: \00")
(data (i32.const 17612) "getCurrentTransaction: read_transaction failed\00")
(data (i32.const 17659) "CheckTransfer: wrong number of actions in transaction. Should be two, where first should be eosio.token::transfer, cur: \00")
(data (i32.const 17780) "CheckTransfer: wrong second action smart contract executor, should be \00")
(data (i32.const 17851) " , first should be transfer\00")
(data (i32.const 17879) "CheckTransfer: inner exception. Check call params. Method should be \00")
(data (i32.const 17948) "dosubbalance\00")
(data (i32.const 17961) "CheckTransfer: inner exception. Third transaction can be virtualusers:dosubbalance only\00")
(data (i32.const 18049) "CheckTransfer: First action should be exactly transfer with avaliable currency list: \00")
(data (i32.const 18135) "CheckTransfer: wrong payer\00")
(data (i32.const 18162) "CheckTransfer: wrong asset recepient\00")
(data (i32.const 18199) "CheckTransfer: payment should not be zero\00")
(data (i32.const 18241) "CheckTransfer: payment should be in \00")
(data (i32.const 18278) "Bad transfering account. Got : \00")
(data (i32.const 18310) " , should be :\00")
(data (i32.const 18325) "976. CheckTransfer: only one payed action is allowed\00")
(data (i32.const 18378) "976. CheckTransfer: old payment cannot be used\00")
(data (i32.const 18425) "CheckTransfer: Bad stored action code: Was\00")
(data (i32.const 18468) ", action: \00")
(data (i32.const 18479) ", receiver: \00")
(data (i32.const 18492) "CheckTransfer: Wrong money amount transfer : \00")
(data (i32.const 18538) ", \00")
(data (i32.const 18541) "WIN\00")
(data (i32.const 18545) "JACKPOT\00")
(data (i32.const 18553) "PROFIT\00")
(data (i32.const 18560) "BINGO FOR PLAY\00")
(data (i32.const 18575) "inittransfer\00")
(data (i32.const 18588) "only virtualusers acc avaliable for virtual users\00")
(data (i32.const 18638) "user_id cannot be empty\00")
(data (i32.const 18662) "Adding user, \00")
(data (i32.const 18676) " is nod valid account.\00")
(data (i32.const 18699) "changeref. Adding user, \00")
(data (i32.const 18724) "easy accounts cannot use unexist users!\00")
(data (i32.const 18768) "\04EOS\00\00\00\00")
(data (i32.const 18776) "0123456789\00")
(data (i32.const 18787) "Incorrect symbol of asset\00")
(data (i32.const 18813) "Should be at least 1 bet\00")
(data (i32.const 18838) "bets_pos and bets_amount size() mismatch\00")
(data (i32.const 18879) "bets_pos[i] should be in [0..\00")
(data (i32.const 18909) "] Pos:\00")
(data (i32.const 18916) "bad stake at pos \00")
(data (i32.const 18934) "unvalid asset\00")
(data (i32.const 18948) "Roulette is on maintenance. Wait a bit\00")
(data (i32.const 18987) "Roulette bet is too low\00")
(data (i32.const 19011) "Roulette bet is too high\00")
(data (i32.const 19036) "Dice is on maintenance. Wait a bit\00")
(data (i32.const 19071) "Dice bet is too low\00")
(data (i32.const 19091) "Dice bet is too high\00")
(data (i32.const 19112) "Dice roll is to low. Should be >= than \00")
(data (i32.const 19152) "Dice roll is to high. Should be <= than \00")
(data (i32.const 19193) "luckyblcklim\00")
(data (i32.const 19206) "There are no avaliable Lucky Draw games in that block. Try a bit later\00")
(data (i32.const 19277) "Lucky draw is on maintenance. Wait a bit\00")
(data (i32.const 19318) "All prizes was send. Try another currency\00")
(data (i32.const 19360) "Unknown currency\00")
(data (i32.const 19377) "bet lines size should be in [1..5] range\00")
(data (i32.const 19418) "You cannot bet on same lines! Line: \00")
(data (i32.const 19455) "slot type should be in [7..9] range\00")
(data (i32.const 19491) "Slots is on maintenance. Wait a bit\00")
(data (i32.const 19527) "Slot bet is too low\00")
(data (i32.const 19547) "Slot bet is too high\00")
(data (i32.const 19568) "baseids_from_usactions: unknown game type! Got:\00")
(data (i32.const 19616) "drawbase\00")
(data (i32.const 19632) "\04BINGO\00\00")
(data (i32.const 19640) "drawbngcoef\00")
(data (i32.const 19652) "slot game result is not valid : \00")
(data (i32.const 19685) "bad stake vectors\00")
(data (i32.const 19703) "recroulgame\00")
(data (i32.const 19715) "-\00")
(data (i32.const 19717) "basegameact_ids size should be 1. Now : \00")
(data (i32.const 19758) "id in tDiceActions not found : \00")
(data (i32.const 19790) "Payout from bingobet.one . Game : Dice. Roll under : \00")
(data (i32.const 19844) " , dice roll : \00")
(data (i32.const 19860) "bingocoefdc\00")
(data (i32.const 19872) "Your BINGO tokens for playing Dice on bingobet.one\00")
(data (i32.const 19923) "recdicegame\00")
(data (i32.const 19935) "W\00")
(data (i32.const 19937) "L\00")
(data (i32.const 19939) "slots. unreachable code\00")
(data (i32.const 19963) "bingocpurent\00")
(data (i32.const 19976) "Payout from bingobet.one . Game : Slot\00")
(data (i32.const 20015) "bngcoefslbl\00")
(data (i32.const 20027) "bngcoefsllr\00")
(data (i32.const 20039) "bngcoefslbw\00")
(data (i32.const 20051) "bngcoefsl\00")
(data (i32.const 20061) "Your BINGO tokens for playing Slot on bingobet.one\00")
(data (i32.const 20112) "recslotgame\00")
(data (i32.const 20124) "id in tSlotBonusActs not found : \00")
(data (i32.const 20158) "bad bonus count, should be [3..5], got: \00")
(data (i32.const 20199) "Payout from bingobet.one . Your BingoBet bonuseslot game bonus!\00")
(data (i32.const 20263) "recslbnsgame\00")
(data (i32.const 20276) "Payout from bingobet.one . Your BingoBet lucky draw Prize! Draw : \00")
(data (i32.const 20343) ". To get more - place a bet!\00")
(data (i32.const 20372) "recluckygame\00")
(data (i32.const 20385) "recfreelucky\00")
(data (i32.const 20398) "id in tLuckActions not found : \00")
(data (i32.const 20430) "CGameProcess::proceed_action: us_act.server_seed.size(), \00")
(data (i32.const 20488) "procaction:: unknown game type\00")
(data (i32.const 20519) "oncancelgame\00")
(data (i32.const 20532) "You can play only not started games\00")
(data (i32.const 20568) "Betting time is over for this game, expire time:\00")
(data (i32.const 20617) "playgame\00")
(data (i32.const 20626) "stake symbol mismatch with transfer symbol\00")
(data (i32.const 20669) "you should pay \00")
(data (i32.const 20685) " to play with that bet\00")
(data (i32.const 20708) "Betting time is over for this game\00")
(data (i32.const 20743) "playamroul\00")
(data (i32.const 20754) "playeuroul\00")
(data (i32.const 20765) "playamroulsh\00")
(data (i32.const 20778) "playeuroulsh\00")
(data (i32.const 20791) "playdice\00")
(data (i32.const 20800) "luckydelay\00")
(data (i32.const 20811) "You have no lucky draws, next draw will be avaliable after \00")
(data (i32.const 20871) " seconds\00")
(data (i32.const 20880) "only slot_type == 7, 8, 9 is avaliable now\00")
(data (i32.const 20923) "playslot\00")
(data (i32.const 20932) "User has no bonuses\00")
(data (i32.const 20952) "clearoldjck\00")
(data (i32.const 20964) "addplayerjck\00")
(data (i32.const 20977) "HOURLY\00")
(data (i32.const 20984) "DAILY\00")
(data (i32.const 20990) "WEEKLY\00")
(data (i32.const 20997) "unreachable code\00")
(data (i32.const 21014) "jackhourmin\00")
(data (i32.const 21026) "jackdailmin\00")
(data (i32.const 21038) "jackweekmin\00")
(data (i32.const 21050) "Jackpot shadow table is not clear. Restart clearance if it broken, or wait it done\00")
(data (i32.const 21133) "recjackpot\00")
(data (i32.const 21144) "inner exception during jackpot \00")
(data (i32.const 21176) " processing. Id not found : \00")
(data (i32.const 21205) "jckclrcount\00")
(data (i32.const 21217) "bingobetserv\00")
(data (i32.const 21230) "Permission denied. Should be server or contract\00")
(data (i32.const 21278) "that method is not allowed for easy accounts. Use playgame method\00")
(data (i32.const 21344) "976. Only one payed action in one transaction is allowed : \00")
(data (i32.const 21404) "id_user_action should be from nextids table. got: \00")
(data (i32.const 21455) " : \00")
(data (i32.const 21459) "wizardsgames\00")
(data (i32.const 21472) "Payout from bingobet.one . Game : Wizards Slots\00")
(data (i32.const 21520) "Your BINGO tokens for playing Wizards Slots on bingobet.one\00")
(data (i32.const 21580) "Payout from bingobet.one . Your BingoBet Wizard Slots game bonus!\00")
(data (i32.const 21646) "play game method is only avaliable for easy entire contracts\00")
(data (i32.const 21707) "playbonuslot\00")
(data (i32.const 21720) "data1.size <= 1\00")
(data (i32.const 21736) "game is on the maintanance\00")
(data (i32.const 21763) "data2 should be empty\00")
(data (i32.const 21785) "that game type is unavaliable to play with!\00")
(data (i32.const 21829) "bngcoeflot\00")
(data (i32.const 21840) "Your BINGO tokens for playing Lottery on bingobet.one\00")
(data (i32.const 21894) "sendtokens\00")
(data (i32.const 21905) "there\'s no such information about payment \00")
(data (i32.const 21948) "checkpay\00")
(data (i32.const 21957) "All payment was already sended\00")
(data (i32.const 21988) "Unknown game status\00")
(data (i32.const 22008) "eosluckybet\00")
(data (i32.const 22024) "\08EBTC\00\00\00")
(data (i32.const 22032) "ebtcluckybet\00")
(data (i32.const 22048) "\08EETH\00\00\00")
(data (i32.const 22056) "eethluckybet\00")
(data (i32.const 22069) "bngluckybet\00")
(data (i32.const 22088) "\08EUSD\00\00\00")
(data (i32.const 22096) "eusdluckybet\00")
(data (i32.const 22109) "spread. game not found : \00")
(data (i32.const 22135) "bingoprofits\00")
(data (i32.const 22148) "Transfer profits for distribution to BINGO holders\00")
(data (i32.const 22199) "precalc\00")
(data (i32.const 22207) "sendprofits\00")
(data (i32.const 22219) "benefdelay\00")
(data (i32.const 22230) "nxtprfttm\00")
(data (i32.const 22240) "luckeosamnt\00")
(data (i32.const 22252) "luckbngamnt\00")
(data (i32.const 22264) "updateluck\00")
(data (i32.const 22275) "No referrals found for you. You can get your referral link at bingobet.one !\00")
(data (i32.const 22352) "player cannot be itself referral. Contact with devs.\00")
(data (i32.const 22405) "Payout from bingobet.one to easy account\00")
(data (i32.const 22446) "There are not enough easy account tokens to claim\00")
(data (i32.const 22496) "nothing merge\00")
(data (i32.const 22510) "bingobet_percent <= 100\00")
(data (i32.const 22534) "spread_percent <= 100\00")
(data (i32.const 22556) "game_expectedvalue < 100000\00")
(data (i32.const 22584) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 22633) "invalid symbol name\00")
(data (i32.const 22653) "difference. Mismatch symbols\00")
(data (i32.const 22682) "difference. Result cant be negative\00")
(data (i32.const 22718) "string is too long to be a valid name\00")
(data (i32.const 22756) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 22823) "character is not in allowed character set for names\00")
(data (i32.const 22875) "write\00")
(data (i32.const 22881) "SYS\00")
(data (i32.const 22885) "eosio.token\00")
(data (i32.const 22897) "EOS\00")
(data (i32.const 22901) "bingobetoken\00")
(data (i32.const 22914) "BINGO\00")
(data (i32.const 22920) "letitplaytkn\00")
(data (i32.const 22933) "PLAY\00")
(data (i32.const 22938) "bitpietokens\00")
(data (i32.const 22951) "EUSD\00")
(data (i32.const 22956) "EBTC\00")
(data (i32.const 22961) "EETH\00")
(data (i32.const 22966) "eosiomeetone\00")
(data (i32.const 22979) "MEETONE\00")
(data (i32.const 22987) "eosiotptoken\00")
(data (i32.const 23000) "TPT\00")
(data (i32.const 23004) "octtothemoon\00")
(data (i32.const 23017) "OCT\00")
(data (i32.const 23024) "\f4Y\00\00")
(data (i32.const 23028) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 23061) "EOS, BINGO, PLAY, EUSD, EBTC, EETH, MEETONE, TPT, OCT\00")
(data (i32.const 23115) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 23174) "dapp name of userdef should be set\00")
(data (i32.const 23209) "user_id of userdef should be set\00")
(data (i32.constc\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00$\00\00\00\00\00\00\00H\00\00\00\00\00\00\000\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\90\00\00\00\00\00\00\00 \01\00\00\00\00\00\00@\02\00\00\00\00\00\00\80\01\00\00\00\00\00\00\00\03\00\00\00\00\00\00\80\04\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00$\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\90\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\00 \01\00\00\00\00\00\00@\02\00\00\00\00\00\00\80\04\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00$\00\00\00\00\00\00\00\18\00\00\00\00\00\00\000\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\90\00\00\00\00\00\00\00 \01\00\00\00\00\00\00\c0\00\00\00\00\00\00\00\80\01\00\00\00\00\00\00@\02\00\00\00\00\00\00\80\04\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00$\00\00\00\00\00\00\00H\00\00\00\00\00\00\000\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\90\00\00\00\00\00\00\00 \01\00\00\00\00\00\00@\02\00\00\00\00\00\00\80\01\00\00\00\00\00\00\00\03\00\00\00\00\00\00\80\04\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\18\00\00\00\07\00\00\00\00\00\00\00\05\00\00\00 \00\00\00\0c\00\00\00 \00\00\00\0e\00\00\00\00\00\00\00p\00\00\00\00\00\00\00\80\03\00\00\00\00\00\00\00\1c\00\00\00\00\00\00\00\e0\00\00\00\00\00\00\00\00\07\00\00\00\00\00\00\008\00\00\00\00\00\00\00\c0\01\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00p\00\00\00\00\00\00\00\80\03\00\00\00\00\00\00\00\1c\00\00\006\00\00\00\00\00\00\00l\00\00\00\00\00\00\00\b0\01\00\00\00\00\00\00`\03\00\00\00\00\00\00\80\0d\00\00\00\00\00\00\00\1b\00\00\00\00\00\00\00l\00\00\00\00\00\00\00\d8\00\00\00\00\00\00\00`\03\00\00\00\00\00\00\c0\06\00\00\00\00\00\00\00\1b\00\00\00\00\00\00\006\00\00\00\00\00\00\00\d8\00\00\00\00\00\00\00\b0\01\00\00\00\00\00\00\c0\06\00\00\00\00\00\00\80\0d\00\00\00\00\00\00\006\00\00\00\00\00\00\00l\00\00\00\00\00\00\00\b0\01\00\00\00\00\00\00`\03\00\00\00\00\00\00\80\0d\00\00\00\00\00\00\00\1b\00\00\00\0f\00\00\00 \00\00\00~\00\00\00\00\00\00\00\f0\03\00\00\00\00\00\00\80\1f\00\00\00\00\00\00\00\fc\00\00\00\00\00\00\00\e0\07\00\00\00\00\00\00\00?\00\00\00\00\00\00\00\f8\01\00\00\00\00\00\00\c0\0f\00\00\00\00\00\00\00~\00\00\00\00\00\00\00\f0\03\00\00\00\00\00\00\80\1f\00\00\00\fe\1f\00\00\00\00\00\00\00\e0\ff\01\00\00\00\00\00\00\00\fe\1f\00\00\00\92$I\92\04\00\00\00$I\92$\t\00\00\00H\92$I\12\00\00\00\fe\ff\07\00\00\00\00\00TUUU\15\00\00\00\aaR\adJ\15\00\00\00T\adR\b5\n\00\00\00\aa\aa\aa\aa\n\00\00\00\00\00\f8\ff\1f\00\00\00")
(data (i32.constt\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00$\00\00\00\00\00\00\00H\00\00\00\00\00\00\000\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\90\00\00\00\00\00\00\00 \01\00\00\00\00\00\00@\02\00\00\00\00\00\00\80\01\00\00\00\00\00\00\00\03\00\00\00\00\00\00\80\04\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\18\00\00\00\00\00\00\00$\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\90\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\c0\00\00\00\00\00\00\00 \01\00\00\00\00\00\00@\02\00\00\00\00\00\00\80\04\00\00\00\00\00\00\00\03\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00$\00\00\00\00\00\00\00\18\00\00\00\00\00\00\000\00\00\00\00\00\00\00H\00\00\00\00\00\00\00\90\00\00\00\00\00\00\00 \01\00\00\00\00\00\00\c0\00\00\00\00\00\00\00\80\01\00\00\00\00\00\00@\02\00\00\00\00\00\00\80\04\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\06\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00$\00\00\00\00\00\00\00H\00\00\00\00\00\00\000\00\00\00\00\00\00\00`\00\00\00\00\00\00\00\90\00\00\00\00\00\00\00 \01\00\00\00\00\00\00@\02\00\00\00\00\00\00\80\01\00\00\00\00\00\00\00\03\00\00\00\00\00\00\80\04\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\18\00\00\00\07\00\00\00\00\00\00\00\0d\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00p\00\00\00\00\00\00\00\80\03\00\00\00\00\00\00\00\1c\00\00\00\00\00\00\00\e0\00\00\00\00\00\00\00\00\07\00\00\00\00\00\00\008\00\00\00\00\00\00\00\c0\01\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00p\00\00\00\00\00\00\00\80\03\00\00\00\00\00\00\00\1c\00\00\006\00\00\00\00\00\00\00l\00\00\00\00\00\00\00\b0\01\00\00\00\00\00\00`\03\00\00\00\00\00\00\80\0d\00\00\00\00\00\00\00\1b\00\00\00\00\00\00\00l\00\00\00\00\00\00\00\d8\00\00\00\00\00\00\00`\03\00\00\00\00\00\00\c0\06\00\00\00\00\00\00\00\1b\00\00\00\00\00\00\006\00\00\00\00\00\00\00\d8\00\00\00\00\00\00\00\b0\01\00\00\00\00\00\00\c0\06\00\00\00\00\00\00\80\0d\00\00\00\00\00\00\006\00\00\00\00\00\00\00l\00\00\00\00\00\00\00\b0\01\00\00\00\00\00\00`\03\00\00\00\00\00\00\80\0d\00\00\00\00\00\00\00\1b\00\00\00\0f\00\00\00\00\00\00\00~\00\00\00\00\00\00\00\f0\03\00\00\00\00\00\00\80\1f\00\00\00\00\00\00\00\fc\00\00\00\00\00\00\00\e0\07\00\00\00\00\00\00\00?\00\00\00\00\00\00\00\f8\01\00\00\00\00\00\00\c0\0f\00\00\00\00\00\00\00~\00\00\00\00\00\00\00\f0\03\00\00\00\00\00\00\80\1f\00\00\00\fe\1f\00\00\00\00\00\00\00\e0\ff\01\00\00\00\00\00\00\00\fe\1f\00\00\00\92$I\92\04\00\00\00$I\92$\t\00\00\00H\92$I\12\00\00\00\fe\ff\07\00\00\00\00\00TUUU\15\00\00\00\aaR\adJ\15\00\00\00T\adR\b5\n\00\00\00\aa\aa\aa\aa\n\00\00\00\00\00\f8\ff\1f\00\00\00")
(data (i32.constc\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t
(data (i32.constc\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t\00\00\00\00\00\00\00\t
(data (i32.const 28336) "\00\00\00\00\96\00^\01\bc\02\00\00\00\00K\00\96\00,\01\00\00\00\002\00d\00\c8\00\00\00\05\00\19\002\00d\00\00\00\05\00\19\002\00d\00\00\00\03\00\0f\00\19\002\00\00\00\02\00\08\00\0f\00\19\00\00\00\01\00\03\00\t\00\0f\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 28432) "\00\00\00\00\96\00\fa\00\f4\01\00\00\00\00d\00\96\00\c8\00\00\00\00\00\19\00K\00\96\00\00\00\05\00\19\002\00d\00\00\00\05\00\19\002\00d\00\00\00\03\00\n\00\19\002\00\00\00\02\00\08\00\0f\00#\00\00\00\01\00\05\00\n\00\0f\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 28528) "\00\00\00\00d\00\c8\00\90\01\00\00\00\002\00d\00\c8\00\00\00\00\00\19\00K\00}\00\00\00\05\00\14\00(\00P\00\00\00\05\00\14\00(\00P\00\00\00\03\00\t\00\19\002\00\00\00\02\00\08\00\0f\00\1e\00\00\00\01\00\05\00\n\00\0f\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 28618) "attempt to add asset with different symbol\00")
(data (i32.const 28661) "addition underflow\00")
(data (i32.const 28680) "addition overflow\00")
(data (i32.const 28698) "cannot increment end iterator\00")
(data (i32.const 28728) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 28779) "error reading iterator\00")
(data (i32.const 28802) "get\00")
(data (i32.const 28806) "read\00")
(data (i32.const 28811) "multiplication overflow\00")
(data (i32.const 28835) "multiplication underflow\00")
(data (i32.const 28864) "\07\07\07\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06\05\05\05\05\05\05\03\03\03\03\04\04\04\04\02\02\02\01\01\08\00\t")
(data (i32.const 28912) "\07\07\07\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06\06\05\05\05\05\05\05\05\03\03\03\03\04\04\04\04\02\02\02\01\01\08\00\t")
(data (i32.const 28960) "\07\07\07\07\07\07\07\07\06\06\06\06\06\06\06\06\06\06\05\05\05\05\05\05\05\03\03\03\03\04\04\04\04\02\02\02\01\01\08\00\t")
(data (i32.const 29088) "Dice key not found : \00")
(data (i32.const 29110) "refund for cancelling bet\00")
(data (i32.const 29136) "cannot pass end iterator to erase\00")
(data (i32.const 29170) "object passed to erase is not in multi_index\00")
(data (i32.const 29215) "cannot erase objects in table of another contract\00")
(data (i32.const 29265) "attempt to remove object that was not in multi_index\00")
(data (i32.const 29320) "p\17\00\00\00\00\00\00d\19\00\00\00\00\00\00\a0\0f\00\00\00\00\00\00")
(data (i32.const 29344) "cannot pass end iterator to modify\00")
(data (i32.const 29379) "object passed to modify is not in multi_index\00")
(data (i32.const 29425) "cannot modify objects in table of another contract\00")
(data (i32.const 29476) "updater cannot change primary key when modifying an object\00")
(data (i32.const 29535) "cannot create objects in table of another contract\00")
(data (i32.const 29586) "string is too long to be a valid symbol_code\00")
(data (i32.const 29631) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 29684) "0123456789abcdef\00")
(data (i32.const 29701) "singleton does not exist\00")
(data (i32.const 29726) "onadduser\00")
(data (i32.const 29736) "maxavldebt\00")
(data (i32.const 29747) "roulette action \00")
(data (i32.const 29764) "mismatch ids: \00")
(data (i32.const 29779) "Payout from bingobet.one . Game : \00")
(data (i32.const 29814) "American\00")
(data (i32.const 29823) "European\00")
(data (i32.const 29832) " Roulette. Spin result : \00")
(data (i32.const 29858) "bingocoefrl\00")
(data (i32.const 29870) "Your BINGO tokens for playing \00")
(data (i32.const 29901) " Roulette on bingobet.one\00")
(data (i32.const 29927) "Only one play for each user during game session is avaliable\00")
(data (i32.const 29988) "unknown jackpot type\00")
(data (i32.const 30009) "Can\'t find jackpot type with specified index\00")
(data (i32.const 30054) "next primary key in table is at autoincrement limit\00")
(data (i32.const 30106) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 30160) "cannot decrement iterator at beginning of table\00")
(data (i32.const 30208) "22<2d")
(data (i32.const 30213) "CONGRATULATIONS! YOU ARE \00")
(data (i32.const 30239) " JACKPOT WINNER!\00")
(data (i32.const 30256) "\00\00\00\00\00\00\00\008\00\00\009\00\00\00:\00\00\00;\00\00\00<\00\00\00=\00\00\00>\00\00\00")
(data (i32.const 30292) "\00\00\00\00\00\00\00\008\00\00\00?\00\00\00@\00\00\00A\00\00\00B\00\00\00C\00\00\00D\00\00\00")
(data (i32.const 30328) "already set\00")
(data (i32.const 30340) "debtdelay\00")
(data (i32.const 30350) "Referral payout from bingobet.one\00")
(data (i32.const 30384) "There are not enough referral tokens to claim\00")
(data (i32.const 30432) "mH\00\00\00\00\00\00qH\00\00yH\00\00\80H\00\00")
(data (i32.const 30452) "\f1Q\00\00\f8Q\00\00\feQ\00\00")
(data (i32.const 30464) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 30544) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 30801) "\00\01\02\04\07\03\06\05\00")
(import "env" "eosio_assert" (func $fimport$0 (param i32 i32)))
(import "env" "sha256" (func $fimport$1 (param i32 i32 i32)))
(import "env" "db_find_i64" (func $fimport$2 (param i64 i64 i64 i64) (result i32)))
(import "env" "transaction_size" (func $fimport$3 (result i32)))
(import "env" "read_transaction" (func $fimport$4 (param i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$5 (param i32 i32 i32) (result i32)))
(import "env" "__multi3" (func $fimport$6 (param i32 i64 i64 i64 i64)))
(import "env" "__udivti3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "memset" (func $fimport$8 (param i32 i32 i32) (result i32)))
(import "env" "send_inline" (func $fimport$9 (param i32 i32)))
(import "env" "action_data_size" (func $fimport$10 (result i32)))
(import "env" "read_action_data" (func $fimport$11 (param i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$12 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$13 (param i64)))
(import "env" "current_receiver" (func $fimport$14 (result i64)))
(import "env" "current_time" (func $fimport$15 (result i64)))
(import "env" "cancel_deferred" (func $fimport$16 (param i32) (result i32)))
(import "env" "send_deferred" (func $fimport$17 (param i32 i64 i32 i32 i32)))
(import "env" "db_lowerbound_i64" (func $fimport$18 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_remove_i64" (func $fimport$19 (param i32)))
(import "env" "db_idx64_find_primary" (func $fimport$20 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$21 (param i32)))
(import "env" "db_store_i64" (func $fimport$22 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx128_lowerbound" (func $fimport$23 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "abort" (func $fimport$24))
(import "env" "is_account" (func $fimport$25 (param i64) (result i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$26 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "tapos_block_num" (func $fimport$27 (result i32)))
(import "env" "tapos_block_prefix" (func $fimport$28 (result i32)))
(import "env" "memmove" (func $fimport$29 (param i32 i32 i32) (result i32)))
(import "env" "has_auth" (func $fimport$30 (param i64) (result i32)))
(import "env" "db_idx64_store" (func $fimport$31 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_next" (func $fimport$32 (param i32 i32) (result i32)))
(import "env" "db_get_i64" (func $fimport$33 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$34 (param i32 i64 i32 i32)))
(import "env" "db_idx64_update" (func $fimport$35 (param i32 i64 i32)))
(import "env" "db_idx128_store" (func $fimport$36 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx128_find_primary" (func $fimport$37 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx128_remove" (func $fimport$38 (param i32)))
(import "env" "db_idx128_next" (func $fimport$39 (param i32 i32) (result i32)))
(import "env" "db_idx128_update" (func $fimport$40 (param i32 i64 i32)))
(import "env" "db_previous_i64" (func $fimport$41 (param i32 i32) (result i32)))
(import "env" "db_end_i64" (func $fimport$42 (param i64 i64 i64) (result i32)))
(import "env" "prints_l" (func $fimport$43 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$44 (param i64 i64 i64 i64) (result i32)))
(import "env" "__eqtf2" (func $fimport$45 (param i64 i64 i64 i64) (result i32)))
(import "env" "__multf3" (func $fimport$46 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$47 (param i32 i64 i64 i64 i64)))
(import "env" "__subtf3" (func $fimport$48 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$49 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$50 (param i64 i64) (result i32)))
(import "env" "__floatunsitf" (func $fimport$51 (param i32 i32)))
(import "env" "__fixtfsi" (func $fimport$52 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$53 (param i32 i32)))
(import "env" "__extenddftf2" (func $fimport$54 (param i32 f64)))
(import "env" "__extendsftf2" (func $fimport$55 (param i32 f32)))
(import "env" "__divtf3" (func $fimport$56 (param i32 i64 i64 i64 i64)))
(import "env" "__letf2" (func $fimport$57 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfdf2" (func $fimport$58 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$59 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$60 (param i64 i64) (result f32)))
(import "env" "set_blockchain_parameters_packed" (func $fimport$61 (param i32 i32)))
(import "env" "get_blockchain_parameters_packed" (func $fimport$62 (param i32 i32) (result i32)))
(export "memory" (memory $0))
(export "__heap_base" (global $global$1))
(export "__data_end" (global $global$2))
(export "apply" (func $17))
(export "_ZdlPv" (func $702))
(export "_Znwj" (func $700))
(export "_Znaj" (func $701))
(export "_ZdaPv" (func $703))
(export "_ZnwjSt11align_val_t" (func $704))
(export "_ZnajSt11align_val_t" (func $705))
(export "_ZdlPvSt11align_val_t" (func $706))
(export "_ZdaPvSt11align_val_t" (func $707))
(table $0 71 71 anyfunc)
(elem (i32.const 1) $18 $21 $25 $27 $29 $31 $33 $35 $37 $39 $41 $43 $45 $47 $49 $51 $53 $55 $56 $58 $60 $62 $64 $66 $68 $70 $72 $74 $76 $77 $79 $81 $82 $84 $86 $88 $90 $91 $92 $93 $95 $96 $98 $99 $100 $101 $103 $104 $106 $107 $400 $392 $408 $435 $425 $683 $684 $685 $686 $687 $688 $689 $690 $691 $692 $693 $694 $695 $731 $733)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 30810))
(global $global$2 i32 (i32.const 30810))


void .FUNC $220 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [112])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($2 + [96]) = [8617]
	*($2 + [100]) = CALL $743([8617])
	*($2 + [16]) = *($2 + [96])
	$3 = CALL $10(($2 + [104]), ($2 + [16]))
	*($2 + [80]) = [8617]
	*($2 + [84]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [80])
	CALL $10(($2 + [88]), ($2 + [8]))
	*(($2 + [72])) = [0]
	*($2 + [48]) = (int_64)4298345121774150816
	*($2 + [56]) = (int_64)-1
	*($2 + [64]) = (int_64)0
	*($2 + [40]) = *($3)
	CALL $253(($2 + [104]), ($2 + [40]), $1)
	*($2 + [24]) = [8617]
	$3 = *($2 + [108])
	*($2 + [28]) = CALL $743([8617])
	*($2) = *($2 + [24])
	$4 = CALL $10(($2 + [32]), $2)
	*($2 + [96]) = $0
	$1 = *($4)
	if ( $3 ){ goto $label$1 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$1
	CALL $263(($2 + [40]), $3, $1, ($2 + [96]))
	$5 = *($2 + [64])
	if ( ($5 == 0) ){ goto $label$2 }
	$6 = ($2 + [68])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$5) ){ goto $label$4 }
	
.LOOP $label$5:
	$0 = ($0 + [-24])
	$3 = *($0)
	*($0) = [0]
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = *($3 + [20])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($3 + [24])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$7
	CALL _ZdlPv($3)
	
.LABEL $label$6
	if ( ((int_32)$5 != (int_32)$0) ){ goto $label$5 }
	$0 = *(($2 + [64]))
	goto $label$3 
	
.LABEL $label$4
	$0 = $5
	
.LABEL $label$3
	*($6) = $5
	CALL _ZdlPv($0)
	
.LABEL $label$2
	$global$0 = ($2 + [112])
}

void .FUNC $123 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [56]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-8173740188290908160, (int_64)-8173740188290908160)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $121($0, $4)
	if ( ((int_32)*($4 + [56]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $362($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $363($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $122 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [256])
	$global$0 = $1
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*(($0 + [32])) = (int_64)0
	*($0) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL $14(($1 + [40]))
	$2 = ($1 + [40])
	if ( ((int_64)*($1 + [48]) == (int_64)1397703940) ){ goto $label$2 }
	if ( ((int_64)*((($1 + [40]) + [32])) != (int_64)1397703940) ){ goto $label$3 }
	$2 = (($1 + [40]) + [24])
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_64)*(($1 + [96])) != (int_64)1397703940) ){ goto $label$4 }
	$2 = ($1 + [88])
	goto $label$2 
	
.LABEL $label$4
	if ( ((int_64)*(($1 + [120])) != (int_64)1397703940) ){ goto $label$5 }
	$2 = ($1 + [112])
	goto $label$2 
	
.LABEL $label$5
	if ( ((int_64)*(($1 + [144])) != (int_64)1397703940) ){ goto $label$6 }
	$2 = ($1 + [136])
	goto $label$2 
	
.LABEL $label$6
	if ( ((int_64)*(($1 + [168])) != (int_64)1397703940) ){ goto $label$7 }
	$2 = ($1 + [160])
	goto $label$2 
	
.LABEL $label$7
	if ( ((int_64)*(($1 + [192])) != (int_64)1397703940) ){ goto $label$8 }
	$2 = ($1 + [184])
	goto $label$2 
	
.LABEL $label$8
	if ( ((int_64)*(($1 + [216])) != (int_64)1397703940) ){ goto $label$9 }
	$2 = ($1 + [208])
	goto $label$2 
	
.LABEL $label$9
	$3 = (int_64)1397703940
	if ( ((int_64)*(($1 + [240])) != (int_64)1397703940) ){ goto $label$1 }
	$2 = ($1 + [232])
	
.LABEL $label$2
	$3 = *($2 + [8])
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	*($1 + [16]) = $3
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$11 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$3 = $4
	$5 = $2
	goto $label$13 
	
.LABEL $label$14
	$3 = $4
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$11 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $6 ){ goto $label$15 }
	
.LABEL $label$13
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [22633])
	
.LABEL $label$10
	CALL $14(($1 + [40]))
	$2 = ($1 + [40])
	if ( ((int_64)*($1 + [48]) == (int_64)87167674696196) ){ goto $label$17 }
	if ( ((int_64)*(($1 + [72])) != (int_64)87167674696196) ){ goto $label$18 }
	$2 = ($1 + [64])
	goto $label$17 
	
.LABEL $label$18
	if ( ((int_64)*(($1 + [96])) != (int_64)87167674696196) ){ goto $label$19 }
	$2 = ($1 + [88])
	goto $label$17 
	
.LABEL $label$19
	if ( ((int_64)*(($1 + [120])) != (int_64)87167674696196) ){ goto $label$20 }
	$2 = ($1 + [112])
	goto $label$17 
	
.LABEL $label$20
	if ( ((int_64)*(($1 + [144])) != (int_64)87167674696196) ){ goto $label$21 }
	$2 = ($1 + [136])
	goto $label$17 
	
.LABEL $label$21
	if ( ((int_64)*(($1 + [168])) != (int_64)87167674696196) ){ goto $label$22 }
	$2 = ($1 + [160])
	goto $label$17 
	
.LABEL $label$22
	if ( ((int_64)*(($1 + [192])) != (int_64)87167674696196) ){ goto $label$23 }
	$2 = ($1 + [184])
	goto $label$17 
	
.LABEL $label$23
	if ( ((int_64)*(($1 + [216])) != (int_64)87167674696196) ){ goto $label$24 }
	$2 = ($1 + [208])
	goto $label$17 
	
.LABEL $label$24
	$3 = (int_64)87167674696196
	if ( ((int_64)*(($1 + [240])) != (int_64)87167674696196) ){ goto $label$16 }
	$2 = ($1 + [232])
	
.LABEL $label$17
	$3 = *($2 + [8])
	
.LABEL $label$16
	*((($1 + [8]) + [24])) = $3
	*($1 + [24]) = (int_64)0
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$3 = $4
	$5 = $2
	goto $label$28 
	
.LABEL $label$29
	$3 = $4
	
.LOOP $label$30:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$26 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $6 ){ goto $label$30 }
	
.LABEL $label$28
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	CALL eosio_assert([0], [22633])
	
.LABEL $label$25
	*((($2 = CALL _Znwj([32])) + [8])) = *((($1 + [8]) + [8]))
	*($2) = *($1 + [8])
	*($2 + [16]) = *($1 + [24])
	*(($2 + [24])) = *((($1 + [8]) + [24]))
	$6 = ($2 + [32])
	$5 = ($0 + [16])
	$7 = *($5)
	if ( ($7 == 0) ){ goto $label$31 }
	*(($0 + [20])) = $7
	CALL _ZdlPv($7)
	*(($0 + [24])) = [0]
	*($5) = (int_64)0
	
.LABEL $label$31
	*(($0 + [20])) = $6
	*($5) = $2
	*(($0 + [24])) = $6
	CALL $14(($1 + [40]))
	$2 = ($1 + [40])
	if ( ((int_64)*($1 + [48]) == (int_64)1397703940) ){ goto $label$33 }
	if ( ((int_64)*(($1 + [72])) != (int_64)1397703940) ){ goto $label$34 }
	$2 = ($1 + [64])
	goto $label$33 
	
.LABEL $label$34
	if ( ((int_64)*(($1 + [96])) != (int_64)1397703940) ){ goto $label$35 }
	$2 = ($1 + [88])
	goto $label$33 
	
.LABEL $label$35
	if ( ((int_64)*(($1 + [120])) != (int_64)1397703940) ){ goto $label$36 }
	$2 = ($1 + [112])
	goto $label$33 
	
.LABEL $label$36
	if ( ((int_64)*(($1 + [144])) != (int_64)1397703940) ){ goto $label$37 }
	$2 = ($1 + [136])
	goto $label$33 
	
.LABEL $label$37
	if ( ((int_64)*(($1 + [168])) != (int_64)1397703940) ){ goto $label$38 }
	$2 = ($1 + [160])
	goto $label$33 
	
.LABEL $label$38
	if ( ((int_64)*(($1 + [192])) != (int_64)1397703940) ){ goto $label$39 }
	$2 = ($1 + [184])
	goto $label$33 
	
.LABEL $label$39
	if ( ((int_64)*(($1 + [216])) != (int_64)1397703940) ){ goto $label$40 }
	$2 = ($1 + [208])
	goto $label$33 
	
.LABEL $label$40
	$3 = (int_64)1397703940
	if ( ((int_64)*(($1 + [240])) != (int_64)1397703940) ){ goto $label$32 }
	$2 = ($1 + [232])
	
.LABEL $label$33
	$3 = *($2 + [8])
	
.LABEL $label$32
	*($1 + [8]) = (int_64)0
	*($1 + [16]) = $3
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$45 }
	$3 = $4
	$5 = $2
	goto $label$44 
	
.LABEL $label$45
	$3 = $4
	
.LOOP $label$46:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$42 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $6 ){ goto $label$46 }
	
.LABEL $label$44
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	CALL eosio_assert([0], [22633])
	
.LABEL $label$41
	CALL $14(($1 + [40]))
	$2 = ($1 + [40])
	if ( ((int_64)*($1 + [48]) == (int_64)87167674696196) ){ goto $label$48 }
	if ( ((int_64)*(($1 + [72])) != (int_64)87167674696196) ){ goto $label$49 }
	$2 = ($1 + [64])
	goto $label$48 
	
.LABEL $label$49
	if ( ((int_64)*(($1 + [96])) != (int_64)87167674696196) ){ goto $label$50 }
	$2 = ($1 + [88])
	goto $label$48 
	
.LABEL $label$50
	if ( ((int_64)*(($1 + [120])) != (int_64)87167674696196) ){ goto $label$51 }
	$2 = ($1 + [112])
	goto $label$48 
	
.LABEL $label$51
	if ( ((int_64)*(($1 + [144])) != (int_64)87167674696196) ){ goto $label$52 }
	$2 = ($1 + [136])
	goto $label$48 
	
.LABEL $label$52
	if ( ((int_64)*(($1 + [168])) != (int_64)87167674696196) ){ goto $label$53 }
	$2 = ($1 + [160])
	goto $label$48 
	
.LABEL $label$53
	if ( ((int_64)*(($1 + [192])) != (int_64)87167674696196) ){ goto $label$54 }
	$2 = ($1 + [184])
	goto $label$48 
	
.LABEL $label$54
	if ( ((int_64)*(($1 + [216])) != (int_64)87167674696196) ){ goto $label$55 }
	$2 = ($1 + [208])
	goto $label$48 
	
.LABEL $label$55
	$3 = (int_64)87167674696196
	if ( ((int_64)*(($1 + [240])) != (int_64)87167674696196) ){ goto $label$47 }
	$2 = ($1 + [232])
	
.LABEL $label$48
	$3 = *($2 + [8])
	
.LABEL $label$47
	*((($1 + [8]) + [24])) = $3
	*($1 + [24]) = (int_64)0
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$58:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$57 }
	$4 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$60 }
	$3 = $4
	$5 = $2
	goto $label$59 
	
.LABEL $label$60
	$3 = $4
	
.LOOP $label$61:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$57 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$6 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $6 ){ goto $label$61 }
	
.LABEL $label$59
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$57
	CALL eosio_assert([0], [22633])
	
.LABEL $label$56
	*((($2 = CALL _Znwj([32])) + [8])) = *((($1 + [8]) + [8]))
	*($2) = *($1 + [8])
	*($2 + [16]) = *($1 + [24])
	*(($2 + [24])) = *((($1 + [8]) + [24]))
	$6 = ($2 + [32])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ($7 == 0) ){ goto $label$62 }
	*(($0 + [32])) = $7
	CALL _ZdlPv($7)
	*(($0 + [36])) = [0]
	*($5) = (int_64)0
	
.LABEL $label$62
	*(($0 + [32])) = $6
	*($5) = $2
	*(($0 + [36])) = $6
	*($0 + [44]) = [0]
	*($0 + [40]) = [0]
	*($0 + [48]) = [0]
	$global$0 = ($1 + [256])
	return $0
}

void .FUNC $288 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	$4 = ($global$0 - [112])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = ($1 + [24])
	$7 = *($6)
	$8 = *($1 + [16])
	$9 = *($1 + [64])
	$10 = *($1 + [60])
	*(($11 = CALL _Znwj([16])) + [8]) = $10
	*($11) = $9
	CALL sha256($11, [16], ($5 + [16]))
	$10 = ((int_64)$8 + (int_64)$10)
	$12 = ((int_64)$7 + (int_64)(CASTING uint_64)(uint_32 (uint_64)($10 <= $8)))
	$13 = *($5 + [16])
	if ( ($11 == 0) ){ goto $label$3 }
	CALL _ZdlPv($11)
	
.LABEL $label$3
	$14 = ($1 + [60])
	*((($5 + [16]) + [24])) = $12
	*($5 + [32]) = $10
	*($5 + [16]) = $8
	*($5 + [48]) = $9
	*($5 + [56]) = $13
	*($5 + [24]) = $7
	$7 = *($1)
	$11 = *($3)
	$15 = ($1 + [52])
	CALL $563(($1 + [48]), *($15), *($11), *($11 + [4]))
	*(($11 = *($3 + [4]))) = *($1)
	*(($11 + [40])) = *(($1 + [40]))
	*(($11 + [32])) = *(($1 + [32]))
	*(($11 + [24])) = *($6)
	*(($11 + [16])) = *(($1 + [16]))
	*(($11 + [8])) = *(($1 + [8]))
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$4 }
	CALL $551(($11 + [48]), *($1 + [48]), *($15))
	
.LABEL $label$4
	*($11 + [60 align=4]) = *($14)
	*(($11 + [76])) = *(($14 + [16]))
	*(($11 + [68])) = *(($14 + [8]))
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$5
	$3 = (($5 + [16]) + [40])
	$6 = (($5 + [16]) + [32])
	$15 = (($5 + [16]) + [16])
	$16 = *(($1 + [48]))
	$14 = *(($1 + [52]))
	$17 = ($14 - $16)
	$8 = (CASTING uint_64)(uint_32 int_32($17 >> [3]))
	$11 = [40]
	
.LOOP $label$6:
	$11 = ($11 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$16 == (int_32)$14) ){ goto $label$7 }
	$11 = (($17 & [-8]) + $11)
	
.LABEL $label$7
	$14 = ($11 + [20])
	if ( ($14 <= [513]) ){ goto $label$9 }
	$11 = CALL $746($14)
	goto $label$8 
	
.LABEL $label$9
	$11 = ($4 - (($14 + [15]) & [-16]))
	$global$0 = $11
	
.LABEL $label$8
	*($5 + [4]) = $11
	*($5) = $11
	*($5 + [8]) = ($11 + $14)
	CALL $279($5, $1)
	CALL db_update_i64(*($1 + [84]), $2, $11, $14)
	if ( ($14 <= [513]) ){ goto $label$10 }
	CALL $749($11)
	
.LABEL $label$10
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$11 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$11 = ($1 + [24])
	*($5 + [88]) = *($11)
	$14 = ($1 + [16])
	*($5 + [80]) = *($14)
	if ( (CALL $742(($5 + [16]), ($5 + [80]), [16]) == 0) ){ goto $label$12 }
	$16 = ($1 + [88])
	$4 = *($16)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$13 }
	$4 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-3022886516901806080, ($5 + [64]), $7)
	*($16) = $4
	
.LABEL $label$13
	CALL db_idx128_update($4, $2, ($5 + [80]))
	
.LABEL $label$12
	$8 = *($14)
	$9 = ((int_64)$8 + (int_64)*(($1 + [60])))
	*($5 + [80]) = $9
	*($5 + [88]) = ((int_64)*($11) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($9 <= $8)))
	if ( (CALL $742($15, ($5 + [80]), [16]) == 0) ){ goto $label$14 }
	$14 = ($1 + [92])
	$11 = *($14)
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$15 }
	$11 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-3022886516901806079, ($5 + [64]), $7)
	*($14) = $11
	
.LABEL $label$15
	CALL db_idx128_update($11, $2, ($5 + [80]))
	
.LABEL $label$14
	$11 = ($1 + [64])
	*($5 + [80]) = *($11)
	if ( (CALL $742($6, ($5 + [80]), [8]) == 0) ){ goto $label$16 }
	$4 = ($1 + [96])
	$14 = *($4)
	if ( ((int_32)$14 > (int_32)[-1]) ){ goto $label$17 }
	$14 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3022886516901806078, ($5 + [64]), $7)
	*($4) = $14
	
.LABEL $label$17
	CALL db_idx64_update($14, $2, ($5 + [80]))
	
.LABEL $label$16
	$8 = *($11)
	$9 = *(($1 + [60]))
	*(($11 = CALL _Znwj([16])) + [8]) = $9
	*($11) = $8
	CALL sha256($11, [16], ($5 + [80]))
	$8 = *($5 + [80])
	if ( ($11 == 0) ){ goto $label$18 }
	CALL _ZdlPv($11)
	
.LABEL $label$18
	*($5 + [80]) = $8
	if ( (CALL $742($3, ($5 + [80]), [8]) == 0) ){ goto $label$19 }
	$1 = ($1 + [100])
	$11 = *($1)
	if ( ((int_32)$11 > (int_32)[-1]) ){ goto $label$20 }
	$11 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3022886516901806077, ($5 + [64]), $7)
	*($1) = $11
	
.LABEL $label$20
	CALL db_idx64_update($11, $2, ($5 + [80]))
	
.LABEL $label$19
	$global$0 = ($5 + [112])
}

int_32 .FUNC $221 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	$1 = ($global$0 - [48])
	$global$0 = $1
	$2 = *($0)
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$3 }
	if ( ((int_64)*($0 + [16]) != (int_64)0) ){ goto $label$3 }
	if ( (int_64)(*($0 + [8]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_64)*($0 + [8]) != (int_64)0) ){ goto $label$4 }
	*($1 + [24]) = [8414]
	*($1 + [28]) = CALL $743([8414])
	*($1 + [16]) = *($1 + [24])
	*(($0 + [8])) = *(CALL $10(($1 + [40]), ($1 + [16])))
	$2 = *($0)
	
.LABEL $label$4
	CALL eosio_assert((CASTING uint_32)(uint_64 $2), [23174])
	CALL eosio_assert(*($0 + [16]), [23209])
	*($1 + [32]) = [8414]
	*($1 + [36]) = CALL $743([8414])
	*($1 + [8]) = *($1 + [32])
	$3 = CALL $10(($1 + [40]), ($1 + [8]))
	$0 = ((int_64)*(($0 + [8])) != (int_64)*($3))
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	$global$0 = ($1 + [48])
	return $0
}

int_32 .FUNC $537 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ((int_32)($7 - $2) / (int_32)[48])
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$5 }
	CALL $538($1, ($6 - $5))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$6 }
	$7 = ($2 + ((int_32)$6 * (int_32)[48]))
	*(($1 + [4])) = $7
	
.LABEL $label$6
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	CALL $539($0, $2)
	$2 = ($2 + [48])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $503 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [4])
	if ( ((uint_32)$3 <= (uint_32)int_32(($4 - $5) >> [4])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL _ZdlPv($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = [268435455]
	if ( ((uint_32)int_32($4 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$5 = $3
	$4 = int_32($4 >> [3])
	if ( ($4 <= $3) ){ goto $label$6 }
	$5 = $4
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$5 = ($5 << [4])
	$4 = CALL _Znwj($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	*(($4 + [8])) = *(($1 + [8]))
	$4 = (*($0) + [16])
	*($0) = $4
	$1 = ($1 + [16])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$7 = int_32($6 >> [4])
	$6 = (*($0 + [4]) - $5)
	$4 = ($1 + $6)
	$8 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$7) )
	$6 = ($8 - $1)
	if ( ($6 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$9:
	*($1) = *($4)
	*(($1 + [8])) = *(($4 + [8]))
	$1 = (*($0) + [16])
	*($0) = $1
	$4 = ($4 + [16])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + (int_32($6 >> [4]) << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $727($0)
}

int_32 .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [368])
	$global$0 = $2
	*($2 + [352]) = [8617]
	*($2 + [356]) = CALL $743([8617])
	*($2 + [136]) = *($2 + [352])
	$3 = CALL $10(($2 + [360]), ($2 + [136]))
	*($2 + [336]) = [8617]
	*($2 + [340]) = CALL $743([8617])
	*($2 + [128]) = *($2 + [336])
	CALL $10(($2 + [344]), ($2 + [128]))
	*($0 + [8]) = (int_64)4298345121774150816
	*($0 + [16]) = (int_64)-1
	*($0 + [24 align=4]) = (int_64)0
	*(($0 + [32])) = [0]
	*($0) = *($3)
	*($2 + [320]) = [8617]
	*($2 + [324]) = CALL $743([8617])
	*($2 + [120]) = *($2 + [320])
	$3 = CALL $10(($2 + [328]), ($2 + [120]))
	*($2 + [312]) = [8617]
	*($2 + [316]) = CALL $743([8617])
	*($2 + [112]) = *($2 + [312])
	CALL $10(($2 + [344]), ($2 + [112]))
	*(($0 + [48])) = (int_64)4298345121774150816
	*(($0 + [56])) = (int_64)-1
	*(($0 + [64])) = (int_64)0
	*(($0 + [72])) = [0]
	*(($0 + [76])) = [0]
	*($0 + [40]) = *($3)
	*($2 + [296]) = [8617]
	*($2 + [300]) = CALL $743([8617])
	*($2 + [104]) = *($2 + [296])
	$3 = CALL $10(($2 + [304]), ($2 + [104]))
	*($2 + [288]) = [8617]
	*($2 + [292]) = CALL $743([8617])
	*($2 + [96]) = *($2 + [288])
	CALL $10(($2 + [344]), ($2 + [96]))
	*(($0 + [88])) = (int_64)4298345121774150816
	*(($0 + [96])) = (int_64)-1
	*(($0 + [104])) = (int_64)0
	*(($0 + [112])) = [0]
	*(($0 + [116])) = [0]
	*($0 + [80]) = *($3)
	*($2 + [272]) = [8617]
	*($2 + [276]) = CALL $743([8617])
	*($2 + [88]) = *($2 + [272])
	$3 = CALL $10(($2 + [280]), ($2 + [88]))
	*($2 + [264]) = [8617]
	*($2 + [268]) = CALL $743([8617])
	*($2 + [80]) = *($2 + [264])
	CALL $10(($2 + [344]), ($2 + [80]))
	*(($0 + [128])) = (int_64)4298345121774150816
	*(($0 + [136])) = (int_64)-1
	*(($0 + [144])) = (int_64)0
	*(($0 + [152])) = [0]
	*($0 + [120]) = *($3)
	*($2 + [248]) = [8617]
	*($2 + [252]) = CALL $743([8617])
	*($2 + [72]) = *($2 + [248])
	$3 = CALL $10(($2 + [256]), ($2 + [72]))
	*($2 + [240]) = [8617]
	*($2 + [244]) = CALL $743([8617])
	*($2 + [64]) = *($2 + [240])
	CALL $10(($2 + [344]), ($2 + [64]))
	*(($0 + [168])) = (int_64)4298345121774150816
	*(($0 + [176])) = (int_64)-1
	*(($0 + [184])) = (int_64)0
	*(($0 + [192])) = [0]
	*(($0 + [196])) = [0]
	*($0 + [160]) = *($3)
	*($2 + [224]) = [8617]
	*($2 + [228]) = CALL $743([8617])
	*($2 + [56]) = *($2 + [224])
	$3 = CALL $10(($2 + [232]), ($2 + [56]))
	*($2 + [216]) = [8617]
	*($2 + [220]) = CALL $743([8617])
	*($2 + [48]) = *($2 + [216])
	CALL $10(($2 + [344]), ($2 + [48]))
	*(($0 + [208])) = (int_64)4298345121774150816
	*(($0 + [216])) = (int_64)-1
	*(($0 + [224])) = (int_64)0
	*(($0 + [232])) = [0]
	*(($0 + [236])) = [0]
	*($0 + [200]) = *($3)
	*($2 + [200]) = [8617]
	*($2 + [204]) = CALL $743([8617])
	*($2 + [40]) = *($2 + [200])
	$3 = CALL $10(($2 + [208]), ($2 + [40]))
	*($2 + [192]) = [8617]
	*($2 + [196]) = CALL $743([8617])
	*($2 + [32]) = *($2 + [192])
	CALL $10(($2 + [344]), ($2 + [32]))
	*(($0 + [248])) = (int_64)4298345121774150816
	*(($0 + [256])) = (int_64)-1
	*(($0 + [264])) = (int_64)0
	*(($0 + [272])) = [0]
	*($0 + [240]) = *($3)
	*($2 + [176]) = [8617]
	*($2 + [180]) = CALL $743([8617])
	*($2 + [24]) = *($2 + [176])
	$3 = CALL $10(($2 + [184]), ($2 + [24]))
	*($2 + [168]) = [8617]
	*($2 + [172]) = CALL $743([8617])
	*($2 + [16]) = *($2 + [168])
	CALL $10(($2 + [344]), ($2 + [16]))
	*(($0 + [288])) = (int_64)4298345121774150816
	*(($0 + [296])) = (int_64)-1
	*(($0 + [304])) = (int_64)0
	*(($0 + [312])) = [0]
	*(($0 + [316])) = [0]
	*($0 + [280]) = *($3)
	*($2 + [152]) = [8617]
	*($2 + [156]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [152])
	$3 = CALL $10(($2 + [160]), ($2 + [8]))
	*($2 + [144]) = [8617]
	*($2 + [148]) = CALL $743([8617])
	*($2) = *($2 + [144])
	CALL $10(($2 + [344]), $2)
	*(($0 + [328])) = (int_64)4298345121774150816
	*(($0 + [336])) = (int_64)-1
	*(($0 + [344])) = (int_64)0
	*(($0 + [352])) = [0]
	*(($0 + [356])) = [0]
	*($0 + [320]) = *($3)
	*($0 + [360]) = $1
	$global$0 = ($2 + [368])
	return $0
}

void .FUNC $502 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([64])
	CALL $125($3)
	*($3 + [48]) = $1
	CALL $679(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-4293730779636826112
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-4293730779636826112
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $598(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	$3 = *($1 + [36])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($1 + [40])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$5
	$3 = *($1 + [20])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($1 + [24])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$3 = *($1 + [8])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($1 + [12])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $531 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $532(*($1), (*($0) + [100]))
	$0 = *($0)
	CALL $184(*($1), ($0 + [112]))
	CALL $306(*($1), ($0 + [128]))
	CALL $306(*($1), ($0 + [144]))
	$2 = ($0 + [160])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$0 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [144])
	$global$0 = $3
	CALL $110($3)
	*($3 + [120]) = [30264]
	*($3 + [136]) = ($3 + [120])
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$1 }
	$5 = CALL _Znwj([280])
	$4 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$1
	*($3 + [112]) = [0]
	*($3 + [104]) = (int_64)0
	$5 = (*($1 + [4]) - *($1))
	if ( ($5 == 0) ){ goto $label$5 }
	$6 = int_32($5 >> [3])
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$4 }
	$5 = CALL _Znwj($5)
	*(($3 + [112])) = ($5 + ($6 << [3]))
	*($3 + [104]) = $5
	*($3 + [108]) = $5
	$6 = *($1)
	$1 = (*(($1 + [4])) - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $6, $1)
	*($3 + [108]) = (*($3 + [108]) + $1)
	
.LABEL $label$5
	*((($3 + [64]) + [24])) = *(($2 + [24]))
	*((($3 + [64]) + [16])) = *(($2 + [16]))
	*($3 + [64]) = *($2)
	*($3 + [72]) = *(($2 + [8]))
	$2 = *((($3 + [120]) + [16]))
	if ( ($2 == 0) ){ goto $label$8 }
	if ( ((int_32)($3 + [120]) == (int_32)$2) ){ goto $label$7 }
	*($3 + [56]) = CALL int_32 $2((int_32 *(*($2) + [8])))
	goto $label$6 
	
.LABEL $label$8
	*($3 + [56]) = [0]
	goto $label$6 
	
.LABEL $label$7
	*($3 + [56]) = ($3 + [40])
	CALL void $2((int_32 ($3 + [40])), (int_32 *(*($2) + [12])))
	
.LABEL $label$6
	*(($3 + [24])) = *((($3 + [64]) + [24]))
	*(($3 + [16])) = *((($3 + [64]) + [16]))
	*($3 + [8]) = *($3 + [72])
	*($3) = *($3 + [64])
	CALL $146($4, ($3 + [104]), $3, ($3 + [40]))
	$2 = *((($3 + [40]) + [16]))
	if ( ((int_32)($3 + [40]) == (int_32)$2) ){ goto $label$9 }
	if ( ($2 == 0) ){ goto $label$10 }
	CALL void $2((int_32 *(*($2) + [20])))
	
.LABEL $label$10
	$2 = *($3 + [104])
	if ( ($2 == 0) ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$9
	CALL void $2((int_32 *(*($2) + [16])))
	$2 = *($3 + [104])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $727(($3 + [104]))
	
.LABEL $label$3
	*($3 + [108]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$2
	$2 = *(($3 + [136]))
	if ( ((int_32)($3 + [120]) == (int_32)$2) ){ goto $label$12 }
	if ( ($2 == 0) ){ goto $label$11 }
	CALL void $2((int_32 *(*($2) + [20])))
	goto $label$11 
	
.LABEL $label$12
	CALL void $2((int_32 *(*($2) + [16])))
	
.LABEL $label$11
	$global$0 = ($3 + [144])
	(unreachable)
}

int_32 .FUNC $48 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [288])
	$global$0 = $3
	*(($4 = $3) + [280]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [272])) = [0]
	*($4 + [256]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $5)
	$3 = $2
	if ( ((uint_32)$5 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($4 + [244])
	
.LABEL $label$4
	CALL memcpy(($4 + [256]), $3, [8])
	*($4 + [244]) = ($3 + [8])
	CALL $184(($4 + [240]), (($4 + [256]) + [8]))
	$3 = *((($4 + [240]) + [8]))
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [240])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $20(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [280])
	CALL $196(($4 + [16]), ($4 + [256]))
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL $749($2)
	
.LABEL $label$5
	CALL $24($3)
	if ( ((*($4 + [264]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [272])))
	
.LABEL $label$6
	$global$0 = ($4 + [288])
	return [1]
}

int_32 .FUNC $125 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$1 = ($global$0 - [32])
	$global$0 = $1
	CALL $115($0)
	$2 = [0]
	*(($0 + [44])) = [0]
	*($0 + [36 align=4]) = (int_64)0
	*($0) = (int_64)0
	*($1 + [16]) = (int_64)1397703940
	*($1 + [8]) = (int_64)1000
	$3 = ($0 + [36])
	$4 = (int_64)5459781
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$4 = $5
	$6 = $2
	goto $label$4 
	
.LABEL $label$5
	$4 = $5
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $7 ){ goto $label$6 }
	
.LABEL $label$4
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [22633])
	
.LABEL $label$1
	CALL $503(($0 + [8]), ($1 + [8]), ($1 + [24]))
	*($1 + [16]) = (int_64)1397703940
	*($1 + [8]) = (int_64)2000
	$4 = (int_64)5459781
	$2 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$5 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$4 = $5
	$6 = $2
	goto $label$10 
	
.LABEL $label$11
	$4 = $5
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$7 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $7 ){ goto $label$12 }
	
.LABEL $label$10
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [22633])
	
.LABEL $label$7
	$2 = ($1 + [24])
	CALL $503(($0 + [20]), ($1 + [8]), $2)
	*($2) = *([0] + [29336])
	*(($1 + [16])) = *([0] + [29328])
	*($1 + [8]) = *([0] + [29320])
	CALL $409($3, ($1 + [8]), ($1 + [32]))
	*($0 + [32]) = [0]
	$global$0 = ($1 + [32])
	return $0
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [464])
	$global$0 = $2
	CALL $110($2)
	$3 = CALL $109(($2 + [24]))
	*($2 + [8]) = [8617]
	*($2 + [12]) = CALL $743([8617])
	*($2) = *($2 + [8])
	CALL $116(($3 + [40]), $1, *(CALL $10(($2 + [16]), $2)))
	CALL $130($3)
	$global$0 = ($2 + [464])
}

int_32 .FUNC $42 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [280]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [304]) = [0]
	*($4 + [260]) = $2
	*($4 + [256]) = $2
	*($4 + [264]) = ($2 + $7)
	*($4 + [360]) = ($4 + [256])
	*($4 + [56]) = ($4 + [272])
	CALL $175(($4 + [56]), ($4 + [360]))
	$3 = *($4 + [264])
	*((($4 + [40]) + [8])) = $3
	*((($4 + [24]) + [8])) = $3
	$8 = *($4 + [256])
	*($4 + [24]) = $8
	*($4 + [40]) = $8
	$9 = CALL $20(($4 + [56]), $0, $1, ($4 + [24]))
	*(($3 = (($4 + [312]) + [16]))) = *($4 + [288])
	*(($10 = (($4 + [312]) + [8]))) = *($4 + [280])
	*($4 + [312]) = *($4 + [272])
	$0 = *($4 + [296])
	$11 = *($4 + [304])
	*((($4 + [336]) + [16])) = *($3)
	*((($4 + [336]) + [8])) = *($10)
	*($4 + [336]) = *($4 + [312])
	$3 = (($4 + [56]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$1 = *((($4 + [336]) + [16]))
	*((($4 + [360]) + [16])) = $1
	$8 = *((($4 + [336]) + [8]))
	*((($4 + [360]) + [8])) = $8
	*(($4 + [8])) = $8
	*(($4 + [16])) = $1
	$1 = *($4 + [336])
	*($4) = $1
	*($4 + [360]) = $1
	CALL void $3((int_32 $4), (int_32 $0), (int_64 ($11 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $749($2)
	
.LABEL $label$5
	CALL $24($9)
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $41 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [464])
	$global$0 = $4
	*($4 + [455]) = $3
	*($4 + [456]) = $2
	CALL $149($0, $1, [0])
	$0 = CALL $109(($4 + [8]))
	CALL $176($0, $1, ($4 + [456]), ($4 + [455]))
	CALL $130($0)
	$global$0 = ($4 + [464])
}

int_32 .FUNC $40 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [232]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$5
	CALL memcpy(($4 + [232]), $2, [8])
	*(($4 + [8])) = $3
	*($4 + [20]) = ($2 + [8])
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $20(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$0 = *($4 + [232])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $749($2)
	
.LABEL $label$7
	CALL $24($8)
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $47 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$3 = ($global$0 - [400])
	$global$0 = $3
	*($3 + [376]) = $1
	CALL $110($3)
	$4 = ($0 + [72])
	CALL $191(($3 + [368]), $4, $1)
	$0 = *($3 + [372])
	if ( $0 ){ goto $label$1 }
	CALL $192(($3 + [256]), [21905], ($3 + [376]))
	if ( (*($3 + [256]) & [1]) ){ goto $label$3 }
	$0 = (($3 + [256]) | [1])
	goto $label$2 
	
.LABEL $label$3
	$0 = *($3 + [264])
	CALL _ZdlPv($0)
	
.LABEL $label$2
	CALL eosio_assert([0], $0)
	$0 = *($3 + [372])
	
.LABEL $label$1
	*((($3 + [256]) + [40])) = *(($0 + [40]))
	*((($3 + [256]) + [32])) = *(($0 + [32]))
	*((($3 + [256]) + [24])) = *(($0 + [24]))
	*((($3 + [256]) + [16])) = *(($0 + [16]))
	*($3 + [256]) = *($0)
	*($3 + [264]) = *(($0 + [8]))
	$5 = CALL $709((($3 + [256]) + [48]), ($0 + [48]))
	*((($3 + [256]) + [96])) = *(($0 + [96]))
	*((($3 + [256]) + [88])) = *(($0 + [88]))
	*((($3 + [256]) + [80])) = *(($0 + [80]))
	*((($3 + [256]) + [72])) = *(($0 + [72]))
	*($3 + [320]) = *($0 + [64])
	$1 = *($3 + [368])
	$6 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( $6) ){ goto $label$4 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$4
	$0 = ($3 + [320])
	$7 = CALL db_next_i64(*($6 + [104]), ($3 + [32]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	CALL $193((CASTING uint_32)(uint_64 $1), $7)
	
.LABEL $label$5
	CALL $194($4, $6)
	*($3 + [200]) = [8617]
	*($3 + [204]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [200])
	$6 = CALL $10(($3 + [208]), ($3 + [24]))
	*($3 + [184]) = [8344]
	*($3 + [188]) = CALL $743([8344])
	*($3 + [16]) = *($3 + [184])
	$4 = CALL $10(($3 + [192]), ($3 + [16]))
	*($3 + [168]) = [8617]
	$1 = *($4)
	$8 = *($6)
	*($3 + [172]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [168])
	$4 = CALL $10(($3 + [176]), ($3 + [8]))
	*($3 + [152]) = [21948]
	*($3 + [156]) = CALL $743([21948])
	*($3) = *($3 + [152])
	$7 = CALL $10(($3 + [160]), $3)
	*((($3 + [32]) + [40])) = *((($3 + [256]) + [40]))
	*((($3 + [32]) + [32])) = *((($3 + [256]) + [32]))
	*((($3 + [32]) + [24])) = *((($3 + [256]) + [24]))
	*((($3 + [32]) + [16])) = *((($3 + [256]) + [16]))
	*($3 + [40]) = *($3 + [264])
	*($3 + [32]) = *($3 + [256])
	$6 = CALL $709(($3 + [80]), $5)
	*(($3 + [128])) = *(($0 + [32]))
	*(($3 + [120])) = *(($0 + [24]))
	*(($3 + [112])) = *(($0 + [16]))
	*(($3 + [104])) = *(($0 + [8]))
	*($3 + [96]) = *($0)
	*($3 + [216]) = *($4)
	*($3 + [224]) = *($7)
	*(($0 = CALL _Znwj([16]))) = $8
	*($0 + [8]) = $1
	*(($3 + [252])) = [0]
	$4 = ($0 + [16])
	*((($3 + [216]) + [24])) = $4
	*(($3 + [236])) = $4
	*($3 + [232]) = $0
	*($3 + [244 align=4]) = (int_64)0
	$0 = *($6)
	$4 = ( *(($3 + [84])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	$0 = ($4 + [84])
	$1 = (CASTING uint_64)(uint_32 $4)
	$4 = ($3 + [244])
	
.LOOP $label$6:
	$0 = ($0 + [1])
	$1 = (uint_64)$1 >> (uint_64)(int_64)7
	if ( ((int_64)$1) != (int_64)0) ){ goto $label$6 }
	if ( ($0 == 0) ){ goto $label$8 }
	CALL $11($4, $0)
	$4 = *(($3 + [248]))
	$0 = *(($3 + [244]))
	goto $label$7 
	
.LABEL $label$8
	$4 = [0]
	$0 = [0]
	
.LABEL $label$7
	*($3 + [388]) = $0
	*($3 + [384]) = $0
	*($3 + [392]) = $4
	CALL $197(($3 + [384]), ($3 + [32]))
	CALL $13(($3 + [384]), ($3 + [216]))
	$0 = *($3 + [384])
	CALL send_inline($0, (*($3 + [388]) - $0))
	$0 = *($3 + [384])
	if ( ($0 == 0) ){ goto $label$9 }
	*($3 + [388]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$9
	$0 = *($3 + [244])
	if ( ($0 == 0) ){ goto $label$10 }
	*(($3 + [248])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$10
	$0 = *($3 + [232])
	if ( ($0 == 0) ){ goto $label$11 }
	*(($3 + [236])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$11
	if ( ((*($6) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($3 + [88])))
	
.LABEL $label$12
	if ( ((*($5) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($3 + [312])))
	
.LABEL $label$13
	$global$0 = ($3 + [400])
}

int_32 .FUNC $46 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$3 = ($global$0 - [480])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [312]))) = (int_64)0
	*(($8 = ($4 + [320]))) = (int_64)0
	*(($9 = ($4 + [344]))) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [328]) = [0]
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = [0]
	*($4 + [276]) = $2
	*($4 + [272]) = $2
	*($4 + [280]) = ($2 + $7)
	*($4 + [456]) = ($4 + [272])
	*($4 + [72]) = ($4 + [288])
	CALL $204(($4 + [72]), ($4 + [456]))
	$10 = *($4 + [280])
	*((($4 + [56]) + [8])) = $10
	*((($4 + [40]) + [8])) = $10
	$11 = *($4 + [272])
	*($4 + [40]) = $11
	*($4 + [56]) = $11
	$10 = CALL $20(($4 + [72]), $0, $1, ($4 + [40]))
	*(($12 = (($4 + [376]) + [8]))) = *($3)
	*(($3 = (($4 + [376]) + [16]))) = *($8)
	*(($8 = (($4 + [360]) + [8]))) = *($9)
	*($4 + [376]) = *($4 + [304])
	*($4 + [360]) = *($4 + [336])
	$0 = *($4 + [296])
	$1 = *($4 + [288])
	$9 = *($4 + [328])
	$13 = *($4 + [329])
	$14 = *($4 + [352])
	*((($4 + [424]) + [8])) = *($8)
	*((($4 + [400]) + [8])) = *($12)
	*((($4 + [400]) + [16])) = *($3)
	*($4 + [424]) = *($4 + [360])
	*($4 + [400]) = *($4 + [376])
	$3 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [400]) + [16]))
	*((($4 + [456]) + [16])) = $11
	$15 = *((($4 + [400]) + [8]))
	*((($4 + [456]) + [8])) = $15
	$16 = *((($4 + [424]) + [8]))
	*((($4 + [440]) + [8])) = $16
	*((($4 + [16]) + [8])) = $15
	*((($4 + [16]) + [16])) = $11
	*(($4 + [8])) = $16
	$11 = *($4 + [400])
	*($4 + [456]) = $11
	$15 = *($4 + [424])
	*($4 + [440]) = $15
	*($4 + [16]) = $11
	*($4) = $15
	CALL void $3((int_32 $1), (int_64 $0), (int_64 ($4 + [16])), (int_32 ($9 & [255])), (int_32 ($13 & [255])), (int_32 $4), (int_32 ($14 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $749($2)
	
.LABEL $label$5
	CALL $24($10)
	$global$0 = ($4 + [480])
	return [1]
}

void .FUNC $45 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	$8 = ($global$0 - [144])
	$global$0 = $8
	if ( ((int_32)$7 != (int_32)[14]) ){ goto $label$6 }
	*($8 + [128]) = [21459]
	*($8 + [132]) = CALL $743([21459])
	*($8 + [40]) = *($8 + [128])
	CALL require_auth(*(CALL $10(($8 + [136]), ($8 + [40]))))
	if ( *([0] + [8632]) ){ goto $label$7 }
	$7 = CALL _Znwj([280])
	CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$7
	*((($8 + [72]) + [8])) = [0]
	*((($8 + [104]) + [16])) = *(($3 + [16]))
	*((($8 + [104]) + [8])) = *(($3 + [8]))
	*((($8 + [88]) + [8])) = *(($6 + [8]))
	*($8 + [72]) = (int_64)0
	*($8 + [104]) = *($3)
	*($8 + [88]) = *($6)
	$3 = CALL $743([21580])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($8 + [72]) = ($3 << [1])
	$6 = (($8 + [72]) | [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	*($8 + [56]) = [8617]
	*($8 + [60]) = CALL $743([8617])
	*($8 + [48]) = *($8 + [56])
	CALL require_auth(*(CALL $10(($8 + [64]), ($8 + [48]))))
	goto $label$2 
	
.LABEL $label$5
	$7 = (($3 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($8 + [72]) = ($7 | [1])
	*($8 + [80]) = $6
	*($8 + [76]) = $3
	
.LABEL $label$4
	CALL memcpy($6, [21580], $3)
	
.LABEL $label$3
	*(($6 + $3)) = [0]
	*((($8 + [16]) + [16])) = *((($8 + [104]) + [16]))
	*((($8 + [16]) + [8])) = *((($8 + [104]) + [8]))
	*(($8 + [8])) = *((($8 + [88]) + [8]))
	*($8 + [16]) = *($8 + [104])
	*($8) = *($8 + [88])
	CALL $162(($8 + [16]), $8, ($8 + [72]), [0])
	if ( ((*($8 + [72]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($8 + [80]))
	
.LABEL $label$2
	$global$0 = ($8 + [144])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($8 + [72]))
}

int_32 .FUNC $44 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = CALL $115(($4 + [256]))
	*($4 + [296]) = (int_64)2630
	*($4 + [256]) = (int_64)5260
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $7)
	CALL $209(($4 + [240]), ($4 + [256]))
	$8 = *($4 + [248])
	*((($4 + [24]) + [8])) = $8
	*((($4 + [8]) + [8])) = $8
	$9 = *($4 + [240])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	$8 = CALL $20(($4 + [40]), $0, $1, ($4 + [8]))
	$10 = CALL $210(($4 + [304]), $3)
	*($4 + [344]) = *($4 + [296])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL $210(($4 + [352]), $10)
	*($4 + [392]) = *(($4 + [344]))
	CALL void $3((int_32 ($4 + [352])), (int_32 $6))
	$5 = *($4 + [372])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [376])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$6
	$5 = *($4 + [360])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($4 + [364])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$7
	$5 = *($4 + [324])
	if ( ($5 == 0) ){ goto $label$8 }
	*(($4 + [328])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$8
	$5 = *($4 + [312])
	if ( ($5 == 0) ){ goto $label$9 }
	*(($4 + [316])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$9
	if ( ($7 <= [513]) ){ goto $label$10 }
	CALL $749($2)
	
.LABEL $label$10
	CALL $24($8)
	$2 = *($4 + [276])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($4 + [280])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($4 + [264])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($4 + [268])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($4 + [400])
	return [1]
}

void .FUNC $222 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [32])
	$global$0 = $3
	$5 = *(($1 + [28]))
	$4 = *($1 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$6 = $5
	
.LOOP $label$3:
	$6 = ($6 + [-24])
	$7 = *($6)
	$8 = *($7 + [8])
	$10 = *($7)
	$9 = *($7 + [16])
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$5 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($7 = CALL _Znwj([24])) + [8]) = $8
	*($7) = $10
	*($7 + [16]) = $9
	CALL sha256($7, [24], $3)
	$9 = *($3)
	if ( ($7 == 0) ){ goto $label$4 }
	CALL _ZdlPv($7)
	
.LABEL $label$4
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$1 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = $4
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)*(($1 + [24]))) ){ goto $label$7 }
	$7 = *(($5 + [-24]))
	if ( ((int_32)*($7 + [80]) == (int_32)$1) ){ goto $label$8 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$8
	*($0 + [4]) = $7
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035936280380043264, $2)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL $312($1, $7)
	if ( ((int_32)*($7 + [80]) == (int_32)$1) ){ goto $label$10 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$10
	*($0 + [4]) = $7
	goto $label$6 
	
.LABEL $label$9
	*($0 + [4]) = [0]
	
.LABEL $label$6
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $509 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([72])
	CALL $122($3)
	*($3 + [56]) = $1
	CALL $698(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-8173740188290908160
	$5 = *($3 + [60])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-8173740188290908160
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $594(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	$3 = *($1 + [28])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($1 + [32])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$5
	$3 = *($1 + [16])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($1 + [20])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$6
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $714 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL _ZdlPv($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $508 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	*($5 + [8]) = *($1 + [24])
	$6 = (int_64)0
	$7 = *($1 + [8])
	$9 = *($1)
	$8 = *($1 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($10 = CALL _Znwj([24])) + [8]) = $7
	*($10) = $9
	*($10 + [16]) = $8
	CALL sha256($10, [24], ($5 + [32]))
	$6 = *($5 + [32])
	if ( ($10 == 0) ){ goto $label$3 }
	CALL _ZdlPv($10)
	
.LABEL $label$3
	$10 = *($3)
	*(($1 + [21])) = *(($10 + [21]))
	*(($3 = ($1 + [16]))) = *(($10 + [16]))
	$7 = *($10)
	*($1) = $7
	$9 = *(($10 + [8]))
	*(($1 + [8])) = $9
	$8 = (int_64)0
	$11 = *($3)
	if ( ((int_64)((int_64)$7 | (int_64)$11) != (int_64)0) ){ goto $label$6 }
	$11 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($10 = CALL _Znwj([24])) + [8]) = $9
	*($10) = $7
	*($10 + [16]) = $11
	CALL sha256($10, [24], ($5 + [32]))
	$8 = *($5 + [32])
	if ( ($10 == 0) ){ goto $label$5 }
	CALL _ZdlPv($10)
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)$8) ){ goto $label$7 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$7
	$4 = $4
	$10 = ($4 + [-32])
	$global$0 = $10
	*($5 + [36]) = $10
	*($5 + [32]) = $10
	*($5 + [40]) = ($4 + [-3])
	CALL $465(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [36]), $2, $10, [29])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [24]) = *(($1 + [24]))
	if ( (CALL $742(($5 + [8]), ($5 + [24]), [8]) == 0) ){ goto $label$9 }
	$10 = ($1 + [40])
	$1 = *($10)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8173735188943732736, ($5 + [16]), $6)
	*($10) = $1
	
.LABEL $label$10
	CALL db_idx64_update($1, $2, ($5 + [24]))
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

int_32 .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	$5 = CALL _Znwj([64])
	$2 = CALL $125($5)
	*($5 + [48]) = $0
	CALL $212(($3 + [32]), $2)
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)-4293730779636826112
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)-4293730779636826112
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $598(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [36])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [40])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	$4 = *($1 + [20])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [24])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($1 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$13
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $289 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	$10 = *($6 + [48])
	if ( ($10 == 0) ){ goto $label$13 }
	*(($6 + [52])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$13
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$8 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$14:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	$10 = *($9 + [48])
	if ( ($10 == 0) ){ goto $label$16 }
	*(($9 + [52])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$16
	CALL _ZdlPv($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$8
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [84]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $564(($2 + [8]), ($0 + [36]), ($0 + [37]), ($0 + [38]), ($0 + [39]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $563 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($3 - $2)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$1 }
	$6 = *($0 + [4])
	$4 = *($0 + [8])
	$5 = int_32($4 >> [3])
	if ( ((int_32)$5 <= (int_32)int_32(($4 - $6) >> [3])) ){ goto $label$7 }
	$7 = *($0)
	$6 = (int_32(($6 - $7) >> [3]) + $5)
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$3 }
	$5 = ($4 - $7)
	if ( ((uint_32)int_32($5 >> [3]) >= (uint_32)[268435455]) ){ goto $label$6 }
	$4 = int_32(($1 - $7) >> [3])
	$7 = int_32($5 >> [2])
	$6 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ($6 <= [536870912]) ){ goto $label$5 }
	CALL abort()
	
.LABEL $label$7
	$8 = ($6 - $1)
	$4 = int_32($8 >> [3])
	if ( ((int_32)$5 <= (int_32)$4) ){ goto $label$9 }
	$7 = $6
	$9 = ($2 + ($4 << [3]))
	if ( ((int_32)$9 == (int_32)$3) ){ goto $label$10 }
	$10 = (($3 + [-8]) - $9)
	$4 = $6
	$7 = $9
	
.LOOP $label$11:
	*($4) = *($7)
	$4 = ($4 + [8])
	$7 = ($7 + [8])
	if ( ((int_32)$3 != (int_32)$7) ){ goto $label$11 }
	$7 = (($6 + ($10 & [-8])) + [8])
	*(($0 + [4])) = $7
	
.LABEL $label$10
	if ( ((int_32)$8 >= (int_32)[1]) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	$7 = $6
	$9 = $3
	
.LABEL $label$8
	$4 = ($5 << [3])
	$5 = ($7 - ($1 + $4))
	$8 = int_32($5 >> [3])
	$4 = ($7 - $4)
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$12 }
	$10 = uint_32((($6 - ($8 << [3])) + ((int_32)$1 ^ (int_32)[-1])) >> [3])
	$3 = $7
	
.LOOP $label$13:
	*($3) = *($4)
	$3 = ($3 + [8])
	$4 = ($4 + [8])
	if ( ($4 <= $6) ){ goto $label$13 }
	*(($0 + [4])) = (($7 + ($10 << [3])) + [8])
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$14 }
	CALL memmove(($7 - ($8 << [3])), $1, $5)
	
.LABEL $label$14
	$4 = ($9 - $2)
	if ( ($4 == 0) ){ goto $label$1 }
	CALL memmove($1, $2, $4)
	return $1
	
.LABEL $label$6
	$4 = int_32(($1 - $7) >> [3])
	$6 = [536870911]
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [3]))
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	$7 = ($5 + ($4 << [3]))
	$4 = $7
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$15 }
	$9 = uint_32((($3 + [-8]) - $2) >> [3])
	$4 = $7
	
.LOOP $label$16:
	*($4) = *($2)
	$4 = ($4 + [8])
	$2 = ($2 + [8])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$16 }
	$4 = (($7 + ($9 << [3])) + [8])
	
.LABEL $label$15
	$6 = ($6 << [3])
	$9 = *($0)
	$2 = ($1 - $9)
	$3 = ($7 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($3, $9, $2)
	
.LABEL $label$17
	$6 = ($5 + $6)
	$5 = ($0 + [4])
	$2 = (*($5) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($4, $1, $2)
	$4 = ($4 + $2)
	
.LABEL $label$18
	*($5) = $4
	$2 = *($0)
	*($0) = $3
	*(($0 + [8])) = $6
	if ( ($2 == 0) ){ goto $label$19 }
	CALL _ZdlPv($2)
	
.LABEL $label$19
	$1 = $7
	
.LABEL $label$1
	(unreachable)
	(unreachable)
	return $1
}

void .FUNC $562 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [48]) = ($4 << [1])
	$5 = (($3 + [48]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [48]) = ($6 | [1])
	*($3 + [56]) = $5
	*($3 + [52]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	$7 = *(($2 + [24]))
	*((($3 + [64]) + [24])) = $7
	$8 = *(($2 + [16]))
	*((($3 + [64]) + [16])) = $8
	$9 = *(($2 + [8]))
	$10 = *($2)
	*(($3 + [16])) = $8
	*(($3 + [24])) = $7
	*($3 + [72]) = $9
	*($3) = $10
	*($3 + [64]) = $10
	*($3 + [8]) = $9
	CALL $545(($3 + [32]), $3)
	$4 = *($3 + [32])
	$2 = ($4 & [1])
	$4 = CALL $716(($3 + [48]), ( *($3 + [40]) ? (($3 + [32]) | [1]) : $2 ), ( *($3 + [36]) ? uint_32($4 >> [1]) : $2 ))
	$9 = *($4)
	*($4) = (int_64)0
	*($0) = $9
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*((($3 + [32]) + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [56]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [48]))
}

void .FUNC $561 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL $722(($4 + [16]), *($1))
	CALL $562($4, $2, $3)
	$2 = *($4)
	$3 = ($2 & [1])
	$2 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $3 ), ( *($4 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$1
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$2
	$global$0 = ($4 + [32])
}

int_32 .FUNC $560 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [56]) = [0]
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = $0
	CALL $140(($3 + [32]), $5)
	*($5 + [84]) = $1
	*($5 + [88 align=4]) = (int_64)-1
	*($5 + [96 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $179(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [48])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $567 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $528(CALL $568($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $566 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[40])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$2 = ((int_32)($2 - $4) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL _Znwj(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [24])) = (int_64)0
	*(($6 + [32])) = (int_64)0
	$6 = ($6 + [40])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[40]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$7 = ($2 + ((int_32)$6 * (int_32)[40]))
	$8 = ($2 + ((int_32)$3 * (int_32)[40]))
	$6 = $8
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [24])) = (int_64)0
	*(($6 + [32])) = (int_64)0
	$6 = ($6 + [40])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$9 = ($8 + ((int_32)$1 * (int_32)[40]))
	$6 = *($0)
	$10 = *(($0 + [4]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$9 }
	$11 = ($6 - $10)
	$1 = [0]
	
.LOOP $label$10:
	$2 = ($10 + $1)
	*((($6 = ($8 + $1)) + [-32])) = *(($2 + [-32]))
	*(($6 + [-40])) = *(($2 + [-40]))
	*(($3 = ($6 + [-24]))) = (int_64)0
	*(($4 = ($6 + [-16]))) = [0]
	$5 = ($2 + [-24])
	*($3) = *($5)
	$3 = ($2 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($6 + [-12]))) = (int_64)0
	*(($6 = ($6 + [-4]))) = [0]
	$4 = ($2 + [-12])
	*($3) = *($4)
	*($5) = (int_64)0
	$2 = ($2 + [-4])
	*($6) = *($2)
	*($2) = [0]
	*($4) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$10 }
	$8 = ($8 + $1)
	$6 = *(($0 + [4]))
	$3 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$3 = $6
	
.LABEL $label$8
	*($0) = $8
	*(($0 + [4])) = $9
	*(($0 + [8])) = $7
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = *(($6 + [-12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($6 + [-8])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$13
	$2 = ($6 + [-40])
	$1 = *(($6 + [-24]))
	if ( ($1 == 0) ){ goto $label$14 }
	*(($6 + [-20])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$14
	$6 = $2
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($3 == 0) ){ goto $label$15 }
	CALL _ZdlPv($3)
	
.LABEL $label$15
}

void .FUNC $565 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL _Znwj(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$8 = ($7 + ($6 << [4]))
	$9 = ($7 + ($3 << [4]))
	$6 = $9
	$2 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$10 = ($9 + ($1 << [4]))
	$6 = *($0)
	$11 = ($0 + [4])
	$12 = *($11)
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$10 }
	$13 = (($3 + [-1]) - uint_32((($12 + [-16]) - $6) >> [4]))
	$14 = ($6 - $12)
	$6 = [0]
	
.LOOP $label$11:
	*(($3 = (($2 = ($9 + $6)) + [-12]))) = (int_64)0
	*(($4 = ($2 + [-4]))) = [0]
	$1 = ($12 + $6)
	$5 = ($1 + [-12])
	*($3) = *($5)
	$3 = ($1 + [-4])
	*($4) = *($3)
	*(($2 + [-16])) = *(($1 + [-16]))
	*($3) = [0]
	*($5) = (int_64)0
	$6 = ($6 + [-16])
	if ( ((int_32)$14 != (int_32)$6) ){ goto $label$11 }
	$9 = ($7 + ($13 << [4]))
	$6 = *(($0 + [4]))
	$3 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$3 = $6
	
.LABEL $label$9
	*($0) = $9
	*($11) = $10
	*(($0 + [8])) = $8
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$2 = ($6 + [-16])
	$1 = *(($6 + [-12]))
	if ( ($1 == 0) ){ goto $label$14 }
	*(($6 + [-8])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$14
	$6 = $2
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($3 == 0) ){ goto $label$15 }
	CALL _ZdlPv($3)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC $564 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = ($global$0 - [16])
	$global$0 = $5
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *($7 + [88])
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$2 }
	$8 = *($6)
	$8 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-3022886516901806080, $5, *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx128_remove($8)
	
.LABEL $label$1
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *(($7 + [92]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$4 }
	$8 = *($6)
	$8 = CALL db_idx128_find_primary(*($8), *($8 + [8]), (int_64)-3022886516901806079, $5, *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx128_remove($8)
	
.LABEL $label$3
	$6 = *($0)
	$7 = *($6 + [4])
	$8 = *(($7 + [96]))
	if ( ((int_32)$8 > (int_32)[-1]) ){ goto $label$6 }
	$8 = *($6)
	$8 = CALL db_idx64_find_primary(*($8), *($8 + [8]), (int_64)-3022886516901806078, $5, *($7))
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$5 }
	
.LABEL $label$6
	CALL db_idx64_remove($8)
	
.LABEL $label$5
	$8 = *($0)
	$6 = *($8 + [4])
	$0 = *(($6 + [100]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$8 }
	$0 = *($8)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3022886516901806077, $5, *($6))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	
.LABEL $label$8
	CALL db_idx64_remove($0)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $569 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL _Znwj(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [4]))
	$3 = ($2 + ($3 << [4]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [4]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL _ZdlPv($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $568 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [4])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $569($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [28806])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [8]), $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $398 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [68 align=4]) = (int_64)0
	*($5 + [76 align=4]) = (int_64)0
	*($5 + [84 align=4]) = (int_64)0
	*($5 + [92]) = $0
	CALL $517(($3 + [32]), $5)
	*($5 + [96]) = $1
	*($5 + [100 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $460(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [80])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [84])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	$4 = *($1 + [68])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [72])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $399 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [92]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	$10 = *($6 + [80])
	if ( ($10 == 0) ){ goto $label$13 }
	*(($6 + [84])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$13
	$10 = *($6 + [68])
	if ( ($10 == 0) ){ goto $label$14 }
	*(($6 + [72])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$14
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$8 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$15:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$16 }
	$10 = *($9 + [80])
	if ( ($10 == 0) ){ goto $label$17 }
	*(($9 + [84])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$17
	$10 = *($9 + [68])
	if ( ($10 == 0) ){ goto $label$18 }
	*(($9 + [72])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$18
	CALL _ZdlPv($9)
	
.LABEL $label$16
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$15 }
	
.LABEL $label$8
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [96]))
	*($2 + [4]) = $1
	*($2) = $0
	*($2 + [8]) = $2
	CALL $520(($2 + [8]), ($0 + [36]), ($0 + [37]))
	$global$0 = ($2 + [16])
}

void .FUNC $648 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $587(($1 + [8]), *($4 + [8]), *(($4 + [12])))
	
.LABEL $label$1
	*($1 + [20]) = *($4 + [20])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$4 = [44]
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$4 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $4)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 + [-36])
	
.LABEL $label$3
	$6 = ($4 + [1])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL $746($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $6)
	CALL $646($3, $1)
	*($1 + [28]) = CALL db_store_i64(*($5 + [8]), (int_64)8800195550100881408, *(*($0 + [8])), (int_64)8800195550100881408, $4, $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL $749($4)
	
.LABEL $label$7
	if ( ((uint_64)*($5 + [16]) > (uint_64)(int_64)8800195550100881408) ){ goto $label$8 }
	*(($5 + [16])) = (int_64)8800195550100881409
	
.LABEL $label$8
	$global$0 = ($3 + [16])
}

void .FUNC $649 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $390 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $643 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$2 = ($1 + [20])
	$1 = *($0 + [4])
	$0 = CALL $537($0, ($1 + [8]))
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$1 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $1, [1])
	*(($1 = ($0 + [4]))) = (*($1) + [1])
	return $0
}

void .FUNC $392 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_64 $36
	int_64 $37
	int_64 $38
	$3 = ($global$0 - [1072])
	$global$0 = $3
	$4 = (*($2 + [4]) - *($2))
	if ( ($4 == 0) ){ goto $label$9 }
	$5 = (int_64)0
	*($3 + [304]) = (int_64)0
	*($3 + [312]) = [0]
	*($3 + [320]) = *($1)
	$6 = int_32($4 >> [3])
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$4 }
	$4 = CALL _Znwj($4)
	*(($3 + [312])) = ($4 + ($6 << [3]))
	*($3 + [304]) = $4
	*($3 + [308]) = $4
	$7 = *($2)
	$6 = (*(($2 + [4])) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($4, $7, $6)
	*($3 + [308]) = ($4 + $6)
	if ( ($6 == 0) ){ goto $label$10 }
	$7 = ($6 & [-8])
	$8 = (($3 + [512]) | [1])
	$9 = (($3 + [512]) | [1])
	$5 = (int_64)0
	$10 = (($3 + [512]) + [8])
	
.LOOP $label$11:
	CALL $368(($3 + [720]), $0, *($4))
	$6 = *($3 + [724])
	if ( $6 ){ goto $label$12 }
	CALL $393(($3 + [512]), [29747], $4, [17091])
	$6 = $9
	if ( ((*($3 + [512]) & [1]) == 0) ){ goto $label$13 }
	$6 = *($10)
	CALL _ZdlPv($6)
	
.LABEL $label$13
	CALL eosio_assert([0], $6)
	$6 = *($3 + [724])
	
.LABEL $label$12
	$11 = *($6 + [40])
	if ( ((int_64)*($3 + [320]) == (int_64)*($6 + [8])) ){ goto $label$14 }
	CALL $394(($3 + [512]), [29764], ($3 + [320]), ($6 + [8]))
	$6 = $8
	if ( ((*($3 + [512]) & [1]) == 0) ){ goto $label$15 }
	$6 = *($10)
	CALL _ZdlPv($6)
	
.LABEL $label$15
	CALL eosio_assert([0], $6)
	
.LABEL $label$14
	$5 = ((int_64)$11 + (int_64)$5)
	$4 = ($4 + [8])
	$7 = ($7 + [-8])
	if ( $7 ){ goto $label$11 }
	$4 = *($3 + [304])
	
.LABEL $label$10
	if ( ($4 == 0) ){ goto $label$16 }
	*($3 + [308]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	*($3 + [288]) = (int_64)0
	*($3 + [296]) = [0]
	*($3 + [303]) = ((uint_64)((int_64)*(*($1 + [48])) + (int_64)$5) % (uint_64)( (int_64)37 ? (int_64)38 : ((*($1 + [60]) + [-11]) <= [2]) ))
	$12 = ($2 + [4])
	$4 = (*($12) - *($2))
	if ( ($4 == 0) ){ goto $label$17 }
	$6 = int_32($4 >> [3])
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$3 }
	$13 = CALL _Znwj($4)
	*(($3 + [296])) = ($13 + ($6 << [3]))
	*($3 + [288]) = $13
	*($3 + [292]) = $13
	$6 = *($2)
	$4 = (*(($2 + [4])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($13, $6, $4)
	$14 = (*($3 + [292]) + $4)
	*($3 + [292]) = $14
	$13 = *($3 + [288])
	if ( ((int_32)$13 == (int_32)$14) ){ goto $label$18 }
	$8 = ($1 + [16])
	$15 = (($3 + [784]) | [1])
	$16 = (($3 + [512]) | [1])
	$17 = (($3 + [856]) | [1])
	$18 = ($3 + [748])
	$10 = ($3 + [608])
	$19 = ($3 + [576])
	$9 = ($3 + [564])
	$20 = (($3 + [512]) + [32])
	$21 = (($3 + [512]) | [8])
	$22 = (($3 + [456]) | [1])
	$23 = (($3 + [512]) | [1])
	$24 = (($3 + [512]) | [1])
	$1 = ($1 + [60])
	$25 = ($3 + [560])
	$26 = ($3 + [600])
	$27 = ($3 + [640])
	$28 = ($3 + [756])
	$29 = ($3 + [740])
	
.LOOP $label$19:
	CALL $368(($3 + [392]), $0, *($13))
	$4 = *($3 + [396])
	if ( $4 ){ goto $label$20 }
	CALL $393(($3 + [512]), [29747], $13, [17091])
	$4 = $24
	if ( ((*($3 + [512]) & [1]) == 0) ){ goto $label$21 }
	$4 = *((($3 + [512]) + [8]))
	CALL _ZdlPv($4)
	
.LABEL $label$21
	CALL eosio_assert([0], $4)
	$4 = *($3 + [396])
	
.LABEL $label$20
	$30 = (*($1) + [-11])
	CALL $385(($3 + [1024]), $3, ($4 + [68]), ($4 + [80]), ($3 + [303]), ((uint_32)$30 > (uint_32)[1]))
	*(($31 = (($3 + [968]) + [8]))) = (int_64)1397703940
	$4 = *($3 + [396])
	*(($32 = (($3 + [1000]) + [8]))) = *(($4 + [24]))
	*(($33 = (($3 + [1000]) + [16]))) = *(($4 + [32]))
	*(($34 = (($3 + [984]) + [8]))) = *(($4 + [56]))
	*($3 + [968]) = (int_64)0
	*($3 + [1000]) = *($4 + [16])
	*($3 + [984]) = *($4 + [48])
	$35 = *($1)
	$5 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$23 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$26 }
	$5 = $11
	$7 = $4
	goto $label$25 
	
.LABEL $label$26
	$5 = $11
	
.LOOP $label$27:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$23 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$27 }
	
.LABEL $label$25
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$24 }
	goto $label$22 
	
.LABEL $label$23
	CALL eosio_assert([0], [22633])
	
.LABEL $label$22
	*((($3 + [248]) + [16])) = *($33)
	*((($3 + [248]) + [8])) = *($32)
	*((($3 + [232]) + [8])) = *($34)
	*((($3 + [216]) + [8])) = *($31)
	*($3 + [248]) = *($3 + [1000])
	*($3 + [232]) = *($3 + [984])
	*($3 + [216]) = *($3 + [968])
	CALL $386($3, ($3 + [248]), $35, ($3 + [232]), ($3 + [216]))
	if ( (int_64)(*($3 + [1024]) == 0) ){ goto $label$28 }
	*(($31 = (($3 + [928]) + [8]))) = (int_64)1397703940
	$4 = *($3 + [396])
	*(($32 = (($3 + [944]) + [8]))) = *(($4 + [24]))
	*(($33 = (($3 + [944]) + [16]))) = *(($4 + [32]))
	*($3 + [928]) = (int_64)0
	*($3 + [944]) = *($4 + [16])
	$34 = *($1)
	$5 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$33 }
	$5 = $11
	$7 = $4
	goto $label$32 
	
.LABEL $label$33
	$5 = $11
	
.LOOP $label$34:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$34 }
	
.LABEL $label$32
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [22633])
	
.LABEL $label$29
	$4 = (($3 + [1024]) + [8])
	$5 = *($4)
	*((($3 + [912]) + [8])) = $5
	*((($3 + [192]) + [8])) = *($32)
	*((($3 + [192]) + [16])) = *($33)
	*((($3 + [176]) + [8])) = *($31)
	*((($3 + [160]) + [8])) = $5
	$5 = *($3 + [1024])
	*($3 + [912]) = $5
	*($3 + [192]) = *($3 + [944])
	*($3 + [176]) = *($3 + [928])
	*($3 + [160]) = $5
	CALL $386($3, ($3 + [192]), $34, ($3 + [176]), ($3 + [160]))
	*(($31 = (($3 + [872]) + [8]))) = *($4)
	$4 = *($3 + [396])
	*(($32 = (($3 + [888]) + [8]))) = *(($4 + [24]))
	*(($33 = (($3 + [888]) + [16]))) = *(($4 + [32]))
	*($3 + [872]) = *($3 + [1024])
	*($3 + [888]) = *($4 + [16])
	CALL $395(($3 + [512]), [29779], ( [29823] ? [29814] : ($30 <= [2]) ), [29832], ($3 + [303]))
	$6 = $23
	if ( ((*($3 + [512]) & [1]) == 0) ){ goto $label$35 }
	$6 = *((($3 + [512]) + [8]))
	CALL _ZdlPv($6)
	
.LABEL $label$35
	*(($34 = (($3 + [856]) + [8]))) = [0]
	*($3 + [856]) = (int_64)0
	$4 = CALL $743($6)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$38 }
	*($3 + [856]) = ($4 << [1])
	$7 = $17
	if ( $4 ){ goto $label$37 }
	goto $label$36 
	
.LABEL $label$38
	$35 = (($4 + [16]) & [-16])
	$7 = CALL _Znwj($35)
	*($34) = $7
	*($3 + [856]) = ($35 | [1])
	*($3 + [860]) = $4
	
.LABEL $label$37
	CALL memcpy($7, $6, $4)
	
.LABEL $label$36
	*(($7 + $4)) = [0]
	*((($3 + [136]) + [16])) = *($33)
	*((($3 + [136]) + [8])) = *($32)
	*((($3 + [120]) + [8])) = *($31)
	*($3 + [136]) = *($3 + [888])
	*($3 + [120]) = *($3 + [872])
	CALL $162(($3 + [136]), ($3 + [120]), ($3 + [856]), [0])
	if ( ((*($3 + [856]) & [1]) == 0) ){ goto $label$28 }
	CALL _ZdlPv(*($34))
	
.LABEL $label$28
	$5 = (int_64)340498729282
	$4 = [0]
	
.LOOP $label$41:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$40 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$43 }
	$5 = $11
	$7 = $4
	goto $label$42 
	
.LABEL $label$43
	$5 = $11
	
.LOOP $label$44:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$40 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$44 }
	
.LABEL $label$42
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$41 }
	goto $label$39 
	
.LABEL $label$40
	CALL eosio_assert([0], [22633])
	
.LABEL $label$39
	$36 = (int_64)0
	$4 = *($3 + [396])
	if ( ((int_64)*(($4 + [56])) != (int_64)1397703940) ){ goto $label$45 }
	$5 = *($4 + [48])
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$46 }
	$6 = CALL _Znwj([280])
	$4 = CALL $111($6)
	*([0] + [8632]) = $6
	
.LABEL $label$46
	*($3 + [840]) = [29858]
	*($3 + [844]) = CALL $743([29858])
	*($3 + [112]) = *($3 + [840])
	CALL $10(($3 + [848]), ($3 + [112]))
	$36 = ((uint_64)((int_64)CALL $153($4, *($3 + [848]), (int_64)1000) * (int_64)$5) / (uint_64)(int_64)100)
	$5 = (int_64)340498729282
	$4 = [0]
	
.LOOP $label$49:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$48 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$51 }
	$5 = $11
	$7 = $4
	goto $label$50 
	
.LABEL $label$51
	$5 = $11
	
.LOOP $label$52:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$48 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$52 }
	
.LABEL $label$50
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$49 }
	goto $label$47 
	
.LABEL $label$48
	CALL eosio_assert([0], [22633])
	
.LABEL $label$47
	*(($31 = (($3 + [800]) + [8]))) = (int_64)87167674696196
	$4 = *($3 + [396])
	*(($32 = (($3 + [816]) + [8]))) = *(($4 + [24]))
	*(($33 = (($3 + [816]) + [16]))) = *(($4 + [32]))
	*($3 + [800]) = $36
	*($3 + [816]) = *($4 + [16])
	CALL $396(($3 + [512]), [29870], ( [29823] ? [29814] : ($30 <= [2]) ), [29901])
	$6 = $16
	if ( ((*($3 + [512]) & [1]) == 0) ){ goto $label$53 }
	$6 = *((($3 + [512]) + [8]))
	CALL _ZdlPv($6)
	
.LABEL $label$53
	*(($30 = (($3 + [784]) + [8]))) = [0]
	*($3 + [784]) = (int_64)0
	$4 = CALL $743($6)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$56 }
	*($3 + [784]) = ($4 << [1])
	$7 = $15
	if ( $4 ){ goto $label$55 }
	goto $label$54 
	
.LABEL $label$56
	$34 = (($4 + [16]) & [-16])
	$7 = CALL _Znwj($34)
	*($30) = $7
	*($3 + [784]) = ($34 | [1])
	*($3 + [788]) = $4
	
.LABEL $label$55
	CALL memcpy($7, $6, $4)
	
.LABEL $label$54
	*(($7 + $4)) = [0]
	*((($3 + [88]) + [16])) = *($33)
	*((($3 + [88]) + [8])) = *($32)
	*((($3 + [72]) + [8])) = *($31)
	*($3 + [88]) = *($3 + [816])
	*($3 + [72]) = *($3 + [800])
	CALL $162(($3 + [88]), ($3 + [72]), ($3 + [784]), [4])
	if ( ((*($3 + [784]) & [1]) == 0) ){ goto $label$45 }
	CALL _ZdlPv(*($30))
	
.LABEL $label$45
	$4 = *($3 + [396])
	*(($6 = (($3 + [760]) + [8]))) = *(($4 + [24]))
	*(($7 = (($3 + [760]) + [16]))) = *(($4 + [32]))
	*($3 + [760]) = *($4 + [16])
	*($3 + [704]) = [8617]
	*($3 + [708]) = CALL $743([8617])
	*($3 + [64]) = *($3 + [704])
	CALL $10(($3 + [712]), ($3 + [64]))
	*($3 + [688]) = [8344]
	*($3 + [692]) = CALL $743([8344])
	*($3 + [56]) = *($3 + [688])
	CALL $10(($3 + [696]), ($3 + [56]))
	*($3 + [672]) = [8617]
	$5 = *($3 + [696])
	$11 = *($3 + [712])
	*($3 + [676]) = CALL $743([8617])
	*($3 + [48]) = *($3 + [672])
	CALL $10(($3 + [680]), ($3 + [48]))
	*($3 + [656]) = [19703]
	*($3 + [660]) = CALL $743([19703])
	*($3 + [40]) = *($3 + [656])
	CALL $10(($3 + [664]), ($3 + [40]))
	$37 = *($3 + [320])
	*(($30 = (($3 + [488]) + [16]))) = *($7)
	*(($31 = (($3 + [488]) + [8]))) = *($6)
	*($3 + [488]) = *($3 + [760])
	$4 = *($3 + [396])
	*(($32 = (($3 + [472]) + [8]))) = *(($4 + [56]))
	*($3 + [472]) = *($4 + [48])
	$33 = *($3 + [303])
	*(($6 = (($3 + [456]) + [8]))) = [0]
	*($3 + [456]) = (int_64)0
	$34 = ( [19937] ? [19935] : (int_64)(*($3 + [1024]) == 0) )
	$4 = CALL $743($34)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$59 }
	*($3 + [456]) = ($4 << [1])
	$7 = $22
	if ( $4 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$35 = (($4 + [16]) & [-16])
	$7 = CALL _Znwj($35)
	*($6) = $7
	*($3 + [456]) = ($35 | [1])
	*($3 + [460]) = $4
	
.LABEL $label$58
	CALL memcpy($7, $34, $4)
	
.LABEL $label$57
	*(($7 + $4)) = [0]
	*(($4 = (($3 + [440]) + [8]))) = *((($3 + [1024]) + [8]))
	*($3 + [440]) = *($3 + [1024])
	*(($7 = (($3 + [400]) + [24]))) = *(($8 + [24]))
	*(($34 = (($3 + [400]) + [16]))) = *(($8 + [16]))
	*($21) = *($3 + [488])
	*(($21 + [8])) = *($31)
	*(($21 + [16])) = *($30)
	*($20) = *($3 + [472])
	*(($20 + [8])) = *($32)
	*($3 + [512]) = $37
	*($3 + [408]) = *(($8 + [8]))
	*($3 + [400]) = *($8)
	$30 = *($1)
	*($25) = $33
	*((($3 + [512]) + [80])) = $36
	*($26) = (int_64)87167674696196
	$31 = *($6)
	*($6) = [0]
	*($9) = *($3 + [456])
	*(($9 + [8])) = $31
	*(($19 + [8])) = *($4)
	*($19) = *($3 + [440])
	*(($10 + [8])) = *($3 + [408])
	*(($10 + [24])) = *($7)
	*(($10 + [16])) = *($34)
	*($10) = *($3 + [400])
	*($3 + [456]) = (int_64)0
	*($27) = $30
	*((($3 + [720]) + [8])) = *($3 + [664])
	*($3 + [720]) = *($3 + [680])
	$4 = CALL _Znwj([16])
	*(($7 = (($3 + [720]) + [16]))) = $4
	*($4) = $11
	*($4 + [8]) = $5
	*($18) = (int_64)0
	*($28) = [0]
	$4 = ($4 + [16])
	*((($3 + [720]) + [24])) = $4
	*($29) = $4
	$4 = *($9)
	$30 = ( *((($3 + [512]) + [56])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($30 + [114])
	$5 = (CASTING uint_64)(uint_32 $30)
	
.LOOP $label$60:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$60 }
	if ( ($4 == 0) ){ goto $label$62 }
	CALL $11($18, $4)
	$30 = *((($3 + [720]) + [32]))
	$4 = *($18)
	goto $label$61 
	
.LABEL $label$62
	$30 = [0]
	$4 = [0]
	
.LABEL $label$61
	*((($3 + [1040]) + [8])) = $30
	*($3 + [1044]) = $4
	*($3 + [1040]) = $4
	*($3 + [1056]) = ($3 + [1040])
	*($3 + [1064]) = ($3 + [512])
	CALL $397(($3 + [1064]), ($3 + [1056]))
	CALL $13(($3 + [1040]), ($3 + [720]))
	$4 = *($3 + [1040])
	CALL send_inline($4, (*($3 + [1044]) - $4))
	$4 = *($3 + [1040])
	if ( ($4 == 0) ){ goto $label$63 }
	*($3 + [1044]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$63
	$4 = *($18)
	if ( ($4 == 0) ){ goto $label$64 }
	*((($3 + [720]) + [32])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$64
	$4 = *($7)
	if ( ($4 == 0) ){ goto $label$65 }
	*($29) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$65
	if ( ((*($9) & [1]) == 0) ){ goto $label$66 }
	CALL _ZdlPv(*((($3 + [512]) + [60])))
	
.LABEL $label$66
	if ( ((*($3 + [456]) & [1]) == 0) ){ goto $label$67 }
	CALL _ZdlPv(*($6))
	
.LABEL $label$67
	$13 = ($13 + [8])
	if ( ((int_32)$13 != (int_32)$14) ){ goto $label$19 }
	$13 = *($3 + [288])
	
.LABEL $label$18
	if ( ($13 == 0) ){ goto $label$17 }
	*($3 + [292]) = $13
	CALL _ZdlPv($13)
	
.LABEL $label$17
	*($3 + [280]) = [0]
	*($3 + [272]) = (int_64)0
	$4 = (*($12) - *($2))
	if ( ($4 == 0) ){ goto $label$8 }
	$6 = int_32($4 >> [3])
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	$4 = CALL _Znwj($4)
	*(($3 + [280])) = ($4 + ($6 << [3]))
	*($3 + [272]) = $4
	*($3 + [276]) = $4
	$7 = *($2)
	$6 = (*(($2 + [4])) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$68 }
	CALL memcpy($4, $7, $6)
	$8 = (*($3 + [276]) + $6)
	*($3 + [276]) = $8
	$4 = *($3 + [272])
	if ( ((int_32)$4 == (int_32)$8) ){ goto $label$68 }
	$10 = (($3 + [512]) | [1])
	$9 = (($3 + [512]) + [8])
	
.LOOP $label$69:
	CALL $368(($3 + [720]), $0, *($4))
	if ( *($3 + [724]) ){ goto $label$70 }
	CALL $393(($3 + [512]), [29747], $4, [17091])
	$6 = $10
	if ( ((*($3 + [512]) & [1]) == 0) ){ goto $label$71 }
	$6 = *($9)
	CALL _ZdlPv($6)
	
.LABEL $label$71
	CALL eosio_assert([0], $6)
	
.LABEL $label$70
	$5 = *($3 + [720])
	$6 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $6) ){ goto $label$72 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$72
	$7 = CALL db_next_i64(*($6 + [96]), ($3 + [512]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$73 }
	CALL $398((CASTING uint_32)(uint_64 $5), $7)
	
.LABEL $label$73
	CALL $399($0, $6)
	$4 = ($4 + [8])
	if ( ((int_32)$8 != (int_32)$4) ){ goto $label$69 }
	$4 = *($3 + [272])
	
.LABEL $label$68
	if ( ($4 == 0) ){ goto $label$8 }
	*($3 + [276]) = $4
	CALL _ZdlPv($4)
	goto $label$8 
	
.LABEL $label$9
	$5 = *(*($1 + [48]))
	$4 = *($1 + [60])
	*($3 + [376]) = [8617]
	*($3 + [380]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [376])
	$6 = CALL $10(($3 + [384]), ($3 + [32]))
	*($3 + [360]) = [8344]
	*($3 + [364]) = CALL $743([8344])
	*($3 + [24]) = *($3 + [360])
	$7 = CALL $10(($3 + [368]), ($3 + [24]))
	*($3 + [344]) = [8617]
	$36 = *($7)
	$37 = *($6)
	*($3 + [348]) = CALL $743([8617])
	*($3 + [16]) = *($3 + [344])
	$0 = CALL $10(($3 + [352]), ($3 + [16]))
	*($3 + [328]) = [19703]
	*($3 + [332]) = CALL $743([19703])
	*($3 + [8]) = *($3 + [328])
	$8 = (CASTING uint_32)(uint_64 ((uint_64)$5 % (uint_64)( (int_64)37 ? (int_64)38 : (($4 + [-11]) <= [2]) )))
	$10 = CALL $10(($3 + [336]), ($3 + [8]))
	$38 = *($1)
	$5 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$76:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$75 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$78 }
	$5 = $11
	$7 = $4
	goto $label$77 
	
.LABEL $label$78
	$5 = $11
	
.LOOP $label$79:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$75 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$76 }
	goto $label$74 
	
.LABEL $label$75
	CALL eosio_assert([0], [22633])
	
.LABEL $label$74
	*(($3 + [952])) = [0]
	*($3 + [944]) = (int_64)0
	$6 = CALL $743([19715])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$82 }
	*($3 + [944]) = ($6 << [1])
	$7 = (($3 + [944]) | [1])
	if ( $6 ){ goto $label$81 }
	goto $label$80 
	
.LABEL $label$82
	$4 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($4)
	*($3 + [944]) = ($4 | [1])
	*($3 + [952]) = $7
	*($3 + [948]) = $6
	
.LABEL $label$81
	CALL memcpy($7, [19715], $6)
	
.LABEL $label$80
	$4 = [0]
	*(($7 + $6)) = [0]
	$5 = (int_64)5459781
	
.LOOP $label$85:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$84 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$87 }
	$5 = $11
	$7 = $4
	goto $label$86 
	
.LABEL $label$87
	$5 = $11
	
.LOOP $label$88:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$84 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$88 }
	
.LABEL $label$86
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$85 }
	goto $label$83 
	
.LABEL $label$84
	CALL eosio_assert([0], [22633])
	
.LABEL $label$83
	$5 = (int_64)340498729282
	$4 = [0]
	
.LOOP $label$91:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$90 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$93 }
	$5 = $11
	$7 = $4
	goto $label$92 
	
.LABEL $label$93
	$5 = $11
	
.LOOP $label$94:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$90 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$6 = ((int_32)$4 < (int_32)[6])
	$7 = ($4 + [1])
	$4 = $7
	if ( $6 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$91 }
	goto $label$89 
	
.LABEL $label$90
	CALL eosio_assert([0], [22633])
	
.LABEL $label$89
	*((($3 + [512]) + [16])) = (int_64)0
	*((($3 + [512]) + [24])) = (int_64)0
	*((($3 + [512]) + [40])) = (int_64)1397703940
	*(($4 = (($3 + [400]) + [24]))) = *(($1 + [40]))
	*(($6 = (($3 + [400]) + [16]))) = *(($1 + [32]))
	$7 = ($3 + [952])
	*((($3 + [512]) + [60])) = *($7)
	*($3 + [512]) = $38
	*($3 + [520]) = (int_64)0
	*($3 + [544]) = (int_64)0
	*($3 + [560]) = $8
	*($3 + [400]) = *($1 + [16])
	*($3 + [564 align=4]) = *($3 + [944])
	*($3 + [408]) = *(($1 + [24]))
	$8 = *(($1 + [60]))
	*($7) = [0]
	*(($3 + [584])) = (int_64)1397703940
	*(($3 + [600])) = (int_64)87167674696196
	*(($3 + [632])) = *($4)
	*(($3 + [624])) = *($6)
	*(($3 + [616])) = *($3 + [408])
	*($3 + [944]) = (int_64)0
	*($3 + [576]) = (int_64)0
	*($3 + [592]) = (int_64)0
	*($3 + [640]) = $8
	*($3 + [608]) = *($3 + [400])
	$5 = *($0)
	*($3 + [728]) = *($10)
	*($3 + [720]) = $5
	*(($4 = CALL _Znwj([16]))) = $37
	*($4 + [8]) = $36
	*(($3 + [756])) = [0]
	$6 = ($4 + [16])
	*((($3 + [720]) + [24])) = $6
	*(($3 + [740])) = $6
	*($3 + [736]) = $4
	*($3 + [748 align=4]) = (int_64)0
	$4 = *($3 + [564])
	$6 = ( *(($3 + [568])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($6 + [114])
	$5 = (CASTING uint_64)(uint_32 $6)
	$6 = ($3 + [748])
	
.LOOP $label$95:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$95 }
	if ( ($4 == 0) ){ goto $label$97 }
	CALL $11($6, $4)
	$6 = *(($3 + [752]))
	$4 = *(($3 + [748]))
	goto $label$96 
	
.LABEL $label$97
	$6 = [0]
	$4 = [0]
	
.LABEL $label$96
	*($3 + [1004]) = $4
	*($3 + [1000]) = $4
	*($3 + [1008]) = $6
	*($3 + [816]) = ($3 + [1000])
	*($3 + [888]) = ($3 + [512])
	CALL $397(($3 + [888]), ($3 + [816]))
	CALL $13(($3 + [1000]), ($3 + [720]))
	$4 = *($3 + [1000])
	CALL send_inline($4, (*($3 + [1004]) - $4))
	$4 = *($3 + [1000])
	if ( ($4 == 0) ){ goto $label$98 }
	*($3 + [1004]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$98
	$4 = *($3 + [748])
	if ( ($4 == 0) ){ goto $label$99 }
	*(($3 + [752])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$99
	$4 = *($3 + [736])
	if ( ($4 == 0) ){ goto $label$100 }
	*(($3 + [740])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$100
	if ( ((*(($3 + [564])) & [1]) == 0) ){ goto $label$101 }
	CALL _ZdlPv(*(($3 + [572])))
	
.LABEL $label$101
	if ( ((*($3 + [944]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($3 + [952])))
	
.LABEL $label$8
	$global$0 = ($3 + [1072])
	return (unreachable)
	
.LABEL $label$7
	CALL $708(($3 + [456]))
	
.LABEL $label$6
	CALL $708(($3 + [856]))
	
.LABEL $label$5
	CALL $708(($3 + [784]))
	
.LABEL $label$4
	CALL $727(($3 + [304]))
	
.LABEL $label$3
	CALL $727(($3 + [288]))
	
.LABEL $label$2
	CALL $727(($3 + [272]))
	
.LABEL $label$1
	CALL $708(($3 + [944]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $393 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $604($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $394 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $605($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $395 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $606($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $396 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $607($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $397 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $156(*($1), ($0 + [8]))
	$3 = ($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [40]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($2) = $0
	CALL $603($2, $1)
	$global$0 = ($2 + [16])
}

int_64 .FUNC $653 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [16])
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$3 }
	$2 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)8800273824474988544, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $444($0, $3)
	*($1 + [12]) = [0]
	*($1 + [8]) = $0
	$2 = *(*(CALL $656(($1 + [8])) + [4]))
	$2 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	*(($0 + [16])) = $2
	
.LABEL $label$3
	if ( (uint_64)($2 <= (int_64)-2) ){ goto $label$1 }
	CALL eosio_assert([0], [30054])
	$2 = *(($0 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($0 + [16])) = (int_64)0
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $652 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $365 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $720($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $364 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	$4 = ($global$0 - [64])
	$global$0 = $4
	if ( (((*($2 + [4]) + [-1]) - *($2)) <= [5]) ){ goto $label$1 }
	CALL eosio_assert([0], [19377])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([4]))) = (*($5) & [-32])
	*($4 + [48]) = $5
	*($4 + [52 align=4]) = (int_64)4294967301
	$8 = *($2)
	$6 = ($2 + [4])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$2 }
	$9 = ($4 | [1])
	$10 = *($4 + [48])
	$11 = ($4 + [8])
	$5 = [0]
	
.LOOP $label$3:
	$12 = ($8 + $5)
	$13 = *($12)
	if ( ((([1] << ($13 & [31])) & *(($10 + (uint_32($13 >> [3]) & [28])))) == 0) ){ goto $label$4 }
	CALL $365($4, [19418], $12)
	$8 = $9
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	$8 = *($11)
	CALL _ZdlPv($8)
	
.LABEL $label$5
	CALL eosio_assert([0], $8)
	$7 = *($6)
	$8 = *($2)
	
.LABEL $label$4
	*(($12 = ($10 + (uint_32(($13 = *(($8 + $5))) >> [3]) & [28])))) = (([1] << ($13 & [31])) | *($12))
	$5 = ($5 + [1])
	if ( ($5 <= ($7 - $8)) ){ goto $label$3 }
	
.LABEL $label$2
	if ( (($3 + [-7]) <= [3]) ){ goto $label$6 }
	CALL eosio_assert([0], [19455])
	
.LABEL $label$6
	CALL $366($4, ($0 + [200]))
	if ( (*($4 + [32]) == 0) ){ goto $label$7 }
	CALL eosio_assert([0], [19491])
	
.LABEL $label$7
	$14 = *($1 + [8])
	$5 = *($4 + [8])
	$8 = *(($4 + [12]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$10 }
	$10 = int_32(($8 - $5) >> [4])
	$8 = [0]
	
.LOOP $label$11:
	if ( ((int_64)*(($5 + [8])) == (int_64)$14) ){ goto $label$9 }
	$5 = ($5 + [16])
	$8 = ($8 + [1])
	if ( ($8 <= $10) ){ goto $label$11 }
	
.LABEL $label$10
	$5 = [0]
	CALL eosio_assert([0], [18787])
	$15 = (int_64)5459781
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$16 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$15 = $16
	$10 = $5
	goto $label$15 
	
.LABEL $label$16
	$15 = $16
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $8 ){ goto $label$17 }
	
.LABEL $label$15
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [22633])
	
.LABEL $label$12
	$15 = (int_64)0
	if ( ((int_64)$14 == (int_64)1397703940) ){ goto $label$8 }
	CALL eosio_assert([0], [23115])
	goto $label$8 
	
.LABEL $label$9
	$15 = *($5)
	
.LABEL $label$8
	$17 = *($1)
	if ( ((int_64)$15 <= (int_64)$17) ){ goto $label$18 }
	CALL eosio_assert([0], [19527])
	
.LABEL $label$18
	$5 = *($4 + [20])
	$8 = *(($4 + [24]))
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$24 }
	$10 = int_32(($8 - $5) >> [4])
	$8 = [0]
	
.LOOP $label$25:
	if ( ((int_64)*(($5 + [8])) == (int_64)$14) ){ goto $label$23 }
	$5 = ($5 + [16])
	$8 = ($8 + [1])
	if ( ($8 <= $10) ){ goto $label$25 }
	
.LABEL $label$24
	$5 = [0]
	CALL eosio_assert([0], [18787])
	$15 = (int_64)5459781
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $15) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$16 = (uint_64)$15 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$15 & (int_64)65280) == (int_64)0) ){ goto $label$30 }
	$15 = $16
	$10 = $5
	goto $label$29 
	
.LABEL $label$30
	$15 = $16
	
.LOOP $label$31:
	if ( ((int_64)((int_64)$15 & (int_64)65280) != (int_64)0) ){ goto $label$27 }
	$15 = (uint_64)$15 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$10 = ($5 + [1])
	$5 = $10
	if ( $8 ){ goto $label$31 }
	
.LABEL $label$29
	$5 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	CALL eosio_assert([0], [22633])
	
.LABEL $label$26
	if ( ((int_64)$14 != (int_64)1397703940) ){ goto $label$32 }
	if ( ((int_64)0 < (int_64)$17) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$32
	CALL eosio_assert([0], [23115])
	if ( ((int_64)0 >= (int_64)$17) ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$23
	if ( ((int_64)*($5) >= (int_64)$17) ){ goto $label$21 }
	
.LABEL $label$22
	CALL eosio_assert([0], [19547])
	$5 = *($4 + [36])
	if ( $5 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$5 = *($4 + [36])
	if ( ($5 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	*(($4 + [40])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$19
	$5 = *($4 + [20])
	if ( ($5 == 0) ){ goto $label$33 }
	*(($4 + [24])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$33
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$34 }
	*(($4 + [12])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$34
	$5 = *($4 + [48])
	if ( ($5 == 0) ){ goto $label$35 }
	CALL _ZdlPv($5)
	
.LABEL $label$35
	$global$0 = ($4 + [64])
}

void .FUNC $367 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($0) = (int_64)0
	*($0 + [8]) = [0]
	*($4 + [12]) = $3
	if ( ((uint_32)$3 > (uint_32)[12]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$19
	*($4 + [8]) = $1
	*($4 + [16]) = (int_64)0
	*($4 + [40]) = $2
	$3 = [0]
	$5 = CALL db_idx64_lowerbound(*($1), *($1 + [8]), (int_64)-4812917093941759104, ($4 + [40]), ($4 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$20 }
	CALL $368(($4 + [32]), $1, *($4 + [16]))
	*(($3 = *($4 + [36])) + [100]) = $5
	
.LABEL $label$20
	if ( ($3 == 0) ){ goto $label$17 }
	$6 = *($3 + [8])
	*($4 + [16]) = ($4 + [8])
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$16 }
	*($4 + [20]) = $3
	$7 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$21:
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)*($7)) ){ goto $label$23 }
	*($5) = ($1 + [8])
	*($1) = *($3)
	goto $label$22 
	
.LABEL $label$23
	CALL $1($0, $3)
	
.LABEL $label$22
	CALL $369(($4 + [16]))
	$3 = *($4 + [20])
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((int_64)*($3 + [8]) == (int_64)$2) ){ goto $label$21 }
	goto $label$1 
	
.LABEL $label$18
	$5 = ($1 + [160])
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)0
	*($4 + [40]) = $2
	$3 = [0]
	$1 = CALL db_idx64_lowerbound(*($1 + [160]), *(($1 + [168])), (int_64)-4293738990248394752, ($4 + [40]), ($4 + [16]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$24 }
	CALL $370(($4 + [32]), $5, *($4 + [16]))
	*(($3 = *($4 + [36])) + [84]) = $1
	
.LABEL $label$24
	if ( ($3 == 0) ){ goto $label$15 }
	$6 = *($3 + [8])
	*($4 + [16]) = ($4 + [8])
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$10 }
	*($4 + [20]) = $3
	$7 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$25:
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)*($7)) ){ goto $label$27 }
	*($5) = ($1 + [8])
	*($1) = *($3)
	goto $label$26 
	
.LABEL $label$27
	CALL $1($0, $3)
	
.LABEL $label$26
	CALL $371(($4 + [16]))
	$3 = *($4 + [20])
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((int_64)*($3 + [8]) == (int_64)$2) ){ goto $label$25 }
	goto $label$1 
	
.LABEL $label$17
	*($4 + [20]) = [0]
	*($4 + [16]) = ($4 + [8])
	goto $label$1 
	
.LABEL $label$16
	*($4 + [20]) = [0]
	goto $label$1 
	
.LABEL $label$15
	*($4 + [20]) = [0]
	*($4 + [16]) = ($4 + [8])
	goto $label$1 
	
.LABEL $label$14
	$5 = ($1 + [80])
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)0
	*($4 + [40]) = $2
	$3 = [0]
	$1 = CALL db_idx64_lowerbound(*($1 + [80]), *(($1 + [88])), (int_64)5445031321149636608, ($4 + [40]), ($4 + [16]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$28 }
	CALL $372(($4 + [32]), $5, *($4 + [16]))
	*(($3 = *($4 + [36])) + [76]) = $1
	
.LABEL $label$28
	if ( ($3 == 0) ){ goto $label$7 }
	$6 = *($3 + [8])
	*($4 + [16]) = ($4 + [8])
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$4 }
	*($4 + [20]) = $3
	$7 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$29:
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)*($7)) ){ goto $label$31 }
	*($5) = ($1 + [8])
	*($1) = *($3)
	goto $label$30 
	
.LABEL $label$31
	CALL $1($0, $3)
	
.LABEL $label$30
	CALL $373(($4 + [16]))
	$3 = *($4 + [20])
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((int_64)*($3 + [8]) == (int_64)$2) ){ goto $label$29 }
	goto $label$1 
	
.LABEL $label$13
	CALL $374(($4 + [16]), [19568], ($4 + [12]))
	if ( (*($4 + [16]) & [1]) ){ goto $label$9 }
	$3 = (($4 + [16]) | [1])
	goto $label$8 
	
.LABEL $label$12
	$5 = ($1 + [320])
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)0
	*($4 + [40]) = $2
	$3 = [0]
	$1 = CALL db_idx64_lowerbound(*($1 + [320]), *(($1 + [328])), (int_64)-8173735248220127232, ($4 + [40]), ($4 + [16]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$32 }
	CALL $375(($4 + [32]), $5, *($4 + [16]))
	*(($3 = *($4 + [36])) + [76]) = $1
	
.LABEL $label$32
	if ( ($3 == 0) ){ goto $label$6 }
	$6 = *($3 + [8])
	*($4 + [16]) = ($4 + [8])
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$2 }
	*($4 + [20]) = $3
	$7 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$33:
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)*($7)) ){ goto $label$35 }
	*($5) = ($1 + [8])
	*($1) = *($3)
	goto $label$34 
	
.LABEL $label$35
	CALL $1($0, $3)
	
.LABEL $label$34
	CALL $376(($4 + [16]))
	$3 = *($4 + [20])
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((int_64)*($3 + [8]) == (int_64)$2) ){ goto $label$33 }
	goto $label$1 
	
.LABEL $label$11
	$5 = ($1 + [280])
	*($4 + [8]) = $5
	*($4 + [16]) = (int_64)0
	*($4 + [40]) = $2
	$3 = [0]
	$1 = CALL db_idx64_lowerbound(*($1 + [280]), *(($1 + [288])), (int_64)-4293738252348264448, ($4 + [40]), ($4 + [16]))
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$36 }
	CALL $377(($4 + [32]), $5, *($4 + [16]))
	*(($3 = *($4 + [36])) + [92]) = $1
	
.LABEL $label$36
	if ( ($3 == 0) ){ goto $label$5 }
	$6 = *($3 + [8])
	*($4 + [16]) = ($4 + [8])
	if ( ((int_64)$6 != (int_64)$2) ){ goto $label$3 }
	*($4 + [20]) = $3
	$7 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$37:
	$1 = *($5)
	if ( ((int_32)$1 == (int_32)*($7)) ){ goto $label$39 }
	*($5) = ($1 + [8])
	*($1) = *($3)
	goto $label$38 
	
.LABEL $label$39
	CALL $1($0, $3)
	
.LABEL $label$38
	CALL $378(($4 + [16]))
	$3 = *($4 + [20])
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((int_64)*($3 + [8]) == (int_64)$2) ){ goto $label$37 }
	goto $label$1 
	
.LABEL $label$10
	*($4 + [20]) = [0]
	goto $label$1 
	
.LABEL $label$9
	$3 = *($4 + [24])
	CALL _ZdlPv($3)
	
.LABEL $label$8
	CALL eosio_assert([0], $3)
	goto $label$1 
	
.LABEL $label$7
	*($4 + [20]) = [0]
	*($4 + [16]) = ($4 + [8])
	goto $label$1 
	
.LABEL $label$6
	*($4 + [20]) = [0]
	*($4 + [16]) = ($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	*($4 + [20]) = [0]
	*($4 + [16]) = ($4 + [8])
	goto $label$1 
	
.LABEL $label$4
	*($4 + [20]) = [0]
	goto $label$1 
	
.LABEL $label$3
	*($4 + [20]) = [0]
	goto $label$1 
	
.LABEL $label$2
	*($4 + [20]) = [0]
	
.LABEL $label$1
	$global$0 = ($4 + [48])
	$3
}

void .FUNC $366 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [48]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4293730779636826112, (int_64)-4293730779636826112)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $124($1, $2)
	if ( ((int_32)*($2 + [48]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$1
	CALL $210($0, $2)
	*($0 + [36 align=4]) = (int_64)0
	*(($0 + [44])) = [0]
	$1 = (*(($2 + [40])) - *($2 + [36]))
	if ( ($1 == 0) ){ goto $label$6 }
	$3 = int_32($1 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$5 }
	$1 = CALL _Znwj($1)
	*(($0 + [36])) = $1
	*(($0 + [44])) = ($1 + ($3 << [3]))
	*(($0 = ($0 + [40]))) = $1
	$3 = *(($2 + [36]))
	$2 = (*(($2 + [40])) - $3)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	*($0) = (*($0) + $2)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$5
	CALL $727(($0 + [36]))
}

void .FUNC $361 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [56]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-8173740188290908160, (int_64)-8173740188290908160)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$2 = CALL $121($1, $2)
	if ( ((int_32)*($2 + [56]) == (int_32)$1) ){ goto $label$2 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$2
	CALL $215($0, $2)
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [29701])
	CALL $215($0, [0])
}

void .FUNC $360 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [112])
	$global$0 = $2
	$3 = ($0 + [400])
	CALL $361(($2 + [56]), $3)
	if ( ((int_32)*($2 + [100]) != (int_32)(CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))) ){ goto $label$2 }
	$0 = *($2 + [104])
	goto $label$1 
	
.LABEL $label$2
	*(($2 + [100])) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$0 = *([0] + [8632])
	if ( $0 ){ goto $label$3 }
	$4 = CALL _Znwj([280])
	$0 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$3
	*($2 + [40]) = [19193]
	*($2 + [44]) = CALL $743([19193])
	*($2 + [16]) = *($2 + [40])
	$0 = (CASTING uint_32)(uint_64 CALL $153($0, *(CALL $10(($2 + [48]), ($2 + [16]))), (int_64)5))
	*($2 + [104]) = $0
	
.LABEL $label$1
	if ( ($0 & [255]) ){ goto $label$4 }
	CALL eosio_assert([0], [19206])
	$0 = *(($2 + [104]))
	
.LABEL $label$4
	*(($2 + [104])) = ($0 + [-1])
	*($2 + [24]) = [8617]
	*($2 + [28]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [24])
	CALL $123($3, ($2 + [56]), *(CALL $10(($2 + [32]), ($2 + [8]))))
	if ( (*($2 + [97]) == 0) ){ goto $label$5 }
	CALL eosio_assert([0], [19277])
	
.LABEL $label$5
	if ( ((uint_32)$1 > (uint_32)[1]) ){ goto $label$7 }
	$0 = (*($2 + [84]) + $0)
	$0 = ($1 << [4])
	$1 = (*($2 + [72]) + $0)
	if ( ((int_64)*($1 + [8]) == (int_64)*($0 + [8])) ){ goto $label$8 }
	CALL eosio_assert([0], [23115])
	
.LABEL $label$8
	if ( ((int_64)*($1) <= (int_64)*($0)) ){ goto $label$6 }
	CALL eosio_assert([0], [19318])
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [19360])
	
.LABEL $label$6
	$0 = *(($2 + [84]))
	if ( ($0 == 0) ){ goto $label$9 }
	*(($2 + [88])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$9
	$0 = *($2 + [72])
	if ( ($0 == 0) ){ goto $label$10 }
	*(($2 + [76])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$10
	$global$0 = ($2 + [112])
}

void .FUNC $363 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([72])
	CALL $122($3)
	*($3 + [56]) = $1
	CALL $595(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-8173740188290908160
	$5 = *($3 + [60])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-8173740188290908160
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $594(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$1 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($1 == 0) ){ goto $label$4 }
	$3 = *($1 + [28])
	if ( ($3 == 0) ){ goto $label$5 }
	*(($1 + [32])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$5
	$3 = *($1 + [16])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($1 + [20])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$6
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $362 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [56]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = *($3)
	*($1) = *($6)
	*(($1 + [8])) = *(($6 + [8]))
	$3 = [16]
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$3 }
	CALL $596(($1 + [16]), *($6 + [16]), *(($6 + [20])))
	CALL $596(($1 + [28]), *($6 + [28]), *(($6 + [32])))
	
.LABEL $label$3
	*($1 + [40]) = *($6 + [40])
	*(($1 + [48])) = *(($6 + [48]))
	$7 = *($1 + [16])
	$6 = *(($1 + [20]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$5
	$7 = *($1 + [28])
	$6 = *(($1 + [32]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$7
	$6 = ($3 + [7])
	if ( ($6 <= [513]) ){ goto $label$9 }
	$3 = CALL $746($6)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $597($5, $1)
	CALL db_update_i64(*($1 + [60]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL $749($3)
	
.LABEL $label$10
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-8173740188290908160) ){ goto $label$11 }
	*(($0 + [16])) = (int_64)-8173740188290908159
	
.LABEL $label$11
	$global$0 = ($5 + [16])
}

void .FUNC $246 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)8516495933114040320, (int_64)8516495933114040320)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $302($0, $4)
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $495($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $496($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $247 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [8]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-3609768575805423616, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $249($1, $5)
	if ( ((int_32)*($5 + [8]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $244 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$2 = $1
	$global$0 = $1
	$3 = CALL action_data_size()
	if ( ($3 <= [513]) ){ goto $label$2 }
	$1 = CALL $746($3)
	goto $label$1 
	
.LABEL $label$2
	$1 = ($1 - (($3 + [15]) & [-16]))
	$global$0 = $1
	
.LABEL $label$1
	CALL read_action_data($1, $3)
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	*($0 + [16]) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($0 + [32 align=4]) = (int_64)0
	*(($0 + [40])) = [0]
	*($2 + [4]) = $1
	*($2) = $1
	*($2 + [8]) = ($1 + $3)
	CALL $152($2, $0)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $245 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [32])
	$global$0 = $4
	*($4) = $3
	$5 = [0]
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$1 }
	$6 = CALL _Znwj([280])
	$3 = CALL $111($6)
	*([0] + [8632]) = $6
	
.LABEL $label$1
	*($4 + [24]) = (int_64)0
	*($4 + [16]) = $1
	$7 = ($3 + [120])
	$3 = CALL db_idx64_lowerbound(*($3 + [120]), *(($3 + [128])), (int_64)6138621011882409984, ($4 + [16]), ($4 + [24]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$2 }
	CALL $207(($4 + [8]), $7, *($4 + [24]))
	*((($5 = *($4 + [12])) + [72])) = $3
	
.LABEL $label$2
	if ( ($5 == 0) ){ goto $label$4 }
	$8 = ( $5 ? [0] : ((int_64)*($5 + [32]) == (int_64)$1) )
	goto $label$3 
	
.LABEL $label$4
	$8 = [0]
	
.LABEL $label$3
	$6 = *($2)
	$9 = ($6 & [1])
	if ( $9 ){ goto $label$6 }
	$5 = uint_32($6 >> [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	
.LABEL $label$5
	$10 = [0]
	$3 = [0]
	if ( ($5 == 0) ){ goto $label$13 }
	if ( $9 ){ goto $label$15 }
	$6 = uint_32($6 >> [1])
	$9 = ($2 + [1])
	goto $label$14 
	
.LABEL $label$15
	$6 = *($2 + [4])
	$9 = *($2 + [8])
	
.LABEL $label$14
	$5 = CALL $743([18776])
	if ( ($6 == 0) ){ goto $label$12 }
	$3 = [0]
	
.LOOP $label$18:
	if ( ($5 == 0) ){ goto $label$17 }
	$11 = ($9 + $3)
	if ( (CALL $741([18776], *($11), $5) == 0) ){ goto $label$16 }
	$3 = ($3 + [1])
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$18 }
	goto $label$12 
	
.LABEL $label$17
	$11 = $9
	
.LABEL $label$16
	$3 = ((int_32)($11 - $9) == (int_32)[-1])
	
.LABEL $label$13
	if ( $8 ){ goto $label$19 }
	if ( ($3 == 0) ){ goto $label$7 }
	
.LABEL $label$19
	if ( (($3 | ($8 == 0)) == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$1 = CALL $719($2, [0], [10])
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$20 }
	$5 = CALL _Znwj([280])
	$3 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$20
	CALL $207(($4 + [24]), ($3 + [120]), $1)
	$3 = *([0] + [8632])
	if ( ($3 == 0) ){ goto $label$22 }
	if ( (*($4 + [28]) == 0) ){ goto $label$21 }
	goto $label$9 
	
.LABEL $label$22
	$5 = CALL _Znwj([280])
	$3 = CALL $111($5)
	*([0] + [8632]) = $5
	if ( *($4 + [28]) ){ goto $label$9 }
	
.LABEL $label$21
	if ( $8 ){ goto $label$10 }
	$10 = [0]
	goto $label$7 
	
.LABEL $label$11
	if ( $8 ){ goto $label$10 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$10
	CALL $351($7, $8, $4)
	goto $label$8 
	
.LABEL $label$9
	if ( $3 ){ goto $label$23 }
	$5 = CALL _Znwj([280])
	$3 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$23
	$3 = ($3 + [120])
	$5 = *($4 + [28])
	if ( $5 ){ goto $label$24 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$24
	CALL $351($3, $5, $4)
	
.LABEL $label$8
	$10 = [1]
	
.LABEL $label$7
	$global$0 = ($4 + [32])
	return $10
}

void .FUNC $242 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	*($4 + [24]) = *($1 + [32])
	$5 = *($1)
	$2 = *($2)
	*($1) = *($2)
	CALL $710(($1 + [4]), ($2 + [4]))
	*($1 + [32]) = *(($2 + [32]))
	*(($1 + [24])) = *(($2 + [24]))
	*($1 + [16]) = *($2 + [16])
	$6 = ($1 + [40])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	CALL $587($6, *($2 + [40]), *(($2 + [44])))
	
.LABEL $label$3
	*($1 + [52 align=4]) = *($2 + [52 align=4])
	*(($1 + [60])) = *(($2 + [60]))
	CALL $699($6, [0], [0])
	if ( ((int_32)$5 == (int_32)*($1)) ){ goto $label$4 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$4
	$7 = (CASTING uint_64)(uint_32 $5)
	$2 = *(($1 + [4]))
	$5 = ( *(($1 + [8])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [59])
	$8 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	$6 = *($1 + [40])
	$5 = *(($1 + [44]))
	$9 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[48]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$8 }
	$2 = (((int_32)((uint_32)($9 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $2)
	goto $label$7 
	
.LABEL $label$8
	$2 = ($2 + [-36])
	
.LABEL $label$7
	$5 = ($2 + [12])
	if ( ($5 <= [513]) ){ goto $label$10 }
	$2 = CALL $746($5)
	goto $label$9 
	
.LABEL $label$10
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$9
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($2 + $5)
	CALL $589(($4 + [8]), $1)
	CALL db_update_i64(*(($1 + [68])), (int_64)0, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$11 }
	CALL $749($2)
	
.LABEL $label$11
	if ( ((uint_64)*($0 + [16]) > (uint_64)$7) ){ goto $label$12 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$12
	*($4 + [40]) = *(($1 + [32]))
	if ( (CALL $742(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$13 }
	$1 = ($1 + [72])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6138621011882409984, ($4 + [32]), $7)
	*($1) = $2
	
.LABEL $label$14
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$13
	$global$0 = ($4 + [48])
}

int_32 .FUNC $243 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [96])
	$global$0 = $1
	*($1 + [80]) = [8617]
	*($1 + [84]) = CALL $743([8617])
	*($1 + [32]) = *($1 + [80])
	$2 = CALL $10(($1 + [88]), ($1 + [32]))
	*($1 + [64]) = [8617]
	*($1 + [68]) = CALL $743([8617])
	*($1 + [24]) = *($1 + [64])
	CALL $10(($1 + [72]), ($1 + [24]))
	*($0 + [8]) = (int_64)4298345121774150816
	*($0 + [16]) = (int_64)-1
	*($0 + [24 align=4]) = (int_64)0
	*(($0 + [32])) = [0]
	*($0) = *($2)
	*($1 + [48]) = [8617]
	*($1 + [52]) = CALL $743([8617])
	*($1 + [16]) = *($1 + [48])
	$2 = CALL $10(($1 + [56]), ($1 + [16]))
	*($1 + [40]) = [8617]
	*($1 + [44]) = CALL $743([8617])
	*($1 + [8]) = *($1 + [40])
	CALL $10(($1 + [72]), ($1 + [8]))
	*(($0 + [48])) = (int_64)4298345121774150816
	*(($0 + [56])) = (int_64)-1
	*(($0 + [64])) = (int_64)0
	*(($0 + [72])) = [0]
	*($0 + [40]) = *($2)
	$global$0 = ($1 + [96])
	return $0
}

void .FUNC $240 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = *($0)
	$6 = ($1 + [4])
	CALL $710($6, ($4 + [4]))
	*(($1 + [32])) = *(($4 + [32]))
	*(($1 + [24])) = *(($4 + [24]))
	*($1 + [16]) = *($4 + [16])
	$7 = ($1 + [40])
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$1 }
	CALL $587($7, *($4 + [40]), *(($4 + [44])))
	
.LABEL $label$1
	*($1 + [52 align=4]) = *($4 + [52 align=4])
	*(($1 + [60])) = *(($4 + [60]))
	CALL $699($7, [0], [0])
	$4 = *($6)
	$7 = ( *(($1 + [8])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($7 + [59])
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	$6 = *($1 + [40])
	$7 = *(($1 + [44]))
	$9 = ($7 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[48]))
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$5 }
	$4 = (((int_32)((uint_32)($9 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $4)
	goto $label$4 
	
.LABEL $label$5
	$4 = ($4 + [-36])
	
.LABEL $label$4
	$7 = ($4 + [12])
	if ( ($7 <= [513]) ){ goto $label$7 }
	$4 = CALL $746($7)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	*($3 + [16]) = ($4 + $7)
	CALL $589(($3 + [8]), $1)
	$8 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($5 + [8]), (int_64)6138621011882409984, *(*($0 + [8])), $8, $4, $7)
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $749($4)
	
.LABEL $label$8
	if ( ((uint_64)*($5 + [16]) > (uint_64)$8) ){ goto $label$9 }
	*(($5 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$9
	$8 = *(($5 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [24]) = *($1 + [32])
	*($1 + [72]) = CALL db_idx64_store($8, (int_64)6138621011882409984, $10, $11, ($3 + [24]))
	$global$0 = ($3 + [32])
}

void .FUNC $241 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [40])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [44])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	if ( ((*($1 + [4]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($1 + [12])))
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $227 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$4 = ($global$0 - [784])
	$global$0 = $4
	*($4 + [676]) = [0]
	*($4 + [672]) = $0
	*($4 + [160]) = *($4 + [672])
	CALL $309(($4 + [680]), $0, $1, ($4 + [160]), [1])
	*($4 + [664]) = CALL $15(*($2 + [8]))
	$5 = *($4 + [684])
	if ( ($5 == 0) ){ goto $label$1 }
	$6 = *(($5 + [32]))
	$8 = *($5 + [24])
	$7 = *(($5 + [40]))
	if ( ((int_64)((int_64)$7 | (int_64)$8) != (int_64)0) ){ goto $label$2 }
	$7 = (int_64)0
	if ( (int_64)($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*(($5 = CALL _Znwj([24])) + [8]) = $6
	*($5) = $8
	*($5 + [16]) = $7
	CALL sha256($5, [24], ($4 + [224]))
	$6 = *($4 + [224])
	if ( ($5 == 0) ){ goto $label$3 }
	CALL _ZdlPv($5)
	
.LABEL $label$3
	if ( (int_64)($6 == 0) ){ goto $label$1 }
	*($4 + [656]) = $0
	*($4 + [660]) = [0]
	*($4 + [152]) = *($4 + [656])
	CALL $309(($4 + [688]), $0, (*($4 + [684]) + [24]), ($4 + [152]), [1])
	if ( (*($4 + [692]) == 0) ){ goto $label$1 }
	*($4 + [640]) = [8617]
	$5 = *($4 + [692])
	*($4 + [644]) = CALL $743([8617])
	*($4 + [144]) = *($4 + [640])
	$9 = CALL $10(($4 + [648]), ($4 + [144]))
	*($4 + [228]) = $3
	*($4 + [224]) = $2
	*($4 + [232]) = ($4 + [664])
	$6 = *($9)
	if ( $5 ){ goto $label$4 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$4
	CALL $316($0, $5, $6, ($4 + [224]))
	
.LABEL $label$1
	$10 = ($0 + [40])
	CALL $229(($4 + [616]), $10)
	$6 = *(($2 + [8]))
	$7 = *($4 + [664])
	$9 = *(($4 + [628]))
	$5 = *($4 + [624])
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( ((int_64)*($5) == (int_64)$6) ){ goto $label$7 }
	$5 = ($5 + [48])
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	$8 = *($2)
	CALL __multi3(($4 + [80]), $8, (int_64)$8 >> (int_64)63), *($3 + [16]), *(($3 + [24])))
	CALL __multi3(($4 + [64]), *($4 + [80]), *((($4 + [80]) + [8])), (int_64)50, (int_64)0)
	CALL __udivti3(($4 + [48]), *($4 + [64]), *((($4 + [64]) + [8])), (int_64)100, (int_64)0)
	*(($5 = (($4 + [224]) + [24]))) = *((($4 + [48]) + [8]))
	*($4 + [224]) = $6
	*($4 + [232]) = $7
	*($4 + [256]) = [1000000000]
	*($4 + [240]) = *($4 + [48])
	if ( ((int_32)$9 == (int_32)*((($4 + [616]) + [16]))) ){ goto $label$6 }
	*($9) = *($4 + [224])
	*(($9 + [8])) = *($4 + [232])
	*(($9 + [16])) = *((($4 + [224]) + [16]))
	*(($9 + [40])) = *((($4 + [224]) + [40]))
	*(($9 + [32])) = *((($4 + [224]) + [32]))
	*(($9 + [24])) = *($5)
	*(($4 + [628])) = ($9 + [48])
	goto $label$5 
	
.LABEL $label$7
	$6 = *($2)
	CALL __multi3(($4 + [128]), $6, (int_64)$6 >> (int_64)63), *($3 + [16]), *(($3 + [24])))
	CALL __multi3(($4 + [112]), *($4 + [128]), *((($4 + [128]) + [8])), (int_64)50, (int_64)0)
	CALL __udivti3(($4 + [96]), *($4 + [112]), *((($4 + [112]) + [8])), (int_64)100, (int_64)0)
	$7 = *($4 + [96])
	$6 = ((int_64)$7 + (int_64)*($9))
	*(($9 = ($5 + [16]))) = $6
	$7 = ((int_64)((int_64)*((($4 + [96]) + [8])) + (int_64)*($5)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($6 <= $7)))
	*(($5 = ($5 + [24]))) = $7
	if ( ( (uint_64)($6 <= (int_64)-999999999) ? (uint_64)($7 <= (int_64)249999999) : ((int_64)$7 == (int_64)249999999) ) ){ goto $label$5 }
	CALL eosio_assert([0], [8307])
	goto $label$5 
	
.LABEL $label$6
	CALL $6((($4 + [616]) + [8]), ($4 + [224]))
	
.LABEL $label$5
	*($4 + [600]) = [8617]
	*($4 + [604]) = CALL $743([8617])
	*($4 + [40]) = *($4 + [600])
	CALL $120($10, ($4 + [616]), *(CALL $10(($4 + [608]), ($4 + [40]))))
	$5 = *([0] + [8632])
	if ( $5 ){ goto $label$10 }
	$9 = CALL _Znwj([280])
	$5 = CALL $111($9)
	*([0] + [8632]) = $9
	
.LABEL $label$10
	$9 = CALL $127(($4 + [224]), $5)
	CALL $317($9, $2, $3)
	*($4 + [752]) = [8414]
	*($4 + [756]) = CALL $743([8414])
	*($4 + [32]) = *($4 + [752])
	$5 = CALL $10(($4 + [688]), ($4 + [32]))
	if ( ((int_64)*($1 + [8]) == (int_64)*($5)) ){ goto $label$11 }
	$7 = *(($2 + [8]))
	*((($4 + [208]) + [8])) = $7
	$8 = *($1)
	$6 = *($2)
	*((($4 + [16]) + [8])) = $7
	*($4 + [208]) = $6
	*($4 + [16]) = $6
	CALL $261($8, ($4 + [16]), $3)
	
.LABEL $label$11
	if ( ((int_64)*(($2 + [8])) != (int_64)1397703940) ){ goto $label$12 }
	$5 = *($4 + [684])
	if ( ($5 == 0) ){ goto $label$12 }
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$13 }
	$5 = CALL _Znwj([280])
	$3 = CALL $111($5)
	*([0] + [8632]) = $5
	$5 = *($4 + [684])
	
.LABEL $label$13
	$3 = ($3 + [40])
	$6 = (int_64)0
	$7 = *($5 + [8])
	$11 = *($5)
	$8 = *($5 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$11) != (int_64)0) ){ goto $label$15 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	*(($5 = CALL _Znwj([24])) + [8]) = $7
	*($5) = $11
	*($5 + [16]) = $8
	CALL sha256($5, [24], ($4 + [688]))
	$6 = *($4 + [688])
	if ( ($5 == 0) ){ goto $label$14 }
	CALL _ZdlPv($5)
	
.LABEL $label$14
	CALL $318(($4 + [200]), $3, $6)
	$3 = *([0] + [8632])
	if ( ($3 == 0) ){ goto $label$19 }
	if ( (*($4 + [204]) == 0) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$5 = CALL _Znwj([280])
	$3 = CALL $111($5)
	*([0] + [8632]) = $5
	if ( *($4 + [204]) ){ goto $label$17 }
	
.LABEL $label$18
	if ( $3 ){ goto $label$20 }
	$5 = CALL _Znwj([280])
	$3 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$20
	*($4 + [184]) = [8617]
	*($4 + [188]) = CALL $743([8617])
	*($4 + [8]) = *($4 + [184])
	$1 = ($3 + [40])
	$11 = *(CALL $10(($4 + [192]), ($4 + [8])))
	if ( ((int_64)*($3 + [40]) == (int_64)CALL current_receiver()) ){ goto $label$21 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$21
	$6 = (int_64)0
	*(($5 = CALL _Znwj([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $1
	$1 = *($4 + [684])
	*($5) = *($1)
	*($5 + [16]) = *(($1 + [16]))
	*($5 + [8]) = *(($1 + [8]))
	$7 = *($2)
	*($5 + [32]) = $7
	*($5 + [40]) = $7
	*($5 + [24]) = $7
	*($4 + [744]) = ($4 + [736])
	*($4 + [740]) = ($4 + [688])
	*($4 + [736]) = ($4 + [688])
	CALL $319(($4 + [736]), $5)
	$7 = *($5 + [8])
	$12 = *($5)
	$8 = *($5 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$12) != (int_64)0) ){ goto $label$23 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$22 }
	
.LABEL $label$23
	*(($1 = CALL _Znwj([24])) + [8]) = $7
	*($1) = $12
	*($1 + [16]) = $8
	CALL sha256($1, [24], ($4 + [752]))
	$6 = *($4 + [752])
	if ( ($1 == 0) ){ goto $label$22 }
	CALL _ZdlPv($1)
	
.LABEL $label$22
	*($5 + [52]) = CALL db_store_i64(*(($3 + [48])), (int_64)8800412573003284480, $11, $6, ($4 + [688]), [48])
	$1 = ($3 + [56])
	if ( (uint_64)($6 <= *($1)) ){ goto $label$24 }
	*($1) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$24
	*($4 + [752]) = $5
	$6 = (int_64)0
	$7 = *(($5 + [8]))
	$11 = *($5)
	$8 = *(($5 + [16]))
	if ( ((int_64)((int_64)$8 | (int_64)$11) != (int_64)0) ){ goto $label$26 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	*(($5 = CALL _Znwj([24])) + [8]) = $7
	*($5) = $11
	*($5 + [16]) = $8
	CALL sha256($5, [24], ($4 + [688]))
	$6 = *($4 + [688])
	if ( ($5 == 0) ){ goto $label$25 }
	CALL _ZdlPv($5)
	
.LABEL $label$25
	*($4 + [688]) = $6
	$1 = *($4 + [752])
	$10 = *($1 + [52])
	*($4 + [736]) = $10
	$13 = ($3 + [68])
	$5 = *($13)
	if ( ((uint_32)$5 >= (uint_32)*(($3 + [72]))) ){ goto $label$28 }
	*($5 + [8]) = $6
	*($5 + [16]) = $10
	*($4 + [752]) = [0]
	*($5) = $1
	*($13) = ($5 + [24])
	goto $label$27 
	
.LABEL $label$28
	CALL $320(($3 + [64]), ($4 + [752]), ($4 + [688]), ($4 + [736]))
	
.LABEL $label$27
	$5 = *($4 + [752])
	*($4 + [752]) = [0]
	if ( ($5 == 0) ){ goto $label$16 }
	CALL _ZdlPv($5)
	goto $label$16 
	
.LABEL $label$17
	CALL $321($9, ($4 + [200]), $2)
	
.LABEL $label$16
	*($4 + [168]) = [8617]
	$5 = *($4 + [684])
	*($4 + [172]) = CALL $743([8617])
	*($4) = *($4 + [168])
	$3 = CALL $10(($4 + [176]), $4)
	*($4 + [688]) = $2
	$6 = *($3)
	if ( $5 ){ goto $label$29 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$29
	CALL $322($0, $5, $6, ($4 + [688]))
	
.LABEL $label$12
	CALL $129($9)
	$5 = *($4 + [624])
	if ( ($5 == 0) ){ goto $label$30 }
	*(($4 + [628])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$30
	$global$0 = ($4 + [784])
}

int_32 .FUNC $552 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $553($0, ($1 + [48]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [24])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [32])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $658 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30160])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)8800195549752983552)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $440(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $149 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL $308($3, $1)
	if ( ((int_64)*($1 + [16]) != (int_64)0) ){ goto $label$1 }
	CALL eosio_assert([0], [18638])
	
.LABEL $label$1
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [16])
	if ( CALL has_auth(*(CALL $10(($3 + [24]), ($3 + [8])))) ){ goto $label$2 }
	*($3 + [32]) = [8414]
	*($3 + [36]) = CALL $743([8414])
	*($3) = *($3 + [32])
	$4 = CALL $10(($3 + [40]), $3)
	$5 = *($1 + [8])
	if ( ((int_64)$5 != (int_64)*($4)) ){ goto $label$3 }
	CALL require_auth(*(($1 + [16])))
	goto $label$2 
	
.LABEL $label$3
	if ( $2 ){ goto $label$4 }
	CALL eosio_assert([0], [21278])
	$5 = *(($1 + [8]))
	
.LABEL $label$4
	CALL require_auth($5)
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $148 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [160])
	$global$0 = $2
	*((($2 + [136]) + [16])) = *(($1 + [16]))
	*((($2 + [136]) + [8])) = *(($1 + [8]))
	*((($2 + [96]) + [16])) = *(($1 + [64]))
	*(($2 + [120])) = *(($1 + [72]))
	*($2 + [80]) = [0]
	*($2 + [136]) = *($1)
	*($2 + [96]) = *($1 + [48])
	*($2 + [104]) = *(($1 + [56]))
	$3 = *($1 + [24])
	$4 = *($1 + [32])
	*($2 + [84 align=4]) = (int_64)0
	$5 = (*(($1 + [84])) - *($1 + [80]))
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = int_32($5 >> [3])
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	$5 = CALL _Znwj($5)
	*(($2 + [88])) = ($5 + ($6 << [3]))
	*($2 + [80]) = $5
	*($2 + [84]) = $5
	$7 = *(($1 + [80]))
	$6 = (*(($1 + [84])) - $7)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $7, $6)
	*($2 + [84]) = ($5 + $6)
	
.LABEL $label$3
	*($2 + [72]) = [0]
	*($2 + [64]) = (int_64)0
	$5 = (*(($1 + [96])) - *($1 + [92]))
	if ( ($5 == 0) ){ goto $label$4 }
	$6 = int_32($5 >> [4])
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = CALL _Znwj($5)
	*(($2 + [72])) = ($5 + ($6 << [4]))
	*($2 + [64]) = $5
	*($2 + [68]) = $5
	$6 = *(($1 + [92]))
	$1 = (*(($1 + [96])) - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($5, $6, $1)
	*($2 + [68]) = ($5 + $1)
	
.LABEL $label$4
	*((($2 + [40]) + [16])) = *((($2 + [136]) + [16]))
	*((($2 + [40]) + [8])) = *((($2 + [136]) + [8]))
	*(($2 + [16])) = *((($2 + [96]) + [16]))
	*(($2 + [24])) = *((($2 + [96]) + [24]))
	*($2 + [40]) = *($2 + [136])
	*($2) = *($2 + [96])
	*($2 + [8]) = *($2 + [104])
	CALL $525($0, ($2 + [40]), ($3 & [255]), $4, $2, ($2 + [80]), ($2 + [64]))
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$5 }
	*($2 + [68]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($2 + [80])
	if ( ($1 == 0) ){ goto $label$6 }
	*($2 + [84]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($2 + [160])
	return (unreachable)
	
.LABEL $label$2
	CALL $727(($2 + [80]))
	
.LABEL $label$1
	CALL $727(($2 + [64]))
	(unreachable)
}

int_32 .FUNC $419 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [112])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	*(($5 = CALL _Znwj([56])) + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5) = (int_64)0
	CALL memcpy(($3 + [32]), [29008], [80])
	$2 = (($3 + [32]) + [80])
	CALL $409(($5 + [8]), ($3 + [32]), $2)
	CALL memcpy(($3 + [32]), [29008], [80])
	CALL $409(($5 + [20]), ($3 + [32]), $2)
	*($5 + [40]) = $0
	*($5 + [32]) = (int_64)0
	CALL $615(($3 + [16]), $5)
	*($5 + [44]) = $1
	*($3 + [8]) = $5
	*($3 + [32]) = (int_64)-4293732427722915840
	*($3 + [4]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)-4293732427722915840
	*($2 + [16]) = $1
	*($3 + [8]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $614(($0 + [24]), ($3 + [8]), ($3 + [32]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [20])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [112])
	return $5
}

void .FUNC $418 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [76]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	$10 = *($6 + [64])
	if ( ($10 == 0) ){ goto $label$13 }
	*(($6 + [68])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$13
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$8 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$14:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$15 }
	$10 = *($9 + [64])
	if ( ($10 == 0) ){ goto $label$16 }
	*(($9 + [68])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$16
	CALL _ZdlPv($9)
	
.LABEL $label$15
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	
.LABEL $label$8
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [80]))
	$9 = *($1 + [84])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$18 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4293738990248394752, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$17 }
	
.LABEL $label$18
	CALL db_idx64_remove($9)
	
.LABEL $label$17
	$global$0 = ($2 + [16])
}

int_32 .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [3])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $524($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [3]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [8])
	$2 = (*($6) + [8])
	*($6) = $2
	$7 = ($7 + [8])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $416 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $625(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

void .FUNC $147 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $168(*($1), *($0))
	$0 = *($0)
	$2 = ($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $145(*($1), ($0 + [80]))
	CALL $170(*($1), ($0 + [92]))
}

void .FUNC $146 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [464])
	$global$0 = $4
	$5 = *(($2 + [8]))
	$6 = *($2)
	$7 = ($0 + [200])
	*($4 + [224]) = $7
	*($4 + [352]) = (int_64)0
	*($4 + [56]) = $5
	*($4 + [48]) = $6
	$8 = [0]
	$9 = CALL db_idx128_lowerbound(*($0 + [200]), *(($0 + [208])), (int_64)-4418111932367241216, ($4 + [48]), ($4 + [352]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$1 }
	CALL $264(($4 + [272]), $7, *($4 + [352]))
	*((($8 = *($4 + [276])) + [56])) = $9
	
.LABEL $label$1
	if ( ($8 == 0) ){ goto $label$2 }
	if ( ((int_64)((int_64)((int_64)$6 ^ (int_64)*($8 + [16])) | (int_64)((int_64)$5 ^ (int_64)*(($8 + [24])))) != (int_64)0) ){ goto $label$2 }
	*($4 + [48]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 ($4 + [224])))
	CALL $287(($4 + [48]))
	CALL $275(*($4 + [224]), $8)
	
.LABEL $label$2
	*($4 + [440]) = $0
	*($4 + [352]) = (int_64)0
	*($4 + [56]) = $5
	*($4 + [48]) = $6
	$8 = [0]
	$7 = CALL db_idx128_lowerbound(*($0), *($0 + [8]), (int_64)-3022886516901806080, ($4 + [48]), ($4 + [352]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	CALL $284(($4 + [272]), *($4 + [440]), *($4 + [352]))
	*((($8 = *($4 + [276])) + [88])) = $7
	
.LABEL $label$3
	if ( ($8 == 0) ){ goto $label$8 }
	if ( ((int_64)((int_64)((int_64)$6 ^ (int_64)*($8 + [16])) | (int_64)((int_64)$5 ^ (int_64)*(($8 + [24])))) != (int_64)0) ){ goto $label$8 }
	*(($4 + [408])) = [0]
	*($4 + [400]) = (int_64)0
	*($4 + [424]) = (int_64)0
	*($4 + [336]) = [8617]
	*($4 + [340]) = CALL $743([8617])
	*($4 + [40]) = *($4 + [336])
	$7 = CALL $10(($4 + [344]), ($4 + [40]))
	*($4 + [48]) = $1
	*($4 + [52]) = ($4 + [352])
	CALL $288(*($4 + [440]), $8, *($7), ($4 + [48]))
	*($4 + [48]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 ($4 + [440])))
	CALL $285(($4 + [48]))
	CALL $289(*($4 + [440]), $8)
	CALL $207(($4 + [48]), ($0 + [120]), *($4 + [412]))
	$0 = *($4 + [52])
	if ( $0 ){ goto $label$9 }
	CALL eosio_assert([0], [17542])
	$0 = *($4 + [52])
	
.LABEL $label$9
	*($4 + [272]) = *($0)
	$9 = CALL $709((($4 + [272]) | [4]), ($0 + [4]))
	$5 = *(($0 + [24]))
	$6 = *(($0 + [32]))
	$10 = *($0 + [16])
	*((($4 + [272]) + [44])) = (int_64)0
	*((($4 + [272]) + [32])) = $6
	*((($4 + [272]) + [24])) = $5
	*($4 + [312]) = [0]
	*($4 + [288]) = $10
	$8 = (*(($0 + [44])) - *($0 + [40]))
	$7 = ((int_32)$8 / (int_32)[48])
	if ( ($8 == 0) ){ goto $label$10 }
	if ( ((uint_32)$7 >= (uint_32)[89478486]) ){ goto $label$7 }
	$8 = CALL _Znwj($8)
	*((($4 + [272]) + [40])) = $8
	*((($4 + [272]) + [48])) = ($8 + ((int_32)$7 * (int_32)[48]))
	*(($7 = (($4 + [272]) + [44]))) = $8
	$11 = *(($0 + [40]))
	$12 = (*(($0 + [44])) - $11)
	if ( ((int_32)$12 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($8, $11, $12)
	*($7) = (*($7) + ((int_32)((uint_32)$12 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$10
	*((($4 + [272]) + [60])) = *(($0 + [60]))
	*($4 + [324 align=4]) = *($0 + [52 align=4])
	*($4 + [264]) = [8617]
	*($4 + [268]) = CALL $743([8617])
	*($4 + [32]) = *($4 + [264])
	$0 = CALL $10(($4 + [48]), ($4 + [32]))
	if ( ((int_64)*($4 + [304]) != (int_64)*($0)) ){ goto $label$13 }
	$0 = *($3 + [16])
	if ( ($0 == 0) ){ goto $label$6 }
	CALL void $0((int_32 ($4 + [352])), (int_32 *(*($0) + [24])))
	$0 = *($4 + [312])
	if ( $0 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	*($4 + [208]) = [8617]
	*($4 + [212]) = CALL $743([8617])
	*($4 + [24]) = *($4 + [208])
	$0 = CALL $10(($4 + [216]), ($4 + [24]))
	*($4 + [192]) = [8344]
	*($4 + [196]) = CALL $743([8344])
	*($4 + [16]) = *($4 + [192])
	$8 = CALL $10(($4 + [200]), ($4 + [16]))
	$5 = *((($4 + [272]) + [32]))
	$6 = *($8)
	$10 = *($0)
	*($4 + [176]) = [17561]
	*($4 + [180]) = CALL $743([17561])
	*($4 + [8]) = *($4 + [176])
	$8 = CALL $10(($4 + [184]), ($4 + [8]))
	*($4 + [56]) = [0]
	*($4 + [48]) = (int_64)0
	$0 = (*($1 + [4]) - *($1))
	if ( ($0 == 0) ){ goto $label$14 }
	$7 = int_32($0 >> [3])
	if ( ((uint_32)$7 >= (uint_32)[536870912]) ){ goto $label$5 }
	$0 = CALL _Znwj($0)
	*($4 + [48]) = $0
	*($4 + [52]) = $0
	*($4 + [56]) = ($0 + ($7 << [3]))
	$7 = *($1)
	$1 = (*(($1 + [4])) - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$14 }
	CALL memcpy($0, $7, $1)
	*($4 + [52]) = (*($4 + [52]) + $1)
	
.LABEL $label$14
	*(($4 + [104])) = *($4 + [360])
	*((($4 + [48]) + [40])) = *(($2 + [24]))
	*((($4 + [48]) + [32])) = *(($2 + [16]))
	*((($4 + [48]) + [24])) = *(($2 + [8]))
	*(($4 + [112])) = *((($4 + [352]) + [16]))
	*(($4 + [120])) = *((($4 + [352]) + [24]))
	*(($4 + [128])) = *((($4 + [352]) + [32]))
	*(($4 + [136])) = *((($4 + [352]) + [40]))
	*($4 + [96]) = *($4 + [352])
	*($4 + [64]) = *($2)
	*(($4 + [152])) = [0]
	*(($2 = ($4 + [144]))) = (int_64)0
	$0 = (*(($4 + [404])) - *($4 + [400]))
	if ( ($0 == 0) ){ goto $label$15 }
	$1 = int_32($0 >> [3])
	if ( ((uint_32)$1 >= (uint_32)[536870912]) ){ goto $label$4 }
	$0 = CALL _Znwj($0)
	*(($4 + [144])) = $0
	*(($2 = ($4 + [148]))) = $0
	*(($4 + [152])) = ($0 + ($1 << [3]))
	$7 = *(($4 + [400]))
	$1 = (*(($4 + [404])) - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$15 }
	CALL memcpy($0, $7, $1)
	*($2) = (*($2) + $1)
	
.LABEL $label$15
	$0 = ($4 + [412])
	*(($4 + [156])) = *($0)
	*(($4 + [172])) = *(($0 + [16]))
	*(($4 + [164])) = *(($0 + [8]))
	*($4 + [224]) = $5
	*($4 + [232]) = *($8)
	*(($0 = CALL _Znwj([16]))) = $10
	*($0 + [8]) = $6
	$8 = ($0 + [16])
	*((($4 + [224]) + [24])) = $8
	*(($4 + [244])) = $8
	*($4 + [240]) = $0
	CALL $290(($4 + [252]), ($4 + [48]))
	CALL $13(($4 + [448]), ($4 + [224]))
	$0 = *($4 + [448])
	CALL send_inline($0, (*($4 + [452]) - $0))
	$0 = *($4 + [448])
	if ( ($0 == 0) ){ goto $label$16 }
	*($4 + [452]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$16
	$0 = *($4 + [252])
	if ( ($0 == 0) ){ goto $label$17 }
	*(($4 + [256])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$17
	$0 = *($4 + [240])
	if ( ($0 == 0) ){ goto $label$18 }
	*(($4 + [244])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$18
	$0 = *(($4 + [144]))
	if ( ($0 == 0) ){ goto $label$19 }
	*(($4 + [148])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$19
	$0 = *($4 + [48])
	if ( ($0 == 0) ){ goto $label$20 }
	*($4 + [52]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$20
	$0 = *($4 + [312])
	if ( ($0 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	*(($4 + [316])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$11
	if ( ((*($9) & [1]) == 0) ){ goto $label$21 }
	CALL _ZdlPv(*(($4 + [284])))
	
.LABEL $label$21
	$0 = *(($4 + [400]))
	if ( ($0 == 0) ){ goto $label$8 }
	*(($4 + [404])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$8
	$global$0 = ($4 + [464])
	return (unreachable)
	
.LABEL $label$7
	CALL $727(($4 + [312]))
	
.LABEL $label$6
	CALL abort()
	
.LABEL $label$5
	CALL $727(($4 + [48]))
	
.LABEL $label$4
	CALL $727($2)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $141 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL $142($3, ($1 + [160]))
	$4 = *($3)
	$5 = *($3 + [48])
	if ( ($5 == 0) ){ goto $label$1 }
	*(($3 + [52])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$1
	if ( (($4 & [255]) == 0) ){ goto $label$2 }
	CALL eosio_assert([0], [17290])
	
.LABEL $label$2
	CALL $207($3, ($1 + [120]), (CASTING uint_64)(uint_32 $2))
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$3 }
	CALL eosio_assert([0], [17329])
	$1 = *($3 + [4])
	
.LABEL $label$3
	*($0) = *($1)
	CALL $709(($0 + [4]), ($1 + [4]))
	$6 = *(($1 + [24]))
	$7 = *(($1 + [32]))
	$8 = *($1 + [16])
	*(($0 + [44])) = (int_64)0
	*(($0 + [32])) = $7
	*(($0 + [24])) = $6
	*($0 + [16]) = $8
	*($0 + [40]) = [0]
	$5 = (*(($1 + [44])) - *($1 + [40]))
	$2 = ((int_32)$5 / (int_32)[48])
	if ( ($5 == 0) ){ goto $label$5 }
	if ( ((uint_32)$2 >= (uint_32)[89478486]) ){ goto $label$4 }
	$5 = CALL _Znwj($5)
	*(($0 + [40])) = $5
	*(($0 + [48])) = ($5 + ((int_32)$2 * (int_32)[48]))
	*(($2 = ($0 + [44]))) = $5
	$9 = *(($1 + [40]))
	$4 = (*(($1 + [44])) - $9)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($5, $9, $4)
	*($2) = (*($2) + ((int_32)((uint_32)$4 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$5
	*($0 + [52 align=4]) = *($1 + [52 align=4])
	*(($0 + [60])) = *(($1 + [60]))
	if ( (*($0 + [24]) == 0) ){ goto $label$6 }
	CALL eosio_assert([0], [17360])
	
.LABEL $label$6
	$global$0 = ($3 + [64])
	return (unreachable)
	
.LABEL $label$4
	CALL $727(($0 + [40]))
}

int_32 .FUNC $140 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [16])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [32])
	*($2) = (*($2) + [32])
	$3 = ($1 + [60])
	$2 = *($0 + [4])
	$0 = CALL $145($0, ($1 + [48]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [64])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$1 = ($1 + [72])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $3, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

void .FUNC $143 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $681($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [64]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-7297072577464238080, (int_64)-7297072577464238080)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $112($1, $2)
	if ( ((int_32)*($2 + [64]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$1
	*($0) = *($2)
	$3 = *(($2 + [8]))
	$4 = *(($2 + [16]))
	$5 = *(($2 + [24]))
	$6 = *(($2 + [32]))
	$7 = *(($2 + [40]))
	*(($0 + [52])) = (int_64)0
	*(($0 + [40])) = $7
	*(($0 + [32])) = $6
	*(($0 + [24])) = $5
	*(($0 + [16])) = $4
	*(($0 + [8])) = $3
	*($0 + [48]) = [0]
	$1 = (*(($2 + [52])) - *($2 + [48]))
	if ( ($1 == 0) ){ goto $label$6 }
	$8 = int_32($1 >> [3])
	if ( ((uint_32)$8 >= (uint_32)[536870912]) ){ goto $label$5 }
	$1 = CALL _Znwj($1)
	*(($0 + [48])) = $1
	*(($0 + [56])) = ($1 + ($8 << [3]))
	*(($0 = ($0 + [52]))) = $1
	$8 = *(($2 + [48]))
	$2 = (*(($2 + [52])) - $8)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $8, $2)
	*($0) = (*($0) + $2)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$5
	CALL $727(($0 + [48]))
}

void .FUNC _ZdlPv (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $749($0)
	
.LABEL $label$1
}

void .FUNC $98 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL $110($3)
	$4 = *(($1 + [16]))
	*((($3 + [24]) + [16])) = $4
	$5 = *(($1 + [8]))
	*((($3 + [24]) + [8])) = $5
	$6 = *($1)
	*(($3 + [8])) = $5
	*(($3 + [16])) = $4
	*($3) = $6
	*($3 + [24]) = $6
	CALL $218(($0 + [120]), $3, $2)
	$global$0 = ($3 + [48])
}

void .FUNC $99 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [128])
	$global$0 = $2
	CALL $110($2)
	*($2 + [104]) = [30300]
	*($2 + [120]) = ($2 + [104])
	$3 = *([0] + [8632])
	if ( ($3 == 0) ){ goto $label$4 }
	*((($2 + [64]) + [24])) = *(($1 + [24]))
	*((($2 + [64]) + [16])) = *(($1 + [16]))
	*($2 + [64]) = *($1)
	*($2 + [72]) = *(($1 + [8]))
	$1 = ($2 + [104])
	goto $label$3 
	
.LABEL $label$4
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	*((($2 + [64]) + [16])) = *(($1 + [16]))
	*((($2 + [64]) + [24])) = *(($1 + [24]))
	*($2 + [64]) = *($1)
	*($2 + [72]) = *(($1 + [8]))
	$1 = *((($2 + [104]) + [16]))
	if ( ($1 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((int_32)($2 + [104]) == (int_32)$1) ){ goto $label$5 }
	*($2 + [56]) = CALL int_32 $1((int_32 *(*($1) + [8])))
	goto $label$1 
	
.LABEL $label$5
	*($2 + [56]) = ($2 + [40])
	CALL void $1((int_32 ($2 + [40])), (int_32 *(*($1) + [12])))
	goto $label$1 
	
.LABEL $label$2
	*($2 + [56]) = [0]
	
.LABEL $label$1
	*(($2 + [24])) = *((($2 + [64]) + [24]))
	*(($2 + [16])) = *((($2 + [64]) + [16]))
	*($2 + [8]) = *($2 + [72])
	*($2) = *($2 + [64])
	CALL $234($3, $2, ($2 + [40]))
	$1 = *((($2 + [40]) + [16]))
	if ( ((int_32)($2 + [40]) == (int_32)$1) ){ goto $label$7 }
	if ( ($1 == 0) ){ goto $label$6 }
	CALL void $1((int_32 *(*($1) + [20])))
	goto $label$6 
	
.LABEL $label$7
	CALL void $1((int_32 *(*($1) + [16])))
	
.LABEL $label$6
	$1 = *(($2 + [120]))
	if ( ((int_32)($2 + [104]) == (int_32)$1) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$8 }
	CALL void $1((int_32 *(*($1) + [20])))
	goto $label$8 
	
.LABEL $label$9
	CALL void $1((int_32 *(*($1) + [16])))
	
.LABEL $label$8
	$global$0 = ($2 + [128])
}

int_32 .FUNC $94 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [416])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$3 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $7)
	
.LABEL $label$1
	$2 = CALL $122(($4 + [248]))
	*($4 + [236]) = $3
	*($4 + [232]) = $3
	*($4 + [240]) = ($3 + $7)
	CALL $214(($4 + [232]), $2)
	$8 = *($4 + [240])
	*((($4 + [16]) + [8])) = $8
	*(($4 + [8])) = $8
	$9 = *($4 + [232])
	*($4) = $9
	*($4 + [16]) = $9
	$10 = CALL $20(($4 + [32]), $0, $1, $4)
	$8 = (($4 + [32]) + int_32($5 >> [1]))
	$2 = CALL $215(($4 + [304]), $2)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($8) + $6))
	
.LABEL $label$5
	$5 = CALL $215(($4 + [360]), $2)
	CALL void $8((int_32 $5), (int_32 $6))
	$6 = *($5 + [28])
	if ( ($6 == 0) ){ goto $label$6 }
	*(($5 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$6 = *($5 + [16])
	if ( ($6 == 0) ){ goto $label$7 }
	*(($5 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$7
	$5 = *($2 + [28])
	if ( ($5 == 0) ){ goto $label$8 }
	*(($2 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$8
	$5 = *($2 + [16])
	if ( ($5 == 0) ){ goto $label$9 }
	*(($2 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$9
	if ( ($7 <= [513]) ){ goto $label$10 }
	CALL $749($3)
	
.LABEL $label$10
	CALL $24($10)
	$2 = *($4 + [276])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($4 + [280])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($4 + [264])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($4 + [268])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($4 + [416])
	return [1]
}

void .FUNC $95 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	$6 = ($global$0 - [32])
	$global$0 = $6
	*($6 + [16]) = [8617]
	*($6 + [20]) = CALL $743([8617])
	*($6 + [8]) = *($6 + [16])
	CALL require_auth(*(CALL $10(($6 + [24]), ($6 + [8]))))
	$global$0 = ($6 + [32])
}

void .FUNC $96 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9)
{
	int_32 $10
	$10 = ($global$0 - [32])
	$global$0 = $10
	*($10 + [16]) = [8617]
	*($10 + [20]) = CALL $743([8617])
	*($10 + [8]) = *($10 + [16])
	CALL require_auth(*(CALL $10(($10 + [24]), ($10 + [8]))))
	$global$0 = ($10 + [32])
}

int_32 .FUNC $97 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [416])
	$global$0 = $3
	*(($4 = $3) + [408]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = (int_64)0
	*(($4 + [296])) = (int_64)0
	*(($4 + [316])) = [0]
	*(($4 + [328])) = (int_64)0
	*(($4 + [344])) = (int_64)0
	*(($4 + [376])) = (int_64)0
	*(($4 + [368])) = (int_64)0
	*(($4 + [360])) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = [0]
	*($4 + [308 align=4]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [384]) = [0]
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $5)
	*($4 + [16]) = ($4 + [240])
	*($4 + [40]) = ($4 + [256])
	CALL $198(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [248])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [240])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $20(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [408])
	CALL $199(($4 + [16]), ($4 + [256]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $749($2)
	
.LABEL $label$4
	CALL $24($3)
	if ( ((*($4 + [308]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [316])))
	
.LABEL $label$5
	$global$0 = ($4 + [416])
	return [1]
}

void .FUNC $90 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [448])
	$global$0 = $5
	*($5 + [440]) = $2
	CALL $149($0, $1, [0])
	$0 = CALL $109($5)
	CALL $172($0, $1, ($5 + [440]), $3, $4)
	CALL $130($0)
	$global$0 = ($5 + [448])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [448])
	$global$0 = $3
	*($3 + [440]) = $2
	CALL $149($0, $1, [0])
	$0 = CALL $109($3)
	CALL $183($0, $1, ($3 + [440]))
	CALL $130($0)
	$global$0 = ($3 + [448])
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [176])
	$global$0 = $2
	CALL $110($2)
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$1 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$1
	*($2 + [96]) = [8617]
	*($2 + [100]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [96])
	$4 = CALL $10(($2 + [104]), ($2 + [8]))
	*(($2 + [88])) = [0]
	*($2 + [80]) = (int_64)0
	*($2 + [32]) = [0]
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [64]) = (int_64)0
	*($2 + [72]) = (int_64)0
	CALL $206(($2 + [112]), ($3 + [160]), *($4), ($2 + [32]))
	$3 = *($2 + [80])
	if ( ($3 == 0) ){ goto $label$2 }
	*(($2 + [84])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$2
	*($2 + [112]) = $1
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$3 }
	$1 = CALL _Znwj([280])
	$3 = CALL $111($1)
	*([0] + [8632]) = $1
	
.LABEL $label$3
	*($2 + [16]) = [8617]
	*($2 + [20]) = CALL $743([8617])
	*($2) = *($2 + [16])
	CALL $113(($3 + [160]), ($2 + [112]), *(CALL $10(($2 + [24]), $2)))
	$3 = *($2 + [160])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($2 + [164])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($2 + [176])
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [464])
	$global$0 = $2
	CALL $110($2)
	$3 = CALL $109(($2 + [24]))
	*($2 + [8]) = [8617]
	*($2 + [12]) = CALL $743([8617])
	*($2) = *($2 + [8])
	CALL $123(($3 + [400]), $1, *(CALL $10(($2 + [16]), $2)))
	CALL $130($3)
	$global$0 = ($2 + [464])
}

int_32 .FUNC $732 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $733 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $730 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [69] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $732($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $732($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $732($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $732($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [30464]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $732($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $732($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $732($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

void .FUNC $731 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

int_32 .FUNC $736 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $735($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $737 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $734 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $730([70], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_32 .FUNC $735 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC $738 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $736($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

int_64 .FUNC $739 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $738($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $728()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $738($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [30545]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $737($0, (int_64)0)
	*(CALL $728()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $738($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $738($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $738($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $738($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [30545])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [30545]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [30545]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $738($0)
	$5 = *(($6 + [30545]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $738($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [30545]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [30801]))
	$8 = (int_64)0
	$5 = *(($6 + [30545]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [30545]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $738($0)
	$5 = *(($6 + [30545]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $738($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [30545]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $737($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [30545]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [30545]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $738($0) + [30545]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $728()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $728()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $728()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

void .FUNC $260 (int_64 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$1 = ($global$0 - [96])
	$global$0 = $1
	*($1 + [80]) = [8617]
	*($1 + [84]) = CALL $743([8617])
	*($1 + [16]) = *($1 + [80])
	$2 = CALL $10(($1 + [88]), ($1 + [16]))
	*($1 + [64]) = [8617]
	*($1 + [68]) = CALL $743([8617])
	*($1 + [8]) = *($1 + [64])
	CALL $10(($1 + [72]), ($1 + [8]))
	*(($1 + [56])) = [0]
	*($1 + [32]) = (int_64)4298345121774150816
	*($1 + [40]) = (int_64)-1
	*($1 + [48]) = (int_64)0
	*($1 + [24]) = *($2)
	CALL $253(($1 + [88]), ($1 + [24]), $0)
	$3 = *($1 + [48])
	if ( ($3 == 0) ){ goto $label$1 }
	$4 = ($1 + [52])
	$2 = *($4)
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$5 = *($2)
	*($2) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	$6 = *($5 + [20])
	if ( ($6 == 0) ){ goto $label$6 }
	*(($5 + [24])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	CALL _ZdlPv($5)
	
.LABEL $label$5
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$4 }
	$2 = *(($1 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$2 = $3
	
.LABEL $label$2
	*($4) = $3
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$global$0 = ($1 + [96])
}

void .FUNC $261 (int_64 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [112])
	$global$0 = $3
	*($3 + [96]) = [8617]
	*($3 + [100]) = CALL $743([8617])
	*($3 + [16]) = *($3 + [96])
	$4 = CALL $10(($3 + [104]), ($3 + [16]))
	*($3 + [80]) = [8617]
	*($3 + [84]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [80])
	CALL $10(($3 + [88]), ($3 + [8]))
	*(($3 + [72])) = [0]
	*($3 + [48]) = (int_64)4298345121774150816
	*($3 + [56]) = (int_64)-1
	*($3 + [64]) = (int_64)0
	*($3 + [40]) = *($4)
	CALL $253(($3 + [104]), ($3 + [40]), $0)
	if ( (*(*($3 + [108]) + [16]) == 0) ){ goto $label$1 }
	*($3 + [24]) = [8617]
	$4 = *($3 + [108])
	*($3 + [28]) = CALL $743([8617])
	*($3) = *($3 + [24])
	$5 = CALL $10(($3 + [32]), $3)
	*($3 + [100]) = $2
	*($3 + [96]) = $1
	$0 = *($5)
	if ( $4 ){ goto $label$2 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$2
	CALL $262(($3 + [40]), $4, $0, ($3 + [96]))
	
.LABEL $label$1
	$5 = *($3 + [64])
	if ( ($5 == 0) ){ goto $label$3 }
	$6 = ($3 + [68])
	$4 = *($6)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$6:
	$4 = ($4 + [-24])
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = *($1 + [20])
	if ( ($2 == 0) ){ goto $label$8 }
	*(($1 + [24])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$7
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$6 }
	$4 = *(($3 + [64]))
	goto $label$4 
	
.LABEL $label$5
	$4 = $5
	
.LABEL $label$4
	*($6) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$3
	$global$0 = ($3 + [112])
}

void .FUNC $354 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $721($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $355 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [48]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4812911374179631104, (int_64)-4812911374179631104)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $114($1, $2)
	if ( ((int_32)*($2 + [48]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$1
	CALL $210($0, $2)
	*($0 + [40]) = *($2 + [40])
}

void .FUNC $356 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$3 = ($global$0 - [64])
	$global$0 = $3
	CALL $357(($3 + [8]), ($0 + [120]))
	if ( (*($3 + [40]) == 0) ){ goto $label$1 }
	CALL eosio_assert([0], [19036])
	
.LABEL $label$1
	$4 = *($1 + [8])
	$0 = *($3 + [16])
	$5 = *(($3 + [20]))
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$4 }
	$6 = int_32(($5 - $0) >> [4])
	$5 = [0]
	
.LOOP $label$5:
	if ( ((int_64)*(($0 + [8])) == (int_64)$4) ){ goto $label$3 }
	$0 = ($0 + [16])
	$5 = ($5 + [1])
	if ( ($5 <= $6) ){ goto $label$5 }
	
.LABEL $label$4
	$0 = [0]
	CALL eosio_assert([0], [18787])
	$7 = (int_64)5459781
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $8
	$6 = $0
	goto $label$9 
	
.LABEL $label$10
	$7 = $8
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = ((int_32)$0 < (int_32)[6])
	$6 = ($0 + [1])
	$0 = $6
	if ( $5 ){ goto $label$11 }
	
.LABEL $label$9
	$0 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [22633])
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((int_64)$4 == (int_64)1397703940) ){ goto $label$2 }
	CALL eosio_assert([0], [23115])
	goto $label$2 
	
.LABEL $label$3
	$7 = *($0)
	
.LABEL $label$2
	$9 = *($1)
	if ( ((int_64)$7 <= (int_64)$9) ){ goto $label$12 }
	CALL eosio_assert([0], [19071])
	
.LABEL $label$12
	$0 = *($3 + [28])
	$5 = *((($3 + [8]) + [24]))
	if ( ((int_32)$5 == (int_32)$0) ){ goto $label$16 }
	$6 = int_32(($5 - $0) >> [4])
	$5 = [0]
	
.LOOP $label$17:
	if ( ((int_64)*(($0 + [8])) == (int_64)$4) ){ goto $label$15 }
	$0 = ($0 + [16])
	$5 = ($5 + [1])
	if ( ($5 <= $6) ){ goto $label$17 }
	
.LABEL $label$16
	$0 = [0]
	CALL eosio_assert([0], [18787])
	$7 = (int_64)5459781
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$7 = $8
	$6 = $0
	goto $label$21 
	
.LABEL $label$22
	$7 = $8
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$5 = ((int_32)$0 < (int_32)[6])
	$6 = ($0 + [1])
	$0 = $6
	if ( $5 ){ goto $label$23 }
	
.LABEL $label$21
	$0 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [22633])
	
.LABEL $label$18
	if ( ((int_64)$4 == (int_64)1397703940) ){ goto $label$24 }
	CALL eosio_assert([0], [23115])
	
.LABEL $label$24
	if ( ((int_64)0 >= (int_64)$9) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$15
	if ( ((int_64)*($0) >= (int_64)$9) ){ goto $label$13 }
	
.LABEL $label$14
	CALL eosio_assert([0], [19091])
	
.LABEL $label$13
	if ( ((uint_32)*($3 + [41]) <= (uint_32)$2) ){ goto $label$25 }
	CALL $358(($3 + [48]), [19112], ($3 + [41]))
	if ( (*($3 + [48]) & [1]) ){ goto $label$27 }
	$0 = (($3 + [48]) | [1])
	goto $label$26 
	
.LABEL $label$27
	$0 = *($3 + [56])
	CALL _ZdlPv($0)
	
.LABEL $label$26
	CALL eosio_assert([0], $0)
	
.LABEL $label$25
	if ( ((uint_32)*($3 + [42]) >= (uint_32)$2) ){ goto $label$28 }
	CALL $359(($3 + [48]), [19152], ($3 + [42]))
	if ( (*($3 + [48]) & [1]) ){ goto $label$30 }
	$0 = (($3 + [48]) | [1])
	goto $label$29 
	
.LABEL $label$30
	$0 = *($3 + [56])
	CALL _ZdlPv($0)
	
.LABEL $label$29
	CALL eosio_assert([0], $0)
	
.LABEL $label$28
	$0 = *($3 + [28])
	if ( ($0 == 0) ){ goto $label$31 }
	*(($3 + [32])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$31
	$0 = *($3 + [16])
	if ( ($0 == 0) ){ goto $label$32 }
	*(($3 + [20])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$32
	$global$0 = ($3 + [64])
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	CALL $110($1)
	$2 = *([0] + [8632])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL $135($2, $1)
	return 
	
.LABEL $label$1
	$2 = CALL _Znwj([280])
	$3 = CALL $111($2)
	*([0] + [8632]) = $2
	CALL $135($3, $1)
}

void .FUNC $357 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [40]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)5445039531761205248, (int_64)5445039531761205248)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $117($1, $2)
	if ( ((int_32)*($2 + [40]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$1
	CALL $210($0, $2)
	*($0 + [33 align=1]) = *($2 + [33 align=1])
}

int_32 .FUNC $73 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = (($4 + [272]) + [24]))) = (int_64)0
	*(($9 = (($4 + [272]) + [16]))) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [272]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$5
	CALL memcpy(($4 + [272]), $2, [32])
	*(($4 + [48])) = $3
	*($4 + [60]) = ($2 + [32])
	*($4 + [56]) = $2
	*($4 + [64]) = $3
	*($4 + [40]) = *($4 + [56])
	$10 = CALL $20(($4 + [72]), $0, $1, ($4 + [40]))
	*(($3 = (($4 + [304]) + [24]))) = *($8)
	*(($8 = (($4 + [304]) + [16]))) = *($9)
	*($4 + [312]) = *($4 + [280])
	*($4 + [304]) = *($4 + [272])
	*((($4 + [336]) + [24])) = *($3)
	*((($4 + [336]) + [16])) = *($8)
	*($4 + [344]) = *($4 + [312])
	*($4 + [336]) = *($4 + [304])
	$3 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	$0 = *((($4 + [336]) + [24]))
	*((($4 + [368]) + [24])) = $0
	$1 = *((($4 + [336]) + [16]))
	*((($4 + [368]) + [16])) = $1
	*(($4 + [16])) = $1
	*(($4 + [24])) = $0
	$0 = *($4 + [344])
	*($4 + [376]) = $0
	$1 = *($4 + [336])
	*($4) = $1
	*($4 + [368]) = $1
	*($4 + [8]) = $0
	CALL void $3((int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $749($2)
	
.LABEL $label$7
	CALL $24($10)
	$global$0 = ($4 + [400])
	return [1]
}

void .FUNC $350 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [160])
	$global$0 = $3
	if ( *($1 + [4]) ){ goto $label$1 }
	$4 = *($0 + [12])
	*(($1 = *($0))) = (int_64))(*($1) - *(*($0 + [4])))
	*($3 + [64]) = [8617]
	*($3 + [68]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [64])
	$5 = *(CALL $10(($3 + [72]), ($3 + [32])))
	$6 = *($0 + [8])
	if ( ((int_64)*($2) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$2
	*(($1 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = $2
	*($1) = CALL $663($2)
	$6 = *($6 + [4])
	*($1 + [8]) = *($6)
	*($1 + [24]) = *(($6 + [16]))
	*($1 + [16]) = *(($6 + [8]))
	*($3 + [120]) = (($3 + [80]) + [32])
	*($3 + [112]) = ($3 + [80])
	CALL memcpy(($3 + [80]), $1, [8])
	*($3 + [116]) = (($3 + [80]) | [8])
	$6 = ($1 + [8])
	CALL $156(($3 + [112]), $6)
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)8800535341778862080, $5, $7, ($3 + [80]), [32])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$9 = *($1)
	$10 = *(($1 + [16]))
	$11 = *($6)
	$7 = *(($1 + [24]))
	if ( ((int_64)((int_64)$7 | (int_64)$11) != (int_64)0) ){ goto $label$5 }
	$7 = (int_64)0
	if ( (int_64)($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = CALL _Znwj([24])) + [8]) = $10
	*($6) = $11
	*($6 + [16]) = $7
	CALL sha256($6, [24], ($3 + [128]))
	$7 = *($3 + [128])
	if ( ($6 == 0) ){ goto $label$4 }
	CALL _ZdlPv($6)
	
.LABEL $label$4
	*($3 + [128]) = $7
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)8800535341778862080, $5, $9, ($3 + [128]))
	*($3 + [80]) = $1
	$7 = *($1)
	*($3 + [128]) = $7
	$12 = *(($1 + [36]))
	*($3 + [112]) = $12
	$13 = ($2 + [28])
	$6 = *($13)
	if ( ((uint_32)$6 >= (uint_32)*(($2 + [32]))) ){ goto $label$7 }
	*($6 + [8]) = $7
	*($6 + [16]) = $12
	*($3 + [80]) = [0]
	*($6) = $1
	*($13) = ($6 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $665(($2 + [24]), ($3 + [80]), ($3 + [128]), ($3 + [112]))
	
.LABEL $label$6
	$1 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	$1 = ($4 + [240])
	CALL $329(($3 + [80]), $1)
	*((($3 + [128]) + [16])) = *((($3 + [80]) + [16]))
	*($3 + [136]) = *($3 + [88])
	*($3 + [148]) = *($3 + [100])
	*($3 + [128]) = ((int_64)*($3 + [80]) + (int_64)1)
	*($3 + [112]) = [8617]
	*($3 + [116]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [112])
	CALL $330($1, ($3 + [128]), *(CALL $10(($3 + [80]), ($3 + [24]))))
	$1 = *($3 + [136])
	if ( ($1 == 0) ){ goto $label$9 }
	*(($3 + [140])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *(*(($0 + [8])) + [4])
	$7 = *($1)
	$5 = *(($1 + [16]))
	$10 = *(($1 + [8]))
	*(($3 + [8])) = $10
	*(($3 + [16])) = $5
	*((($3 + [40]) + [8])) = $10
	*((($3 + [40]) + [16])) = $5
	*($3 + [40]) = $7
	*($3) = $7
	CALL $478($3, [2], $3)
	
.LABEL $label$1
	$global$0 = ($3 + [160])
}

int_32 .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	CALL $145($0, ($1 + [36]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $170(CALL $170($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $2, [1])
	return *(($2 = ($0 + [4]))) = (*($2) + [1])
}

void .FUNC $70 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4, int_32 $5)
{
	int_32 $6
	$6 = ($global$0 - [32])
	$global$0 = $6
	*($6 + [16]) = [8617]
	*($6 + [20]) = CALL $743([8617])
	*($6 + [8]) = *($6 + [16])
	CALL require_auth(*(CALL $10(($6 + [24]), ($6 + [8]))))
	$global$0 = ($6 + [32])
}

void .FUNC $351 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_32 $16
	$3 = ($global$0 - [176])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	*($4 + [144]) = *($1 + [32])
	$5 = *($1)
	$7 = *(($1 + [44]))
	$6 = *($1 + [40])
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	$8 = [1]
	
.LOOP $label$5:
	$11 = ($6 + [24])
	CALL __multi3(($4 + [112]), *($6 + [16]), *($11), (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [96]), *($4 + [112]), *((($4 + [112]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [80]), *($4 + [96]), *((($4 + [96]) + [8])), *($6 + [32]), (int_64)0)
	$12 = *($6)
	$13 = *($4 + [80])
	if ( (uint_64)(((int_64)$13 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$6 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$6
	$14 = (uint_64)$12 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$15 = (uint_64)$14 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$14 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$14 = $15
	$16 = $9
	goto $label$10 
	
.LABEL $label$11
	$14 = $15
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$14 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$16 = ($9 + [1])
	$9 = $16
	if ( $10 ){ goto $label$12 }
	
.LABEL $label$10
	$9 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [22633])
	
.LABEL $label$7
	$9 = *($2)
	$14 = *($6)
	if ( ((int_64)$14 != (int_64)*($9 + [8])) ){ goto $label$17 }
	if ( ((int_64)$12 == (int_64)$14) ){ goto $label$18 }
	CALL eosio_assert([0], [23115])
	
.LABEL $label$18
	$14 = (int_64)0
	$15 = (int_64)0
	if ( ((int_64)*($9) > (int_64)$13) ){ goto $label$19 }
	$9 = *($2)
	CALL eosio_assert(((int_64)*($6) == (int_64)*($9 + [8])), [22653])
	$14 = *($9)
	CALL __multi3(($4 + [56]), *(($6 + [32])), (int_64)0, $14, (int_64)$14 >> (int_64)63))
	$15 = *((($4 + [56]) + [8]))
	$12 = *($11)
	$14 = *($4 + [56])
	$9 = ($6 + [16])
	CALL eosio_assert(( ((uint_64)*($9) >= (uint_64)$14) ? ((uint_64)$12 >= (uint_64)$15) : ((int_64)$12 == (int_64)$15) ), [22682])
	$12 = *($9)
	$15 = (int_64))((int_64))(*($11) - $15) - (CASTING uint_64)(uint_32 (uint_64)($12 <= $14)))
	$14 = (int_64))($12 - $14)
	
.LABEL $label$19
	*($11) = $15
	*(($6 + [16])) = $14
	$9 = ($8 & [1])
	$8 = [0]
	if ( ($9 == 0) ){ goto $label$13 }
	CALL __multi3(($4 + [40]), $14, $15, (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [24]), *($4 + [40]), *((($4 + [40]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [8]), *($4 + [24]), *((($4 + [24]) + [8])), *(($6 + [32])), (int_64)0)
	$14 = *($6)
	$12 = *($4 + [8])
	if ( (uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$20 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$20
	$14 = (uint_64)$14 >> (uint_64)(int_64)8)
	$9 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$15 = (uint_64)$14 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$14 & (int_64)65280) == (int_64)0) ){ goto $label$23 }
	$14 = $15
	$16 = $9
	goto $label$22 
	
.LABEL $label$23
	$14 = $15
	
.LOOP $label$24:
	if ( ((int_64)((int_64)$14 & (int_64)65280) != (int_64)0) ){ goto $label$16 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8)
	$10 = ((int_32)$9 < (int_32)[6])
	$16 = ($9 + [1])
	$9 = $16
	if ( $10 ){ goto $label$24 }
	
.LABEL $label$22
	$9 = ($16 + [1])
	if ( ((int_32)$16 < (int_32)[6]) ){ goto $label$21 }
	$9 = *([0] + [8632])
	if ( ($9 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	$9 = ($8 & [1])
	$8 = [0]
	if ( ($9 == 0) ){ goto $label$13 }
	$9 = *([0] + [8632])
	if ( $9 ){ goto $label$25 }
	$10 = CALL _Znwj([280])
	$9 = CALL $111($10)
	*([0] + [8632]) = $10
	
.LABEL $label$25
	*($4 + [168]) = [29736]
	*($4 + [172]) = CALL $743([29736])
	*($4 + [72]) = *($4 + [168])
	CALL $10(($4 + [128]), ($4 + [72]))
	$8 = ((uint_64)CALL $153($9, *($4 + [128]), (int_64)100) > (uint_64)$13)
	goto $label$13 
	
.LABEL $label$16
	CALL eosio_assert([0], [22633])
	$9 = *([0] + [8632])
	if ( $9 ){ goto $label$14 }
	
.LABEL $label$15
	$10 = CALL _Znwj([280])
	$9 = CALL $111($10)
	*([0] + [8632]) = $10
	
.LABEL $label$14
	*($4 + [152]) = [29736]
	*($4 + [156]) = CALL $743([29736])
	*($4) = *($4 + [152])
	CALL $10(($4 + [160]), $4)
	$8 = ((uint_64)CALL $153($9, *($4 + [160]), (int_64)100) > (uint_64)$12)
	
.LABEL $label$13
	$6 = ($6 + [48])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$5 }
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*($1 + [56]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	if ( ((int_32)*($1 + [24]) == (int_32)[3]) ){ goto $label$3 }
	*(($1 + [24])) = [0]
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)*($1)) ){ goto $label$26 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$26
	$15 = (CASTING uint_64)(uint_32 $5)
	$9 = *($1 + [4])
	$10 = ( *(($1 + [8])) ? uint_32($9 >> [1]) : ($9 & [1]) )
	$9 = ($10 + [59])
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LOOP $label$27:
	$9 = ($9 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$27 }
	$16 = *($1 + [40])
	$10 = *(($1 + [44]))
	$6 = ($10 - $16)
	$14 = (CASTING uint_64)(uint_32 ((int_32)$6 / (int_32)[48]))
	
.LOOP $label$28:
	$9 = ($9 + [1])
	$14 = (uint_64)$14 >> (uint_64)(int_64)7
	if ( ((int_64)$14) != (int_64)0) ){ goto $label$28 }
	if ( ((int_32)$16 == (int_32)$10) ){ goto $label$30 }
	$9 = (((int_32)((uint_32)($6 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $9)
	goto $label$29 
	
.LABEL $label$30
	$9 = ($9 + [-36])
	
.LABEL $label$29
	$10 = ($9 + [12])
	if ( ($10 <= [513]) ){ goto $label$32 }
	$9 = CALL $746($10)
	goto $label$31 
	
.LABEL $label$32
	$9 = ($3 - (($10 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$31
	*($4 + [132]) = $9
	*($4 + [128]) = $9
	*($4 + [136]) = ($9 + $10)
	CALL $589(($4 + [128]), $1)
	CALL db_update_i64(*(($1 + [68])), (int_64)0, $9, $10)
	if ( ($10 <= [513]) ){ goto $label$33 }
	CALL $749($9)
	
.LABEL $label$33
	if ( ((uint_64)*($0 + [16]) > (uint_64)$15) ){ goto $label$34 }
	*(($0 + [16])) = ((int_64)$15 + (int_64)1)
	
.LABEL $label$34
	*($4 + [168]) = *(($1 + [32]))
	if ( (CALL $742(($4 + [144]), ($4 + [168]), [8]) == 0) ){ goto $label$35 }
	$10 = ($1 + [72])
	$9 = *($10)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$36 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6138621011882409984, ($4 + [160]), $15)
	*($10) = $9
	
.LABEL $label$36
	CALL db_idx64_update($9, (int_64)0, ($4 + [168]))
	
.LABEL $label$35
	$global$0 = ($4 + [176])
}

void .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [128])
	$global$0 = $2
	*(($3 = (($2 + [40]) + [16]))) = *(($1 + [16]))
	*(($4 = (($2 + [40]) + [8]))) = *(($1 + [8]))
	*($2 + [24]) = (int_64)0
	$5 = [0]
	*($2 + [32]) = [0]
	*($2 + [40]) = *($1)
	$6 = *($1 + [24])
	$7 = (*(($1 + [36])) - *($1 + [32]))
	if ( ($7 == 0) ){ goto $label$6 }
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$2 }
	$8 = CALL _Znwj($7)
	*(($2 + [32])) = ($8 + $7)
	*($2 + [24]) = $8
	*($2 + [28]) = $8
	$7 = *(($1 + [32]))
	$5 = (*(($1 + [36])) - $7)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($8, $7, $5)
	$5 = ($8 + $5)
	*($2 + [28]) = $5
	goto $label$4 
	
.LABEL $label$6
	$8 = [0]
	$7 = [0]
	goto $label$3 
	
.LABEL $label$5
	$5 = $8
	
.LABEL $label$4
	$7 = $8
	
.LABEL $label$3
	$9 = *($1 + [44])
	*((($2 + [64]) + [16])) = *($3)
	*((($2 + [64]) + [8])) = *($4)
	*($2 + [64]) = *($2 + [40])
	$1 = *($0 + [4])
	$0 = *($1 + [4])
	$3 = (*($0) + int_32($0 >> [1]))
	$1 = *($1)
	if ( (($0 & [1]) == 0) ){ goto $label$7 }
	$1 = *((*($3) + $1))
	
.LABEL $label$7
	*(($4 = (($2 + [104]) + [16]))) = *((($2 + [64]) + [16]))
	*(($10 = (($2 + [104]) + [8]))) = *((($2 + [64]) + [8]))
	*($2 + [104]) = *($2 + [64])
	*($2 + [88]) = (int_64)0
	*($2 + [96]) = [0]
	$0 = ($5 - $7)
	if ( ($0 == 0) ){ goto $label$8 }
	if ( ((int_32)$0 <= (int_32)[-1]) ){ goto $label$1 }
	$7 = CALL _Znwj($0)
	*(($2 + [96])) = ($7 + $0)
	*($2 + [88]) = $7
	*($2 + [92]) = $7
	$5 = ($5 - $8)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($7, $8, $5)
	*($2 + [92]) = ($7 + $5)
	
.LABEL $label$8
	*(($2 + [16])) = *($4)
	*(($2 + [8])) = *($10)
	*($2) = *($2 + [104])
	CALL void $3((int_32 $2), (int_32 $6), (int_64 ($2 + [88])), (int_32 ($9 & [255])), (int_32 $1))
	$1 = *($2 + [88])
	if ( ($1 == 0) ){ goto $label$9 }
	*($2 + [92]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *($2 + [24])
	if ( ($1 == 0) ){ goto $label$10 }
	*($2 + [28]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$global$0 = ($2 + [128])
	return (unreachable)
	
.LABEL $label$2
	CALL $727(($2 + [24]))
	
.LABEL $label$1
	CALL $727(($2 + [88]))
	(unreachable)
}

void .FUNC $494 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8800195549769760768, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $352 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$5 = ($global$0 - [224])
	$global$0 = $5
	$7 = *($2)
	$6 = *($2 + [4])
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [18813])
	$6 = *(($2 + [4]))
	$7 = *($2)
	
.LABEL $label$1
	$6 = *($3)
	if ( ((int_32)($6 - $7) == (int_32)int_32((*($3 + [4]) - $6) >> [4])) ){ goto $label$2 }
	CALL eosio_assert([0], [18838])
	$6 = *($3)
	
.LABEL $label$2
	$8 = *($6 + [8])
	CALL $14(($5 + [8]))
	$6 = ($5 + [8])
	if ( ((int_64)$8 == (int_64)*($5 + [16])) ){ goto $label$4 }
	if ( ((int_64)*(($5 + [40])) != (int_64)$8) ){ goto $label$5 }
	$6 = ($5 + [32])
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)*(($5 + [64])) != (int_64)$8) ){ goto $label$6 }
	$6 = ($5 + [56])
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)*(($5 + [88])) != (int_64)$8) ){ goto $label$7 }
	$6 = ($5 + [80])
	goto $label$4 
	
.LABEL $label$7
	if ( ((int_64)*(($5 + [112])) != (int_64)$8) ){ goto $label$8 }
	$6 = ($5 + [104])
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_64)*(($5 + [136])) != (int_64)$8) ){ goto $label$9 }
	$6 = ($5 + [128])
	goto $label$4 
	
.LABEL $label$9
	if ( ((int_64)*(($5 + [160])) != (int_64)$8) ){ goto $label$10 }
	$6 = ($5 + [152])
	goto $label$4 
	
.LABEL $label$10
	if ( ((int_64)*(($5 + [184])) != (int_64)$8) ){ goto $label$11 }
	$6 = ($5 + [176])
	goto $label$4 
	
.LABEL $label$11
	if ( ((int_64)*(($5 + [208])) != (int_64)$8) ){ goto $label$3 }
	$6 = ($5 + [200])
	
.LABEL $label$4
	$8 = *($6 + [8])
	
.LABEL $label$3
	*($0 + [8]) = $8
	*($0) = (int_64)0
	$6 = [0]
	$9 = (uint_64)$8 >> (uint_64)(int_64)8
	$10 = $9)
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$10 = $11
	$12 = $6
	goto $label$15 
	
.LABEL $label$16
	$10 = $11
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$12 = ($6 + [1])
	$6 = $12
	if ( $7 ){ goto $label$17 }
	
.LABEL $label$15
	$6 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [22633])
	
.LABEL $label$12
	*($5 + [4]) = [0]
	$7 = *($3)
	$13 = ($3 + [4])
	if ( ((int_32)*($13) != (int_32)$7) ){ goto $label$21 }
	$11 = (int_64)0
	goto $label$20 
	
.LABEL $label$21
	$12 = ( [160] ? [156] : $4 )
	$4 = (($5 + [8]) | [1])
	$14 = (($5 + [8]) | [1])
	$11 = (int_64)0
	$15 = ($5 + [16])
	$6 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)$12 >= (uint_32)*((*($2) + $6))) ){ goto $label$23 }
	*($5) = $12
	CALL $353(($5 + [8]), [18879], $5, [18909], ($5 + [4]))
	$6 = $14
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$24 }
	$6 = *($15)
	CALL _ZdlPv($6)
	
.LABEL $label$24
	CALL eosio_assert([0], $6)
	$7 = *($3)
	$6 = *($5 + [4])
	
.LABEL $label$23
	if ( ((int_64)*(($7 + ($6 << [4])) + [8]) == (int_64)$8) ){ goto $label$25 }
	CALL $354(($5 + [8]), [18916], ($5 + [4]))
	$6 = $4
	if ( ((*($5 + [8]) & [1]) == 0) ){ goto $label$26 }
	$6 = *($15)
	CALL _ZdlPv($6)
	
.LABEL $label$26
	CALL eosio_assert([0], $6)
	$7 = *($3)
	$6 = *($5 + [4])
	
.LABEL $label$25
	$6 = ($7 + ($6 << [4]))
	if ( ((int_64)*($6 + [8]) == (int_64)$8) ){ goto $label$27 }
	CALL eosio_assert([0], [28618])
	
.LABEL $label$27
	$11 = ((int_64)$11 + (int_64)*($6))
	*($0) = $11
	if ( ((int_64)$11 <= (int_64)-4611686018427387904) ){ goto $label$29 }
	if ( ((int_64)$11 < (int_64)4611686018427387904) ){ goto $label$28 }
	CALL eosio_assert([0], [28680])
	goto $label$28 
	
.LABEL $label$29
	CALL eosio_assert([0], [28661])
	
.LABEL $label$28
	$6 = (*($5 + [4]) + [1])
	*($5 + [4]) = $6
	$7 = *($3)
	if ( ($6 <= int_32((*($13) - $7) >> [4])) ){ goto $label$22 }
	if ( ((uint_64)((int_64)$11 + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$19 }
	
.LABEL $label$20
	$6 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$9 = $10
	$3 = $6
	goto $label$31 
	
.LABEL $label$32
	$9 = $10
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$3 = ($6 + [1])
	$6 = $3
	if ( $7 ){ goto $label$33 }
	
.LABEL $label$31
	$6 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$30 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [18934])
	
.LABEL $label$18
	CALL $355(($5 + [8]), ($1 + [40]))
	if ( (*($5 + [40]) == 0) ){ goto $label$34 }
	CALL eosio_assert([0], [18948])
	
.LABEL $label$34
	$6 = *($5 + [16])
	$7 = *(($5 + [20]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$38 }
	$3 = int_32(($7 - $6) >> [4])
	$7 = [0]
	
.LOOP $label$39:
	if ( ((int_64)*(($6 + [8])) == (int_64)$8) ){ goto $label$37 }
	$6 = ($6 + [16])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$39 }
	
.LABEL $label$38
	$6 = [0]
	CALL eosio_assert([0], [18787])
	$10 = (int_64)5459781
	
.LOOP $label$42:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$41 }
	$9 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$10 = $9
	$3 = $6
	goto $label$43 
	
.LABEL $label$44
	$10 = $9
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$41 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$3 = ($6 + [1])
	$6 = $3
	if ( $7 ){ goto $label$45 }
	
.LABEL $label$43
	$6 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$42 }
	goto $label$40 
	
.LABEL $label$41
	CALL eosio_assert([0], [22633])
	
.LABEL $label$40
	if ( ((int_64)$8 == (int_64)1397703940) ){ goto $label$46 }
	CALL eosio_assert([0], [23115])
	
.LABEL $label$46
	if ( ((int_64)0 <= (int_64)$11) ){ goto $label$35 }
	goto $label$36 
	
.LABEL $label$37
	if ( ((int_64)*($6) <= (int_64)$11) ){ goto $label$35 }
	
.LABEL $label$36
	CALL eosio_assert([0], [18987])
	
.LABEL $label$35
	$6 = *($5 + [28])
	$7 = *((($5 + [8]) + [24]))
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$52 }
	$3 = int_32(($7 - $6) >> [4])
	$7 = [0]
	
.LOOP $label$53:
	if ( ((int_64)*(($6 + [8])) == (int_64)$8) ){ goto $label$51 }
	$6 = ($6 + [16])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$53 }
	
.LABEL $label$52
	$6 = [0]
	CALL eosio_assert([0], [18787])
	$10 = (int_64)5459781
	
.LOOP $label$56:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$55 }
	$9 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$58 }
	$10 = $9
	$3 = $6
	goto $label$57 
	
.LABEL $label$58
	$10 = $9
	
.LOOP $label$59:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$55 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$3 = ($6 + [1])
	$6 = $3
	if ( $7 ){ goto $label$59 }
	
.LABEL $label$57
	$6 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$56 }
	goto $label$54 
	
.LABEL $label$55
	CALL eosio_assert([0], [22633])
	
.LABEL $label$54
	if ( ((int_64)$8 != (int_64)1397703940) ){ goto $label$60 }
	if ( ((int_64)0 < (int_64)$11) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$60
	CALL eosio_assert([0], [23115])
	if ( ((int_64)0 >= (int_64)$11) ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$51
	if ( ((int_64)*($6) >= (int_64)$11) ){ goto $label$49 }
	
.LABEL $label$50
	CALL eosio_assert([0], [19011])
	$6 = *($5 + [28])
	if ( $6 ){ goto $label$48 }
	goto $label$47 
	
.LABEL $label$49
	$6 = *($5 + [28])
	if ( ($6 == 0) ){ goto $label$47 }
	
.LABEL $label$48
	*(($5 + [32])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$47
	$6 = *($5 + [16])
	if ( ($6 == 0) ){ goto $label$61 }
	*(($5 + [20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$61
	$global$0 = ($5 + [224])
}

void .FUNC $269 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	$6 = ($global$0 - [448])
	$global$0 = $6
	*($6 + [440]) = $3
	CALL $149($0, $1, [0])
	$0 = CALL $109($6)
	CALL $173($0, $1, $2, ($6 + [440]), $4, $5)
	CALL $130($0)
	$global$0 = ($6 + [448])
}

void .FUNC $601 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *(*($0))
	*($1 + [72]) = $3
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$1 }
	$5 = CALL _Znwj([280])
	$4 = CALL $111($5)
	*([0] + [8632]) = $5
	$3 = *(*($0))
	
.LABEL $label$1
	CALL $207(($2 + [8]), ($4 + [120]), $3)
	$4 = *($2 + [12])
	if ( $4 ){ goto $label$2 }
	CALL eosio_assert([0], [17542])
	$4 = *($2 + [12])
	
.LABEL $label$2
	CALL $710($1, ($4 + [4]))
	$4 = *($0 + [4])
	*($1 + [64]) = *($4)
	$3 = *(*($0 + [8]))
	*(($1 + [24])) = *($4)
	$3 = ((int_64)$3 + (int_64)*($1 + [16]))
	*($1 + [16]) = $3
	$6 = *(*($0 + [12]))
	*(($1 + [40])) = *(*($0 + [4]))
	$6 = ((int_64)$6 + (int_64)*($1 + [32]))
	*($1 + [32]) = $6
	if ( (int_64)($3 == 0) ){ goto $label$3 }
	*($1 + [48]) = ((int_64)((int_64)$6 * (int_64)10000) / (int_64)$3)
	
.LABEL $label$3
	if ( ((int_64)*(*(($0 + [8]))) != (int_64)0) ){ goto $label$5 }
	if ( (int_64)(*(*(($0 + [12]))) == 0) ){ goto $label$4 }
	$0 = *(*($0))
	if ( ((int_32)$0 == (int_32)[10]) ){ goto $label$5 }
	if ( ((int_32)$0 != (int_32)[6]) ){ goto $label$4 }
	
.LABEL $label$5
	*($1 + [56]) = ((int_64)*($1 + [56]) + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($2 + [16])
}

void .FUNC $77 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [448])
	$global$0 = $5
	*($5 + [440]) = $2
	CALL $149($0, $1, [0])
	$0 = CALL $109($5)
	CALL $174($0, $1, ($5 + [440]), $3, $4)
	CALL $130($0)
	$global$0 = ($5 + [448])
}

void .FUNC $74 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [16])
	CALL require_auth(*(CALL $10(($3 + [24]), ($3 + [8]))))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $75 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [304])
	$global$0 = $3
	*(($4 = $3) + [296]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = (int_64)0
	*($4 + [264]) = [0]
	*($4 + [256]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $5)
	CALL $184(($4 + [240]), ($4 + [256]))
	CALL $168(($4 + [240]), ($4 + [272]))
	$3 = *($4 + [248])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [240])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $20(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [296])
	CALL $233(($4 + [16]), ($4 + [256]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $749($2)
	
.LABEL $label$4
	CALL $24($3)
	if ( ((*($4 + [256]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [264])))
	
.LABEL $label$5
	$global$0 = ($4 + [304])
	return [1]
}

void .FUNC $358 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $720($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $359 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $720($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $608 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [40])
	$2 = *($0 + [4])
	$0 = CALL $168($0, ($1 + [16]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$2 = ($1 + [64])
	$0 = *($1 + [4])
	$1 = CALL $306($0, ($1 + [48]))
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$0 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $0, [1])
	*(($0 = ($1 + [4]))) = (*($0) + [1])
	return $1
}

void .FUNC $609 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL $720(($4 + [16]), *($1))
	CALL $610($4, $2, $3)
	$2 = *($4)
	$3 = ($2 & [1])
	$2 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $3 ), ( *($4 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$1
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$2
	$global$0 = ($4 + [32])
}

void .FUNC $606 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $225($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $607 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$4
	CALL memcpy($5, $1, $4)
	
.LABEL $label$3
	*(($5 + $4)) = [0]
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $743($2)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$8 }
	*($3) = ($4 << [1])
	$1 = ($3 | [1])
	$5 = $1
	if ( $4 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$1 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($1)
	*($3) = ($1 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	$1 = ($3 | [1])
	
.LABEL $label$7
	CALL memcpy($5, $2, $4)
	
.LABEL $label$6
	*(($5 + $4)) = [0]
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $1 : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$9
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$10
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $708(($3 + [16]))
	
.LABEL $label$1
	CALL $708($3)
	(unreachable)
}

void .FUNC $604 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $723(($3 + [16]), *($1))
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$1 = CALL $743($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($3) = ($1 << [1])
	$4 = ($3 | [1])
	$5 = $4
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($3) = ($4 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $1
	$4 = ($3 | [1])
	
.LABEL $label$3
	CALL memcpy($5, $2, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	$1 = *($3)
	$5 = ($1 & [1])
	$1 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $4 : $5 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$6 = *($1)
	*($1) = (int_64)0
	*($0) = $6
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708($3)
}

void .FUNC $605 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $723(($3 + [16]), *($1))
	CALL $723($3, *($2))
	$2 = *($3)
	$1 = ($2 & [1])
	$2 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $1 ), ( *($3 + [4]) ? uint_32($2 >> [1]) : $1 ))
	$4 = *($2)
	*($2) = (int_64)0
	*($0) = $4
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$1
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$2
	$global$0 = ($3 + [32])
}

int_32 .FUNC $602 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($1 + [16])
	$4 = *($0 + [4])
	$0 = CALL $479($0, $1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $3, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($4)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	$3 = ($1 + [32])
	$4 = *($4)
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($1 + [40]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($4)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	$3 = ($1 + [48])
	$4 = *($4)
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$3 = *($4)
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	$3 = (*($4) + [8])
	*($4) = $3
	$4 = ($1 + [64])
	if ( ((int_32)(*($6) - $3) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	$1 = ($1 + [72])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22875])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, $1, [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $603 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $479(*($1), (*($0) + [52]))
	$0 = *($0)
	$3 = ($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($0 + [72]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($5)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($0 + [80])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($0 + [88]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($0 + [96])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [32])
	*(($4 = ($4 + [4]))) = (*($4) + [32])
	$4 = ($0 + [128])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$0 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $600 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($1 + [48])
	$3 = *($0 + [4])
	$0 = CALL $306(CALL $306(CALL $184($0, $1), ($1 + [16])), ($1 + [32]))
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $3, [8])
	$2 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $2
	$4 = ($1 + [56])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $2) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$2 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	$2 = (*($3) + [8])
	*($3) = $2
	$3 = ($1 + [64])
	if ( ((uint_32)(*($5) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	$2 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $2
	$1 = ($1 + [72])
	if ( ((uint_32)(*(($0 + [8])) - $2) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$2 = *($3)
	
.LABEL $label$4
	CALL memcpy($1, $2, [8])
	*($3) = (*($3) + [8])
	return $0
}

void .FUNC $353 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $590($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $259 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [20])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $258 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = ($global$0 - [48])
	$global$0 = $2
	$3 = *($0)
	$4 = *(*($0 + [4]))
	$5 = *(($4 + [8]))
	$6 = *(($4 + [16]))
	$7 = *($4)
	*(((($8 = $2) + [8]) + [24])) = (int_64)0
	*(($9 = (($8 + [8]) + [16]))) = $6
	*(($10 = (($8 + [8]) + [8]))) = $5
	$11 = [0]
	*($8 + [28]) = [0]
	*($8 + [8]) = $7
	$12 = (*(($4 + [24])) - *($4 + [20]))
	$13 = ((int_32)$12 / (int_32)[48])
	$14 = [0]
	$6 = [0]
	if ( ($12 == 0) ){ goto $label$2 }
	if ( ((uint_32)$13 >= (uint_32)[89478486]) ){ goto $label$1 }
	$6 = CALL _Znwj($12)
	*((($8 + [8]) + [20])) = $6
	$11 = ($6 + ((int_32)$13 * (int_32)[48]))
	*(($8 + [36])) = $11
	*(($12 = (($8 + [8]) + [24]))) = $6
	$13 = *(($4 + [20]))
	$14 = (*(($4 + [24])) - $13)
	if ( ((int_32)$14 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $13, $14)
	$14 = ($6 + ((int_32)((uint_32)$14 / (uint_32)[48]) * (int_32)[48]))
	*($12) = $14
	goto $label$2 
	
.LABEL $label$3
	$14 = $6
	
.LABEL $label$2
	$4 = *($4 + [32])
	*($1) = *($8 + [8])
	*(($1 + [8])) = *($10)
	*(($1 + [16])) = *($9)
	*($8 + [40]) = $4
	$12 = *($1 + [20])
	if ( ($12 == 0) ){ goto $label$5 }
	*(($1 + [24])) = $12
	CALL _ZdlPv($12)
	*(($12 = ($1 + [28]))) = [0]
	*($1 + [20 align=4]) = (int_64)0
	goto $label$4 
	
.LABEL $label$5
	$12 = ($1 + [28])
	
.LABEL $label$4
	*($12) = $11
	*($1 + [32]) = $4
	*(($1 + [24])) = $14
	*(($1 + [20])) = $6
	$11 = ($14 - $6)
	$5 = (CASTING uint_64)(uint_32 ((int_32)$11 / (int_32)[48]))
	$4 = [54]
	
.LOOP $label$6:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$14) ){ goto $label$8 }
	$4 = (((int_32)((uint_32)($11 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $4)
	goto $label$7 
	
.LABEL $label$8
	$4 = ($4 + [-36])
	
.LABEL $label$7
	$6 = ($4 + [1])
	if ( ($6 <= [513]) ){ goto $label$10 }
	$4 = CALL $746($6)
	goto $label$9 
	
.LABEL $label$10
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$9
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	CALL $541(($8 + [8]), $1)
	$5 = *($1)
	*($1 + [40]) = CALL db_store_i64(*($3 + [8]), (int_64)5886735919226028032, *(*($0 + [8])), $5, $4, $6)
	if ( ($6 <= [513]) ){ goto $label$11 }
	CALL $749($4)
	
.LABEL $label$11
	if ( (uint_64)($5 <= *($3 + [16])) ){ goto $label$12 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($8 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $727(($8 + [28]))
}

void .FUNC $329 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800535352911593472, (int_64)8800535352911593472)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $482($1, $2)
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$1
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($2)
	$1 = (*(($2 + [12])) - *($2 + [8]))
	$3 = ((int_32)$1 / (int_32)[48])
	if ( ($1 == 0) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[89478486]) ){ goto $label$5 }
	$1 = CALL _Znwj($1)
	*(($0 + [8])) = $1
	*(($0 + [16])) = ($1 + ((int_32)$3 * (int_32)[48]))
	*(($3 = ($0 + [12]))) = $1
	$4 = *(($2 + [8]))
	$5 = (*(($2 + [12])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$6
	*($0 + [20]) = *($2 + [20])
	return (unreachable)
	
.LABEL $label$5
	CALL $727(($0 + [8]))
}

void .FUNC $328 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)8800195550100881408, (int_64)8800195550100881408)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $481($0, $4)
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $485($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $486($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $321 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [256])
	$global$0 = $3
	if ( ((int_64)*($2 + [8]) != (int_64)1397703940) ){ goto $label$1 }
	*($3 + [176]) = ((int_64)*($2) + (int_64)*(*($1 + [4]) + [24]))
	$4 = *($0 + [360])
	*($3 + [152]) = [21014]
	*($3 + [156]) = CALL $743([21014])
	*($3 + [64]) = *($3 + [152])
	$5 = CALL $153($4, *(CALL $10(($3 + [160]), ($3 + [64]))), (int_64)1000000)
	*($3 + [168]) = $5
	$6 = *($3 + [176])
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$3 }
	$7 = *(($0 + [360]))
	*($3 + [128]) = [0]
	*($3 + [224]) = $6
	$4 = *($1 + [4])
	*($3 + [136]) = [8617]
	*($3 + [140]) = CALL $743([8617])
	*($3 + [48]) = *($3 + [136])
	$7 = ($7 + [40])
	$8 = CALL $10(($3 + [200]), ($3 + [48]))
	*($3 + [188]) = ($3 + [224])
	*($3 + [184]) = ($3 + [128])
	$5 = *($8)
	if ( $4 ){ goto $label$4 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$4
	CALL $332($7, $4, $5, ($3 + [184]))
	goto $label$2 
	
.LABEL $label$3
	$4 = *(($1 + [4]))
	$5 = *($4 + [16])
	$9 = *($4 + [8])
	$6 = *($4)
	*($3 + [144]) = $1
	*($3 + [148]) = $0
	*($3 + [140]) = ($3 + [168])
	*($3 + [136]) = ($3 + [176])
	CALL $325(($3 + [200]), $0)
	if ( (*($3 + [220]) == 0) ){ goto $label$9 }
	$7 = ($0 + [80])
	*($3 + [128]) = $7
	$10 = (int_64)0
	if ( ((int_64)((int_64)$5 | (int_64)$6) != (int_64)0) ){ goto $label$11 }
	$5 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	*(($4 = CALL _Znwj([24])) + [8]) = $9
	*($4) = $6
	*($4 + [16]) = $5
	CALL sha256($4, [24], ($3 + [224]))
	$10 = *($3 + [224])
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	*($3 + [184]) = $10
	CALL $333(($3 + [224]), ($3 + [128]), ($3 + [184]))
	$4 = *($3 + [228])
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $334(($3 + [184]), $7, *($4))
	CALL $335(($3 + [136]), ($3 + [184]), $7)
	$4 = *($3 + [208])
	if ( ($4 == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$9
	$7 = ($0 + [40])
	*($3 + [128]) = $7
	$10 = (int_64)0
	if ( ((int_64)((int_64)$5 | (int_64)$6) != (int_64)0) ){ goto $label$13 }
	$5 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	*(($4 = CALL _Znwj([24])) + [8]) = $9
	*($4) = $6
	*($4 + [16]) = $5
	CALL sha256($4, [24], ($3 + [224]))
	$10 = *($3 + [224])
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	*($3 + [224]) = $10
	CALL $336(($3 + [184]), ($3 + [128]), ($3 + [224]))
	$4 = *($3 + [188])
	if ( ($4 == 0) ){ goto $label$7 }
	CALL $337(($3 + [224]), $7, *($4))
	CALL $338(($3 + [136]), ($3 + [224]), $7)
	$4 = *($3 + [208])
	if ( $4 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	*($3 + [188]) = [0]
	*($3 + [184]) = $7
	CALL $335(($3 + [136]), ($3 + [184]), $7)
	$4 = *($3 + [208])
	if ( $4 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	*($3 + [228]) = [0]
	*($3 + [224]) = $7
	CALL $338(($3 + [136]), ($3 + [224]), $7)
	$4 = *($3 + [208])
	if ( ($4 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($3 + [212])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$5
	$7 = *(($0 + [360]))
	$5 = *($3 + [176])
	*($3 + [128]) = [0]
	*($3 + [224]) = $5
	$4 = *($1 + [4])
	*($3 + [136]) = [8617]
	*($3 + [140]) = CALL $743([8617])
	*($3 + [56]) = *($3 + [136])
	$7 = ($7 + [40])
	$8 = CALL $10(($3 + [200]), ($3 + [56]))
	*($3 + [188]) = ($3 + [224])
	*($3 + [184]) = ($3 + [128])
	$5 = *($8)
	if ( $4 ){ goto $label$14 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$14
	CALL $332($7, $4, $5, ($3 + [184]))
	
.LABEL $label$2
	$7 = ($1 + [4])
	*($3 + [128]) = ((int_64)*($2) + (int_64)*(*($7) + [32]))
	$8 = ($0 + [360])
	$4 = *($8)
	*($3 + [104]) = [21026]
	*($3 + [108]) = CALL $743([21026])
	*($3 + [40]) = *($3 + [104])
	$5 = CALL $153($4, *(CALL $10(($3 + [112]), ($3 + [40]))), (int_64)10000000)
	*($3 + [120]) = $5
	$6 = *($3 + [128])
	if ( ((uint_64)$6 >= (uint_64)$5) ){ goto $label$16 }
	$7 = *($8)
	*($3 + [96]) = [1]
	*($3 + [224]) = $6
	$4 = *($1 + [4])
	*($3 + [136]) = [8617]
	*($3 + [140]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [136])
	$7 = ($7 + [40])
	$8 = CALL $10(($3 + [200]), ($3 + [24]))
	*($3 + [188]) = ($3 + [224])
	*($3 + [184]) = ($3 + [96])
	$5 = *($8)
	if ( $4 ){ goto $label$17 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$17
	CALL $332($7, $4, $5, ($3 + [184]))
	goto $label$15 
	
.LABEL $label$16
	$4 = *($7)
	$5 = *($4 + [16])
	$9 = *($4 + [8])
	$6 = *($4)
	*($3 + [144]) = $1
	*($3 + [148]) = $0
	*($3 + [140]) = ($3 + [120])
	*($3 + [136]) = ($3 + [128])
	CALL $327(($3 + [200]), ($0 + [120]))
	if ( (*($3 + [220]) == 0) ){ goto $label$22 }
	$7 = ($0 + [200])
	*($3 + [96]) = $7
	$10 = (int_64)0
	if ( ((int_64)((int_64)$5 | (int_64)$6) != (int_64)0) ){ goto $label$24 }
	$5 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$23 }
	
.LABEL $label$24
	*(($4 = CALL _Znwj([24])) + [8]) = $9
	*($4) = $6
	*($4 + [16]) = $5
	CALL sha256($4, [24], ($3 + [224]))
	$10 = *($3 + [224])
	if ( ($4 == 0) ){ goto $label$23 }
	CALL _ZdlPv($4)
	
.LABEL $label$23
	*($3 + [184]) = $10
	CALL $339(($3 + [224]), ($3 + [96]), ($3 + [184]))
	$4 = *($3 + [228])
	if ( ($4 == 0) ){ goto $label$21 }
	CALL $340(($3 + [184]), $7, *($4))
	CALL $341(($3 + [136]), ($3 + [184]), $7)
	$4 = *($3 + [208])
	if ( ($4 == 0) ){ goto $label$18 }
	goto $label$19 
	
.LABEL $label$22
	$7 = ($0 + [160])
	*($3 + [96]) = $7
	$10 = (int_64)0
	if ( ((int_64)((int_64)$5 | (int_64)$6) != (int_64)0) ){ goto $label$26 }
	$5 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$25 }
	
.LABEL $label$26
	*(($4 = CALL _Znwj([24])) + [8]) = $9
	*($4) = $6
	*($4 + [16]) = $5
	CALL sha256($4, [24], ($3 + [224]))
	$10 = *($3 + [224])
	if ( ($4 == 0) ){ goto $label$25 }
	CALL _ZdlPv($4)
	
.LABEL $label$25
	*($3 + [224]) = $10
	CALL $342(($3 + [184]), ($3 + [96]), ($3 + [224]))
	$4 = *($3 + [188])
	if ( ($4 == 0) ){ goto $label$20 }
	CALL $343(($3 + [224]), $7, *($4))
	CALL $344(($3 + [136]), ($3 + [224]), $7)
	$4 = *($3 + [208])
	if ( $4 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$21
	*($3 + [188]) = [0]
	*($3 + [184]) = $7
	CALL $341(($3 + [136]), ($3 + [184]), $7)
	$4 = *($3 + [208])
	if ( $4 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($3 + [228]) = [0]
	*($3 + [224]) = $7
	CALL $344(($3 + [136]), ($3 + [224]), $7)
	$4 = *($3 + [208])
	if ( ($4 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	*(($3 + [212])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$18
	$7 = *(($0 + [360]))
	$5 = *($3 + [128])
	*($3 + [96]) = [1]
	*($3 + [224]) = $5
	$4 = *($1 + [4])
	*($3 + [136]) = [8617]
	*($3 + [140]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [136])
	$7 = ($7 + [40])
	$8 = CALL $10(($3 + [200]), ($3 + [32]))
	*($3 + [188]) = ($3 + [224])
	*($3 + [184]) = ($3 + [96])
	$5 = *($8)
	if ( $4 ){ goto $label$27 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$27
	CALL $332($7, $4, $5, ($3 + [184]))
	
.LABEL $label$15
	$4 = ($1 + [4])
	$5 = ((int_64)*($2) + (int_64)*(*($4) + [40]))
	*($3 + [96]) = $5
	$7 = ($0 + [360])
	$2 = *($7)
	*($3 + [72]) = [21038]
	*($3 + [76]) = CALL $743([21038])
	*($3 + [16]) = *($3 + [72])
	$6 = CALL $153($2, *(CALL $10(($3 + [80]), ($3 + [16]))), (int_64)100000000)
	*($3 + [88]) = $6
	if ( ((uint_64)$5 >= (uint_64)$6) ){ goto $label$29 }
	$4 = *($7)
	*($3 + [192]) = [2]
	*($3 + [224]) = $5
	$2 = *($1 + [4])
	*($3 + [136]) = [8617]
	*($3 + [140]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [136])
	$4 = ($4 + [40])
	$7 = CALL $10(($3 + [200]), ($3 + [8]))
	*($3 + [188]) = ($3 + [224])
	*($3 + [184]) = ($3 + [192])
	$5 = *($7)
	if ( $2 ){ goto $label$30 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$30
	CALL $332($4, $2, $5, ($3 + [184]))
	goto $label$28 
	
.LABEL $label$29
	$2 = *($4)
	$5 = *($2 + [16])
	$9 = *($2 + [8])
	$6 = *($2)
	*($3 + [144]) = $1
	*($3 + [148]) = $0
	*($3 + [140]) = ($3 + [88])
	*($3 + [136]) = ($3 + [96])
	CALL $329(($3 + [200]), ($0 + [240]))
	if ( (*($3 + [220]) == 0) ){ goto $label$34 }
	$4 = ($0 + [320])
	*($3 + [192]) = $4
	$10 = (int_64)0
	if ( ((int_64)((int_64)$5 | (int_64)$6) != (int_64)0) ){ goto $label$36 }
	$5 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$35 }
	
.LABEL $label$36
	*(($2 = CALL _Znwj([24])) + [8]) = $9
	*($2) = $6
	*($2 + [16]) = $5
	CALL sha256($2, [24], ($3 + [224]))
	$10 = *($3 + [224])
	if ( ($2 == 0) ){ goto $label$35 }
	CALL _ZdlPv($2)
	
.LABEL $label$35
	*($3 + [184]) = $10
	CALL $345(($3 + [224]), ($3 + [192]), ($3 + [184]))
	$2 = *($3 + [228])
	if ( ($2 == 0) ){ goto $label$33 }
	CALL $346(($3 + [184]), $4, *($2))
	CALL $347(($3 + [136]), ($3 + [184]), $4)
	$2 = *($3 + [208])
	if ( ($2 == 0) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$34
	$4 = ($0 + [280])
	*($3 + [192]) = $4
	$10 = (int_64)0
	if ( ((int_64)((int_64)$5 | (int_64)$6) != (int_64)0) ){ goto $label$38 }
	$5 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	*(($2 = CALL _Znwj([24])) + [8]) = $9
	*($2) = $6
	*($2 + [16]) = $5
	CALL sha256($2, [24], ($3 + [224]))
	$10 = *($3 + [224])
	if ( ($2 == 0) ){ goto $label$37 }
	CALL _ZdlPv($2)
	
.LABEL $label$37
	*($3 + [224]) = $10
	CALL $348(($3 + [184]), ($3 + [192]), ($3 + [224]))
	$2 = *($3 + [188])
	if ( ($2 == 0) ){ goto $label$32 }
	CALL $349(($3 + [224]), $4, *($2))
	CALL $350(($3 + [136]), ($3 + [224]), $4)
	$2 = *($3 + [208])
	if ( $2 ){ goto $label$31 }
	goto $label$28 
	
.LABEL $label$33
	*($3 + [188]) = [0]
	*($3 + [184]) = $4
	CALL $347(($3 + [136]), ($3 + [184]), $4)
	$2 = *($3 + [208])
	if ( $2 ){ goto $label$31 }
	goto $label$28 
	
.LABEL $label$32
	*($3 + [228]) = [0]
	*($3 + [224]) = $4
	CALL $350(($3 + [136]), ($3 + [224]), $4)
	$2 = *($3 + [208])
	if ( ($2 == 0) ){ goto $label$28 }
	
.LABEL $label$31
	*(($3 + [212])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$28
	$2 = *(($0 + [360]))
	$5 = *($3 + [96])
	*($3 + [192]) = [2]
	*($3 + [224]) = $5
	$0 = *($1 + [4])
	*($3 + [136]) = [8617]
	*($3 + [140]) = CALL $743([8617])
	*($3) = *($3 + [136])
	$1 = ($2 + [40])
	$2 = CALL $10(($3 + [200]), $3)
	*($3 + [188]) = ($3 + [224])
	*($3 + [184]) = ($3 + [192])
	$5 = *($2)
	if ( $0 ){ goto $label$39 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$39
	CALL $332($1, $0, $5, ($3 + [184]))
	
.LABEL $label$1
	$global$0 = ($3 + [256])
}

void .FUNC $320 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $323 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	$6 = ($1 + [8])
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $587($6, *($3 + [8]), *(($3 + [12])))
	
.LABEL $label$3
	$8 = *($1 + [8])
	$7 = *(($1 + [12]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[48]))
	$3 = [44]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$6 }
	$3 = (((int_32)((uint_32)($9 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 + [-36])
	
.LABEL $label$5
	if ( ($3 <= [513]) ){ goto $label$8 }
	$4 = CALL $746($3)
	goto $label$7 
	
.LABEL $label$8
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$7
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	$7 = $4
	if ( ((int_32)$3 > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [22875])
	$7 = *($5 + [4])
	
.LABEL $label$9
	CALL memcpy($7, $1, [8])
	*($5 + [4]) = ($7 + [8])
	CALL $542($5, $6)
	CALL db_update_i64(*($1 + [28]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$10 }
	CALL $749($4)
	
.LABEL $label$10
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-5915276457178488320) ){ goto $label$11 }
	*(($0 + [16])) = (int_64)-5915276457178488319
	
.LABEL $label$11
	$global$0 = ($5 + [16])
}

void .FUNC $322 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = (int_64)0
	$7 = *($1 + [8])
	$9 = *($1)
	$8 = *($1 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($10 = CALL _Znwj([24])) + [8]) = $7
	*($10) = $9
	*($10 + [16]) = $8
	CALL sha256($10, [24], $5)
	$6 = *($5)
	if ( ($10 == 0) ){ goto $label$3 }
	CALL _ZdlPv($10)
	
.LABEL $label$3
	$10 = *($3)
	if ( ((int_64)*($10 + [8]) == (int_64)*(($1 + [72]))) ){ goto $label$5 }
	CALL eosio_assert([0], [28618])
	
.LABEL $label$5
	$7 = ((int_64)*($1 + [64]) + (int_64)*($10))
	*($1 + [64]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [28661])
	$7 = *(($1 + [64]))
	
.LABEL $label$6
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$7 }
	CALL eosio_assert([0], [28680])
	
.LABEL $label$7
	$7 = (int_64)0
	$8 = *(($1 + [8]))
	$11 = *($1)
	$9 = *(($1 + [16]))
	if ( ((int_64)((int_64)$9 | (int_64)$11) != (int_64)0) ){ goto $label$9 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	*(($10 = CALL _Znwj([24])) + [8]) = $8
	*($10) = $11
	*($10 + [16]) = $9
	CALL sha256($10, [24], $5)
	$7 = *($5)
	if ( ($10 == 0) ){ goto $label$8 }
	CALL _ZdlPv($10)
	
.LABEL $label$8
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$10 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$10
	$10 = [48]
	$12 = *($1 + [48])
	$3 = *(($1 + [52]))
	$13 = ($3 - $12)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$13 / (int_32)[48]))
	
.LOOP $label$11:
	$10 = ($10 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$11 }
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$12 }
	$10 = ((((int_32)((uint_32)($13 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $10) + [36])
	
.LABEL $label$12
	$3 = ($10 + [16])
	if ( ($3 <= [513]) ){ goto $label$14 }
	$10 = CALL $746($3)
	goto $label$13 
	
.LABEL $label$14
	$10 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$13
	*($5 + [4]) = $10
	*($5) = $10
	*($5 + [8]) = ($10 + $3)
	CALL $582($5, $1)
	CALL db_update_i64(*($1 + [84]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$15 }
	CALL $749($10)
	
.LABEL $label$15
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$global$0 = ($5 + [32])
}

void .FUNC $325 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800273824806109184, (int_64)8800273824806109184)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $480($1, $2)
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$1
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($2)
	$1 = (*(($2 + [12])) - *($2 + [8]))
	$3 = ((int_32)$1 / (int_32)[48])
	if ( ($1 == 0) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[89478486]) ){ goto $label$5 }
	$1 = CALL _Znwj($1)
	*(($0 + [8])) = $1
	*(($0 + [16])) = ($1 + ((int_32)$3 * (int_32)[48]))
	*(($3 = ($0 + [12]))) = $1
	$4 = *(($2 + [8]))
	$5 = (*(($2 + [12])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$6
	*($0 + [20]) = *($2 + [20])
	return (unreachable)
	
.LABEL $label$5
	CALL $727(($0 + [8]))
}

void .FUNC $324 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [24]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [12]) = $3
	*($4 + [8]) = $1
	*($4 + [16]) = ($4 + [24])
	*(($3 = CALL _Znwj([40])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($4 + [32]) = [22135]
	*($4 + [36]) = CALL $743([22135])
	*($4) = *($4 + [32])
	CALL $10(($4 + [40]), $4)
	*($3) = (int_64)4298345369187365760
	*($3 + [24]) = $1
	CALL $586(($4 + [8]), $3)
	*($4 + [40]) = $3
	*($4 + [8]) = (int_64)-5915276457178488320
	$5 = *($3 + [28])
	*($4 + [32]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-5915276457178488320
	*($7 + [16]) = $5
	*($4 + [40]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $585(($1 + [24]), ($4 + [40]), ($4 + [8]), ($4 + [32]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [40])
	*($4 + [40]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $327 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800195550100881408, (int_64)8800195550100881408)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $481($1, $2)
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$1
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($2)
	$1 = (*(($2 + [12])) - *($2 + [8]))
	$3 = ((int_32)$1 / (int_32)[48])
	if ( ($1 == 0) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[89478486]) ){ goto $label$5 }
	$1 = CALL _Znwj($1)
	*(($0 + [8])) = $1
	*(($0 + [16])) = ($1 + ((int_32)$3 * (int_32)[48]))
	*(($3 = ($0 + [12]))) = $1
	$4 = *(($2 + [8]))
	$5 = (*(($2 + [12])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $4, $5)
	*($3) = (*($3) + ((int_32)((uint_32)$5 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$6
	*($0 + [20]) = *($2 + [20])
	return (unreachable)
	
.LABEL $label$5
	CALL $727(($0 + [8]))
}

void .FUNC $326 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)8800273824806109184, (int_64)8800273824806109184)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $480($0, $4)
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $483($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $484($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $101 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [464])
	$global$0 = $5
	*($5 + [455]) = $4
	*($5 + [456]) = $2
	CALL $149($0, $1, [0])
	$0 = CALL $109(($5 + [8]))
	CALL $182($0, $1, ($5 + [456]), $3, ($5 + [455]))
	CALL $130($0)
	$global$0 = ($5 + [464])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [592])
	$global$0 = $4
	*($4 + [559]) = $3
	*($4 + [560]) = $2
	CALL $149($0, $1, [1])
	$0 = CALL $109(($4 + [24]))
	CALL $177(($4 + [464]), $0, $1, ($4 + [560]), ($4 + [559]))
	CALL $130($0)
	if ( (int_64)(*($4 + [464]) == 0) ){ goto $label$1 }
	$0 = *([0] + [8632])
	if ( $0 ){ goto $label$2 }
	$3 = CALL _Znwj([280])
	$0 = CALL $111($3)
	*([0] + [8632]) = $3
	
.LABEL $label$2
	*($4 + [584]) = [8414]
	*($4 + [588]) = CALL $743([8414])
	*($4 + [8]) = *($4 + [584])
	$5 = *(CALL $10(($4 + [24]), ($4 + [8])))
	$2 = *($1 + [8])
	$6 = *($1 + [16])
	*($4 + [16]) = ($4 + [464])
	*($4 + [584]) = ( $6 ? $2 : ((int_64)$2 == (int_64)$5) )
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$3 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$3
	*($4 + [24]) = $0
	*($4 + [28]) = ($4 + [16])
	*($4 + [32]) = ($4 + [584])
	*(($1 = CALL _Znwj([112])) + [56]) = [0]
	*($1 + [48 align=4]) = (int_64)0
	*($1 + [72]) = (int_64)0
	*($1 + [80]) = $0
	CALL $178(($4 + [24]), $1)
	*($4 + [576]) = $1
	$2 = *($1)
	*($4 + [24]) = $2
	$7 = *($1 + [84])
	*($4 + [572]) = $7
	$8 = ($0 + [28])
	$3 = *($8)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [32]))) ){ goto $label$5 }
	*($3 + [8]) = $2
	*($3 + [16]) = $7
	*($4 + [576]) = [0]
	*($3) = $1
	*($8) = ($3 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $179(($0 + [24]), ($4 + [576]), ($4 + [24]), ($4 + [572]))
	
.LABEL $label$4
	$1 = *($4 + [576])
	*($4 + [576]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$0 = *($1 + [48])
	if ( ($0 == 0) ){ goto $label$6 }
	*(($1 + [52])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$6
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$1 = *($4 + [512])
	if ( ($1 == 0) ){ goto $label$7 }
	*(($4 + [516])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$7
	$global$0 = ($4 + [592])
}

void .FUNC $103 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$1 = ($global$0 - [848])
	$global$0 = $1
	CALL $110($1)
	$2 = CALL $109(($1 + [336]))
	*($1 + [320]) = [8617]
	*($1 + [324]) = CALL $743([8617])
	*($1 + [88]) = *($1 + [320])
	$3 = CALL $10(($1 + [328]), ($1 + [88]))
	$4 = CALL $122(($1 + [224]))
	CALL $231(($1 + [776]), ($2 + [400]), *($3), $4)
	$3 = *($4 + [28])
	if ( ($3 == 0) ){ goto $label$1 }
	*(($4 + [32])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$3 = *($4 + [16])
	if ( ($3 == 0) ){ goto $label$2 }
	*(($4 + [20])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$2
	CALL $130($2)
	CALL $14(($1 + [336]))
	$4 = ($1 + [336])
	if ( ((int_64)*($1 + [344]) == (int_64)1397703940) ){ goto $label$4 }
	if ( ((int_64)*(($1 + [368])) != (int_64)1397703940) ){ goto $label$5 }
	$4 = ($1 + [360])
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_64)*(($1 + [392])) != (int_64)1397703940) ){ goto $label$6 }
	$4 = ($1 + [384])
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)*(($1 + [416])) != (int_64)1397703940) ){ goto $label$7 }
	$4 = ($1 + [408])
	goto $label$4 
	
.LABEL $label$7
	if ( ((int_64)*(($1 + [440])) != (int_64)1397703940) ){ goto $label$8 }
	$4 = ($1 + [432])
	goto $label$4 
	
.LABEL $label$8
	if ( ((int_64)*(($1 + [464])) != (int_64)1397703940) ){ goto $label$9 }
	$4 = ($1 + [456])
	goto $label$4 
	
.LABEL $label$9
	if ( ((int_64)*(($1 + [488])) != (int_64)1397703940) ){ goto $label$10 }
	$4 = ($1 + [480])
	goto $label$4 
	
.LABEL $label$10
	if ( ((int_64)*(($1 + [512])) != (int_64)1397703940) ){ goto $label$11 }
	$4 = ($1 + [504])
	goto $label$4 
	
.LABEL $label$11
	$5 = (int_64)1397703940
	if ( ((int_64)*(($1 + [536])) != (int_64)1397703940) ){ goto $label$3 }
	$4 = ($1 + [528])
	
.LABEL $label$4
	$5 = *($4 + [8])
	
.LABEL $label$3
	*($1 + [224]) = (int_64)0
	*($1 + [232]) = $5
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$16 }
	$5 = $6
	$3 = $4
	goto $label$15 
	
.LABEL $label$16
	$5 = $6
	
.LOOP $label$17:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$3 = ($4 + [1])
	$4 = $3
	if ( $2 ){ goto $label$17 }
	
.LABEL $label$15
	$4 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [22633])
	
.LABEL $label$12
	CALL $14(($1 + [336]))
	$4 = ($1 + [336])
	if ( ((int_64)*($1 + [344]) == (int_64)87167674696196) ){ goto $label$19 }
	if ( ((int_64)*(($1 + [368])) != (int_64)87167674696196) ){ goto $label$20 }
	$4 = ($1 + [360])
	goto $label$19 
	
.LABEL $label$20
	if ( ((int_64)*(($1 + [392])) != (int_64)87167674696196) ){ goto $label$21 }
	$4 = ($1 + [384])
	goto $label$19 
	
.LABEL $label$21
	if ( ((int_64)*(($1 + [416])) != (int_64)87167674696196) ){ goto $label$22 }
	$4 = ($1 + [408])
	goto $label$19 
	
.LABEL $label$22
	if ( ((int_64)*(($1 + [440])) != (int_64)87167674696196) ){ goto $label$23 }
	$4 = ($1 + [432])
	goto $label$19 
	
.LABEL $label$23
	if ( ((int_64)*(($1 + [464])) != (int_64)87167674696196) ){ goto $label$24 }
	$4 = ($1 + [456])
	goto $label$19 
	
.LABEL $label$24
	if ( ((int_64)*(($1 + [488])) != (int_64)87167674696196) ){ goto $label$25 }
	$4 = ($1 + [480])
	goto $label$19 
	
.LABEL $label$25
	if ( ((int_64)*(($1 + [512])) != (int_64)87167674696196) ){ goto $label$26 }
	$4 = ($1 + [504])
	goto $label$19 
	
.LABEL $label$26
	$5 = (int_64)87167674696196
	if ( ((int_64)*(($1 + [536])) != (int_64)87167674696196) ){ goto $label$18 }
	$4 = ($1 + [528])
	
.LABEL $label$19
	$5 = *($4 + [8])
	
.LABEL $label$18
	*((($1 + [224]) + [24])) = $5
	*($1 + [240]) = (int_64)0
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$5 = $6
	$3 = $4
	goto $label$30 
	
.LABEL $label$31
	$5 = $6
	
.LOOP $label$32:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$3 = ($4 + [1])
	$4 = $3
	if ( $2 ){ goto $label$32 }
	
.LABEL $label$30
	$4 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [22633])
	
.LABEL $label$27
	*((($4 = CALL _Znwj([32])) + [8])) = *((($1 + [224]) + [8]))
	*($4) = *($1 + [224])
	*($4 + [16]) = *($1 + [240])
	*(($4 + [24])) = *((($1 + [224]) + [24]))
	$2 = ($4 + [32])
	$3 = *($1 + [792])
	if ( ($3 == 0) ){ goto $label$34 }
	*(($1 + [796])) = $3
	CALL _ZdlPv($3)
	*(($3 = (($1 + [776]) + [24]))) = [0]
	*($1 + [792]) = (int_64)0
	goto $label$33 
	
.LABEL $label$34
	$3 = (($1 + [776]) + [24])
	
.LABEL $label$33
	*($3) = $2
	*(($1 + [796])) = $2
	*(($1 + [792])) = $4
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$35 }
	$2 = CALL _Znwj([280])
	$4 = CALL $111($2)
	*([0] + [8632]) = $2
	
.LABEL $label$35
	*($1 + [304]) = [22240]
	*($1 + [308]) = CALL $743([22240])
	*($1 + [80]) = *($1 + [304])
	$5 = CALL $153($4, *(CALL $10(($1 + [312]), ($1 + [80]))), (int_64)500000)
	*($1 + [344]) = (int_64)1397703940
	*($1 + [336]) = $5
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$36 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$36
	$5 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$39:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$38 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$41 }
	$5 = $6
	$3 = $4
	goto $label$40 
	
.LABEL $label$41
	$5 = $6
	
.LOOP $label$42:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$38 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$3 = ($4 + [1])
	$4 = $3
	if ( $2 ){ goto $label$42 }
	
.LABEL $label$40
	$4 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$38
	CALL eosio_assert([0], [22633])
	
.LABEL $label$37
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$43 }
	$2 = CALL _Znwj([280])
	$4 = CALL $111($2)
	*([0] + [8632]) = $2
	
.LABEL $label$43
	*($1 + [288]) = [22252]
	*($1 + [292]) = CALL $743([22252])
	*($1 + [72]) = *($1 + [288])
	$5 = CALL $153($4, *(CALL $10(($1 + [296]), ($1 + [72]))), (int_64)150000000)
	*((($1 + [336]) + [24])) = (int_64)87167674696196
	*($1 + [352]) = $5
	if ( (uint_64)(((int_64)$5 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$44 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$44
	$5 = (int_64)340498729282
	$4 = [0]
	
.LOOP $label$47:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$46 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$49 }
	$5 = $6
	$3 = $4
	goto $label$48 
	
.LABEL $label$49
	$5 = $6
	
.LOOP $label$50:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$46 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$3 = ($4 + [1])
	$4 = $3
	if ( $2 ){ goto $label$50 }
	
.LABEL $label$48
	$4 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$46
	CALL eosio_assert([0], [22633])
	
.LABEL $label$45
	*((($4 = CALL _Znwj([32])) + [8])) = *((($1 + [336]) + [8]))
	*($4) = *($1 + [336])
	*($4 + [16]) = *($1 + [352])
	*(($4 + [24])) = *((($1 + [336]) + [24]))
	$2 = ($4 + [32])
	$3 = *($1 + [804])
	if ( ($3 == 0) ){ goto $label$52 }
	*((($1 + [776]) + [32])) = $3
	CALL _ZdlPv($3)
	*(($3 = ($1 + [812]))) = [0]
	*($1 + [804 align=4]) = (int_64)0
	goto $label$51 
	
.LABEL $label$52
	$3 = ($1 + [812])
	
.LABEL $label$51
	*($3) = $2
	*((($1 + [776]) + [32])) = $2
	*((($1 + [776]) + [28])) = $4
	$5 = CALL current_time()
	*((($1 + [224]) + [28])) = (int_64)0
	*(($1 + [268])) = (int_64)0
	*(($1 + [276])) = (int_64)0
	*($1 + [236]) = [0]
	*($1 + [240]) = [0]
	*($1 + [244 align=4]) = (int_64)0
	*($1 + [260 align=4]) = (int_64)0
	*($1 + [224]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($1 + [208]) = [8617]
	*($1 + [212]) = CALL $743([8617])
	*($1 + [64]) = *($1 + [208])
	$4 = CALL $10(($1 + [216]), ($1 + [64]))
	*($1 + [192]) = [8344]
	*($1 + [196]) = CALL $743([8344])
	*($1 + [56]) = *($1 + [192])
	$2 = CALL $10(($1 + [200]), ($1 + [56]))
	*($1 + [176]) = [8617]
	$5 = *($2)
	$6 = *($4)
	*($1 + [180]) = CALL $743([8617])
	*($1 + [48]) = *($1 + [176])
	$4 = CALL $10(($1 + [184]), ($1 + [48]))
	*($1 + [160]) = [22264]
	*($1 + [164]) = CALL $743([22264])
	*($1 + [40]) = *($1 + [160])
	$2 = CALL $10(($1 + [168]), ($1 + [40]))
	*($1 + [336]) = *($4)
	*($1 + [344]) = *($2)
	*(($4 = CALL _Znwj([16]))) = $6
	*($4 + [8]) = $5
	*((($1 + [336]) + [36])) = [0]
	$2 = ($4 + [16])
	*(($1 + [360])) = $2
	*(($1 + [356])) = $2
	*($1 + [352]) = $4
	*($1 + [364 align=4]) = (int_64)0
	CALL $189((($1 + [224]) + [36]), ($1 + [336]))
	$4 = *($1 + [364])
	if ( ($4 == 0) ){ goto $label$53 }
	*((($1 + [336]) + [32])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$53
	$4 = *($1 + [352])
	if ( ($4 == 0) ){ goto $label$54 }
	*(($1 + [356])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$54
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$55 }
	$2 = CALL _Znwj([280])
	$4 = CALL $111($2)
	*([0] + [8632]) = $2
	
.LABEL $label$55
	*($1 + [144]) = [22264]
	*($1 + [148]) = CALL $743([22264])
	*($1 + [32]) = *($1 + [144])
	$5 = CALL $153($4, *(CALL $10(($1 + [152]), ($1 + [32]))), (int_64)86400)
	*(($1 + [244])) = $5
	*($1 + [136]) = [8617]
	*($1 + [140]) = CALL $743([8617])
	*($1 + [24]) = *($1 + [136])
	CALL $10(($1 + [336]), ($1 + [24]))
	*($1 + [128]) = [22264]
	*($1 + [132]) = CALL $743([22264])
	*($1 + [16]) = *($1 + [128])
	CALL $10(($1 + [832]), ($1 + [16]))
	*($1 + [344]) = (int_64)0
	*($1 + [336]) = (int_64)1223069004611298464
	*($1 + [112]) = [8617]
	*($1 + [116]) = CALL $743([8617])
	*($1 + [8]) = *($1 + [112])
	$6 = *(CALL $10(($1 + [120]), ($1 + [8])))
	CALL $190(($1 + [832]), ($1 + [224]))
	$4 = *($1 + [832])
	CALL send_deferred(($1 + [336]), $6, $4, (*($1 + [836]) - $4), [0])
	$4 = *($1 + [832])
	if ( ($4 == 0) ){ goto $label$56 }
	*($1 + [836]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$56
	*($1 + [784]) = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$5)
	*($1 + [776]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$4 = CALL $109(($1 + [336]))
	*($1 + [96]) = [8617]
	*($1 + [100]) = CALL $743([8617])
	*($1) = *($1 + [96])
	CALL $123(($4 + [400]), ($1 + [776]), *(CALL $10(($1 + [104]), $1)))
	CALL $130($4)
	CALL $164(($1 + [224]))
	$4 = *($1 + [804])
	if ( ($4 == 0) ){ goto $label$57 }
	*(($1 + [808])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$57
	$4 = *($1 + [792])
	if ( ($4 == 0) ){ goto $label$58 }
	*(($1 + [796])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$58
	$global$0 = ($1 + [848])
}

void .FUNC $450 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [288])
	$global$0 = $3
	$4 = CALL current_time()
	*((($3 + [208]) + [28])) = (int_64)0
	*(($3 + [252])) = (int_64)0
	*(($3 + [260])) = (int_64)0
	*($3 + [220]) = [0]
	*($3 + [224]) = [0]
	*($3 + [228 align=4]) = (int_64)0
	*($3 + [244 align=4]) = (int_64)0
	*($3 + [208]) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	*($3 + [144]) = [8617]
	*($3 + [148]) = CALL $743([8617])
	*($3 + [56]) = *($3 + [144])
	$5 = CALL $10(($3 + [152]), ($3 + [56]))
	*($3 + [128]) = [8344]
	*($3 + [132]) = CALL $743([8344])
	*($3 + [48]) = *($3 + [128])
	$6 = CALL $10(($3 + [136]), ($3 + [48]))
	*($3 + [112]) = [8617]
	$4 = *($6)
	$7 = *($5)
	*($3 + [116]) = CALL $743([8617])
	*($3 + [40]) = *($3 + [112])
	$5 = CALL $10(($3 + [120]), ($3 + [40]))
	*($3 + [96]) = [20952]
	*($3 + [100]) = CALL $743([20952])
	*($3 + [32]) = *($3 + [96])
	$6 = CALL $10(($3 + [104]), ($3 + [32]))
	*($3 + [273]) = $2
	*($3 + [272]) = $1
	*($3 + [160]) = *($5)
	*($3 + [168]) = *($6)
	*(($2 = CALL _Znwj([16]))) = $7
	*($2 + [8]) = $4
	$5 = ($2 + [16])
	*(($3 + [184])) = $5
	*(($3 + [180])) = $5
	*($3 + [176]) = $2
	CALL $477((($3 + [160]) + [28]), ($3 + [272]))
	CALL $189(($3 + [244]), ($3 + [160]))
	$2 = *($3 + [188])
	if ( ($2 == 0) ){ goto $label$1 }
	*(($3 + [192])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$2 = *($3 + [176])
	if ( ($2 == 0) ){ goto $label$2 }
	*(($3 + [180])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$2
	*(($3 + [228])) = [0]
	*($3 + [88]) = [8617]
	*($3 + [92]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [88])
	CALL $10(($3 + [160]), ($3 + [24]))
	*($3 + [80]) = [20952]
	*($3 + [84]) = CALL $743([20952])
	*($3 + [16]) = *($3 + [80])
	CALL $10(($3 + [272]), ($3 + [16]))
	*($3 + [168]) = (int_64)0
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [255])) + (int_64)9222023964780119200)
	*($3 + [160]) = $4
	CALL cancel_deferred(($3 + [160]))
	*($3 + [168]) = (int_64)0
	*($3 + [160]) = $4
	*($3 + [64]) = [8617]
	*($3 + [68]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [64])
	$4 = *(CALL $10(($3 + [72]), ($3 + [8])))
	CALL $190(($3 + [272]), ($3 + [208]))
	$2 = *($3 + [272])
	CALL send_deferred(($3 + [160]), $4, $2, (*($3 + [276]) - $2), [1])
	$2 = *($3 + [272])
	if ( ($2 == 0) ){ goto $label$3 }
	*($3 + [276]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$3
	CALL $164(($3 + [208]))
	$global$0 = ($3 + [288])
}

void .FUNC $457 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $456 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_64 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$8 = ($global$0 - [240])
	$global$0 = $8
	*($8 + [200]) = $3
	$9 = *([0] + [8632])
	if ( $9 ){ goto $label$1 }
	$10 = CALL _Znwj([280])
	$9 = CALL $111($10)
	*([0] + [8632]) = $10
	
.LABEL $label$1
	CALL $141(($8 + [136]), $9, ($3 & [255]))
	$3 = *($8 + [176])
	if ( ($3 == 0) ){ goto $label$2 }
	*(($8 + [180])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$2
	if ( ((*($8 + [140]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*(($8 + [148])))
	
.LABEL $label$3
	CALL $352(($8 + [120]), $0, $5, $6, ((uint_32)(*($8 + [200]) + [-11]) > (uint_32)[1]))
	if ( ((int_32)*(($2 + [52])) == (int_32)*($2 + [48])) ){ goto $label$4 }
	CALL eosio_assert([0], [20532])
	
.LABEL $label$4
	$11 = *($2 + [72])
	if ( (int_64)($11 == 0) ){ goto $label$5 }
	if ( ((uint_64)$11 >= (uint_64)CALL current_time()) ){ goto $label$5 }
	CALL $457(($8 + [24]), [20568], ($2 + [72]))
	if ( (*($8 + [24]) & [1]) ){ goto $label$7 }
	$3 = (($8 + [24]) | [1])
	goto $label$6 
	
.LABEL $label$7
	$3 = *($8 + [32])
	CALL _ZdlPv($3)
	
.LABEL $label$6
	CALL eosio_assert([0], $3)
	
.LABEL $label$5
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$8 }
	$9 = CALL _Znwj([280])
	$3 = CALL $111($9)
	*([0] + [8632]) = $9
	
.LABEL $label$8
	*($8 + [88]) = [8617]
	*($8 + [92]) = CALL $743([8617])
	*($8 + [16]) = *($8 + [88])
	if ( (CALL has_auth(*(CALL $10(($8 + [96]), ($8 + [16])))) == 0) ){ goto $label$10 }
	*($8 + [80]) = [20617]
	*($8 + [84]) = CALL $743([20617])
	*($8 + [8]) = *($8 + [80])
	CALL $10(($8 + [24]), ($8 + [8]))
	CALL $151(($8 + [104]), $3, $1, (int_64)-6030911325394173952, (int_64)0)
	goto $label$9 
	
.LABEL $label$10
	CALL $151(($8 + [104]), $3, $1, $7, (int_64)0)
	
.LABEL $label$9
	if ( ((int_64)*($8 + [112]) == (int_64)*($8 + [128])) ){ goto $label$11 }
	CALL eosio_assert([0], [20626])
	if ( ((int_64)*((($8 + [104]) + [8])) == (int_64)*((($8 + [120]) + [8]))) ){ goto $label$11 }
	CALL eosio_assert([0], [23115])
	
.LABEL $label$11
	if ( ((int_64)*($8 + [104]) >= (int_64)*($8 + [120])) ){ goto $label$12 }
	CALL $458(($8 + [24]), [20669], ($8 + [120]), [20685])
	if ( (*($8 + [24]) & [1]) ){ goto $label$14 }
	$3 = (($8 + [24]) | [1])
	goto $label$13 
	
.LABEL $label$14
	$3 = *($8 + [32])
	CALL _ZdlPv($3)
	
.LABEL $label$13
	CALL eosio_assert([0], $3)
	
.LABEL $label$12
	*($8 + [72]) = $0
	*($8 + [56]) = [8617]
	*($8 + [60]) = CALL $743([8617])
	*($8) = *($8 + [56])
	$3 = CALL $10(($8 + [64]), $8)
	*($8 + [32]) = $1
	*($8 + [36]) = $2
	*($8 + [40]) = $4
	*($8 + [44]) = $5
	*($8 + [48]) = $6
	*($8 + [28]) = ($8 + [120])
	*($8 + [24]) = ($8 + [200])
	*($8 + [52]) = ($8 + [72])
	*($8 + [232]) = *($3)
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$15 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$15
	*($8 + [208]) = $0
	*($8 + [212]) = ($8 + [24])
	*($8 + [216]) = ($8 + [232])
	*(($2 = CALL _Znwj([112])) + [24]) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [48]) = (int_64)0
	*($2 + [56]) = (int_64)0
	*($2 + [68 align=4]) = (int_64)0
	*($2 + [76 align=4]) = (int_64)0
	*($2 + [84 align=4]) = (int_64)0
	*($2 + [92]) = $0
	CALL $459(($8 + [208]), $2)
	*($8 + [224]) = $2
	$11 = *($2)
	*($8 + [208]) = $11
	$6 = *($2 + [96])
	*($8 + [204]) = $6
	$3 = ($0 + [28])
	$5 = *($3)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$17 }
	*($5 + [8]) = $11
	*($5 + [16]) = $6
	*($8 + [224]) = [0]
	*($5) = $2
	*($3) = ($5 + [24])
	goto $label$16 
	
.LABEL $label$17
	CALL $460(($0 + [24]), ($8 + [224]), ($8 + [208]), ($8 + [204]))
	
.LABEL $label$16
	$2 = *($8 + [224])
	*($8 + [224]) = [0]
	if ( ($2 == 0) ){ goto $label$18 }
	$0 = *($2 + [80])
	if ( ($0 == 0) ){ goto $label$19 }
	*(($2 + [84])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$19
	$0 = *($2 + [68])
	if ( ($0 == 0) ){ goto $label$20 }
	*(($2 + [72])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$20
	CALL _ZdlPv($2)
	
.LABEL $label$18
	if ( *([0] + [8632]) ){ goto $label$21 }
	$2 = CALL _Znwj([280])
	CALL $111($2)
	*([0] + [8632]) = $2
	
.LABEL $label$21
	CALL $163($8, $1, ($8 + [104]), *($8 + [200]))
	$global$0 = ($8 + [240])
}

void .FUNC $107 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$5 = ($global$0 - [384])
	$global$0 = $5
	*($5 + [352]) = [8617]
	*($5 + [356]) = CALL $743([8617])
	*($5 + [72]) = *($5 + [352])
	CALL require_auth(*(CALL $10(($5 + [360]), ($5 + [72]))))
	if ( (int_64)(*($2) == 0) ){ goto $label$1 }
	$6 = ($0 + [112])
	CALL $2($6)
	*($5 + [336]) = [8617]
	*($5 + [340]) = CALL $743([8617])
	*($5 + [64]) = *($5 + [336])
	$7 = CALL $10(($5 + [344]), ($5 + [64]))
	*($5 + [276]) = $3
	*($5 + [272]) = $2
	*($5 + [280]) = $1
	*($5 + [284]) = $0
	*($5 + [232]) = *($7)
	$1 = ($0 + [72])
	if ( ((int_64)*($0 + [72]) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$2
	*($5 + [112]) = $1
	*($5 + [116]) = ($5 + [272])
	*($5 + [120]) = ($5 + [232])
	*(($2 = CALL _Znwj([112])) + [16]) = (int_64)0
	*($2 + [8]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48 align=4]) = (int_64)0
	*($2 + [56]) = [0]
	*($2 + [100]) = $1
	CALL $186(($5 + [112]), $2)
	*($5 + [376]) = $2
	$8 = *($2)
	*($5 + [112]) = $8
	$3 = *($2 + [104])
	*($5 + [372]) = $3
	$7 = ($0 + [100])
	$1 = *($7)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [104]))) ){ goto $label$4 }
	*($1 + [8]) = $8
	*($1 + [16]) = $3
	*($5 + [376]) = [0]
	*($1) = $2
	*($7) = ($1 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $187(($0 + [96]), ($5 + [376]), ($5 + [112]), ($5 + [372]))
	
.LABEL $label$3
	$0 = *($5 + [376])
	*($5 + [376]) = [0]
	if ( ($0 == 0) ){ goto $label$5 }
	if ( ((*($0 + [48]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($0 + [56])))
	
.LABEL $label$6
	CALL _ZdlPv($0)
	
.LABEL $label$5
	$8 = CALL current_time()
	*((($5 + [272]) + [28])) = (int_64)0
	*(($5 + [316])) = (int_64)0
	*(($5 + [324])) = (int_64)0
	*($5 + [284]) = [0]
	*($5 + [288]) = [0]
	*($5 + [292 align=4]) = (int_64)0
	*($5 + [308 align=4]) = (int_64)0
	*($5 + [272]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($5 + [216]) = [8617]
	*($5 + [220]) = CALL $743([8617])
	*($5 + [56]) = *($5 + [216])
	$0 = CALL $10(($5 + [224]), ($5 + [56]))
	*($5 + [200]) = [8344]
	*($5 + [204]) = CALL $743([8344])
	*($5 + [48]) = *($5 + [200])
	$1 = CALL $10(($5 + [208]), ($5 + [48]))
	*($5 + [184]) = [8617]
	$8 = *($1)
	$9 = *($0)
	*($5 + [188]) = CALL $743([8617])
	*($5 + [40]) = *($5 + [184])
	$1 = CALL $10(($5 + [192]), ($5 + [40]))
	*($5 + [168]) = [21894]
	*($5 + [172]) = CALL $743([21894])
	*($5 + [32]) = *($5 + [168])
	$3 = CALL $10(($5 + [176]), ($5 + [32]))
	$0 = *($6)
	*((($5 + [112]) + [24])) = *(($0 + [24]))
	*((($5 + [112]) + [16])) = *(($0 + [16]))
	*($5 + [112]) = *($0)
	*($5 + [120]) = *(($0 + [8]))
	*($5 + [144]) = *($2)
	*($5 + [232]) = *($1)
	*($5 + [240]) = *($3)
	*(($0 = CALL _Znwj([16]))) = $9
	*($0 + [8]) = $8
	$1 = ($0 + [16])
	*((($5 + [232]) + [24])) = $1
	*(($5 + [252])) = $1
	*($5 + [248]) = $0
	CALL $188((($5 + [232]) + [28]), ($5 + [112]))
	CALL $189(($5 + [308]), ($5 + [232]))
	$0 = *($5 + [260])
	if ( ($0 == 0) ){ goto $label$7 }
	*(($5 + [264])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$7
	$0 = *($5 + [248])
	if ( ($0 == 0) ){ goto $label$8 }
	*(($5 + [252])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$8
	*(($5 + [292])) = [0]
	*($5 + [104]) = [8617]
	*($5 + [108]) = CALL $743([8617])
	*($5 + [24]) = *($5 + [104])
	CALL $10(($5 + [112]), ($5 + [24]))
	*($5 + [96]) = [21894]
	*($5 + [100]) = CALL $743([21894])
	*($5 + [16]) = *($5 + [96])
	CALL $10(($5 + [232]), ($5 + [16]))
	$8 = *($2)
	*($5 + [120]) = (int_64)0
	$8 = ((int_64)$8 + (int_64)-122328436508220256)
	*($5 + [112]) = $8
	CALL cancel_deferred(($5 + [112]))
	*($5 + [120]) = (int_64)0
	*($5 + [112]) = $8
	*($5 + [80]) = [8617]
	*($5 + [84]) = CALL $743([8617])
	*($5 + [8]) = *($5 + [80])
	$8 = *(CALL $10(($5 + [88]), ($5 + [8])))
	CALL $190(($5 + [232]), ($5 + [272]))
	$2 = *($5 + [232])
	CALL send_deferred(($5 + [112]), $8, $2, (*($5 + [236]) - $2), [1])
	$2 = *($5 + [232])
	if ( ($2 == 0) ){ goto $label$9 }
	*($5 + [236]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$9
	CALL $164(($5 + [272]))
	
.LABEL $label$1
	$global$0 = ($5 + [384])
}

void .FUNC $454 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $109 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [448])
	$global$0 = $1
	*($1 + [432]) = [8617]
	*($1 + [436]) = CALL $743([8617])
	*($1 + [168]) = *($1 + [432])
	$2 = CALL $10(($1 + [440]), ($1 + [168]))
	*($1 + [416]) = [8617]
	*($1 + [420]) = CALL $743([8617])
	*($1 + [160]) = *($1 + [416])
	CALL $10(($1 + [424]), ($1 + [160]))
	*($0 + [8]) = (int_64)4298345121774150816
	*($0 + [16]) = (int_64)-1
	*($0 + [24 align=4]) = (int_64)0
	*(($0 + [32])) = [0]
	*($0 + [36 align=1]) = [0]
	*($0) = *($2)
	*($1 + [400]) = [8617]
	*($1 + [404]) = CALL $743([8617])
	*($1 + [152]) = *($1 + [400])
	$2 = CALL $10(($1 + [408]), ($1 + [152]))
	*($1 + [392]) = [8617]
	*($1 + [396]) = CALL $743([8617])
	*($1 + [144]) = *($1 + [392])
	CALL $10(($1 + [424]), ($1 + [144]))
	*(($0 + [48])) = (int_64)4298345121774150816
	*(($0 + [56])) = (int_64)-1
	*(($0 + [64])) = (int_64)0
	*(($0 + [72])) = [0]
	*($0 + [40]) = *($2)
	*($1 + [376]) = [8617]
	*($1 + [380]) = CALL $743([8617])
	*($1 + [136]) = *($1 + [376])
	$2 = CALL $10(($1 + [384]), ($1 + [136]))
	*($1 + [368]) = [8617]
	*($1 + [372]) = CALL $743([8617])
	*($1 + [128]) = *($1 + [368])
	CALL $10(($1 + [424]), ($1 + [128]))
	*(($0 + [88])) = (int_64)4298345121774150816
	*(($0 + [96])) = (int_64)-1
	*(($0 + [104])) = (int_64)0
	*(($0 + [112])) = [0]
	*(($0 + [116])) = [0]
	*($0 + [80]) = *($2)
	*($1 + [352]) = [8617]
	*($1 + [356]) = CALL $743([8617])
	*($1 + [120]) = *($1 + [352])
	$2 = CALL $10(($1 + [360]), ($1 + [120]))
	*($1 + [344]) = [8617]
	*($1 + [348]) = CALL $743([8617])
	*($1 + [112]) = *($1 + [344])
	CALL $10(($1 + [424]), ($1 + [112]))
	*(($0 + [128])) = (int_64)4298345121774150816
	*(($0 + [136])) = (int_64)-1
	*(($0 + [144])) = (int_64)0
	*(($0 + [152])) = [0]
	*($0 + [120]) = *($2)
	*($1 + [328]) = [8617]
	*($1 + [332]) = CALL $743([8617])
	*($1 + [104]) = *($1 + [328])
	$2 = CALL $10(($1 + [336]), ($1 + [104]))
	*($1 + [320]) = [8617]
	*($1 + [324]) = CALL $743([8617])
	*($1 + [96]) = *($1 + [320])
	CALL $10(($1 + [424]), ($1 + [96]))
	*(($0 + [168])) = (int_64)4298345121774150816
	*(($0 + [176])) = (int_64)-1
	*(($0 + [184])) = (int_64)0
	*(($0 + [192])) = [0]
	*(($0 + [196])) = [0]
	*($0 + [160]) = *($2)
	*($1 + [304]) = [8617]
	*($1 + [308]) = CALL $743([8617])
	*($1 + [88]) = *($1 + [304])
	$2 = CALL $10(($1 + [312]), ($1 + [88]))
	*($1 + [296]) = [8617]
	*($1 + [300]) = CALL $743([8617])
	*($1 + [80]) = *($1 + [296])
	CALL $10(($1 + [424]), ($1 + [80]))
	*(($0 + [208])) = (int_64)4298345121774150816
	*(($0 + [216])) = (int_64)-1
	*(($0 + [224])) = (int_64)0
	*(($0 + [232])) = [0]
	*($0 + [200]) = *($2)
	*($1 + [280]) = [8617]
	*($1 + [284]) = CALL $743([8617])
	*($1 + [72]) = *($1 + [280])
	$2 = CALL $10(($1 + [288]), ($1 + [72]))
	*($1 + [272]) = [8617]
	*($1 + [276]) = CALL $743([8617])
	*($1 + [64]) = *($1 + [272])
	CALL $10(($1 + [424]), ($1 + [64]))
	*(($0 + [248])) = (int_64)4298345121774150816
	*(($0 + [256])) = (int_64)-1
	*(($0 + [264])) = (int_64)0
	*(($0 + [272])) = [0]
	*($0 + [240]) = *($2)
	*($1 + [256]) = [8617]
	*($1 + [260]) = CALL $743([8617])
	*($1 + [56]) = *($1 + [256])
	$2 = CALL $10(($1 + [264]), ($1 + [56]))
	*($1 + [248]) = [8617]
	*($1 + [252]) = CALL $743([8617])
	*($1 + [48]) = *($1 + [248])
	CALL $10(($1 + [424]), ($1 + [48]))
	*(($0 + [288])) = (int_64)4298345121774150816
	*(($0 + [296])) = (int_64)-1
	*(($0 + [304])) = (int_64)0
	*(($0 + [312])) = [0]
	*(($0 + [316])) = [0]
	*($0 + [280]) = *($2)
	*($1 + [232]) = [8617]
	*($1 + [236]) = CALL $743([8617])
	*($1 + [40]) = *($1 + [232])
	$2 = CALL $10(($1 + [240]), ($1 + [40]))
	*($1 + [224]) = [8617]
	*($1 + [228]) = CALL $743([8617])
	*($1 + [32]) = *($1 + [224])
	CALL $10(($1 + [424]), ($1 + [32]))
	*(($0 + [328])) = (int_64)4298345121774150816
	*(($0 + [336])) = (int_64)-1
	*(($0 + [344])) = (int_64)0
	*(($0 + [352])) = [0]
	*(($0 + [356])) = [0]
	*($0 + [320]) = *($2)
	*($1 + [208]) = [8617]
	*($1 + [212]) = CALL $743([8617])
	*($1 + [24]) = *($1 + [208])
	$2 = CALL $10(($1 + [216]), ($1 + [24]))
	*($1 + [200]) = [8617]
	*($1 + [204]) = CALL $743([8617])
	*($1 + [16]) = *($1 + [200])
	CALL $10(($1 + [424]), ($1 + [16]))
	*(($0 + [368])) = (int_64)4298345121774150816
	*(($0 + [376])) = (int_64)-1
	*(($0 + [384])) = (int_64)0
	*(($0 + [392])) = [0]
	*(($0 + [396])) = [0]
	*($0 + [360]) = *($2)
	*($1 + [184]) = [8617]
	*($1 + [188]) = CALL $743([8617])
	*($1 + [8]) = *($1 + [184])
	$2 = CALL $10(($1 + [192]), ($1 + [8]))
	*($1 + [176]) = [8617]
	*($1 + [180]) = CALL $743([8617])
	*($1) = *($1 + [176])
	CALL $10(($1 + [424]), $1)
	*(($0 + [408])) = (int_64)4298345121774150816
	*(($0 + [416])) = (int_64)-1
	*(($0 + [424])) = (int_64)0
	*(($0 + [432])) = [0]
	*($0 + [400]) = *($2)
	$global$0 = ($1 + [448])
	return $0
}

int_32 .FUNC $108 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [336])
	$global$0 = $3
	*(($4 = $3) + [328]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $746($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [296])) = (int_64)0
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [252]) = $3
	*($4 + [248]) = $3
	*($4 + [256]) = ($3 + $2)
	CALL $168(($4 + [248]), ($4 + [264]))
	$5 = ($4 + [288])
	$6 = *($4 + [252])
	if ( ((uint_32)(*($4 + [256]) - $6) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$6 = *($4 + [252])
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	$6 = (*($4 + [252]) + [8])
	*($4 + [252]) = $6
	*($4 + [48]) = (int_64)0
	$5 = (($4 + [248]) + [8])
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	$6 = *($4 + [252])
	
.LABEL $label$6
	CALL memcpy(($4 + [48]), $6, [8])
	*(($4 + [296])) = *($4 + [48])
	*($4 + [252]) = (*($4 + [252]) + [8])
	CALL $184(($4 + [248]), ($4 + [304]))
	CALL $184(($4 + [248]), ($4 + [316]))
	$6 = *($5)
	*((($4 + [32]) + [8])) = $6
	*((($4 + [8]) + [8])) = $6
	$7 = *($4 + [248])
	*($4 + [8]) = $7
	*($4 + [32]) = $7
	$6 = CALL $20(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $6
	*($4 + [28]) = ($4 + [328])
	CALL $185(($4 + [24]), ($4 + [264]))
	if ( ($2 <= [513]) ){ goto $label$7 }
	CALL $749($3)
	
.LABEL $label$7
	CALL $24($6)
	if ( ((*($4 + [316]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($4 + [324])))
	
.LABEL $label$8
	if ( ((*($4 + [304]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($4 + [312])))
	
.LABEL $label$9
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC $459 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($0)
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$1 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$1
	$6 = ($6 + [160])
	CALL $142(($3 + [32]), $6)
	$8 = ((int_64)*($3 + [48]) + (int_64)1)
	*($3 + [48]) = $8
	*($3 + [24]) = [8617]
	*($3 + [28]) = CALL $743([8617])
	*($3) = *($3 + [24])
	CALL $113($6, ($3 + [32]), *(CALL $10(($3 + [8]), $3)))
	$6 = *($3 + [80])
	if ( ($6 == 0) ){ goto $label$2 }
	*(($3 + [84])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$2
	*($1) = $8
	*($1 + [64]) = *(*($4))
	$6 = *($4 + [4])
	*(($1 + [56])) = *(($6 + [8]))
	*($1 + [48]) = *($6)
	$6 = *($4 + [8])
	*($1 + [16]) = *($6)
	*(($7 = ($1 + [32]))) = *(($6 + [16]))
	*(($9 = ($1 + [24]))) = *(($6 + [8]))
	*($1 + [8]) = *(*($4 + [12]))
	*($1 + [40]) = *(*($4 + [16]))
	$6 = *($4 + [20])
	CALL $632(($1 + [68]), *(($1 + [72])), *($6), *($6 + [4]))
	$6 = *($4 + [24])
	CALL $633(($1 + [80]), *(($1 + [84])), *($6), *($6 + [4]))
	$6 = *($4 + [28])
	$8 = *($7)
	$10 = *($9)
	$11 = *($1 + [8])
	$12 = *($1 + [16])
	*(($4 = CALL _Znwj([32])) + [8]) = $12
	*($4) = $11
	*($4 + [16]) = $10
	*($4 + [24]) = $8
	CALL sha256($4, [32], ($3 + [32]))
	$8 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$3 }
	CALL _ZdlPv($4)
	
.LABEL $label$3
	*($3 + [8]) = $8
	CALL $634(($3 + [32]), $6, ($3 + [8]))
	if ( (*($3 + [36]) == 0) ){ goto $label$4 }
	CALL eosio_assert([0], [29927])
	
.LABEL $label$4
	$7 = *(($1 + [68]))
	$6 = *(($1 + [72]))
	$9 = ($6 - $7)
	$8 = (CASTING uint_64)(uint_32 $9)
	$4 = [65]
	
.LOOP $label$5:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	$4 = ( $4 ? ($9 + $4) : ((int_32)$7 == (int_32)$6) )
	$7 = *(($1 + [80]))
	$6 = *(($1 + [84]))
	$9 = ($6 - $7)
	$8 = (CASTING uint_64)(uint_32 int_32($9 >> [4]))
	
.LOOP $label$6:
	$4 = ($4 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$4 = (($9 & [-16]) + $4)
	
.LABEL $label$7
	if ( ($4 <= [513]) ){ goto $label$9 }
	$6 = CALL $746($4)
	goto $label$8 
	
.LABEL $label$9
	$6 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$8
	*($3 + [12]) = $6
	*($3 + [8]) = $6
	*($3 + [16]) = ($6 + $4)
	CALL $635(($3 + [8]), $1)
	$8 = *($1)
	*($1 + [96]) = CALL db_store_i64(*($5 + [8]), (int_64)-4812917093941759104, *(*($0 + [8])), $8, $6, $4)
	if ( ($4 <= [513]) ){ goto $label$10 }
	CALL $749($6)
	
.LABEL $label$10
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$11 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$4 = ($5 + [8])
	$8 = *($4)
	$6 = *(($0 + [8]))
	$10 = *($6)
	$11 = *($1)
	$0 = ($1 + [8])
	*($3 + [32]) = *($0)
	*($1 + [100]) = CALL db_idx64_store($8, (int_64)-4812917093941759104, $10, $11, ($3 + [32]))
	$8 = *($6)
	$10 = *($4)
	$11 = *($1)
	$12 = *(($1 + [32]))
	$13 = *(($1 + [24]))
	$14 = *($0)
	$15 = *(($1 + [16]))
	*(($4 = CALL _Znwj([32])) + [8]) = $15
	*($4) = $14
	*($4 + [16]) = $13
	*($4 + [24]) = $12
	CALL sha256($4, [32], ($3 + [32]))
	$12 = *($3 + [32])
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	*($3 + [32]) = $12
	*(($1 + [104])) = CALL db_idx64_store($10, (int_64)-4812917093941759103, $8, $11, ($3 + [32]))
	$global$0 = ($3 + [96])
}

void .FUNC $458 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $631($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

int_32 .FUNC $691 (int_32 $0)
{
	int_32 $1
	*(($1 = CALL _Znwj([8]))) = [30300]
	return $1
}

void .FUNC $251 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $518 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL _Znwj(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [4]))
	$3 = ($2 + ($3 << [4]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [4]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL _ZdlPv($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $519 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $695 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [448])
	$global$0 = $2
	$3 = CALL $109(($2 + [8]))
	CALL $453($3, $1)
	CALL $130($3)
	$global$0 = ($2 + [448])
}

void .FUNC $694 (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $697 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [40])) = *(($5 + [40]))
	*(($1 + [32])) = *(($5 + [32]))
	*(($1 + [24])) = *(($5 + [24]))
	*(($1 + [16])) = *(($5 + [16]))
	*(($1 + [8])) = *(($5 + [8]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $551(($1 + [48]), *($5 + [48]), *(($5 + [52])))
	
.LABEL $label$1
	$7 = *($1 + [48])
	$6 = *(($1 + [52]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	$5 = [41]
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$3 }
	$5 = (($8 & [-8]) + $5)
	
.LABEL $label$3
	if ( ($5 <= [513]) ){ goto $label$5 }
	$2 = CALL $746($5)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $5)
	CALL $552($3, $1)
	*($1 + [68]) = CALL db_store_i64(*($4 + [8]), (int_64)-7297072577464238080, *(*($0 + [8])), (int_64)-7297072577464238080, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $749($2)
	
.LABEL $label$6
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)-7297072577464238080) ){ goto $label$7 }
	*(($4 + [16])) = (int_64)-7297072577464238079
	
.LABEL $label$7
	$global$0 = ($3 + [16])
}

void .FUNC $250 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [8]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$6 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$7:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$4 = *($3)
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	$8 = $5
	
.LOOP $label$11:
	$9 = *($8)
	*($8) = [0]
	$7 = ($8 + [-24])
	$5 = *($7)
	*($7) = $9
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$9 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) != (int_32)$8) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = ($5 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [12]))
}

int_32 .FUNC $512 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $513 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $510 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $512(CALL $511($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $511 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $516 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	$1 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $512($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$3 }
	$4 = *($7)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $517 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $170(CALL $169($0, ($1 + [68])), ($1 + [80]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [40])
	$2 = *($0 + [4])
	$0 = CALL $168($0, ($1 + [16]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [64])
	$2 = *($0 + [4])
	$0 = CALL $306($0, ($1 + [48]))
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $2, [1])
	return *(($2 = ($0 + [4]))) = (*($2) + [1])
}

int_32 .FUNC $514 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [22875])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $515 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $510($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $215 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = *($1)
	$2 = *(($1 + [8]))
	*(($0 + [20])) = (int_64)0
	*(($0 + [8])) = $2
	*($0 + [16]) = [0]
	$3 = (*(($1 + [20])) - *($1 + [16]))
	if ( ($3 == 0) ){ goto $label$3 }
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	$3 = CALL _Znwj($3)
	*(($0 + [16])) = $3
	*(($0 + [24])) = ($3 + ($4 << [4]))
	*(($4 = ($0 + [20]))) = $3
	$5 = *(($1 + [16]))
	$6 = (*(($1 + [20])) - $5)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $5, $6)
	*($4) = (*($4) + $6)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$3 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$3 = CALL _Znwj($3)
	*(($0 + [28])) = $3
	*(($0 + [36])) = ($3 + ($4 << [4]))
	*(($4 = ($0 + [32]))) = $3
	$5 = *(($1 + [28]))
	$6 = (*(($1 + [32])) - $5)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($3, $5, $6)
	*($4) = (*($4) + $6)
	
.LABEL $label$4
	*($0 + [40]) = *($1 + [40])
	*(($0 + [48])) = *(($1 + [48]))
	return $0
	
.LABEL $label$2
	CALL $727(($0 + [16]))
	
.LABEL $label$1
	CALL $727(($0 + [28]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [40])
	$2 = *($0 + [4])
	$0 = CALL $170(CALL $170($0, ($1 + [16])), ($1 + [28]))
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [41])
	$5 = ($0 + [8])
	if ( ((int_32)*($5) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($4, $3, [1])
	$3 = (*($2) + [1])
	*($2) = $3
	$2 = ($1 + [44])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $3, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [48])
	if ( ((int_32)*(($0 + [8])) != (int_32)$3) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($1, $3, [1])
	*($2) = (*($2) + [1])
	return $0
}

void .FUNC $217 (int_64 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [224])
	$global$0 = $3
	*(($3 + [164])) = [0]
	*($3 + [156 align=4]) = (int_64)0
	*($3 + [136]) = $0
	*($3 + [128]) = [8561]
	*($3 + [132]) = CALL $743([8561])
	*($3 + [40]) = *($3 + [128])
	*($3 + [144]) = *(CALL $10(($3 + [80]), ($3 + [40])))
	*($3 + [168]) = $2
	*($3 + [152]) = $1
	if ( ($1 <= [101]) ){ goto $label$1 }
	CALL eosio_assert([0], [8574])
	
.LABEL $label$1
	*($3 + [120]) = ($3 + [136])
	*($3 + [216]) = [8617]
	*($3 + [220]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [216])
	$1 = CALL $10(($3 + [200]), ($3 + [32]))
	*($3 + [176]) = [8617]
	*($3 + [180]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [176])
	CALL $10(($3 + [184]), ($3 + [24]))
	*(($3 + [112])) = [0]
	*($3 + [88]) = (int_64)4298345121774150816
	*($3 + [96]) = (int_64)-1
	*($3 + [104]) = (int_64)0
	*($3 + [80]) = *($1)
	CALL $254(($3 + [184]), ($3 + [80]), $0)
	if ( (*($3 + [188]) == 0) ){ goto $label$4 }
	*($3 + [48]) = [8617]
	$1 = *($3 + [188])
	*($3 + [52]) = CALL $743([8617])
	*($3 + [16]) = *($3 + [48])
	$0 = *(CALL $10(($3 + [56]), ($3 + [16])))
	if ( $1 ){ goto $label$5 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$5
	CALL $257(($3 + [80]), $1, $0, ($3 + [120]))
	$4 = *($3 + [104])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	*($3 + [64]) = [8617]
	*($3 + [68]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [64])
	*($3 + [216]) = *(CALL $10(($3 + [72]), ($3 + [8])))
	if ( ((int_64)*($3 + [80]) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$6
	*($3 + [204]) = ($3 + [120])
	*($3 + [200]) = ($3 + [80])
	*($3 + [208]) = ($3 + [216])
	*(($1 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($1) = (int_64)0
	*($1 + [20 align=4]) = (int_64)0
	*($1 + [28]) = [0]
	*($1 + [36]) = ($3 + [80])
	CALL $258(($3 + [200]), $1)
	*($3 + [176]) = $1
	$0 = *($1)
	*($3 + [200]) = $0
	$5 = *($1 + [40])
	*($3 + [196]) = $5
	$4 = ($3 + [108])
	$2 = *($4)
	if ( ((uint_32)$2 >= (uint_32)*(($3 + [112]))) ){ goto $label$8 }
	*($2 + [8]) = $0
	*($2 + [16]) = $5
	*($3 + [176]) = [0]
	*($2) = $1
	*($4) = ($2 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $259(($3 + [104]), ($3 + [176]), ($3 + [200]), ($3 + [196]))
	
.LABEL $label$7
	$1 = *($3 + [176])
	*($3 + [176]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	$2 = *($1 + [20])
	if ( ($2 == 0) ){ goto $label$10 }
	*(($1 + [24])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$10
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$4 = *($3 + [104])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$6 = ($3 + [108])
	$1 = *($6)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$12 }
	
.LOOP $label$13:
	$1 = ($1 + [-24])
	$2 = *($1)
	*($1) = [0]
	if ( ($2 == 0) ){ goto $label$14 }
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($2 + [24])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$15
	CALL _ZdlPv($2)
	
.LABEL $label$14
	if ( ((int_32)$4 != (int_32)$1) ){ goto $label$13 }
	$1 = *(($3 + [104]))
	goto $label$11 
	
.LABEL $label$12
	$1 = $4
	
.LABEL $label$11
	*($6) = $4
	CALL _ZdlPv($1)
	
.LABEL $label$2
	$1 = *(($3 + [156]))
	if ( ($1 == 0) ){ goto $label$16 }
	*(($3 + [160])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$16
	$global$0 = ($3 + [224])
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $0) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [2])
	*(($3 = ($3 + [4]))) = (*($3) + [2])
	$0 = ($4 + [10])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

int_32 .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $170(CALL $170($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $2, [1])
	$2 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [33])
	if ( ((int_32)*(($0 + [8])) != (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [34])
	if ( ((int_32)*(($0 + [8])) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($1, $3, [1])
	*($2) = (*($2) + [1])
	return $0
}

int_32 .FUNC $210 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = int_32($2 >> [4])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$2 }
	$2 = CALL _Znwj($2)
	*(($0 + [8])) = $2
	*(($0 + [16])) = ($2 + ($3 << [4]))
	*(($3 = ($0 + [12]))) = $2
	$4 = *(($1 + [8]))
	$5 = (*(($1 + [12])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$3
	*($0 + [20 align=4]) = (int_64)0
	*(($0 + [28])) = [0]
	$2 = (*(($1 + [24])) - *($1 + [20]))
	if ( ($2 == 0) ){ goto $label$4 }
	$3 = int_32($2 >> [4])
	if ( ((uint_32)$3 >= (uint_32)[268435456]) ){ goto $label$1 }
	$2 = CALL _Znwj($2)
	*(($0 + [20])) = $2
	*(($0 + [28])) = ($2 + ($3 << [4]))
	*(($3 = ($0 + [24]))) = $2
	$4 = *(($1 + [20]))
	$5 = (*(($1 + [24])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$4
	*($0 + [32]) = *($1 + [32])
	return $0
	
.LABEL $label$2
	CALL $727(($0 + [8]))
	
.LABEL $label$1
	CALL $727(($0 + [20]))
	(unreachable)
	return (unreachable)
}

void .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [48])
	$global$0 = $2
	$0 = *($0 + [4])
	$3 = *($0 + [4])
	$4 = (*($0) + int_32($3 >> [1]))
	$0 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($4) + $0))
	
.LABEL $label$1
	CALL $210($2, $1)
	*(($2 + [44])) = [0]
	*($2 + [36 align=4]) = (int_64)0
	$3 = (*(($1 + [40])) - *($1 + [36]))
	if ( ($3 == 0) ){ goto $label$3 }
	$5 = int_32($3 >> [3])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$2 }
	$3 = CALL _Znwj($3)
	*(($2 + [36])) = $3
	*(($6 = ($2 + [40]))) = $3
	*(($2 + [44])) = ($3 + ($5 << [3]))
	$5 = *(($1 + [36]))
	$1 = (*(($1 + [40])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $5, $1)
	*($6) = (*($6) + $1)
	
.LABEL $label$3
	CALL void $4((int_32 $2), (int_32 $0))
	$1 = *($2 + [36])
	if ( ($1 == 0) ){ goto $label$4 }
	*(($2 + [40])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$1 = *($2 + [20])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($2 + [24])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($2 + [8])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($2 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($2 + [48])
	return (unreachable)
	
.LABEL $label$2
	CALL $727(($2 + [36]))
}

void .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = ($global$0 - [464])
	$global$0 = $2
	*(($3 = (($2 + [208]) + [8]))) = *(($1 + [16]))
	*(($4 = (($2 + [208]) + [16]))) = *(($1 + [24]))
	*(($5 = (($2 + [192]) + [8]))) = *(($1 + [40]))
	*($2 + [208]) = *($1 + [8])
	*($2 + [192]) = *($1 + [32])
	$6 = *($1)
	$7 = *($1 + [48])
	$8 = CALL $709(($2 + [176]), ($1 + [52]))
	*(($9 = (($2 + [160]) + [8]))) = *(($1 + [72]))
	*(($10 = (($2 + [144]) + [8]))) = *(($1 + [88]))
	*(($11 = (($2 + [112]) + [16]))) = *(($1 + [112]))
	*(($12 = (($2 + [112]) + [24]))) = *(($1 + [120]))
	*($2 + [160]) = *($1 + [64])
	*($2 + [144]) = *($1 + [80])
	*($2 + [112]) = *($1 + [96])
	*($2 + [120]) = *(($1 + [104]))
	$13 = *($1 + [128])
	*((($2 + [304]) + [24])) = *($12)
	*((($2 + [304]) + [16])) = *($11)
	*((($2 + [288]) + [8])) = *($10)
	*((($2 + [272]) + [8])) = *($9)
	*((($2 + [256]) + [8])) = *($5)
	*($2 + [312]) = *($2 + [120])
	*($2 + [304]) = *($2 + [112])
	*($2 + [288]) = *($2 + [144])
	*($2 + [272]) = *($2 + [160])
	*($2 + [256]) = *($2 + [192])
	*((($2 + [232]) + [16])) = *($4)
	*((($2 + [232]) + [8])) = *($3)
	*($2 + [232]) = *($2 + [208])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($2 + [440]) + [16]))) = *((($2 + [232]) + [16]))
	*(($5 = (($2 + [440]) + [8]))) = *((($2 + [232]) + [8]))
	*(($9 = (($2 + [424]) + [8]))) = *((($2 + [256]) + [8]))
	*($2 + [440]) = *($2 + [232])
	*($2 + [424]) = *($2 + [256])
	$3 = CALL $709(($2 + [408]), $8)
	*(($10 = (($2 + [392]) + [8]))) = *((($2 + [272]) + [8]))
	*(($11 = (($2 + [376]) + [8]))) = *((($2 + [288]) + [8]))
	*(($12 = (($2 + [336]) + [16]))) = *((($2 + [304]) + [16]))
	*(($14 = (($2 + [336]) + [24]))) = *((($2 + [304]) + [24]))
	*((($2 + [88]) + [8])) = *($5)
	*((($2 + [88]) + [16])) = *($4)
	*($2 + [392]) = *($2 + [272])
	*($2 + [376]) = *($2 + [288])
	*($2 + [336]) = *($2 + [304])
	*($2 + [344]) = *($2 + [312])
	*($2 + [88]) = *($2 + [440])
	*((($2 + [72]) + [8])) = *($9)
	*((($2 + [56]) + [8])) = *($10)
	*((($2 + [40]) + [8])) = *($11)
	*(($2 + [16])) = *($12)
	*(($2 + [24])) = *($14)
	*($2 + [72]) = *($2 + [424])
	*($2 + [56]) = *($2 + [392])
	*($2 + [40]) = *($2 + [376])
	*($2) = *($2 + [336])
	*($2 + [8]) = *($2 + [344])
	CALL void $0((int_32 $6), (int_64 ($2 + [88])), (int_32 ($2 + [72])), (int_32 ($7 & [255])), (int_32 $3), (int_32 ($2 + [56])), (int_32 ($2 + [40])), (int_32 $2), (int_32 ($13 & [255])), (int_32 $1))
	if ( ((*($2 + [408]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$2
	if ( ((*($8) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($8 + [8]))
	
.LABEL $label$3
	$global$0 = ($2 + [464])
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1)
	$1 = CALL $709($2, ($1 + [8]))
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$5 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($5) + $0))
	
.LABEL $label$1
	$4 = CALL $709(($2 + [16]), $1)
	CALL void $5((int_32 $3), (int_64 $4), (int_32 $0))
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$2
	if ( ((*($1) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$3
	$global$0 = ($2 + [32])
}

int_32 .FUNC $197 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [32])
	$3 = *($0 + [4])
	$0 = CALL $156($0, ($1 + [8]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($1 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [64])
	$3 = *($0 + [4])
	$0 = CALL $479($0, ($1 + [48]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $4, [32])
	$3 = (*($3) + [32])
	*(($3 = ($0 + [4]))) = $3
	$1 = ($1 + [96])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [100]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$6 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$7:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$4 = *($3)
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	$8 = $5
	
.LOOP $label$11:
	$9 = *($8)
	*($8) = [0]
	$7 = ($8 + [-24])
	$5 = *($7)
	*($7) = $9
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [56])))
	
.LABEL $label$13
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$9 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) != (int_32)$8) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = ($5 + [-24])
	
.LABEL $label$9
	
.LOOP $label$14:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [48]) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($8 + [56])))
	
.LABEL $label$16
	CALL _ZdlPv($8)
	
.LABEL $label$15
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$8
	*(($0 + [28])) = $9
	CALL db_remove_i64(*(($1 + [104])))
}

int_32 .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [64])
	$2 = *($0 + [4])
	$0 = CALL $184(CALL $306(CALL $168($0, ($1 + [8])), ($1 + [32])), ($1 + [48]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $2, [32])
	$2 = (*($2) + [32])
	*(($2 = ($0 + [4]))) = $2
	$1 = ($1 + [96])
	if ( ((uint_32)(*(($0 + [8])) - $2) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $2, [4])
	*(($1 = ($0 + [4]))) = (*($1) + [4])
	return $0
}

void .FUNC $192 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([112])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [100]) = $0
	CALL $195(($3 + [32]), $5)
	*($5 + [104]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $187(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [56])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($2) = [0]
	CALL $513($2, $1)
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$2 }
	CALL $11($0, $4)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($2 + [4]) = $0
	*($2) = $0
	*($2 + [8]) = $3
	CALL $514($2, $1)
	CALL $516(CALL $515(CALL $515($2, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	$global$0 = ($2 + [16])
}

void .FUNC $191 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [100]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035940084004159488, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $193($1, $5)
	if ( ((int_32)*($5 + [100]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $523 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [5])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$4 }
	$3 = [134217727]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$3 = int_32($2 >> [4])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL _Znwj(($3 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [32])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $727($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [5]))
	$5 = ($2 + ($5 << [5]))
	$3 = $5
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [24])) = (int_64)0
	*(($3 + [16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [5]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 - $1)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL _ZdlPv($3)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $174 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [112])
	$global$0 = $5
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$1 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$1
	CALL $139(($5 + [32]), $6, [12], $1)
	*($5 + [16]) = [20778]
	*($5 + [20]) = CALL $743([20778])
	*($5 + [8]) = *($5 + [16])
	CALL $10(($5 + [24]), ($5 + [8]))
	CALL $456($0, $1, ($5 + [32]), [12], $2, $3, $4, (int_64)-6030912078442368816)
	$1 = *($5 + [80])
	if ( ($1 == 0) ){ goto $label$2 }
	*(($5 + [84])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$2
	$global$0 = ($5 + [112])
}

void .FUNC $175 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $168(*($1), *($0))
	$2 = *($0)
	$3 = ($2 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$4 = ($2 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $176 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [256])
	$global$0 = $4
	$5 = *([0] + [8632])
	if ( $5 ){ goto $label$1 }
	$6 = CALL _Znwj([280])
	$5 = CALL $111($6)
	*([0] + [8632]) = $6
	
.LABEL $label$1
	*($4 + [184]) = [8617]
	*($4 + [188]) = CALL $743([8617])
	*($4 + [40]) = *($4 + [184])
	$6 = CALL has_auth(*(CALL $10(($4 + [192]), ($4 + [40]))))
	*($4 + [176]) = [20617]
	*($4 + [180]) = CALL $743([20617])
	*($4 + [32]) = *($4 + [176])
	CALL $10(($4 + [64]), ($4 + [32]))
	*($4 + [168]) = [20791]
	*($4 + [172]) = CALL $743([20791])
	*($4 + [24]) = *($4 + [168])
	CALL $10(($4 + [224]), ($4 + [24]))
	CALL $151(($4 + [200]), $5, $1, ( (int_64)-6030911325394173952 ? (int_64)-6030912842591371264 : $6 ), (int_64)0)
	$7 = *((($4 + [200]) + [8]))
	*((($4 + [152]) + [8])) = $7
	$5 = *($3)
	*((($4 + [8]) + [8])) = $7
	$7 = *($4 + [200])
	*($4 + [152]) = $7
	*($4 + [8]) = $7
	CALL $356($0, ($4 + [8]), $5)
	$5 = *([0] + [8632])
	if ( $5 ){ goto $label$2 }
	$6 = CALL _Znwj([280])
	$5 = CALL $111($6)
	*([0] + [8632]) = $6
	
.LABEL $label$2
	CALL $139(($4 + [64]), $5, [0], $1)
	$7 = *($4 + [64])
	$5 = *($4 + [112])
	if ( ($5 == 0) ){ goto $label$3 }
	*(($4 + [116])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$3
	*($4 + [144]) = $7
	*($4 + [48]) = [8617]
	*($4 + [52]) = CALL $743([8617])
	*($4) = *($4 + [48])
	$5 = CALL $10(($4 + [56]), $4)
	*($4 + [64]) = $3
	*($4 + [72]) = $1
	*($4 + [80]) = $2
	*($4 + [68]) = ($4 + [200])
	*($4 + [76]) = ($4 + [144])
	*($4 + [248]) = *($5)
	$5 = ($0 + [80])
	if ( ((int_64)*($0 + [80]) == (int_64)CALL current_receiver()) ){ goto $label$4 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$4
	*($4 + [224]) = $5
	*($4 + [228]) = ($4 + [64])
	*($4 + [232]) = ($4 + [248])
	*(($3 = CALL _Znwj([80])) + [24]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [68]) = $5
	CALL $461(($4 + [224]), $3)
	*($4 + [240]) = $3
	$7 = *($3)
	*($4 + [224]) = $7
	$2 = *($3 + [72])
	*($4 + [220]) = $2
	$6 = ($0 + [108])
	$5 = *($6)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [112]))) ){ goto $label$6 }
	*($5 + [8]) = $7
	*($5 + [16]) = $2
	*($4 + [240]) = [0]
	*($5) = $3
	*($6) = ($5 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $462(($0 + [104]), ($4 + [240]), ($4 + [224]), ($4 + [220]))
	
.LABEL $label$5
	$3 = *($4 + [240])
	*($4 + [240]) = [0]
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	if ( *([0] + [8632]) ){ goto $label$8 }
	$3 = CALL _Znwj([280])
	CALL $111($3)
	*([0] + [8632]) = $3
	
.LABEL $label$8
	CALL $163($4, $1, ($4 + [200]), [0])
	$global$0 = ($4 + [256])
}

void .FUNC $177 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_32 $15
	$5 = ($global$0 - [240])
	$global$0 = $5
	CALL $360($1, *($4))
	*($5 + [159]) = [0]
	$6 = ($1 + [360])
	$7 = (int_64)0
	$8 = *($2 + [8])
	$10 = *($2)
	$9 = *($2 + [16])
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$2 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*(($11 = CALL _Znwj([24])) + [8]) = $8
	*($11) = $10
	*($11 + [16]) = $9
	CALL sha256($11, [24], ($5 + [48]))
	$7 = *($5 + [48])
	if ( ($11 == 0) ){ goto $label$1 }
	CALL _ZdlPv($11)
	
.LABEL $label$1
	CALL $463(($5 + [144]), $6, $7)
	$11 = *($5 + [148])
	if ( ($11 == 0) ){ goto $label$12 }
	*(($12 = (($5 + [48]) + [24]))) = *(($11 + [24]))
	*((($5 + [48]) + [16])) = *(($11 + [16]))
	*((($5 + [48]) + [8])) = *(($11 + [8]))
	*($5 + [48]) = *($11)
	$7 = *($12)
	$11 = *([0] + [8632])
	if ( $11 ){ goto $label$13 }
	$12 = CALL _Znwj([280])
	$11 = CALL $111($12)
	*([0] + [8632]) = $12
	
.LABEL $label$13
	*($5 + [128]) = [20800]
	*($5 + [132]) = CALL $743([20800])
	*($5 + [32]) = *($5 + [128])
	$7 = ((int_64)CALL $153($11, *(CALL $10(($5 + [136]), ($5 + [32]))), (int_64)86400) + (int_64)$7)
	if ( ((uint_64)$7 <= (uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)) ){ goto $label$11 }
	*($5 + [208]) = (int_64))($7 - ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295))
	CALL $464(($5 + [160]), [20811], ($5 + [208]), [20871])
	if ( (*($5 + [160]) & [1]) ){ goto $label$8 }
	$11 = (($5 + [160]) | [1])
	goto $label$7 
	
.LABEL $label$12
	*($5 + [160]) = [8414]
	*($5 + [164]) = CALL $743([8414])
	*($5 + [16]) = *($5 + [160])
	$11 = CALL $10(($5 + [48]), ($5 + [16]))
	$7 = *($2 + [8])
	$11 = ((int_64)$7 == (int_64)*($11))
	$12 = ($2 + [16])
	$8 = *($12)
	if ( ((int_64)*($6) == (int_64)CALL current_receiver()) ){ goto $label$14 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$14
	$8 = ( $8 ? $7 : $11 )
	$7 = (int_64)0
	*(($11 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($11) = (int_64)0
	*($11 + [16]) = (int_64)0
	*($11 + [32]) = $6
	$9 = CALL current_time()
	*($11) = *($2)
	*($11 + [24]) = ((uint_64)$9 / (uint_64)(int_64)1000000)
	*($11 + [8]) = *(($2 + [8]))
	*($11 + [16]) = *($12)
	*($5 + [216]) = ($5 + [189])
	*($5 + [212]) = ($5 + [160])
	*($5 + [208]) = ($5 + [160])
	CALL $465(($5 + [208]), $11)
	$9 = *($11 + [8])
	$13 = *($11)
	$10 = *($11 + [16])
	if ( ((int_64)((int_64)$10 | (int_64)$13) != (int_64)0) ){ goto $label$16 }
	$10 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	*(($6 = CALL _Znwj([24])) + [8]) = $9
	*($6) = $13
	*($6 + [16]) = $10
	CALL sha256($6, [24], ($5 + [48]))
	$7 = *($5 + [48])
	if ( ($6 == 0) ){ goto $label$15 }
	CALL _ZdlPv($6)
	
.LABEL $label$15
	$6 = ($1 + [368])
	*($11 + [36]) = CALL db_store_i64(*($6), (int_64)-8173735188943732736, $8, $7, ($5 + [160]), [29])
	$12 = ($1 + [376])
	if ( (uint_64)($7 <= *($12)) ){ goto $label$17 }
	*($12) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$17
	$7 = (int_64)0
	$9 = *(($11 + [8]))
	$13 = *($6)
	$14 = *($11)
	$10 = *(($11 + [16]))
	if ( ((int_64)((int_64)$10 | (int_64)$14) != (int_64)0) ){ goto $label$19 }
	$10 = (int_64)0
	if ( (int_64)($9 == 0) ){ goto $label$18 }
	
.LABEL $label$19
	*(($6 = CALL _Znwj([24])) + [8]) = $9
	*($6) = $14
	*($6 + [16]) = $10
	CALL sha256($6, [24], ($5 + [48]))
	$7 = *($5 + [48])
	if ( ($6 == 0) ){ goto $label$18 }
	CALL _ZdlPv($6)
	
.LABEL $label$18
	*($5 + [48]) = *(($11 + [24]))
	*($11 + [40]) = CALL db_idx64_store($13, (int_64)-8173735188943732736, $8, $7, ($5 + [48]))
	*($5 + [160]) = $11
	$7 = (int_64)0
	$8 = *(($11 + [8]))
	$10 = *($11)
	$9 = *(($11 + [16]))
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$21 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$20 }
	
.LABEL $label$21
	*(($11 = CALL _Znwj([24])) + [8]) = $8
	*($11) = $10
	*($11 + [16]) = $9
	CALL sha256($11, [24], ($5 + [48]))
	$7 = *($5 + [48])
	if ( ($11 == 0) ){ goto $label$20 }
	CALL _ZdlPv($11)
	
.LABEL $label$20
	*($5 + [48]) = $7
	$6 = *($5 + [160])
	$12 = *($6 + [36])
	*($5 + [208]) = $12
	$15 = ($1 + [388])
	$11 = *($15)
	if ( ((uint_32)$11 >= (uint_32)*(($1 + [392]))) ){ goto $label$10 }
	*($11 + [8]) = $7
	*($11 + [16]) = $12
	*($5 + [160]) = [0]
	*($11) = $6
	*($15) = ($11 + [24])
	goto $label$9 
	
.LABEL $label$11
	*(($5 + [72])) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$11 = *($5 + [76])
	if ( ($11 == 0) ){ goto $label$6 }
	*(($5 + [76])) = ($11 + [-1])
	*($5 + [159]) = [1]
	goto $label$6 
	
.LABEL $label$10
	CALL $466(($1 + [384]), ($5 + [160]), ($5 + [48]), ($5 + [208]))
	
.LABEL $label$9
	$11 = *($5 + [160])
	*($5 + [160]) = [0]
	if ( ($11 == 0) ){ goto $label$22 }
	CALL _ZdlPv($11)
	
.LABEL $label$22
	if ( (*($5 + [159]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	$11 = *($5 + [168])
	CALL _ZdlPv($11)
	
.LABEL $label$7
	CALL eosio_assert([0], $11)
	
.LABEL $label$6
	$11 = *($5 + [148])
	*($5 + [208]) = [8414]
	*($5 + [212]) = CALL $743([8414])
	*($5 + [24]) = *($5 + [208])
	$12 = CALL $10(($5 + [160]), ($5 + [24]))
	$7 = *($2 + [8])
	$7 = ( *(($2 + [16])) ? $7 : ((int_64)$7 == (int_64)*($12)) )
	*($5 + [160]) = ($5 + [48])
	if ( $11 ){ goto $label$23 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$23
	CALL $467($6, $11, $7, ($5 + [160]))
	if ( *($5 + [159]) ){ goto $label$4 }
	
.LABEL $label$5
	*($0 + [48]) = (int_64)0
	*(($0 + [56])) = (int_64)25769803776
	*($0 + [64]) = ((int_64)((int_64)*($2) + (int_64)*($2 + [8])) + (int_64)*(($2 + [16])))
	*($0 + [72]) = CALL current_time()
	*($5 + [48]) = (int_64)0
	CALL $409(($0 + [48]), ($5 + [48]), ($5 + [56]))
	*($0) = (int_64)0
	*((($5 + [48]) + [24])) = (int_64)0
	*(($5 + [80])) = (int_64)0
	*((($5 + [48]) + [56])) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [96]) = (int_64)0
	$7 = (int_64)5459781
	$11 = [0]
	
.LOOP $label$26:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$25 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$28 }
	$7 = $8
	$12 = $11
	goto $label$27 
	
.LABEL $label$28
	$7 = $8
	
.LOOP $label$29:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$25 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = ((int_32)$11 < (int_32)[6])
	$12 = ($11 + [1])
	$11 = $12
	if ( $6 ){ goto $label$29 }
	
.LABEL $label$27
	$11 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	CALL eosio_assert([0], [22633])
	
.LABEL $label$24
	*(($5 + [104])) = (int_64)1397703940
	*(($5 + [96])) = (int_64)0
	*(($5 + [72])) = *(($2 + [8]))
	*(($5 + [80])) = *(($2 + [16]))
	*($5 + [56]) = (int_64)0
	*($5 + [113]) = [0]
	*($5 + [64]) = *($2)
	*($5 + [88]) = *($3)
	*($5 + [112]) = *($4)
	CALL $432($1, $0, ($5 + [48]))
	goto $label$3 
	
.LABEL $label$4
	$11 = *([0] + [8632])
	if ( $11 ){ goto $label$30 }
	$6 = CALL _Znwj([280])
	$11 = CALL $111($6)
	*([0] + [8632]) = $6
	
.LABEL $label$30
	CALL $139(($5 + [48]), $11, [6], $2)
	*($5 + [40]) = *($5 + [48])
	*($5 + [208]) = [8414]
	*($5 + [212]) = CALL $743([8414])
	*($5 + [8]) = *($5 + [208])
	$8 = *(CALL $10(($5 + [160]), ($5 + [8])))
	$7 = *($2 + [8])
	$9 = *(($2 + [16]))
	*($5 + [160]) = $2
	*($5 + [168]) = $3
	*($5 + [172]) = $4
	*($5 + [164]) = ($5 + [40])
	*($5 + [176]) = ($5 + [159])
	*($5 + [232]) = ( $9 ? $7 : ((int_64)$7 == (int_64)$8) )
	$6 = ($1 + [320])
	if ( ((int_64)*($1 + [320]) == (int_64)CALL current_receiver()) ){ goto $label$31 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$31
	*($5 + [208]) = $6
	*($5 + [212]) = ($5 + [160])
	*($5 + [216]) = ($5 + [232])
	*(($11 = CALL _Znwj([80])) + [24]) = (int_64)0
	*($11 + [16]) = (int_64)0
	*($11 + [32]) = (int_64)0
	*($11 + [48]) = (int_64)0
	*($11 + [56]) = (int_64)0
	*($11 + [68]) = $6
	CALL $468(($5 + [208]), $11)
	*($5 + [224]) = $11
	$7 = *($11)
	*($5 + [208]) = $7
	$12 = *($11 + [72])
	*($5 + [204]) = $12
	$2 = ($1 + [348])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($1 + [352]))) ){ goto $label$33 }
	*($6 + [8]) = $7
	*($6 + [16]) = $12
	*($5 + [224]) = [0]
	*($6) = $11
	*($2) = ($6 + [24])
	goto $label$32 
	
.LABEL $label$33
	CALL $469(($1 + [344]), ($5 + [224]), ($5 + [208]), ($5 + [204]))
	
.LABEL $label$32
	$11 = *($5 + [224])
	*($5 + [224]) = [0]
	if ( ($11 == 0) ){ goto $label$34 }
	CALL _ZdlPv($11)
	
.LABEL $label$34
	*(($0 + [40])) = *((($5 + [48]) + [40]))
	*(($0 + [32])) = *((($5 + [48]) + [32]))
	*(($0 + [24])) = *((($5 + [48]) + [24]))
	*(($0 + [16])) = *((($5 + [48]) + [16]))
	*(($0 + [8])) = *($5 + [56])
	*($0) = *($5 + [48])
	*($0 + [48]) = *($5 + [96])
	$11 = (($5 + [48]) + [56])
	$6 = *($11)
	*($11) = [0]
	*(($0 + [56])) = $6
	*($5 + [96]) = (int_64)0
	*(($0 + [76])) = *((($5 + [48]) + [76]))
	*(($0 + [68])) = *((($5 + [48]) + [68]))
	*($0 + [60 align=4]) = *($5 + [108 align=4])
	
.LABEL $label$3
	$global$0 = ($5 + [240])
}

int_32 .FUNC $170 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = int_32(($7 - $2) >> [4])
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$5 }
	CALL $518($1, ($6 - $5))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$6 }
	$7 = ($2 + ($6 << [4]))
	*(($1 + [4])) = $7
	
.LABEL $label$6
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	CALL $306($0, $2)
	$2 = ($2 + [16])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $171 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [80])
	$global$0 = $2
	*((($2 + [56]) + [16])) = *(($1 + [16]))
	*((($2 + [56]) + [8])) = *(($1 + [8]))
	*($2 + [40]) = (int_64)0
	*($2 + [48]) = [0]
	*($2 + [56]) = *($1)
	$3 = *($1 + [24])
	$4 = (*(($1 + [36])) - *($1 + [32]))
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL _Znwj($4)
	*(($2 + [48])) = ($5 + $4)
	*($2 + [40]) = $5
	*($2 + [44]) = $5
	$6 = *(($1 + [32]))
	$4 = (*(($1 + [36])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $6, $4)
	*($2 + [44]) = ($5 + $4)
	
.LABEL $label$3
	*($2 + [32]) = [0]
	*($2 + [24]) = (int_64)0
	$4 = (*(($1 + [48])) - *($1 + [44]))
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = int_32($4 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$4 = CALL _Znwj($4)
	*(($2 + [32])) = ($4 + ($5 << [4]))
	*($2 + [24]) = $4
	*($2 + [28]) = $4
	$5 = *(($1 + [44]))
	$1 = (*(($1 + [48])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($4, $5, $1)
	*($2 + [28]) = ($4 + $1)
	
.LABEL $label$4
	*(($2 + [16])) = *((($2 + [56]) + [16]))
	*(($2 + [8])) = *((($2 + [56]) + [8]))
	*($2) = *($2 + [56])
	CALL $527($0, $2, $3, ($2 + [40]), ($2 + [24]))
	$1 = *($2 + [24])
	if ( ($1 == 0) ){ goto $label$5 }
	*($2 + [28]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($2 + [40])
	if ( ($1 == 0) ){ goto $label$6 }
	*($2 + [44]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($2 + [80])
	return (unreachable)
	
.LABEL $label$2
	CALL $727(($2 + [40]))
	
.LABEL $label$1
	CALL $727(($2 + [24]))
	(unreachable)
}

void .FUNC $172 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [112])
	$global$0 = $5
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$1 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$1
	CALL $139(($5 + [32]), $6, [5], $1)
	*($5 + [16]) = [20765]
	*($5 + [20]) = CALL $743([20765])
	*($5 + [8]) = *($5 + [16])
	CALL $10(($5 + [24]), ($5 + [8]))
	CALL $456($0, $1, ($5 + [32]), [5], $2, $3, $4, (int_64)-6030914414904577840)
	$1 = *($5 + [80])
	if ( ($1 == 0) ){ goto $label$2 }
	*(($5 + [84])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$2
	$global$0 = ($5 + [112])
}

void .FUNC $173 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$6 = ($global$0 - [64])
	$global$0 = $6
	$7 = [0]
	$8 = *([0] + [8632])
	if ( $8 ){ goto $label$1 }
	$9 = CALL _Znwj([280])
	$8 = CALL $111($9)
	*([0] + [8632]) = $9
	
.LABEL $label$1
	$10 = *(($2 + [8]))
	$11 = *($2)
	*($6 + [56]) = (int_64)0
	$12 = ((int_64)$11 + (int_64)11)
	$11 = ((int_64)$10 + (int_64)(CASTING uint_64)(uint_32 (uint_64)($12 <= $11)))
	*($6 + [40]) = $11
	*($6 + [32]) = $12
	$2 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-3022886516901806079, ($6 + [32]), ($6 + [56]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $284(($6 + [24]), $8, *($6 + [56]))
	*((($7 = *($6 + [28])) + [92])) = $2
	
.LABEL $label$2
	if ( ($7 == 0) ){ goto $label$4 }
	$10 = *($7 + [16])
	$13 = ((int_64)$10 + (int_64)*($7 + [60]))
	if ( (int_64)(((int_64)((int_64)$12 ^ (int_64)$13) | (int_64)((int_64)$11 ^ (int_64)((int_64)*(($7 + [24])) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($13 <= $10))))) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = [0]
	CALL eosio_assert([0], [20708])
	
.LABEL $label$3
	*($6 + [16]) = [20754]
	*($6 + [20]) = CALL $743([20754])
	*($6 + [8]) = *($6 + [16])
	CALL $10(($6 + [32]), ($6 + [8]))
	CALL $456($0, $1, $7, [11], $3, $4, $5, (int_64)-6030912078442381312)
	$global$0 = ($6 + [64])
}

void .FUNC $178 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	$6 = [40]
	*(($1 + [40])) = *(($5 + [40]))
	*(($1 + [32])) = *(($5 + [32]))
	*(($1 + [24])) = *(($5 + [24]))
	*(($1 + [16])) = *(($5 + [16]))
	*(($1 + [8])) = *(($5 + [8]))
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$1 }
	CALL $551(($1 + [48]), *($5 + [48]), *(($5 + [52])))
	
.LABEL $label$1
	*($1 + [60 align=4]) = *($5 + [60 align=4])
	*(($1 + [76])) = *(($5 + [76]))
	*(($1 + [68])) = *(($5 + [68]))
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = ($5 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$6 = (($8 & [-8]) + $6)
	
.LABEL $label$3
	$5 = ($6 + [20])
	if ( ($5 <= [513]) ){ goto $label$5 }
	$6 = CALL $746($5)
	goto $label$4 
	
.LABEL $label$5
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$4
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $5)
	CALL $279($3, $1)
	$9 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($4 + [8]), (int_64)-3022886516901806080, *(*($0 + [8])), $9, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $749($6)
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$6 = ($4 + [8])
	$9 = *($6)
	$5 = *(($0 + [8]))
	$10 = *($5)
	$11 = *($1)
	$0 = ($1 + [24])
	*($3 + [24]) = *($0)
	*($3 + [16]) = *($1 + [16])
	*($1 + [88]) = CALL db_idx128_store($9, (int_64)-3022886516901806080, $10, $11, ($3 + [16]))
	$9 = *($5)
	$10 = *($6)
	$11 = *($1)
	$12 = *($0)
	$0 = ($1 + [60])
	$13 = *($1 + [16])
	$14 = ((int_64)$13 + (int_64)*($0))
	*($3 + [16]) = $14
	*($3 + [24]) = ((int_64)$12 + (int_64)(CASTING uint_64)(uint_32 (uint_64)($14 <= $13)))
	*(($1 + [92])) = CALL db_idx128_store($10, (int_64)-3022886516901806079, $9, $11, ($3 + [16]))
	$9 = *($5)
	$10 = *($6)
	$11 = *($1)
	*($3 + [16]) = *($1 + [64])
	*(($1 + [96])) = CALL db_idx64_store($10, (int_64)-3022886516901806078, $9, $11, ($3 + [16]))
	$9 = *($5)
	$10 = *($6)
	$11 = *($1)
	$12 = *($0)
	$13 = *($1 + [64])
	*(($6 = CALL _Znwj([16])) + [8]) = $12
	*($6) = $13
	CALL sha256($6, [16], ($3 + [16]))
	$12 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$8 }
	CALL _ZdlPv($6)
	
.LABEL $label$8
	*($3 + [16]) = $12
	*(($1 + [100])) = CALL db_idx64_store($10, (int_64)-3022886516901806077, $9, $11, ($3 + [16]))
	$global$0 = ($3 + [48])
}

void .FUNC $179 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [48])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $589 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [4])
	*(($2 = ($0 + [4]))) = (*($2) + [4])
	$3 = ($1 + [16])
	$2 = *($0 + [4])
	$0 = CALL $479($0, ($1 + [4]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $3, [8])
	$2 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [24])
	$4 = ($0 + [8])
	if ( ((int_32)(*($4) - $2) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$5 = ($1 + [25])
	if ( ((int_32)(*($4) - $3) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $5, [1])
	$3 = (*($2) + [1])
	*($2) = $3
	$2 = ($1 + [26])
	$4 = ($0 + [8])
	if ( ((int_32)(*($4) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $2, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$5 = ($1 + [32])
	if ( ((int_32)(*($4) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($3, $5, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [52])
	$2 = *($0 + [4])
	$0 = CALL $542($0, ($1 + [40]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($2, $3, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [56])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$8
	CALL memcpy($3, $1, [8])
	*($2) = (*($2) + [8])
	return $0
}

int_32 .FUNC $588 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $168($0, $1)
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $3, [8])
	$2 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $2
	$4 = ($1 + [32])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $2) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$2 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	$2 = (*($3) + [8])
	*($3) = $2
	$1 = ($1 + [40])
	if ( ((uint_32)(*($5) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $2, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

void .FUNC $585 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $584 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($0 + [8 align=4]) = (int_64)0
	*(($0 + [16])) = [0]
	*($3 + [16]) = [22135]
	*($3 + [20]) = CALL $743([22135])
	*($3 + [8]) = *($3 + [16])
	CALL $10(($3 + [24]), ($3 + [8]))
	*($0) = (int_64)4298345369187365760
	*($0 + [24]) = $1
	$4 = *($1 + [4])
	$1 = *($2 + [4])
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy($0, $4, [8])
	*(($4 = ($1 + [4]))) = (*($4) + [8])
	CALL $537($1, ($0 + [8]))
	*($0 + [28]) = *(*($2 + [8]))
	$global$0 = ($3 + [32])
	return $0
}

void .FUNC $587 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = ((int_32)$3 / (int_32)[48])
	if ( ((uint_32)$4 <= (uint_32)((int_32)($5 - $6) / (int_32)[48])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL _ZdlPv($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[89478486]) ){ goto $label$1 }
	$6 = [89478485]
	$2 = ((int_32)$5 / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	
.LABEL $label$6
	$4 = ((int_32)$6 * (int_32)[48])
	$6 = CALL _Znwj($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + ((int_32)((uint_32)$3 / (uint_32)[48]) * (int_32)[48]))
	goto $label$3 
	
.LABEL $label$4
	$3 = ((int_32)(*($0 + [4]) - $6) / (int_32)[48])
	$7 = ( ($1 + ((int_32)$3 * (int_32)[48])) ? $2 : ((uint_32)$4 > (uint_32)$3) )
	$5 = ($7 - $1)
	$8 = ((int_32)$5 / (int_32)[48])
	if ( ($5 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $5)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$3) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + ((int_32)((uint_32)$1 / (uint_32)[48]) * (int_32)[48]))
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + ((int_32)$8 * (int_32)[48]))
	return (unreachable)
	
.LABEL $label$1
	CALL $727($0)
}

void .FUNC $586 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = ($1 + [8])
	$6 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $587($5, *($4 + [8]), *(($4 + [12])))
	
.LABEL $label$1
	$8 = *($1 + [8])
	$7 = *(($1 + [12]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[48]))
	$4 = [44]
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$4 }
	$4 = (((int_32)((uint_32)($9 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $4)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 + [-36])
	
.LABEL $label$3
	if ( ($4 <= [513]) ){ goto $label$6 }
	$2 = CALL $746($4)
	goto $label$5 
	
.LABEL $label$6
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$5
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	$7 = $2
	if ( ((int_32)$4 > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22875])
	$7 = *($3 + [4])
	
.LABEL $label$7
	CALL memcpy($7, $1, [8])
	*($3 + [4]) = ($7 + [8])
	CALL $542($3, $5)
	*($1 + [28]) = CALL db_store_i64(*($6 + [8]), (int_64)-5915276457178488320, *(*($0 + [8])), (int_64)-5915276457178488320, $2, $4)
	if ( ($4 <= [513]) ){ goto $label$8 }
	CALL $749($2)
	
.LABEL $label$8
	if ( ((uint_64)*($6 + [16]) > (uint_64)(int_64)-5915276457178488320) ){ goto $label$9 }
	*(($6 + [16])) = (int_64)-5915276457178488319
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

void .FUNC $581 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $156(*($1), $0)
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($0 + [32]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($5)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	CALL $479(*($1), ($0 + [40]))
	CALL $479(*($1), ($0 + [52]))
	$global$0 = ($2 + [16])
}

void .FUNC $580 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [32]) = ($4 << [1])
	$5 = (($3 + [32]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [32]) = ($6 | [1])
	*($3 + [40]) = $5
	*($3 + [36]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	*(($4 = (($3 + [48]) + [8]))) = *(($2 + [8]))
	*($3 + [48]) = *($2)
	$7 = *($4)
	*((($3 + [64]) + [8])) = $7
	*((($3 + [80]) + [8])) = $7
	*(($3 + [8])) = $7
	$7 = *($3 + [48])
	*($3 + [80]) = $7
	*($3 + [64]) = $7
	*($3) = $7
	CALL $5(($3 + [16]), $3)
	$4 = *($3 + [16])
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [32]), ( *($3 + [24]) ? (($3 + [16]) | [1]) : $5 ), ( *($3 + [20]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*((($3 + [16]) + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [40]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [32]))
}

void .FUNC $583 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$4 }
	$5 = [0]
	$6 = *([0] + [23024])
	
.LOOP $label$6:
	*((($3 + [16]) + ($1 = $5))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$5 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$3 }
	*($3) = ($5 << [1])
	$6 = ($3 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$1 = ($3 | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($3) = ($7 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $5
	
.LABEL $label$2
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$7:
	*(($6 + $1)) = *((($3 + [16]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$7 }
	$1 = ($6 + $5)
	
.LABEL $label$1
	*($1) = [0]
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$1 = CALL $743($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$11 }
	*($3 + [16]) = ($1 << [1])
	$6 = (($3 + [16]) | [1])
	$5 = $6
	if ( $1 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$6 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $1
	$6 = (($3 + [16]) | [1])
	
.LABEL $label$10
	CALL memcpy($5, $2, $1)
	
.LABEL $label$9
	*(($5 + $1)) = [0]
	$1 = *($3 + [16])
	$5 = ($1 & [1])
	$1 = CALL $716($3, ( *($3 + [24]) ? $6 : $5 ), ( *($3 + [20]) ? uint_32($1 >> [1]) : $5 ))
	$4 = *($1)
	*($1) = (int_64)0
	*($0) = $4
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*((($3 + [16]) + [8])))
	
.LABEL $label$12
	if ( ((*($3) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$8
	CALL $708(($3 + [16]))
}

int_32 .FUNC $582 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($1 + [64])
	$4 = *($0 + [4])
	$0 = CALL $542(CALL $156(CALL $156($0, $1), ($1 + [24])), ($1 + [48]))
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $3, [8])
	$3 = (*($4) + [8])
	*(($4 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($1 + [72]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($4)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $629 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [41])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$5 = *($0)
	$3 = ($5 + [48])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = *(($5 + [56]))
	if ( ((int_32)(*(($4 + [8])) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [64])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $1) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $0, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $116 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4812911374179631104, (int_64)-4812911374179631104)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $114($0, $4)
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $497($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $498($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $117 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$6 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$7 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $7
	$8 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$7 = CALL $746($5)
	$8 = [1]
	
.LABEL $label$5
	$9 = ($0 + [24])
	CALL db_get_i64($1, $7, $5)
	*($3 + [36]) = $7
	*($3 + [32]) = $7
	*($3 + [40]) = ($7 + $5)
	$6 = CALL _Znwj([56])
	CALL $115($6)
	*($6) = (int_64)1500
	$10 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$10 = $11
	$2 = $5
	goto $label$11 
	
.LABEL $label$12
	$10 = $11
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$9 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$4 = ((int_32)$5 < (int_32)[6])
	$2 = ($5 + [1])
	$5 = $2
	if ( $4 ){ goto $label$13 }
	
.LABEL $label$11
	$5 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [22633])
	
.LABEL $label$8
	*(($5 = *($6 + [20])) + [8]) = (int_64)1397703940
	*($5) = (int_64)500000
	*($6 + [40]) = $0
	*($6 + [33 align=1]) = [24578]
	CALL $211(($3 + [32]), $6)
	*($6 + [44]) = $1
	*($3 + [24]) = $6
	*($3 + [16]) = (int_64)5445039531761205248
	*($3 + [12]) = $1
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)*(($0 + [32]))) ){ goto $label$16 }
	*($5 + [8]) = (int_64)5445039531761205248
	*($5 + [16]) = $1
	*($3 + [24]) = [0]
	*($5) = $6
	*($4) = ($5 + [24])
	if ( $8 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$16
	CALL $593($9, ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($8 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	CALL $749($7)
	
.LABEL $label$14
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = *($5 + [20])
	if ( ($4 == 0) ){ goto $label$17 }
	*(($5 + [24])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$17
	$4 = *($5 + [8])
	if ( ($4 == 0) ){ goto $label$18 }
	*(($5 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$18
	CALL _ZdlPv($5)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$global$0 = $2
	CALL $221($1)
	*($2 + [40]) = [8414]
	*($2 + [44]) = CALL $743([8414])
	*($2 + [16]) = *($2 + [40])
	$3 = CALL $10(($2 + [48]), ($2 + [16]))
	$4 = *($1 + [8])
	CALL require_auth(( *($1 + [16]) ? $4 : ((int_64)$4 == (int_64)*($3)) ))
	$3 = ($0 + [120])
	$4 = (int_64)0
	$5 = *($1 + [8])
	$7 = *($1)
	$6 = *($1 + [16])
	if ( ((int_64)((int_64)$6 | (int_64)$7) != (int_64)0) ){ goto $label$2 }
	$6 = (int_64)0
	if ( (int_64)($5 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*(($0 = CALL _Znwj([24])) + [8]) = $5
	*($0) = $7
	*($0 + [16]) = $6
	CALL sha256($0, [24], ($2 + [48]))
	$4 = *($2 + [48])
	if ( ($0 == 0) ){ goto $label$1 }
	CALL _ZdlPv($0)
	
.LABEL $label$1
	CALL $222(($2 + [48]), $3, $4)
	$0 = *($2 + [52])
	if ( $0 ){ goto $label$3 }
	CALL eosio_assert([0], [22275])
	$0 = *($2 + [52])
	
.LABEL $label$3
	if ( ((int_64)*($0 + [16]) != (int_64)*(($0 + [40]))) ){ goto $label$4 }
	CALL eosio_assert([0], [22352])
	
.LABEL $label$4
	*($2 + [24]) = [8617]
	$0 = *($2 + [52])
	*($2 + [28]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [24])
	$8 = CALL $10(($2 + [32]), ($2 + [8]))
	*($2 + [40]) = $1
	$4 = *($8)
	if ( $0 ){ goto $label$5 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$5
	CALL $223($3, $0, $4, ($2 + [40]))
	$global$0 = ($2 + [80])
}

int_32 .FUNC $59 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [368])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [280]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [260]) = $2
	*($4 + [256]) = $2
	*($4 + [264]) = ($2 + $7)
	CALL $168(($4 + [256]), ($4 + [272]))
	$3 = *($4 + [264])
	*((($4 + [40]) + [8])) = $3
	*((($4 + [24]) + [8])) = $3
	$8 = *($4 + [256])
	*($4 + [24]) = $8
	*($4 + [40]) = $8
	$9 = CALL $20(($4 + [56]), $0, $1, ($4 + [24]))
	*(($3 = (($4 + [296]) + [16]))) = *($4 + [288])
	*(($10 = (($4 + [296]) + [8]))) = *($4 + [280])
	*($4 + [296]) = *($4 + [272])
	*((($4 + [320]) + [16])) = *($3)
	*((($4 + [320]) + [8])) = *($10)
	*($4 + [320]) = *($4 + [296])
	$3 = (($4 + [56]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$0 = *((($4 + [320]) + [16]))
	*((($4 + [344]) + [16])) = $0
	$1 = *((($4 + [320]) + [8]))
	*((($4 + [344]) + [8])) = $1
	*(($4 + [8])) = $1
	*(($4 + [16])) = $0
	$0 = *($4 + [320])
	*($4) = $0
	*($4 + [344]) = $0
	CALL void $3((int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $749($2)
	
.LABEL $label$6
	CALL $24($9)
	$global$0 = ($4 + [368])
	return [1]
}

int_32 .FUNC $50 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [464])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$7 = CALL $746($8)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$2
	CALL read_action_data($7, $8)
	
.LABEL $label$1
	*(($4 + [328])) = (int_64)0
	*((($4 + [288]) + [32])) = (int_64)0
	*(($4 + [312])) = (int_64)0
	*($4 + [296]) = [0]
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [276]) = $7
	*($4 + [272]) = $7
	*($4 + [280]) = ($7 + $8)
	CALL $145(($4 + [272]), ($4 + [288]))
	$2 = ($4 + [304])
	$3 = *($4 + [276])
	if ( ((uint_32)(*($4 + [280]) - $3) > (uint_32)[31]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($4 + [276])
	
.LABEL $label$4
	CALL memcpy($2, $3, [32])
	*($4 + [276]) = (*($4 + [276]) + [32])
	$3 = *((($4 + [272]) + [8]))
	*((($4 + [56]) + [8])) = $3
	*((($4 + [40]) + [8])) = $3
	$9 = *($4 + [272])
	*($4 + [40]) = $9
	*($4 + [56]) = $9
	$10 = CALL $20(($4 + [72]), $0, $1, ($4 + [40]))
	$3 = [0]
	*($4 + [376]) = [0]
	*($4 + [368]) = (int_64)0
	$11 = (*($4 + [292]) - *($4 + [288]))
	if ( ($11 == 0) ){ goto $label$7 }
	$12 = int_32($11 >> [3])
	if ( ((uint_32)$12 >= (uint_32)[536870912]) ){ goto $label$6 }
	$3 = CALL _Znwj($11)
	*(($4 + [376])) = ($3 + ($12 << [3]))
	*($4 + [368]) = $3
	*($4 + [372]) = $3
	$12 = *($4 + [288])
	$11 = (*($4 + [292]) - $12)
	if ( ((int_32)$11 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($3, $12, $11)
	$3 = (*($4 + [372]) + $11)
	*($4 + [372]) = $3
	
.LABEL $label$7
	*(($11 = (($4 + [336]) + [24]))) = *(($2 + [24]))
	*(($12 = (($4 + [336]) + [16]))) = *(($2 + [16]))
	*($4 + [336]) = *($2)
	*($4 + [344]) = *(($2 + [8]))
	*((($4 + [384]) + [24])) = *($11)
	*((($4 + [384]) + [16])) = *($12)
	*($4 + [392]) = *($4 + [344])
	*($4 + [384]) = *($4 + [336])
	$11 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$8 }
	$6 = *((*($11) + $6))
	
.LABEL $label$8
	*($4 + [456]) = [0]
	*($4 + [448]) = (int_64)0
	$2 = ($3 - *($4 + [368]))
	if ( ($2 == 0) ){ goto $label$9 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$5 }
	$2 = CALL _Znwj($2)
	*(($4 + [456])) = ($2 + ($3 << [3]))
	*($4 + [448]) = $2
	*($4 + [452]) = $2
	$5 = *($4 + [368])
	$3 = (*($4 + [372]) - $5)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $5, $3)
	*($4 + [452]) = ($2 + $3)
	
.LABEL $label$9
	$0 = *((($4 + [384]) + [24]))
	*((($4 + [416]) + [24])) = $0
	$1 = *((($4 + [384]) + [16]))
	*((($4 + [416]) + [16])) = $1
	*(($4 + [16])) = $1
	*(($4 + [24])) = $0
	$0 = *($4 + [392])
	*($4 + [424]) = $0
	$1 = *($4 + [384])
	*($4) = $1
	*($4 + [416]) = $1
	*($4 + [8]) = $0
	CALL void $11((int_32 ($4 + [448])), (int_32 $4), (int_32 $6))
	$2 = *($4 + [448])
	if ( ($2 == 0) ){ goto $label$10 }
	*($4 + [452]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$10
	$2 = *($4 + [368])
	if ( ($2 == 0) ){ goto $label$11 }
	*($4 + [372]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	if ( ($8 <= [513]) ){ goto $label$12 }
	CALL $749($7)
	
.LABEL $label$12
	CALL $24($10)
	$2 = *($4 + [288])
	if ( ($2 == 0) ){ goto $label$13 }
	*($4 + [292]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$13
	$global$0 = ($4 + [464])
	return [1]
	
.LABEL $label$6
	CALL $727(($4 + [368]))
	
.LABEL $label$5
	CALL $727(($4 + [448]))
	(unreachable)
	return (unreachable)
}

void .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	CALL $110($2)
	if ( (*($1 + [25]) <= [101]) ){ goto $label$1 }
	CALL eosio_assert([0], [22510])
	
.LABEL $label$1
	if ( (*($1 + [26]) <= [101]) ){ goto $label$2 }
	CALL eosio_assert([0], [22534])
	
.LABEL $label$2
	if ( (uint_64)(*($1 + [16]) <= (int_64)100000) ){ goto $label$3 }
	CALL eosio_assert([0], [22556])
	
.LABEL $label$3
	*($2 + [40]) = $1
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$4 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$4
	CALL $207(($2 + [32]), ($3 + [120]), *($1))
	$3 = *([0] + [8632])
	if ( ((int_64)*($1 + [32]) == (int_64)0) ){ goto $label$9 }
	if ( ($3 == 0) ){ goto $label$8 }
	$3 = ($3 + [120])
	if ( (*($2 + [36]) == 0) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	if ( $3 ){ goto $label$10 }
	$1 = CALL _Znwj([280])
	$3 = CALL $111($1)
	*([0] + [8632]) = $1
	
.LABEL $label$10
	$5 = *($2 + [32])
	$1 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $1) ){ goto $label$11 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$11
	$3 = ($3 + [120])
	$4 = CALL db_next_i64(*($1 + [68]), ($2 + [48]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	CALL $238((CASTING uint_32)(uint_64 $5), $4)
	
.LABEL $label$12
	CALL $239($3, $1)
	goto $label$5 
	
.LABEL $label$8
	$1 = CALL _Znwj([280])
	CALL $111($1)
	*([0] + [8632]) = $1
	$4 = *($2 + [36])
	if ( ($1 == 0) ){ goto $label$13 }
	$3 = ($1 + [120])
	if ( $4 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$13
	$1 = CALL _Znwj([280])
	CALL $111($1)
	*([0] + [8632]) = $1
	$3 = ($1 + [120])
	if ( $4 ){ goto $label$6 }
	
.LABEL $label$7
	*($2 + [16]) = [8617]
	*($2 + [20]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [16])
	*($2 + [72]) = *(CALL $10(($2 + [24]), ($2 + [8])))
	if ( ((int_64)*($3) == (int_64)CALL current_receiver()) ){ goto $label$14 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$14
	*($2 + [48]) = $3
	*($2 + [52]) = ($2 + [40])
	*($2 + [56]) = ($2 + [72])
	*(($1 = CALL _Znwj([80])) + [12]) = [0]
	*($1 + [4 align=4]) = (int_64)0
	*($1 + [32]) = (int_64)0
	*($1 + [40 align=4]) = (int_64)0
	*($1 + [48]) = [0]
	*($1 + [64]) = $3
	CALL $240(($2 + [48]), $1)
	*($2 + [64]) = $1
	$5 = *($1)
	*($2 + [48]) = $5
	$6 = *($1 + [68])
	*($2 + [44]) = $6
	$7 = ($3 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($3 + [32]))) ){ goto $label$16 }
	*($4 + [8]) = $5
	*($4 + [16]) = $6
	*($2 + [64]) = [0]
	*($4) = $1
	*($7) = ($4 + [24])
	goto $label$15 
	
.LABEL $label$16
	CALL $241(($3 + [24]), ($2 + [64]), ($2 + [48]), ($2 + [44]))
	
.LABEL $label$15
	$1 = *($2 + [64])
	*($2 + [64]) = [0]
	if ( ($1 == 0) ){ goto $label$5 }
	$3 = *($1 + [40])
	if ( ($3 == 0) ){ goto $label$17 }
	*(($1 + [44])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$17
	if ( ((*($1 + [4]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*(($1 + [12])))
	
.LABEL $label$18
	CALL _ZdlPv($1)
	goto $label$5 
	
.LABEL $label$6
	$1 = *($2 + [36])
	if ( $1 ){ goto $label$19 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$19
	CALL $242($3, $1, ($2 + [40]))
	
.LABEL $label$5
	$global$0 = ($2 + [80])
}

int_32 .FUNC $52 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$3 = ($global$0 - [448])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [256]) + [48]))) = (int_64)0
	*(($4 + [312])) = (int_64)0
	*(($8 = (($4 + [256]) + [24]))) = (int_64)0
	*(($9 = (($4 + [256]) + [16]))) = (int_64)0
	*((($4 + [256]) + [8])) = (int_64)0
	*(($10 = (($4 + [256]) + [32]))) = (int_64)0
	*(($11 = (($4 + [256]) + [40]))) = (int_64)0
	*($3) = [0]
	*($4 + [256]) = (int_64)0
	*($4 + [260]) = [0]
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $7)
	CALL $237(($4 + [240]), ($4 + [256]))
	$3 = *($4 + [248])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$12 = *($4 + [240])
	*($4 + [8]) = $12
	*($4 + [24]) = $12
	$13 = CALL $20(($4 + [40]), $0, $1, ($4 + [8]))
	*($4 + [320]) = *($4 + [256])
	$14 = CALL $709((($4 + [320]) | [4]), (($4 + [256]) | [4]))
	*((($4 + [320]) + [48])) = [0]
	*((($4 + [320]) + [32])) = *($10)
	*((($4 + [320]) + [24])) = *($8)
	*($4 + [360]) = (int_64)0
	*($4 + [336]) = *($9)
	$3 = (*(($4 + [300])) - *($11))
	$8 = ((int_32)$3 / (int_32)[48])
	if ( ($3 == 0) ){ goto $label$6 }
	if ( ((uint_32)$8 >= (uint_32)[89478486]) ){ goto $label$5 }
	$3 = CALL _Znwj($3)
	*((($4 + [320]) + [40])) = $3
	*(($9 = (($4 + [320]) + [44]))) = $3
	*((($4 + [320]) + [48])) = ($3 + ((int_32)$8 * (int_32)[48]))
	$10 = *((($4 + [256]) + [40]))
	$8 = (*((($4 + [256]) + [44])) - $10)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($3, $10, $8)
	*($9) = (*($9) + ((int_32)((uint_32)$8 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$6
	$3 = (($4 + [320]) + [16])
	*((($4 + [320]) + [60])) = *((($4 + [256]) + [60]))
	*($4 + [372 align=4]) = *($4 + [308 align=4])
	$8 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($8) + $6))
	
.LABEL $label$7
	*($4 + [384]) = *($4 + [320])
	$9 = CALL $709((($4 + [384]) | [4]), $14)
	*((($4 + [384]) + [48])) = [0]
	*(($4 + [416])) = *(($3 + [16]))
	*(($4 + [408])) = *(($3 + [8]))
	*($4 + [424]) = (int_64)0
	*($4 + [400]) = *($3)
	$3 = (*(($4 + [364])) - *((($4 + [320]) + [40])))
	$5 = ((int_32)$3 / (int_32)[48])
	if ( ($3 == 0) ){ goto $label$8 }
	if ( ((uint_32)$5 >= (uint_32)[89478486]) ){ goto $label$4 }
	$3 = CALL _Znwj($3)
	*((($4 + [384]) + [40])) = $3
	*(($10 = (($4 + [384]) + [44]))) = $3
	*((($4 + [384]) + [48])) = ($3 + ((int_32)$5 * (int_32)[48]))
	$11 = *((($4 + [320]) + [40]))
	$5 = (*((($4 + [320]) + [44])) - $11)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($3, $11, $5)
	*($10) = (*($10) + ((int_32)((uint_32)$5 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$8
	$3 = ($4 + [372])
	*(($4 + [444])) = *(($3 + [8]))
	*($4 + [436 align=4]) = *($3)
	CALL void $8((int_32 ($4 + [384])), (int_32 $6))
	$3 = *($4 + [424])
	if ( ($3 == 0) ){ goto $label$9 }
	*(($4 + [428])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$9
	if ( ((*($9) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($4 + [396])))
	
.LABEL $label$10
	$3 = *($4 + [360])
	if ( ($3 == 0) ){ goto $label$11 }
	*(($4 + [364])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$11
	if ( ((*($14) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($4 + [332])))
	
.LABEL $label$12
	if ( ($7 <= [513]) ){ goto $label$13 }
	CALL $749($2)
	
.LABEL $label$13
	CALL $24($13)
	$2 = *(($4 + [296]))
	if ( ($2 == 0) ){ goto $label$14 }
	*(($4 + [300])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$14
	if ( ((*($4 + [260]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*(($4 + [268])))
	
.LABEL $label$15
	$global$0 = ($4 + [448])
	return [1]
	
.LABEL $label$5
	CALL $727((($4 + [320]) + [40]))
	
.LABEL $label$4
	CALL $727((($4 + [384]) + [40]))
	(unreachable)
	return (unreachable)
}

void .FUNC $53 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$1 = ($global$0 - [464])
	$global$0 = $1
	*($1 + [400]) = [8617]
	*($1 + [404]) = CALL $743([8617])
	*($1 + [120]) = *($1 + [400])
	CALL require_auth(*(CALL $10(($1 + [408]), ($1 + [120]))))
	$2 = ($0 + [160])
	CALL $229(($1 + [376]), $2)
	CALL $7(($1 + [360]), (($1 + [376]) + [8]), [100])
	*($1 + [352]) = [0]
	*($1 + [344]) = (int_64)0
	$3 = *($1 + [364])
	$0 = *($1 + [360])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$3 }
	$4 = (($1 + [248]) | [1])
	
.LOOP $label$4:
	if ( (int_64)(*($0 + [8]) == 0) ){ goto $label$5 }
	$5 = ($0 + [8])
	$6 = *($1 + [348])
	if ( ((int_32)$6 == (int_32)*((($1 + [344]) + [8]))) ){ goto $label$7 }
	*($6) = *($5)
	*(($6 + [8])) = *(($0 + [16]))
	*($1 + [348]) = ($6 + [16])
	goto $label$6 
	
.LABEL $label$7
	CALL $161(($1 + [344]), $5)
	
.LABEL $label$6
	*($1 + [328]) = [8617]
	*($1 + [332]) = CALL $743([8617])
	*($1 + [112]) = *($1 + [328])
	CALL $10(($1 + [336]), ($1 + [112]))
	*($1 + [312]) = [8617]
	*($1 + [316]) = CALL $743([8617])
	*($1 + [104]) = *($1 + [312])
	CALL $10(($1 + [320]), ($1 + [104]))
	*($1 + [296]) = [8414]
	*($1 + [300]) = CALL $743([8414])
	*($1 + [96]) = *($1 + [296])
	CALL $10(($1 + [304]), ($1 + [96]))
	*($1 + [280]) = [22135]
	*($1 + [284]) = CALL $743([22135])
	*($1 + [88]) = *($1 + [280])
	CALL $10(($1 + [288]), ($1 + [88]))
	$7 = *(($5 + [8]))
	$8 = *($5)
	*(($9 = (($1 + [248]) + [8]))) = [0]
	*(($10 = (($1 + [264]) + [8]))) = $7
	*($1 + [248]) = (int_64)0
	*($1 + [264]) = $8
	$7 = *($1 + [288])
	$8 = *($1 + [304])
	$11 = *($1 + [320])
	$5 = CALL $743([22148])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$10 }
	*($1 + [248]) = ($5 << [1])
	$6 = $4
	if ( $5 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$12 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($12)
	*($9) = $6
	*($1 + [248]) = ($12 | [1])
	*($1 + [252]) = $5
	
.LABEL $label$9
	CALL memcpy($6, [22148], $5)
	
.LABEL $label$8
	*(($6 + $5)) = [0]
	$13 = *($0)
	$14 = *($1 + [336])
	*(($5 = (($1 + [192]) + [8]))) = $8
	*(($6 = (($1 + [192]) + [16]))) = $7
	$7 = *($10)
	*(($12 = (($1 + [448]) + [8]))) = $7
	*((($1 + [416]) + [8])) = $7
	*($1 + [192]) = $11
	$7 = *($1 + [264])
	*($1 + [448]) = $7
	*($1 + [416]) = $7
	$10 = CALL $709(($1 + [432]), ($1 + [248]))
	*((($1 + [64]) + [16])) = *($6)
	*((($1 + [64]) + [8])) = *($5)
	*((($1 + [48]) + [8])) = *($12)
	*($1 + [64]) = *($1 + [192])
	*($1 + [48]) = *($1 + [448])
	CALL $9($14, ($1 + [64]), ($1 + [48]), $10, $13)
	if ( ((*($1 + [432]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*((($1 + [432]) + [8])))
	
.LABEL $label$11
	if ( ((*($1 + [248]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($9))
	
.LABEL $label$5
	$0 = ($0 + [24])
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$4 }
	if ( ((int_32)*($1 + [348]) == (int_32)*($1 + [344])) ){ goto $label$3 }
	*($1 + [232]) = [8617]
	*($1 + [236]) = CALL $743([8617])
	*($1 + [40]) = *($1 + [232])
	CALL $120($2, ($1 + [376]), *(CALL $10(($1 + [240]), ($1 + [40]))))
	*($1 + [176]) = [8617]
	*($1 + [180]) = CALL $743([8617])
	*($1 + [32]) = *($1 + [176])
	$0 = CALL $10(($1 + [184]), ($1 + [32]))
	*($1 + [160]) = [8344]
	*($1 + [164]) = CALL $743([8344])
	*($1 + [24]) = *($1 + [160])
	$7 = *(CALL $10(($1 + [168]), ($1 + [24])))
	$8 = *($0)
	*($1 + [144]) = [22135]
	*($1 + [148]) = CALL $743([22135])
	*($1 + [16]) = *($1 + [144])
	$12 = CALL $10(($1 + [152]), ($1 + [16]))
	*($1 + [128]) = [22199]
	*($1 + [132]) = CALL $743([22199])
	*($1 + [8]) = *($1 + [128])
	$3 = CALL $10(($1 + [136]), ($1 + [8]))
	$0 = [0]
	*($1 + [440]) = [0]
	*($1 + [432]) = (int_64)0
	$9 = [0]
	$5 = [0]
	$6 = [0]
	$10 = (*($1 + [348]) - *($1 + [344]))
	if ( ($10 == 0) ){ goto $label$12 }
	$6 = int_32($10 >> [4])
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$1 }
	$5 = CALL _Znwj($10)
	$9 = ($5 + ($6 << [4]))
	*(($4 = ($1 + [440]))) = $9
	*($1 + [432]) = $5
	*($1 + [436]) = $5
	$10 = *($1 + [344])
	$6 = (*($1 + [348]) - $10)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$13 }
	CALL memcpy($5, $10, $6)
	$5 = (*($1 + [436]) + $6)
	*($1 + [436]) = $5
	$9 = *($4)
	$6 = *($1 + [432])
	goto $label$12 
	
.LABEL $label$13
	$6 = $5
	
.LABEL $label$12
	*(($1 + [440])) = [0]
	*($1 + [424]) = $9
	*($1 + [432]) = (int_64)0
	*($1 + [192]) = *($12)
	*($1 + [200]) = *($3)
	*($1 + [420]) = $5
	*($1 + [416]) = $6
	*(($9 = CALL _Znwj([16]))) = $8
	*($9 + [8]) = $7
	*(($1 + [228])) = [0]
	$10 = ($9 + [16])
	*(($1 + [216])) = $10
	*(($1 + [212])) = $10
	*($1 + [208]) = $9
	*($1 + [220 align=4]) = (int_64)0
	$12 = ($5 - $6)
	$7 = (CASTING uint_64)(uint_32 int_32($12 >> [4]))
	$10 = ($1 + [220])
	
.LOOP $label$14:
	$0 = ($0 + [-1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$14 }
	$9 = [0]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$17 }
	$5 = [0]
	$6 = ($12 & [-16])
	if ( ((int_32)$6 == (int_32)$0) ){ goto $label$15 }
	$0 = ($6 - $0)
	goto $label$16 
	
.LABEL $label$17
	$0 = ([0] - $0)
	
.LABEL $label$16
	CALL $11($10, $0)
	$9 = *(($1 + [224]))
	$5 = *(($1 + [220]))
	
.LABEL $label$15
	*($1 + [452]) = $5
	*($1 + [448]) = $5
	*($1 + [456]) = $9
	CALL $230(($1 + [448]), ($1 + [416]))
	CALL $13(($1 + [448]), ($1 + [192]))
	$0 = *($1 + [448])
	CALL send_inline($0, (*($1 + [452]) - $0))
	$0 = *($1 + [448])
	if ( ($0 == 0) ){ goto $label$18 }
	*($1 + [452]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$18
	$0 = *($1 + [220])
	if ( ($0 == 0) ){ goto $label$19 }
	*(($1 + [224])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$19
	$0 = *($1 + [208])
	if ( ($0 == 0) ){ goto $label$20 }
	*(($1 + [212])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$20
	$0 = *($1 + [416])
	if ( ($0 == 0) ){ goto $label$21 }
	*($1 + [420]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$21
	$0 = *($1 + [432])
	if ( ($0 == 0) ){ goto $label$3 }
	*($1 + [436]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$3
	CALL $106($1)
	$0 = *($1 + [344])
	if ( ($0 == 0) ){ goto $label$22 }
	*($1 + [348]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$22
	$0 = *($1 + [360])
	if ( ($0 == 0) ){ goto $label$23 }
	*($1 + [364]) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$23
	$0 = *($1 + [384])
	if ( ($0 == 0) ){ goto $label$24 }
	*(($1 + [388])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$24
	$global$0 = ($1 + [464])
	return (unreachable)
	
.LABEL $label$2
	CALL $708(($1 + [248]))
	
.LABEL $label$1
	CALL $727(($1 + [432]))
	(unreachable)
}

int_32 .FUNC $54 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	$3 = ($2 + $7)
	*(($4 + [16])) = $3
	*($4 + [28]) = $2
	*($4 + [24]) = $2
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $20(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $749($2)
	
.LABEL $label$6
	CALL $24($8)
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $55 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	$1 = ($global$0 - [976])
	$global$0 = $1
	$2 = CALL $109(($1 + [520]))
	CALL $110($1)
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$1 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$1
	$4 = ($3 + [160])
	$5 = *(($3 + [188]))
	if ( ((int_32)$5 == (int_32)*(($3 + [184]))) ){ goto $label$4 }
	$3 = *(($5 + [-24]))
	if ( ((int_32)*($3 + [64]) == (int_32)$4) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $3 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$4
	$3 = CALL db_find_i64(*($4), *(($3 + [168])), (int_64)-7297072577464238080, (int_64)-7297072577464238080)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$3 }
	if ( ((int_32)*(CALL $112($4, $3) + [64]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [28728])
	goto $label$2 
	
.LABEL $label$3
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$6 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$6
	*(($1 + [112])) = [0]
	*($1 + [104]) = (int_64)0
	*($1 + [56]) = [0]
	*($1 + [64]) = (int_64)0
	*($1 + [72]) = (int_64)0
	*($1 + [80]) = (int_64)0
	*($1 + [88]) = (int_64)0
	*($1 + [96]) = (int_64)0
	*($1 + [504]) = [8617]
	*($1 + [508]) = CALL $743([8617])
	*($1 + [48]) = *($1 + [504])
	CALL $113(($3 + [160]), ($1 + [56]), *(CALL $10(($1 + [512]), ($1 + [48]))))
	$3 = *($1 + [104])
	if ( ($3 == 0) ){ goto $label$2 }
	*(($1 + [108])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$2
	$3 = ($2 + [40])
	$4 = *(($2 + [68]))
	if ( ((int_32)$4 == (int_32)*(($2 + [64]))) ){ goto $label$9 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [48]) == (int_32)$3) ){ goto $label$10 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$10
	if ( $4 ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$9
	$4 = CALL db_find_i64(*($3), *(($2 + [48])), (int_64)-4812911374179631104, (int_64)-4812911374179631104)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$8 }
	if ( ((int_32)*(CALL $114($3, $4) + [48]) == (int_32)$3) ){ goto $label$7 }
	CALL eosio_assert([0], [28728])
	goto $label$7 
	
.LABEL $label$8
	CALL $115(($1 + [56]))
	*($1 + [96]) = (int_64)2630
	*($1 + [56]) = (int_64)5260
	*($1 + [488]) = [8617]
	*($1 + [492]) = CALL $743([8617])
	*($1 + [40]) = *($1 + [488])
	CALL $116($3, ($1 + [56]), *(CALL $10(($1 + [496]), ($1 + [40]))))
	$3 = *($1 + [76])
	if ( ($3 == 0) ){ goto $label$11 }
	*(($1 + [80])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$3 = *($1 + [64])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($1 + [68])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$6 = ($2 + [120])
	$3 = *(($2 + [148]))
	if ( ((int_32)$3 == (int_32)*(($2 + [144]))) ){ goto $label$14 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [40]) == (int_32)$6) ){ goto $label$15 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$15
	if ( $3 ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	$3 = CALL db_find_i64(*($6), *(($2 + [128])), (int_64)5445039531761205248, (int_64)5445039531761205248)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$13 }
	if ( ((int_32)*(CALL $117($6, $3) + [40]) == (int_32)$6) ){ goto $label$12 }
	CALL eosio_assert([0], [28728])
	goto $label$12 
	
.LABEL $label$13
	CALL $115(($1 + [56]))
	*($1 + [56]) = (int_64)1500
	$7 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$7 = $8
	$5 = $3
	goto $label$19 
	
.LABEL $label$20
	$7 = $8
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$4 = ((int_32)$3 < (int_32)[6])
	$5 = ($3 + [1])
	$3 = $5
	if ( $4 ){ goto $label$21 }
	
.LABEL $label$19
	$3 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [22633])
	
.LABEL $label$16
	*(($3 = *($1 + [76])) + [8]) = (int_64)1397703940
	*($3) = (int_64)500000
	*($1 + [89 align=1]) = [24578]
	*($1 + [472]) = [8617]
	*($1 + [476]) = CALL $743([8617])
	*($1 + [32]) = *($1 + [472])
	CALL $118($6, ($1 + [56]), *(CALL $10(($1 + [480]), ($1 + [32]))))
	$3 = *($1 + [76])
	if ( ($3 == 0) ){ goto $label$22 }
	*(($1 + [80])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$22
	$3 = *($1 + [64])
	if ( ($3 == 0) ){ goto $label$12 }
	*(($1 + [68])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$12
	$3 = ($0 + [160])
	$4 = *(($0 + [188]))
	if ( ((int_32)$4 == (int_32)*(($0 + [184]))) ){ goto $label$25 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [24]) == (int_32)$3) ){ goto $label$26 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$26
	if ( $4 ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$25
	$4 = CALL db_find_i64(*($3), *(($0 + [168])), (int_64)-5915276457178488320, (int_64)-5915276457178488320)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$24 }
	if ( ((int_32)*(CALL $119($3, $4) + [24]) == (int_32)$3) ){ goto $label$23 }
	CALL eosio_assert([0], [28728])
	goto $label$23 
	
.LABEL $label$24
	*(($1 + [72])) = [0]
	*($1 + [64]) = (int_64)0
	*($1 + [960]) = [22135]
	*($1 + [964]) = CALL $743([22135])
	*($1 + [24]) = *($1 + [960])
	CALL $10(($1 + [968]), ($1 + [24]))
	*($1 + [56]) = (int_64)4298345369187365760
	*($1 + [456]) = [8617]
	*($1 + [460]) = CALL $743([8617])
	*($1 + [16]) = *($1 + [456])
	CALL $120($3, ($1 + [56]), *(CALL $10(($1 + [464]), ($1 + [16]))))
	$3 = *($1 + [64])
	if ( ($3 == 0) ){ goto $label$23 }
	*(($1 + [68])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$23
	$3 = ($2 + [400])
	$4 = *(($2 + [428]))
	if ( ((int_32)$4 == (int_32)*(($2 + [424]))) ){ goto $label$29 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [56]) == (int_32)$3) ){ goto $label$30 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$30
	if ( $4 ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$4 = CALL db_find_i64(*($3), *(($2 + [408])), (int_64)-8173740188290908160, (int_64)-8173740188290908160)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$28 }
	if ( ((int_32)*(CALL $121($3, $4) + [56]) == (int_32)$3) ){ goto $label$27 }
	CALL eosio_assert([0], [28728])
	goto $label$27 
	
.LABEL $label$28
	$4 = CALL $122(($1 + [56]))
	*($1 + [440]) = [8617]
	*($1 + [444]) = CALL $743([8617])
	*($1 + [8]) = *($1 + [440])
	CALL $123($3, $4, *(CALL $10(($1 + [448]), ($1 + [8]))))
	$3 = *($4 + [28])
	if ( ($3 == 0) ){ goto $label$31 }
	*(($4 + [32])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$31
	$3 = *($4 + [16])
	if ( ($3 == 0) ){ goto $label$27 }
	*(($4 + [20])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$27
	$3 = ($2 + [200])
	$4 = *(($2 + [228]))
	if ( ((int_32)$4 == (int_32)*(($2 + [224]))) ){ goto $label$34 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [48]) == (int_32)$3) ){ goto $label$35 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$35
	if ( $4 ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$34
	$4 = CALL db_find_i64(*($3), *(($2 + [208])), (int_64)-4293730779636826112, (int_64)-4293730779636826112)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$33 }
	if ( ((int_32)*(CALL $124($3, $4) + [48]) == (int_32)$3) ){ goto $label$32 }
	CALL eosio_assert([0], [28728])
	goto $label$32 
	
.LABEL $label$33
	$4 = CALL $125(($1 + [56]))
	*($1 + [424]) = [8617]
	*($1 + [428]) = CALL $743([8617])
	*($1) = *($1 + [424])
	CALL $126($3, $4, *(CALL $10(($1 + [432]), $1)))
	$3 = *($4 + [36])
	if ( ($3 == 0) ){ goto $label$36 }
	*(($4 + [40])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$36
	$3 = *($4 + [20])
	if ( ($3 == 0) ){ goto $label$37 }
	*(($4 + [24])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$37
	$3 = *($4 + [8])
	if ( ($3 == 0) ){ goto $label$32 }
	*(($4 + [12])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$32
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$38 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$38
	$3 = CALL $127(($1 + [56]), $3)
	CALL $128($3)
	CALL $129($3)
	CALL $130($2)
	$global$0 = ($1 + [976])
}

void .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$5 = ($global$0 - [64])
	$global$0 = $5
	CALL $110($5)
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$1 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$1
	$8 = *(($1 + [24]))
	*((($5 + [32]) + [24])) = $8
	$9 = *(($1 + [16]))
	*((($5 + [32]) + [16])) = $9
	$10 = *(($1 + [8]))
	$11 = *($1)
	*(($5 + [16])) = $9
	*(($5 + [24])) = $8
	*($5 + [32]) = $11
	*($5 + [40]) = $10
	*($5) = $11
	*($5 + [8]) = $10
	CALL $138($6, $5, $2, $3, $4)
	$global$0 = ($5 + [64])
}

int_32 .FUNC $57 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	$3 = ($global$0 - [448])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [288]) + [24]))) = (int_64)0
	*(($8 = (($4 + [288]) + [16]))) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [320]) = [0]
	*($4 + [328]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [276]) = $2
	*($4 + [272]) = $2
	*($4 + [280]) = ($2 + $7)
	*($4 + [416]) = ($4 + [272])
	*($4 + [72]) = ($4 + [288])
	CALL $137(($4 + [72]), ($4 + [416]))
	$9 = *($4 + [280])
	*((($4 + [56]) + [8])) = $9
	*((($4 + [40]) + [8])) = $9
	$10 = *($4 + [272])
	*($4 + [40]) = $10
	*($4 + [56]) = $10
	$9 = CALL $20(($4 + [72]), $0, $1, ($4 + [40]))
	*(($11 = (($4 + [352]) + [24]))) = *($3)
	*(($3 = (($4 + [352]) + [16]))) = *($8)
	*($4 + [360]) = *($4 + [296])
	*($4 + [352]) = *($4 + [288])
	$8 = *($4 + [320])
	$0 = *($4 + [328])
	$1 = *($4 + [336])
	*((($4 + [384]) + [24])) = *($11)
	*((($4 + [384]) + [16])) = *($3)
	*($4 + [392]) = *($4 + [360])
	*($4 + [384]) = *($4 + [352])
	$3 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$10 = *((($4 + [384]) + [24]))
	*((($4 + [416]) + [24])) = $10
	$12 = *((($4 + [384]) + [16]))
	*((($4 + [416]) + [16])) = $12
	*(($4 + [16])) = $12
	*(($4 + [24])) = $10
	$10 = *($4 + [392])
	*($4 + [424]) = $10
	$12 = *($4 + [384])
	*($4) = $12
	*($4 + [416]) = $12
	*($4 + [8]) = $10
	CALL void $3((int_32 $4), (int_32 $8), (int_32 $0), (int_64 $1), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $749($2)
	
.LABEL $label$5
	CALL $24($9)
	$global$0 = ($4 + [448])
	return [1]
}

void .FUNC $453 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_64 $18
	$2 = ($global$0 - [544])
	$global$0 = $2
	$3 = *($1 + [60])
	if ( ((uint_32)$3 > (uint_32)[12]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$10
	CALL $367(($2 + [480]), $0, *($1), $3)
	$4 = *($2 + [484])
	$3 = *($2 + [480])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$11 }
	$5 = (($2 + [424]) | [1])
	$6 = (($2 + [360]) | [1])
	$7 = (($2 + [360]) + [8])
	$8 = (($2 + [240]) + [16])
	
.LOOP $label$12:
	CALL $368(($2 + [472]), $0, *($3))
	if ( *($2 + [476]) ){ goto $label$13 }
	CALL $454(($2 + [360]), [29088], $3)
	$1 = $6
	if ( ((*($2 + [360]) & [1]) == 0) ){ goto $label$14 }
	$1 = *($7)
	CALL _ZdlPv($1)
	
.LABEL $label$14
	CALL eosio_assert([0], $1)
	
.LABEL $label$13
	*($2 + [456]) = [8617]
	*($2 + [460]) = CALL $743([8617])
	*($2 + [120]) = *($2 + [456])
	CALL $10(($2 + [464]), ($2 + [120]))
	*(($9 = (($2 + [424]) + [8]))) = [0]
	$1 = *($2 + [476])
	*(($10 = (($2 + [240]) + [8]))) = *(($1 + [24]))
	*($8) = *(($1 + [32]))
	*(($11 = (($2 + [440]) + [8]))) = *(($1 + [56]))
	*($2 + [424]) = (int_64)0
	*($2 + [240]) = *($1 + [16])
	*($2 + [440]) = *($1 + [48])
	$1 = CALL $743([29110])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$17 }
	*($2 + [424]) = ($1 << [1])
	$12 = $5
	if ( $1 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$13 = (($1 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($9) = $12
	*($2 + [424]) = ($13 | [1])
	*($2 + [428]) = $1
	
.LABEL $label$16
	CALL memcpy($12, [29110], $1)
	
.LABEL $label$15
	*(($12 + $1)) = [0]
	$14 = CALL $15(*((*($2 + [476]) + [56])))
	$15 = *($2 + [464])
	$16 = *($11)
	*((($2 + [496]) + [8])) = $16
	$17 = *($10)
	*((($2 + [320]) + [8])) = $17
	$18 = *($8)
	*((($2 + [320]) + [16])) = $18
	*($7) = $17
	*(($1 = (($2 + [360]) + [16]))) = $18
	*(($12 = (($2 + [528]) + [8]))) = $16
	$16 = *($2 + [440])
	*($2 + [496]) = $16
	$17 = *($2 + [240])
	*($2 + [320]) = $17
	*($2 + [360]) = $17
	*($2 + [528]) = $16
	$10 = CALL $709(($2 + [512]), ($2 + [424]))
	*((($2 + [96]) + [16])) = *($1)
	*((($2 + [96]) + [8])) = *($7)
	*((($2 + [80]) + [8])) = *($12)
	*($2 + [96]) = *($2 + [360])
	*($2 + [80]) = *($2 + [528])
	CALL $9($15, ($2 + [96]), ($2 + [80]), $10, $14)
	if ( ((*($2 + [512]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*((($2 + [512]) + [8])))
	
.LABEL $label$18
	if ( ((*($2 + [424]) & [1]) == 0) ){ goto $label$19 }
	CALL _ZdlPv(*($9))
	
.LABEL $label$19
	$14 = *($2 + [472])
	$1 = (CASTING uint_32)(uint_64 (uint_64)$14 >> (uint_64)(int_64)32)
	if ( $1) ){ goto $label$20 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$20
	$12 = CALL db_next_i64(*($1 + [96]), ($2 + [360]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$21 }
	CALL $398((CASTING uint_32)(uint_64 $14), $12)
	
.LABEL $label$21
	CALL $399($0, $1)
	$3 = ($3 + [8])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$12 }
	$3 = *($2 + [480])
	
.LABEL $label$11
	if ( ($3 == 0) ){ goto $label$5 }
	*($2 + [484]) = $3
	CALL _ZdlPv($3)
	goto $label$5 
	
.LABEL $label$9
	CALL $367(($2 + [480]), $0, *($1), $3)
	$4 = *($2 + [484])
	$3 = *($2 + [480])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$22 }
	$7 = ($0 + [160])
	$5 = (($2 + [424]) | [1])
	$6 = (($2 + [360]) | [1])
	$0 = (($2 + [360]) + [8])
	$8 = (($2 + [240]) + [16])
	
.LOOP $label$23:
	CALL $370(($2 + [472]), $7, *($3))
	if ( *($2 + [476]) ){ goto $label$24 }
	CALL $454(($2 + [360]), [29088], $3)
	$1 = $6
	if ( ((*($2 + [360]) & [1]) == 0) ){ goto $label$25 }
	$1 = *($0)
	CALL _ZdlPv($1)
	
.LABEL $label$25
	CALL eosio_assert([0], $1)
	
.LABEL $label$24
	*($2 + [456]) = [8617]
	*($2 + [460]) = CALL $743([8617])
	*($2 + [168]) = *($2 + [456])
	CALL $10(($2 + [464]), ($2 + [168]))
	*(($9 = (($2 + [424]) + [8]))) = [0]
	$1 = *($2 + [476])
	*(($10 = (($2 + [240]) + [8]))) = *(($1 + [24]))
	*($8) = *(($1 + [32]))
	*(($11 = (($2 + [440]) + [8]))) = *(($1 + [56]))
	*($2 + [424]) = (int_64)0
	*($2 + [240]) = *($1 + [16])
	*($2 + [440]) = *($1 + [48])
	$1 = CALL $743([29110])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$28 }
	*($2 + [424]) = ($1 << [1])
	$12 = $5
	if ( $1 ){ goto $label$27 }
	goto $label$26 
	
.LABEL $label$28
	$13 = (($1 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($9) = $12
	*($2 + [424]) = ($13 | [1])
	*($2 + [428]) = $1
	
.LABEL $label$27
	CALL memcpy($12, [29110], $1)
	
.LABEL $label$26
	*(($12 + $1)) = [0]
	$14 = CALL $15(*((*($2 + [476]) + [56])))
	$15 = *($2 + [464])
	$16 = *($11)
	*((($2 + [496]) + [8])) = $16
	$17 = *($10)
	*((($2 + [320]) + [8])) = $17
	$18 = *($8)
	*((($2 + [320]) + [16])) = $18
	*($0) = $17
	*(($1 = (($2 + [360]) + [16]))) = $18
	*(($12 = (($2 + [528]) + [8]))) = $16
	$16 = *($2 + [440])
	*($2 + [496]) = $16
	$17 = *($2 + [240])
	*($2 + [320]) = $17
	*($2 + [360]) = $17
	*($2 + [528]) = $16
	$10 = CALL $709(($2 + [512]), ($2 + [424]))
	*((($2 + [144]) + [16])) = *($1)
	*((($2 + [144]) + [8])) = *($0)
	*((($2 + [128]) + [8])) = *($12)
	*($2 + [144]) = *($2 + [360])
	*($2 + [128]) = *($2 + [528])
	CALL $9($15, ($2 + [144]), ($2 + [128]), $10, $14)
	if ( ((*($2 + [512]) & [1]) == 0) ){ goto $label$29 }
	CALL _ZdlPv(*((($2 + [512]) + [8])))
	
.LABEL $label$29
	if ( ((*($2 + [424]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*($9))
	
.LABEL $label$30
	$14 = *($2 + [472])
	$1 = (CASTING uint_32)(uint_64 (uint_64)$14 >> (uint_64)(int_64)32)
	if ( $1) ){ goto $label$31 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$31
	$12 = CALL db_next_i64(*($1 + [80]), ($2 + [360]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$32 }
	CALL $417((CASTING uint_32)(uint_64 $14), $12)
	
.LABEL $label$32
	CALL $418($7, $1)
	$3 = ($3 + [8])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$23 }
	$3 = *($2 + [480])
	
.LABEL $label$22
	if ( ($3 == 0) ){ goto $label$5 }
	*($2 + [484]) = $3
	CALL _ZdlPv($3)
	goto $label$5 
	
.LABEL $label$8
	CALL $367(($2 + [480]), $0, *($1), [10])
	$4 = *($2 + [484])
	$3 = *($2 + [480])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$33 }
	$7 = ($0 + [280])
	$5 = (($2 + [424]) | [1])
	$6 = (($2 + [360]) | [1])
	$0 = (($2 + [360]) + [8])
	$8 = (($2 + [240]) + [16])
	
.LOOP $label$34:
	CALL $377(($2 + [472]), $7, *($3))
	if ( *($2 + [476]) ){ goto $label$35 }
	CALL $454(($2 + [360]), [29088], $3)
	$1 = $6
	if ( ((*($2 + [360]) & [1]) == 0) ){ goto $label$36 }
	$1 = *($0)
	CALL _ZdlPv($1)
	
.LABEL $label$36
	CALL eosio_assert([0], $1)
	
.LABEL $label$35
	*($2 + [456]) = [8617]
	*($2 + [460]) = CALL $743([8617])
	*($2 + [216]) = *($2 + [456])
	CALL $10(($2 + [464]), ($2 + [216]))
	*(($9 = (($2 + [424]) + [8]))) = [0]
	$1 = *($2 + [476])
	*(($10 = (($2 + [240]) + [8]))) = *(($1 + [24]))
	*($8) = *(($1 + [32]))
	*(($11 = (($2 + [440]) + [8]))) = *(($1 + [56]))
	*($2 + [424]) = (int_64)0
	*($2 + [240]) = *($1 + [16])
	*($2 + [440]) = *($1 + [48])
	$1 = CALL $743([29110])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$39 }
	*($2 + [424]) = ($1 << [1])
	$12 = $5
	if ( $1 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$39
	$13 = (($1 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($9) = $12
	*($2 + [424]) = ($13 | [1])
	*($2 + [428]) = $1
	
.LABEL $label$38
	CALL memcpy($12, [29110], $1)
	
.LABEL $label$37
	*(($12 + $1)) = [0]
	$14 = CALL $15(*((*($2 + [476]) + [56])))
	$15 = *($2 + [464])
	$16 = *($11)
	*((($2 + [496]) + [8])) = $16
	$17 = *($10)
	*((($2 + [320]) + [8])) = $17
	$18 = *($8)
	*((($2 + [320]) + [16])) = $18
	*($0) = $17
	*(($1 = (($2 + [360]) + [16]))) = $18
	*(($12 = (($2 + [528]) + [8]))) = $16
	$16 = *($2 + [440])
	*($2 + [496]) = $16
	$17 = *($2 + [240])
	*($2 + [320]) = $17
	*($2 + [360]) = $17
	*($2 + [528]) = $16
	$10 = CALL $709(($2 + [512]), ($2 + [424]))
	*((($2 + [192]) + [16])) = *($1)
	*((($2 + [192]) + [8])) = *($0)
	*((($2 + [176]) + [8])) = *($12)
	*($2 + [192]) = *($2 + [360])
	*($2 + [176]) = *($2 + [528])
	CALL $9($15, ($2 + [192]), ($2 + [176]), $10, $14)
	if ( ((*($2 + [512]) & [1]) == 0) ){ goto $label$40 }
	CALL _ZdlPv(*((($2 + [512]) + [8])))
	
.LABEL $label$40
	if ( ((*($2 + [424]) & [1]) == 0) ){ goto $label$41 }
	CALL _ZdlPv(*($9))
	
.LABEL $label$41
	$14 = *($2 + [472])
	$1 = (CASTING uint_32)(uint_64 (uint_64)$14 >> (uint_64)(int_64)32)
	if ( $1) ){ goto $label$42 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$42
	$12 = CALL db_next_i64(*($1 + [88]), ($2 + [360]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$43 }
	CALL $430((CASTING uint_32)(uint_64 $14), $12)
	
.LABEL $label$43
	CALL $431($7, $1)
	$3 = ($3 + [8])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$34 }
	$3 = *($2 + [480])
	
.LABEL $label$33
	if ( ($3 == 0) ){ goto $label$5 }
	*($2 + [484]) = $3
	CALL _ZdlPv($3)
	goto $label$5 
	
.LABEL $label$7
	CALL $367(($2 + [480]), $0, *($1), [0])
	$4 = *($2 + [484])
	$3 = *($2 + [480])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$44 }
	$7 = ($0 + [80])
	$5 = (($2 + [424]) | [1])
	$6 = (($2 + [360]) | [1])
	$0 = (($2 + [360]) + [8])
	$8 = (($2 + [240]) + [16])
	
.LOOP $label$45:
	CALL $372(($2 + [472]), $7, *($3))
	if ( *($2 + [476]) ){ goto $label$46 }
	CALL $454(($2 + [360]), [29088], $3)
	$1 = $6
	if ( ((*($2 + [360]) & [1]) == 0) ){ goto $label$47 }
	$1 = *($0)
	CALL _ZdlPv($1)
	
.LABEL $label$47
	CALL eosio_assert([0], $1)
	
.LABEL $label$46
	*($2 + [456]) = [8617]
	*($2 + [460]) = CALL $743([8617])
	*($2 + [72]) = *($2 + [456])
	CALL $10(($2 + [464]), ($2 + [72]))
	*(($9 = (($2 + [424]) + [8]))) = [0]
	$1 = *($2 + [476])
	*(($10 = (($2 + [240]) + [8]))) = *(($1 + [24]))
	*($8) = *(($1 + [32]))
	*(($11 = (($2 + [440]) + [8]))) = *(($1 + [56]))
	*($2 + [424]) = (int_64)0
	*($2 + [240]) = *($1 + [16])
	*($2 + [440]) = *($1 + [48])
	$1 = CALL $743([29110])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$50 }
	*($2 + [424]) = ($1 << [1])
	$12 = $5
	if ( $1 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$13 = (($1 + [16]) & [-16])
	$12 = CALL _Znwj($13)
	*($9) = $12
	*($2 + [424]) = ($13 | [1])
	*($2 + [428]) = $1
	
.LABEL $label$49
	CALL memcpy($12, [29110], $1)
	
.LABEL $label$48
	*(($12 + $1)) = [0]
	$14 = CALL $15(*((*($2 + [476]) + [56])))
	$15 = *($2 + [464])
	$16 = *($11)
	*((($2 + [496]) + [8])) = $16
	$17 = *($10)
	*((($2 + [320]) + [8])) = $17
	$18 = *($8)
	*((($2 + [320]) + [16])) = $18
	*($0) = $17
	*(($1 = (($2 + [360]) + [16]))) = $18
	*(($12 = (($2 + [528]) + [8]))) = $16
	$16 = *($2 + [440])
	*($2 + [496]) = $16
	$17 = *($2 + [240])
	*($2 + [320]) = $17
	*($2 + [360]) = $17
	*($2 + [528]) = $16
	$10 = CALL $709(($2 + [512]), ($2 + [424]))
	*((($2 + [48]) + [16])) = *($1)
	*((($2 + [48]) + [8])) = *($0)
	*((($2 + [32]) + [8])) = *($12)
	*($2 + [48]) = *($2 + [360])
	*($2 + [32]) = *($2 + [528])
	CALL $9($15, ($2 + [48]), ($2 + [32]), $10, $14)
	if ( ((*($2 + [512]) & [1]) == 0) ){ goto $label$51 }
	CALL _ZdlPv(*((($2 + [512]) + [8])))
	
.LABEL $label$51
	if ( ((*($2 + [424]) & [1]) == 0) ){ goto $label$52 }
	CALL _ZdlPv(*($9))
	
.LABEL $label$52
	$14 = *($2 + [472])
	$1 = (CASTING uint_32)(uint_64 (uint_64)$14 >> (uint_64)(int_64)32)
	if ( $1) ){ goto $label$53 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$53
	$12 = CALL db_next_i64(*($1 + [72]), ($2 + [360]))
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$54 }
	CALL $406((CASTING uint_32)(uint_64 $14), $12)
	
.LABEL $label$54
	CALL $407($7, $1)
	$3 = ($3 + [8])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$45 }
	$3 = *($2 + [480])
	
.LABEL $label$44
	if ( ($3 == 0) ){ goto $label$5 }
	*($2 + [484]) = $3
	CALL _ZdlPv($3)
	goto $label$5 
	
.LABEL $label$6
	$12 = *([0] + [8632])
	if ( $12 ){ goto $label$55 }
	$0 = CALL _Znwj([280])
	$12 = CALL $111($0)
	*([0] + [8632]) = $0
	
.LABEL $label$55
	CALL $207(($2 + [528]), ($12 + [120]), (CASTING uint_64)(uint_32 $3))
	if ( *([0] + [8632]) ){ goto $label$56 }
	$3 = CALL _Znwj([280])
	CALL $111($3)
	*([0] + [8632]) = $3
	
.LABEL $label$56
	if ( (*($2 + [532]) == 0) ){ goto $label$5 }
	$14 = CALL current_time()
	*((($2 + [360]) + [28])) = (int_64)0
	*(($0 = ($2 + [404]))) = (int_64)0
	*(($2 + [412])) = (int_64)0
	*($2 + [372]) = [0]
	*($2 + [376]) = [0]
	*($2 + [380 align=4]) = (int_64)0
	*($2 + [396 align=4]) = (int_64)0
	*($2 + [360]) = ((CASTING uint_32)(uint_64 ((uint_64)$14 / (uint_64)(int_64)1000000)) + [60])
	*($2 + [304]) = [8617]
	*($2 + [308]) = CALL $743([8617])
	*($2 + [24]) = *($2 + [304])
	$3 = CALL $10(($2 + [312]), ($2 + [24]))
	*($2 + [288]) = [8344]
	*($2 + [292]) = CALL $743([8344])
	*($2 + [16]) = *($2 + [288])
	$14 = *(CALL $10(($2 + [296]), ($2 + [16])))
	$15 = *($3)
	$16 = *(*($2 + [532]) + [32])
	*($2 + [272]) = [20519]
	*($2 + [276]) = CALL $743([20519])
	*($2 + [8]) = *($2 + [272])
	$3 = CALL $10(($2 + [280]), ($2 + [8]))
	*((($2 + [240]) + [24])) = *(($1 + [40]))
	*((($2 + [240]) + [16])) = *(($1 + [32]))
	*($2 + [320]) = $16
	*($2 + [248]) = *(($1 + [24]))
	*($2 + [240]) = *($1 + [16])
	*($2 + [328]) = *($3)
	*(($3 = CALL _Znwj([16]))) = $15
	*($3 + [8]) = $14
	*((($2 + [320]) + [36])) = [0]
	$12 = ($3 + [16])
	*((($2 + [320]) + [24])) = $12
	*(($2 + [340])) = $12
	*($2 + [336]) = $3
	*($2 + [348 align=4]) = (int_64)0
	CALL $11((($2 + [320]) + [28]), [32])
	$12 = *($2 + [348])
	if ( ((int_32)(*((($2 + [320]) + [32])) - $12) >= (int_32)[32]) ){ goto $label$59 }
	CALL eosio_assert([0], [22875])
	$0 = *($0)
	$3 = *((($2 + [360]) + [40]))
	CALL memcpy($12, ($2 + [240]), [32])
	if ( ((uint_32)$3 >= (uint_32)$0) ){ goto $label$58 }
	*($3) = *($2 + [320])
	*($3 + [16]) = [0]
	*(($3 + [8])) = *((($2 + [320]) + [8]))
	*(($12 = ($3 + [20]))) = (int_64)0
	$0 = ($2 + [336])
	*($3 + [16]) = *($0)
	$7 = (($2 + [320]) + [20])
	*($12) = *($7)
	$12 = (($2 + [320]) + [24])
	*(($3 + [24])) = *($12)
	*($12) = [0]
	*($3 + [28 align=4]) = (int_64)0
	*($7) = [0]
	*($0) = [0]
	*(($12 = ($3 + [36]))) = [0]
	$0 = ($2 + [348])
	*($3 + [28]) = *($0)
	$3 = (($2 + [320]) + [32])
	*(($3 + [32])) = *($3)
	$7 = (($2 + [320]) + [36])
	*($12) = *($7)
	*($3) = [0]
	*($0) = [0]
	*($7) = [0]
	*(($3 = (($2 + [360]) + [40]))) = (*($3) + [40])
	goto $label$57 
	
.LABEL $label$59
	CALL memcpy($12, ($2 + [240]), [32])
	
.LABEL $label$58
	CALL $455((($2 + [360]) + [36]), ($2 + [320]))
	$3 = *($2 + [348])
	if ( ($3 == 0) ){ goto $label$57 }
	*(($2 + [352])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$57
	$1 = ($1 + [16])
	$3 = *($2 + [336])
	if ( ($3 == 0) ){ goto $label$60 }
	*(($2 + [340])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$60
	*(($2 + [380])) = [0]
	*($2 + [328]) = *(($1 + [8]))
	*($2 + [320]) = *($1)
	*($2 + [224]) = [8617]
	*($2 + [228]) = CALL $743([8617])
	*($2) = *($2 + [224])
	$14 = *(CALL $10(($2 + [232]), $2))
	CALL $190(($2 + [240]), ($2 + [360]))
	$1 = *($2 + [240])
	CALL send_deferred(($2 + [320]), $14, $1, (*($2 + [244]) - $1), [0])
	$1 = *($2 + [240])
	if ( ($1 == 0) ){ goto $label$61 }
	*($2 + [244]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$61
	CALL $164(($2 + [360]))
	
.LABEL $label$5
	$global$0 = ($2 + [544])
	return (unreachable)
	
.LABEL $label$4
	CALL $708(($2 + [424]))
	
.LABEL $label$3
	CALL $708(($2 + [424]))
	
.LABEL $label$2
	CALL $708(($2 + [424]))
	
.LABEL $label$1
	CALL $708(($2 + [424]))
	$3
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $452 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $451 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [368])
	$global$0 = $2
	if ( ((int_32)*(($1 + [52])) != (int_32)*($1 + [48])) ){ goto $label$1 }
	CALL $452($2, [20430], $1)
	if ( (*($2) & [1]) ){ goto $label$3 }
	$3 = ($2 | [1])
	goto $label$2 
	
.LABEL $label$3
	$3 = *($2 + [8])
	CALL _ZdlPv($3)
	
.LABEL $label$2
	CALL eosio_assert([0], $3)
	
.LABEL $label$1
	$3 = *($1 + [60])
	if ( ((uint_32)$3 > (uint_32)[12]) ){ goto $label$8 }
	$4 = [51]
	goto $label$5 
	
.LABEL $label$11
	$4 = [52]
	goto $label$5 
	
.LABEL $label$10
	$0 = *([0] + [8632])
	if ( $0 ){ goto $label$12 }
	$4 = CALL _Znwj([280])
	$0 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$12
	$0 = CALL $127($2, $0)
	CALL $438($0, ($3 + [-2]), *(*($1 + [48])))
	CALL $129($0)
	goto $label$4 
	
.LABEL $label$9
	$4 = [53]
	goto $label$5 
	
.LABEL $label$8
	CALL eosio_assert([0], [20488])
	$3 = *(($1 + [60]))
	goto $label$5 
	
.LABEL $label$7
	$4 = [54]
	goto $label$5 
	
.LABEL $label$6
	$4 = [55]
	
.LABEL $label$5
	CALL $367($2, $0, *($1), $3)
	CALL void $0((int_32 $1), (int_32 $2), (int_32 $4))
	$1 = *($2)
	if ( ($1 == 0) ){ goto $label$4 }
	*($2 + [4]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$4
	$global$0 = ($2 + [368])
	$3
}

int_32 .FUNC $130 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [424]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [428])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = *($4 + [28])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [32])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$6
	$5 = *($4 + [16])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($4 + [20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$7
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$4 = *(($0 + [424]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($4)
	
.LABEL $label$1
	$5 = *(($0 + [384]))
	if ( ($5 == 0) ){ goto $label$8 }
	$1 = ($0 + [388])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$10 }
	
.LOOP $label$11:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	CALL _ZdlPv($3)
	
.LABEL $label$12
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	$4 = *(($0 + [384]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $5
	
.LABEL $label$9
	*($1) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$8
	$5 = *(($0 + [344]))
	if ( ($5 == 0) ){ goto $label$13 }
	$1 = ($0 + [348])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$15 }
	
.LOOP $label$16:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$17 }
	CALL _ZdlPv($3)
	
.LABEL $label$17
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$16 }
	$4 = *(($0 + [344]))
	goto $label$14 
	
.LABEL $label$15
	$4 = $5
	
.LABEL $label$14
	*($1) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$13
	$5 = *(($0 + [304]))
	if ( ($5 == 0) ){ goto $label$18 }
	$1 = ($0 + [308])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$20 }
	
.LOOP $label$21:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$22 }
	CALL _ZdlPv($3)
	
.LABEL $label$22
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$21 }
	$4 = *(($0 + [304]))
	goto $label$19 
	
.LABEL $label$20
	$4 = $5
	
.LABEL $label$19
	*($1) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$18
	CALL $504(($0 + [264]))
	CALL $505(($0 + [224]))
	$1 = *(($0 + [184]))
	if ( ($1 == 0) ){ goto $label$23 }
	$2 = ($0 + [188])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$25 }
	
.LOOP $label$26:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$27 }
	$5 = *($3 + [64])
	if ( ($5 == 0) ){ goto $label$28 }
	*(($3 + [68])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$28
	CALL _ZdlPv($3)
	
.LABEL $label$27
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$26 }
	$4 = *(($0 + [184]))
	goto $label$24 
	
.LABEL $label$25
	$4 = $1
	
.LABEL $label$24
	*($2) = $1
	CALL _ZdlPv($4)
	
.LABEL $label$23
	$1 = *(($0 + [144]))
	if ( ($1 == 0) ){ goto $label$29 }
	$2 = ($0 + [148])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$31 }
	
.LOOP $label$32:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$33 }
	$5 = *($4 + [20])
	if ( ($5 == 0) ){ goto $label$34 }
	*(($4 + [24])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$34
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$35 }
	*(($4 + [12])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$35
	CALL _ZdlPv($4)
	
.LABEL $label$33
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$32 }
	$4 = *(($0 + [144]))
	goto $label$30 
	
.LABEL $label$31
	$4 = $1
	
.LABEL $label$30
	*($2) = $1
	CALL _ZdlPv($4)
	
.LABEL $label$29
	$5 = *(($0 + [104]))
	if ( ($5 == 0) ){ goto $label$36 }
	$1 = ($0 + [108])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$38 }
	
.LOOP $label$39:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$40 }
	CALL _ZdlPv($3)
	
.LABEL $label$40
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$39 }
	$4 = *(($0 + [104]))
	goto $label$37 
	
.LABEL $label$38
	$4 = $5
	
.LABEL $label$37
	*($1) = $5
	CALL _ZdlPv($4)
	
.LABEL $label$36
	$1 = *(($0 + [64]))
	if ( ($1 == 0) ){ goto $label$41 }
	$2 = ($0 + [68])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$43 }
	
.LOOP $label$44:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$45 }
	$5 = *($4 + [20])
	if ( ($5 == 0) ){ goto $label$46 }
	*(($4 + [24])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$46
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$47 }
	*(($4 + [12])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$47
	CALL _ZdlPv($4)
	
.LABEL $label$45
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$44 }
	$4 = *(($0 + [64]))
	goto $label$42 
	
.LABEL $label$43
	$4 = $1
	
.LABEL $label$42
	*($2) = $1
	CALL _ZdlPv($4)
	
.LABEL $label$41
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$48 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$50 }
	
.LOOP $label$51:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$52 }
	$5 = *($4 + [80])
	if ( ($5 == 0) ){ goto $label$53 }
	*(($4 + [84])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$53
	$5 = *($4 + [68])
	if ( ($5 == 0) ){ goto $label$54 }
	*(($4 + [72])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$54
	CALL _ZdlPv($4)
	
.LABEL $label$52
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$51 }
	$4 = *(($0 + [24]))
	goto $label$49 
	
.LABEL $label$50
	$4 = $1
	
.LABEL $label$49
	*($2) = $1
	CALL _ZdlPv($4)
	
.LABEL $label$48
	return $0
}

int_32 .FUNC $102 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [320])
	$global$0 = $3
	*(($4 = $3) + [312]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [304])) = [0]
	*($4 + [272]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [308]) = [0]
	*($4 + [252]) = $2
	*($4 + [248]) = $2
	*($4 + [256]) = ($2 + $5)
	*($4 + [24]) = ($4 + [248])
	*($4 + [48]) = ($4 + [264])
	CALL $180(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [256])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [248])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $20(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [312])
	CALL $181(($4 + [24]), ($4 + [264]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $749($2)
	
.LABEL $label$4
	CALL $24($3)
	$2 = *(($4 + [296]))
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [300])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($4 + [320])
	return [1]
}

void .FUNC $131 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [64])
	$global$0 = $4
	*($4 + [40]) = $2
	$5 = ($0 + [80])
	CALL $132(($4 + [32]), $5, $1)
	if ( (*($4 + [36]) == 0) ){ goto $label$2 }
	*($4 + [16]) = [8617]
	$0 = *($4 + [36])
	*($4 + [20]) = CALL $743([8617])
	*($4) = *($4 + [16])
	$3 = CALL $10(($4 + [24]), $4)
	*($4 + [48]) = ($4 + [40])
	$2 = *($3)
	if ( $0 ){ goto $label$3 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$3
	CALL $269($5, $0, $2, ($4 + [48]))
	goto $label$1 
	
.LABEL $label$2
	if ( $3 ){ goto $label$4 }
	*($4 + [8]) = $1
	CALL $270(($4 + [48]), [17081], ($4 + [8]), [17091])
	if ( (*($4 + [48]) & [1]) ){ goto $label$6 }
	$5 = (($4 + [48]) | [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($4 + [56])
	CALL _ZdlPv($5)
	
.LABEL $label$5
	CALL eosio_assert([0], $5)
	$2 = *($4 + [40])
	
.LABEL $label$4
	CALL $153($0, $1, $2)
	
.LABEL $label$1
	$global$0 = ($4 + [64])
}

int_32 .FUNC $105 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [248]) = (int_64)0
	*($4 + [240]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [240]) + [8])
	CALL memcpy(($4 + [240]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [24]) = $2
	*($4 + [28]) = ($2 + [16])
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $20(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *((($4 + [240]) + [8]))
	$1 = *($4 + [240])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $749($2)
	
.LABEL $label$8
	CALL $24($8)
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC $132 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [16]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7235159551874301952, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $133($1, $5)
	if ( ((int_32)*($5 + [16]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $104 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	CALL $110($3)
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$1 }
	$5 = CALL _Znwj([280])
	$4 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$1
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$3 }
	CALL $131($4, $1, $2, [0])
	goto $label$2 
	
.LABEL $label$3
	$5 = $4
	if ( $4 ){ goto $label$4 }
	$6 = CALL _Znwj([280])
	$5 = CALL $111($6)
	*([0] + [8632]) = $6
	
.LABEL $label$4
	CALL $132($3, ($5 + [80]), $1)
	$6 = *($3)
	$5 = *($3 + [4])
	if ( $5 ){ goto $label$5 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$5
	$4 = ($4 + [80])
	$7 = CALL db_next_i64(*($5 + [20]), ($3 + [8]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$6 }
	CALL $133($6, $7)
	
.LABEL $label$6
	CALL $134($4, $5)
	
.LABEL $label$2
	$global$0 = ($3 + [16])
}

int_32 .FUNC $133 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$2 = CALL $746($4)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([32])) + [16]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$9 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$9
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $268(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $749($2)
	
.LABEL $label$10
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $723 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $713(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $734(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8556], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $713(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $713(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $455 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[40])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL _Znwj(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1 + [16 align=4])
	*($1 + [16 align=4]) = (int_64)0
	$4 = ($1 + [24])
	$7 = *($4)
	*($4) = (int_64)0
	$4 = ($1 + [32])
	$8 = *($4)
	*($4) = (int_64)0
	*(($9 = ($2 + ((int_32)$3 * (int_32)[40])))) = *($1)
	*($9 + [16 align=4]) = $6
	*(($9 + [8])) = *(($1 + [8]))
	*(($9 + [24])) = $7
	*(($9 + [32])) = $8
	$10 = ($2 + ((int_32)$5 * (int_32)[40]))
	$11 = ($9 + [40])
	$1 = *($0)
	$12 = *(($0 + [4]))
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$6 }
	$13 = ($1 - $12)
	$2 = [0]
	
.LOOP $label$7:
	$5 = ($12 + $2)
	*((($1 = ($9 + $2)) + [-32])) = *(($5 + [-32]))
	*(($1 + [-40])) = *(($5 + [-40]))
	*(($3 = ($1 + [-24]))) = (int_64)0
	*(($4 = ($1 + [-16]))) = [0]
	$14 = ($5 + [-24])
	*($3) = *($14)
	$3 = ($5 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($1 + [-12]))) = (int_64)0
	*(($1 = ($1 + [-4]))) = [0]
	$4 = ($5 + [-12])
	*($3) = *($4)
	*($14) = (int_64)0
	$5 = ($5 + [-4])
	*($1) = *($5)
	*($5) = [0]
	*($4) = (int_64)0
	$2 = ($2 + [-40])
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$7 }
	$9 = ($9 + $2)
	$1 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $1
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($1 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($1 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$5 = ($1 + [-40])
	$2 = *(($1 + [-24]))
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [-20])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$1 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$12 }
	CALL _ZdlPv($3)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $134 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$5 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$6 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$7:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$5 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$4 = *($3)
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	$8 = $5
	
.LOOP $label$11:
	$9 = *($8)
	*($8) = [0]
	$7 = ($8 + [-24])
	$5 = *($7)
	*($7) = $9
	if ( ($5 == 0) ){ goto $label$12 }
	CALL _ZdlPv($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$9 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) != (int_32)$8) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$9 = ($5 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$5 = ($5 + [-24])
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL _ZdlPv($8)
	
.LABEL $label$14
	if ( ((int_32)$9 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $9
	CALL db_remove_i64(*($1 + [20]))
}

int_32 .FUNC $678 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $230(CALL $230($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $3, [1])
	$2 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [33])
	if ( ((int_32)(*(($0 + [8])) - $2) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [34])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $1, [1])
	*($2) = (*($2) + [1])
	return $0
}

void .FUNC $106 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$1 = ($global$0 - [336])
	$global$0 = $1
	$2 = CALL current_time()
	*(($1 + [284])) = (int_64)0
	*(($1 + [300])) = (int_64)0
	*(($1 + [308])) = (int_64)0
	*($1 + [268]) = [0]
	*($1 + [272]) = [0]
	*($1 + [276 align=4]) = (int_64)0
	*($1 + [292 align=4]) = (int_64)0
	*($1 + [256]) = ((CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)) + [60])
	*($1 + [192]) = [8617]
	*($1 + [196]) = CALL $743([8617])
	*($1 + [72]) = *($1 + [192])
	$3 = CALL $10(($1 + [200]), ($1 + [72]))
	*($1 + [176]) = [8344]
	*($1 + [180]) = CALL $743([8344])
	*($1 + [64]) = *($1 + [176])
	$4 = CALL $10(($1 + [184]), ($1 + [64]))
	*($1 + [160]) = [8617]
	$2 = *($4)
	$5 = *($3)
	*($1 + [164]) = CALL $743([8617])
	*($1 + [56]) = *($1 + [160])
	$3 = CALL $10(($1 + [168]), ($1 + [56]))
	*($1 + [144]) = [22207]
	*($1 + [148]) = CALL $743([22207])
	*($1 + [48]) = *($1 + [144])
	$4 = CALL $10(($1 + [152]), ($1 + [48]))
	*($1 + [208]) = *($3)
	*($1 + [216]) = *($4)
	*(($3 = CALL _Znwj([16]))) = $5
	*($3 + [8]) = $2
	*((($1 + [208]) + [36])) = [0]
	$4 = ($3 + [16])
	*(($1 + [232])) = $4
	*(($1 + [228])) = $4
	*($1 + [224]) = $3
	*($1 + [236 align=4]) = (int_64)0
	CALL $189((($1 + [256]) + [36]), ($1 + [208]))
	$3 = *($1 + [236])
	if ( ($3 == 0) ){ goto $label$1 }
	*(($1 + [240])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$3 = *($1 + [224])
	if ( ($3 == 0) ){ goto $label$2 }
	*(($1 + [228])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$2
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$3 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$3
	*($1 + [128]) = [22219]
	*($1 + [132]) = CALL $743([22219])
	*($1 + [40]) = *($1 + [128])
	*(($1 + [276])) = CALL $153($3, *(CALL $10(($1 + [136]), ($1 + [40]))), (int_64)3600)
	*($1 + [120]) = [8617]
	*($1 + [124]) = CALL $743([8617])
	*($1 + [32]) = *($1 + [120])
	CALL $10(($1 + [208]), ($1 + [32]))
	*($1 + [112]) = [22207]
	*($1 + [116]) = CALL $743([22207])
	*($1 + [24]) = *($1 + [112])
	CALL $10(($1 + [320]), ($1 + [24]))
	*($1 + [216]) = (int_64)0
	*($1 + [208]) = (int_64)-122330581830200160
	*($1 + [96]) = [8617]
	*($1 + [100]) = CALL $743([8617])
	*($1 + [16]) = *($1 + [96])
	$2 = *(CALL $10(($1 + [104]), ($1 + [16])))
	CALL $190(($1 + [320]), ($1 + [256]))
	$3 = *($1 + [320])
	CALL send_deferred(($1 + [208]), $2, $3, (*($1 + [324]) - $3), [0])
	$3 = *($1 + [320])
	if ( ($3 == 0) ){ goto $label$4 }
	*($1 + [324]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$5 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$5
	*($1 + [80]) = [22230]
	*($1 + [84]) = CALL $743([22230])
	*($1 + [8]) = *($1 + [80])
	$4 = CALL $10(($1 + [88]), ($1 + [8]))
	$2 = CALL current_time()
	CALL $131($3, *($4), (CASTING uint_64)(uint_32 (*(($1 + [276])) + (CASTING uint_32)(uint_64 ((uint_64)$2 / (uint_64)(int_64)1000000)))), [1])
	CALL $164(($1 + [256]))
	$global$0 = ($1 + [336])
}

void .FUNC $135 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = *(($1 + [8]))
	$4 = *($1)
	*($2 + [72]) = (int_64)0
	*($2 + [56]) = $3
	*($2 + [48]) = $4
	$5 = ($0 + [200])
	$6 = [0]
	$7 = CALL db_idx128_lowerbound(*($0 + [200]), *(($0 + [208])), (int_64)-4418111932367241216, ($2 + [48]), ($2 + [72]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	CALL $264(($2 + [40]), $5, *($2 + [72]))
	*((($6 = *($2 + [44])) + [56])) = $7
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$2 }
	if ( ((int_64)((int_64)((int_64)$4 ^ (int_64)*($6 + [16])) | (int_64)((int_64)$3 ^ (int_64)*(($6 + [24])))) != (int_64)0) ){ goto $label$2 }
	CALL $265(($2 + [48]), [17052], $1, [17075], ($6 + [16]))
	if ( (*($2 + [48]) & [1]) ){ goto $label$4 }
	$6 = (($2 + [48]) | [1])
	goto $label$3 
	
.LABEL $label$4
	$6 = *($2 + [56])
	CALL _ZdlPv($6)
	
.LABEL $label$3
	CALL eosio_assert([0], $6)
	
.LABEL $label$2
	*($2 + [8]) = [8617]
	*($2 + [12]) = CALL $743([8617])
	*($2) = *($2 + [8])
	$6 = CALL $10(($2 + [16]), $2)
	*($2 + [44]) = $1
	*($2 + [40]) = $0
	*($2 + [72]) = *($6)
	if ( ((int_64)*(($0 + [200])) == (int_64)CALL current_receiver()) ){ goto $label$5 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$5
	*($2 + [48]) = $5
	*($2 + [52]) = ($2 + [40])
	*($2 + [56]) = ($2 + [72])
	*(($1 = CALL _Znwj([64])) + [48]) = $5
	CALL $266(($2 + [48]), $1)
	*($2 + [32]) = $1
	$3 = *($1)
	*($2 + [48]) = $3
	$5 = *($1 + [52])
	*($2 + [28]) = $5
	$7 = ($0 + [228])
	$6 = *($7)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [232]))) ){ goto $label$7 }
	*($6 + [8]) = $3
	*($6 + [16]) = $5
	*($2 + [32]) = [0]
	*($6) = $1
	*($7) = ($6 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $267(($0 + [224]), ($2 + [32]), ($2 + [48]), ($2 + [28]))
	
.LABEL $label$6
	$0 = *($2 + [32])
	*($2 + [32]) = [0]
	if ( ($0 == 0) ){ goto $label$8 }
	CALL _ZdlPv($0)
	
.LABEL $label$8
	$global$0 = ($2 + [80])
}

int_32 .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [5])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $523($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [5]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[31]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [32])
	$2 = (*($6) + [32])
	*($6) = $2
	$7 = ($7 + [32])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $137 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$0 = *($0)
	$2 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[3]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [4])
	*(($3 = ($3 + [4]))) = (*($3) + [4])
	$2 = ($0 + [40])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$0 = ($0 + [48])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $3, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $536 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = ($global$0 - [80])
	$global$0 = $5
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$8 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$8 = *((*($7) + $8))
	
.LABEL $label$1
	$0 = CALL $709(($5 + [64]), $1)
	*(($1 = (($5 + [40]) + [16]))) = *(($2 + [16]))
	*(($6 = (($5 + [40]) + [8]))) = *(($2 + [8]))
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = [0]
	*($5 + [40]) = *($2)
	$2 = (*($4 + [4]) - *($4))
	if ( ($2 == 0) ){ goto $label$3 }
	$9 = int_32($2 >> [4])
	if ( ((uint_32)$9 >= (uint_32)[268435456]) ){ goto $label$2 }
	$2 = CALL _Znwj($2)
	*(($5 + [32])) = ($2 + ($9 << [4]))
	*($5 + [24]) = $2
	*($5 + [28]) = $2
	$9 = *($4)
	$4 = (*(($4 + [4])) - $9)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($2, $9, $4)
	*($5 + [28]) = (*($5 + [28]) + $4)
	
.LABEL $label$3
	*(($5 + [16])) = *($1)
	*(($5 + [8])) = *($6)
	*($5) = *($5 + [40])
	CALL void $7((int_32 $0), (int_32 $5), (int_32 $3), (int_32 ($5 + [24])), (int_32 $8))
	$4 = *($5 + [24])
	if ( ($4 == 0) ){ goto $label$4 }
	*($5 + [28]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$4
	if ( ((*($0) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($0 + [8]))
	
.LABEL $label$5
	$global$0 = ($5 + [80])
	return (unreachable)
	
.LABEL $label$2
	CALL $727(($5 + [24]))
}

int_32 .FUNC $655 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30160])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)8800273824458211328)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $439(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $654 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_64 .FUNC $657 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [16])
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$3 }
	$2 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)8800195549752983552, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $440($0, $3)
	*($1 + [12]) = [0]
	*($1 + [8]) = $0
	$2 = *(*(CALL $658(($1 + [8])) + [4]))
	$2 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	*(($0 + [16])) = $2
	
.LABEL $label$3
	if ( (uint_64)($2 <= (int_64)-2) ){ goto $label$1 }
	CALL eosio_assert([0], [30054])
	$2 = *(($0 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($0 + [16])) = (int_64)0
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_32 .FUNC $656 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30160])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)8800273824474988544)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $444(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_64 .FUNC $651 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [16])
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$3 }
	$2 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)8800273824458211328, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $439($0, $3)
	*($1 + [12]) = [0]
	*($1 + [8]) = $0
	$2 = *(*(CALL $655(($1 + [8])) + [4]))
	$2 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	*(($0 + [16])) = $2
	
.LABEL $label$3
	if ( (uint_64)($2 <= (int_64)-2) ){ goto $label$1 }
	CALL eosio_assert([0], [30054])
	$2 = *(($0 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($0 + [16])) = (int_64)0
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $229 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *(($1 + [28]))
	if ( ((int_32)$2 == (int_32)*($1 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-5915276457178488320, (int_64)-5915276457178488320)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	$2 = CALL $119($1, $2)
	if ( ((int_32)*($2 + [24]) == (int_32)$1) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	$2 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$1
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($2)
	$1 = (*(($2 + [12])) - *($2 + [8]))
	$3 = ((int_32)$1 / (int_32)[48])
	if ( ($1 == 0) ){ goto $label$6 }
	if ( ((uint_32)$3 >= (uint_32)[89478486]) ){ goto $label$5 }
	$1 = CALL _Znwj($1)
	*(($0 + [8])) = $1
	*(($0 + [16])) = ($1 + ((int_32)$3 * (int_32)[48]))
	*(($0 = ($0 + [12]))) = $1
	$3 = *(($2 + [8]))
	$2 = (*(($2 + [12])) - $3)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	*($0) = (*($0) + ((int_32)((uint_32)$2 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$5
	CALL $727(($0 + [8]))
}

void .FUNC $558 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL $723(($4 + [16]), *($1))
	CALL $559($4, $2, $3)
	$2 = *($4)
	$3 = ($2 & [1])
	$2 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $3 ), ( *($4 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$1
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$2
	$global$0 = ($4 + [32])
}

void .FUNC $559 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $722($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $224 (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	$4 = ($global$0 - [576])
	$global$0 = $4
	$5 = [0]
	$6 = *($0)
	if ( ((int_64)*($6 + [8]) != (int_64)*($1)) ){ goto $label$1 }
	$7 = *($0 + [8])
	$8 = *($6)
	$1 = *([0] + [8632])
	if ( $1 ){ goto $label$2 }
	$5 = CALL _Znwj([280])
	$1 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$2
	$5 = [1]
	if ( (uint_64)($8 <= CALL $153($1, $2, $3)) ){ goto $label$1 }
	$2 = (int_64)0
	*($4 + [472]) = (int_64)0
	*($4 + [464]) = (int_64)0
	*($4 + [480]) = (int_64)0
	*($4 + [456]) = ($4 + [464])
	$6 = CALL $109(($4 + [8]))
	$9 = ($6 + [360])
	$1 = *($0 + [4])
	$3 = *($1 + [8])
	$10 = *($1)
	$8 = *($1 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$10) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($1 = CALL _Znwj([24])) + [8]) = $3
	*($1) = $10
	*($1 + [16]) = $8
	CALL sha256($1, [24], ($4 + [544]))
	$2 = *($4 + [544])
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	CALL $463(($4 + [448]), $9, $2)
	CALL $130($6)
	$1 = CALL $109(($4 + [8]))
	$6 = *($4 + [452])
	CALL $130($1)
	if ( ($6 == 0) ){ goto $label$5 }
	$0 = *($4 + [452])
	*((($4 + [464]) + [21])) = *(($0 + [21]))
	*((($4 + [464]) + [8])) = *(($0 + [8]))
	*((($4 + [464]) + [16])) = *(($0 + [16]))
	*($4 + [464]) = *($0)
	$0 = *($4 + [492])
	if ( ((int_32)$0 == (int_32)[1]) ){ goto $label$1 }
	if ( $0 ){ goto $label$6 }
	*(($4 + [492])) = [1]
	
.LABEL $label$6
	$0 = CALL $109(($4 + [8]))
	$1 = ($0 + [360])
	$6 = *($4 + [452])
	if ( $6 ){ goto $label$7 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$7
	CALL $508($1, $6, (int_64)0, ($4 + [456]))
	CALL $130($0)
	goto $label$1 
	
.LABEL $label$5
	$0 = *(($0 + [4]))
	*(($6 = (($4 + [464]) + [16]))) = *(($0 + [16]))
	*(($9 = (($4 + [464]) + [8]))) = *(($0 + [8]))
	*($4 + [464]) = *($0)
	*($4 + [488]) = [0]
	*($4 + [492]) = [1]
	$1 = CALL $109(($4 + [8]))
	$11 = ($1 + [360])
	$3 = *($7)
	if ( ((int_64)*($1 + [360]) == (int_64)CALL current_receiver()) ){ goto $label$8 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$8
	*(($0 = CALL _Znwj([48])) + [32]) = $11
	*(($0 + [21])) = *((($4 + [464]) + [21]))
	*($0 + [16]) = *($6)
	*($0 + [8]) = *($9)
	*($0) = *($4 + [464])
	*($4 + [536]) = ($4 + [525])
	*($4 + [532]) = ($4 + [496])
	*($4 + [528]) = ($4 + [496])
	CALL $465(($4 + [528]), $0)
	$2 = (int_64)0
	$8 = *($0 + [8])
	$12 = *($0)
	$10 = *($0 + [16])
	if ( ((int_64)((int_64)$10 | (int_64)$12) != (int_64)0) ){ goto $label$10 }
	$10 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	*(($6 = CALL _Znwj([24])) + [8]) = $8
	*($6) = $12
	*($6 + [16]) = $10
	CALL sha256($6, [24], ($4 + [544]))
	$2 = *($4 + [544])
	if ( ($6 == 0) ){ goto $label$9 }
	CALL _ZdlPv($6)
	
.LABEL $label$9
	$6 = ($1 + [368])
	*($0 + [36]) = CALL db_store_i64(*($6), (int_64)-8173735188943732736, $3, $2, ($4 + [496]), [29])
	$7 = ($1 + [376])
	if ( (uint_64)($2 <= *($7)) ){ goto $label$11 }
	*($7) = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$2 = (int_64)0
	$8 = *(($0 + [8]))
	$12 = *($6)
	$13 = *($0)
	$10 = *(($0 + [16]))
	if ( ((int_64)((int_64)$10 | (int_64)$13) != (int_64)0) ){ goto $label$13 }
	$10 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$12 }
	
.LABEL $label$13
	*(($6 = CALL _Znwj([24])) + [8]) = $8
	*($6) = $13
	*($6 + [16]) = $10
	CALL sha256($6, [24], ($4 + [544]))
	$2 = *($4 + [544])
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*($4 + [544]) = *($0 + [24])
	*($0 + [40]) = CALL db_idx64_store($12, (int_64)-8173735188943732736, $3, $2, ($4 + [544]))
	*($4 + [496]) = $0
	$2 = (int_64)0
	$3 = *(($0 + [8]))
	$10 = *($0)
	$8 = *(($0 + [16]))
	if ( ((int_64)((int_64)$8 | (int_64)$10) != (int_64)0) ){ goto $label$15 }
	$8 = (int_64)0
	if ( (int_64)($3 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	*(($0 = CALL _Znwj([24])) + [8]) = $3
	*($0) = $10
	*($0 + [16]) = $8
	CALL sha256($0, [24], ($4 + [544]))
	$2 = *($4 + [544])
	if ( ($0 == 0) ){ goto $label$14 }
	CALL _ZdlPv($0)
	
.LABEL $label$14
	*($4 + [544]) = $2
	$6 = *($4 + [496])
	$7 = *($6 + [36])
	*($4 + [528]) = $7
	$9 = ($1 + [388])
	$0 = *($9)
	if ( ((uint_32)$0 >= (uint_32)*(($1 + [392]))) ){ goto $label$17 }
	*($0 + [8]) = $2
	*($0 + [16]) = $7
	*($4 + [496]) = [0]
	*($0) = $6
	*($9) = ($0 + [24])
	goto $label$16 
	
.LABEL $label$17
	CALL $466(($1 + [384]), ($4 + [496]), ($4 + [544]), ($4 + [528]))
	
.LABEL $label$16
	$0 = *($4 + [496])
	*($4 + [496]) = [0]
	if ( ($0 == 0) ){ goto $label$18 }
	CALL _ZdlPv($0)
	
.LABEL $label$18
	CALL $130($1)
	
.LABEL $label$1
	$global$0 = ($4 + [576])
	return $5
}

void .FUNC $225 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $720($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $226 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	*($4 + [168]) = *($1 + [32])
	$5 = *($1)
	$6 = *($2 + [4])
	$7 = *($2)
	$8 = CALL $15(*($7 + [8]))
	$9 = *($7 + [8])
	$11 = *(($1 + [44]))
	$10 = *($1 + [40])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$6 }
	
.LOOP $label$7:
	if ( ((int_64)*($10) == (int_64)$9) ){ goto $label$5 }
	$10 = ($10 + [48])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$7 }
	
.LABEL $label$6
	*($4 + [192]) = $9
	*($4 + [200]) = $8
	$9 = *($7)
	CALL __multi3(($4 + [104]), $9, (int_64)$9 >> (int_64)63), *($6 + [16]), *(($6 + [24])))
	CALL __multi3(($4 + [88]), *($4 + [104]), *((($4 + [104]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [72]), *($4 + [88]), *((($4 + [88]) + [8])), (int_64)100, (int_64)0)
	*(($10 = (($4 + [192]) + [24]))) = *((($4 + [72]) + [8]))
	*($4 + [224]) = [1000000000]
	*($4 + [208]) = *($4 + [72])
	if ( ((int_32)$11 == (int_32)*(($1 + [48]))) ){ goto $label$4 }
	*($11) = *($4 + [192])
	*(($11 + [8])) = *($4 + [200])
	*(($11 + [40])) = *((($4 + [192]) + [40]))
	*(($11 + [32])) = *((($4 + [192]) + [32]))
	*(($11 + [24])) = *($10)
	*(($11 + [16])) = *((($4 + [192]) + [16]))
	*(($10 = ($1 + [44]))) = (*($10) + [48])
	goto $label$3 
	
.LABEL $label$5
	$9 = *($7)
	CALL __multi3(($4 + [152]), $9, (int_64)$9 >> (int_64)63), *($6 + [16]), *(($6 + [24])))
	CALL __multi3(($4 + [136]), *($4 + [152]), *((($4 + [152]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [120]), *($4 + [136]), *((($4 + [136]) + [8])), (int_64)100, (int_64)0)
	$8 = *($4 + [120])
	$9 = ((int_64)$8 + (int_64)*($11))
	*(($11 = ($10 + [16]))) = $9
	$8 = ((int_64)((int_64)*((($4 + [120]) + [8])) + (int_64)*($10)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($9 <= $8)))
	*(($10 = ($10 + [24]))) = $8
	if ( ( (uint_64)($9 <= (int_64)-999999999) ? (uint_64)($8 <= (int_64)249999999) : ((int_64)$8 == (int_64)249999999) ) ){ goto $label$3 }
	CALL eosio_assert([0], [8307])
	goto $label$3 
	
.LABEL $label$4
	CALL $6(($1 + [40]), ($4 + [192]))
	
.LABEL $label$3
	$10 = *($2)
	$9 = *($10)
	CALL __multi3(($4 + [56]), $9, (int_64)$9 >> (int_64)63), *($1 + [52]), (int_64)0)
	$12 = *($10 + [8])
	$9 = *(($4 + [64]))
	$8 = *($4 + [56])
	if ( (( (uint_64)($8 <= (int_64)4611686018427387904) ? ((int_64)$9 < (int_64)0) : (int_64)($9 == 0) ) == 0) ){ goto $label$9 }
	if ( ( ((uint_64)$8 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$9 > (int_64)-1) : ((int_64)$9 == (int_64)-1) ) ){ goto $label$8 }
	CALL eosio_assert([0], [28835])
	goto $label$8 
	
.LABEL $label$9
	CALL eosio_assert([0], [28811])
	
.LABEL $label$8
	$13 = ((int_64)$8 / (int_64)10000)
	$11 = *(($1 + [44]))
	$10 = *(($1 + [40]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$10 }
	$9 = *(*($2) + [8])
	
.LOOP $label$12:
	if ( ((int_64)*($10) == (int_64)$9) ){ goto $label$11 }
	$10 = ($10 + [48])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$12 }
	goto $label$10 
	
.LABEL $label$11
	$9 = *($1 + [56])
	$8 = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$11 = *([0] + [8632])
	if ( $11 ){ goto $label$13 }
	$2 = CALL _Znwj([280])
	$11 = CALL $111($2)
	*([0] + [8632]) = $2
	
.LABEL $label$13
	*($4 + [184]) = [30340]
	*($4 + [188]) = CALL $743([30340])
	*($4 + [48]) = *($4 + [184])
	if ( ((uint_64)$9 >= (uint_64)(int_64))($8 - CALL $153($11, *(CALL $10(($4 + [192]), ($4 + [48]))), (int_64)86400))) ){ goto $label$10 }
	CALL __multi3(($4 + [32]), *(($10 + [16])), *(($10 + [24])), (int_64)100, (int_64)0)
	CALL __udivti3(($4 + [16]), *($4 + [32]), *((($4 + [32]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3($4, *($4 + [16]), *((($4 + [16]) + [8])), *(($10 + [32])), (int_64)0)
	$14 = *($10)
	$15 = *($4)
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$14 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$14
	$9 = (uint_64)$14 >> (uint_64)(int_64)8)
	$10 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$8 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$9 = $8
	$2 = $10
	goto $label$18 
	
.LABEL $label$19
	$9 = $8
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$16 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$11 = ((int_32)$10 < (int_32)[6])
	$2 = ($10 + [1])
	$10 = $2
	if ( $11 ){ goto $label$20 }
	
.LABEL $label$18
	$10 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	CALL eosio_assert([0], [22633])
	
.LABEL $label$15
	if ( ((int_64)$14 == (int_64)$12) ){ goto $label$21 }
	CALL eosio_assert([0], [23115])
	
.LABEL $label$21
	if ( ((int_64)$13 >= (int_64)$15) ){ goto $label$10 }
	*($1 + [24]) = [1]
	
.LABEL $label$10
	if ( ((int_32)$5 == (int_32)*($1)) ){ goto $label$22 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$22
	$8 = (CASTING uint_64)(uint_32 $5)
	$10 = *($1 + [4])
	$11 = ( *(($1 + [8])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$10 = ($11 + [59])
	$9 = (CASTING uint_64)(uint_32 $11)
	
.LOOP $label$23:
	$10 = ($10 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$23 }
	$2 = *(($1 + [40]))
	$11 = *(($1 + [44]))
	$5 = ($11 - $2)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$5 / (int_32)[48]))
	
.LOOP $label$24:
	$10 = ($10 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$24 }
	if ( ((int_32)$2 == (int_32)$11) ){ goto $label$26 }
	$10 = (((int_32)((uint_32)($5 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $10)
	goto $label$25 
	
.LABEL $label$26
	$10 = ($10 + [-36])
	
.LABEL $label$25
	$11 = ($10 + [12])
	if ( ($11 <= [513]) ){ goto $label$28 }
	$10 = CALL $746($11)
	goto $label$27 
	
.LABEL $label$28
	$10 = ($3 - (($11 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$27
	*($4 + [196]) = $10
	*($4 + [192]) = $10
	*($4 + [200]) = ($10 + $11)
	CALL $589(($4 + [192]), $1)
	CALL db_update_i64(*(($1 + [68])), (int_64)0, $10, $11)
	if ( ($11 <= [513]) ){ goto $label$29 }
	CALL $749($10)
	
.LABEL $label$29
	if ( ((uint_64)*($0 + [16]) > (uint_64)$8) ){ goto $label$30 }
	*(($0 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$30
	*($4 + [184]) = *(($1 + [32]))
	if ( (CALL $742(($4 + [168]), ($4 + [184]), [8]) == 0) ){ goto $label$31 }
	$1 = ($1 + [72])
	$10 = *($1)
	if ( ((int_32)$10 > (int_32)[-1]) ){ goto $label$32 }
	$10 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6138621011882409984, ($4 + [176]), $8)
	*($1) = $10
	
.LABEL $label$32
	CALL db_idx64_update($10, (int_64)0, ($4 + [184]))
	
.LABEL $label$31
	$global$0 = ($4 + [240])
}

void .FUNC $555 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $556($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $659 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $553 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [3]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [8])
	$4 = (*($7) + [8])
	*($7) = $4
	$6 = ($6 + [8])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $550 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [40])) = *(($5 + [40]))
	*(($1 + [32])) = *(($5 + [32]))
	*(($1 + [24])) = *(($5 + [24]))
	*(($1 + [16])) = *(($5 + [16]))
	*(($1 + [8])) = *(($5 + [8]))
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $551(($1 + [48]), *($5 + [48]), *(($5 + [52])))
	
.LABEL $label$1
	$7 = *($1 + [48])
	$6 = *(($1 + [52]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	$5 = [41]
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$3 }
	$5 = (($8 & [-8]) + $5)
	
.LABEL $label$3
	if ( ($5 <= [513]) ){ goto $label$5 }
	$2 = CALL $746($5)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $5)
	CALL $552($3, $1)
	*($1 + [68]) = CALL db_store_i64(*($4 + [8]), (int_64)-7297072577464238080, *(*($0 + [8])), (int_64)-7297072577464238080, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $749($2)
	
.LABEL $label$6
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)-7297072577464238080) ){ goto $label$7 }
	*(($4 + [16])) = (int_64)-7297072577464238079
	
.LABEL $label$7
	$global$0 = ($3 + [16])
}

void .FUNC $223 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	$4 = ($global$0 - [240])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = (int_64)0
	$7 = *($1 + [8])
	$9 = *($1)
	$8 = *($1 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($10 = CALL _Znwj([24])) + [8]) = $7
	*($10) = $9
	*($10 + [16]) = $8
	CALL sha256($10, [24], ($5 + [208]))
	$6 = *($5 + [208])
	if ( ($10 == 0) ){ goto $label$3 }
	CALL _ZdlPv($10)
	
.LABEL $label$3
	CALL $7(($5 + [120]), ($1 + [48]), [100])
	$11 = *($5 + [124])
	$10 = *($5 + [120])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$7 }
	$12 = (($5 + [48]) | [1])
	$13 = [0]
	
.LOOP $label$8:
	$14 = ($10 + [8])
	if ( ((int_64)*($14) < (int_64)1) ){ goto $label$9 }
	*($5 + [104]) = [8617]
	*($5 + [108]) = CALL $743([8617])
	*($5 + [40]) = *($5 + [104])
	CALL $10(($5 + [112]), ($5 + [40]))
	$13 = *($3)
	*(($15 = (($5 + [80]) + [16]))) = *(($13 + [16]))
	*(($16 = (($5 + [80]) + [8]))) = *(($13 + [8]))
	*($5 + [80]) = *($13)
	$7 = *($14)
	$8 = *(($10 + [16]))
	*(($17 = (($5 + [48]) + [8]))) = [0]
	*(($18 = (($5 + [64]) + [8]))) = $8
	*($5 + [48]) = (int_64)0
	*($5 + [64]) = $7
	$13 = CALL $743([30350])
	if ( ((uint_32)$13 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$13 >= (uint_32)[11]) ){ goto $label$12 }
	*($5 + [48]) = ($13 << [1])
	$14 = $12
	if ( $13 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$19 = (($13 + [16]) & [-16])
	$14 = CALL _Znwj($19)
	*($17) = $14
	*($5 + [48]) = ($19 | [1])
	*($5 + [52]) = $13
	
.LABEL $label$11
	CALL memcpy($14, [30350], $13)
	
.LABEL $label$10
	*(($14 + $13)) = [0]
	$7 = *($10)
	$8 = *($5 + [112])
	$9 = *($18)
	*((($5 + [160]) + [8])) = $9
	$20 = *($16)
	*((($5 + [136]) + [8])) = $20
	$21 = *($15)
	*((($5 + [136]) + [16])) = $21
	*(($13 = (($5 + [208]) + [8]))) = $20
	*(($14 = (($5 + [208]) + [16]))) = $21
	*(($15 = (($5 + [192]) + [8]))) = $9
	$9 = *($5 + [64])
	*($5 + [160]) = $9
	$20 = *($5 + [80])
	*($5 + [136]) = $20
	*($5 + [208]) = $20
	*($5 + [192]) = $9
	$16 = CALL $709(($5 + [176]), ($5 + [48]))
	*((($5 + [16]) + [16])) = *($14)
	*((($5 + [16]) + [8])) = *($13)
	*(($5 + [8])) = *($15)
	*($5 + [16]) = *($5 + [208])
	*($5) = *($5 + [192])
	CALL $9($8, ($5 + [16]), $5, $16, $7)
	if ( ((*($5 + [176]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*((($5 + [176]) + [8])))
	
.LABEL $label$13
	$13 = [1]
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($17))
	
.LABEL $label$9
	$10 = ($10 + [24])
	if ( ((int_32)$11 != (int_32)$10) ){ goto $label$8 }
	if ( ($13 & [1]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [30384])
	
.LABEL $label$6
	$10 = *($5 + [120])
	if ( ($10 == 0) ){ goto $label$14 }
	*($5 + [124]) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$14
	$7 = (int_64)0
	$8 = *(($1 + [8]))
	$20 = *($1)
	$9 = *(($1 + [16]))
	if ( ((int_64)((int_64)$9 | (int_64)$20) != (int_64)0) ){ goto $label$16 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	*(($10 = CALL _Znwj([24])) + [8]) = $8
	*($10) = $20
	*($10 + [16]) = $9
	CALL sha256($10, [24], ($5 + [208]))
	$7 = *($5 + [208])
	if ( ($10 == 0) ){ goto $label$15 }
	CALL _ZdlPv($10)
	
.LABEL $label$15
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$17 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$17
	$10 = [48]
	$14 = *($1 + [48])
	$13 = *(($1 + [52]))
	$15 = ($13 - $14)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$15 / (int_32)[48]))
	
.LOOP $label$18:
	$10 = ($10 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$18 }
	if ( ((int_32)$14 == (int_32)$13) ){ goto $label$19 }
	$10 = ((((int_32)((uint_32)($15 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $10) + [36])
	
.LABEL $label$19
	$13 = ($10 + [16])
	if ( ($13 <= [513]) ){ goto $label$21 }
	$10 = CALL $746($13)
	goto $label$20 
	
.LABEL $label$21
	$10 = ($4 - (($13 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$20
	*($5 + [212]) = $10
	*($5 + [208]) = $10
	*($5 + [216]) = ($10 + $13)
	CALL $582(($5 + [208]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $10, $13)
	if ( ($13 <= [513]) ){ goto $label$22 }
	CALL $749($10)
	
.LABEL $label$22
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$23 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$23
	$global$0 = ($5 + [240])
	return (unreachable)
	
.LABEL $label$5
	CALL $708(($5 + [48]))
}

void .FUNC $389 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	CALL $601(*($0 + [4]), $1)
	$5 = *($1)
	$6 = ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($6 + [64])
	$7 = (CASTING uint_64)(uint_32 $6)
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $5)
	CALL $602($3, $1)
	$7 = ((int_64)*($1 + [64]) + (int_64)*($1 + [72]))
	*($1 + [84]) = CALL db_store_i64(*($4 + [8]), (int_64)7035938067009503232, *(*($0 + [8])), $7, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $749($2)
	
.LABEL $label$4
	if ( (uint_64)($7 <= *($4 + [16])) ){ goto $label$5 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$5
	$global$0 = ($3 + [16])
}

void .FUNC $388 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = *($1 + [64])
	$7 = *($1 + [72])
	CALL $601($3, $1)
	$7 = ((int_64)$6 + (int_64)$7)
	if ( ((int_64)$7 == (int_64)((int_64)*($1 + [64]) + (int_64)*($1 + [72]))) ){ goto $label$3 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$3
	$3 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($8 + [64])
	$6 = (CASTING uint_64)(uint_32 $8)
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $746($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $602($5, $1)
	CALL db_update_i64(*(($1 + [84])), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$7 }
	CALL $749($4)
	
.LABEL $label$7
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$global$0 = ($5 + [16])
}

void .FUNC $383 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	if ( ((int_32)$4 <= (int_32)[-3]) ){ goto $label$2 }
	$4 = (*($0 + [8]) - $3)
	$5 = int_32($4 >> [1])
	$6 = ($5 + [1])
	$4 = ( ( $6 ? $4 : ($4 <= $6) ) ? [2147483647] : (int_32($4 >> [1]) <= [1073741823]) )
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL _Znwj(($4 << [1]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$6 = [0]
	
.LABEL $label$3
	*(($5 = ($6 + ($5 << [1])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($5 - $2)
	$4 = ($6 + ($4 << [1]))
	$6 = ($5 + [2])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	CALL abort()
	(unreachable)
}

void .FUNC $382 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	$5 = ($4 + [1])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)$7 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj($6)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	*(($4 = ($5 + $4))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + $6)
	$5 = ($4 + [1])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $381 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	$6 = ($global$0 - [176])
	$global$0 = $6
	$8 = *($3)
	$7 = *($3 + [4])
	$9 = ((int_64)*($4) / (int_64)(CASTING uint_64)(uint_32 ($7 - $8)))
	*($4) = $9
	*($6 + [56]) = (int_64)0
	$10 = *($4 + [8])
	*($6 + [64]) = $10
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$10 = $11
	$12 = $4
	goto $label$4 
	
.LABEL $label$5
	$10 = $11
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$13 = ((int_32)$4 < (int_32)[6])
	$12 = ($4 + [1])
	$4 = $12
	if ( $13 ){ goto $label$6 }
	
.LABEL $label$4
	$4 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [22633])
	$7 = *(($3 + [4]))
	$8 = *($3)
	
.LABEL $label$1
	$14 = [0]
	*($6 + [48]) = [0]
	*($6 + [40]) = (int_64)0
	*($6 + [32]) = [0]
	*($6 + [24]) = (int_64)0
	*($6 + [16]) = [0]
	*($6 + [8]) = (int_64)0
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$13 }
	$15 = ($2 + [14])
	$16 = ($2 + [12])
	$17 = ($2 + [10])
	$18 = ($2 + [9])
	$19 = ($2 + [8])
	$20 = ($2 + [7])
	$21 = ($2 + [6])
	$22 = ($2 + [5])
	$23 = ($2 + [2])
	$24 = (($5 + [-7]) <= [3])
	$25 = ($5 & [255])
	$26 = ($2 + [11])
	$27 = ($2 + [13])
	
.LOOP $label$14:
	$4 = (*($8) + [-1])
	if ( ((uint_32)$4 > (uint_32)[4]) ){ goto $label$10 }
	$3 = *($15)
	$28 = *($16)
	$29 = *($17)
	$13 = *($18)
	$30 = *($19)
	$31 = *($20)
	$5 = *($21)
	$12 = *($22)
	$32 = *(($2 + [4]))
	$33 = *($23)
	$34 = *($2)
	goto $label$17 
	
.LABEL $label$22
	$5 = *(($2 + [1]))
	$30 = *(($2 + [3]))
	$13 = $32
	$31 = $33
	goto $label$18 
	
.LABEL $label$21
	$13 = $3
	$31 = $33
	$12 = $29
	if ( ($24 == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$20
	$5 = *($26)
	$30 = *($27)
	$13 = $3
	$31 = $28
	$12 = $29
	if ( ($24 == 0) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$19
	$13 = $32
	$31 = $28
	
.LABEL $label$18
	$12 = $34
	
.LABEL $label$17
	if ( $24 ){ goto $label$15 }
	
.LABEL $label$16
	CALL eosio_assert([0], [19455])
	
.LABEL $label$15
	*($6 + [73]) = $5
	*($6 + [72]) = $12
	*($6 + [74]) = $31
	*($6 + [75]) = $30
	*($6 + [76]) = $13
	if ( ((int_32)$25 == (int_32)[9]) ){ goto $label$24 }
	if ( ((int_32)$25 == (int_32)[8]) ){ goto $label$25 }
	if ( ((int_32)$25 != (int_32)[7]) ){ goto $label$10 }
	CALL memcpy(($6 + [80]), [28336], [90])
	$3 = [700]
	goto $label$23 
	
.LABEL $label$25
	CALL memcpy(($6 + [80]), [28432], [90])
	$3 = [500]
	goto $label$23 
	
.LABEL $label$24
	CALL memcpy(($6 + [80]), [28528], [90])
	$3 = [400]
	
.LABEL $label$23
	$4 = [1]
	if ( ((int_32)($12 & [255]) != (int_32)[9]) ){ goto $label$29 }
	$4 = [2]
	$12 = $5
	if ( ((int_32)($5 & [255]) != (int_32)[9]) ){ goto $label$29 }
	$4 = [3]
	$12 = $31
	if ( ((int_32)($31 & [255]) != (int_32)[9]) ){ goto $label$29 }
	$4 = [4]
	$12 = $30
	if ( ((int_32)($30 & [255]) != (int_32)[9]) ){ goto $label$29 }
	$4 = [5]
	if ( ((int_32)($13 & [255]) != (int_32)[9]) ){ goto $label$28 }
	$13 = [0]
	goto $label$27 
	
.LABEL $label$29
	
.LOOP $label$31:
	$13 = *((($6 + [72]) + $4))
	if ( ((int_32)($12 & [255]) == (int_32)$13) ){ goto $label$32 }
	if ( ((int_32)$13 != (int_32)[9]) ){ goto $label$30 }
	
.LABEL $label$32
	$4 = ($4 + [1])
	if ( ($4 <= [5]) ){ goto $label$31 }
	
.LABEL $label$30
	$13 = $12
	
.LABEL $label$28
	$3 = *((((($6 + [80]) + ((int_32)($13 & [255]) * (int_32)[10])) + ($4 << [1])) + [-2]))
	if ( ($3 == 0) ){ goto $label$26 }
	
.LABEL $label$27
	$4 = *($6 + [44])
	if ( ((int_32)$4 == (int_32)*((($6 + [40]) + [8]))) ){ goto $label$34 }
	*($4) = *($8)
	*($6 + [44]) = (*($6 + [44]) + [1])
	goto $label$33 
	
.LABEL $label$34
	CALL $382(($6 + [40]), $8)
	
.LABEL $label$33
	*($6 + [80]) = $13
	$4 = *($6 + [28])
	if ( ((uint_32)$4 >= (uint_32)*((($6 + [24]) + [8]))) ){ goto $label$36 }
	*($4) = $13
	*($6 + [28]) = (*($6 + [28]) + [1])
	goto $label$35 
	
.LABEL $label$36
	CALL $154(($6 + [24]), ($6 + [80]))
	
.LABEL $label$35
	*($6 + [80]) = $3
	$4 = *($6 + [12])
	if ( ((uint_32)$4 >= (uint_32)*((($6 + [8]) + [8]))) ){ goto $label$38 }
	*($4) = $3
	*($6 + [12]) = ($4 + [2])
	goto $label$37 
	
.LABEL $label$38
	CALL $383(($6 + [8]), ($6 + [80]))
	
.LABEL $label$37
	*($6 + [56]) = ((int_64)*($6 + [56]) + (int_64)((int_64)$9 * (int_64)(CASTING uint_64)(uint_32 $3)))
	
.LABEL $label$26
	$8 = ($8 + [1])
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$14 }
	if ( ((uint_64)((int_64)*($6 + [56]) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$12 }
	
.LABEL $label$13
	$10 = (uint_64)*(($6 + [64])) >> (uint_64)(int_64)8)
	
.LOOP $label$39:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$41 }
	$10 = $9
	$13 = $14
	goto $label$40 
	
.LABEL $label$41
	$10 = $9
	
.LOOP $label$42:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$4 = ((int_32)$14 < (int_32)[6])
	$13 = ($14 + [1])
	$14 = $13
	if ( $4 ){ goto $label$42 }
	
.LABEL $label$40
	$14 = ($13 + [1])
	if ( ((int_32)$13 < (int_32)[6]) ){ goto $label$39 }
	goto $label$11 
	
.LABEL $label$12
	CALL $384(($6 + [80]), [19652], ($6 + [56]))
	if ( (*($6 + [80]) & [1]) ){ goto $label$44 }
	$4 = (($6 + [80]) | [1])
	goto $label$43 
	
.LABEL $label$44
	$4 = *($6 + [88])
	CALL _ZdlPv($4)
	
.LABEL $label$43
	CALL eosio_assert([0], $4)
	
.LABEL $label$11
	*($0) = *($6 + [56])
	*($0 + [16 align=4]) = (int_64)0
	*(($0 + [24])) = [0]
	*(($0 + [8])) = *((($6 + [56]) + [8]))
	$4 = (*($6 + [44]) - *($6 + [40]))
	if ( ($4 == 0) ){ goto $label$45 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	$13 = CALL _Znwj($4)
	*(($0 + [16])) = $13
	*(($12 = ($0 + [20]))) = $13
	*(($0 + [24])) = ($13 + $4)
	$8 = *($6 + [40])
	$4 = (*($6 + [44]) - $8)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$45 }
	CALL memcpy($13, $8, $4)
	*($12) = (*($12) + $4)
	
.LABEL $label$45
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$4 = (*($6 + [28]) - *($6 + [24]))
	if ( ($4 == 0) ){ goto $label$46 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$8 }
	$13 = CALL _Znwj($4)
	*(($0 + [28])) = $13
	*(($12 = ($0 + [32]))) = $13
	*(($0 + [36])) = ($13 + $4)
	$8 = *($6 + [24])
	$4 = (*($6 + [28]) - $8)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$46 }
	CALL memcpy($13, $8, $4)
	*($12) = (*($12) + $4)
	
.LABEL $label$46
	*($0 + [40 align=4]) = (int_64)0
	*(($0 + [48])) = [0]
	$4 = *($6 + [8])
	$13 = (*($6 + [12]) - $4)
	if ( ($13 == 0) ){ goto $label$47 }
	if ( ((int_32)$13 <= (int_32)[-1]) ){ goto $label$7 }
	$12 = CALL _Znwj($13)
	*(($0 + [40])) = $12
	*(($8 = ($0 + [44]))) = $12
	*(($0 + [48])) = ($12 + (int_32($13 >> [1]) << [1]))
	$4 = *($6 + [8])
	$13 = (*($6 + [12]) - $4)
	if ( ((int_32)$13 < (int_32)[1]) ){ goto $label$47 }
	CALL memcpy($12, $4, $13)
	*($8) = (*($8) + $13)
	$4 = *($6 + [8])
	
.LABEL $label$47
	if ( ($4 == 0) ){ goto $label$48 }
	*($6 + [12]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$48
	$4 = *($6 + [24])
	if ( ($4 == 0) ){ goto $label$49 }
	*($6 + [28]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$49
	$4 = *($6 + [40])
	if ( ($4 == 0) ){ goto $label$50 }
	*($6 + [44]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$50
	$global$0 = ($6 + [176])
	return (unreachable)
	
.LABEL $label$10
	
.LABEL $label$9
	CALL $727(($0 + [16]))
	
.LABEL $label$8
	CALL $727(($0 + [28]))
	
.LABEL $label$7
	CALL $727(($0 + [40]))
	$4
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $380 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$5 = ($global$0 - [48])
	$global$0 = $5
	$6 = (int_64)1
	if ( ($4 == 0) ){ goto $label$1 }
	$7 = *([0] + [8632])
	if ( $7 ){ goto $label$2 }
	$8 = CALL _Znwj([280])
	$7 = CALL $111($8)
	*([0] + [8632]) = $8
	
.LABEL $label$2
	*($5 + [32]) = [19616]
	*($5 + [36]) = CALL $743([19616])
	*($5 + [8]) = *($5 + [32])
	$6 = CALL $153($7, *(CALL $10(($5 + [40]), ($5 + [8]))), (int_64)5)
	
.LABEL $label$1
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((int_32)$3 != (int_32)[1]) ){ goto $label$4 }
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$6 }
	$7 = CALL _Znwj([280])
	$3 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$6
	*($5 + [16]) = [19640]
	*($5 + [20]) = CALL $743([19640])
	*($5) = *($5 + [16])
	$6 = ((int_64)CALL $153($3, *(CALL $10(($5 + [24]), $5)), (int_64)1500) * (int_64)$6)
	$9 = (int_64)87167674696196
	goto $label$3 
	
.LABEL $label$5
	$9 = (int_64)1397703940
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [8302])
	$9 = (int_64)1398362884
	
.LABEL $label$3
	$10 = (int_64)1
	if ( (uint_64)($2 <= (int_64)9886) ){ goto $label$7 }
	if ( ($4 == 0) ){ goto $label$7 }
	$10 = (int_64)10
	if ( (uint_64)($2 <= (int_64)9986) ){ goto $label$7 }
	$10 = (int_64)100
	if ( (uint_64)($2 <= (int_64)9994) ){ goto $label$7 }
	$10 = (int_64)1000
	if ( (uint_64)($2 <= (int_64)9998) ){ goto $label$7 }
	$10 = (int_64)10000
	if ( (uint_64)($2 <= (int_64)10000) ){ goto $label$7 }
	$10 = ( (int_64)100000 ? (int_64)1 : ((int_64)$2 == (int_64)10000) )
	
.LABEL $label$7
	*($0 + [8]) = $9
	$6 = ((int_64)$10 * (int_64)$6)
	*($0) = $6
	if ( (uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$8 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$8
	$6 = (uint_64)$9 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$9 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$13 }
	$6 = $9
	$3 = $0
	goto $label$12 
	
.LABEL $label$13
	$6 = $9
	
.LOOP $label$14:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$3 = ($0 + [1])
	$0 = $3
	if ( $4 ){ goto $label$14 }
	
.LABEL $label$12
	$0 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [22633])
	
.LABEL $label$9
	$global$0 = ($5 + [48])
}

void .FUNC $387 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)((int_64)*($6 + [64]) + (int_64)*($6 + [72])) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [80]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067009503232, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $391($1, $5)
	if ( ((int_32)*($5 + [80]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $386 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = ($global$0 - [208])
	$global$0 = $5
	*($5 + [168]) = $2
	$6 = *($3)
	if ( ((int_64)$6 != (int_64)0) ){ goto $label$2 }
	if ( (int_64)(*($4) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($5 + [112]) = [8617]
	*($5 + [116]) = CALL $743([8617])
	*($5 + [32]) = *($5 + [112])
	$7 = CALL $10(($5 + [120]), ($5 + [32]))
	*($5 + [104]) = [8617]
	*($5 + [108]) = CALL $743([8617])
	*($5 + [24]) = *($5 + [104])
	CALL $10(($5 + [80]), ($5 + [24]))
	*(($5 + [160])) = [0]
	*($5 + [136]) = (int_64)4298345121774150816
	*($5 + [144]) = (int_64)-1
	*($5 + [152]) = (int_64)0
	*($5 + [128]) = *($7)
	$6 = *(( ($4 + [8]) ? ($3 + [8]) : (int_64)($6 == 0) ))
	*($5 + [96]) = $6
	*($5 + [88]) = $3
	*($5 + [92]) = $4
	*($5 + [84]) = ($5 + [96])
	*($5 + [80]) = ($5 + [168])
	CALL $387(($5 + [72]), ($5 + [128]), ((int_64)$6 + (int_64)(CASTING uint_64)(uint_32 $2)))
	if ( (*($5 + [76]) == 0) ){ goto $label$4 }
	*($5 + [40]) = [8617]
	$3 = *($5 + [76])
	*($5 + [44]) = CALL $743([8617])
	*($5 + [16]) = *($5 + [40])
	$6 = *(CALL $10(($5 + [48]), ($5 + [16])))
	if ( $3 ){ goto $label$5 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$5
	CALL $388(($5 + [128]), $3, $6, ($5 + [80]))
	$2 = *($5 + [152])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	*($5 + [56]) = [8617]
	*($5 + [60]) = CALL $743([8617])
	*($5 + [8]) = *($5 + [56])
	*($5 + [200]) = *(CALL $10(($5 + [64]), ($5 + [8])))
	if ( ((int_64)*($5 + [128]) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$6
	*($5 + [180]) = ($5 + [80])
	*($5 + [176]) = ($5 + [128])
	*($5 + [184]) = ($5 + [200])
	*(($3 = CALL _Znwj([96])) + [8]) = [0]
	*($3) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [48]) = (int_64)0
	*($3 + [56]) = (int_64)0
	*($3 + [80]) = ($5 + [128])
	CALL $389(($5 + [176]), $3)
	*($5 + [192]) = $3
	$6 = ((int_64)*($3 + [64]) + (int_64)*($3 + [72]))
	*($5 + [176]) = $6
	$2 = *($3 + [84])
	*($5 + [172]) = $2
	$7 = ($5 + [156])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($5 + [160]))) ){ goto $label$8 }
	*($4 + [8]) = $6
	*($4 + [16]) = $2
	*($5 + [192]) = [0]
	*($4) = $3
	*($7) = ($4 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $390(($5 + [152]), ($5 + [192]), ($5 + [176]), ($5 + [172]))
	
.LABEL $label$7
	$3 = *($5 + [192])
	*($5 + [192]) = [0]
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ((*($3) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$10
	CALL _ZdlPv($3)
	
.LABEL $label$9
	$2 = *($5 + [152])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$3
	$7 = ($5 + [156])
	$3 = *($7)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$14 }
	if ( ((*($4) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$15
	CALL _ZdlPv($4)
	
.LABEL $label$14
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$13 }
	$3 = *(($5 + [152]))
	goto $label$11 
	
.LABEL $label$12
	$3 = $2
	
.LABEL $label$11
	*($7) = $2
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($5 + [208])
}

void .FUNC $385 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_64 $16
	$6 = ($global$0 - [2592])
	$global$0 = $6
	$7 = (*($2 + [4]) - *($2))
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = *($3)
	if ( ((int_32)$7 == (int_32)int_32((*($3 + [4]) - $8) >> [4])) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [19685])
	$8 = *($3)
	
.LABEL $label$1
	*($0) = (int_64)0
	$9 = *($8 + [8])
	*($0 + [8]) = $9
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	$8 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$10 = $11
	$12 = $8
	goto $label$6 
	
.LABEL $label$7
	$10 = $11
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$7 = ((int_32)$8 < (int_32)[6])
	$12 = ($8 + [1])
	$8 = $12
	if ( $7 ){ goto $label$8 }
	
.LABEL $label$6
	$8 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [22633])
	
.LABEL $label$3
	$12 = *($2)
	$13 = ($2 + [4])
	if ( ((int_32)*($13) == (int_32)$12) ){ goto $label$9 }
	$7 = [8]
	$10 = (int_64)0
	$8 = [0]
	
.LOOP $label$10:
	$12 = ($12 + $8)
	if ( ($5 == 0) ){ goto $label$12 }
	CALL memcpy(($6 + [1304]), [23248], [1288])
	$14 = *($12)
	$12 = (($6 + [1304]) + ($14 << [3]))
	goto $label$11 
	
.LABEL $label$12
	CALL memcpy(($6 + [1304]), [24536], [1256])
	$14 = *($12)
	$12 = (($6 + [1304]) + ($14 << [3]))
	
.LABEL $label$11
	if ( (int_64)(((int_64)((int_64)1 << (int_64)*($4)) & (int_64)*($12)) == 0) ){ goto $label$16 }
	if ( ($5 == 0) ){ goto $label$15 }
	CALL memcpy(($6 + [16]), [25792], [1288])
	$12 = *((($6 + [16]) + ($14 << [3])))
	if ( $12 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$16
	$12 = [0]
	if ( [0] ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL memcpy(($6 + [16]), [27080], [1256])
	$12 = *((($6 + [16]) + ($14 << [3])))
	if ( ($12 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$11 = (CASTING int_64)(int_32 $12)
	$14 = (*($3) + $7)
	$11 = *(($14 + [-8]))
	CALL __multi3($6, $11, (int_64)$11 >> (int_64)63), $11, (int_64)$11 >> (int_64)63))
	$15 = *($14)
	$11 = *(($6 + [8]))
	$16 = *($6)
	if ( (( (uint_64)($16 <= (int_64)4611686018427387904) ? ((int_64)$11 < (int_64)0) : (int_64)($11 == 0) ) == 0) ){ goto $label$20 }
	if ( ( ((uint_64)$16 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$11 > (int_64)-1) : ((int_64)$11 == (int_64)-1) ) ){ goto $label$19 }
	CALL eosio_assert([0], [28835])
	if ( ((int_64)$15 != (int_64)$9) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$20
	CALL eosio_assert([0], [28811])
	
.LABEL $label$19
	if ( ((int_64)$15 == (int_64)$9) ){ goto $label$17 }
	
.LABEL $label$18
	CALL eosio_assert([0], [28618])
	
.LABEL $label$17
	$10 = ((int_64)$10 + (int_64)$16)
	*($0) = $10
	if ( ((int_64)$10 <= (int_64)-4611686018427387904) ){ goto $label$21 }
	if ( ((int_64)$10 < (int_64)4611686018427387904) ){ goto $label$13 }
	CALL eosio_assert([0], [28680])
	goto $label$13 
	
.LABEL $label$21
	CALL eosio_assert([0], [28661])
	
.LABEL $label$13
	$7 = ($7 + [16])
	$12 = *($2)
	$8 = ($8 + [1])
	if ( ($8 <= (*($13) - $12)) ){ goto $label$10 }
	
.LABEL $label$9
	$global$0 = ($6 + [2592])
}

void .FUNC $384 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [32]) = ($4 << [1])
	$5 = (($3 + [32]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [32]) = ($6 | [1])
	*($3 + [40]) = $5
	*($3 + [36]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	*(($4 = (($3 + [48]) + [8]))) = *(($2 + [8]))
	*($3 + [48]) = *($2)
	$7 = *($4)
	*((($3 + [64]) + [8])) = $7
	*((($3 + [80]) + [8])) = $7
	*(($3 + [8])) = $7
	$7 = *($3 + [48])
	*($3 + [80]) = $7
	*($3 + [64]) = $7
	*($3) = $7
	CALL $5(($3 + [16]), $3)
	$4 = *($3 + [16])
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [32]), ( *($3 + [24]) ? (($3 + [16]) | [1]) : $5 ), ( *($3 + [20]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*((($3 + [16]) + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [40]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [32]))
}

void .FUNC $689 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [448])
	$global$0 = $2
	$3 = CALL $109(($2 + [8]))
	CALL $451($3, $1)
	CALL $130($3)
	$global$0 = ($2 + [448])
}

void .FUNC $690 (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $693 (int_32 $0)
{
}

void .FUNC $310 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	$2 = ($global$0 - [208])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($0)
	$6 = (int_64)5459781
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $6) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$8 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$6 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$6 = $8
	$9 = $7
	goto $label$4 
	
.LABEL $label$5
	$6 = $8
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$6 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	$10 = ((int_32)$7 < (int_32)[6])
	$9 = ($7 + [1])
	$7 = $9
	if ( $10 ){ goto $label$6 }
	
.LABEL $label$4
	$7 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [22633])
	
.LABEL $label$1
	*($1 + [64]) = (int_64)0
	*(($1 + [72])) = (int_64)1397703940
	$7 = *(*($4) + [4])
	if ( ($7 == 0) ){ goto $label$8 }
	*($1 + [24]) = *($7)
	*(($1 + [40])) = *(($7 + [16]))
	*(($1 + [32])) = *(($7 + [8]))
	$7 = ($1 + [24])
	goto $label$7 
	
.LABEL $label$8
	$7 = ($1 + [24])
	
.LABEL $label$7
	$10 = *($4 + [8])
	*($1) = *($10)
	*(($1 + [16])) = *(($10 + [16]))
	*(($1 + [8])) = *(($10 + [8]))
	*($3 + [136]) = [8617]
	*($3 + [140]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [136])
	$10 = CALL $10(($3 + [144]), ($3 + [24]))
	*($3 + [120]) = [8344]
	*($3 + [124]) = CALL $743([8344])
	*($3 + [16]) = *($3 + [120])
	$9 = CALL $10(($3 + [128]), ($3 + [16]))
	*($3 + [104]) = [8617]
	$6 = *($9)
	$8 = *($10)
	*($3 + [108]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [104])
	$9 = CALL $10(($3 + [112]), ($3 + [8]))
	*($3 + [88]) = [29726]
	*($3 + [92]) = CALL $743([29726])
	*($3) = *($3 + [88])
	$11 = CALL $10(($3 + [96]), $3)
	$10 = *($4 + [8])
	$12 = *(($10 + [8]))
	$13 = *(($10 + [16]))
	$14 = *($10)
	*((($3 + [32]) + [32])) = *(($7 + [8]))
	*(($3 + [72])) = *(($7 + [16]))
	*((($3 + [32]) + [16])) = $13
	*((($3 + [32]) + [8])) = $12
	*($3 + [32]) = $14
	*($3 + [152]) = *($9)
	*($3 + [56]) = *($7)
	*($3 + [160]) = *($11)
	*(($7 = CALL _Znwj([16]))) = $8
	*($7 + [8]) = $6
	*(($3 + [188])) = [0]
	$10 = ($7 + [16])
	*((($3 + [152]) + [24])) = $10
	*(($3 + [172])) = $10
	*($3 + [168]) = $7
	*($3 + [180 align=4]) = (int_64)0
	CALL $11(($3 + [180]), [48])
	$7 = *((($3 + [152]) + [32]))
	$10 = *($3 + [180])
	*($3 + [196]) = $10
	*($3 + [192]) = $10
	*($3 + [200]) = $7
	CALL $156(($3 + [192]), ($3 + [32]))
	CALL $156(($3 + [192]), (($3 + [32]) + [24]))
	CALL $13(($3 + [192]), ($3 + [152]))
	$7 = *($3 + [192])
	CALL send_inline($7, (*($3 + [196]) - $7))
	$7 = *($3 + [192])
	if ( ($7 == 0) ){ goto $label$9 }
	*($3 + [196]) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$9
	$7 = *($3 + [180])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($3 + [184])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$10
	$7 = *($3 + [168])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($3 + [172])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$11
	$7 = [48]
	$9 = *($1 + [48])
	$10 = *(($1 + [52]))
	$4 = ($10 - $9)
	$6 = (CASTING uint_64)(uint_32 ((int_32)$4 / (int_32)[48]))
	
.LOOP $label$12:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$13 }
	$7 = ((((int_32)((uint_32)($4 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $7) + [36])
	
.LABEL $label$13
	$10 = ($7 + [16])
	if ( ($10 <= [513]) ){ goto $label$15 }
	$7 = CALL $746($10)
	goto $label$14 
	
.LABEL $label$15
	$7 = ($2 - (($10 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$14
	*($3 + [156]) = $7
	*($3 + [152]) = $7
	*($3 + [160]) = ($7 + $10)
	CALL $582(($3 + [152]), $1)
	$6 = (int_64)0
	$8 = *($1 + [8])
	$13 = *($1)
	$12 = *($1 + [16])
	if ( ((int_64)((int_64)$12 | (int_64)$13) != (int_64)0) ){ goto $label$17 }
	$12 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	*(($9 = CALL _Znwj([24])) + [8]) = $8
	*($9) = $13
	*($9 + [16]) = $12
	CALL sha256($9, [24], ($3 + [32]))
	$6 = *($3 + [32])
	if ( ($9 == 0) ){ goto $label$16 }
	CALL _ZdlPv($9)
	
.LABEL $label$16
	*($1 + [84]) = CALL db_store_i64(*($5 + [8]), (int_64)7035936280380043264, *(*($0 + [8])), $6, $7, $10)
	if ( ($10 <= [513]) ){ goto $label$18 }
	CALL $749($7)
	
.LABEL $label$18
	if ( (uint_64)($6 <= *($5 + [16])) ){ goto $label$19 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$19
	$global$0 = ($3 + [208])
}

void .FUNC $311 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [48])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $312 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$2 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$2 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$6 = (int_64)0
	*(($5 = CALL _Znwj([96])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = $0
	CALL $306(CALL $537(CALL $168(CALL $168(($3 + [16]), $5), ($5 + [24])), ($5 + [48])), ($5 + [64]))
	*($5 + [84]) = $1
	*($3 + [8]) = $5
	$7 = *($5 + [8])
	$9 = *($5)
	$8 = *($5 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$9 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	*(($1 = CALL _Znwj([24])) + [8]) = $7
	*($1) = $9
	*($1 + [16]) = $8
	CALL sha256($1, [24], ($3 + [32]))
	$6 = *($3 + [32])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	*($3 + [32]) = $6
	$10 = *($3 + [8])
	$11 = *($10 + [84])
	*($3 + [4]) = $11
	$12 = ($0 + [28])
	$1 = *($12)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($1 + [8]) = $6
	*($1 + [16]) = $11
	*($3 + [8]) = [0]
	*($1) = $10
	*($12) = ($1 + [24])
	if ( $2 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $311(($0 + [24]), ($3 + [8]), ($3 + [32]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $749($4)
	
.LABEL $label$10
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [48])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($1 + [52])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$13
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $313 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $583($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $314 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $583($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $315 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = (int_64)0
	$7 = *($1 + [8])
	$9 = *($1)
	$8 = *($1 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($10 = CALL _Znwj([24])) + [8]) = $7
	*($10) = $9
	*($10 + [16]) = $8
	CALL sha256($10, [24], $5)
	$6 = *($5)
	if ( ($10 == 0) ){ goto $label$3 }
	CALL _ZdlPv($10)
	
.LABEL $label$3
	$7 = (int_64)0
	$8 = (int_64)0
	$9 = (int_64)0
	$10 = *(*($3) + [4])
	if ( ($10 == 0) ){ goto $label$5 }
	$9 = *($10 + [16])
	$8 = *($10 + [8])
	$7 = *($10)
	
.LABEL $label$5
	*($1 + [24]) = $7
	*(($1 + [32])) = $8
	*(($1 + [40])) = $9
	$8 = *(($1 + [8]))
	$9 = *($1)
	$7 = *(($1 + [16]))
	if ( ((int_64)((int_64)$7 | (int_64)$9) != (int_64)0) ){ goto $label$7 }
	$7 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	*(($10 = CALL _Znwj([24])) + [8]) = $8
	*($10) = $9
	*($10 + [16]) = $7
	CALL sha256($10, [24], $5)
	$7 = *($5)
	if ( ($10 == 0) ){ goto $label$6 }
	CALL _ZdlPv($10)
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$8 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$8
	$10 = [48]
	$11 = *($1 + [48])
	$3 = *(($1 + [52]))
	$12 = ($3 - $11)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$12 / (int_32)[48]))
	
.LOOP $label$9:
	$10 = ($10 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$10 }
	$10 = ((((int_32)((uint_32)($12 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $10) + [36])
	
.LABEL $label$10
	$3 = ($10 + [16])
	if ( ($3 <= [513]) ){ goto $label$12 }
	$10 = CALL $746($3)
	goto $label$11 
	
.LABEL $label$12
	$10 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$11
	*($5 + [4]) = $10
	*($5) = $10
	*($5 + [8]) = ($10 + $3)
	CALL $582($5, $1)
	CALL db_update_i64(*($1 + [84]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$13 }
	CALL $749($10)
	
.LABEL $label$13
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$14 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	$global$0 = ($5 + [32])
}

void .FUNC $316 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [144])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [80]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = (int_64)0
	$7 = *($1 + [8])
	$9 = *($1)
	$8 = *($1 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($10 = CALL _Znwj([24])) + [8]) = $7
	*($10) = $9
	*($10 + [16]) = $8
	CALL sha256($10, [24], ($5 + [96]))
	$6 = *($5 + [96])
	if ( ($10 == 0) ){ goto $label$3 }
	CALL _ZdlPv($10)
	
.LABEL $label$3
	$11 = *($3 + [4])
	$12 = *($3)
	$7 = *($12 + [8])
	$8 = *(*($3 + [8]))
	$3 = *(($1 + [52]))
	$10 = *($1 + [48])
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	if ( ((int_64)*($10) == (int_64)$7) ){ goto $label$7 }
	$10 = ($10 + [48])
	if ( ((int_32)$3 != (int_32)$10) ){ goto $label$9 }
	
.LABEL $label$8
	*($5 + [96]) = $7
	*($5 + [104]) = $8
	$7 = *($12)
	CALL __multi3(($5 + [32]), $7, (int_64)$7 >> (int_64)63), *($11 + [16]), *(($11 + [24])))
	CALL __multi3(($5 + [16]), *($5 + [32]), *((($5 + [32]) + [8])), (int_64)10, (int_64)0)
	CALL __udivti3($5, *($5 + [16]), *((($5 + [16]) + [8])), (int_64)100, (int_64)0)
	*(($10 = (($5 + [96]) + [24]))) = *(($5 + [8]))
	*($5 + [128]) = [1000000000]
	*($5 + [112]) = *($5)
	if ( ((int_32)$3 == (int_32)*(($1 + [56]))) ){ goto $label$6 }
	*($3) = *($5 + [96])
	*(($3 + [8])) = *($5 + [104])
	*(($3 + [40])) = *((($5 + [96]) + [40]))
	*(($3 + [32])) = *((($5 + [96]) + [32]))
	*(($3 + [24])) = *($10)
	*(($3 + [16])) = *((($5 + [96]) + [16]))
	*(($10 = ($1 + [52]))) = (*($10) + [48])
	goto $label$5 
	
.LABEL $label$7
	$7 = *($12)
	CALL __multi3(($5 + [80]), $7, (int_64)$7 >> (int_64)63), *($11 + [16]), *(($11 + [24])))
	CALL __multi3(($5 + [64]), *($5 + [80]), *((($5 + [80]) + [8])), (int_64)10, (int_64)0)
	CALL __udivti3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), (int_64)100, (int_64)0)
	$8 = *($5 + [48])
	$7 = ((int_64)$8 + (int_64)*($3))
	*(($3 = ($10 + [16]))) = $7
	$8 = ((int_64)((int_64)*((($5 + [48]) + [8])) + (int_64)*($10)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($7 <= $8)))
	*(($10 = ($10 + [24]))) = $8
	if ( ( (uint_64)($7 <= (int_64)-999999999) ? (uint_64)($8 <= (int_64)249999999) : ((int_64)$8 == (int_64)249999999) ) ){ goto $label$5 }
	CALL eosio_assert([0], [8307])
	goto $label$5 
	
.LABEL $label$6
	CALL $6(($1 + [48]), ($5 + [96]))
	
.LABEL $label$5
	$7 = (int_64)0
	$8 = *(($1 + [8]))
	$13 = *($1)
	$9 = *(($1 + [16]))
	if ( ((int_64)((int_64)$9 | (int_64)$13) != (int_64)0) ){ goto $label$11 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	*(($10 = CALL _Znwj([24])) + [8]) = $8
	*($10) = $13
	*($10 + [16]) = $9
	CALL sha256($10, [24], ($5 + [96]))
	$7 = *($5 + [96])
	if ( ($10 == 0) ){ goto $label$10 }
	CALL _ZdlPv($10)
	
.LABEL $label$10
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$12 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$12
	$10 = [48]
	$11 = *(($1 + [48]))
	$3 = *(($1 + [52]))
	$12 = ($3 - $11)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$12 / (int_32)[48]))
	
.LOOP $label$13:
	$10 = ($10 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$13 }
	if ( ((int_32)$11 == (int_32)$3) ){ goto $label$14 }
	$10 = ((((int_32)((uint_32)($12 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $10) + [36])
	
.LABEL $label$14
	$3 = ($10 + [16])
	if ( ($3 <= [513]) ){ goto $label$16 }
	$10 = CALL $746($3)
	goto $label$15 
	
.LABEL $label$16
	$10 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$15
	*($5 + [100]) = $10
	*($5 + [96]) = $10
	*($5 + [104]) = ($10 + $3)
	CALL $582(($5 + [96]), $1)
	CALL db_update_i64(*($1 + [84]), $2, $10, $3)
	if ( ($3 <= [513]) ){ goto $label$17 }
	CALL $749($10)
	
.LABEL $label$17
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$18 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$18
	$global$0 = ($5 + [144])
}

void .FUNC $317 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [368])
	$global$0 = $3
	CALL $325(($3 + [320]), $0)
	$4 = *((($3 + [320]) + [12]))
	*((($3 + [296]) + [12])) = $4
	$5 = *((($3 + [320]) + [16]))
	*((($3 + [296]) + [16])) = $5
	*($3 + [296]) = *($3 + [320])
	$6 = *($3 + [328])
	*($3 + [304]) = $6
	*($3 + [316]) = *($3 + [340])
	$7 = CALL $15(*($1 + [8]))
	$8 = *($1 + [8])
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$5:
	if ( ((int_64)*($6) == (int_64)$8) ){ goto $label$3 }
	$6 = ($6 + [48])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$5 }
	
.LABEL $label$4
	$9 = *($1)
	CALL __multi3(($3 + [224]), $9, (int_64)$9 >> (int_64)63), *($2 + [16]), *(($2 + [24])))
	CALL __multi3(($3 + [208]), *($3 + [224]), *((($3 + [224]) + [8])), (int_64)5, (int_64)0)
	CALL __udivti3(($3 + [192]), *($3 + [208]), *((($3 + [208]) + [8])), (int_64)100, (int_64)0)
	*(($6 = (($3 + [320]) + [24]))) = *((($3 + [192]) + [8]))
	*($3 + [320]) = $8
	*($3 + [328]) = $7
	*($3 + [352]) = [1000000000]
	*($3 + [336]) = *($3 + [192])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	*($4) = *($3 + [320])
	*(($4 + [8])) = *($3 + [328])
	*(($4 + [16])) = *((($3 + [320]) + [16]))
	*(($4 + [40])) = *((($3 + [320]) + [40]))
	*(($4 + [32])) = *((($3 + [320]) + [32]))
	*(($4 + [24])) = *($6)
	*(($3 + [308])) = ($4 + [48])
	goto $label$1 
	
.LABEL $label$3
	$8 = *($1)
	CALL __multi3(($3 + [272]), $8, (int_64)$8 >> (int_64)63), *($2 + [16]), *(($2 + [24])))
	CALL __multi3(($3 + [256]), *($3 + [272]), *((($3 + [272]) + [8])), (int_64)5, (int_64)0)
	CALL __udivti3(($3 + [240]), *($3 + [256]), *((($3 + [256]) + [8])), (int_64)100, (int_64)0)
	$7 = *($3 + [240])
	$8 = ((int_64)$7 + (int_64)*($4))
	*(($4 = ($6 + [16]))) = $8
	$7 = ((int_64)((int_64)*((($3 + [240]) + [8])) + (int_64)*($6)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($8 <= $7)))
	*(($6 = ($6 + [24]))) = $7
	if ( ( (uint_64)($8 <= (int_64)-999999999) ? (uint_64)($7 <= (int_64)249999999) : ((int_64)$7 == (int_64)249999999) ) ){ goto $label$1 }
	CALL eosio_assert([0], [8307])
	goto $label$1 
	
.LABEL $label$2
	CALL $6((($3 + [296]) + [8]), ($3 + [320]))
	
.LABEL $label$1
	*($3 + [288]) = [8617]
	*($3 + [292]) = CALL $743([8617])
	*($3 + [184]) = *($3 + [288])
	CALL $326($0, ($3 + [296]), *(CALL $10(($3 + [320]), ($3 + [184]))))
	$10 = (($3 + [296]) + [8])
	$6 = *($10)
	if ( ($6 == 0) ){ goto $label$6 }
	*(($3 + [308])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$6
	$5 = ($0 + [120])
	CALL $327(($3 + [320]), $5)
	$4 = *((($3 + [320]) + [12]))
	*((($3 + [296]) + [12])) = $4
	$11 = *((($3 + [320]) + [16]))
	*((($3 + [296]) + [16])) = $11
	*($3 + [296]) = *($3 + [320])
	$6 = *($3 + [328])
	*($3 + [304]) = $6
	*($3 + [316]) = *($3 + [340])
	$12 = ($1 + [8])
	$7 = CALL $15(*($12))
	$8 = *($12)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$10 }
	
.LOOP $label$11:
	if ( ((int_64)*($6) == (int_64)$8) ){ goto $label$9 }
	$6 = ($6 + [48])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$11 }
	
.LABEL $label$10
	$9 = *($1)
	CALL __multi3(($3 + [120]), $9, (int_64)$9 >> (int_64)63), *($2 + [16]), *(($2 + [24])))
	CALL __multi3(($3 + [104]), *($3 + [120]), *((($3 + [120]) + [8])), (int_64)3, (int_64)0)
	CALL __udivti3(($3 + [88]), *($3 + [104]), *((($3 + [104]) + [8])), (int_64)100, (int_64)0)
	*(($6 = (($3 + [320]) + [24]))) = *((($3 + [88]) + [8]))
	*($3 + [320]) = $8
	*($3 + [328]) = $7
	*($3 + [352]) = [1000000000]
	*($3 + [336]) = *($3 + [88])
	if ( ((int_32)$4 == (int_32)$11) ){ goto $label$8 }
	*($4) = *($3 + [320])
	*(($4 + [8])) = *($3 + [328])
	*(($4 + [16])) = *((($3 + [320]) + [16]))
	*(($4 + [40])) = *((($3 + [320]) + [40]))
	*(($4 + [32])) = *((($3 + [320]) + [32]))
	*(($4 + [24])) = *($6)
	*(($3 + [308])) = ($4 + [48])
	goto $label$7 
	
.LABEL $label$9
	$8 = *($1)
	CALL __multi3(($3 + [168]), $8, (int_64)$8 >> (int_64)63), *($2 + [16]), *(($2 + [24])))
	CALL __multi3(($3 + [152]), *($3 + [168]), *((($3 + [168]) + [8])), (int_64)3, (int_64)0)
	CALL __udivti3(($3 + [136]), *($3 + [152]), *((($3 + [152]) + [8])), (int_64)100, (int_64)0)
	$7 = *($3 + [136])
	$8 = ((int_64)$7 + (int_64)*($4))
	*(($4 = ($6 + [16]))) = $8
	$7 = ((int_64)((int_64)*((($3 + [136]) + [8])) + (int_64)*($6)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($8 <= $7)))
	*(($6 = ($6 + [24]))) = $7
	if ( ( (uint_64)($8 <= (int_64)-999999999) ? (uint_64)($7 <= (int_64)249999999) : ((int_64)$7 == (int_64)249999999) ) ){ goto $label$7 }
	CALL eosio_assert([0], [8307])
	goto $label$7 
	
.LABEL $label$8
	CALL $6($10, ($3 + [320]))
	
.LABEL $label$7
	*($3 + [288]) = [8617]
	*($3 + [292]) = CALL $743([8617])
	*($3 + [80]) = *($3 + [288])
	CALL $328($5, ($3 + [296]), *(CALL $10(($3 + [320]), ($3 + [80]))))
	$11 = (($3 + [296]) + [8])
	$6 = *($11)
	if ( ($6 == 0) ){ goto $label$12 }
	*(($3 + [308])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$12
	$0 = ($0 + [240])
	CALL $329(($3 + [320]), $0)
	$4 = *((($3 + [320]) + [12]))
	*((($3 + [296]) + [12])) = $4
	$12 = *((($3 + [320]) + [16]))
	*((($3 + [296]) + [16])) = $12
	*($3 + [296]) = *($3 + [320])
	$6 = *($3 + [328])
	*($3 + [304]) = $6
	*($3 + [316]) = *($3 + [340])
	$5 = ($1 + [8])
	$7 = CALL $15(*($5))
	$8 = *($5)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$16 }
	
.LOOP $label$17:
	if ( ((int_64)*($6) == (int_64)$8) ){ goto $label$15 }
	$6 = ($6 + [48])
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$17 }
	
.LABEL $label$16
	$9 = *($1)
	CALL __multi3(($3 + [32]), $9, (int_64)$9 >> (int_64)63), *($2 + [16]), *(($2 + [24])))
	$9 = *($3 + [32])
	CALL __udivti3(($3 + [16]), ((int_64)$9 << (int_64)1), ((int_64)((int_64)*((($3 + [32]) + [8])) << (int_64)1) | (int_64)(uint_64)$9 >> (uint_64)(int_64)63)), (int_64)100, (int_64)0)
	*(($6 = (($3 + [320]) + [24]))) = *((($3 + [16]) + [8]))
	*($3 + [320]) = $8
	*($3 + [328]) = $7
	*($3 + [352]) = [1000000000]
	*($3 + [336]) = *($3 + [16])
	if ( ((int_32)$4 == (int_32)$12) ){ goto $label$14 }
	*($4) = *($3 + [320])
	*(($4 + [8])) = *($3 + [328])
	*(($4 + [16])) = *((($3 + [320]) + [16]))
	*(($4 + [40])) = *((($3 + [320]) + [40]))
	*(($4 + [32])) = *((($3 + [320]) + [32]))
	*(($4 + [24])) = *($6)
	*(($3 + [308])) = ($4 + [48])
	goto $label$13 
	
.LABEL $label$15
	$8 = *($1)
	CALL __multi3(($3 + [64]), $8, (int_64)$8 >> (int_64)63), *($2 + [16]), *(($2 + [24])))
	$8 = *($3 + [64])
	CALL __udivti3(($3 + [48]), ((int_64)$8 << (int_64)1), ((int_64)((int_64)*((($3 + [64]) + [8])) << (int_64)1) | (int_64)(uint_64)$8 >> (uint_64)(int_64)63)), (int_64)100, (int_64)0)
	$7 = *($3 + [48])
	$8 = ((int_64)$7 + (int_64)*($4))
	*(($4 = ($6 + [16]))) = $8
	$7 = ((int_64)((int_64)*((($3 + [48]) + [8])) + (int_64)*($6)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($8 <= $7)))
	*(($6 = ($6 + [24]))) = $7
	if ( ( (uint_64)($8 <= (int_64)-999999999) ? (uint_64)($7 <= (int_64)249999999) : ((int_64)$7 == (int_64)249999999) ) ){ goto $label$13 }
	CALL eosio_assert([0], [8307])
	goto $label$13 
	
.LABEL $label$14
	CALL $6($11, ($3 + [320]))
	
.LABEL $label$13
	*($3 + [288]) = [8617]
	*($3 + [292]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [288])
	CALL $330($0, ($3 + [296]), *(CALL $10(($3 + [320]), ($3 + [8]))))
	$6 = *(($3 + [304]))
	if ( ($6 == 0) ){ goto $label$18 }
	*(($3 + [308])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$18
	$global$0 = ($3 + [368])
}

void .FUNC $318 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [32])
	$global$0 = $3
	$5 = *(($1 + [28]))
	$4 = *($1 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$6 = $5
	
.LOOP $label$3:
	$6 = ($6 + [-24])
	$7 = *($6)
	$8 = *($7 + [8])
	$10 = *($7)
	$9 = *($7 + [16])
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$5 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($7 = CALL _Znwj([24])) + [8]) = $8
	*($7) = $10
	*($7 + [16]) = $9
	CALL sha256($7, [24], $3)
	$9 = *($3)
	if ( ($7 == 0) ){ goto $label$4 }
	CALL _ZdlPv($7)
	
.LABEL $label$4
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$1 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = $4
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)*(($1 + [24]))) ){ goto $label$7 }
	$7 = *(($5 + [-24]))
	if ( ((int_32)*($7 + [48]) == (int_32)$1) ){ goto $label$8 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$8
	*($0 + [4]) = $7
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800412573003284480, $2)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL $331($1, $7)
	if ( ((int_32)*($7 + [48]) == (int_32)$1) ){ goto $label$10 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$10
	*($0 + [4]) = $7
	goto $label$6 
	
.LABEL $label$9
	*($0 + [4]) = [0]
	
.LABEL $label$6
	*($0) = $1
	$global$0 = ($3 + [32])
}

int_32 .FUNC $319 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $156($0, $1)
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $2, [8])
	$2 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $2
	$4 = ($1 + [32])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $2) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$2 = *($3)
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	$2 = (*($3) + [8])
	*($3) = $2
	$1 = ($1 + [40])
	if ( ((int_32)(*($5) - $2) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

void .FUNC $253 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $254($0, $1, $2)
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$3 }
	if ( *($1 + [32]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	*($3 + [8]) = $2
	CALL $255(($3 + [16]), [8488], ($3 + [8]))
	if ( (*($3 + [16]) & [1]) ){ goto $label$5 }
	$1 = (($3 + [16]) | [1])
	goto $label$4 
	
.LABEL $label$5
	$1 = *($3 + [24])
	CALL _ZdlPv($1)
	
.LABEL $label$4
	CALL eosio_assert([0], $1)
	if ( (*(*(($0 + [4])) + [32]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*($3 + [8]) = $2
	CALL $255(($3 + [16]), [8522], ($3 + [8]))
	if ( (*($3 + [16]) & [1]) ){ goto $label$7 }
	$0 = (($3 + [16]) | [1])
	goto $label$6 
	
.LABEL $label$7
	$0 = *($3 + [24])
	CALL _ZdlPv($0)
	
.LABEL $label$6
	CALL eosio_assert([0], $0)
	
.LABEL $label$1
	$global$0 = ($3 + [32])
}

int_32 .FUNC $252 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [64]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [68])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [12])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$6
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [64]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	$5 = *($4 + [48])
	if ( ($5 == 0) ){ goto $label$12 }
	*(($4 + [52])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$12
	CALL _ZdlPv($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$7
	return $0
}

void .FUNC $255 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	$1 = [0]
	*(($5 + $4)) = [0]
	$7 = *($2)
	if ( ((int_64)$7 == (int_64)0) ){ goto $label$8 }
	$5 = *([0] + [23024])
	
.LOOP $label$10:
	*((($3 + [35]) + ($4 = $1))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$7 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$1 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$9 }
	$7 = ((int_64)$7 << (int_64)5)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$10 }
	
.LABEL $label$9
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$7 }
	*($3) = ($1 << [1])
	$5 = ($3 | [1])
	goto $label$6 
	
.LABEL $label$8
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$4 = ($3 | [1])
	$1 = $4
	goto $label$5 
	
.LABEL $label$7
	$2 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($2)
	*($3) = ($2 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $1
	
.LABEL $label$6
	$2 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$11:
	*(($5 + $4)) = *((($3 + [35]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$11 }
	$1 = ($5 + $1)
	$4 = ($3 | [1])
	
.LABEL $label$5
	*($1) = [0]
	$1 = *($3)
	$5 = ($1 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $4 : $5 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$12
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$13
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $254 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*(($5 + [36])) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)5886735919226028032, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $256($1, $5)
	if ( ((int_32)*($5 + [36]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $257 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	$7 = *(($3 + [8]))
	$8 = *(($3 + [16]))
	$9 = *($3)
	*((($5 + [8]) + [24])) = (int_64)0
	*(($10 = (($5 + [8]) + [16]))) = $8
	*(($11 = (($5 + [8]) + [8]))) = $7
	$12 = [0]
	*($5 + [28]) = [0]
	*($5 + [8]) = $9
	$13 = (*(($3 + [24])) - *($3 + [20]))
	$14 = ((int_32)$13 / (int_32)[48])
	$15 = [0]
	$8 = [0]
	if ( ($13 == 0) ){ goto $label$4 }
	if ( ((uint_32)$14 >= (uint_32)[89478486]) ){ goto $label$3 }
	$8 = CALL _Znwj($13)
	*((($5 + [8]) + [20])) = $8
	$12 = ($8 + ((int_32)$14 * (int_32)[48]))
	*(($5 + [36])) = $12
	*(($13 = (($5 + [8]) + [24]))) = $8
	$14 = *(($3 + [20]))
	$15 = (*(($3 + [24])) - $14)
	if ( ((int_32)$15 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($8, $14, $15)
	$15 = ($8 + ((int_32)((uint_32)$15 / (uint_32)[48]) * (int_32)[48]))
	*($13) = $15
	goto $label$4 
	
.LABEL $label$5
	$15 = $8
	
.LABEL $label$4
	$3 = *($3 + [32])
	*($1) = *($5 + [8])
	*(($1 + [8])) = *($11)
	*(($1 + [16])) = *($10)
	*($5 + [40]) = $3
	$13 = *($1 + [20])
	if ( ($13 == 0) ){ goto $label$7 }
	*(($1 + [24])) = $13
	CALL _ZdlPv($13)
	*(($13 = ($1 + [28]))) = [0]
	*($1 + [20 align=4]) = (int_64)0
	goto $label$6 
	
.LABEL $label$7
	$13 = ($1 + [28])
	
.LABEL $label$6
	*($13) = $12
	*($1 + [32]) = $3
	*(($3 = ($1 + [24]))) = $15
	*(($1 + [20])) = $8
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$8 }
	CALL eosio_assert([0], [29476])
	$15 = *($3)
	$8 = *($1 + [20])
	
.LABEL $label$8
	$12 = ($15 - $8)
	$7 = (CASTING uint_64)(uint_32 ((int_32)$12 / (int_32)[48]))
	$3 = [54]
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$8 == (int_32)$15) ){ goto $label$11 }
	$3 = (((int_32)((uint_32)($12 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($3 + [-36])
	
.LABEL $label$10
	$8 = ($3 + [1])
	if ( ($8 <= [513]) ){ goto $label$13 }
	$3 = CALL $746($8)
	goto $label$12 
	
.LABEL $label$13
	$3 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$12
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	*($5 + [16]) = ($3 + $8)
	CALL $541(($5 + [8]), $1)
	CALL db_update_i64(*($1 + [40]), $2, $3, $8)
	if ( ($8 <= [513]) ){ goto $label$14 }
	CALL $749($3)
	
.LABEL $label$14
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$global$0 = ($5 + [48])
	return (unreachable)
	
.LABEL $label$3
	CALL $727(($5 + [28]))
}

int_32 .FUNC $256 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [20 align=4]) = (int_64)0
	*($5 + [28]) = [0]
	*($5 + [36]) = $0
	CALL $540(($3 + [32]), $5)
	*($5 + [40]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $259(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [20])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $406 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([80])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = $0
	CALL $608(($3 + [32]), $5)
	*($5 + [76]) = [-1]
	*($5 + [72]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $462(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $696 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $156(*($1), *($0))
	$0 = *($0)
	$2 = ($0 + [24])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$2 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$2 = ($0 + [48])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$4 = *(($3 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	CALL $553(*($1), ($0 + [80]))
	CALL $230(*($1), ($0 + [92]))
}

void .FUNC $138 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	$5 = ($global$0 - [240])
	$global$0 = $5
	CALL $141(($5 + [96]), $0, ($2 & [255]))
	$6 = *($5 + [136])
	if ( ($6 == 0) ){ goto $label$1 }
	*(($5 + [140])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$1
	if ( ((*($5 + [100]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($5 + [108])))
	
.LABEL $label$2
	*(($6 = ($5 + [72]))) = [0]
	*($5 + [64]) = (int_64)0
	*($5 + [88]) = (int_64)0
	$0 = ($0 + [160])
	CALL $142(($5 + [176]), $0)
	$7 = ((int_64)*($5 + [184]) + (int_64)1)
	*($5 + [184]) = $7
	*($5 + [160]) = [8617]
	*($5 + [164]) = CALL $743([8617])
	*($5 + [8]) = *($5 + [160])
	CALL $113($0, ($5 + [176]), *(CALL $10(($5 + [168]), ($5 + [8]))))
	$0 = *($5 + [224])
	if ( ($0 == 0) ){ goto $label$3 }
	*(($5 + [228])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$3
	*($6) = [0]
	*(($5 + [88])) = ((int_64)$4 * (int_64)1000)
	*((($5 + [16]) + [24])) = *(($1 + [8]))
	*(($5 + [48])) = *(($1 + [16]))
	*(($5 + [56])) = *(($1 + [24]))
	*($5 + [16]) = $7
	*($5 + [64]) = (int_64)0
	*($5 + [76]) = $2
	*($5 + [80]) = $3
	*($5 + [32]) = *($1)
	CALL $278($5, ($5 + [16]))
	$global$0 = ($5 + [240])
}

void .FUNC $139 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($0 + [48]) = (int_64)0
	*($0 + [72]) = (int_64)0
	*(($5 = ($0 + [56]))) = [0]
	$6 = ($1 + [160])
	CALL $142(($4 + [32]), $6)
	$7 = ((int_64)*($4 + [40]) + (int_64)1)
	*($4 + [40]) = $7
	*($4 + [16]) = [8617]
	*($4 + [20]) = CALL $743([8617])
	*($4 + [8]) = *($4 + [16])
	CALL $113($6, ($4 + [32]), *(CALL $10(($4 + [24]), ($4 + [8]))))
	$6 = *($4 + [80])
	if ( ($6 == 0) ){ goto $label$1 }
	*(($4 + [84])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$1
	*($0) = $7
	CALL $273(($4 + [32]), $1)
	*(($0 + [40])) = *((($4 + [32]) + [24]))
	*(($0 + [32])) = *(($4 + [48]))
	*(($0 + [24])) = *($4 + [40])
	*($0 + [16]) = *($4 + [32])
	*($0 + [48]) = (int_64)0
	*($5) = [0]
	*($0 + [60]) = $2
	*($0 + [64]) = ((int_64)((int_64)*($3) + (int_64)*($3 + [8])) + (int_64)*($3 + [16]))
	*(($0 + [72])) = CALL current_time()
	CALL $278($4, $0)
	$global$0 = ($4 + [96])
}

int_32 .FUNC $428 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ($global$0 - [16])
	$global$0 = $1
	*(($1 + [8])) = [0]
	*($1) = (int_64)0
	$2 = CALL $743($0)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($1) = ($2 << [1])
	$3 = ($1 | [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$3 = CALL _Znwj($4)
	*($1) = ($4 | [1])
	*($1 + [8]) = $3
	*($1 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($3, $0, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($1) & [1]) ){ goto $label$6 }
	$2 = ($1 | [1])
	goto $label$5 
	
.LABEL $label$6
	$2 = *($1 + [8])
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($1 + [16])
	return $2
	
.LABEL $label$1
	CALL $708($1)
	return (unreachable)
}

void .FUNC $429 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $156(*($1), ($4 + [16]))
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($2 + [8]) = $4
	CALL $629(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $698 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [8])) = *(($5 + [8]))
	$6 = [16]
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $596(($1 + [16]), *($5 + [16]), *(($5 + [20])))
	CALL $596(($1 + [28]), *($5 + [28]), *(($5 + [32])))
	
.LABEL $label$1
	*($1 + [40]) = *($5 + [40])
	*(($1 + [48])) = *(($5 + [48]))
	$7 = *($1 + [16])
	$5 = *(($1 + [20]))
	$8 = ($5 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$6 = (($8 & [-16]) + $6)
	
.LABEL $label$3
	$7 = *($1 + [28])
	$5 = *(($1 + [32]))
	$8 = ($5 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$4:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$5 }
	$6 = (($8 & [-16]) + $6)
	
.LABEL $label$5
	$5 = ($6 + [7])
	if ( ($5 <= [513]) ){ goto $label$7 }
	$6 = CALL $746($5)
	goto $label$6 
	
.LABEL $label$7
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $5)
	CALL $597($3, $1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-8173740188290908160, *(*($0 + [8])), (int_64)-8173740188290908160, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$8 }
	CALL $749($6)
	
.LABEL $label$8
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)-8173740188290908160) ){ goto $label$9 }
	*(($4 + [16])) = (int_64)-8173740188290908159
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

void .FUNC $422 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = *($3)
	*($1) = *($6)
	$3 = [8]
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$3 }
	CALL $551(($1 + [8]), *($6 + [8]), *(($6 + [12])))
	CALL $551(($1 + [20]), *($6 + [20]), *(($6 + [24])))
	
.LABEL $label$3
	*($1 + [32]) = *($6 + [32])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$3 = (($8 & [-8]) + $3)
	
.LABEL $label$5
	$7 = *($1 + [20])
	$6 = *(($1 + [24]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$3 = (($8 & [-8]) + $3)
	
.LABEL $label$7
	$6 = ($3 + [8])
	if ( ($6 <= [513]) ){ goto $label$9 }
	$3 = CALL $746($6)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $616($5, $1)
	CALL db_update_i64(*($1 + [44]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL $749($3)
	
.LABEL $label$10
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4293732427722915840) ){ goto $label$11 }
	*(($0 + [16])) = (int_64)-4293732427722915839
	
.LABEL $label$11
	$global$0 = ($5 + [16])
}

void .FUNC $423 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4 + [24]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [4]) = $3
	*($4) = $1
	*($4 + [8]) = ($4 + [24])
	*(($3 = CALL _Znwj([56])) + [8 align=4]) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3) = (int_64)0
	CALL memcpy(($4 + [32]), [29008], [80])
	$5 = (($4 + [32]) + [80])
	CALL $409(($3 + [8]), ($4 + [32]), $5)
	CALL memcpy(($4 + [32]), [29008], [80])
	CALL $409(($3 + [20]), ($4 + [32]), $5)
	*($3 + [40]) = $1
	*($3 + [32]) = (int_64)0
	CALL $617($4, $3)
	*($4 + [16]) = $3
	*($4 + [32]) = (int_64)-4293732427722915840
	$6 = *($3 + [44])
	*($4) = $6
	$7 = ($1 + [28])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($5 + [8]) = (int_64)-4293732427722915840
	*($5 + [16]) = $6
	*($4 + [16]) = [0]
	*($5) = $3
	*($7) = ($5 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $614(($1 + [24]), ($4 + [16]), ($4 + [32]), $4)
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [16])
	*($4 + [16]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [20])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [24])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($3 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

int_32 .FUNC $420 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	*(($0 + [12])) = (int_64)0
	*($0 + [8]) = [0]
	*($0) = *($1)
	$2 = (*(($1 + [12])) - *($1 + [8]))
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$2 }
	$2 = CALL _Znwj($2)
	*(($0 + [8])) = $2
	*(($0 + [16])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [12]))) = $2
	$4 = *(($1 + [8]))
	$5 = (*(($1 + [12])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$3
	*($0 + [20 align=4]) = (int_64)0
	*(($0 + [28])) = [0]
	$2 = (*(($1 + [24])) - *($1 + [20]))
	if ( ($2 == 0) ){ goto $label$4 }
	$3 = int_32($2 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$2 = CALL _Znwj($2)
	*(($0 + [20])) = $2
	*(($0 + [28])) = ($2 + ($3 << [3]))
	*(($3 = ($0 + [24]))) = $2
	$4 = *(($1 + [20]))
	$5 = (*(($1 + [24])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($2, $4, $5)
	*($3) = (*($3) + $5)
	
.LABEL $label$4
	*($0 + [32]) = *($1 + [32])
	return $0
	
.LABEL $label$2
	CALL $727(($0 + [8]))
	
.LABEL $label$1
	CALL $727(($0 + [20]))
	(unreachable)
	return (unreachable)
}

void .FUNC $421 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [112])
	$global$0 = $4
	*($4 + [24]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [4]) = $3
	*($4) = $1
	*($4 + [8]) = ($4 + [24])
	*(($3 = CALL _Znwj([56])) + [8 align=4]) = (int_64)0
	*($3 + [16 align=4]) = (int_64)0
	*($3 + [24 align=4]) = (int_64)0
	*($3) = (int_64)0
	CALL memcpy(($4 + [32]), [29008], [80])
	$5 = (($4 + [32]) + [80])
	CALL $409(($3 + [8]), ($4 + [32]), $5)
	CALL memcpy(($4 + [32]), [29008], [80])
	CALL $409(($3 + [20]), ($4 + [32]), $5)
	*($3 + [40]) = $1
	*($3 + [32]) = (int_64)0
	CALL $613($4, $3)
	*($4 + [16]) = $3
	*($4 + [32]) = (int_64)-4293732427722915840
	$6 = *($3 + [44])
	*($4) = $6
	$7 = ($1 + [28])
	$5 = *($7)
	if ( ((uint_32)$5 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($5 + [8]) = (int_64)-4293732427722915840
	*($5 + [16]) = $6
	*($4 + [16]) = [0]
	*($5) = $3
	*($7) = ($5 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $614(($1 + [24]), ($4 + [16]), ($4 + [32]), $4)
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [16])
	*($4 + [16]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [20])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [24])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($3 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [112])
}

void .FUNC $426 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $427 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $720($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $424 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$2 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$2 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$6 = (int_64)0
	*(($5 = CALL _Znwj([96])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32 align=4]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56 align=4]) = (int_64)0
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [72 align=4]) = (int_64)0
	*($5 + [80]) = [0]
	*($5 + [84]) = $0
	CALL $623(CALL $145(CALL $145(CALL $170(CALL $169(CALL $168(($3 + [16]), $5), ($5 + [24])), ($5 + [36])), ($5 + [48])), ($5 + [60])), ($5 + [72]))
	*($5 + [88]) = $1
	*($3 + [8]) = $5
	$7 = *($5 + [8])
	$9 = *($5)
	$8 = *($5 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$9 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	*(($1 = CALL _Znwj([24])) + [8]) = $7
	*($1) = $9
	*($1 + [16]) = $8
	CALL sha256($1, [24], ($3 + [32]))
	$6 = *($3 + [32])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	*($3 + [32]) = $6
	$10 = *($3 + [8])
	$11 = *($10 + [88])
	*($3 + [4]) = $11
	$12 = ($0 + [28])
	$1 = *($12)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($1 + [8]) = $6
	*($1 + [16]) = $11
	*($3 + [8]) = [0]
	*($1) = $10
	*($12) = ($1 + [24])
	if ( $2 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $416(($0 + [24]), ($3 + [8]), ($3 + [32]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $749($4)
	
.LABEL $label$10
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [72])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($1 + [76])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$13
	$4 = *($1 + [60])
	if ( ($4 == 0) ){ goto $label$14 }
	*(($1 + [64])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$14
	$4 = *($1 + [48])
	if ( ($4 == 0) ){ goto $label$15 }
	*(($1 + [52])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$15
	$4 = *($1 + [36])
	if ( ($4 == 0) ){ goto $label$16 }
	*(($1 + [40])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$17 }
	*(($1 + [28])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$17
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $425 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	$3 = ($global$0 - [624])
	$global$0 = $3
	$4 = *($2)
	$5 = (*($2 + [4]) - $4)
	if ( ((int_32)$5 == (int_32)[8]) ){ goto $label$1 }
	*($3 + [352]) = int_32($5 >> [3])
	CALL $401(($3 + [216]), [19717], ($3 + [352]))
	if ( (*($3 + [216]) & [1]) ){ goto $label$3 }
	$4 = (($3 + [216]) | [1])
	goto $label$2 
	
.LABEL $label$3
	$4 = *($3 + [224])
	CALL _ZdlPv($4)
	
.LABEL $label$2
	CALL eosio_assert([0], $4)
	$4 = *($2)
	
.LABEL $label$1
	$5 = ($0 + [280])
	CALL $377(($3 + [584]), $5, *($4))
	$4 = *($3 + [588])
	if ( $4 ){ goto $label$4 }
	CALL $426(($3 + [216]), [20124], *($2))
	if ( (*($3 + [216]) & [1]) ){ goto $label$6 }
	$4 = (($3 + [216]) | [1])
	goto $label$5 
	
.LABEL $label$6
	$4 = *($3 + [224])
	CALL _ZdlPv($4)
	
.LABEL $label$5
	CALL eosio_assert([0], $4)
	$4 = *($3 + [588])
	
.LABEL $label$4
	$6 = ((uint_64)((int_64)*($4 + [40]) + (int_64)*(*($1 + [48]))) % (uint_64)(int_64)3)
	$7 = *(($4 + [56]))
	$8 = *($4 + [48])
	if ( (((*($4 + [64]) + [-3]) & [255]) <= [3]) ){ goto $label$7 }
	CALL $427(($3 + [216]), [20158], ($4 + [64]))
	if ( (*($3 + [216]) & [1]) ){ goto $label$9 }
	$4 = (($3 + [216]) | [1])
	goto $label$8 
	
.LABEL $label$9
	$4 = *($3 + [224])
	CALL _ZdlPv($4)
	
.LABEL $label$8
	CALL eosio_assert([0], $4)
	
.LABEL $label$7
	$4 = *(*($3 + [588]) + [64])
	if ( ((int_32)$4 == (int_32)[5]) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[4]) ){ goto $label$12 }
	$0 = [0]
	if ( ((int_32)$4 != (int_32)[3]) ){ goto $label$10 }
	*(($4 = CALL _Znwj([6])) + [4]) = [15]
	*($4) = [655365]
	$0 = *(($4 + ((CASTING uint_32)(uint_64 $6) << [1])))
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	goto $label$10 
	
.LABEL $label$12
	*(($4 = CALL _Znwj([6])) + [4]) = [50]
	*($4) = [1638410]
	$0 = *(($4 + ((CASTING uint_32)(uint_64 $6) << [1])))
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	goto $label$10 
	
.LABEL $label$11
	*(($4 = CALL _Znwj([6])) + [4]) = [100]
	*($4) = [3276825]
	$0 = *(($4 + ((CASTING uint_32)(uint_64 $6) << [1])))
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	$6 = ((int_64)$8 * (int_64)((int_64)(CASTING uint_64)(uint_32 $0) & (int_64)65535))
	if ( (int_64)($6 == 0) ){ goto $label$14 }
	$4 = *($3 + [588])
	*(($3 + [568])) = *(($4 + [24]))
	*(($3 + [576])) = *(($4 + [32]))
	*($3 + [544]) = (int_64)0
	*($3 + [552]) = (int_64)1397703940
	*($3 + [560]) = *($4 + [16])
	$9 = *($1 + [60])
	$8 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$17:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$19 }
	$8 = $10
	$1 = $4
	goto $label$18 
	
.LABEL $label$19
	$8 = $10
	
.LOOP $label$20:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$16 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$1 = ($4 + [1])
	$4 = $1
	if ( $2 ){ goto $label$20 }
	
.LABEL $label$18
	$4 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	CALL eosio_assert([0], [22633])
	
.LABEL $label$15
	*((($3 + [136]) + [8])) = $7
	*((($3 + [168]) + [8])) = *((($3 + [560]) + [8]))
	*((($3 + [168]) + [16])) = *((($3 + [560]) + [16]))
	*((($3 + [152]) + [8])) = *((($3 + [544]) + [8]))
	*($3 + [536]) = $7
	*($3 + [528]) = $6
	*($3 + [168]) = *($3 + [560])
	*($3 + [152]) = *($3 + [544])
	*($3 + [136]) = $6
	CALL $386($3, ($3 + [168]), $9, ($3 + [152]), ($3 + [136]))
	$4 = *($3 + [588])
	*((($3 + [504]) + [8])) = *(($4 + [24]))
	*((($3 + [504]) + [16])) = *(($4 + [32]))
	*($3 + [488]) = $6
	*($3 + [496]) = $7
	*($3 + [504]) = *($4 + [16])
	$4 = CALL $428([20199])
	*((($3 + [472]) + [8])) = [0]
	*($3 + [472]) = (int_64)0
	$2 = CALL $743($4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$23 }
	*($3 + [472]) = ($2 << [1])
	$1 = (($3 + [472]) | [1])
	if ( $2 ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	$9 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($9)
	*($3 + [472]) = ($9 | [1])
	*($3 + [480]) = $1
	*($3 + [476]) = $2
	
.LABEL $label$22
	CALL memcpy($1, $4, $2)
	
.LABEL $label$21
	$4 = [0]
	*(($1 + $2)) = [0]
	*((($3 + [112]) + [16])) = *((($3 + [504]) + [16]))
	*((($3 + [112]) + [8])) = *((($3 + [504]) + [8]))
	*((($3 + [96]) + [8])) = *((($3 + [488]) + [8]))
	*($3 + [112]) = *($3 + [504])
	*($3 + [96]) = *($3 + [488])
	CALL $162(($3 + [112]), ($3 + [96]), ($3 + [472]), [0])
	if ( ((*($3 + [472]) & [1]) == 0) ){ goto $label$24 }
	CALL _ZdlPv(*($3 + [480]))
	
.LABEL $label$24
	$2 = *($3 + [588])
	*((($3 + [448]) + [8])) = *(($2 + [24]))
	*((($3 + [448]) + [16])) = *(($2 + [32]))
	*($3 + [432]) = (int_64)0
	*($3 + [440]) = (int_64)1397703940
	*($3 + [448]) = *($2 + [16])
	$9 = *($2 + [80])
	$8 = (int_64)5459781
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$10 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$8 = $10
	$1 = $4
	goto $label$28 
	
.LABEL $label$29
	$8 = $10
	
.LOOP $label$30:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$26 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$1 = ($4 + [1])
	$4 = $1
	if ( $2 ){ goto $label$30 }
	
.LABEL $label$28
	$4 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[6]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	CALL eosio_assert([0], [22633])
	
.LABEL $label$25
	*((($3 + [40]) + [8])) = $7
	*((($3 + [72]) + [8])) = *((($3 + [448]) + [8]))
	*((($3 + [72]) + [16])) = *((($3 + [448]) + [16]))
	*((($3 + [56]) + [8])) = *((($3 + [432]) + [8]))
	*($3 + [424]) = $7
	*($3 + [416]) = $6
	*($3 + [72]) = *($3 + [448])
	*($3 + [56]) = *($3 + [432])
	*($3 + [40]) = $6
	CALL $386($3, ($3 + [72]), $9, ($3 + [56]), ($3 + [40]))
	
.LABEL $label$14
	$4 = *($3 + [588])
	*(($2 = (($3 + [392]) + [8]))) = *(($4 + [24]))
	*(($1 = (($3 + [392]) + [16]))) = *(($4 + [32]))
	*($3 + [392]) = *($4 + [16])
	*($3 + [336]) = [8617]
	*($3 + [340]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [336])
	$4 = CALL $10(($3 + [344]), ($3 + [32]))
	*($3 + [320]) = [8344]
	*($3 + [324]) = CALL $743([8344])
	*($3 + [24]) = *($3 + [320])
	$9 = CALL $10(($3 + [328]), ($3 + [24]))
	*($3 + [304]) = [8617]
	$8 = *($9)
	$10 = *($4)
	*($3 + [308]) = CALL $743([8617])
	*($3 + [16]) = *($3 + [304])
	$9 = CALL $10(($3 + [312]), ($3 + [16]))
	*($3 + [288]) = [20263]
	*($3 + [292]) = CALL $743([20263])
	*($3 + [8]) = *($3 + [288])
	$11 = CALL $10(($3 + [296]), ($3 + [8]))
	$4 = *($3 + [588])
	$12 = *($4 + [72])
	$13 = *($4 + [8])
	$14 = *($1)
	*((($3 + [192]) + [16])) = $14
	$15 = *($2)
	*((($3 + [192]) + [8])) = $15
	$16 = *($4 + [40])
	*(($3 + [272])) = $7
	*((($3 + [216]) + [24])) = $15
	*((($3 + [216]) + [32])) = $14
	*($3 + [216]) = $13
	*($3 + [224]) = $12
	*($3 + [256]) = $0
	$7 = *($3 + [392])
	*($3 + [192]) = $7
	*($3 + [264]) = $6
	*($3 + [232]) = $7
	*($3 + [257]) = $16
	*($3 + [280]) = *($4 + [80])
	*($3 + [352]) = *($9)
	*($3 + [360]) = *($11)
	*(($4 = CALL _Znwj([16]))) = $10
	*($4 + [8]) = $8
	*(($3 + [388])) = [0]
	$2 = ($4 + [16])
	*((($3 + [352]) + [24])) = $2
	*(($3 + [372])) = $2
	*($3 + [368]) = $4
	*($3 + [380 align=4]) = (int_64)0
	CALL $11(($3 + [380]), [59])
	$4 = *((($3 + [352]) + [32]))
	$2 = *($3 + [380])
	*($3 + [596]) = $2
	*($3 + [592]) = $2
	*($3 + [600]) = $4
	*($3 + [608]) = ($3 + [592])
	*($3 + [616]) = ($3 + [216])
	CALL $429(($3 + [616]), ($3 + [608]))
	CALL $13(($3 + [592]), ($3 + [352]))
	$4 = *($3 + [592])
	CALL send_inline($4, (*($3 + [596]) - $4))
	$4 = *($3 + [592])
	if ( ($4 == 0) ){ goto $label$31 }
	*($3 + [596]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$31
	$4 = *($3 + [380])
	if ( ($4 == 0) ){ goto $label$32 }
	*(($3 + [384])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$32
	$4 = *($3 + [368])
	if ( ($4 == 0) ){ goto $label$33 }
	*(($3 + [372])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$33
	$8 = *($3 + [584])
	$4 = (CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$34 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$34
	$2 = CALL db_next_i64(*($4 + [88]), ($3 + [216]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$35 }
	CALL $430((CASTING uint_32)(uint_64 $8), $2)
	
.LABEL $label$35
	CALL $431($5, $4)
	$global$0 = ($3 + [624])
	return (unreachable)
	
.LABEL $label$13
	CALL $708(($3 + [472]))
}

void .FUNC $729 (int_32 $0)
{
}

int_32 .FUNC $728 ()
{
	return [8640]
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[24]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[24])))) = *($1)
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-24]) * (int_32)[24]))
	$6 = ($5 + ((int_32)$6 * (int_32)[24]))
	$4 = ($4 + [24])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $9 (int_64 $0, int_32 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	$5 = ($global$0 - [192])
	$global$0 = $5
	if ( (int_64)(*($2) == 0) ){ goto $label$1 }
	*($5 + [120]) = [8414]
	*($5 + [124]) = CALL $743([8414])
	*($5 + [32]) = *($5 + [120])
	$6 = CALL $10(($5 + [40]), ($5 + [32]))
	$7 = *($1 + [8])
	if ( ((int_64)$7 != (int_64)*($6)) ){ goto $label$3 }
	$8 = *($1 + [16])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($1 + [16])
	CALL $723(($5 + [120]), $8)
	$1 = CALL $715(($5 + [120]), [8342])
	$6 = ($1 + [8])
	*((($5 + [40]) + [8])) = *($6)
	*($5 + [40]) = *($1)
	*($1) = (int_64)0
	*($6) = [0]
	$1 = *($3)
	$6 = ($1 & [1])
	$1 = CALL $716(($5 + [40]), ( *($3 + [8]) ? ($3 + [1]) : $6 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $6 ))
	$6 = *($1 + [4])
	$9 = *($1)
	*($1) = (int_64)0
	$10 = *($1 + [8])
	*($1 + [8]) = [0]
	if ( (*($3) & [1]) ){ goto $label$5 }
	*($3) = [0]
	goto $label$4 
	
.LABEL $label$5
	*(*(($3 + [8]))) = [0]
	*(($3 + [4])) = [0]
	
.LABEL $label$4
	CALL $712($3, [0])
	*(($3 + [4])) = $6
	*($3) = $9
	*(($3 + [8])) = $10
	if ( ((*($5 + [40]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [48]))
	
.LABEL $label$6
	if ( ((*($5 + [120]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($5 + [128]))
	
.LABEL $label$2
	*($5 + [104]) = [8344]
	*($5 + [108]) = CALL $743([8344])
	*($5 + [24]) = *($5 + [104])
	$11 = *(CALL $10(($5 + [112]), ($5 + [24])))
	*($5 + [88]) = [8351]
	*($5 + [92]) = CALL $743([8351])
	*($5 + [16]) = *($5 + [88])
	$1 = CALL $10(($5 + [96]), ($5 + [16]))
	*($5 + [120]) = [8414]
	*($5 + [124]) = CALL $743([8414])
	*($5 + [8]) = *($5 + [120])
	$12 = *(CALL $10(($5 + [40]), ($5 + [8])))
	*((($5 + [40]) + [24])) = *(($2 + [8]))
	*($5 + [48]) = ( $8 ? $7 : ((int_64)$7 == (int_64)$12) )
	*($5 + [40]) = $0
	*($5 + [56]) = *($2)
	$2 = CALL $709((($5 + [40]) + [32]), $3)
	*($5 + [120]) = $4
	*($5 + [128]) = *($1)
	*(($3 = CALL _Znwj([16]))) = $0
	*($3 + [8]) = $11
	*((($5 + [120]) + [36])) = [0]
	$1 = ($3 + [16])
	*((($5 + [120]) + [24])) = $1
	*(($5 + [140])) = $1
	*($5 + [136]) = $3
	*($5 + [148 align=4]) = (int_64)0
	$3 = *($2)
	$2 = ( *((($5 + [40]) + [36])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($5 + [148])
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$7 }
	if ( ($3 == 0) ){ goto $label$9 }
	CALL $11($2, $3)
	$2 = *(($5 + [152]))
	$3 = *(($5 + [148]))
	goto $label$8 
	
.LABEL $label$9
	$2 = [0]
	$3 = [0]
	
.LABEL $label$8
	*($5 + [180]) = $3
	*($5 + [176]) = $3
	*($5 + [184]) = $2
	*($5 + [160]) = ($5 + [176])
	*($5 + [168]) = ($5 + [40])
	CALL $12(($5 + [168]), ($5 + [160]))
	CALL $13(($5 + [176]), ($5 + [120]))
	$3 = *($5 + [176])
	CALL send_inline($3, (*($5 + [180]) - $3))
	$3 = *($5 + [176])
	if ( ($3 == 0) ){ goto $label$10 }
	*($5 + [180]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$10
	$3 = *($5 + [148])
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [152])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$3 = *($5 + [136])
	if ( ($3 == 0) ){ goto $label$12 }
	*(($5 + [140])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$12
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($5 + [80])))
	
.LABEL $label$1
	$global$0 = ($5 + [192])
}

void .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[48])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[89478486]) ){ goto $label$2 }
	$6 = [89478485]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[48])
	if ( ((uint_32)$7 > (uint_32)[44739241]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[48]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[48])))) = *($1)
	*(($4 + [40])) = *(($1 + [40]))
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-48]) * (int_32)[48]))
	$6 = ($5 + ((int_32)$6 * (int_32)[48]))
	$4 = ($4 + [48])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $7 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = *($1 + [4])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$6 = (CASTING uint_64)(uint_32 $2)
	$7 = (($3 + [72]) + [16])
	$8 = ($0 + [4])
	
.LOOP $label$2:
	$9 = ($4 + [24])
	CALL __multi3(($3 + [56]), *($4 + [16]), *($9), $6, (int_64)0)
	CALL __udivti3(($3 + [40]), *($3 + [56]), *((($3 + [56]) + [8])), (int_64)100, (int_64)0)
	CALL __udivti3(($3 + [24]), *($3 + [40]), *((($3 + [40]) + [8])), *($4 + [32]), (int_64)0)
	$10 = *($4)
	$11 = *($3 + [24])
	if ( (uint_64)(((int_64)$11 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$3
	$12 = (uint_64)$10 >> (uint_64)(int_64)8)
	$1 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $12) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$13 = (uint_64)$12 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$12 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$12 = $13
	$14 = $1
	goto $label$7 
	
.LABEL $label$8
	$12 = $13
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$12 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$12 = (uint_64)$12 >> (uint_64)(int_64)8)
	$2 = ((int_32)$1 < (int_32)[6])
	$14 = ($1 + [1])
	$1 = $14
	if ( $2 ){ goto $label$9 }
	
.LABEL $label$7
	$1 = ($14 + [1])
	if ( ((int_32)$14 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [22633])
	
.LABEL $label$4
	$12 = *($4 + [8])
	*(($2 = (($3 + [72]) + [8]))) = $11
	*($7) = $10
	*($3 + [72]) = $12
	$1 = *($8)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [8]))) ){ goto $label$11 }
	*($1) = *($3 + [72])
	*(($1 + [16])) = *($7)
	*(($1 + [8])) = *($2)
	*($8) = (*($8) + [24])
	goto $label$10 
	
.LABEL $label$11
	CALL $8($0, ($3 + [72]))
	
.LABEL $label$10
	CALL eosio_assert(((int_64)*($4) == (int_64)$10), [22653])
	CALL __multi3(($3 + [8]), *(($4 + [32])), (int_64)0, $11, (int_64)$11 >> (int_64)63))
	$13 = *((($3 + [8]) + [8]))
	$10 = *($9)
	$12 = *($3 + [8])
	$1 = ($4 + [16])
	CALL eosio_assert(( ((uint_64)*($1) >= (uint_64)$12) ? ((uint_64)$10 >= (uint_64)$13) : ((int_64)$10 == (int_64)$13) ), [22682])
	$10 = *($1)
	*($1) = (int_64))($10 - $12)
	*($9) = (int_64))((int_64))(*($9) - $13) - (CASTING uint_64)(uint_32 (uint_64)($10 <= $12)))
	$4 = ($4 + [48])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($3 + [96])
}

void .FUNC $4 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($1)
	$5 = *(($1 + [8]))
	if ( (int_64)($5 == 0) ){ goto $label$2 }
	$6 = CALL _Znwj([48])
	*($3 + [24]) = $6
	*($3 + [16]) = (int_64)137438953521
	CALL memset($6, [48], [32])
	$1 = [0]
	*($6 + [32]) = [0]
	*($6 + [1]) = *((((CASTING uint_32)(uint_64 $4) & [15]) + [29684]))
	$7 = (($3 + [16]) | [1])
	$8 = (($3 + [16]) + [8])
	
.LOOP $label$3:
	$4 = (uint_64)$4 >> (uint_64)(int_64)4
	*((( *($8) ? $7 : (*($3 + [16]) & [1]) ) + ( $1 ? ($1 + [2]) : (($6 = ($1 + [1])) & [1]) ))) = *((((CASTING uint_32)(uint_64 $4)) & [15]) + [29684]))
	$4 = ((int_64)$4 | (int_64)((int_64)$5 << (int_64)60))
	$5 = (uint_64)$5 >> (uint_64)(int_64)4)
	$1 = $6
	if ( ((int_32)$6 != (int_32)[31]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL $723(($3 + [16]), $4)
	
.LABEL $label$1
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$1 = CALL $743($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$7 }
	*($3) = ($1 << [1])
	$7 = ($3 | [1])
	$6 = $7
	if ( $1 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$7 = (($1 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($3) = ($7 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $1
	$7 = ($3 | [1])
	
.LABEL $label$6
	CALL memcpy($6, $2, $1)
	
.LABEL $label$5
	*(($6 + $1)) = [0]
	$1 = *($3)
	$6 = ($1 & [1])
	$1 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $7 : $6 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $6 ))
	$5 = *($1)
	*($1) = (int_64)0
	*($0) = $5
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$8
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$9
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$4
	CALL $708($3)
}

void .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($1 + [8])
	$3 = *($1)
	CALL $3(($2 + [8]), $3, (int_64)$3 >> (int_64)63), $3, (int_64)0)
	$1 = CALL $715(($2 + [8]), [8305])
	*($0) = *($1)
	$4 = ($1 + [8])
	*(($0 + [8])) = *($4)
	*($1) = (int_64)0
	*($4) = [0]
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($2 + [16]))
	
.LABEL $label$1
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( (int_64)($3) == 0) ){ goto $label$5 }
	$4 = [0]
	
.LOOP $label$7:
	*((($2 + [25]) + ($1 = $4))) = $3
	$4 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[5]) ){ goto $label$6 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$7 }
	
.LABEL $label$6
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($2 + [8]) = ($4 << [1])
	$5 = (($2 + [8]) | [1])
	goto $label$3 
	
.LABEL $label$5
	*(($2 + [16])) = [0]
	*($2 + [8]) = (int_64)0
	*($2 + [8]) = [0]
	$1 = (($2 + [8]) | [1])
	$4 = $1
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2 + [8]) = ($6 | [1])
	*($2 + [16]) = $5
	*($2 + [12]) = $4
	
.LABEL $label$3
	$6 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$8:
	*(($5 + $1)) = *((($2 + [25]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$8 }
	$4 = ($5 + $4)
	$1 = (($2 + [8]) | [1])
	
.LABEL $label$2
	*($4) = [0]
	$4 = *($2 + [8])
	$5 = ($4 & [1])
	CALL $716($0, ( *($2 + [16]) ? $1 : $5 ), ( *($2 + [12]) ? uint_32($4 >> [1]) : $5 ))
	if ( ((*($2 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($2 + [16])))
	
.LABEL $label$9
	$global$0 = ($2 + [32])
}

void .FUNC $2 (int_32 $0)
{
	int_32 $1
	int_32 $2
	if ( *($0) ){ goto $label$1 }
	*(($1 = CALL _Znwj([32]))) = (int_64)0
	*($0) = $1
	*(($1 + [24])) = (int_64)0
	*(($1 + [16])) = (int_64)0
	*(($1 + [8])) = (int_64)0
	$1 = CALL _Znaj($2)
	$2 = CALL read_transaction($1, $2)
	$2 = CALL transaction_size()
	if ( ((int_32)$2 == (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [8192])
	
.LABEL $label$2
	CALL sha256($1, $2, *($0))
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdaPv($1)
	
.LABEL $label$1
}

void .FUNC $3 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [96])
	$global$0 = $5
	$6 = ((int_64)$3 & (int_64)255)
	$3 = (int_64)0
	$7 = (int_64)0
	if ( (uint_64)($4 <= (int_64)2) ){ goto $label$1 }
	$7 = (int_64)0
	
.LOOP $label$2:
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((uint_64)$4 > (uint_64)(int_64)19)
	$4 = ((uint_64)$4 / (uint_64)(int_64)10)
	if ( $8 ){ goto $label$2 }
	
.LABEL $label$1
	$6 = ((int_64)$7 + (int_64)$6)
	$9 = (CASTING uint_32)(uint_64 $6)
	$8 = ($9 & [255])
	if ( ($8 == 0) ){ goto $label$4 }
	$4 = (int_64)1
	$10 = ($5 + [56])
	$3 = (int_64)0
	
.LOOP $label$5:
	CALL __multi3(($5 + [48]), $4, $3, (int_64)10, (int_64)0)
	$3 = *($10)
	$4 = *($5 + [48])
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$4 = (int_64)1
	
.LABEL $label$3
	CALL __udivti3(($5 + [32]), $1, $2, $4, $3)
	$7 = *(($5 + [40]))
	*($5 + [72]) = $7
	$2 = *($5 + [32])
	*($5 + [64]) = $2
	CALL $4(($5 + [80]), ($5 + [64]), [8303])
	if ( (*($5 + [80]) & [1]) ){ goto $label$7 }
	$11 = (($5 + [80]) | [1])
	goto $label$6 
	
.LABEL $label$7
	$11 = *($5 + [88])
	CALL _ZdlPv($11)
	
.LABEL $label$6
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$8 = CALL $743($11)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$12 }
	*($0) = ($8 << [1])
	$10 = ($0 + [1])
	if ( $8 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$12 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($12)
	*($0) = ($12 | [1])
	*($0 + [8]) = $10
	*($0 + [4]) = $8
	
.LABEL $label$11
	CALL memcpy($10, $11, $8)
	
.LABEL $label$10
	CALL __multi3(($5 + [16]), $2, $7, $4, $3)
	*(($10 + $8)) = [0]
	$7 = (int_64))($1 - *($5 + [16]))
	if ( (uint_64)($6 <= (int_64)2) ){ goto $label$13 }
	$10 = ($5 + [8])
	$12 = [1]
	$11 = [1]
	
.LOOP $label$14:
	if ( (($11 & [255]) == 0) ){ goto $label$16 }
	$8 = ($12 & [255])
	$4 = (int_64)0
	$3 = (int_64)1
	
.LOOP $label$17:
	CALL __multi3($5, $3, $4, (int_64)10, (int_64)0)
	$4 = *($10)
	$3 = *($5)
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$3 = (int_64)1
	$4 = (int_64)0
	
.LABEL $label$15
	$8 = (int_64)($4 == 0)
	if ( (( ((uint_64)$3 <= (uint_64)$7) ? $8 : $8 ) == 0) ){ goto $label$18 }
	$12 = ($12 + [1])
	$11 = ($11 + [1])
	if ( ((uint_64)$6 > (uint_64)(CASTING uint_64)(uint_32 $11)) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$18
	*(($5 + [72])) = [0]
	*($5 + [64]) = (int_64)0
	$8 = ($9 - $11)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$21 }
	*($5 + [64]) = ($8 << [1])
	$11 = (($5 + [64]) | [1])
	$10 = $11
	if ( $8 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$11 = (($8 + [16]) & [-16])
	$10 = CALL _Znwj($11)
	*($5 + [64]) = ($11 | [1])
	*($5 + [72]) = $10
	*($5 + [68]) = $8
	$11 = (($5 + [64]) | [1])
	
.LABEL $label$20
	CALL memset($10, [48], $8)
	
.LABEL $label$19
	*(($10 + $8)) = [0]
	$8 = *($5 + [64])
	$10 = ($8 & [1])
	CALL $716($0, ( *($5 + [72]) ? $11 : $10 ), ( *($5 + [68]) ? uint_32($8 >> [1]) : $10 ))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*(($5 + [72])))
	
.LABEL $label$13
	CALL $723(($5 + [64]), $7)
	if ( (*($5 + [64]) & [1]) ){ goto $label$23 }
	$8 = (($5 + [64]) | [1])
	goto $label$22 
	
.LABEL $label$23
	$8 = *($5 + [72])
	CALL _ZdlPv($8)
	
.LABEL $label$22
	CALL $715($0, $8)
	$global$0 = ($5 + [96])
	return (unreachable)
	
.LABEL $label$9
	CALL $708($0)
	
.LABEL $label$8
	CALL $708(($5 + [64]))
	(unreachable)
}

void .FUNC memory ()
{
}

void .FUNC $1 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $14 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [224])
	$global$0 = $1
	*($1 + [208]) = [22885]
	*($1 + [212]) = CALL $743([22885])
	*($1 + [72]) = *($1 + [208])
	$2 = CALL $10(($1 + [216]), ($1 + [72]))
	*($0 + [8]) = (int_64)1397703940
	*($0 + [16]) = [22897]
	*($0 + [20]) = [0]
	*($0) = *($2)
	*($1 + [192]) = [22901]
	*($1 + [196]) = CALL $743([22901])
	*($1 + [64]) = *($1 + [192])
	$2 = CALL $10(($1 + [200]), ($1 + [64]))
	*(($0 + [32])) = (int_64)87167674696196
	*(($0 + [40])) = [22914]
	*(($0 + [44])) = [1]
	*($0 + [24]) = *($2)
	*($1 + [176]) = [22920]
	*($1 + [180]) = CALL $743([22920])
	*($1 + [56]) = *($1 + [176])
	$2 = CALL $10(($1 + [184]), ($1 + [56]))
	*(($0 + [56])) = (int_64)383347609608
	*(($0 + [64])) = [22933]
	*(($0 + [68])) = [2]
	*($0 + [48]) = *($2)
	*($1 + [160]) = [22938]
	*($1 + [164]) = CALL $743([22938])
	*($1 + [48]) = *($1 + [160])
	$2 = CALL $10(($1 + [168]), ($1 + [48]))
	*(($0 + [80])) = (int_64)293455873288
	*(($0 + [88])) = [22951]
	*(($0 + [92])) = [3]
	*($0 + [72]) = *($2)
	*($1 + [144]) = [22938]
	*($1 + [148]) = CALL $743([22938])
	*($1 + [40]) = *($1 + [144])
	$2 = CALL $10(($1 + [152]), ($1 + [40]))
	*(($0 + [104])) = (int_64)289176438024
	*(($0 + [112])) = [22956]
	*(($0 + [116])) = [4]
	*($0 + [96]) = *($2)
	*($1 + [128]) = [22938]
	*($1 + [132]) = CALL $743([22938])
	*($1 + [32]) = *($1 + [128])
	$2 = CALL $10(($1 + [136]), ($1 + [32]))
	*(($0 + [128])) = (int_64)310651471112
	*(($0 + [136])) = [22961]
	*(($0 + [140])) = [5]
	*($0 + [120]) = *($2)
	*($1 + [112]) = [22966]
	*($1 + [116]) = CALL $743([22966])
	*($1 + [24]) = *($1 + [112])
	$2 = CALL $10(($1 + [120]), ($1 + [24]))
	*(($0 + [152])) = (int_64)4994016260158475524
	*(($0 + [160])) = [22979]
	*(($0 + [164])) = [6]
	*($0 + [144]) = *($2)
	*($1 + [96]) = [22987]
	*($1 + [100]) = CALL $743([22987])
	*($1 + [16]) = *($1 + [96])
	$2 = CALL $10(($1 + [104]), ($1 + [16]))
	*(($0 + [176])) = (int_64)1414550532
	*(($0 + [184])) = [23000]
	*(($0 + [188])) = [7]
	*($0 + [168]) = *($2)
	*($1 + [80]) = [23004]
	*($1 + [84]) = CALL $743([23004])
	*($1 + [8]) = *($1 + [80])
	$2 = CALL $10(($1 + [88]), ($1 + [8]))
	*(($0 + [200])) = (int_64)1413697284
	*(($0 + [208])) = [23017]
	*(($0 + [212])) = [8]
	*($0 + [192]) = *($2)
	$global$0 = ($1 + [224])
}

int_64 .FUNC $15 (int_64 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [240])
	$global$0 = $1
	CALL $14(($1 + [8]))
	$2 = ($1 + [8])
	if ( ((int_64)*($1 + [16]) == (int_64)$0) ){ goto $label$3 }
	if ( ((int_64)*(($1 + [40])) != (int_64)$0) ){ goto $label$4 }
	$2 = ($1 + [32])
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_64)*(($1 + [64])) != (int_64)$0) ){ goto $label$5 }
	$2 = ($1 + [56])
	goto $label$3 
	
.LABEL $label$5
	if ( ((int_64)*(($1 + [88])) != (int_64)$0) ){ goto $label$6 }
	$2 = ($1 + [80])
	goto $label$3 
	
.LABEL $label$6
	if ( ((int_64)*(($1 + [112])) != (int_64)$0) ){ goto $label$7 }
	$2 = ($1 + [104])
	goto $label$3 
	
.LABEL $label$7
	if ( ((int_64)*(($1 + [136])) != (int_64)$0) ){ goto $label$8 }
	$2 = ($1 + [128])
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_64)*(($1 + [160])) != (int_64)$0) ){ goto $label$9 }
	$2 = ($1 + [152])
	goto $label$3 
	
.LABEL $label$9
	if ( ((int_64)*(($1 + [184])) != (int_64)$0) ){ goto $label$10 }
	$2 = ($1 + [176])
	goto $label$3 
	
.LABEL $label$10
	if ( ((int_64)*(($1 + [208])) != (int_64)$0) ){ goto $label$2 }
	$2 = ($1 + [200])
	
.LABEL $label$3
	$0 = *($2)
	goto $label$1 
	
.LABEL $label$2
	*($1) = $0
	CALL $16(($1 + [224]), [8360], $1)
	if ( (*($1 + [224]) & [1]) ){ goto $label$12 }
	$2 = (($1 + [224]) | [1])
	goto $label$11 
	
.LABEL $label$12
	$2 = *($1 + [232])
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL eosio_assert([0], $2)
	$0 = (int_64)-1
	
.LABEL $label$1
	$global$0 = ($1 + [240])
	return $0
}

void .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [1072])
	$global$0 = $3
	CALL memory()
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$53 }
	if ( ((int_64)$2 > (int_64)-4420673558282371073) ){ goto $label$52 }
	if ( ((int_64)$2 <= (int_64)-5003333016740391937) ){ goto $label$49 }
	if ( ((int_64)$2 <= (int_64)-5003067270470790145) ){ goto $label$47 }
	if ( ((int_64)$2 <= (int_64)-4962041340800292561) ){ goto $label$43 }
	if ( ((int_64)$2 > (int_64)-4741308670813542225) ){ goto $label$35 }
	if ( ((int_64)$2 == (int_64)-4962041340800292560) ){ goto $label$33 }
	if ( ((int_64)$2 != (int_64)-4958221414067099344) ){ goto $label$1 }
	*($3 + [1028]) = [0]
	*($3 + [1024]) = [1]
	*($3 + [40]) = *($3 + [1024])
	CALL $19($1, $1, ($3 + [40]))
	goto $label$1 
	
.LABEL $label$53
	*(($3 + [424])) = [0]
	*($3 + [464]) = [0]
	*($3 + [416]) = (int_64)0
	*($3 + [456]) = (int_64)0
	$4 = CALL $20(($3 + [472]), $0, $1, ($3 + [416]))
	*($3 + [440]) = [8403]
	*($3 + [444]) = CALL $743([8403])
	*($3 + [408]) = *($3 + [440])
	if ( ((int_64)*(CALL $10(($3 + [448]), ($3 + [408]))) != (int_64)$2) ){ goto $label$51 }
	*($3 + [432]) = [8414]
	*($3 + [436]) = CALL $743([8414])
	*($3 + [400]) = *($3 + [432])
	if ( ((int_64)*(CALL $10(($3 + [448]), ($3 + [400]))) == (int_64)$1) ){ goto $label$50 }
	CALL eosio_assert([0], [8420])
	goto $label$50 
	
.LABEL $label$52
	if ( ((int_64)$2 <= (int_64)3626193066236313599) ){ goto $label$48 }
	if ( ((int_64)$2 <= (int_64)4849591931696054271) ){ goto $label$46 }
	if ( ((int_64)$2 <= (int_64)4921565079714250751) ){ goto $label$42 }
	if ( ((int_64)$2 > (int_64)8421049960203129231) ){ goto $label$34 }
	if ( ((int_64)$2 == (int_64)4921565079714250752) ){ goto $label$32 }
	if ( ((int_64)$2 != (int_64)4923678843005968384) ){ goto $label$1 }
	*($3 + [740]) = [0]
	*($3 + [736]) = [2]
	*($3 + [328]) = *($3 + [736])
	CALL $22($1, $1, ($3 + [328]))
	goto $label$1 
	
.LABEL $label$51
	CALL $23($4, $0, $1, $2)
	
.LABEL $label$50
	CALL $24($4)
	goto $label$1 
	
.LABEL $label$49
	if ( ((int_64)$2 > (int_64)-6030912078442381313) ){ goto $label$45 }
	if ( ((int_64)$2 > (int_64)-6030914414904577841) ){ goto $label$41 }
	if ( ((int_64)$2 == (int_64)-7877141661589274624) ){ goto $label$31 }
	if ( ((int_64)$2 == (int_64)-6571714019022340096) ){ goto $label$30 }
	if ( ((int_64)$2 != (int_64)-6030914414904590336) ){ goto $label$1 }
	*($3 + [996]) = [0]
	*($3 + [992]) = [3]
	*($3 + [72]) = *($3 + [992])
	CALL $26($1, $1, ($3 + [72]))
	goto $label$1 
	
.LABEL $label$48
	if ( ((int_64)$2 > (int_64)-4417036368799289345) ){ goto $label$44 }
	if ( ((int_64)$2 > (int_64)-4417253564707110913) ){ goto $label$40 }
	if ( ((int_64)$2 == (int_64)-4420673558282371072) ){ goto $label$29 }
	if ( ((int_64)$2 == (int_64)-4417302115068891136) ){ goto $label$28 }
	if ( ((int_64)$2 != (int_64)-4417288635573731328) ){ goto $label$1 }
	*($3 + [796]) = [0]
	*($3 + [792]) = [4]
	*($3 + [272]) = *($3 + [792])
	CALL $28($1, $1, ($3 + [272]))
	goto $label$1 
	
.LABEL $label$47
	if ( ((int_64)$2 > (int_64)-5003185678656101217) ){ goto $label$39 }
	if ( ((int_64)$2 == (int_64)-5003333016740391936) ){ goto $label$27 }
	if ( ((int_64)$2 == (int_64)-5003292850112028192) ){ goto $label$26 }
	if ( ((int_64)$2 != (int_64)-5003231858290966528) ){ goto $label$1 }
	*($3 + [708]) = [0]
	*($3 + [704]) = [5]
	*($3 + [360]) = *($3 + [704])
	CALL $30($1, $1, ($3 + [360]))
	goto $label$1 
	
.LABEL $label$46
	if ( ((int_64)$2 > (int_64)3626431425110081535) ){ goto $label$38 }
	if ( ((int_64)$2 == (int_64)3626193066236313600) ){ goto $label$25 }
	if ( ((int_64)$2 == (int_64)3626339551107862784) ){ goto $label$24 }
	if ( ((int_64)$2 != (int_64)3626370986502598288) ){ goto $label$1 }
	*($3 + [1020]) = [0]
	*($3 + [1016]) = [6]
	*($3 + [48]) = *($3 + [1016])
	CALL $32($1, $1, ($3 + [48]))
	goto $label$1 
	
.LABEL $label$45
	if ( ((int_64)$2 > (int_64)-6030908238270038017) ){ goto $label$37 }
	if ( ((int_64)$2 == (int_64)-6030912078442381312) ){ goto $label$23 }
	if ( ((int_64)$2 == (int_64)-6030912078442368816) ){ goto $label$22 }
	if ( ((int_64)$2 != (int_64)-6030911325394173952) ){ goto $label$1 }
	*($3 + [1004]) = [0]
	*($3 + [1000]) = [7]
	*($3 + [64]) = *($3 + [1000])
	CALL $34($1, $1, ($3 + [64]))
	goto $label$1 
	
.LABEL $label$44
	if ( ((int_64)$2 > (int_64)-3075276117162852353) ){ goto $label$36 }
	if ( ((int_64)$2 == (int_64)-4417036368799289344) ){ goto $label$21 }
	if ( ((int_64)$2 == (int_64)-4417034762098166896) ){ goto $label$20 }
	if ( ((int_64)$2 != (int_64)-4220256421846450176) ){ goto $label$1 }
	*($3 + [748]) = [0]
	*($3 + [744]) = [8]
	*($3 + [320]) = *($3 + [744])
	CALL $36($1, $1, ($3 + [320]))
	goto $label$1 
	
.LABEL $label$43
	if ( ((int_64)$2 == (int_64)-5003067270470790144) ){ goto $label$19 }
	if ( ((int_64)$2 == (int_64)-4995152392514823296) ){ goto $label$18 }
	if ( ((int_64)$2 != (int_64)-4994305449636528128) ){ goto $label$1 }
	*($3 + [900]) = [0]
	*($3 + [896]) = [9]
	*($3 + [168]) = *($3 + [896])
	CALL $38($1, $1, ($3 + [168]))
	goto $label$1 
	
.LABEL $label$42
	if ( ((int_64)$2 == (int_64)4849591931696054272) ){ goto $label$17 }
	if ( ((int_64)$2 == (int_64)4851652596668039168) ){ goto $label$16 }
	if ( ((int_64)$2 != (int_64)4921564854456680448) ){ goto $label$1 }
	*($3 + [764]) = [0]
	*($3 + [760]) = [10]
	*($3 + [304]) = *($3 + [760])
	CALL $40($1, $1, ($3 + [304]))
	goto $label$1 
	
.LABEL $label$41
	if ( ((int_64)$2 == (int_64)-6030914414904577840) ){ goto $label$15 }
	if ( ((int_64)$2 == (int_64)-6030913832836896368) ){ goto $label$14 }
	if ( ((int_64)$2 != (int_64)-6030912842591371264) ){ goto $label$1 }
	*($3 + [964]) = [0]
	*($3 + [960]) = [11]
	*($3 + [104]) = *($3 + [960])
	CALL $42($1, $1, ($3 + [104]))
	goto $label$1 
	
.LABEL $label$40
	if ( ((int_64)$2 == (int_64)-4417253564707110912) ){ goto $label$13 }
	if ( ((int_64)$2 == (int_64)-4417154777289543680) ){ goto $label$12 }
	if ( ((int_64)$2 != (int_64)-4417052212933644288) ){ goto $label$1 }
	*($3 + [828]) = [0]
	*($3 + [824]) = [12]
	*($3 + [240]) = *($3 + [824])
	CALL $44($1, $1, ($3 + [240]))
	goto $label$1 
	
.LABEL $label$39
	if ( ((int_64)$2 == (int_64)-5003185678656101216) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-5003083114605145088) ){ goto $label$10 }
	if ( ((int_64)$2 != (int_64)-5003067496826035040) ){ goto $label$1 }
	*($3 + [868]) = [0]
	*($3 + [864]) = [13]
	*($3 + [200]) = *($3 + [864])
	CALL $46($1, $1, ($3 + [200]))
	goto $label$1 
	
.LABEL $label$38
	if ( ((int_64)$2 == (int_64)3626431425110081536) ){ goto $label$9 }
	if ( ((int_64)$2 == (int_64)4730614992256270336) ){ goto $label$8 }
	if ( ((int_64)$2 != (int_64)4730614997094236160) ){ goto $label$1 }
	*($3 + [908]) = [0]
	*($3 + [904]) = [14]
	*($3 + [160]) = *($3 + [904])
	CALL $48($1, $1, ($3 + [160]))
	goto $label$1 
	
.LABEL $label$37
	if ( ((int_64)$2 == (int_64)-6030908238270038016) ){ goto $label$7 }
	if ( ((int_64)$2 == (int_64)-6030904538020446208) ){ goto $label$6 }
	if ( ((int_64)$2 != (int_64)-5915333923421503488) ){ goto $label$1 }
	*($3 + [1012]) = [0]
	*($3 + [1008]) = [15]
	*($3 + [56]) = *($3 + [1008])
	CALL $50($1, $1, ($3 + [56]))
	goto $label$1 
	
.LABEL $label$36
	if ( ((int_64)$2 == (int_64)-3075276117162852352) ){ goto $label$5 }
	if ( ((int_64)$2 == (int_64)-3075276112122085376) ){ goto $label$4 }
	if ( ((int_64)$2 != (int_64)-3075180876166856704) ){ goto $label$1 }
	*($3 + [676]) = [0]
	*($3 + [672]) = [16]
	*($3 + [392]) = *($3 + [672])
	CALL $52($1, $1, ($3 + [392]))
	goto $label$1 
	
.LABEL $label$35
	if ( ((int_64)$2 == (int_64)-4741308670813542224) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4420675703604350976) ){ goto $label$1 }
	*($3 + [732]) = [0]
	*($3 + [728]) = [17]
	*($3 + [336]) = *($3 + [728])
	CALL $54($1, $1, ($3 + [336]))
	goto $label$1 
	
.LABEL $label$34
	if ( ((int_64)$2 == (int_64)8421059350512194928) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)8421049960203129232) ){ goto $label$1 }
	*($3 + [1068]) = [0]
	*($3 + [1064]) = [18]
	*($3) = *($3 + [1064])
	CALL $54($1, $1, $3)
	goto $label$1 
	
.LABEL $label$33
	*($3 + [1036]) = [0]
	*($3 + [1032]) = [19]
	*($3 + [32]) = *($3 + [1032])
	CALL $57($1, $1, ($3 + [32]))
	goto $label$1 
	
.LABEL $label$32
	*($3 + [756]) = [0]
	*($3 + [752]) = [20]
	*($3 + [312]) = *($3 + [752])
	CALL $59($1, $1, ($3 + [312]))
	goto $label$1 
	
.LABEL $label$31
	*($3 + [684]) = [0]
	*($3 + [680]) = [21]
	*($3 + [384]) = *($3 + [680])
	CALL $61($1, $1, ($3 + [384]))
	goto $label$1 
	
.LABEL $label$30
	*($3 + [780]) = [0]
	*($3 + [776]) = [22]
	*($3 + [288]) = *($3 + [776])
	CALL $63($1, $1, ($3 + [288]))
	goto $label$1 
	
.LABEL $label$29
	*($3 + [924]) = [0]
	*($3 + [920]) = [23]
	*($3 + [144]) = *($3 + [920])
	CALL $65($1, $1, ($3 + [144]))
	goto $label$1 
	
.LABEL $label$28
	*($3 + [820]) = [0]
	*($3 + [816]) = [24]
	*($3 + [248]) = *($3 + [816])
	CALL $67($1, $1, ($3 + [248]))
	goto $label$1 
	
.LABEL $label$27
	*($3 + [884]) = [0]
	*($3 + [880]) = [25]
	*($3 + [184]) = *($3 + [880])
	CALL $69($1, $1, ($3 + [184]))
	goto $label$1 
	
.LABEL $label$26
	*($3 + [860]) = [0]
	*($3 + [856]) = [26]
	*($3 + [208]) = *($3 + [856])
	CALL $71($1, $1, ($3 + [208]))
	goto $label$1 
	
.LABEL $label$25
	*($3 + [1052]) = [0]
	*($3 + [1048]) = [27]
	*($3 + [16]) = *($3 + [1048])
	CALL $73($1, $1, ($3 + [16]))
	goto $label$1 
	
.LABEL $label$24
	*($3 + [700]) = [0]
	*($3 + [696]) = [28]
	*($3 + [368]) = *($3 + [696])
	CALL $75($1, $1, ($3 + [368]))
	goto $label$1 
	
.LABEL $label$23
	*($3 + [980]) = [0]
	*($3 + [976]) = [29]
	*($3 + [88]) = *($3 + [976])
	CALL $26($1, $1, ($3 + [88]))
	goto $label$1 
	
.LABEL $label$22
	*($3 + [972]) = [0]
	*($3 + [968]) = [30]
	*($3 + [96]) = *($3 + [968])
	CALL $78($1, $1, ($3 + [96]))
	goto $label$1 
	
.LABEL $label$21
	*($3 + [812]) = [0]
	*($3 + [808]) = [31]
	*($3 + [256]) = *($3 + [808])
	CALL $80($1, $1, ($3 + [256]))
	goto $label$1 
	
.LABEL $label$20
	*($3 + [836]) = [0]
	*($3 + [832]) = [32]
	*($3 + [232]) = *($3 + [832])
	CALL $22($1, $1, ($3 + [232]))
	goto $label$1 
	
.LABEL $label$19
	*($3 + [876]) = [0]
	*($3 + [872]) = [33]
	*($3 + [192]) = *($3 + [872])
	CALL $83($1, $1, ($3 + [192]))
	goto $label$1 
	
.LABEL $label$18
	*($3 + [1044]) = [0]
	*($3 + [1040]) = [34]
	*($3 + [24]) = *($3 + [1040])
	CALL $85($1, $1, ($3 + [24]))
	goto $label$1 
	
.LABEL $label$17
	*($3 + [772]) = [0]
	*($3 + [768]) = [35]
	*($3 + [296]) = *($3 + [768])
	CALL $87($1, $1, ($3 + [296]))
	goto $label$1 
	
.LABEL $label$16
	*($3 + [916]) = [0]
	*($3 + [912]) = [36]
	*($3 + [152]) = *($3 + [912])
	CALL $89($1, $1, ($3 + [152]))
	goto $label$1 
	
.LABEL $label$15
	*($3 + [988]) = [0]
	*($3 + [984]) = [37]
	*($3 + [80]) = *($3 + [984])
	CALL $78($1, $1, ($3 + [80]))
	goto $label$1 
	
.LABEL $label$14
	*($3 + [940]) = [0]
	*($3 + [936]) = [38]
	*($3 + [128]) = *($3 + [936])
	CALL $87($1, $1, ($3 + [128]))
	goto $label$1 
	
.LABEL $label$13
	*($3 + [844]) = [0]
	*($3 + [840]) = [39]
	*($3 + [224]) = *($3 + [840])
	CALL $38($1, $1, ($3 + [224]))
	goto $label$1 
	
.LABEL $label$12
	*($3 + [804]) = [0]
	*($3 + [800]) = [40]
	*($3 + [264]) = *($3 + [800])
	CALL $94($1, $1, ($3 + [264]))
	goto $label$1 
	
.LABEL $label$11
	*($3 + [852]) = [0]
	*($3 + [848]) = [41]
	*($3 + [216]) = *($3 + [848])
	CALL $71($1, $1, ($3 + [216]))
	goto $label$1 
	
.LABEL $label$10
	*($3 + [892]) = [0]
	*($3 + [888]) = [42]
	*($3 + [176]) = *($3 + [888])
	CALL $97($1, $1, ($3 + [176]))
	goto $label$1 
	
.LABEL $label$9
	*($3 + [788]) = [0]
	*($3 + [784]) = [43]
	*($3 + [280]) = *($3 + [784])
	CALL $87($1, $1, ($3 + [280]))
	goto $label$1 
	
.LABEL $label$8
	*($3 + [692]) = [0]
	*($3 + [688]) = [44]
	*($3 + [376]) = *($3 + [688])
	CALL $73($1, $1, ($3 + [376]))
	goto $label$1 
	
.LABEL $label$7
	*($3 + [956]) = [0]
	*($3 + [952]) = [45]
	*($3 + [112]) = *($3 + [952])
	CALL $42($1, $1, ($3 + [112]))
	goto $label$1 
	
.LABEL $label$6
	*($3 + [948]) = [0]
	*($3 + [944]) = [46]
	*($3 + [120]) = *($3 + [944])
	CALL $102($1, $1, ($3 + [120]))
	goto $label$1 
	
.LABEL $label$5
	*($3 + [716]) = [0]
	*($3 + [712]) = [47]
	*($3 + [352]) = *($3 + [712])
	CALL $54($1, $1, ($3 + [352]))
	goto $label$1 
	
.LABEL $label$4
	*($3 + [1060]) = [0]
	*($3 + [1056]) = [48]
	*($3 + [8]) = *($3 + [1056])
	CALL $105($1, $1, ($3 + [8]))
	goto $label$1 
	
.LABEL $label$3
	*($3 + [724]) = [0]
	*($3 + [720]) = [49]
	*($3 + [344]) = *($3 + [720])
	CALL $54($1, $1, ($3 + [344]))
	goto $label$1 
	
.LABEL $label$2
	*($3 + [932]) = [0]
	*($3 + [928]) = [50]
	*($3 + [136]) = *($3 + [928])
	CALL $108($1, $1, ($3 + [136]))
	
.LABEL $label$1
	CALL $729([0])
	$global$0 = ($3 + [1072])
}

int_32 .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [22718])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [22823])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [22756])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [22823])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL _Znwj($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $479(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = *($1 + [16])
	$3 = *(($1 + [20]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	$7 = [16]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$7 = (($5 & [-16]) + $7)
	
.LABEL $label$2
	$4 = *(($1 + [32]))
	$3 = *($1 + [28])
	$7 = (($3 - $7) - $4)
	$6 = (CASTING uint_64)(uint_32 ($4 - $3))
	
.LOOP $label$3:
	$7 = ($7 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$3 = [0]
	if ( ($7 == 0) ){ goto $label$5 }
	CALL $11($0, ([0] - $7))
	$3 = *(($0 + [4]))
	$7 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$7 = [0]
	
.LABEL $label$4
	*($2 + [4]) = $7
	*($2) = $7
	*($2 + [8]) = $3
	CALL $510($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $554 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	$6 = ($global$0 - [32])
	$global$0 = $6
	CALL $721(($6 + [16]), *($1))
	CALL $555($6, $2, $3, $4, $5)
	$2 = *($6)
	$3 = ($2 & [1])
	$2 = CALL $716(($6 + [16]), ( *($6 + [8]) ? ($6 | [1]) : $3 ), ( *($6 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$7 = *($2)
	*($2) = (int_64)0
	*($0) = $7
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($6 + [8])))
	
.LABEL $label$1
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($6 + [24]))
	
.LABEL $label$2
	$global$0 = ($6 + [32])
}

void .FUNC $18 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [112])
	$global$0 = $3
	CALL $110($3)
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$1 }
	$5 = CALL _Znwj([280])
	$4 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$1
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = (int_64)0
	*($3 + [24]) = $2
	CALL $139(($3 + [32]), $4, $1, ($3 + [8]))
	$4 = *($3 + [80])
	if ( ($4 == 0) ){ goto $label$2 }
	*(($3 + [84])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$2
	$global$0 = ($3 + [112])
}

int_32 .FUNC $19 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [256])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [248]) = (int_64)0
	*($4 + [240]) = [0]
	if ( ((uint_32)$7 > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$4
	$3 = ($2 + $7)
	$8 = ($4 + [248])
	CALL memcpy(($4 + [240]), $2, [4])
	$9 = ($2 + [4])
	if ( ((uint_32)($7 + [-4]) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$5
	CALL memcpy($8, $9, [8])
	*((($4 + [8]) + [8])) = $3
	*($4 + [24]) = $2
	*($4 + [28]) = ($2 + [12])
	*($4 + [32]) = $3
	*($4 + [8]) = *($4 + [24])
	$8 = CALL $20(($4 + [40]), $0, $1, ($4 + [8]))
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	$0 = *((($4 + [240]) + [8]))
	$9 = *($4 + [240])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $9), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $749($2)
	
.LABEL $label$7
	CALL $24($8)
	$global$0 = ($4 + [256])
	return [1]
}

void .FUNC $579 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = ($global$0 - [80])
	$global$0 = $4
	*(($5 = (($4 + [32]) + [8]))) = *(($1 + [8]))
	*($4 + [32]) = *($1)
	$6 = *($5)
	*((($4 + [48]) + [8])) = $6
	*(($5 = (($4 + [64]) + [8]))) = $6
	*(($4 + [8])) = $6
	$6 = *($4 + [32])
	*($4 + [64]) = $6
	*($4 + [48]) = $6
	*($4) = $6
	CALL $5(($4 + [16]), $4)
	CALL $580(($4 + [64]), $2, $3)
	$1 = *($4 + [64])
	$2 = ($1 & [1])
	$1 = CALL $716(($4 + [16]), ( *($4 + [72]) ? (($4 + [64]) | [1]) : $2 ), ( *($4 + [68]) ? uint_32($1 >> [1]) : $2 ))
	$6 = *($1)
	*($1) = (int_64)0
	*($0) = $6
	$0 = ($1 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($4 + [64]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($5))
	
.LABEL $label$1
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$2
	$global$0 = ($4 + [80])
}

void .FUNC $556 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	$5 = *(($1 + [24]))
	*((($4 + [48]) + [24])) = $5
	$6 = *(($1 + [16]))
	*((($4 + [48]) + [16])) = $6
	$7 = *(($1 + [8]))
	$8 = *($1)
	*(($4 + [16])) = $6
	*(($4 + [24])) = $5
	*($4 + [56]) = $7
	*($4) = $8
	*($4 + [48]) = $8
	*($4 + [8]) = $7
	CALL $545(($4 + [32]), $4)
	CALL $557(($4 + [48]), $2, $3)
	$1 = *($4 + [48])
	$2 = ($1 & [1])
	$1 = CALL $716(($4 + [32]), ( *($4 + [56]) ? (($4 + [48]) | [1]) : $2 ), ( *($4 + [52]) ? uint_32($1 >> [1]) : $2 ))
	$7 = *($1)
	*($1) = (int_64)0
	*($0) = $7
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*((($4 + [48]) + [8])))
	
.LABEL $label$1
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [40]))
	
.LABEL $label$2
	$global$0 = ($4 + [80])
}

void .FUNC $631 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$3 = ($global$0 - [80])
	$global$0 = $3
	*(($4 = (($3 + [32]) + [8]))) = *(($1 + [8]))
	*($3 + [32]) = *($1)
	$5 = *($4)
	*((($3 + [48]) + [8])) = $5
	*(($1 = (($3 + [64]) + [8]))) = $5
	*(($3 + [8])) = $5
	$5 = *($3 + [32])
	*($3 + [64]) = $5
	*($3 + [48]) = $5
	*($3) = $5
	CALL $5(($3 + [16]), $3)
	*($1) = [0]
	*($3 + [64]) = (int_64)0
	$1 = CALL $743($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [64]) = ($1 << [1])
	$6 = (($3 + [64]) | [1])
	$4 = $6
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($1 + [16]) & [-16])
	$4 = CALL _Znwj($6)
	*($3 + [64]) = ($6 | [1])
	*($3 + [72]) = $4
	*($3 + [68]) = $1
	$6 = (($3 + [64]) | [1])
	
.LABEL $label$3
	CALL memcpy($4, $2, $1)
	
.LABEL $label$2
	*(($4 + $1)) = [0]
	$1 = *($3 + [64])
	$4 = ($1 & [1])
	$1 = CALL $716(($3 + [16]), ( *($3 + [72]) ? $6 : $4 ), ( *($3 + [68]) ? uint_32($1 >> [1]) : $4 ))
	$5 = *($1)
	*($1) = (int_64)0
	*($0) = $5
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($3 + [64]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*((($3 + [64]) + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [64]))
}

int_32 .FUNC $642 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [40])
	$3 = *($0 + [4])
	$0 = CALL $156($0, ($1 + [16]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [48])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [56]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$5 = ($1 + [64])
	$4 = *($3)
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$3 = ($1 + [72])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [80])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $1, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $630 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [40])
	$2 = *($0 + [4])
	$0 = CALL $168($0, ($1 + [16]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [64])
	$2 = *($0 + [4])
	$0 = CALL $306($0, ($1 + [48]))
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $2, [1])
	$2 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $2
	$1 = ($1 + [65])
	if ( ((int_32)*(($0 + [8])) != (int_32)$2) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, $2, [1])
	*(($1 = ($0 + [4]))) = (*($1) + [1])
	return $0
}

int_32 .FUNC $391 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([96])) + [8]) = [0]
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [80]) = $0
	CALL $600(($3 + [32]), $5)
	*($5 + [84]) = $1
	*($3 + [24]) = $5
	$7 = ((int_64)*($5 + [64]) + (int_64)*($5 + [72]))
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $390(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ((*($1) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $640 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ($2 - $1)
	if ( ((uint_32)$3 <= (uint_32)($4 - $5)) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL _ZdlPv($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$2 = [2147483647]
	if ( ((uint_32)$4 > (uint_32)[1073741822]) ){ goto $label$6 }
	$5 = ($4 << [1])
	$2 = ( $3 ? $5 : ($5 <= $3) )
	
.LABEL $label$6
	$5 = CALL _Znwj($2)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $2)
	CALL memcpy($5, $1, $3)
	$1 = ($0 + [4])
	$0 = (*($0 + [4]) + $3)
	goto $label$3 
	
.LABEL $label$4
	$4 = (*($0 + [4]) - $5)
	$6 = ( ($1 + $4) ? $2 : ((uint_32)$3 > (uint_32)$4) )
	$7 = ($6 - $1)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memmove($5, $1, $7)
	
.LABEL $label$7
	$1 = ($0 + [4])
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$8 }
	$0 = ($2 - $6)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy(*($1), $6, $0)
	$0 = (*($1) + $0)
	goto $label$3 
	
.LABEL $label$8
	$0 = ($5 + $7)
	
.LABEL $label$3
	*($1) = $0
	
.LABEL $label$2
	return (unreachable)
	
.LABEL $label$1
	CALL $727($0)
}

int_32 .FUNC $641 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [40])
	$3 = *($0 + [4])
	$0 = CALL $156($0, ($1 + [16]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [48])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [56]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$1 = CALL $522($0, ($1 + [64]))
	$global$0 = ($2 + [16])
	return $1
}

int_32 .FUNC $646 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$2 = ($1 + [20])
	$1 = *($0 + [4])
	$0 = CALL $542($0, ($1 + [8]))
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$1 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($1, $2, [1])
	*(($1 = ($0 + [4]))) = (*($1) + [1])
	return $0
}

void .FUNC $557 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [48]) = ($4 << [1])
	$5 = (($3 + [48]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [48]) = ($6 | [1])
	*($3 + [56]) = $5
	*($3 + [52]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	$7 = *(($2 + [24]))
	*((($3 + [64]) + [24])) = $7
	$8 = *(($2 + [16]))
	*((($3 + [64]) + [16])) = $8
	$9 = *(($2 + [8]))
	$10 = *($2)
	*(($3 + [16])) = $8
	*(($3 + [24])) = $7
	*($3 + [72]) = $9
	*($3) = $10
	*($3 + [64]) = $10
	*($3 + [8]) = $9
	CALL $545(($3 + [32]), $3)
	$4 = *($3 + [32])
	$2 = ($4 & [1])
	$4 = CALL $716(($3 + [48]), ( *($3 + [40]) ? (($3 + [32]) | [1]) : $2 ), ( *($3 + [36]) ? uint_32($4 >> [1]) : $2 ))
	$9 = *($4)
	*($4) = (int_64)0
	*($0) = $9
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*((($3 + [32]) + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [56]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [48]))
}

void .FUNC $647 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $650 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $587(($1 + [8]), *($4 + [8]), *(($4 + [12])))
	
.LABEL $label$1
	*($1 + [20]) = *($4 + [20])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$4 = [44]
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$4 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $4)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 + [-36])
	
.LABEL $label$3
	$6 = ($4 + [1])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL $746($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $6)
	CALL $646($3, $1)
	*($1 + [28]) = CALL db_store_i64(*($5 + [8]), (int_64)8800535352911593472, *(*($0 + [8])), (int_64)8800535352911593472, $4, $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL $749($4)
	
.LABEL $label$7
	if ( ((uint_64)*($5 + [16]) > (uint_64)(int_64)8800535352911593472) ){ goto $label$8 }
	*(($5 + [16])) = (int_64)8800535352911593473
	
.LABEL $label$8
	$global$0 = ($3 + [16])
}

void .FUNC $644 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $645 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $587(($1 + [8]), *($4 + [8]), *(($4 + [12])))
	
.LABEL $label$1
	*($1 + [20]) = *($4 + [20])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$4 = [44]
	
.LOOP $label$2:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$4 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $4)
	goto $label$3 
	
.LABEL $label$4
	$4 = ($4 + [-36])
	
.LABEL $label$3
	$6 = ($4 + [1])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL $746($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($3 + [4]) = $4
	*($3) = $4
	*($3 + [8]) = ($4 + $6)
	CALL $646($3, $1)
	*($1 + [28]) = CALL db_store_i64(*($5 + [8]), (int_64)8800273824806109184, *(*($0 + [8])), (int_64)8800273824806109184, $4, $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL $749($4)
	
.LABEL $label$7
	if ( ((uint_64)*($5 + [16]) > (uint_64)(int_64)8800273824806109184) ){ goto $label$8 }
	*(($5 + [16])) = (int_64)8800273824806109185
	
.LABEL $label$8
	$global$0 = ($3 + [16])
}

int_32 .FUNC $639 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [40])
	$3 = *($0 + [4])
	$0 = CALL $156($0, ($1 + [16]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [48])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [56]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$5 = ($1 + [64])
	$4 = *($3)
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [1])
	$4 = (*($3) + [1])
	*($3) = $4
	$1 = ($1 + [65])
	if ( ((int_32)(*($6) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $1, [1])
	*(($1 = ($0 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $619 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $156(*($1), ($0 + [8]))
	$3 = ($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [40]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	CALL $522(*($1), ($0 + [48]))
	*($2) = $0
	CALL $620($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $618 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$1 = (*($2) + [1])
	*(($2 = *($1))) = $1
	$4 = *($0 + [64])
	$0 = *($0)
	$3 = *(($0 + [68]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$1 = ($1 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	$1 = ( $1 ? ($5 + $1) : ((int_32)$4 == (int_32)$3) )
	*($2) = $1
	$4 = *($0 + [76])
	$3 = *(($0 + [80]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$2:
	$1 = ($1 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	$1 = ( $1 ? ($5 + $1) : ((int_32)$4 == (int_32)$3) )
	*($2) = $1
	$4 = *($0 + [88])
	$3 = *(($0 + [92]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$3:
	$1 = ($1 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$1 = ( $1 ? ($5 + $1) : ((int_32)$4 == (int_32)$3) )
	*($2) = $1
	$4 = *($0 + [100])
	$3 = *(($0 + [104]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [1]))
	
.LOOP $label$4:
	$1 = ($1 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	$1 = (($5 & [-2]) + $1)
	
.LABEL $label$5
	*($2) = $1
	$3 = *($0 + [112])
	$6 = (CASTING uint_64)(uint_32 ( *(($0 + [116])) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	
.LOOP $label$6:
	$1 = ($1 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$6 }
	*($2) = $1
	$0 = *(($0 + [112]))
	$0 = ( *(($0 + [116])) ? uint_32($0 >> [1]) : ($0 & [1]) )
	if ( ($0 == 0) ){ goto $label$7 }
	$1 = ($0 + $1)
	*($2) = $1
	
.LABEL $label$7
	*($2) = ($1 + [33])
}

void .FUNC $638 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $723(($3 + [16]), *($1))
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$1 = CALL $743($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($3) = ($1 << [1])
	$4 = ($3 | [1])
	$5 = $4
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($3) = ($4 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $1
	$4 = ($3 | [1])
	
.LABEL $label$3
	CALL memcpy($5, $2, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	$1 = *($3)
	$5 = ($1 & [1])
	$1 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $4 : $5 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$6 = *($1)
	*($1) = (int_64)0
	*($0) = $6
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708($3)
}

void .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	CALL $168(*($1), ($4 + [8]))
	CALL $306(*($1), ($4 + [32]))
	$3 = ($4 + [48])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($2 + [8]) = $4
	CALL $529(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $349 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800535341778862080, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $441($1, $5)
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $348 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = *($2)
	$4 = [0]
	$5 = *($1)
	$5 = CALL db_idx64_lowerbound(*($5), *($5 + [8]), (int_64)8800535341778862080, ($3 + [8]), ($3 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	CALL $349($3, *($1), *($3 + [16]))
	*((($4 = *($3 + [4])) + [40])) = $5
	
.LABEL $label$1
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = (int_64)0
	$7 = *(($4 + [16]))
	$8 = *($2)
	$10 = *($4 + [8])
	$9 = *(($4 + [24]))
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$6 }
	$9 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($2 = CALL _Znwj([24])) + [8]) = $7
	*($2) = $10
	*($2 + [16]) = $9
	CALL sha256($2, [24], ($3 + [16]))
	$6 = *($3 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL _ZdlPv($2)
	
.LABEL $label$5
	*($0) = $1
	if ( ((int_64)$8 != (int_64)$6) ){ goto $label$3 }
	*(($0 + [4])) = $4
	goto $label$2 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
	goto $label$2 
	
.LABEL $label$3
	*(($0 + [4])) = [0]
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $611 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [49])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$0 = *($0)
	CALL $479(*($1), ($0 + [52]))
	$3 = ($0 + [64])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [72]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = ($0 + [80])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $1) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $5, [8])
	$1 = (*($1) + [8])
	*(($1 = ($4 + [4]))) = $1
	*($2 + [8]) = *(($0 + [88]))
	if ( ((int_32)(*(($4 + [8])) - $1) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$1 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($1, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $610 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $720($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $613 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = [8]
	$6 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $551(($1 + [8]), *($4 + [8]), *(($4 + [12])))
	CALL $551(($1 + [20]), *($4 + [20]), *(($4 + [24])))
	
.LABEL $label$1
	*($1 + [32]) = *($4 + [32])
	$7 = *($1 + [8])
	$4 = *(($1 + [12]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	$5 = (($8 & [-8]) + $5)
	
.LABEL $label$3
	$7 = *($1 + [20])
	$4 = *(($1 + [24]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$4:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$5 = (($8 & [-8]) + $5)
	
.LABEL $label$5
	$4 = ($5 + [8])
	if ( ($4 <= [513]) ){ goto $label$7 }
	$5 = CALL $746($4)
	goto $label$6 
	
.LABEL $label$7
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$6
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $4)
	CALL $616($3, $1)
	*($1 + [44]) = CALL db_store_i64(*($6 + [8]), (int_64)-4293732427722915840, *(*($0 + [8])), (int_64)-4293732427722915840, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$8 }
	CALL $749($5)
	
.LABEL $label$8
	if ( ((uint_64)*($6 + [16]) > (uint_64)(int_64)-4293732427722915840) ){ goto $label$9 }
	*(($6 + [16])) = (int_64)-4293732427722915839
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

int_32 .FUNC $612 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $169(CALL $306($0, ($1 + [48])), ($1 + [64]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [40])
	$2 = *($0 + [4])
	$0 = CALL $168($0, ($1 + [16]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	return *(($2 = ($0 + [4]))) = (*($2) + [8])
}

int_32 .FUNC $615 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$2 = ($1 + [32])
	$1 = *($0 + [4])
	$0 = CALL $145(CALL $145($0, ($1 + [8])), ($1 + [20]))
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$1 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

void .FUNC $614 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [20])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $617 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = [8]
	$6 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $551(($1 + [8]), *($4 + [8]), *(($4 + [12])))
	CALL $551(($1 + [20]), *($4 + [20]), *(($4 + [24])))
	
.LABEL $label$1
	*($1 + [32]) = *($4 + [32])
	$7 = *($1 + [8])
	$4 = *(($1 + [12]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	$5 = (($8 & [-8]) + $5)
	
.LABEL $label$3
	$7 = *($1 + [20])
	$4 = *(($1 + [24]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$4:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$5 = (($8 & [-8]) + $5)
	
.LABEL $label$5
	$4 = ($5 + [8])
	if ( ($4 <= [513]) ){ goto $label$7 }
	$5 = CALL $746($4)
	goto $label$6 
	
.LABEL $label$7
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$6
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $4)
	CALL $616($3, $1)
	*($1 + [44]) = CALL db_store_i64(*($6 + [8]), (int_64)-4293732427722915840, *(*($0 + [8])), (int_64)-4293732427722915840, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$8 }
	CALL $749($5)
	
.LABEL $label$8
	if ( ((uint_64)*($6 + [16]) > (uint_64)(int_64)-4293732427722915840) ){ goto $label$9 }
	*(($6 + [16])) = (int_64)-4293732427722915839
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

int_32 .FUNC $616 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$2 = ($1 + [32])
	$1 = *($0 + [4])
	$0 = CALL $553(CALL $553($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$1 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($1, $2, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

void .FUNC $219 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [96])
	$global$0 = $3
	if ( ((int_64)*($1 + [16]) != (int_64)0) ){ goto $label$1 }
	CALL eosio_assert([0], [18638])
	
.LABEL $label$1
	CALL $308($3, $1)
	*($3 + [56]) = [8414]
	*($3 + [60]) = CALL $743([8414])
	*($3 + [16]) = *($3 + [56])
	$4 = CALL $10(($3 + [64]), ($3 + [16]))
	if ( ((int_64)*($1 + [8]) != (int_64)*($4)) ){ goto $label$2 }
	$4 = ($1 + [16])
	if ( CALL is_account(*($4)) ){ goto $label$2 }
	*($3 + [56]) = *($4)
	CALL $314(($3 + [64]), [18699], ($3 + [56]), [18676])
	if ( (*($3 + [64]) & [1]) ){ goto $label$4 }
	$4 = (($3 + [64]) | [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($3 + [72])
	CALL _ZdlPv($4)
	
.LABEL $label$3
	CALL eosio_assert([0], $4)
	
.LABEL $label$2
	CALL $222(($3 + [56]), $0, $2)
	$5 = *($3 + [56])
	*($3 + [8]) = $5
	*($3 + [40]) = $5
	CALL $309(($3 + [48]), $0, $1, ($3 + [8]), [1])
	$1 = *($3 + [52])
	if ( $1 ){ goto $label$5 }
	CALL eosio_assert([0], [18724])
	$1 = *($3 + [52])
	
.LABEL $label$5
	$5 = (int_64)0
	$6 = *(($1 + [32]))
	$8 = *($1 + [24])
	$7 = *(($1 + [40]))
	if ( ((int_64)((int_64)$7 | (int_64)$8) != (int_64)0) ){ goto $label$7 }
	$7 = (int_64)0
	if ( (int_64)($6 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	*(($1 = CALL _Znwj([24])) + [8]) = $6
	*($1) = $8
	*($1 + [16]) = $7
	CALL sha256($1, [24], ($3 + [64]))
	$5 = *($3 + [64])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL _ZdlPv($1)
	
.LABEL $label$6
	if ( ((int_64)$5 == (int_64)$2) ){ goto $label$8 }
	*($3 + [24]) = [8617]
	$1 = *($3 + [52])
	*($3 + [28]) = CALL $743([8617])
	*($3) = *($3 + [24])
	$4 = CALL $10(($3 + [32]), $3)
	*($3 + [68]) = $0
	*($3 + [64]) = ($3 + [56])
	$2 = *($4)
	if ( $1 ){ goto $label$9 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$9
	CALL $315($0, $1, $2, ($3 + [64]))
	
.LABEL $label$8
	$global$0 = ($3 + [96])
}

void .FUNC $218 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	$3 = ($global$0 - [80])
	$global$0 = $3
	if ( ((int_64)*($1 + [16]) != (int_64)0) ){ goto $label$1 }
	CALL eosio_assert([0], [18638])
	
.LABEL $label$1
	CALL $308($3, $1)
	$4 = *($1 + [8])
	$6 = *($1)
	$5 = *(($1 + [16]))
	if ( ((int_64)((int_64)$5 | (int_64)$6) != (int_64)0) ){ goto $label$3 }
	$5 = (int_64)0
	if ( (int_64)($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*(($7 = CALL _Znwj([24])) + [8]) = $4
	*($7) = $6
	*($7 + [16]) = $5
	CALL sha256($7, [24], ($3 + [32]))
	$5 = *($3 + [32])
	if ( ($7 == 0) ){ goto $label$2 }
	CALL _ZdlPv($7)
	
.LABEL $label$2
	CALL $222(($3 + [32]), $0, $5)
	if ( *($3 + [36]) ){ goto $label$4 }
	*($3 + [72]) = [8414]
	*($3 + [76]) = CALL $743([8414])
	*($3 + [16]) = *($3 + [72])
	$7 = CALL $10(($3 + [32]), ($3 + [16]))
	if ( ((int_64)*($1 + [8]) != (int_64)*($7)) ){ goto $label$5 }
	$7 = ($1 + [16])
	if ( CALL is_account(*($7)) ){ goto $label$5 }
	*($3 + [72]) = *($7)
	CALL $313(($3 + [32]), [18662], ($3 + [72]), [18676])
	if ( (*($3 + [32]) & [1]) ){ goto $label$7 }
	$7 = (($3 + [32]) | [1])
	goto $label$6 
	
.LABEL $label$7
	$7 = *($3 + [40])
	CALL _ZdlPv($7)
	
.LABEL $label$6
	CALL eosio_assert([0], $7)
	
.LABEL $label$5
	CALL $222(($3 + [24]), $0, $2)
	*($3 + [8]) = *($3 + [24])
	CALL $309(($3 + [32]), $0, $1, ($3 + [8]), [0])
	
.LABEL $label$4
	$global$0 = ($3 + [80])
}

int_32 .FUNC $505 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [36])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [40])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$6
	$4 = *($3 + [20])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($3 + [24])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$7
	$4 = *($3 + [8])
	if ( ($4 == 0) ){ goto $label$8 }
	*(($3 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$8
	CALL _ZdlPv($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $504 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [4])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = ($2 + [-24])
	$3 = *($2)
	*($2) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	$4 = *($3 + [72])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($3 + [76])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$6
	$4 = *($3 + [60])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($3 + [64])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$7
	$4 = *($3 + [48])
	if ( ($4 == 0) ){ goto $label$8 }
	*(($3 + [52])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$8
	$4 = *($3 + [36])
	if ( ($4 == 0) ){ goto $label$9 }
	*(($3 + [40])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$9
	$4 = *($3 + [24])
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [28])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	CALL _ZdlPv($3)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$4 }
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*(($0 + [4])) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	return $0
}

void .FUNC $507 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([80])) + [56]) = [0]
	*($3 + [48 align=4]) = (int_64)0
	*($3) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [64]) = $1
	CALL $697(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-7297072577464238080
	$5 = *($3 + [68])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-7297072577464238080
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $549(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [48])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [52])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $506 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = *($1 + [72])
	$3 = *(($1 + [76]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 $5)
	$7 = [64]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	$7 = ( $7 ? ($5 + $7) : ((int_32)$4 == (int_32)$3) )
	$4 = *($1 + [84])
	$3 = *(($1 + [88]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$2:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$3 }
	$7 = (($5 & [-16]) + $7)
	
.LABEL $label$3
	if ( ($7 == 0) ){ goto $label$5 }
	CALL $11($0, $7)
	$3 = *(($0 + [4]))
	$7 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$3 = [0]
	$7 = [0]
	
.LABEL $label$4
	*($2 + [4]) = $7
	*($2) = $7
	*($2 + [8]) = $3
	*($2 + [16]) = $2
	*($2 + [24]) = $1
	CALL $521(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [32])
}

void .FUNC $501 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$4 }
	$6 = ($1 + [8])
	CALL $596($6, *($3 + [8]), *(($3 + [12])))
	CALL $596(($1 + [20]), *($3 + [20]), *(($3 + [24])))
	*($1 + [32]) = *($3 + [32])
	CALL $551(($1 + [36]), *($3 + [36]), *(($3 + [40])))
	goto $label$3 
	
.LABEL $label$4
	*($1 + [32]) = *($3 + [32])
	$6 = ($1 + [8])
	
.LABEL $label$3
	$6 = *($6)
	$7 = *(($1 + [12]))
	$8 = ($7 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	$3 = [8]
	
.LOOP $label$5:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$6
	$7 = *($1 + [20])
	$6 = *(($1 + [24]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$7:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$8
	$3 = ($3 + [1])
	$7 = *($1 + [36])
	$6 = *(($1 + [40]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$10 }
	$3 = (($8 & [-8]) + $3)
	
.LABEL $label$10
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $746($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $680($5, $1)
	CALL db_update_i64(*($1 + [52]), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$13 }
	CALL $749($4)
	
.LABEL $label$13
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4293730779636826112) ){ goto $label$14 }
	*(($0 + [16])) = (int_64)-4293730779636826111
	
.LABEL $label$14
	$global$0 = ($5 + [16])
}

void .FUNC $500 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$5 = CALL _Znwj([56])
	CALL $115($5)
	*($5) = (int_64)1500
	$2 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$4:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$3 }
	$6 = (uint_64)$2 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$2 & (int_64)65280) == (int_64)0) ){ goto $label$6 }
	$2 = $6
	$7 = $3
	goto $label$5 
	
.LABEL $label$6
	$2 = $6
	
.LOOP $label$7:
	if ( ((int_64)((int_64)$2 & (int_64)65280) != (int_64)0) ){ goto $label$3 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8)
	$8 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $8 ){ goto $label$7 }
	
.LABEL $label$5
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	CALL eosio_assert([0], [22633])
	
.LABEL $label$2
	*(($3 = *($5 + [20])) + [8]) = (int_64)1397703940
	*($3) = (int_64)500000
	*($5 + [40]) = $1
	*($5 + [33 align=1]) = [24578]
	CALL $677(($4 + [16]), $5)
	*($4 + [32]) = $5
	*($4 + [16]) = (int_64)5445039531761205248
	$8 = *($5 + [44])
	*($4 + [12]) = $8
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$9 }
	*($3 + [8]) = (int_64)5445039531761205248
	*($3 + [16]) = $8
	*($4 + [32]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $593(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$8
	*($0 + [4]) = $5
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$10 }
	$8 = *($3 + [20])
	if ( ($8 == 0) ){ goto $label$11 }
	*(($3 + [24])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$11
	$8 = *($3 + [8])
	if ( ($8 == 0) ){ goto $label$12 }
	*(($3 + [12])) = $8
	CALL _ZdlPv($8)
	
.LABEL $label$12
	CALL _ZdlPv($3)
	
.LABEL $label$10
	$global$0 = ($4 + [48])
}

void .FUNC $468 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($0)
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$1 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$1
	$6 = ($6 + [160])
	CALL $142(($3 + [24]), $6)
	$8 = ((int_64)*($3 + [40]) + (int_64)1)
	*($3 + [40]) = $8
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [16])
	CALL $113($6, ($3 + [24]), *(CALL $10(($3 + [88]), ($3 + [8]))))
	$6 = *($3 + [72])
	if ( ($6 == 0) ){ goto $label$2 }
	*(($3 + [76])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$2
	*($1) = $8
	$8 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$8 = $9
	$10 = $6
	goto $label$6 
	
.LABEL $label$7
	$8 = $9
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$8 }
	
.LABEL $label$6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [22633])
	
.LABEL $label$3
	*($1 + [48]) = (int_64)0
	*(($1 + [56])) = (int_64)1397703940
	$6 = *($4)
	*($1 + [16]) = *($6)
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [40]) = *(*($4 + [8]))
	*($1 + [64]) = *(*($4 + [12]))
	*($1 + [65]) = *(*($4 + [16]))
	$7 = $2
	$6 = ($7 + [-80])
	$global$0 = $6
	*($3 + [28]) = $6
	*($3 + [24]) = $6
	*($3 + [32]) = ($7 + [-14])
	CALL $639(($3 + [24]), $1)
	$8 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($5 + [8]), (int_64)-8173735248220127232, *(*($0 + [8])), $8, $6, [66])
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$9 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$8 = *(($5 + [8]))
	$9 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [88]) = *(($1 + [8]))
	*($1 + [76]) = CALL db_idx64_store($8, (int_64)-8173735248220127232, $9, $11, ($3 + [88]))
	$global$0 = ($3 + [96])
}

void .FUNC $469 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $466 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $467 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	$4 = ($global$0 - [64])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	*($5 + [8]) = *($1 + [24])
	$6 = (int_64)0
	$7 = *($1 + [8])
	$9 = *($1)
	$8 = *($1 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($10 = CALL _Znwj([24])) + [8]) = $7
	*($10) = $9
	*($10 + [16]) = $8
	CALL sha256($10, [24], ($5 + [32]))
	$6 = *($5 + [32])
	if ( ($10 == 0) ){ goto $label$3 }
	CALL _ZdlPv($10)
	
.LABEL $label$3
	$10 = *($3)
	*(($11 = (($5 + [32]) + [21]))) = *(($10 + [21]))
	*(($3 = (($5 + [32]) + [16]))) = *(($10 + [16]))
	$7 = *(($10 + [8]))
	*((($5 + [32]) + [8])) = $7
	$8 = *($10)
	*($1) = $8
	*(($10 = ($1 + [8]))) = $7
	*(($12 = ($1 + [16]))) = *($3)
	*(($1 + [21])) = *($11)
	*($5 + [32]) = $8
	$7 = (int_64)0
	$8 = *($10)
	$13 = *($1)
	$9 = *($12)
	if ( ((int_64)((int_64)$9 | (int_64)$13) != (int_64)0) ){ goto $label$6 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($10 = CALL _Znwj([24])) + [8]) = $8
	*($10) = $13
	*($10 + [16]) = $9
	CALL sha256($10, [24], ($5 + [32]))
	$7 = *($5 + [32])
	if ( ($10 == 0) ){ goto $label$5 }
	CALL _ZdlPv($10)
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$7 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$7
	$4 = $4
	$10 = ($4 + [-32])
	$global$0 = $10
	*($5 + [36]) = $10
	*($5 + [32]) = $10
	*($5 + [40]) = ($4 + [-3])
	CALL $465(($5 + [32]), $1)
	CALL db_update_i64(*($1 + [36]), $2, $10, [29])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	*($5 + [24]) = *(($1 + [24]))
	if ( (CALL $742(($5 + [8]), ($5 + [24]), [8]) == 0) ){ goto $label$9 }
	$10 = ($1 + [40])
	$1 = *($10)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$10 }
	$1 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8173735188943732736, ($5 + [16]), $6)
	*($10) = $1
	
.LABEL $label$10
	CALL db_idx64_update($1, $2, ($5 + [24]))
	
.LABEL $label$9
	$global$0 = ($5 + [64])
}

void .FUNC $464 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $638($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

int_32 .FUNC $465 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $156($0, $1)
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $2, [4])
	$2 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $2
	$1 = ($1 + [28])
	if ( ((int_32)(*(($0 + [8])) - $2) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$2 = *($3)
	
.LABEL $label$2
	CALL memcpy($2, $1, [1])
	*($3) = (*($3) + [1])
	return $0
}

void .FUNC $462 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $463 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [32])
	$global$0 = $3
	$5 = *(($1 + [28]))
	$4 = *($1 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$6 = $5
	
.LOOP $label$3:
	$6 = ($6 + [-24])
	$7 = *($6)
	$8 = *($7 + [8])
	$10 = *($7)
	$9 = *($7 + [16])
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$5 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($7 = CALL _Znwj([24])) + [8]) = $8
	*($7) = $10
	*($7 + [16]) = $9
	CALL sha256($7, [24], $3)
	$9 = *($3)
	if ( ($7 == 0) ){ goto $label$4 }
	CALL _ZdlPv($7)
	
.LABEL $label$4
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$1 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = $4
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)*(($1 + [24]))) ){ goto $label$7 }
	$7 = *(($5 + [-24]))
	if ( ((int_32)*($7 + [32]) == (int_32)$1) ){ goto $label$8 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$8
	*($0 + [4]) = $7
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-8173735188943732736, $2)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL $470($1, $7)
	if ( ((int_32)*($7 + [32]) == (int_32)$1) ){ goto $label$10 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$10
	*($0 + [4]) = $7
	goto $label$6 
	
.LABEL $label$9
	*($0 + [4]) = [0]
	
.LABEL $label$6
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $460 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [80])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [84])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($1 + [68])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [72])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $461 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($0)
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$1 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$1
	$6 = ($6 + [160])
	CALL $142(($3 + [24]), $6)
	$8 = ((int_64)*($3 + [40]) + (int_64)1)
	*($3 + [40]) = $8
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [16])
	CALL $113($6, ($3 + [24]), *(CALL $10(($3 + [88]), ($3 + [8]))))
	$6 = *($3 + [72])
	if ( ($6 == 0) ){ goto $label$2 }
	*(($3 + [76])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$2
	*($1) = $8
	*($1 + [64]) = *(*($4))
	$6 = *($4 + [4])
	*(($1 + [56])) = *(($6 + [8]))
	*($1 + [48]) = *($6)
	$6 = *($4 + [8])
	*($1 + [16]) = *($6)
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [8]) = *(*($4 + [12]))
	*($1 + [40]) = *(*($4 + [16]))
	$2 = $2
	$4 = ($2 + [-80])
	$global$0 = $4
	*($3 + [28]) = $4
	*($3 + [24]) = $4
	*($3 + [32]) = ($2 + [-15])
	CALL $636(($3 + [24]), $1)
	$8 = *($1)
	*($1 + [72]) = CALL db_store_i64(*($5 + [8]), (int_64)5445031321149636608, *(*($0 + [8])), $8, $4, [65])
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$3 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$8 = *(($5 + [8]))
	$9 = *(*(($0 + [8])))
	$10 = *($1)
	*($3 + [88]) = *(($1 + [8]))
	*($1 + [76]) = CALL db_idx64_store($8, (int_64)5445031321149636608, $9, $10, ($3 + [88]))
	$global$0 = ($3 + [96])
}

void .FUNC $725 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $668 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $669 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL $723(($4 + [16]), *($1))
	CALL $670($4, $2, $3)
	$2 = *($4)
	$3 = ($2 & [1])
	$2 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $3 ), ( *($4 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$1
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$2
	$global$0 = ($4 + [32])
}

void .FUNC $724 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $743($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($5 + [16]) & [-16])
	$5 = CALL _Znwj($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$1 = *($0)
	$5 = ($1 & [1])
	if ( $5 ){ goto $label$9 }
	$3 = [10]
	$1 = uint_32($1 >> [1])
	if ( (([10] - $1) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$1 = *(($0 + [4]))
	$3 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($3 - $1) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $711($0, $3, (($1 + $4) - $3), $1, $1, [0], $4, $2)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$3 = ( *(($0 + [8])) ? ($0 + [1]) : $5 )
	CALL memcpy(($3 + $1), $2, $4)
	$1 = ($1 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $1
	*(($3 + $1)) = [0]
	(unreachable)
}

int_32 .FUNC $664 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30160])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)8800535341778862080)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $441(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $665 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_64 .FUNC $666 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [16])
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$3 }
	$2 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)8800535342315732992, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $443($0, $3)
	*($1 + [12]) = [0]
	*($1 + [8]) = $0
	$2 = *(*(CALL $667(($1 + [8])) + [4]))
	$2 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	*(($0 + [16])) = $2
	
.LABEL $label$3
	if ( (uint_64)($2 <= (int_64)-2) ){ goto $label$1 }
	CALL eosio_assert([0], [30054])
	$2 = *(($0 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($0 + [16])) = (int_64)0
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_32 .FUNC $667 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30160])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)8800535342315732992)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $443(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

int_64 .FUNC $660 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [16])
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$3 }
	$2 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)8800195549769760768, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $442($0, $3)
	*($1 + [12]) = [0]
	*($1 + [8]) = $0
	$2 = *(*(CALL $661(($1 + [8])) + [4]))
	$2 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	*(($0 + [16])) = $2
	
.LABEL $label$3
	if ( (uint_64)($2 <= (int_64)-2) ){ goto $label$1 }
	CALL eosio_assert([0], [30054])
	$2 = *(($0 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($0 + [16])) = (int_64)0
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

int_32 .FUNC $661 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$2 }
	$2 = CALL db_previous_i64(*($2 + [36]), ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30160])
	goto $label$1 
	
.LABEL $label$2
	$2 = *($0)
	$2 = CALL db_end_i64(*($2), *($2 + [8]), (int_64)8800195549769760768)
	if ( ((int_32)$2 != (int_32)[-1]) ){ goto $label$3 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$3
	$2 = CALL db_previous_i64($2, ($1 + [8]))
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	CALL eosio_assert([0], [30106])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $442(*($0), $2)
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $662 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

int_64 .FUNC $663 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [16])
	if ( ((int_64)$2 != (int_64)-1) ){ goto $label$3 }
	$2 = (int_64)0
	$3 = CALL db_lowerbound_i64(*($0), *($0 + [8]), (int_64)8800535341778862080, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	CALL $441($0, $3)
	*($1 + [12]) = [0]
	*($1 + [8]) = $0
	$2 = *(*(CALL $664(($1 + [8])) + [4]))
	$2 = ( (int_64)-2 ? ((int_64)$2 + (int_64)1) : ((uint_64)$2 > (uint_64)(int_64)-3) )
	*(($0 + [16])) = $2
	
.LABEL $label$3
	if ( (uint_64)($2 <= (int_64)-2) ){ goto $label$1 }
	CALL eosio_assert([0], [30054])
	$2 = *(($0 + [16]))
	goto $label$1 
	
.LABEL $label$2
	*(($0 + [16])) = (int_64)0
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $726 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $721 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $713(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $734(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8411], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $713(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $713(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $720 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $713(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $734(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8400], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $713(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $713(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$2 = *($0)
	$3 = ((int_32)(*($0 + [4]) - $2) / (int_32)[40])
	$4 = ($3 + [1])
	if ( ((uint_32)$4 >= (uint_32)[107374183]) ){ goto $label$2 }
	$5 = [107374182]
	$2 = ((int_32)(*($0 + [8]) - $2) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$4 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = CALL _Znwj(((int_32)$5 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1 + [16 align=4])
	*($1 + [16 align=4]) = (int_64)0
	$4 = ($1 + [24])
	$7 = *($4)
	*($4) = (int_64)0
	$4 = ($1 + [32])
	$8 = *($4)
	*($4) = (int_64)0
	*(($9 = ($2 + ((int_32)$3 * (int_32)[40])))) = *($1)
	*($9 + [16 align=4]) = $6
	*(($9 + [8])) = *(($1 + [8]))
	*(($9 + [24])) = $7
	*(($9 + [32])) = $8
	$10 = ($2 + ((int_32)$5 * (int_32)[40]))
	$11 = ($9 + [40])
	$1 = *($0)
	$12 = *(($0 + [4]))
	if ( ((int_32)$12 == (int_32)$1) ){ goto $label$6 }
	$13 = ($1 - $12)
	$2 = [0]
	
.LOOP $label$7:
	$5 = ($12 + $2)
	*((($1 = ($9 + $2)) + [-32])) = *(($5 + [-32]))
	*(($1 + [-40])) = *(($5 + [-40]))
	*(($3 = ($1 + [-24]))) = (int_64)0
	*(($4 = ($1 + [-16]))) = [0]
	$14 = ($5 + [-24])
	*($3) = *($14)
	$3 = ($5 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($1 + [-12]))) = (int_64)0
	*(($1 = ($1 + [-4]))) = [0]
	$4 = ($5 + [-12])
	*($3) = *($4)
	*($14) = (int_64)0
	$5 = ($5 + [-4])
	*($1) = *($5)
	*($5) = [0]
	*($4) = (int_64)0
	$2 = ($2 + [-40])
	if ( ((int_32)$13 != (int_32)$2) ){ goto $label$7 }
	$9 = ($9 + $2)
	$1 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = $1
	
.LABEL $label$5
	*($0) = $9
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$8 }
	
.LOOP $label$9:
	$5 = *(($1 + [-12]))
	if ( ($5 == 0) ){ goto $label$10 }
	*(($1 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$10
	$5 = ($1 + [-40])
	$2 = *(($1 + [-24]))
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [-20])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$1 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($3 == 0) ){ goto $label$12 }
	CALL _ZdlPv($3)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	CALL $11($0, [40])
	$0 = *($0)
	$2 = (*($0 + [4]) - $0)
	if ( ((int_32)$2 > (int_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	
.LABEL $label$1
	CALL memcpy($0, $1, [32])
	$1 = ($1 + [32])
	$0 = ($0 + [32])
	if ( ((int_32)($2 + [-32]) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	
.LABEL $label$2
	CALL memcpy($0, $1, [8])
}

void .FUNC $262 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [144])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = *($3 + [4])
	$7 = *($1)
	$8 = *($3)
	$9 = CALL $15(*($8 + [8]))
	$10 = ((uint_32)((int_32)*($1 + [16]) * (int_32)[30]) / (uint_32)[100])
	$11 = *($8 + [8])
	$12 = *(($1 + [24]))
	$3 = *($1 + [20])
	if ( ((int_32)$3 == (int_32)$12) ){ goto $label$6 }
	
.LOOP $label$7:
	if ( ((int_64)*($3) == (int_64)$11) ){ goto $label$5 }
	$3 = ($3 + [48])
	if ( ((int_32)$12 != (int_32)$3) ){ goto $label$7 }
	
.LABEL $label$6
	*($5 + [96]) = $11
	*($5 + [104]) = $9
	$11 = *($8)
	CALL __multi3(($5 + [32]), $11, (int_64)$11 >> (int_64)63), (CASTING uint_64)(uint_32 ($10 & [255])), (int_64)0)
	CALL __multi3(($5 + [16]), *($5 + [32]), *((($5 + [32]) + [8])), *($6 + [16]), *(($6 + [24])))
	CALL __udivti3($5, *($5 + [16]), *((($5 + [16]) + [8])), (int_64)100, (int_64)0)
	*((($5 + [96]) + [24])) = *(($5 + [8]))
	*($5 + [128]) = [1000000000]
	*($5 + [112]) = *($5)
	if ( ((int_32)$12 == (int_32)*(($1 + [28]))) ){ goto $label$4 }
	*($12) = *($5 + [96])
	*(($12 + [8])) = *($5 + [104])
	*(($12 + [40])) = *((($5 + [96]) + [40]))
	*(($12 + [32])) = *((($5 + [96]) + [32]))
	*(($12 + [24])) = *((($5 + [96]) + [24]))
	*(($12 + [16])) = *((($5 + [96]) + [16]))
	*(($3 = ($1 + [24]))) = (*($3) + [48])
	goto $label$3 
	
.LABEL $label$5
	$11 = *($8)
	CALL __multi3(($5 + [80]), $11, (int_64)$11 >> (int_64)63), (CASTING uint_64)(uint_32 ($10 & [255])), (int_64)0)
	CALL __multi3(($5 + [64]), *($5 + [80]), *((($5 + [80]) + [8])), *($6 + [16]), *(($6 + [24])))
	CALL __udivti3(($5 + [48]), *($5 + [64]), *((($5 + [64]) + [8])), (int_64)100, (int_64)0)
	$9 = *($5 + [48])
	$11 = ((int_64)$9 + (int_64)*($12))
	*(($12 = ($3 + [16]))) = $11
	$9 = ((int_64)((int_64)*((($5 + [48]) + [8])) + (int_64)*($3)) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($11 <= $9)))
	*(($3 = ($3 + [24]))) = $9
	if ( ( (uint_64)($11 <= (int_64)-999999999) ? (uint_64)($9 <= (int_64)249999999) : ((int_64)$9 == (int_64)249999999) ) ){ goto $label$3 }
	CALL eosio_assert([0], [8307])
	goto $label$3 
	
.LABEL $label$4
	CALL $6(($1 + [20]), ($5 + [96]))
	
.LABEL $label$3
	if ( ((int_64)$7 == (int_64)*($1)) ){ goto $label$8 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$8
	$6 = *(($1 + [20]))
	$12 = *(($1 + [24]))
	$8 = ($12 - $6)
	$11 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$3 = [54]
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$6 == (int_32)$12) ){ goto $label$11 }
	$3 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	goto $label$10 
	
.LABEL $label$11
	$3 = ($3 + [-36])
	
.LABEL $label$10
	$12 = ($3 + [1])
	if ( ($12 <= [513]) ){ goto $label$13 }
	$3 = CALL $746($12)
	goto $label$12 
	
.LABEL $label$13
	$3 = ($4 - (($12 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$12
	*($5 + [100]) = $3
	*($5 + [96]) = $3
	*($5 + [104]) = ($3 + $12)
	CALL $541(($5 + [96]), $1)
	CALL db_update_i64(*($1 + [40]), $2, $3, $12)
	if ( ($12 <= [513]) ){ goto $label$14 }
	CALL $749($3)
	
.LABEL $label$14
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$15 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$15
	$global$0 = ($5 + [144])
}

void .FUNC $263 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*(($1 + [36])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = *($1)
	CALL $7($5, ($1 + [20]), [100])
	$3 = *($3)
	$7 = *($3)
	if ( ($7 == 0) ){ goto $label$4 }
	*($3 + [4]) = $7
	CALL _ZdlPv($7)
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	$7 = ($3 + [8])
	goto $label$3 
	
.LABEL $label$4
	$7 = ($3 + [8])
	
.LABEL $label$3
	*($3) = *($5)
	*($7) = *($5 + [8])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$5 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$5
	$8 = *($1 + [20])
	$7 = *(($1 + [24]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[48]))
	$3 = [54]
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$8 }
	$3 = (((int_32)((uint_32)($9 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($3 + [-36])
	
.LABEL $label$7
	$7 = ($3 + [1])
	if ( ($7 <= [513]) ){ goto $label$10 }
	$3 = CALL $746($7)
	goto $label$9 
	
.LABEL $label$10
	$3 = ($4 - (($7 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$9
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $7)
	CALL $541($5, $1)
	CALL db_update_i64(*($1 + [40]), $2, $3, $7)
	if ( ($7 <= [513]) ){ goto $label$11 }
	CALL $749($3)
	
.LABEL $label$11
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [16])
}

void .FUNC $264 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4418111932367241216, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $274($1, $5)
	if ( ((int_32)*($5 + [48]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $265 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $544($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $266 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0)
	$5 = *($0 + [4])
	$6 = (*($5) + [160])
	$4 = $2
	CALL $142(($4 + [32]), $6)
	$7 = ((int_64)*($4 + [64]) + (int_64)1)
	*($4 + [64]) = $7
	*($4 + [16]) = [8617]
	*($4 + [20]) = CALL $743([8617])
	*($4 + [8]) = *($4 + [16])
	CALL $113($6, ($4 + [32]), *(CALL $10(($4 + [24]), ($4 + [8]))))
	$6 = *($4 + [80])
	if ( ($6 == 0) ){ goto $label$1 }
	*(($4 + [84])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$1
	*($1) = $7
	$6 = *($5 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [40])) = *(($6 + [24]))
	*(($1 + [32])) = *(($6 + [16]))
	*(($5 = ($1 + [24]))) = *(($6 + [8]))
	$2 = $2
	$6 = ($2 + [-48])
	$global$0 = $6
	CALL memcpy($6, $1, [8])
	CALL memcpy(($2 + [-40]), ($1 + [16]), [32])
	$7 = *($1)
	*($1 + [52]) = CALL db_store_i64(*($3 + [8]), (int_64)-4418111932367241216, *(*($0 + [8])), $7, $6, [40])
	if ( (uint_64)($7 <= *($3 + [16])) ){ goto $label$2 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	$7 = *(($3 + [8]))
	$8 = *(*(($0 + [8])))
	$9 = *($1)
	*($4 + [40]) = *($5)
	*($4 + [32]) = *($1 + [16])
	*($1 + [56]) = CALL db_idx128_store($7, (int_64)-4418111932367241216, $8, $9, ($4 + [32]))
	$global$0 = ($4 + [96])
}

void .FUNC $267 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $268 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $168(*($1), *($0))
	$2 = *($0)
	$3 = ($2 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $169(*($1), ($2 + [32]))
	$2 = ($2 + [44])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $183 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [192])
	$global$0 = $3
	$4 = ($0 + [240])
	$5 = (int_64)0
	$6 = *($1 + [8])
	$8 = *($1)
	$7 = *($1 + [16])
	if ( ((int_64)((int_64)$7 | (int_64)$8) != (int_64)0) ){ goto $label$2 }
	$7 = (int_64)0
	if ( (int_64)($6 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	*(($9 = CALL _Znwj([24])) + [8]) = $6
	*($9) = $8
	*($9 + [16]) = $7
	CALL sha256($9, [24], ($3 + [48]))
	$5 = *($3 + [48])
	if ( ($9 == 0) ){ goto $label$1 }
	CALL _ZdlPv($9)
	
.LABEL $label$1
	CALL $414(($3 + [144]), $4, $5)
	if ( *($3 + [148]) ){ goto $label$3 }
	CALL eosio_assert([0], [20932])
	
.LABEL $label$3
	$9 = *([0] + [8632])
	if ( $9 ){ goto $label$4 }
	$10 = CALL _Znwj([280])
	$9 = CALL $111($10)
	*([0] + [8632]) = $10
	
.LABEL $label$4
	CALL $139(($3 + [48]), $9, [10], $1)
	$5 = *($3 + [48])
	$9 = *($3 + [96])
	if ( ($9 == 0) ){ goto $label$5 }
	*(($3 + [100])) = $9
	CALL _ZdlPv($9)
	
.LABEL $label$5
	*($3 + [136]) = $5
	*($3 + [32]) = [8617]
	*($3 + [36]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [32])
	$9 = CALL $10(($3 + [40]), ($3 + [8]))
	*($3 + [48]) = $1
	*($3 + [56]) = $2
	*($3 + [52]) = ($3 + [136])
	*($3 + [60]) = ($3 + [144])
	*($3 + [184]) = *($9)
	$9 = ($0 + [280])
	if ( ((int_64)*($0 + [280]) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$6
	*($3 + [160]) = $9
	*($3 + [164]) = ($3 + [48])
	*($3 + [168]) = ($3 + [184])
	*(($1 = CALL _Znwj([96])) + [24]) = (int_64)0
	*($1 + [16]) = (int_64)0
	*($1 + [32]) = (int_64)0
	*($1 + [48]) = (int_64)0
	*($1 + [56]) = (int_64)0
	*($1 + [84]) = $9
	CALL $473(($3 + [160]), $1)
	*($3 + [176]) = $1
	$5 = *($1)
	*($3 + [160]) = $5
	$2 = *($1 + [88])
	*($3 + [156]) = $2
	$10 = ($0 + [308])
	$9 = *($10)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [312]))) ){ goto $label$8 }
	*($9 + [8]) = $5
	*($9 + [16]) = $2
	*($3 + [176]) = [0]
	*($9) = $1
	*($10) = ($9 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $474(($0 + [304]), ($3 + [176]), ($3 + [160]), ($3 + [156]))
	
.LABEL $label$7
	$1 = *($3 + [176])
	*($3 + [176]) = [0]
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$5 = *($3 + [144])
	$1 = *($3 + [148])
	if ( ((*(($1 + [28])) - *($1 + [24])) <= [2]) ){ goto $label$11 }
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3) = *($3 + [16])
	$6 = *(CALL $10(($3 + [24]), $3))
	$1 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $1) ){ goto $label$12 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$12
	CALL $475($4, $1, $6)
	goto $label$10 
	
.LABEL $label$11
	$1 = (CASTING uint_32)(uint_64 (uint_64)$5 >> (uint_64)(int_64)32)
	if ( $1) ){ goto $label$13 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$13
	$0 = CALL db_next_i64(*($1 + [88]), ($3 + [48]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$14 }
	CALL $424((CASTING uint_32)(uint_64 $5), $0)
	
.LABEL $label$14
	CALL $476($4, $1)
	
.LABEL $label$10
	$global$0 = ($3 + [192])
}

void .FUNC $182 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$5 = ($global$0 - [256])
	$global$0 = $5
	if ( (((*($4) + [-7]) & [255]) <= [3]) ){ goto $label$1 }
	CALL eosio_assert([0], [20880])
	
.LABEL $label$1
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$2 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$2
	*($5 + [184]) = [8617]
	*($5 + [188]) = CALL $743([8617])
	*($5 + [40]) = *($5 + [184])
	$7 = CALL has_auth(*(CALL $10(($5 + [192]), ($5 + [40]))))
	*($5 + [176]) = [20617]
	*($5 + [180]) = CALL $743([20617])
	*($5 + [32]) = *($5 + [176])
	CALL $10(($5 + [64]), ($5 + [32]))
	*($5 + [168]) = [20923]
	*($5 + [172]) = CALL $743([20923])
	*($5 + [24]) = *($5 + [168])
	CALL $10(($5 + [224]), ($5 + [24]))
	CALL $151(($5 + [200]), $6, $1, ( (int_64)-6030911325394173952 ? (int_64)-6030904538020446208 : $7 ), (int_64)0)
	$8 = *($5 + [208])
	*($5 + [160]) = $8
	$9 = ((int_64)*($5 + [200]) / (int_64)(CASTING uint_64)(uint_32 (*($3 + [4]) - *($3))))
	*($5 + [152]) = $9
	if ( (uint_64)(((int_64)$9 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$3 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$3
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$8 = $9
	$10 = $6
	goto $label$7 
	
.LABEL $label$8
	$8 = $9
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$9 }
	
.LABEL $label$7
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [22633])
	
.LABEL $label$4
	$6 = *($4)
	*((($5 + [8]) + [8])) = *((($5 + [152]) + [8]))
	*($5 + [8]) = *($5 + [152])
	CALL $364($0, ($5 + [8]), $3, $6)
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$10 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$10
	CALL $139(($5 + [64]), $6, *($4), $1)
	$8 = *($5 + [64])
	$6 = *($5 + [112])
	if ( ($6 == 0) ){ goto $label$11 }
	*(($5 + [116])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$11
	*($5 + [144]) = $8
	*($5 + [48]) = [8617]
	*($5 + [52]) = CALL $743([8617])
	*($5) = *($5 + [48])
	$6 = CALL $10(($5 + [56]), $5)
	*($5 + [68]) = $1
	*($5 + [76]) = $2
	*($5 + [80]) = $3
	*($5 + [64]) = ($5 + [200])
	*($5 + [72]) = ($5 + [144])
	*($5 + [248]) = *($6)
	$7 = ($0 + [160])
	if ( ((int_64)*($0 + [160]) == (int_64)CALL current_receiver()) ){ goto $label$12 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$12
	*($5 + [224]) = $7
	*($5 + [228]) = ($5 + [64])
	*($5 + [232]) = ($5 + [248])
	*(($6 = CALL _Znwj([88])) + [24]) = (int_64)0
	*($6 + [16]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [48]) = (int_64)0
	*($6 + [56]) = (int_64)0
	*($6 + [64 align=4]) = (int_64)0
	*($6 + [72]) = [0]
	*($6 + [76]) = $7
	CALL $471(($5 + [224]), $6)
	*($5 + [240]) = $6
	$8 = *($6)
	*($5 + [224]) = $8
	$10 = *($6 + [80])
	*($5 + [220]) = $10
	$3 = ($0 + [188])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [192]))) ){ goto $label$14 }
	*($7 + [8]) = $8
	*($7 + [16]) = $10
	*($5 + [240]) = [0]
	*($7) = $6
	*($3) = ($7 + [24])
	goto $label$13 
	
.LABEL $label$14
	CALL $472(($0 + [184]), ($5 + [240]), ($5 + [224]), ($5 + [220]))
	
.LABEL $label$13
	$6 = *($5 + [240])
	*($5 + [240]) = [0]
	if ( ($6 == 0) ){ goto $label$15 }
	$7 = *($6 + [64])
	if ( ($7 == 0) ){ goto $label$16 }
	*(($6 + [68])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$16
	CALL _ZdlPv($6)
	
.LABEL $label$15
	if ( *([0] + [8632]) ){ goto $label$17 }
	$6 = CALL _Znwj([280])
	CALL $111($6)
	*([0] + [8632]) = $6
	
.LABEL $label$17
	CALL $163($6, $1, ($5 + [200]), *($4))
	$global$0 = ($5 + [256])
}

void .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [224])
	$global$0 = $2
	*(($3 = (($2 + [88]) + [16]))) = *(($1 + [16]))
	*(($4 = (($2 + [88]) + [8]))) = *(($1 + [8]))
	*(($5 = (($2 + [72]) + [8]))) = *(($1 + [32]))
	*($2 + [88]) = *($1)
	*($2 + [72]) = *($1 + [24])
	$6 = CALL $709(($2 + [56]), ($1 + [40]))
	$1 = CALL $709(($2 + [40]), ($1 + [52]))
	*((($2 + [136]) + [8])) = *($5)
	*((($2 + [112]) + [8])) = *($4)
	*((($2 + [112]) + [16])) = *($3)
	*($2 + [136]) = *($2 + [72])
	*($2 + [112]) = *($2 + [88])
	$0 = *($0 + [4])
	$4 = *($0 + [4])
	$3 = (*($0) + int_32($4 >> [1]))
	$0 = *($0)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [200]) + [16]))) = *((($2 + [112]) + [16]))
	*(($8 = (($2 + [200]) + [8]))) = *((($2 + [112]) + [8]))
	*(($9 = (($2 + [184]) + [8]))) = *((($2 + [136]) + [8]))
	*($2 + [200]) = *($2 + [112])
	*($2 + [184]) = *($2 + [136])
	$4 = CALL $709(($2 + [168]), $6)
	$5 = CALL $709(($2 + [152]), $1)
	*((($2 + [16]) + [16])) = *($7)
	*((($2 + [16]) + [8])) = *($8)
	*(($2 + [8])) = *($9)
	*($2 + [16]) = *($2 + [200])
	*($2) = *($2 + [184])
	CALL void $3((int_32 ($2 + [16])), (int_32 $2), (int_32 $4), (int_32 $5), (int_32 $0))
	if ( ((*($2 + [152]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$2
	if ( ((*($2 + [168]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$3
	if ( ((*($1) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*($1 + [8]))
	
.LABEL $label$4
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($6 + [8]))
	
.LABEL $label$5
	$global$0 = ($2 + [224])
}

int_32 .FUNC $184 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $528($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $712($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $712($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $708($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

void .FUNC $187 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($1 + [56])))
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL _ZdlPv($2)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5 + [12])
	$7 = *([0] + [8632])
	if ( $7 ){ goto $label$1 }
	$8 = CALL _Znwj([280])
	$7 = CALL $111($8)
	*([0] + [8632]) = $8
	
.LABEL $label$1
	$7 = ($7 + [160])
	CALL $142(($3 + [32]), $7)
	$9 = ((int_64)*($3 + [56]) + (int_64)1)
	*($3 + [56]) = $9
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [16])
	CALL $113($7, ($3 + [32]), *(CALL $10(($3 + [24]), ($3 + [8]))))
	$7 = *($3 + [80])
	if ( ($7 == 0) ){ goto $label$2 }
	*(($3 + [84])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$2
	*($1) = $9
	$7 = *($5)
	*($1 + [32]) = *($7)
	*(($1 + [40])) = *(($7 + [8]))
	CALL $710(($1 + [48]), *($5 + [4]))
	$5 = *($5 + [8])
	*($1 + [8]) = *($5)
	*(($1 + [24])) = *(($5 + [16]))
	*(($1 + [16])) = *(($5 + [8]))
	$5 = *($6 + [112])
	*($1 + [64]) = *($5)
	*(($1 + [88])) = *(($5 + [24]))
	*(($1 + [80])) = *(($5 + [16]))
	*(($1 + [72])) = *(($5 + [8]))
	*($1 + [96]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$5 = *($1 + [48])
	$7 = ( *(($1 + [52])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$5 = ($7 + [84])
	$9 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$3:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ($5 <= [513]) ){ goto $label$5 }
	$2 = CALL $746($5)
	goto $label$4 
	
.LABEL $label$5
	$2 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$4
	*($3 + [36]) = $2
	*($3 + [32]) = $2
	*($3 + [40]) = ($2 + $5)
	CALL $197(($3 + [32]), $1)
	$9 = *($1)
	*($1 + [104]) = CALL db_store_i64(*($4 + [8]), (int_64)7035940084004159488, *(*($0 + [8])), $9, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$6 }
	CALL $749($2)
	
.LABEL $label$6
	if ( (uint_64)($9 <= *($4 + [16])) ){ goto $label$7 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	$global$0 = ($3 + [96])
}

int_32 .FUNC $114 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	$5 = CALL _Znwj([64])
	CALL $115($5)
	*($5 + [40]) = (int_64)2630
	*($5) = (int_64)5260
	*($5 + [48]) = $0
	CALL $209(($3 + [32]), $5)
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)-4812911374179631104
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)-4812911374179631104
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $592(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [20])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $248 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $249 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$2 = CALL $746($4)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([24])) + [8]) = $0
	*($5) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	*($5 + [12]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $7
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $251(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $749($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $167 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$6 = ($global$0 - [64])
	$global$0 = $6
	$7 = [0]
	$8 = *([0] + [8632])
	if ( $8 ){ goto $label$1 }
	$9 = CALL _Znwj([280])
	$8 = CALL $111($9)
	*([0] + [8632]) = $9
	
.LABEL $label$1
	$10 = *(($2 + [8]))
	$11 = *($2)
	*($6 + [56]) = (int_64)0
	$12 = ((int_64)$11 + (int_64)1)
	$11 = ((int_64)$10 + (int_64)(CASTING uint_64)(uint_32 (uint_64)($12 <= $11)))
	*($6 + [40]) = $11
	*($6 + [32]) = $12
	$2 = CALL db_idx128_lowerbound(*($8), *($8 + [8]), (int_64)-3022886516901806079, ($6 + [32]), ($6 + [56]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	CALL $284(($6 + [24]), $8, *($6 + [56]))
	*((($7 = *($6 + [28])) + [92])) = $2
	
.LABEL $label$2
	if ( ($7 == 0) ){ goto $label$4 }
	$10 = *($7 + [16])
	$13 = ((int_64)$10 + (int_64)*($7 + [60]))
	if ( (int_64)(((int_64)((int_64)$12 ^ (int_64)$13) | (int_64)((int_64)$11 ^ (int_64)((int_64)*(($7 + [24])) + (int_64)(CASTING uint_64)(uint_32 (uint_64)($13 <= $10))))) == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = [0]
	CALL eosio_assert([0], [20708])
	
.LABEL $label$3
	*($6 + [16]) = [20743]
	*($6 + [20]) = CALL $743([20743])
	*($6 + [8]) = *($6 + [16])
	CALL $10(($6 + [32]), ($6 + [8]))
	CALL $456($0, $1, $7, [1], $3, $4, $5, (int_64)-6030914414904590336)
	$global$0 = ($6 + [64])
}

void .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [160])
	$global$0 = $2
	*((($2 + [136]) + [16])) = *(($1 + [16]))
	*((($2 + [136]) + [8])) = *(($1 + [8]))
	*((($2 + [96]) + [16])) = *(($1 + [48]))
	*(($2 + [120])) = *(($1 + [56]))
	*($2 + [80]) = (int_64)0
	*($2 + [88]) = [0]
	*($2 + [136]) = *($1)
	*($2 + [96]) = *($1 + [32])
	*($2 + [104]) = *(($1 + [40]))
	$3 = *($1 + [64])
	$4 = (*(($1 + [76])) - *($1 + [72]))
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL _Znwj($4)
	*(($2 + [88])) = ($5 + $4)
	*($2 + [80]) = $5
	*($2 + [84]) = $5
	$6 = *(($1 + [72]))
	$4 = (*(($1 + [76])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($5, $6, $4)
	*($2 + [84]) = ($5 + $4)
	
.LABEL $label$3
	*($2 + [72]) = [0]
	*($2 + [64]) = (int_64)0
	$4 = (*(($1 + [88])) - *($1 + [84]))
	if ( ($4 == 0) ){ goto $label$4 }
	$5 = int_32($4 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$4 = CALL _Znwj($4)
	*(($2 + [72])) = ($4 + ($5 << [4]))
	*($2 + [64]) = $4
	*($2 + [68]) = $4
	$5 = *(($1 + [84]))
	$1 = (*(($1 + [88])) - $5)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($4, $5, $1)
	*($2 + [68]) = ($4 + $1)
	
.LABEL $label$4
	*((($2 + [40]) + [16])) = *((($2 + [136]) + [16]))
	*((($2 + [40]) + [8])) = *((($2 + [136]) + [8]))
	*(($2 + [16])) = *((($2 + [96]) + [16]))
	*(($2 + [24])) = *((($2 + [96]) + [24]))
	*($2 + [40]) = *($2 + [136])
	*($2) = *($2 + [96])
	*($2 + [8]) = *($2 + [104])
	CALL $526($0, ($2 + [40]), $2, $3, ($2 + [80]), ($2 + [64]))
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$5 }
	*($2 + [68]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($2 + [80])
	if ( ($1 == 0) ){ goto $label$6 }
	*($2 + [84]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	$global$0 = ($2 + [160])
	return (unreachable)
	
.LABEL $label$2
	CALL $727(($2 + [80]))
	
.LABEL $label$1
	CALL $727(($2 + [64]))
	(unreachable)
}

void .FUNC $165 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $168(*($1), *($0))
	$0 = *($0)
	$2 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$2 = ($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $169(*($1), ($0 + [72]))
	CALL $170(*($1), ($0 + [84]))
}

int_32 .FUNC $164 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $163 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [336])
	$global$0 = $4
	$5 = CALL current_time()
	*((($4 + [272]) + [28])) = (int_64)0
	*(($4 + [316])) = (int_64)0
	*(($4 + [324])) = (int_64)0
	*($4 + [284]) = [0]
	*($4 + [288]) = [0]
	*($4 + [292 align=4]) = (int_64)0
	*($4 + [308 align=4]) = (int_64)0
	*($4 + [272]) = ((CASTING uint_32)(uint_64 ((uint_64)$5 / (uint_64)(int_64)1000000)) + [60])
	*($4 + [216]) = [8617]
	*($4 + [220]) = CALL $743([8617])
	*($4 + [56]) = *($4 + [216])
	$6 = CALL $10(($4 + [224]), ($4 + [56]))
	*($4 + [200]) = [8344]
	*($4 + [204]) = CALL $743([8344])
	*($4 + [48]) = *($4 + [200])
	$7 = CALL $10(($4 + [208]), ($4 + [48]))
	*($4 + [184]) = [8617]
	$5 = *($7)
	$8 = *($6)
	*($4 + [188]) = CALL $743([8617])
	*($4 + [40]) = *($4 + [184])
	$6 = CALL $10(($4 + [192]), ($4 + [40]))
	*($4 + [168]) = [17280]
	*($4 + [172]) = CALL $743([17280])
	*($4 + [32]) = *($4 + [168])
	$7 = CALL $10(($4 + [176]), ($4 + [32]))
	$9 = *(($2 + [8]))
	*((($4 + [96]) + [8])) = $9
	*((($4 + [112]) + [8])) = *(($1 + [8]))
	*((($4 + [112]) + [16])) = *(($1 + [16]))
	*((($4 + [112]) + [32])) = $9
	*($4 + [152]) = $3
	$9 = *($2)
	*($4 + [96]) = $9
	*($4 + [112]) = *($1)
	*($4 + [136]) = $9
	*($4 + [232]) = *($6)
	*($4 + [240]) = *($7)
	*(($2 = CALL _Znwj([16]))) = $8
	*($2 + [8]) = $5
	$3 = ($2 + [16])
	*(($4 + [256])) = $3
	*(($4 + [252])) = $3
	*($4 + [248]) = $2
	CALL $280((($4 + [232]) + [28]), ($4 + [112]))
	CALL $189(($4 + [308]), ($4 + [232]))
	$2 = *($4 + [260])
	if ( ($2 == 0) ){ goto $label$1 }
	*((($4 + [232]) + [32])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$2 = *($4 + [248])
	if ( ($2 == 0) ){ goto $label$2 }
	*(($4 + [252])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$2
	*(($4 + [292])) = [0]
	*($4 + [88]) = [8617]
	*($4 + [92]) = CALL $743([8617])
	*($4 + [24]) = *($4 + [88])
	CALL $10(($4 + [232]), ($4 + [24]))
	*($4 + [80]) = [17280]
	*($4 + [84]) = CALL $743([17280])
	*($4 + [16]) = *($4 + [80])
	CALL $10(($4 + [96]), ($4 + [16]))
	$5 = (int_64)0
	$8 = *($1 + [8])
	$10 = *($1)
	$9 = *($1 + [16])
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$4 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($1 = CALL _Znwj([24])) + [8]) = $8
	*($1) = $10
	*($1 + [16]) = $9
	CALL sha256($1, [24], ($4 + [112]))
	$5 = *($4 + [112])
	if ( ($1 == 0) ){ goto $label$3 }
	CALL _ZdlPv($1)
	
.LABEL $label$3
	*($4 + [120]) = (int_64)0
	$5 = ((int_64)$5 + (int_64)78088699927700640)
	*($4 + [112]) = $5
	CALL cancel_deferred(($4 + [112]))
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = $5
	*($4 + [64]) = [8617]
	*($4 + [68]) = CALL $743([8617])
	*($4 + [8]) = *($4 + [64])
	$5 = *(CALL $10(($4 + [72]), ($4 + [8])))
	CALL $190(($4 + [232]), ($4 + [272]))
	$1 = *($4 + [232])
	CALL send_deferred(($4 + [112]), $5, $1, (*($4 + [236]) - $1), [1])
	$1 = *($4 + [232])
	if ( ($1 == 0) ){ goto $label$5 }
	*($4 + [236]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	CALL $164(($4 + [272]))
	$global$0 = ($4 + [336])
}

void .FUNC $162 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$4 = ($global$0 - [240])
	$global$0 = $4
	if ( ((int_64)*($1) < (int_64)1) ){ goto $label$2 }
	*($4 + [168]) = [8617]
	*($4 + [172]) = CALL $743([8617])
	*($4 + [32]) = *($4 + [168])
	$5 = CALL $10(($4 + [176]), ($4 + [32]))
	*($4 + [152]) = [8344]
	*($4 + [156]) = CALL $743([8344])
	*($4 + [24]) = *($4 + [152])
	$6 = CALL $10(($4 + [160]), ($4 + [24]))
	*($4 + [136]) = [8617]
	$7 = *($6)
	$8 = *($5)
	*($4 + [140]) = CALL $743([8617])
	*($4 + [16]) = *($4 + [136])
	$9 = CALL $10(($4 + [144]), ($4 + [16]))
	*($4 + [120]) = [18575]
	*($4 + [124]) = CALL $743([18575])
	*($4 + [8]) = *($4 + [120])
	$10 = CALL $10(($4 + [128]), ($4 + [8]))
	$5 = [0]
	if ( ((uint_32)$3 > (uint_32)[4]) ){ goto $label$3 }
	$5 = *(((int_32(($3 << [24]) >> [24]) << [2]) + [30432]))
	
.LABEL $label$3
	*(($4 + [48])) = [0]
	*($4 + [40]) = (int_64)0
	$3 = CALL $743($5)
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($4 + [40]) = ($3 << [1])
	$6 = (($4 + [40]) | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$11 = (($3 + [16]) & [-16])
	$6 = CALL _Znwj($11)
	*($4 + [40]) = ($11 | [1])
	*($4 + [48]) = $6
	*($4 + [44]) = $3
	
.LABEL $label$5
	CALL memcpy($6, $5, $3)
	
.LABEL $label$4
	*(($6 + $3)) = [0]
	*((($4 + [56]) + [16])) = *(($0 + [16]))
	*((($4 + [56]) + [8])) = *(($0 + [8]))
	*(($4 + [88])) = *(($1 + [8]))
	*($4 + [56]) = *($0)
	*($4 + [80]) = *($1)
	CALL $709(($4 + [96]), $2)
	$3 = (($4 + [40]) + [8])
	*(($4 + [116])) = *($3)
	*($3) = [0]
	*($4 + [108 align=4]) = *($4 + [40])
	*($4 + [40]) = (int_64)0
	*($4 + [184]) = *($9)
	*($4 + [192]) = *($10)
	*(($3 = CALL _Znwj([16]))) = $8
	*($3 + [8]) = $7
	$1 = ($3 + [16])
	*(($4 + [208])) = $1
	*(($4 + [204])) = $1
	*($4 + [200]) = $3
	CALL $307(($4 + [212]), ($4 + [56]))
	CALL $13(($4 + [224]), ($4 + [184]))
	$3 = *($4 + [224])
	CALL send_inline($3, (*($4 + [228]) - $3))
	$3 = *($4 + [224])
	if ( ($3 == 0) ){ goto $label$7 }
	*($4 + [228]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$3 = *($4 + [212])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($4 + [216])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$8
	$3 = *($4 + [200])
	if ( ($3 == 0) ){ goto $label$9 }
	*(($4 + [204])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$9
	if ( ((*(($4 + [108])) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*(($4 + [116])))
	
.LABEL $label$10
	if ( ((*($4 + [96]) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*(($4 + [104])))
	
.LABEL $label$11
	if ( ((*($4 + [40]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($4 + [48])))
	
.LABEL $label$2
	$global$0 = ($4 + [240])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [40]))
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$6 = int_32($7 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [4]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [4])))) = *($1)
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $160 (int_64 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	$2 = ($global$0 - [128])
	$global$0 = $2
	*($2 + [56]) = [8617]
	*($2 + [60]) = CALL $743([8617])
	*($2 + [16]) = *($2 + [56])
	$3 = CALL $10(($2 + [64]), ($2 + [16]))
	*($2 + [40]) = [8344]
	*($2 + [44]) = CALL $743([8344])
	*($2 + [8]) = *($2 + [40])
	$4 = CALL $10(($2 + [48]), ($2 + [8]))
	*($2 + [24]) = [8617]
	$5 = *($4)
	$6 = *($3)
	*($2 + [28]) = CALL $743([8617])
	*($2) = *($2 + [24])
	$3 = CALL $10(($2 + [32]), $2)
	*($2 + [80]) = $0
	*($2 + [72]) = *($3)
	*(($3 = CALL _Znwj([16]))) = $6
	*($3 + [8]) = $5
	$4 = ($3 + [16])
	*(($2 + [96])) = $4
	*(($2 + [92])) = $4
	*($2 + [88]) = $3
	CALL $506(($2 + [100]), $1)
	CALL $13(($2 + [112]), ($2 + [72]))
	$3 = *($2 + [112])
	CALL send_inline($3, (*($2 + [116]) - $3))
	$3 = *($2 + [112])
	if ( ($3 == 0) ){ goto $label$1 }
	*($2 + [116]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$3 = *($2 + [100])
	if ( ($3 == 0) ){ goto $label$2 }
	*(($2 + [104])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$2
	$3 = *($2 + [88])
	if ( ($3 == 0) ){ goto $label$3 }
	*(($2 + [92])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$3
	$global$0 = ($2 + [128])
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = ($5 - $7)
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $519($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + $2)
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [1])
	$2 = (*($6) + [1])
	*($6) = $2
	$7 = ($7 + [1])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $168 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	return $0
}

int_32 .FUNC $369 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [28698])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *($2 + [100])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-4812917093941759104, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [100]) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$2 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$4 }
	CALL $368($1, *(*($0)), *($1 + [8]))
	*(($3 = *($1 + [4])) + [100]) = $2
	*(($0 + [4])) = $3
	goto $label$3 
	
.LABEL $label$4
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $368 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [92]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4812917093941759104, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $398($1, $5)
	if ( ((int_32)*($5 + [92]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $688 (int_32 $0)
{
	CALL _ZdlPv($0)
}

int_32 .FUNC $715 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL $743($1)
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $711($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

int_32 .FUNC $716 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$6 }
	$5 = [10]
	$3 = uint_32($3 >> [1])
	if ( (([10] - $3) <= $2) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = *($0 + [4])
	$5 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($5 - $3) >= (uint_32)$2) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $711($0, $5, (($3 + $2) - $5), $3, $3, [0], $2, $1)
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$3 }
	if ( $4 ){ goto $label$2 }
	$5 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$5 = *($0 + [8])
	
.LABEL $label$1
	CALL memcpy(($5 + $3), $1, $2)
	$2 = ($3 + $2)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = ($2 << [1])
	*(($5 + $2)) = [0]
	return $0
	
.LABEL $label$7
	*($0 + [4]) = $2
	*(($5 + $2)) = [0]
	return $0
}

void .FUNC $717 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $724($1, $0, [17252])
	CALL $725()
	(unreachable)
}

int_32 .FUNC $710 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $711($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $711 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL _Znwj($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL _ZdlPv($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $712 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL _Znwj(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

void .FUNC $713 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $714($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $718 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $724($1, $0, [17229])
	CALL $726()
	(unreachable)
}

int_64 .FUNC $719 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $743([8335])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [8335], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $728())
	*(CALL $728()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$7 = CALL $740($4, ($3 + [12]), $2)
	$0 = CALL $728()
	$5 = *($0)
	*($0) = $6
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($3 + [12])
	if ( ((int_32)$0 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $7
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $717($3)
	
.LABEL $label$1
	CALL $718($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $484 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([40])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [20]) = [0]
	*($3 + [24]) = $1
	CALL $645(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)8800273824806109184
	$5 = *($3 + [28])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)8800273824806109184
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $644(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $485 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $587(($1 + [8]), *($3 + [8]), *(($3 + [12])))
	
.LABEL $label$3
	*($1 + [20]) = *($3 + [20])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$3 = [44]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$3 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 + [-36])
	
.LABEL $label$5
	$6 = ($3 + [1])
	if ( ($6 <= [513]) ){ goto $label$8 }
	$3 = CALL $746($6)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $646($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$9 }
	CALL $749($3)
	
.LABEL $label$9
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)8800195550100881408) ){ goto $label$10 }
	*(($0 + [16])) = (int_64)8800195550100881409
	
.LABEL $label$10
	$global$0 = ($5 + [16])
}

void .FUNC $486 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([40])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [20]) = [0]
	*($3 + [24]) = $1
	CALL $648(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)8800195550100881408
	$5 = *($3 + [28])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)8800195550100881408
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $647(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $487 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $587(($1 + [8]), *($3 + [8]), *(($3 + [12])))
	
.LABEL $label$3
	*($1 + [20]) = *($3 + [20])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$3 = [44]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$3 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 + [-36])
	
.LABEL $label$5
	$6 = ($3 + [1])
	if ( ($6 <= [513]) ){ goto $label$8 }
	$3 = CALL $746($6)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $646($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$9 }
	CALL $749($3)
	
.LABEL $label$9
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)8800535352911593472) ){ goto $label$10 }
	*(($0 + [16])) = (int_64)8800535352911593473
	
.LABEL $label$10
	$global$0 = ($5 + [16])
}

int_32 .FUNC $480 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([40])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [20]) = [0]
	*($5 + [24]) = $0
	CALL $643(($3 + [32]), $5)
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)8800273824806109184
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)8800273824806109184
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $644(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $481 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([40])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [20]) = [0]
	*($5 + [24]) = $0
	CALL $643(($3 + [32]), $5)
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)8800195550100881408
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)8800195550100881408
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $647(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $482 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([40])) + [16]) = [0]
	*($5 + [8 align=4]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [20]) = [0]
	*($5 + [24]) = $0
	CALL $643(($3 + [32]), $5)
	*($5 + [28]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)8800535352911593472
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)8800535352911593472
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $649(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $483 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $587(($1 + [8]), *($3 + [8]), *(($3 + [12])))
	
.LABEL $label$3
	*($1 + [20]) = *($3 + [20])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 ((int_32)$8 / (int_32)[48]))
	$3 = [44]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$3 = (((int_32)((uint_32)($8 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $3)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 + [-36])
	
.LABEL $label$5
	$6 = ($3 + [1])
	if ( ($6 <= [513]) ){ goto $label$8 }
	$3 = CALL $746($6)
	goto $label$7 
	
.LABEL $label$8
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$7
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $646($5, $1)
	CALL db_update_i64(*($1 + [28]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$9 }
	CALL $749($3)
	
.LABEL $label$9
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)8800273824806109184) ){ goto $label$10 }
	*(($0 + [16])) = (int_64)8800273824806109185
	
.LABEL $label$10
	$global$0 = ($5 + [16])
}

void .FUNC $488 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([40])) + [16]) = [0]
	*($3 + [8 align=4]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [20]) = [0]
	*($3 + [24]) = $1
	CALL $650(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)8800535352911593472
	$5 = *($3 + [28])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)8800535352911593472
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $649(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $489 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8800273824458211328, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $69 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [368])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = (int_64)0
	*(($4 + [304])) = (int_64)0
	*(($4 + [324])) = [0]
	*(($4 + [336])) = (int_64)0
	*(($4 + [352])) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [312]) = [0]
	*($4 + [316 align=4]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [252]) = $2
	*($4 + [248]) = $2
	*($4 + [256]) = ($2 + $5)
	*($4 + [24]) = ($4 + [248])
	*($4 + [48]) = ($4 + [264])
	CALL $200(($4 + [48]), ($4 + [24]))
	$3 = *($4 + [256])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [248])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$3 = CALL $20(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $3
	*($4 + [28]) = ($4 + [360])
	CALL $201(($4 + [24]), ($4 + [264]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $749($2)
	
.LABEL $label$4
	CALL $24($3)
	if ( ((*($4 + [316]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [324])))
	
.LABEL $label$5
	$global$0 = ($4 + [368])
	return [1]
}

void .FUNC $68 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8)
{
	int_32 $9
	$9 = ($global$0 - [32])
	$global$0 = $9
	*($9 + [16]) = [8617]
	*($9 + [20]) = CALL $743([8617])
	*($9 + [8]) = *($9 + [16])
	CALL require_auth(*(CALL $10(($9 + [24]), ($9 + [8]))))
	$global$0 = ($9 + [32])
}

int_32 .FUNC $65 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [416])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [296])) = (int_64)0
	*(($4 + [288])) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [304]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [272]) + [32])
	CALL memcpy(($4 + [272]), $2, [32])
	$9 = ($2 + [32])
	if ( ((int_32)($7 & [-8]) != (int_32)[32]) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*((($4 + [40]) + [8])) = $3
	*($4 + [56]) = $2
	*($4 + [60]) = ($2 + [40])
	*($4 + [64]) = $3
	*($4 + [40]) = *($4 + [56])
	$8 = CALL $20(($4 + [72]), $0, $1, ($4 + [40]))
	*(($3 = (($4 + [320]) + [24]))) = *((($4 + [272]) + [24]))
	*(($9 = (($4 + [320]) + [16]))) = *((($4 + [272]) + [16]))
	*($4 + [328]) = *($4 + [280])
	*($4 + [320]) = *($4 + [272])
	$0 = *(($4 + [304]))
	*((($4 + [352]) + [24])) = *($3)
	*((($4 + [352]) + [16])) = *($9)
	*($4 + [360]) = *($4 + [328])
	*($4 + [352]) = *($4 + [320])
	$3 = (($4 + [72]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	$1 = *((($4 + [352]) + [24]))
	*((($4 + [384]) + [24])) = $1
	$10 = *((($4 + [352]) + [16]))
	*((($4 + [384]) + [16])) = $10
	*(($4 + [16])) = $10
	*(($4 + [24])) = $1
	$1 = *($4 + [360])
	*($4 + [392]) = $1
	$10 = *($4 + [352])
	*($4) = $10
	*($4 + [384]) = $10
	*($4 + [8]) = $1
	CALL void $3((int_32 $4), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $749($2)
	
.LABEL $label$8
	CALL $24($8)
	$global$0 = ($4 + [416])
	return [1]
}

void .FUNC $64 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [352])
	$global$0 = $3
	*($3 + [248]) = $2
	CALL $110($3)
	$4 = ($0 + [72])
	CALL $191(($3 + [240]), $4, $2)
	$0 = *($3 + [244])
	if ( $0 ){ goto $label$1 }
	CALL $192(($3 + [128]), [21905], ($3 + [248]))
	if ( (*($3 + [128]) & [1]) ){ goto $label$3 }
	$0 = (($3 + [128]) | [1])
	goto $label$2 
	
.LABEL $label$3
	$0 = *($3 + [136])
	CALL _ZdlPv($0)
	
.LABEL $label$2
	CALL eosio_assert([0], $0)
	$0 = *($3 + [244])
	
.LABEL $label$1
	*((($3 + [128]) + [40])) = *(($0 + [40]))
	*((($3 + [128]) + [32])) = *(($0 + [32]))
	*((($3 + [128]) + [24])) = *(($0 + [24]))
	*((($3 + [128]) + [16])) = *(($0 + [16]))
	*($3 + [128]) = *($0)
	*($3 + [136]) = *(($0 + [8]))
	$5 = CALL $709((($3 + [128]) + [48]), ($0 + [48]))
	*((($3 + [128]) + [96])) = *(($0 + [96]))
	*((($3 + [128]) + [88])) = *(($0 + [88]))
	*((($3 + [128]) + [80])) = *(($0 + [80]))
	*((($3 + [128]) + [72])) = *(($0 + [72]))
	*($3 + [192]) = *($0 + [64])
	$2 = *($3 + [240])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( $0) ){ goto $label$4 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$4
	$6 = CALL db_next_i64(*($0 + [104]), ($3 + [328]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	CALL $193((CASTING uint_32)(uint_64 $2), $6)
	
.LABEL $label$5
	CALL $194($4, $0)
	*($3 + [112]) = [8617]
	*($3 + [116]) = CALL $743([8617])
	*($3 + [48]) = *($3 + [112])
	$4 = CALL $10(($3 + [120]), ($3 + [48]))
	*(($6 = (($3 + [88]) + [16]))) = *(($3 + [152]))
	*(($7 = (($3 + [88]) + [8]))) = *((($3 + [128]) + [16]))
	$9 = ($3 + [168])
	*(($8 = (($3 + [72]) + [8]))) = *($9)
	*($3 + [88]) = *($3 + [136])
	*($3 + [72]) = *($3 + [160])
	$0 = CALL $709(($3 + [56]), $5)
	$2 = CALL $15(*($9))
	$10 = *($4)
	$11 = *($8)
	*((($3 + [280]) + [8])) = $11
	$12 = *($7)
	*((($3 + [256]) + [8])) = $12
	$13 = *($6)
	*((($3 + [256]) + [16])) = $13
	*(($6 = (($3 + [328]) + [8]))) = $12
	*(($7 = (($3 + [328]) + [16]))) = $13
	*(($8 = (($3 + [312]) + [8]))) = $11
	$11 = *($3 + [72])
	*($3 + [280]) = $11
	$12 = *($3 + [88])
	*($3 + [256]) = $12
	*($3 + [328]) = $12
	*($3 + [312]) = $11
	$4 = CALL $709(($3 + [296]), $0)
	*((($3 + [24]) + [16])) = *($7)
	*((($3 + [24]) + [8])) = *($6)
	*((($3 + [8]) + [8])) = *($8)
	*($3 + [24]) = *($3 + [328])
	*($3 + [8]) = *($3 + [312])
	CALL $9($10, ($3 + [24]), ($3 + [8]), $4, $2)
	if ( ((*($3 + [296]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$6
	if ( ((*($0) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*($0 + [8]))
	
.LABEL $label$7
	if ( ((*($5) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($3 + [184])))
	
.LABEL $label$8
	$global$0 = ($3 + [352])
}

int_32 .FUNC $67 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$3 = ($global$0 - [368])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$7 = CALL $746($8)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$2
	CALL read_action_data($7, $8)
	
.LABEL $label$1
	$9 = CALL $115(($4 + [248]))
	*($4 + [248]) = (int_64)1500
	$10 = (int_64)5459781
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $10) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$11 = (uint_64)$10 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$10 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$10 = $11
	$12 = $2
	goto $label$7 
	
.LABEL $label$8
	$10 = $11
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$10 & (int_64)65280) != (int_64)0) ){ goto $label$5 }
	$10 = (uint_64)$10 >> (uint_64)(int_64)8)
	$3 = ((int_32)$2 < (int_32)[6])
	$12 = ($2 + [1])
	$2 = $12
	if ( $3 ){ goto $label$9 }
	
.LABEL $label$7
	$2 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [22633])
	
.LABEL $label$4
	*(($2 = *($4 + [268])) + [8]) = (int_64)1397703940
	*($2) = (int_64)500000
	*($4 + [281 align=1]) = [24578]
	*($4 + [236]) = $7
	*($4 + [232]) = $7
	*($4 + [240]) = ($7 + $8)
	CALL $211(($4 + [232]), ($4 + [248]))
	$2 = *($4 + [240])
	*((($4 + [16]) + [8])) = $2
	*(($4 + [8])) = $2
	$10 = *($4 + [232])
	*($4) = $10
	*($4 + [16]) = $10
	$3 = CALL $20(($4 + [32]), $0, $1, $4)
	$12 = CALL $210(($4 + [288]), $9)
	*($4 + [321 align=1]) = *($4 + [281 align=1])
	$2 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$10 }
	$6 = *((*($2) + $6))
	
.LABEL $label$10
	CALL $210(($4 + [328]), $12)
	*($4 + [361 align=1]) = *(($4 + [321]))
	CALL void $2((int_32 ($4 + [328])), (int_32 $6))
	$2 = *($4 + [348])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($4 + [352])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($4 + [336])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($4 + [340])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$2 = *($4 + [308])
	if ( ($2 == 0) ){ goto $label$13 }
	*(($4 + [312])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$13
	$2 = *($4 + [296])
	if ( ($2 == 0) ){ goto $label$14 }
	*(($4 + [300])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$14
	if ( ($8 <= [513]) ){ goto $label$15 }
	CALL $749($7)
	
.LABEL $label$15
	CALL $24($3)
	$2 = *(($4 + [268]))
	if ( ($2 == 0) ){ goto $label$16 }
	*(($4 + [272])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$16
	$2 = *($4 + [256])
	if ( ($2 == 0) ){ goto $label$17 }
	*(($4 + [260])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$17
	$global$0 = ($4 + [368])
	return [1]
}

void .FUNC $66 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [464])
	$global$0 = $2
	CALL $110($2)
	$3 = CALL $109(($2 + [24]))
	*($2 + [8]) = [8617]
	*($2 + [12]) = CALL $743([8617])
	*($2) = *($2 + [8])
	CALL $118(($3 + [120]), $1, *(CALL $10(($2 + [16]), $2)))
	CALL $130($3)
	$global$0 = ($2 + [464])
}

int_32 .FUNC $61 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [248]) = (int_64)0
	*($4 + [256]) = [0]
	*($4 + [236]) = $2
	*($4 + [232]) = $2
	*($4 + [240]) = ($2 + $7)
	*($4 + [264]) = ($4 + [232])
	*($4 + [32]) = ($4 + [248])
	CALL $235(($4 + [32]), ($4 + [264]))
	$3 = *($4 + [240])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [232])
	*($4) = $8
	*($4 + [16]) = $8
	$9 = CALL $20(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$10 = *($4 + [257])
	$11 = *($4 + [256])
	$0 = *($4 + [248])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $0), (int_64 ($11 & [255])), (int_32 ($10 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $749($2)
	
.LABEL $label$5
	CALL $24($9)
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $60 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$4 = ($global$0 - [48])
	$global$0 = $4
	CALL $110($0)
	CALL eosio_assert([0], [22496])
	*(($4 + [32])) = [0]
	*($4 + [16]) = (int_64)-1
	*($4 + [36]) = [0]
	$5 = *($0)
	*($4) = $5
	*($4 + [8]) = $5
	*($4 + [24]) = (int_64)0
	$0 = CALL db_lowerbound_i64($5, $5, (int_64)6138621011882409984, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$1 }
	$6 = ($4 + [8])
	$7 = ($4 + [28])
	$8 = ($4 + [24])
	
.LOOP $label$2:
	CALL $236($4, $0)
	$0 = CALL db_lowerbound_i64(*($4), *($6), (int_64)6138621011882409984, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$4 }
	$9 = CALL $236($4, $0)
	goto $label$3 
	
.LABEL $label$4
	$9 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$3
	$0 = CALL db_next_i64(*($9 + [60]), ($4 + [40]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$5 }
	CALL $236($4, $0)
	
.LABEL $label$5
	if ( ((int_32)*($9 + [56]) == (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$6
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$7 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$7
	$11 = *($7)
	$10 = *($8)
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$12 }
	$12 = $11
	$13 = *($9)
	if ( ((int_32)$13 == (int_32)*(*(($11 + [-24])))) ){ goto $label$13 }
	$14 = ($10 + [24])
	$0 = $11
	
.LOOP $label$14:
	if ( ((int_32)$14 == (int_32)$0) ){ goto $label$12 }
	$15 = ($0 + [-48])
	$12 = ($0 + [-24])
	$0 = $12
	if ( ((int_32)$13 != (int_32)*(*($15))) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ((int_32)$10 == (int_32)$12) ){ goto $label$12 }
	if ( ((int_32)$12 == (int_32)$11) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL eosio_assert([0], [29265])
	$11 = *($7)
	$12 = $10
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$10 }
	
.LABEL $label$11
	$13 = ($12 + [-24])
	goto $label$9 
	
.LABEL $label$10
	$0 = $12
	
.LOOP $label$15:
	$15 = *($0)
	*($0) = [0]
	$13 = ($0 + [-24])
	$12 = *($13)
	*($13) = $15
	if ( ($12 == 0) ){ goto $label$16 }
	$15 = *($12 + [40])
	if ( ($15 == 0) ){ goto $label$17 }
	*(($12 + [44])) = $15
	CALL _ZdlPv($15)
	
.LABEL $label$17
	if ( ((*($12 + [4]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*(($12 + [12])))
	
.LABEL $label$18
	CALL _ZdlPv($12)
	
.LABEL $label$16
	*(($0 + [-8])) = *(($0 + [16]))
	*(($0 + [-16])) = *(($0 + [8]))
	$0 = ($0 + [24])
	if ( ((int_32)$11 != (int_32)$0) ){ goto $label$15 }
	$13 = ($0 + [-24])
	$12 = *($7)
	if ( ((int_32)($12 + [24]) == (int_32)$0) ){ goto $label$8 }
	
.LABEL $label$9
	
.LOOP $label$19:
	$12 = ($12 + [-24])
	$0 = *($12)
	*($12) = [0]
	if ( ($0 == 0) ){ goto $label$20 }
	$15 = *($0 + [40])
	if ( ($15 == 0) ){ goto $label$21 }
	*(($0 + [44])) = $15
	CALL _ZdlPv($15)
	
.LABEL $label$21
	if ( ((*($0 + [4]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*(($0 + [12])))
	
.LABEL $label$22
	CALL _ZdlPv($0)
	
.LABEL $label$20
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$19 }
	
.LABEL $label$8
	*($7) = $13
	CALL db_remove_i64(*(($9 + [60])))
	$0 = *(($9 + [64]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$24 }
	$0 = CALL db_idx64_find_primary(*($4), *($6), (int_64)6138621011882409984, ($4 + [40]), *($9))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$23 }
	
.LABEL $label$24
	CALL db_idx64_remove($0)
	
.LABEL $label$23
	$0 = CALL db_lowerbound_i64(*($4), *($6), (int_64)6138621011882409984, (int_64)0)
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$2 }
	$13 = *($4 + [24])
	if ( ($13 == 0) ){ goto $label$1 }
	$11 = ($4 + [28])
	$12 = *($11)
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$26 }
	
.LOOP $label$27:
	$12 = ($12 + [-24])
	$0 = *($12)
	*($12) = [0]
	if ( ($0 == 0) ){ goto $label$28 }
	$15 = *($0 + [40])
	if ( ($15 == 0) ){ goto $label$29 }
	*(($0 + [44])) = $15
	CALL _ZdlPv($15)
	
.LABEL $label$29
	if ( ((*($0 + [4]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*(($0 + [12])))
	
.LABEL $label$30
	CALL _ZdlPv($0)
	
.LABEL $label$28
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$27 }
	$0 = *(($4 + [24]))
	goto $label$25 
	
.LABEL $label$26
	$0 = $13
	
.LABEL $label$25
	*($11) = $13
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($4 + [48])
}

int_32 .FUNC $63 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$3 = ($global$0 - [496])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [336]))) = (int_64)0
	*(($8 = ($4 + [344]))) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [292]) = $2
	*($4 + [288]) = $2
	*($4 + [296]) = ($2 + $7)
	CALL $168(($4 + [288]), ($4 + [304]))
	CALL $168(($4 + [288]), ($4 + [328]))
	$9 = *($4 + [296])
	*((($4 + [72]) + [8])) = $9
	*((($4 + [56]) + [8])) = $9
	$10 = *($4 + [288])
	*($4 + [56]) = $10
	*($4 + [72]) = $10
	$9 = CALL $20(($4 + [88]), $0, $1, ($4 + [56]))
	*(($11 = (($4 + [376]) + [16]))) = *($4 + [320])
	*(($12 = (($4 + [376]) + [8]))) = *($4 + [312])
	*(($13 = (($4 + [352]) + [8]))) = *($3)
	*(($3 = (($4 + [352]) + [16]))) = *($8)
	*($4 + [376]) = *($4 + [304])
	*($4 + [352]) = *($4 + [328])
	*((($4 + [424]) + [16])) = *($3)
	*((($4 + [424]) + [8])) = *($13)
	*((($4 + [400]) + [8])) = *($12)
	*((($4 + [400]) + [16])) = *($11)
	*($4 + [424]) = *($4 + [352])
	*($4 + [400]) = *($4 + [376])
	$3 = (($4 + [88]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$0 = *((($4 + [400]) + [16]))
	*((($4 + [472]) + [16])) = $0
	$1 = *((($4 + [400]) + [8]))
	*((($4 + [472]) + [8])) = $1
	$10 = *((($4 + [424]) + [16]))
	*((($4 + [448]) + [16])) = $10
	$14 = *((($4 + [424]) + [8]))
	*((($4 + [448]) + [8])) = $14
	*((($4 + [32]) + [8])) = $1
	*((($4 + [32]) + [16])) = $0
	*((($4 + [8]) + [16])) = $10
	*((($4 + [8]) + [8])) = $14
	$0 = *($4 + [400])
	*($4 + [472]) = $0
	$1 = *($4 + [424])
	*($4 + [448]) = $1
	*($4 + [32]) = $0
	*($4 + [8]) = $1
	CALL void $3((int_32 ($4 + [32])), (int_32 ($4 + [8])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $749($2)
	
.LABEL $label$6
	CALL $24($9)
	$global$0 = ($4 + [496])
	return [1]
}

void .FUNC $62 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [16])
	CALL require_auth(*(CALL $10(($3 + [24]), ($3 + [8]))))
	$global$0 = ($3 + [32])
}

void .FUNC $337 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800273824458211328, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $439($1, $5)
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $331 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$2 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$2 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$6 = (int_64)0
	*(($5 = CALL _Znwj([64])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = $0
	CALL $588(($3 + [16]), $5)
	*($5 + [52]) = $1
	*($3 + [8]) = $5
	$7 = *($5 + [8])
	$9 = *($5)
	$8 = *($5 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$9 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	*(($1 = CALL _Znwj([24])) + [8]) = $7
	*($1) = $9
	*($1 + [16]) = $8
	CALL sha256($1, [24], ($3 + [32]))
	$6 = *($3 + [32])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	*($3 + [32]) = $6
	$10 = *($3 + [8])
	$11 = *($10 + [52])
	*($3 + [4]) = $11
	$12 = ($0 + [28])
	$1 = *($12)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($1 + [8]) = $6
	*($1 + [16]) = $11
	*($3 + [8]) = [0]
	*($1) = $10
	*($12) = ($1 + [24])
	if ( $2 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $320(($0 + [24]), ($3 + [8]), ($3 + [32]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $749($4)
	
.LABEL $label$10
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [64])
	return $5
}

void .FUNC $549 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [48])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $621 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $622(*($1), (*($0) + [100]))
	$0 = *($0)
	CALL $479(*($1), ($0 + [112]))
	$3 = ($0 + [128])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($0 + [136]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($5)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($0 + [144])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($0 + [152]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$4 = ($0 + [160])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $622 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [1]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[1]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [2])
	$4 = (*($7) + [2])
	*($7) = $4
	$6 = ($6 + [2])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $623 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [2])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $624($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [2]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [4])
	$2 = (*($6) + [4])
	*($6) = $2
	$7 = ($7 + [4])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $624 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [2]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [2])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [2]) > (uint_32)[536870910]) ){ goto $label$6 }
	$6 = int_32($2 >> [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL _Znwj(($6 << [2]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = [0]
	$6 = ($6 + [4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [2]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [2]))
	$3 = ($2 + ($3 << [2]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [4])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [2]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL _ZdlPv($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $625 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = *($1 + [72])
	if ( ($4 == 0) ){ goto $label$4 }
	*(($1 + [76])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$4
	$4 = *($1 + [60])
	if ( ($4 == 0) ){ goto $label$5 }
	*(($1 + [64])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$5
	$4 = *($1 + [48])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($1 + [52])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$6
	$4 = *($1 + [36])
	if ( ($4 == 0) ){ goto $label$7 }
	*(($1 + [40])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$7
	$4 = *($1 + [24])
	if ( ($4 == 0) ){ goto $label$8 }
	*(($1 + [28])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$8
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$9 }
	CALL _ZdlPv($1)
	
.LABEL $label$9
	return $0
}

void .FUNC $239 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)*(*(($5 + [-24])))) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_32)$7 != (int_32)*(*($10))) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$7 = ($9 + [-24])
	$6 = *($7)
	*($7) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	$10 = *($6 + [40])
	if ( ($10 == 0) ){ goto $label$13 }
	*(($6 + [44])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$13
	if ( ((*($6 + [4]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*(($6 + [12])))
	
.LABEL $label$14
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$7 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$7 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$15:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$16 }
	$10 = *($9 + [40])
	if ( ($10 == 0) ){ goto $label$17 }
	*(($9 + [44])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$17
	if ( ((*($9 + [4]) & [1]) == 0) ){ goto $label$18 }
	CALL _ZdlPv(*(($9 + [12])))
	
.LABEL $label$18
	CALL _ZdlPv($9)
	
.LABEL $label$16
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$15 }
	
.LABEL $label$8
	*(($0 + [28])) = $7
	CALL db_remove_i64(*(($1 + [68])))
	$9 = *(($1 + [72]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$20 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6138621011882409984, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$19 }
	
.LABEL $label$20
	CALL db_idx64_remove($9)
	
.LABEL $label$19
	$global$0 = ($2 + [16])
}

int_32 .FUNC $238 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([80])) + [12]) = [0]
	*($5 + [4 align=4]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40 align=4]) = (int_64)0
	*($5 + [48]) = [0]
	*($5 + [64]) = $0
	CALL $237(($3 + [32]), $5)
	*($5 + [72]) = [-1]
	*($5 + [68]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $241(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [40])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [44])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	if ( ((*($1 + [4]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($1 + [12])))
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $541 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [2])
	*(($2 = ($0 + [4]))) = (*($2) + [2])
	$2 = ($1 + [32])
	$1 = *($0 + [4])
	$0 = CALL $542($0, ($1 + [20]))
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($1, $2, [1])
	*(($1 = ($0 + [4]))) = (*($1) + [1])
	return $0
}

int_32 .FUNC $236 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$6 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$7 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $7
	$8 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$7 = CALL $746($5)
	$8 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $7, $5)
	*($3 + [4]) = $7
	*($3) = $7
	*($3 + [8]) = ($7 + $5)
	*(($6 = CALL _Znwj([72])) + [12]) = [0]
	*($6 + [4 align=4]) = (int_64)0
	*($6 + [32]) = (int_64)0
	*($6 + [40 align=4]) = (int_64)0
	*($6 + [48]) = [0]
	*($6 + [56]) = $0
	$4 = ($6 + [4])
	$5 = *($3 + [4])
	if ( ((uint_32)(*($3 + [8]) - $5) > (uint_32)[3]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$5 = *($3 + [4])
	
.LABEL $label$8
	$2 = ($6 + [16])
	CALL memcpy($6, $5, [4])
	*($3 + [4]) = (*($3 + [4]) + [4])
	CALL $184($3, $4)
	$5 = *($3 + [4])
	$4 = ($3 + [8])
	if ( ((uint_32)(*($4) - $5) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [28806])
	$5 = *($3 + [4])
	
.LABEL $label$9
	$9 = ($6 + [24])
	CALL memcpy($2, $5, [8])
	$5 = (*($3 + [4]) + [8])
	*($3 + [4]) = $5
	if ( ((int_32)*($4) != (int_32)$5) ){ goto $label$10 }
	CALL eosio_assert([0], [28806])
	$5 = *($3 + [4])
	
.LABEL $label$10
	$4 = ($6 + [25])
	CALL memcpy($9, $5, [1])
	$5 = (*($3 + [4]) + [1])
	*($3 + [4]) = $5
	$2 = ($3 + [8])
	if ( ((int_32)*($2) != (int_32)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [28806])
	$5 = *($3 + [4])
	
.LABEL $label$11
	$9 = ($6 + [26])
	CALL memcpy($4, $5, [1])
	$5 = (*($3 + [4]) + [1])
	*($3 + [4]) = $5
	if ( ((int_32)*($2) != (int_32)$5) ){ goto $label$12 }
	CALL eosio_assert([0], [28806])
	$5 = *($3 + [4])
	
.LABEL $label$12
	$4 = ($6 + [40])
	$2 = ($6 + [32])
	CALL memcpy($9, $5, [1])
	$5 = (*($3 + [4]) + [1])
	*($3 + [4]) = $5
	$9 = ($3 + [8])
	if ( ((uint_32)(*($9) - $5) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [28806])
	$5 = *($3 + [4])
	
.LABEL $label$13
	$10 = ($6 + [52])
	CALL memcpy($2, $5, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $537($3, $4)
	$5 = *($3 + [4])
	if ( ((uint_32)(*($9) - $5) > (uint_32)[3]) ){ goto $label$14 }
	CALL eosio_assert([0], [28806])
	$5 = *($3 + [4])
	
.LABEL $label$14
	CALL memcpy($10, $5, [4])
	*($6 + [60]) = $1
	*($6 + [64]) = [-1]
	*($3 + [4]) = (*($3 + [4]) + [4])
	$11 = *($6)
	$9 = *(($0 + [32]))
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$16 }
	*($5 + [8]) = $11
	*($5) = $6
	*($5 + [16]) = $1
	*($4) = ($5 + [24])
	if ( $8 ){ goto $label$15 }
	goto $label$1 
	
.LABEL $label$16
	$10 = ($0 + [24])
	$2 = *($10)
	$4 = ((int_32)($5 - $2) / (int_32)[24])
	$12 = ($4 + [1])
	if ( ((uint_32)$12 >= (uint_32)[178956971]) ){ goto $label$18 }
	$10 = [178956970]
	$9 = ((int_32)($9 - $2) / (int_32)[24])
	if ( ((uint_32)$9 > (uint_32)[89478484]) ){ goto $label$20 }
	$9 = ($9 << [1])
	$10 = ( $12 ? $9 : ($9 <= $12) )
	if ( ($10 == 0) ){ goto $label$19 }
	
.LABEL $label$20
	$9 = CALL _Znwj(((int_32)$10 * (int_32)[24]))
	$5 = *(($0 + [28]))
	$2 = *(($0 + [24]))
	goto $label$17 
	
.LABEL $label$19
	$10 = [0]
	$9 = [0]
	goto $label$17 
	
.LABEL $label$18
	CALL $727($10)
	
.LABEL $label$17
	*(($4 = ($9 + ($13 = ((int_32)$4 * (int_32)[24])))) + [8]) = $11
	*($4) = $6
	*($4 + [16]) = $1
	$10 = ($9 + ((int_32)$10 * (int_32)[24]))
	$12 = ($4 + [24])
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$21 }
	$1 = (($9 + $13) + [-24])
	
.LOOP $label$22:
	$4 = ($5 + [-24])
	$9 = *($4)
	*($4) = [0]
	*($1) = $9
	*(($1 + [16])) = *(($5 + [-8]))
	*(($1 + [8])) = *(($5 + [-16]))
	$1 = ($1 + [-24])
	$5 = $4
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$22 }
	$4 = ($1 + [24])
	$5 = *(($0 + [28]))
	$2 = *(($0 + [24]))
	
.LABEL $label$21
	*(($0 + [28])) = $12
	*(($0 + [24])) = $4
	*(($0 + [32])) = $10
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$23 }
	
.LOOP $label$24:
	$5 = ($5 + [-24])
	$1 = *($5)
	*($5) = [0]
	if ( ($1 == 0) ){ goto $label$25 }
	$4 = *($1 + [40])
	if ( ($4 == 0) ){ goto $label$26 }
	*(($1 + [44])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$26
	if ( ((*($1 + [4]) & [1]) == 0) ){ goto $label$27 }
	CALL _ZdlPv(*(($1 + [12])))
	
.LABEL $label$27
	CALL _ZdlPv($1)
	
.LABEL $label$25
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$24 }
	
.LABEL $label$23
	if ( ($2 == 0) ){ goto $label$28 }
	CALL _ZdlPv($2)
	
.LABEL $label$28
	if ( ($8 == 0) ){ goto $label$1 }
	
.LABEL $label$15
	CALL $749($7)
	
.LABEL $label$1
	$global$0 = ($3 + [16])
	(unreachable)
	return $6
}

void .FUNC $235 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$4 = *($0)
	$2 = ($4 + [8])
	$0 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$0 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$0 = ($4 + [9])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $234 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$3 = ($global$0 - [112])
	$global$0 = $3
	*($3 + [88]) = $0
	$4 = *(($1 + [8]))
	$5 = *($1)
	*($3 + [104]) = (int_64)0
	*($3 + [8]) = $4
	*($3) = $5
	$6 = [0]
	$7 = CALL db_idx128_lowerbound(*($0), *($0 + [8]), (int_64)-3022886516901806080, $3, ($3 + [104]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	CALL $284(($3 + [96]), $0, *($3 + [104]))
	*((($6 = *($3 + [100])) + [88])) = $7
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$3 }
	if ( (int_64)(((int_64)((int_64)$5 ^ (int_64)*($6 + [16])) | (int_64)((int_64)$4 ^ (int_64)*(($6 + [24])))) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $291($3, [17572], $1)
	if ( (*($3) & [1]) ){ goto $label$5 }
	$0 = ($3 | [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($3 + [8])
	CALL _ZdlPv($0)
	
.LABEL $label$4
	$6 = [0]
	CALL eosio_assert([0], $0)
	
.LABEL $label$2
	$4 = *(($6 + [8]))
	$5 = *(($6 + [16]))
	$8 = *(($6 + [24]))
	$9 = *(($6 + [32]))
	$10 = *(($6 + [40]))
	$11 = *($6)
	*(($3 + [52])) = (int_64)0
	*(($3 + [40])) = $10
	*(($3 + [32])) = $9
	*(($3 + [24])) = $8
	*(($3 + [16])) = $5
	*($3 + [48]) = [0]
	*($3) = $11
	*($3 + [8]) = $4
	$0 = (*(($6 + [52])) - *($6 + [48]))
	if ( ($0 == 0) ){ goto $label$7 }
	$1 = int_32($0 >> [3])
	if ( ((uint_32)$1 >= (uint_32)[536870912]) ){ goto $label$6 }
	$0 = CALL _Znwj($0)
	*(($3 + [48])) = $0
	*(($3 + [56])) = ($0 + ($1 << [3]))
	*(($1 = ($3 + [52]))) = $0
	$12 = *(($6 + [48]))
	$7 = (*(($6 + [52])) - $12)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($0, $12, $7)
	*($1) = (*($1) + $7)
	
.LABEL $label$7
	*(($3 + [76])) = *(($6 + [76]))
	*(($3 + [68])) = *(($6 + [68]))
	*($3 + [60 align=4]) = *($6 + [60 align=4])
	$0 = *($2 + [16])
	if ( ($0 == 0) ){ goto $label$8 }
	CALL void $0((int_32 $3), (int_32 *(*($0) + [24])))
	*($3 + [104]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 ($3 + [88])))
	if ( $6 ){ goto $label$9 }
	CALL eosio_assert([0], [29136])
	$6 = *($3 + [108])
	
.LABEL $label$9
	CALL $285(($3 + [104]))
	CALL $289(*($3 + [88]), $6)
	$6 = *($3 + [48])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($3 + [52])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$10
	$global$0 = ($3 + [112])
	return (unreachable)
	
.LABEL $label$8
	CALL abort()
	
.LABEL $label$6
	CALL $727(($3 + [48]))
	(unreachable)
}

void .FUNC $233 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$2 = ($global$0 - [128])
	$global$0 = $2
	$3 = CALL $709(($2 + [48]), $1)
	*(($4 = (($2 + [24]) + [16]))) = *(($1 + [32]))
	*(($5 = (($2 + [24]) + [8]))) = *(($1 + [24]))
	*($2 + [24]) = *($1 + [16])
	*((($2 + [64]) + [16])) = *($4)
	*((($2 + [64]) + [8])) = *($5)
	*($2 + [64]) = *($2 + [24])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*($0) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	$4 = CALL $709(($2 + [112]), $3)
	$6 = *((($2 + [64]) + [16]))
	*((($2 + [88]) + [16])) = $6
	$7 = *((($2 + [64]) + [8]))
	*((($2 + [88]) + [8])) = $7
	*(($2 + [8])) = $7
	*(($2 + [16])) = $6
	$6 = *($2 + [64])
	*($2) = $6
	*($2 + [88]) = $6
	CALL void $0((int_32 $4), (int_32 $2), (int_32 $1))
	if ( ((*($2 + [112]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$2
	if ( ((*($3) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$3
	$global$0 = ($2 + [128])
}

void .FUNC $544 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$4 = ($global$0 - [80])
	$global$0 = $4
	$5 = *(($1 + [24]))
	*((($4 + [48]) + [24])) = $5
	$6 = *(($1 + [16]))
	*((($4 + [48]) + [16])) = $6
	$7 = *(($1 + [8]))
	$8 = *($1)
	*(($4 + [16])) = $6
	*(($4 + [24])) = $5
	*($4 + [56]) = $7
	*($4) = $8
	*($4 + [48]) = $8
	*($4 + [8]) = $7
	CALL $545(($4 + [32]), $4)
	CALL $546(($4 + [48]), $2, $3)
	$1 = *($4 + [48])
	$2 = ($1 & [1])
	$1 = CALL $716(($4 + [32]), ( *($4 + [56]) ? (($4 + [48]) | [1]) : $2 ), ( *($4 + [52]) ? uint_32($1 >> [1]) : $2 ))
	$7 = *($1)
	*($1) = (int_64)0
	*($0) = $7
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*((($4 + [48]) + [8])))
	
.LABEL $label$1
	if ( ((*($4 + [32]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [40]))
	
.LABEL $label$2
	$global$0 = ($4 + [80])
}

void .FUNC $547 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($1)
	if ( ((int_64)$4 == (int_64)0) ){ goto $label$4 }
	$5 = [0]
	$6 = *([0] + [23024])
	
.LOOP $label$6:
	*((($3 + [16]) + ($1 = $5))) = *(($6 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$4 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$5 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$5 }
	$4 = ((int_64)$4 << (int_64)5)
	if ( ((int_64)$4 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$3 }
	*($3) = ($5 << [1])
	$6 = ($3 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$1 = ($3 | [1])
	goto $label$1 
	
.LABEL $label$3
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($3) = ($7 | [1])
	*($3 + [8]) = $6
	*($3 + [4]) = $5
	
.LABEL $label$2
	$7 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$7:
	*(($6 + $1)) = *((($3 + [16]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$7 }
	$1 = ($6 + $5)
	
.LABEL $label$1
	*($1) = [0]
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$1 = CALL $743($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$11 }
	*($3 + [16]) = ($1 << [1])
	$6 = (($3 + [16]) | [1])
	$5 = $6
	if ( $1 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	$6 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $1
	$6 = (($3 + [16]) | [1])
	
.LABEL $label$10
	CALL memcpy($5, $2, $1)
	
.LABEL $label$9
	*(($5 + $1)) = [0]
	$1 = *($3 + [16])
	$5 = ($1 & [1])
	$1 = CALL $716($3, ( *($3 + [24]) ? $6 : $5 ), ( *($3 + [20]) ? uint_32($1 >> [1]) : $5 ))
	$4 = *($1)
	*($1) = (int_64)0
	*($0) = $4
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*((($3 + [16]) + [8])))
	
.LABEL $label$12
	if ( ((*($3) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$13
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$8
	CALL $708(($3 + [16]))
}

int_32 .FUNC $230 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	*($2) = *(($7 + [8]))
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $417 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([88])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64 align=4]) = (int_64)0
	*($5 + [72]) = [0]
	*($5 + [76]) = $0
	CALL $612(($3 + [32]), $5)
	*($5 + [84]) = [-1]
	*($5 + [80]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $472(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [64])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [68])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $115 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [144])
	$global$0 = $1
	*($0 + [8 align=4]) = (int_64)0
	*($0) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($1 + [8]) = (int_64)1397703940
	*($1) = (int_64)1000
	$2 = ($0 + [20])
	$3 = ($0 + [8])
	$4 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$5 }
	$4 = $6
	$7 = $5
	goto $label$4 
	
.LABEL $label$5
	$4 = $6
	
.LOOP $label$6:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$6 }
	
.LABEL $label$4
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [22633])
	
.LABEL $label$1
	*(($1 + [24])) = (int_64)87167674696196
	*($1 + [16]) = (int_64)10000
	$4 = (int_64)340498729282
	$5 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$4 = $6
	$7 = $5
	goto $label$10 
	
.LABEL $label$11
	$4 = $6
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$12 }
	
.LABEL $label$10
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [22633])
	
.LABEL $label$7
	*(($1 + [40])) = (int_64)383347609608
	*($1 + [32]) = (int_64)100000000
	$4 = (int_64)1497451600
	$5 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$17 }
	$4 = $6
	$7 = $5
	goto $label$16 
	
.LABEL $label$17
	$4 = $6
	
.LOOP $label$18:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$14 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$18 }
	
.LABEL $label$16
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	CALL eosio_assert([0], [22633])
	
.LABEL $label$13
	*(($1 + [56])) = (int_64)293455873288
	*($1 + [48]) = (int_64)1000000
	$4 = (int_64)1146312005
	$5 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$23 }
	$4 = $6
	$7 = $5
	goto $label$22 
	
.LABEL $label$23
	$4 = $6
	
.LOOP $label$24:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$24 }
	
.LABEL $label$22
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [22633])
	
.LABEL $label$19
	*(($1 + [72])) = (int_64)289176438024
	*($1 + [64]) = (int_64)1000
	$4 = (int_64)1129595461
	$5 = [0]
	
.LOOP $label$27:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$26 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$29 }
	$4 = $6
	$7 = $5
	goto $label$28 
	
.LABEL $label$29
	$4 = $6
	
.LOOP $label$30:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$26 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$30 }
	
.LABEL $label$28
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	CALL eosio_assert([0], [22633])
	
.LABEL $label$25
	*(($1 + [88])) = (int_64)310651471112
	*($1 + [80]) = (int_64)100000
	$4 = (int_64)1213482309
	$5 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$4 = $6
	$7 = $5
	goto $label$34 
	
.LABEL $label$35
	$4 = $6
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$36 }
	
.LABEL $label$34
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	CALL eosio_assert([0], [22633])
	
.LABEL $label$31
	*(($1 + [104])) = (int_64)4994016260158475524
	*($1 + [96]) = (int_64)10000
	$4 = (int_64)19507876016244045
	$5 = [0]
	
.LOOP $label$39:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$38 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$41 }
	$4 = $6
	$7 = $5
	goto $label$40 
	
.LABEL $label$41
	$4 = $6
	
.LOOP $label$42:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$38 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$42 }
	
.LABEL $label$40
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$38
	CALL eosio_assert([0], [22633])
	
.LABEL $label$37
	*(($1 + [120])) = (int_64)1414550532
	*($1 + [112]) = (int_64)10000
	$4 = (int_64)5525588
	$5 = [0]
	
.LOOP $label$45:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$44 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$47 }
	$4 = $6
	$7 = $5
	goto $label$46 
	
.LABEL $label$47
	$4 = $6
	
.LOOP $label$48:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$44 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$48 }
	
.LABEL $label$46
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$45 }
	goto $label$43 
	
.LABEL $label$44
	CALL eosio_assert([0], [22633])
	
.LABEL $label$43
	*(($1 + [136])) = (int_64)1413697284
	*($1 + [128]) = (int_64)10000
	$4 = (int_64)5522255
	$5 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$53 }
	$4 = $6
	$7 = $5
	goto $label$52 
	
.LABEL $label$53
	$4 = $6
	
.LOOP $label$54:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$50 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$54 }
	
.LABEL $label$52
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [22633])
	
.LABEL $label$49
	CALL $503($3, $1, ($1 + [144]))
	*($1 + [8]) = (int_64)1397703940
	*($1) = (int_64)300000
	$4 = (int_64)5459781
	$5 = [0]
	
.LOOP $label$57:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$56 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$59 }
	$4 = $6
	$7 = $5
	goto $label$58 
	
.LABEL $label$59
	$4 = $6
	
.LOOP $label$60:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$56 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$60 }
	
.LABEL $label$58
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$56
	CALL eosio_assert([0], [22633])
	
.LABEL $label$55
	*(($1 + [24])) = (int_64)87167674696196
	*($1 + [16]) = (int_64)10000000000
	$4 = (int_64)340498729282
	$5 = [0]
	
.LOOP $label$63:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$65 }
	$4 = $6
	$7 = $5
	goto $label$64 
	
.LABEL $label$65
	$4 = $6
	
.LOOP $label$66:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$62 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$66 }
	
.LABEL $label$64
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$63 }
	goto $label$61 
	
.LABEL $label$62
	CALL eosio_assert([0], [22633])
	
.LABEL $label$61
	*(($1 + [40])) = (int_64)383347609608
	*($1 + [32]) = (int_64)10000000000
	$4 = (int_64)1497451600
	$5 = [0]
	
.LOOP $label$69:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$68 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$71 }
	$4 = $6
	$7 = $5
	goto $label$70 
	
.LABEL $label$71
	$4 = $6
	
.LOOP $label$72:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$68 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$72 }
	
.LABEL $label$70
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$69 }
	goto $label$67 
	
.LABEL $label$68
	CALL eosio_assert([0], [22633])
	
.LABEL $label$67
	*(($1 + [56])) = (int_64)293455873288
	*($1 + [48]) = (int_64)1000000000
	$4 = (int_64)1146312005
	$5 = [0]
	
.LOOP $label$75:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$74 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$77 }
	$4 = $6
	$7 = $5
	goto $label$76 
	
.LABEL $label$77
	$4 = $6
	
.LOOP $label$78:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$74 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$78 }
	
.LABEL $label$76
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$75 }
	goto $label$73 
	
.LABEL $label$74
	CALL eosio_assert([0], [22633])
	
.LABEL $label$73
	*(($1 + [72])) = (int_64)289176438024
	*($1 + [64]) = (int_64)1000000
	$4 = (int_64)1129595461
	$5 = [0]
	
.LOOP $label$81:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$80 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$83 }
	$4 = $6
	$7 = $5
	goto $label$82 
	
.LABEL $label$83
	$4 = $6
	
.LOOP $label$84:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$80 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$84 }
	
.LABEL $label$82
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$81 }
	goto $label$79 
	
.LABEL $label$80
	CALL eosio_assert([0], [22633])
	
.LABEL $label$79
	*(($1 + [88])) = (int_64)310651471112
	*($1 + [80]) = (int_64)10000000
	$4 = (int_64)1213482309
	$5 = [0]
	
.LOOP $label$87:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$86 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$89 }
	$4 = $6
	$7 = $5
	goto $label$88 
	
.LABEL $label$89
	$4 = $6
	
.LOOP $label$90:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$86 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$90 }
	
.LABEL $label$88
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$87 }
	goto $label$85 
	
.LABEL $label$86
	CALL eosio_assert([0], [22633])
	
.LABEL $label$85
	*(($1 + [104])) = (int_64)4994016260158475524
	*($1 + [96]) = (int_64)1000000
	$4 = (int_64)19507876016244045
	$5 = [0]
	
.LOOP $label$93:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$92 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$95 }
	$4 = $6
	$7 = $5
	goto $label$94 
	
.LABEL $label$95
	$4 = $6
	
.LOOP $label$96:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$92 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$96 }
	
.LABEL $label$94
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$93 }
	goto $label$91 
	
.LABEL $label$92
	CALL eosio_assert([0], [22633])
	
.LABEL $label$91
	*(($1 + [120])) = (int_64)1414550532
	*($1 + [112]) = (int_64)1000000
	$4 = (int_64)5525588
	$5 = [0]
	
.LOOP $label$99:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$98 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$101 }
	$4 = $6
	$7 = $5
	goto $label$100 
	
.LABEL $label$101
	$4 = $6
	
.LOOP $label$102:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$98 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$102 }
	
.LABEL $label$100
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$99 }
	goto $label$97 
	
.LABEL $label$98
	CALL eosio_assert([0], [22633])
	
.LABEL $label$97
	*(($1 + [136])) = (int_64)1413697284
	*($1 + [128]) = (int_64)1000000
	$4 = (int_64)5522255
	$5 = [0]
	
.LOOP $label$105:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$104 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$107 }
	$4 = $6
	$7 = $5
	goto $label$106 
	
.LABEL $label$107
	$4 = $6
	
.LOOP $label$108:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$104 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$8 = ((int_32)$5 < (int_32)[6])
	$7 = ($5 + [1])
	$5 = $7
	if ( $8 ){ goto $label$108 }
	
.LABEL $label$106
	$5 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$105 }
	goto $label$103 
	
.LABEL $label$104
	CALL eosio_assert([0], [22633])
	
.LABEL $label$103
	CALL $503($2, $1, ($1 + [144]))
	*($0 + [32]) = [0]
	$global$0 = ($1 + [144])
	return $0
}

void .FUNC $144 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [176])
	$global$0 = $2
	CALL $141(($2 + [48]), $0, *($1 + [60]))
	$3 = *($2 + [88])
	if ( ($3 == 0) ){ goto $label$1 }
	*(($2 + [92])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$4 = ($1 + [60])
	if ( ((*($2 + [52]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*(($2 + [60])))
	
.LABEL $label$2
	$3 = *($4)
	if ( ((uint_32)($3 + [-2]) >= (uint_32)[3]) ){ goto $label$3 }
	$6 = (CASTING uint_64)(uint_32 $3)
	$5 = *($1 + [64])
	if ( ((int_64)$5 == (int_64)$6) ){ goto $label$4 }
	$3 = ($1 + [64])
	CALL $281(($2 + [112]), [17403], $3, [17465], $4)
	if ( (*($2 + [112]) & [1]) ){ goto $label$6 }
	$7 = (($2 + [112]) | [1])
	goto $label$5 
	
.LABEL $label$6
	$7 = *($2 + [120])
	CALL _ZdlPv($7)
	
.LABEL $label$5
	CALL eosio_assert([0], $7)
	$6 = *($4)
	$5 = *($3)
	
.LABEL $label$4
	*($2 + [160]) = $0
	*(($3 = CALL _Znwj([16])) + [8]) = $6
	*($3) = $5
	CALL sha256($3, [16], ($2 + [112]))
	*($2 + [112]) = *($2 + [112])
	CALL $282(($2 + [168]), ($2 + [160]), ($2 + [112]))
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$3 = *($2 + [172])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $283(($2 + [112]), [17469], ($3 + [60]), [17491], ($3 + [16]))
	if ( (*($2 + [112]) & [1]) ){ goto $label$9 }
	$3 = (($2 + [112]) | [1])
	goto $label$8 
	
.LABEL $label$9
	$3 = *($2 + [120])
	CALL _ZdlPv($3)
	
.LABEL $label$8
	CALL eosio_assert([0], $3)
	
.LABEL $label$3
	*($2 + [40]) = $0
	$5 = *(($1 + [24]))
	$6 = *($1 + [16])
	*($2 + [168]) = (int_64)0
	*($2 + [120]) = $5
	*($2 + [112]) = $6
	$3 = [0]
	$7 = CALL db_idx128_lowerbound(*($0), *($0 + [8]), (int_64)-3022886516901806080, ($2 + [112]), ($2 + [168]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	CALL $284(($2 + [160]), $0, *($2 + [168]))
	*((($3 = *($2 + [164])) + [88])) = $7
	
.LABEL $label$10
	if ( ($3 == 0) ){ goto $label$12 }
	$8 = *($3 + [16])
	$9 = *(($3 + [24]))
	*($2 + [160]) = ($2 + [40])
	if ( (int_64)(((int_64)((int_64)$6 ^ (int_64)$8) | (int_64)((int_64)$5 ^ (int_64)$9)) == 0) ){ goto $label$13 }
	$3 = [0]
	
.LABEL $label$13
	*($2 + [164]) = $3
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	*($2 + [164]) = [0]
	*($2 + [160]) = ($2 + [40])
	
.LABEL $label$11
	if ( ((int_32)*($4) != (int_32)[6]) ){ goto $label$15 }
	if ( ((int_64)*($3) == (int_64)*($1)) ){ goto $label$16 }
	CALL eosio_assert([0], [17519])
	
.LABEL $label$16
	CALL $285(($2 + [160]))
	$0 = *($2 + [164])
	if ( ($0 == 0) ){ goto $label$14 }
	if ( ((int_64)((int_64)((int_64)*($0 + [16]) ^ (int_64)*(($1 + [16]))) | (int_64)((int_64)*(($0 + [24])) ^ (int_64)*(($1 + [24])))) != (int_64)0) ){ goto $label$14 }
	CALL eosio_assert([0], [17519])
	goto $label$14 
	
.LABEL $label$15
	if ( ($3 == 0) ){ goto $label$17 }
	CALL eosio_assert([0], [17519])
	
.LABEL $label$17
	*($2 + [24]) = [8617]
	*($2 + [28]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [24])
	$3 = CALL $10(($2 + [32]), ($2 + [8]))
	*($2 + [16]) = $1
	*($2 + [168]) = *($3)
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$18 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$18
	*($2 + [112]) = $0
	*($2 + [116]) = ($2 + [16])
	*($2 + [120]) = ($2 + [168])
	*(($1 = CALL _Znwj([112])) + [56]) = [0]
	*($1 + [48 align=4]) = (int_64)0
	*($1 + [72]) = (int_64)0
	*($1 + [80]) = $0
	CALL $286(($2 + [112]), $1)
	*($2 + [152]) = $1
	$5 = *($1)
	*($2 + [112]) = $5
	$4 = *($1 + [84])
	*($2 + [148]) = $4
	$7 = ($0 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [32]))) ){ goto $label$20 }
	*($3 + [8]) = $5
	*($3 + [16]) = $4
	*($2 + [152]) = [0]
	*($3) = $1
	*($7) = ($3 + [24])
	goto $label$19 
	
.LABEL $label$20
	CALL $179(($0 + [24]), ($2 + [152]), ($2 + [112]), ($2 + [148]))
	
.LABEL $label$19
	$0 = *($2 + [152])
	*($2 + [152]) = [0]
	if ( ($0 == 0) ){ goto $label$14 }
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$21 }
	*(($0 + [52])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$21
	CALL _ZdlPv($0)
	
.LABEL $label$14
	$global$0 = ($2 + [176])
}

int_32 .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([80])) + [56]) = [0]
	*($5 + [48 align=4]) = (int_64)0
	*($5) = [0]
	*($5 + [8]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [64]) = $0
	CALL $548(($3 + [32]), $5)
	*($5 + [68]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)-7297072577464238080
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)-7297072577464238080
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $549(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [48])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [52])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $415 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	int_64 $16
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *(*($5))
	*(($7 = CALL _Znwj([1]))) = $6
	$6 = ($7 + [1])
	$8 = *($1 + [24])
	if ( ($8 == 0) ){ goto $label$2 }
	*(($1 + [28])) = $8
	CALL _ZdlPv($8)
	*(($8 = ($1 + [32]))) = [0]
	*($1 + [24 align=4]) = (int_64)0
	goto $label$1 
	
.LABEL $label$2
	$8 = ($1 + [32])
	
.LABEL $label$1
	*($8) = $6
	*(($1 + [28])) = $6
	*(($1 + [24])) = $7
	$7 = *(*($5 + [4]) + [4])
	*($1) = *($7 + [16])
	*(($1 + [16])) = *(($7 + [32]))
	*(($1 + [8])) = *(($7 + [24]))
	*(($7 = CALL _Znwj([8]))) = (int_64)0
	$6 = ($7 + [8])
	$8 = *($1 + [48])
	if ( ($8 == 0) ){ goto $label$4 }
	*(($1 + [52])) = $8
	CALL _ZdlPv($8)
	*(($8 = ($1 + [56]))) = [0]
	*($1 + [48 align=4]) = (int_64)0
	goto $label$3 
	
.LABEL $label$4
	$8 = ($1 + [56])
	
.LABEL $label$3
	*($8) = $6
	*(($1 + [52])) = $6
	*(($1 + [48])) = $7
	$7 = *(*(($5 + [4])) + [4])
	*(($6 = (($3 + [16]) + [8]))) = *(($7 + [56]))
	*($3 + [16]) = *($7 + [48])
	*((($7 = CALL _Znwj([16])) + [8])) = *($6)
	*($7) = *($3 + [16])
	$6 = ($7 + [16])
	$8 = *($1 + [36])
	if ( ($8 == 0) ){ goto $label$6 }
	*(($1 + [40])) = $8
	CALL _ZdlPv($8)
	*(($8 = ($1 + [44]))) = [0]
	*($1 + [36 align=4]) = (int_64)0
	goto $label$5 
	
.LABEL $label$6
	$8 = ($1 + [44])
	
.LABEL $label$5
	*($8) = $6
	*(($1 + [40])) = $6
	*(($1 + [36])) = $7
	$9 = *(*(*(($5 + [4])) + [4]) + [8])
	*(($7 = CALL _Znwj([8]))) = $9
	$6 = ($7 + [8])
	$8 = *($1 + [60])
	if ( ($8 == 0) ){ goto $label$8 }
	*(($1 + [64])) = $8
	CALL _ZdlPv($8)
	*(($8 = ($1 + [68]))) = [0]
	*($1 + [60 align=4]) = (int_64)0
	goto $label$7 
	
.LABEL $label$8
	$8 = ($1 + [68])
	
.LABEL $label$7
	*($8) = $6
	*(($1 + [64])) = $6
	*(($1 + [60])) = $7
	$7 = *(*($5 + [8]) + [60])
	*(($5 = CALL _Znwj([4]))) = $7
	$7 = ($5 + [4])
	$6 = *($1 + [72])
	if ( ($6 == 0) ){ goto $label$10 }
	*(($1 + [76])) = $6
	CALL _ZdlPv($6)
	*(($6 = ($1 + [80]))) = [0]
	*($1 + [72 align=4]) = (int_64)0
	goto $label$9 
	
.LABEL $label$10
	$6 = ($1 + [80])
	
.LABEL $label$9
	$8 = ($1 + [24])
	$10 = ($1 + [48])
	$11 = ($1 + [36])
	$12 = ($1 + [60])
	$13 = ($1 + [72])
	*($6) = $7
	*(($1 + [76])) = $7
	*(($1 + [72])) = $5
	*($3 + [16]) = [0]
	CALL $626(($3 + [16]), $1)
	$7 = *($3 + [16])
	if ( ($7 <= [513]) ){ goto $label$12 }
	$5 = CALL $746($7)
	goto $label$11 
	
.LABEL $label$12
	$5 = ($2 - (($7 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$11
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $7)
	CALL $627(CALL $553(CALL $553(CALL $230(CALL $522(CALL $156($3, $1), $8), $11), $10), $12), $13)
	$9 = (int_64)0
	$14 = *($1 + [8])
	$16 = *($1)
	$15 = *($1 + [16])
	if ( ((int_64)((int_64)$15 | (int_64)$16) != (int_64)0) ){ goto $label$14 }
	$15 = (int_64)0
	if ( (int_64)($14 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	*(($6 = CALL _Znwj([24])) + [8]) = $14
	*($6) = $16
	*($6 + [16]) = $15
	CALL sha256($6, [24], ($3 + [16]))
	$9 = *($3 + [16])
	if ( ($6 == 0) ){ goto $label$13 }
	CALL _ZdlPv($6)
	
.LABEL $label$13
	*($1 + [88]) = CALL db_store_i64(*($4 + [8]), (int_64)-4293738237509062656, *(*($0 + [8])), $9, $5, $7)
	if ( ($7 <= [513]) ){ goto $label$15 }
	CALL $749($5)
	
.LABEL $label$15
	if ( (uint_64)($9 <= *($4 + [16])) ){ goto $label$16 }
	*(($4 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$global$0 = ($3 + [48])
}

int_32 .FUNC $237 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [4])
	*(($2 = ($0 + [4]))) = (*($2) + [4])
	$3 = ($1 + [16])
	$2 = *($0 + [4])
	$0 = CALL $184($0, ($1 + [4]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $2, [8])
	$2 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [24])
	$4 = ($0 + [8])
	if ( ((int_32)*($4) != (int_32)$2) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$5 = ($1 + [25])
	if ( ((int_32)*($4) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	$3 = (*($2) + [1])
	*($2) = $3
	$2 = ($1 + [26])
	$4 = ($0 + [8])
	if ( ((int_32)*($4) != (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $3, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$5 = ($1 + [32])
	if ( ((uint_32)(*($4) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($5, $3, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [52])
	$2 = *($0 + [4])
	$0 = CALL $537($0, ($1 + [40]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$7 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [56])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$8
	CALL memcpy($1, $3, [8])
	*($2) = (*($2) + [8])
	return $0
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [64]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-7297072577464238080, (int_64)-7297072577464238080)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $112($0, $4)
	if ( ((int_32)*($4 + [64]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $271($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $272($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $414 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [32])
	$global$0 = $3
	$5 = *(($1 + [28]))
	$4 = *($1 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$6 = $5
	
.LOOP $label$3:
	$6 = ($6 + [-24])
	$7 = *($6)
	$8 = *($7 + [8])
	$10 = *($7)
	$9 = *($7 + [16])
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$5 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($7 = CALL _Znwj([24])) + [8]) = $8
	*($7) = $10
	*($7 + [16]) = $9
	CALL sha256($7, [24], $3)
	$9 = *($3)
	if ( ($7 == 0) ){ goto $label$4 }
	CALL _ZdlPv($7)
	
.LABEL $label$4
	if ( ((int_64)$9 == (int_64)$2) ){ goto $label$1 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$3 }
	
.LABEL $label$2
	$5 = $4
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)*(($1 + [24]))) ){ goto $label$7 }
	$7 = *(($5 + [-24]))
	if ( ((int_32)*($7 + [84]) == (int_32)$1) ){ goto $label$8 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$8
	*($0 + [4]) = $7
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4293738237509062656, $2)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$9 }
	$7 = CALL $424($1, $7)
	if ( ((int_32)*($7 + [84]) == (int_32)$1) ){ goto $label$10 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$10
	*($0 + [4]) = $7
	goto $label$6 
	
.LABEL $label$9
	*($0 + [4]) = [0]
	
.LABEL $label$6
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $110 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [48])
	$global$0 = $1
	*($1 + [32]) = [8617]
	*($1 + [36]) = CALL $743([8617])
	*($1 + [8]) = *($1 + [32])
	if ( CALL has_auth(*(CALL $10(($1 + [40]), ($1 + [8])))) ){ goto $label$1 }
	*($1 + [16]) = [21217]
	*($1 + [20]) = CALL $743([21217])
	*($1) = *($1 + [16])
	if ( CALL has_auth(*(CALL $10(($1 + [24]), $1))) ){ goto $label$1 }
	CALL eosio_assert([0], [21230])
	
.LABEL $label$1
	$global$0 = ($1 + [48])
}

void .FUNC $413 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [48]
	*($2 + [16]) = [48]
	$5 = *($1 + [48])
	$4 = *(($1 + [52]))
	$6 = ($4 - $5)
	$7 = (CASTING uint_64)(uint_32 $6)
	*($2 + [24]) = ($2 + [16])
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	*($2 + [16]) = ( $3 ? ($6 + $3) : ((int_32)$5 == (int_32)$4) )
	*($2) = $1
	CALL $618($2, ($2 + [24]))
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$3 }
	CALL $11($0, $3)
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$2 
	
.LABEL $label$3
	$4 = [0]
	$3 = [0]
	
.LABEL $label$2
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	*($2 + [16]) = $2
	*($2 + [24]) = $1
	CALL $619(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [32])
}

int_32 .FUNC $111 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [288])
	$global$0 = $1
	*($1 + [272]) = [8617]
	*($1 + [276]) = CALL $743([8617])
	*($1 + [104]) = *($1 + [272])
	$2 = CALL $10(($1 + [280]), ($1 + [104]))
	*($1 + [256]) = [8617]
	*($1 + [260]) = CALL $743([8617])
	*($1 + [96]) = *($1 + [256])
	CALL $10(($1 + [264]), ($1 + [96]))
	*($0 + [8]) = (int_64)4298345121774150816
	*($0 + [16]) = (int_64)-1
	*($0 + [24 align=4]) = (int_64)0
	*(($0 + [32])) = (int_64)0
	*($0) = *($2)
	*($1 + [240]) = [8617]
	*($1 + [244]) = CALL $743([8617])
	*($1 + [88]) = *($1 + [240])
	$2 = CALL $10(($1 + [248]), ($1 + [88]))
	*($1 + [232]) = [8617]
	*($1 + [236]) = CALL $743([8617])
	*($1 + [80]) = *($1 + [232])
	CALL $10(($1 + [264]), ($1 + [80]))
	*(($0 + [48])) = (int_64)4298345121774150816
	*(($0 + [56])) = (int_64)-1
	*(($0 + [64])) = (int_64)0
	*(($0 + [72])) = [0]
	*($0 + [40]) = *($2)
	*($1 + [216]) = [8617]
	*($1 + [220]) = CALL $743([8617])
	*($1 + [72]) = *($1 + [216])
	$2 = CALL $10(($1 + [224]), ($1 + [72]))
	*($1 + [208]) = [8617]
	*($1 + [212]) = CALL $743([8617])
	*($1 + [64]) = *($1 + [208])
	CALL $10(($1 + [264]), ($1 + [64]))
	*(($0 + [88])) = (int_64)4298345121774150816
	*(($0 + [96])) = (int_64)-1
	*(($0 + [104])) = (int_64)0
	*(($0 + [112])) = [0]
	*($0 + [80]) = *($2)
	*($1 + [192]) = [8617]
	*($1 + [196]) = CALL $743([8617])
	*($1 + [56]) = *($1 + [192])
	$2 = CALL $10(($1 + [200]), ($1 + [56]))
	*($1 + [184]) = [8617]
	*($1 + [188]) = CALL $743([8617])
	*($1 + [48]) = *($1 + [184])
	CALL $10(($1 + [264]), ($1 + [48]))
	*(($0 + [128])) = (int_64)4298345121774150816
	*(($0 + [136])) = (int_64)-1
	*(($0 + [144])) = (int_64)0
	*(($0 + [152])) = [0]
	*(($0 + [156])) = [0]
	*($0 + [120]) = *($2)
	*($1 + [168]) = [8617]
	*($1 + [172]) = CALL $743([8617])
	*($1 + [40]) = *($1 + [168])
	$2 = CALL $10(($1 + [176]), ($1 + [40]))
	*($1 + [160]) = [8617]
	*($1 + [164]) = CALL $743([8617])
	*($1 + [32]) = *($1 + [160])
	CALL $10(($1 + [264]), ($1 + [32]))
	*(($0 + [168])) = (int_64)4298345121774150816
	*(($0 + [176])) = (int_64)-1
	*(($0 + [184])) = (int_64)0
	*(($0 + [192])) = [0]
	*($0 + [160]) = *($2)
	*($1 + [144]) = [8617]
	*($1 + [148]) = CALL $743([8617])
	*($1 + [24]) = *($1 + [144])
	$2 = CALL $10(($1 + [152]), ($1 + [24]))
	*($1 + [136]) = [8617]
	*($1 + [140]) = CALL $743([8617])
	*($1 + [16]) = *($1 + [136])
	CALL $10(($1 + [264]), ($1 + [16]))
	*(($0 + [208])) = (int_64)4298345121774150816
	*(($0 + [216])) = (int_64)-1
	*(($0 + [224])) = (int_64)0
	*(($0 + [232])) = [0]
	*(($0 + [236])) = [0]
	*($0 + [200]) = *($2)
	*($1 + [120]) = [8617]
	*($1 + [124]) = CALL $743([8617])
	*($1 + [8]) = *($1 + [120])
	$2 = CALL $10(($1 + [128]), ($1 + [8]))
	*($1 + [112]) = [8617]
	*($1 + [116]) = CALL $743([8617])
	*($1) = *($1 + [112])
	CALL $10(($1 + [264]), $1)
	*(($0 + [248])) = (int_64)4298345121774150816
	*(($0 + [256])) = (int_64)-1
	*(($0 + [264])) = (int_64)0
	*(($0 + [272])) = [0]
	*($0 + [240]) = *($2)
	$global$0 = ($1 + [288])
	return $0
}

int_32 .FUNC $412 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ($global$0 - [16])
	$global$0 = $1
	*(($1 + [8])) = [0]
	*($1) = (int_64)0
	$2 = CALL $743($0)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($1) = ($2 << [1])
	$3 = ($1 | [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$3 = CALL _Znwj($4)
	*($1) = ($4 | [1])
	*($1 + [8]) = $3
	*($1 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($3, $0, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($1) & [1]) ){ goto $label$6 }
	$2 = ($1 | [1])
	goto $label$5 
	
.LABEL $label$6
	$2 = *($1 + [8])
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($1 + [16])
	return $2
	
.LABEL $label$1
	CALL $708($1)
	return (unreachable)
}

void .FUNC $303 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)*($0 + [24])) ){ goto $label$5 }
	$4 = ($3 + [-24])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [29265])
	$5 = *($2)
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$6 }
	$2 = $3
	
.LOOP $label$7:
	$4 = *($2)
	*($2) = [0]
	$6 = ($2 + [-24])
	$3 = *($6)
	*($6) = $4
	if ( ($3 == 0) ){ goto $label$8 }
	CALL _ZdlPv($3)
	
.LABEL $label$8
	*(($2 + [-8])) = *(($2 + [16]))
	*(($2 + [-16])) = *(($2 + [8]))
	$2 = ($2 + [24])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$7 }
	$4 = ($2 + [-24])
	$3 = *(($0 + [28]))
	if ( ((int_32)($3 + [24]) != (int_32)$2) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	$4 = ($3 + [-24])
	
.LABEL $label$4
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$2 = *($3)
	*($3) = [0]
	if ( ($2 == 0) ){ goto $label$10 }
	CALL _ZdlPv($2)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$3
	*(($0 + [28])) = $4
	CALL db_remove_i64(*($1 + [52]))
}

int_32 .FUNC $302 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([64])) + [40]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = $0
	CALL $573(($3 + [32]), $5)
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)8516495933114040320
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)8516495933114040320
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $574(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $301 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $571($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $300 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$4
	CALL memcpy($5, $1, $4)
	
.LABEL $label$3
	*(($5 + $4)) = [0]
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$2 = *($2)
	$4 = CALL $743($2)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$8 }
	*($3) = ($4 << [1])
	$1 = ($3 | [1])
	$5 = $1
	if ( $4 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$1 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($1)
	*($3) = ($1 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	$1 = ($3 | [1])
	
.LABEL $label$7
	CALL memcpy($5, $2, $4)
	
.LABEL $label$6
	*(($5 + $4)) = [0]
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $1 : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$9
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$10
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $708(($3 + [16]))
	
.LABEL $label$1
	CALL $708($3)
	(unreachable)
}

void .FUNC $307 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [40])
	$4 = ( *(($1 + [44])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-40] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [52])
	$4 = ( *(($1 + [56])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = ($3 - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$2:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $11($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	
.LABEL $label$3
	*($2 + [12]) = $3
	*($2 + [8]) = $3
	*($2 + [16]) = $4
	*($2 + [24]) = ($2 + [8])
	CALL $581($1, ($2 + [24]))
	$global$0 = ($2 + [32])
}

void .FUNC $411 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [40]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4293732427722915840, (int_64)-4293732427722915840)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $419($0, $4)
	if ( ((int_32)*($4 + [40]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $422($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $423($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $305 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $579($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $304 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$7 = ($global$0 - [32])
	$global$0 = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$8 = CALL $743($1)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($8 << [1])
	$9 = (($7 + [16]) | [1])
	if ( $8 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($7 + [16]) = ($10 | [1])
	*($7 + [24]) = $9
	*($7 + [20]) = $8
	
.LABEL $label$3
	CALL memcpy($9, $1, $8)
	
.LABEL $label$2
	*(($9 + $8)) = [0]
	CALL $575($7, $2, $3, $4, $5, $6)
	$8 = *($7)
	$9 = ($8 & [1])
	$8 = CALL $716(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $9 ), ( *($7 + [4]) ? uint_32($8 >> [1]) : $9 ))
	$11 = *($8)
	*($8) = (int_64)0
	*($0) = $11
	$8 = ($8 + [8])
	*(($0 + [8])) = *($8)
	*($8) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($7 + [24]))
	
.LABEL $label$6
	$global$0 = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($7 + [16]))
}

void .FUNC $309 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$5 = ($global$0 - [96])
	$global$0 = $5
	if ( ($4 == 0) ){ goto $label$2 }
	$6 = (int_64)0
	$7 = *($2 + [8])
	$9 = *($2)
	$8 = *($2 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($4 = CALL _Znwj([24])) + [8]) = $7
	*($4) = $9
	*($4 + [16]) = $8
	CALL sha256($4, [24], ($5 + [64]))
	$6 = *($5 + [64])
	if ( ($4 == 0) ){ goto $label$3 }
	CALL _ZdlPv($4)
	
.LABEL $label$3
	CALL $222($0, $1, $6)
	if ( *($0 + [4]) ){ goto $label$1 }
	
.LABEL $label$2
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((int_64)*($4) != (int_64)*($2)) ){ goto $label$5 }
	if ( ((int_64)*($4 + [8]) != (int_64)*($2 + [8])) ){ goto $label$5 }
	if ( ((int_64)*($4 + [16]) != (int_64)*($2 + [16])) ){ goto $label$5 }
	*($3) = $1
	*(($3 + [4])) = [0]
	
.LABEL $label$5
	*($5 + [24]) = [8617]
	*($5 + [28]) = CALL $743([8617])
	*($5) = *($5 + [24])
	$4 = CALL $10(($5 + [32]), $5)
	*($5 + [8]) = $3
	*($5 + [16]) = $2
	*($5 + [12]) = $1
	*($5 + [56]) = *($4)
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$6
	*($5 + [64]) = $1
	*($5 + [68]) = ($5 + [8])
	*($5 + [72]) = ($5 + [56])
	$6 = (int_64)0
	*(($2 = CALL _Znwj([96])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = (int_64)0
	*($2 + [40]) = (int_64)0
	*($2 + [48 align=4]) = (int_64)0
	*($2 + [56]) = [0]
	*($2 + [64]) = (int_64)0
	*($2 + [72]) = (int_64)0
	*($2 + [80]) = $1
	CALL $310(($5 + [64]), $2)
	*($5 + [48]) = $2
	$7 = *($2 + [8])
	$9 = *($2)
	$8 = *($2 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$8 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	*(($3 = CALL _Znwj([24])) + [8]) = $7
	*($3) = $9
	*($3 + [16]) = $8
	CALL sha256($3, [24], ($5 + [64]))
	$6 = *($5 + [64])
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	*($5 + [64]) = $6
	$4 = *($5 + [48])
	$10 = *($4 + [84])
	*($5 + [44]) = $10
	$11 = ($1 + [28])
	$3 = *($11)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$10 }
	*($3 + [8]) = $6
	*($3 + [16]) = $10
	*($5 + [48]) = [0]
	*($3) = $4
	*($11) = ($3 + [24])
	goto $label$9 
	
.LABEL $label$10
	CALL $311(($1 + [24]), ($5 + [48]), ($5 + [64]), ($5 + [44]))
	
.LABEL $label$9
	*($0 + [4]) = $2
	*($0) = $1
	$2 = *($5 + [48])
	*($5 + [48]) = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	$1 = *($2 + [48])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [52])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$global$0 = ($5 + [96])
}

void .FUNC $410 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *(($1 + [28]))
	if ( ((int_32)$5 == (int_32)*($1 + [24])) ){ goto $label$4 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [40]) == (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4293732427722915840, (int_64)-4293732427722915840)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $419($1, $5)
	if ( ((int_32)*($5 + [40]) == (int_32)$1) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	CALL $420($0, $5)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $3
	CALL $421($4, $1, $2, ($4 + [8]))
	CALL $420($0, *($4 + [4]))
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

void .FUNC $435 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($2)
	$5 = (*($2 + [4]) - $4)
	if ( ((int_32)$5 == (int_32)[8]) ){ goto $label$1 }
	*($3 + [8]) = int_32($5 >> [3])
	CALL $401(($3 + [16]), [19717], ($3 + [8]))
	if ( (*($3 + [16]) & [1]) ){ goto $label$3 }
	$4 = (($3 + [16]) | [1])
	goto $label$2 
	
.LABEL $label$3
	$4 = *($3 + [24])
	CALL _ZdlPv($4)
	
.LABEL $label$2
	CALL eosio_assert([0], $4)
	$4 = *($2)
	
.LABEL $label$1
	$5 = ($0 + [320])
	CALL $375(($3 + [8]), $5, *($4))
	$4 = *($3 + [12])
	if ( $4 ){ goto $label$4 }
	CALL $402(($3 + [16]), [20398], *($2))
	if ( (*($3 + [16]) & [1]) ){ goto $label$6 }
	$2 = (($3 + [16]) | [1])
	goto $label$5 
	
.LABEL $label$6
	$2 = *($3 + [24])
	CALL _ZdlPv($2)
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	$4 = *($3 + [12])
	
.LABEL $label$4
	CALL $432($0, $1, $4)
	$6 = *($3 + [8])
	$2 = (CASTING uint_32)(uint_64 (uint_64)$6 >> (uint_64)(int_64)32)
	if ( $2) ){ goto $label$7 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$7
	$0 = CALL db_next_i64(*($2 + [72]), ($3 + [16]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	CALL $436((CASTING uint_32)(uint_64 $6), $0)
	
.LABEL $label$8
	CALL $437($5, $2)
	$global$0 = ($3 + [32])
}

void .FUNC $434 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $156(*($1), ($0 + [8]))
	$3 = ($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [40]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($0 + [56])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
	$global$0 = ($2 + [16])
}

void .FUNC $437 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [68])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [72]))
	$9 = *($1 + [76])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-8173735248220127232, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $436 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([80])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [68]) = $0
	CALL $630(($3 + [32]), $5)
	*($5 + [76]) = [-1]
	*($5 + [72]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $469(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $431 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [84]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [88]))
	$9 = *($1 + [92])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4293738252348264448, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $430 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL _Znwj([96])) + [24]) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [84]) = $0
	CALL $628(($3 + [32]), $5)
	*($5 + [92]) = [-1]
	*($5 + [88]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $474(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $433 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $432 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	$3 = ($global$0 - [576])
	$global$0 = $3
	*($3 + [536]) = (int_64)0
	$4 = (int_64)0
	$5 = *($2 + [65])
	if ( ($5 == 0) ){ goto $label$1 }
	$4 = ((uint_64)((int_64)*($2 + [40]) + (int_64)*(*($1 + [48]))) % (uint_64)(int_64)10001)
	*($3 + [536]) = $4
	
.LABEL $label$1
	$6 = [0]
	CALL $380(($3 + [520]), $3, $4, *($2 + [64]), ((int_32)$5 != (int_32)[0]))
	$7 = ($2 + [16])
	if ( ((int_64)*($3 + [520]) == (int_64)0) ){ goto $label$4 }
	*((($3 + [496]) + [16])) = *(($7 + [16]))
	*((($3 + [496]) + [8])) = *(($7 + [8]))
	*($3 + [480]) = (int_64)0
	*($3 + [488]) = (int_64)1397703940
	*($3 + [496]) = *($7)
	$8 = *($1 + [60])
	$4 = (int_64)5459781
	
.LOOP $label$7:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$6 }
	$9 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$4 = $9
	$5 = $6
	goto $label$8 
	
.LABEL $label$9
	$4 = $9
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$6 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$1 = ((int_32)$6 < (int_32)[6])
	$5 = ($6 + [1])
	$6 = $5
	if ( $1 ){ goto $label$10 }
	
.LABEL $label$8
	$6 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [22633])
	
.LABEL $label$5
	$4 = *((($3 + [520]) + [8]))
	*((($3 + [464]) + [8])) = $4
	*((($3 + [128]) + [8])) = *((($3 + [496]) + [8]))
	*((($3 + [128]) + [16])) = *((($3 + [496]) + [16]))
	*((($3 + [112]) + [8])) = *((($3 + [480]) + [8]))
	*((($3 + [96]) + [8])) = $4
	$4 = *($3 + [520])
	*($3 + [464]) = $4
	*($3 + [128]) = *($3 + [496])
	*($3 + [112]) = *($3 + [480])
	*($3 + [96]) = $4
	CALL $386($3, ($3 + [128]), $8, ($3 + [112]), ($3 + [96]))
	CALL $433(($3 + [192]), [20276], ($3 + [536]))
	if ( (*($3 + [192]) & [1]) ){ goto $label$12 }
	$5 = (($3 + [192]) | [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($3 + [200])
	CALL _ZdlPv($5)
	
.LABEL $label$11
	*(($3 + [336])) = [0]
	*($3 + [328]) = (int_64)0
	$6 = CALL $743($5)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$15 }
	*($3 + [328]) = ($6 << [1])
	$1 = (($3 + [328]) | [1])
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$8 = (($6 + [16]) & [-16])
	$1 = CALL _Znwj($8)
	*($3 + [328]) = ($8 | [1])
	*($3 + [336]) = $1
	*($3 + [332]) = $6
	
.LABEL $label$14
	CALL memcpy($1, $5, $6)
	
.LABEL $label$13
	*(($1 + $6)) = [0]
	if ( *(($2 + [65])) ){ goto $label$16 }
	CALL $715(($3 + [328]), [20343])
	
.LABEL $label$16
	*((($3 + [408]) + [8])) = [0]
	*((($3 + [440]) + [16])) = *(($7 + [16]))
	*((($3 + [440]) + [8])) = *(($7 + [8]))
	*((($3 + [424]) + [8])) = *((($3 + [520]) + [8]))
	*($3 + [424]) = *($3 + [520])
	*($3 + [408]) = (int_64)0
	*($3 + [440]) = *($7)
	$5 = ( *($3 + [336]) ? (($3 + [328]) | [1]) : (*($3 + [328]) & [1]) )
	$6 = CALL $743($5)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$19 }
	*($3 + [408]) = ($6 << [1])
	$1 = (($3 + [408]) | [1])
	if ( $6 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	$8 = (($6 + [16]) & [-16])
	$1 = CALL _Znwj($8)
	*($3 + [408]) = ($8 | [1])
	*($3 + [416]) = $1
	*($3 + [412]) = $6
	
.LABEL $label$18
	CALL memcpy($1, $5, $6)
	
.LABEL $label$17
	*(($1 + $6)) = [0]
	*((($3 + [72]) + [16])) = *((($3 + [440]) + [16]))
	*((($3 + [72]) + [8])) = *((($3 + [440]) + [8]))
	*((($3 + [56]) + [8])) = *((($3 + [424]) + [8]))
	*($3 + [72]) = *($3 + [440])
	*($3 + [56]) = *($3 + [424])
	CALL $162(($3 + [72]), ($3 + [56]), ($3 + [408]), [0])
	if ( ((*($3 + [408]) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*($3 + [416]))
	
.LABEL $label$20
	$1 = ($0 + [400])
	CALL $361(($3 + [192]), $1)
	$6 = (*($3 + [208]) + (*(($2 + [64])) << [4]))
	if ( ((int_64)*($3 + [528]) == (int_64)*($6 + [8])) ){ goto $label$21 }
	CALL eosio_assert([0], [28618])
	
.LABEL $label$21
	$4 = ((int_64)*($6) + (int_64)*($3 + [520]))
	*($6) = $4
	if ( ((int_64)$4 > (int_64)-4611686018427387904) ){ goto $label$22 }
	CALL eosio_assert([0], [28661])
	$4 = *($6)
	
.LABEL $label$22
	if ( ((int_64)$4 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [28680])
	
.LABEL $label$23
	*($3 + [392]) = [8617]
	*($3 + [396]) = CALL $743([8617])
	*($3 + [48]) = *($3 + [392])
	CALL $123($1, ($3 + [192]), *(CALL $10(($3 + [400]), ($3 + [48]))))
	$6 = *($3 + [220])
	if ( ($6 == 0) ){ goto $label$24 }
	*(($3 + [224])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$24
	$6 = *(($3 + [208]))
	if ( ($6 == 0) ){ goto $label$25 }
	*(($3 + [212])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$25
	if ( ((*($3 + [328]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($3 + [336])))
	
.LABEL $label$4
	*((($3 + [368]) + [16])) = *(($7 + [16]))
	*((($3 + [368]) + [8])) = *(($7 + [8]))
	*($3 + [368]) = *($7)
	*($3 + [312]) = [8617]
	*($3 + [316]) = CALL $743([8617])
	*($3 + [40]) = *($3 + [312])
	$6 = CALL $10(($3 + [320]), ($3 + [40]))
	*($3 + [296]) = [8344]
	*($3 + [300]) = CALL $743([8344])
	*($3 + [32]) = *($3 + [296])
	$1 = CALL $10(($3 + [304]), ($3 + [32]))
	*($3 + [280]) = [8617]
	$4 = *($1)
	$9 = *($6)
	*($3 + [284]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [280])
	$6 = CALL $10(($3 + [288]), ($3 + [24]))
	if ( (*(($2 + [65])) == 0) ){ goto $label$27 }
	*($3 + [264]) = [20372]
	*($3 + [268]) = CALL $743([20372])
	*($3 + [16]) = *($3 + [264])
	CALL $10(($3 + [272]), ($3 + [16]))
	goto $label$26 
	
.LABEL $label$27
	*($3 + [256]) = [20385]
	*($3 + [260]) = CALL $743([20385])
	*($3 + [8]) = *($3 + [256])
	CALL $10(($3 + [272]), ($3 + [8]))
	
.LABEL $label$26
	$10 = *($2 + [8])
	*(($1 = (($3 + [168]) + [16]))) = *((($3 + [368]) + [16]))
	*(($5 = (($3 + [168]) + [8]))) = *((($3 + [368]) + [8]))
	*($3 + [168]) = *($3 + [368])
	$11 = *((($3 + [520]) + [8]))
	*((($3 + [152]) + [8])) = $11
	*((($3 + [192]) + [16])) = *($5)
	*((($3 + [192]) + [24])) = *($1)
	*(($3 + [232])) = $11
	*($3 + [192]) = $10
	$10 = *($3 + [520])
	*($3 + [152]) = $10
	*($3 + [200]) = *($3 + [168])
	*($3 + [224]) = $10
	*($3 + [240]) = *($3 + [536])
	*($3 + [248]) = *(($2 + [65]))
	*($3 + [328]) = *($6)
	*($3 + [336]) = *($3 + [272])
	*(($6 = CALL _Znwj([16]))) = $9
	*($6 + [8]) = $4
	*(($3 + [364])) = [0]
	$1 = ($6 + [16])
	*((($3 + [328]) + [24])) = $1
	*(($3 + [348])) = $1
	*($3 + [344]) = $6
	*($3 + [356 align=4]) = (int_64)0
	CALL $11(($3 + [356]), [57])
	$6 = *(($3 + [360]))
	$1 = *($3 + [356])
	*($3 + [564]) = $1
	*($3 + [560]) = $1
	*($3 + [568]) = $6
	*($3 + [544]) = ($3 + [560])
	*($3 + [552]) = ($3 + [192])
	CALL $434(($3 + [552]), ($3 + [544]))
	CALL $13(($3 + [560]), ($3 + [328]))
	$6 = *($3 + [560])
	CALL send_inline($6, (*($3 + [564]) - $6))
	$6 = *($3 + [560])
	if ( ($6 == 0) ){ goto $label$28 }
	*($3 + [564]) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$28
	$6 = *($3 + [356])
	if ( ($6 == 0) ){ goto $label$29 }
	*(($3 + [360])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$29
	$6 = *($3 + [344])
	if ( ($6 == 0) ){ goto $label$30 }
	*(($3 + [348])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$30
	$global$0 = ($3 + [576])
	return (unreachable)
	
.LABEL $label$3
	CALL $708(($3 + [328]))
	
.LABEL $label$2
	CALL $708(($3 + [408]))
	(unreachable)
}

int_32 .FUNC $439 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($6)
	$7 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($3 + [36])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $168(($3 + [32]), $8)
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $652(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $749($4)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $438 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	$3 = ($global$0 - [592])
	$global$0 = $3
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$16 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	if ( $1 ){ goto $label$15 }
	CALL $325(($3 + [320]), $0)
	if ( (*($3 + [340]) == 0) ){ goto $label$10 }
	$4 = ($0 + [40])
	CALL $337(($3 + [440]), $4, (int_64)-1)
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [40]), *(($0 + [48])), (int_64)8800273824458211328, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	CALL $439($4, $6)
	$4 = *($3 + [328])
	if ( ($4 == 0) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	CALL $327(($3 + [320]), ($0 + [120]))
	if ( (*($3 + [340]) == 0) ){ goto $label$14 }
	$4 = ($0 + [160])
	CALL $343(($3 + [440]), $4, (int_64)-1)
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [160]), *(($0 + [168])), (int_64)8800195549752983552, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	CALL $440($4, $6)
	$4 = *($3 + [328])
	if ( ($4 == 0) ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$16
	CALL $329(($3 + [320]), ($0 + [240]))
	if ( (*($3 + [340]) == 0) ){ goto $label$12 }
	$4 = ($0 + [280])
	CALL $349(($3 + [440]), $4, (int_64)-1)
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [280]), *(($0 + [288])), (int_64)8800535341778862080, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	CALL $441($4, $6)
	$4 = *($3 + [328])
	if ( ($4 == 0) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$15
	CALL eosio_assert([0], [29988])
	CALL eosio_assert([0], [20997])
	goto $label$2 
	
.LABEL $label$14
	$4 = ($0 + [200])
	CALL $340(($3 + [440]), $4, (int_64)-1)
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [200]), *(($0 + [208])), (int_64)8800195549769760768, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$13 }
	CALL $442($4, $6)
	$4 = *($3 + [328])
	if ( $4 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$13
	$5 = [1]
	$4 = *($3 + [328])
	if ( $4 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	$4 = ($0 + [320])
	CALL $346(($3 + [440]), $4, (int_64)-1)
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [320]), *(($0 + [328])), (int_64)8800535342315732992, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$11 }
	CALL $443($4, $6)
	$4 = *($3 + [328])
	if ( $4 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$11
	$5 = [1]
	$4 = *($3 + [328])
	if ( $4 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$4 = ($0 + [80])
	CALL $334(($3 + [440]), $4, (int_64)-1)
	$5 = [0]
	$6 = CALL db_lowerbound_i64(*($0 + [80]), *(($0 + [88])), (int_64)8800273824474988544, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$9 }
	CALL $444($4, $6)
	$4 = *($3 + [328])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$9
	$5 = [1]
	$4 = *($3 + [328])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$8
	*(($3 + [332])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$7
	if ( ($5 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$6
	*(($3 + [332])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	*(($3 + [332])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$3
	if ( $5 ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [21050])
	
.LABEL $label$1
	*(($3 + [336])) = [0]
	*($3 + [328]) = (int_64)0
	*($3 + [320]) = (int_64)0
	*($3 + [340]) = [0]
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$20 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$21 }
	if ( $1 ){ goto $label$19 }
	CALL $325(($3 + [440]), $0)
	$7 = *($3 + [440])
	*($3 + [320]) = $7
	$5 = *($3 + [328])
	if ( ($5 == 0) ){ goto $label$22 }
	*(($3 + [332])) = $5
	CALL _ZdlPv($5)
	*(($3 + [336])) = [0]
	*(($3 + [328])) = (int_64)0
	$7 = *($3 + [320])
	
.LABEL $label$22
	*(($3 + [340])) = *($3 + [460])
	$5 = (($3 + [440]) + [8])
	*((($3 + [320]) + [8])) = *($5)
	$4 = (($3 + [440]) + [16])
	$6 = *($4)
	*($4) = [0]
	*((($3 + [320]) + [16])) = $6
	*($5) = (int_64)0
	*($3 + [536]) = [8617]
	*($3 + [540]) = CALL $743([8617])
	*($3 + [144]) = *($3 + [536])
	CALL $326($0, ($3 + [320]), *(CALL $10(($3 + [440]), ($3 + [144]))))
	goto $label$18 
	
.LABEL $label$21
	$4 = ($0 + [120])
	CALL $327(($3 + [440]), $4)
	$7 = *($3 + [440])
	*($3 + [320]) = $7
	$5 = *($3 + [328])
	if ( ($5 == 0) ){ goto $label$23 }
	*(($3 + [332])) = $5
	CALL _ZdlPv($5)
	*(($3 + [336])) = [0]
	*(($3 + [328])) = (int_64)0
	$7 = *($3 + [320])
	
.LABEL $label$23
	*(($3 + [340])) = *($3 + [460])
	$5 = (($3 + [440]) + [8])
	*((($3 + [320]) + [8])) = *($5)
	$6 = (($3 + [440]) + [16])
	$8 = *($6)
	*($6) = [0]
	*((($3 + [320]) + [16])) = $8
	*($5) = (int_64)0
	*($3 + [536]) = [8617]
	*($3 + [540]) = CALL $743([8617])
	*($3 + [152]) = *($3 + [536])
	CALL $328($4, ($3 + [320]), *(CALL $10(($3 + [440]), ($3 + [152]))))
	goto $label$18 
	
.LABEL $label$20
	$4 = ($0 + [240])
	CALL $329(($3 + [440]), $4)
	$7 = *($3 + [440])
	*($3 + [320]) = $7
	$5 = *($3 + [328])
	if ( ($5 == 0) ){ goto $label$24 }
	*(($3 + [332])) = $5
	CALL _ZdlPv($5)
	*(($3 + [336])) = [0]
	*(($3 + [328])) = (int_64)0
	$7 = *($3 + [320])
	
.LABEL $label$24
	*(($3 + [340])) = *($3 + [460])
	$5 = (($3 + [440]) + [8])
	*((($3 + [320]) + [8])) = *($5)
	$6 = (($3 + [440]) + [16])
	$8 = *($6)
	*($6) = [0]
	*((($3 + [320]) + [16])) = $8
	*($5) = (int_64)0
	*($3 + [536]) = [8617]
	*($3 + [540]) = CALL $743([8617])
	*($3 + [160]) = *($3 + [536])
	CALL $330($4, ($3 + [320]), *(CALL $10(($3 + [440]), ($3 + [160]))))
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [29988])
	CALL eosio_assert([0], [29988])
	$7 = (int_64)0
	
.LABEL $label$18
	$5 = *(($3 + [328]))
	if ( ($5 == 0) ){ goto $label$25 }
	*(($3 + [332])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$25
	if ( ((int_64)$7 == (int_64)0) ){ goto $label$39 }
	$4 = [0]
	*($3 + [208]) = [0]
	*($3 + [200]) = (int_64)0
	$9 = ( $7 ? (int_64)5 : (uint_64)($7 <= (int_64)5) )
	$8 = (CASTING uint_32)(uint_64 $9)
	if ( ((uint_64)$7 >= (uint_64)(int_64)11) ){ goto $label$38 }
	*($3 + [328]) = [0]
	$10 = (int_64)0
	*($3 + [320]) = (int_64)0
	$5 = [0]
	
.LOOP $label$40:
	*($3 + [440]) = $10
	if ( ((uint_32)$5 >= (uint_32)$4) ){ goto $label$42 }
	*($5) = $10
	*($3 + [324]) = ($5 + [8])
	goto $label$41 
	
.LABEL $label$42
	CALL $445(($3 + [320]), ($3 + [440]))
	
.LABEL $label$41
	$10 = ((int_64)$10 + (int_64)1)
	if ( ((uint_64)$10 >= (uint_64)$9) ){ goto $label$43 }
	$4 = *((($3 + [320]) + [8]))
	$5 = *($3 + [324])
	goto $label$40 
	
.LABEL $label$43
	$11 = [0]
	
.LOOP $label$44:
	$2 = ((uint_64)((int_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$2) + (int_64)(CASTING int_64)(int_32 CALL $fimport$28())) * (int_64)2544307) % (uint_64)(int_64)1147797411054223359)
	$10 = (int_64)0
	$5 = *($3 + [320])
	$4 = *($3 + [324])
	$6 = ($4 - $5)
	if ( ((int_32)$6 == (int_32)[8]) ){ goto $label$45 }
	$10 = ((uint_64)$2 % (uint_64)(CASTING uint_64)(uint_32 int_32($6 >> [3])))
	
.LABEL $label$45
	$12 = ((CASTING uint_32)(uint_64 $10) << [3])
	$5 = ($5 + $12)
	$6 = *($3 + [204])
	if ( ((int_32)$6 == (int_32)*((($3 + [200]) + [8]))) ){ goto $label$47 }
	*($6) = *($5)
	*($3 + [204]) = ($6 + [8])
	goto $label$46 
	
.LABEL $label$47
	CALL $1(($3 + [200]), $5)
	$5 = (*($3 + [320]) + $12)
	$4 = *($3 + [324])
	
.LABEL $label$46
	$12 = ($5 + [8])
	$4 = ($4 - $12)
	$6 = int_32($4 >> [3])
	if ( ($4 == 0) ){ goto $label$48 }
	CALL memmove($5, $12, $4)
	
.LABEL $label$48
	*($3 + [324]) = ($5 + ($6 << [3]))
	$11 = ($11 + [1])
	if ( ($11 <= $8) ){ goto $label$44 }
	$5 = *($3 + [320])
	if ( ($5 == 0) ){ goto $label$49 }
	*($3 + [324]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$49
	$6 = *($3 + [200])
	$4 = *($3 + [204])
	goto $label$37 
	
.LABEL $label$39
	*($3 + [264]) = [8617]
	*($3 + [268]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [264])
	$5 = CALL $10(($3 + [272]), ($3 + [32]))
	*($3 + [248]) = [8344]
	*($3 + [252]) = CALL $743([8344])
	*($3 + [24]) = *($3 + [248])
	$4 = CALL $10(($3 + [256]), ($3 + [24]))
	*($3 + [232]) = [8617]
	$10 = *($4)
	$2 = *($5)
	*($3 + [236]) = CALL $743([8617])
	*($3 + [16]) = *($3 + [232])
	$8 = CALL $10(($3 + [240]), ($3 + [16]))
	*($3 + [216]) = [21133]
	*($3 + [220]) = CALL $743([21133])
	*($3 + [8]) = *($3 + [216])
	$11 = CALL $10(($3 + [224]), ($3 + [8]))
	if ( ((uint_32)$1 >= (uint_32)[3]) ){ goto $label$36 }
	$6 = *((($1 << [2]) + [30452]))
	goto $label$35 
	
.LABEL $label$38
	$11 = (($3 + [200]) + [8])
	
.LOOP $label$50:
	$2 = ((uint_64)((int_64)((int_64)((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)$2) + (int_64)(CASTING int_64)(int_32 CALL $fimport$28())) * (int_64)2544307) % (uint_64)(int_64)1147797411054223359)
	$10 = ((uint_64)$2 % (uint_64)$7)
	*($3 + [320]) = $10
	$6 = *($3 + [200])
	$5 = $6
	$4 = *($3 + [204])
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$53 }
	$5 = $6
	
.LOOP $label$54:
	if ( ((int_64)*($5) == (int_64)$10) ){ goto $label$53 }
	$5 = ($5 + [8])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$53
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$51 }
	
.LABEL $label$52
	if ( ((int_32)$4 == (int_32)*($11)) ){ goto $label$55 }
	*($4) = $10
	$4 = ($4 + [8])
	*($3 + [204]) = $4
	goto $label$51 
	
.LABEL $label$55
	CALL $1(($3 + [200]), ($3 + [320]))
	$6 = *($3 + [200])
	$4 = *($3 + [204])
	
.LABEL $label$51
	if ( (int_32(($4 - $6) >> [3]) <= $8) ){ goto $label$50 }
	
.LABEL $label$37
	$11 = [0]
	*($3 + [192]) = [0]
	*($3 + [184]) = (int_64)0
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$56 }
	$12 = (($3 + [320]) + [8])
	$13 = (($3 + [320]) + [16])
	$8 = [1]
	$5 = [0]
	
.LOOP $label$57:
	*($12) = (int_64)0
	*($13) = (int_64)0
	*($3 + [320]) = (int_64)0
	if ( ((uint_32)$5 >= (uint_32)$11) ){ goto $label$59 }
	*($5) = *($3 + [320])
	*(($5 + [16])) = *($13)
	*(($5 + [8])) = *($12)
	*($3 + [188]) = ($5 + [24])
	goto $label$58 
	
.LABEL $label$59
	CALL $446(($3 + [184]), ($3 + [320]))
	$6 = *($3 + [200])
	$4 = *($3 + [204])
	
.LABEL $label$58
	if ( ((uint_32)$8 >= (uint_32)int_32(($4 - $6) >> [3])) ){ goto $label$56 }
	$8 = ($8 + [1])
	$11 = *((($3 + [184]) + [8]))
	$5 = *($3 + [188])
	goto $label$57 
	
.LABEL $label$56
	*($3 + [536]) = [0]
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$60 }
	$14 = ($0 + [320])
	$15 = ($0 + [280])
	$16 = ($0 + [200])
	$17 = ($0 + [160])
	$18 = ($0 + [80])
	$19 = ($0 + [40])
	$13 = ($0 + [240])
	$20 = ($0 + [120])
	$11 = (($3 + [320]) | [1])
	$2 = (CASTING uint_64)(uint_32 $1)
	$4 = ((int_32)$1 == (int_32)[2])
	$8 = ($3 + [340])
	$12 = ($3 + [332])
	$5 = [0]
	
.LOOP $label$61:
	$10 = *(($6 + ($5 << [3])))
	if ( $4 ){ goto $label$77 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$78 }
	if ( $1 ){ goto $label$76 }
	CALL $325(($3 + [320]), $0)
	if ( (*($8) == 0) ){ goto $label$67 }
	CALL $334(($3 + [440]), $18, $10)
	$5 = *($3 + [444])
	if ( ($5 == 0) ){ goto $label$65 }
	*(($6 = (*($3 + [184]) + ((int_32)*($3 + [536]) * (int_32)[24])))) = *($5 + [8])
	*(($6 + [8])) = *(($5 + [16]))
	*(($6 + [16])) = *(($5 + [24]))
	goto $label$66 
	
.LABEL $label$78
	CALL $327(($3 + [320]), $20)
	if ( (*($8) == 0) ){ goto $label$75 }
	CALL $340(($3 + [440]), $16, $10)
	$5 = *($3 + [444])
	if ( ($5 == 0) ){ goto $label$73 }
	*(($6 = (*($3 + [184]) + ((int_32)*($3 + [536]) * (int_32)[24])))) = *($5 + [8])
	*(($6 + [8])) = *(($5 + [16]))
	*(($6 + [16])) = *(($5 + [24]))
	goto $label$74 
	
.LABEL $label$77
	CALL $329(($3 + [320]), $13)
	if ( (*($8) == 0) ){ goto $label$71 }
	CALL $346(($3 + [440]), $14, $10)
	$5 = *($3 + [444])
	if ( ($5 == 0) ){ goto $label$69 }
	*(($6 = (*($3 + [184]) + ((int_32)*($3 + [536]) * (int_32)[24])))) = *($5 + [8])
	*(($6 + [8])) = *(($5 + [16]))
	*(($6 + [16])) = *(($5 + [24]))
	goto $label$70 
	
.LABEL $label$76
	CALL eosio_assert([0], [29988])
	CALL eosio_assert([0], [20997])
	goto $label$63 
	
.LABEL $label$75
	CALL $343(($3 + [440]), $17, $10)
	$5 = *($3 + [444])
	if ( ($5 == 0) ){ goto $label$73 }
	*(($6 = (*($3 + [184]) + ((int_32)*($3 + [536]) * (int_32)[24])))) = *($5 + [8])
	*(($6 + [8])) = *(($5 + [16]))
	*(($6 + [16])) = *(($5 + [24]))
	
.LABEL $label$74
	$6 = [1]
	goto $label$72 
	
.LABEL $label$73
	$6 = [0]
	
.LABEL $label$72
	$5 = *((($3 + [320]) + [8]))
	if ( ($5 == 0) ){ goto $label$79 }
	*($12) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$79
	if ( ($6 == 0) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$71
	CALL $349(($3 + [440]), $15, $10)
	$5 = *($3 + [444])
	if ( ($5 == 0) ){ goto $label$69 }
	*(($6 = (*($3 + [184]) + ((int_32)*($3 + [536]) * (int_32)[24])))) = *($5 + [8])
	*(($6 + [8])) = *(($5 + [16]))
	*(($6 + [16])) = *(($5 + [24]))
	
.LABEL $label$70
	$6 = [1]
	goto $label$68 
	
.LABEL $label$69
	$6 = [0]
	
.LABEL $label$68
	$5 = *((($3 + [320]) + [8]))
	if ( ($5 == 0) ){ goto $label$80 }
	*($12) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$80
	if ( ($6 == 0) ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	CALL $337(($3 + [440]), $19, $10)
	$5 = *($3 + [444])
	if ( ($5 == 0) ){ goto $label$65 }
	*(($6 = (*($3 + [184]) + ((int_32)*($3 + [536]) * (int_32)[24])))) = *($5 + [8])
	*(($6 + [8])) = *(($5 + [16]))
	*(($6 + [16])) = *(($5 + [24]))
	
.LABEL $label$66
	$6 = [1]
	goto $label$64 
	
.LABEL $label$65
	$6 = [0]
	
.LABEL $label$64
	$5 = *((($3 + [320]) + [8]))
	if ( ($5 == 0) ){ goto $label$81 }
	*($12) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$81
	if ( $6 ){ goto $label$62 }
	
.LABEL $label$63
	*($3 + [440]) = $2
	CALL $447(($3 + [320]), [21144], ($3 + [440]), [21176], ($3 + [536]))
	$5 = $11
	if ( ((*($3 + [320]) & [1]) == 0) ){ goto $label$82 }
	$5 = *((($3 + [320]) + [8]))
	CALL _ZdlPv($5)
	
.LABEL $label$82
	CALL eosio_assert([0], $5)
	
.LABEL $label$62
	$5 = (*($3 + [536]) + [1])
	*($3 + [536]) = $5
	$6 = *($3 + [200])
	if ( ($5 <= int_32((*($3 + [204]) - $6) >> [3])) ){ goto $label$61 }
	
.LABEL $label$60
	*(($3 + [296])) = [0]
	*($3 + [288]) = (int_64)0
	*($3 + [280]) = (int_64)0
	*($3 + [300]) = [0]
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$33 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$34 }
	if ( $1 ){ goto $label$32 }
	CALL $325(($3 + [320]), $0)
	*($3 + [280]) = *($3 + [320])
	$5 = *($3 + [288])
	if ( ($5 == 0) ){ goto $label$83 }
	*(($3 + [292])) = $5
	CALL _ZdlPv($5)
	*(($3 + [296])) = [0]
	*(($3 + [288])) = (int_64)0
	
.LABEL $label$83
	$5 = *($3 + [340])
	*(($3 + [300])) = $5
	$4 = (($3 + [320]) + [8])
	*((($3 + [280]) + [8])) = *($4)
	$6 = (($3 + [320]) + [16])
	$8 = *($6)
	*($6) = [0]
	*((($3 + [280]) + [16])) = $8
	*($4) = (int_64)0
	goto $label$31 
	
.LABEL $label$36
	CALL eosio_assert([0], [20997])
	$6 = [8302]
	
.LABEL $label$35
	*(($3 + [488])) = [0]
	*($3 + [480]) = (int_64)0
	$5 = CALL $743($6)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$26 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$86 }
	*($3 + [480]) = ($5 << [1])
	$4 = (($3 + [480]) | [1])
	if ( $5 ){ goto $label$85 }
	goto $label$84 
	
.LABEL $label$86
	$12 = (($5 + [16]) & [-16])
	$4 = CALL _Znwj($12)
	*($3 + [480]) = ($12 | [1])
	*($3 + [488]) = $4
	*($3 + [484]) = $5
	
.LABEL $label$85
	CALL memcpy($4, $6, $5)
	
.LABEL $label$84
	*(($4 + $5)) = [0]
	*((($3 + [320]) + [24])) = (int_64)0
	*(($3 + [352])) = (int_64)0
	*(($3 + [372])) = [0]
	$5 = (($3 + [480]) + [8])
	*((($3 + [320]) + [8])) = *($5)
	*($5) = [0]
	*($3 + [336]) = (int_64)0
	*($3 + [360]) = [0]
	*($3 + [364 align=4]) = (int_64)0
	*($3 + [320]) = *($3 + [480])
	*($3 + [480]) = (int_64)0
	*($3 + [440]) = *($8)
	*($3 + [448]) = *($11)
	*(($5 = CALL _Znwj([16]))) = $2
	*($5 + [8]) = $10
	$4 = ($5 + [16])
	*((($3 + [440]) + [24])) = $4
	*(($3 + [460])) = $4
	*($3 + [456]) = $5
	CALL $448(($3 + [468]), ($3 + [320]))
	CALL $13(($3 + [536]), ($3 + [440]))
	$5 = *($3 + [536])
	CALL send_inline($5, (*($3 + [540]) - $5))
	$5 = *($3 + [536])
	if ( ($5 == 0) ){ goto $label$87 }
	*($3 + [540]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$87
	$5 = *($3 + [468])
	if ( ($5 == 0) ){ goto $label$88 }
	*(($3 + [472])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$88
	$5 = *($3 + [456])
	if ( ($5 == 0) ){ goto $label$89 }
	*(($3 + [460])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$89
	$5 = *($3 + [364])
	if ( ($5 == 0) ){ goto $label$90 }
	*(($3 + [368])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$90
	if ( ((*($3 + [320]) & [1]) == 0) ){ goto $label$91 }
	CALL _ZdlPv(*($3 + [328]))
	
.LABEL $label$91
	if ( ((*($3 + [480]) & [1]) == 0) ){ goto $label$30 }
	CALL _ZdlPv(*(($3 + [488])))
	goto $label$30 
	
.LABEL $label$34
	CALL $327(($3 + [320]), ($0 + [120]))
	*($3 + [280]) = *($3 + [320])
	$5 = *($3 + [288])
	if ( ($5 == 0) ){ goto $label$92 }
	*(($3 + [292])) = $5
	CALL _ZdlPv($5)
	*(($3 + [296])) = [0]
	*(($3 + [288])) = (int_64)0
	
.LABEL $label$92
	$5 = *($3 + [340])
	*(($3 + [300])) = $5
	$4 = (($3 + [320]) + [8])
	*((($3 + [280]) + [8])) = *($4)
	$6 = (($3 + [320]) + [16])
	$8 = *($6)
	*($6) = [0]
	*((($3 + [280]) + [16])) = $8
	*($4) = (int_64)0
	goto $label$31 
	
.LABEL $label$33
	CALL $329(($3 + [320]), ($0 + [240]))
	*($3 + [280]) = *($3 + [320])
	$5 = *($3 + [288])
	if ( ($5 == 0) ){ goto $label$93 }
	*(($3 + [292])) = $5
	CALL _ZdlPv($5)
	*(($3 + [296])) = [0]
	*(($3 + [288])) = (int_64)0
	
.LABEL $label$93
	$5 = *($3 + [340])
	*(($3 + [300])) = $5
	$4 = (($3 + [320]) + [8])
	*((($3 + [280]) + [8])) = *($4)
	$6 = (($3 + [320]) + [16])
	$8 = *($6)
	*($6) = [0]
	*((($3 + [280]) + [16])) = $8
	*($4) = (int_64)0
	goto $label$31 
	
.LABEL $label$32
	$5 = [0]
	CALL eosio_assert([0], [29988])
	
.LABEL $label$31
	$21 = [0]
	if ( ((int_32)*($3 + [188]) == (int_32)*($3 + [184])) ){ goto $label$94 }
	$22 = (($1 << [2]) + [30452])
	$23 = ($3 + [468])
	$24 = ($3 + [364])
	$25 = (($3 + [320]) + [16])
	$26 = (($3 + [304]) | [1])
	$27 = (($3 + [504]) | [1])
	$19 = (($3 + [440]) | [1])
	$28 = (($3 + [280]) + [8])
	$18 = ($1 <= [3])
	$29 = ($3 + [360])
	$30 = ($3 + [372])
	$31 = ($3 + [460])
	$32 = ($3 + [368])
	$33 = ($3 + [472])
	$21 = [0]
	$16 = [0]
	
.LOOP $label$95:
	CALL $7(($3 + [320]), $28, *(($16 + [30208])))
	if ( ($21 == 0) ){ goto $label$96 }
	CALL _ZdlPv($21)
	
.LABEL $label$96
	$14 = *($3 + [324])
	$21 = *($3 + [320])
	*(($15 = (($3 + [560]) + [8]))) = [0]
	*($3 + [560]) = (int_64)0
	if ( ((int_32)$14 == (int_32)$21) ){ goto $label$97 }
	$17 = ($16 + [1])
	$5 = $21
	
.LOOP $label$98:
	*(($4 = (($3 + [320]) + [8]))) = *(($5 + [16]))
	$10 = *(($5 + [8]))
	*($3 + [320]) = $10
	if ( (int_64)($10 == 0) ){ goto $label$99 }
	$6 = *($3 + [564])
	if ( ((int_32)$6 == (int_32)*($15)) ){ goto $label$101 }
	*($6) = *($3 + [320])
	*(($6 + [8])) = *($4)
	*($3 + [564]) = ($6 + [16])
	goto $label$100 
	
.LABEL $label$101
	CALL $161(($3 + [560]), ($3 + [320]))
	
.LABEL $label$100
	*(($11 = (($3 + [520]) + [8]))) = *($4)
	$4 = (*($3 + [184]) + ((int_32)$16 * (int_32)[24]))
	*(($12 = (($3 + [536]) + [8]))) = *(($4 + [8]))
	*(($13 = (($3 + [536]) + [16]))) = *(($4 + [16]))
	*($3 + [520]) = *($3 + [320])
	*($3 + [536]) = *($4)
	*($3 + [480]) = $17
	if ( ($18 == 0) ){ goto $label$103 }
	$4 = *($22)
	goto $label$102 
	
.LABEL $label$103
	CALL eosio_assert([0], [20997])
	$4 = [8302]
	
.LABEL $label$102
	*($3 + [576]) = $4
	CALL $449(($3 + [440]), [30213], ($3 + [480]), [8305], ($3 + [576]), [30239])
	$6 = $19
	if ( ((*($3 + [440]) & [1]) == 0) ){ goto $label$104 }
	$6 = *((($3 + [440]) + [8]))
	CALL _ZdlPv($6)
	
.LABEL $label$104
	*(($20 = (($3 + [504]) + [8]))) = [0]
	*($3 + [504]) = (int_64)0
	$4 = CALL $743($6)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$29 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$107 }
	*($3 + [504]) = ($4 << [1])
	$8 = $27
	if ( $4 ){ goto $label$106 }
	goto $label$105 
	
.LABEL $label$107
	$34 = (($4 + [16]) & [-16])
	$8 = CALL _Znwj($34)
	*($20) = $8
	*($3 + [504]) = ($34 | [1])
	*($3 + [508]) = $4
	
.LABEL $label$106
	CALL memcpy($8, $6, $4)
	
.LABEL $label$105
	*(($8 + $4)) = [0]
	*((($3 + [120]) + [16])) = *($13)
	*((($3 + [120]) + [8])) = *($12)
	*((($3 + [104]) + [8])) = *($11)
	*($3 + [120]) = *($3 + [536])
	*($3 + [104]) = *($3 + [520])
	CALL $162(($3 + [120]), ($3 + [104]), ($3 + [504]), [2])
	if ( ((*($3 + [504]) & [1]) == 0) ){ goto $label$99 }
	CALL _ZdlPv(*($20))
	
.LABEL $label$99
	$5 = ($5 + [24])
	if ( ((int_32)$14 != (int_32)$5) ){ goto $label$98 }
	
.LABEL $label$97
	$5 = (*($3 + [184]) + ((int_32)$16 * (int_32)[24]))
	*(($11 = (($3 + [480]) + [8]))) = *(($5 + [8]))
	*(($12 = (($3 + [480]) + [16]))) = *(($5 + [16]))
	*($3 + [480]) = *($5)
	*($3 + [424]) = [8617]
	*($3 + [428]) = CALL $743([8617])
	*($3 + [96]) = *($3 + [424])
	CALL $10(($3 + [432]), ($3 + [96]))
	*($3 + [408]) = [8344]
	*($3 + [412]) = CALL $743([8344])
	*($3 + [88]) = *($3 + [408])
	CALL $10(($3 + [416]), ($3 + [88]))
	*($3 + [392]) = [8617]
	$10 = *($3 + [416])
	$2 = *($3 + [432])
	*($3 + [396]) = CALL $743([8617])
	*($3 + [80]) = *($3 + [392])
	CALL $10(($3 + [400]), ($3 + [80]))
	*($3 + [376]) = [21133]
	*($3 + [380]) = CALL $743([21133])
	*($3 + [72]) = *($3 + [376])
	CALL $10(($3 + [384]), ($3 + [72]))
	if ( ($18 == 0) ){ goto $label$109 }
	$6 = *($22)
	goto $label$108 
	
.LABEL $label$109
	CALL eosio_assert([0], [20997])
	$6 = [8302]
	
.LABEL $label$108
	*(($4 = (($3 + [304]) + [8]))) = [0]
	*($3 + [304]) = (int_64)0
	$5 = CALL $743($6)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$28 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$112 }
	*($3 + [304]) = ($5 << [1])
	$8 = $26
	if ( $5 ){ goto $label$111 }
	goto $label$110 
	
.LABEL $label$112
	$13 = (($5 + [16]) & [-16])
	$8 = CALL _Znwj($13)
	*($4) = $8
	*($3 + [304]) = ($13 | [1])
	*($3 + [308]) = $5
	
.LABEL $label$111
	CALL memcpy($8, $6, $5)
	
.LABEL $label$110
	*(($8 + $5)) = [0]
	$16 = ($16 + [1])
	*($29) = $16
	*($24) = (int_64)0
	*($30) = [0]
	*(($13 = (($3 + [320]) + [8]))) = *($4)
	*($4) = [0]
	*($25) = *($3 + [480])
	*(($25 + [8])) = *($11)
	*(($25 + [16])) = *($12)
	*($3 + [320]) = *($3 + [304])
	*($3 + [304]) = (int_64)0
	$5 = (*($3 + [564]) - *($3 + [560]))
	if ( ($5 == 0) ){ goto $label$113 }
	$6 = int_32($5 >> [4])
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$27 }
	$5 = CALL _Znwj($5)
	*($24) = $5
	*($32) = $5
	*($30) = ($5 + ($6 << [4]))
	$8 = *($3 + [560])
	$6 = (*($3 + [564]) - $8)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$113 }
	CALL memcpy($5, $8, $6)
	*($32) = (*($32) + $6)
	
.LABEL $label$113
	*((($3 + [440]) + [8])) = *($3 + [384])
	*(($6 = (($3 + [440]) + [16]))) = (int_64)0
	*(($8 = (($3 + [440]) + [24]))) = [0]
	*($3 + [440]) = *($3 + [400])
	$5 = CALL _Znwj([16])
	*($6) = $5
	*($5) = $2
	*($5 + [8]) = $10
	$5 = ($5 + [16])
	*($8) = $5
	*($31) = $5
	CALL $448($23, ($3 + [320]))
	CALL $13(($3 + [576]), ($3 + [440]))
	$5 = *($3 + [576])
	CALL send_inline($5, (*($3 + [580]) - $5))
	$5 = *($3 + [576])
	if ( ($5 == 0) ){ goto $label$114 }
	*($3 + [580]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$114
	$5 = *($23)
	if ( ($5 == 0) ){ goto $label$115 }
	*($33) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$115
	$5 = *($6)
	if ( ($5 == 0) ){ goto $label$116 }
	*($31) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$116
	$5 = *($24)
	if ( ($5 == 0) ){ goto $label$117 }
	*($32) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$117
	if ( ((*($3 + [320]) & [1]) == 0) ){ goto $label$118 }
	CALL _ZdlPv(*($13))
	
.LABEL $label$118
	if ( ((*($3 + [304]) & [1]) == 0) ){ goto $label$119 }
	CALL _ZdlPv(*($4))
	
.LABEL $label$119
	$5 = *($3 + [560])
	if ( ($5 == 0) ){ goto $label$120 }
	*($3 + [564]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$120
	if ( ($16 <= ((int_32)(*($3 + [188]) - *($3 + [184])) / (int_32)[24])) ){ goto $label$95 }
	$5 = *(($3 + [300]))
	
.LABEL $label$94
	*(($3 + [300])) = (($5 & [255]) == 0)
	*($3 + [280]) = (int_64)0
	if ( ((int_32)$1 == (int_32)[2]) ){ goto $label$123 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$124 }
	if ( $1 ){ goto $label$122 }
	*($3 + [440]) = [8617]
	*($3 + [444]) = CALL $743([8617])
	*($3 + [48]) = *($3 + [440])
	CALL $326($0, ($3 + [280]), *(CALL $10(($3 + [320]), ($3 + [48]))))
	goto $label$121 
	
.LABEL $label$124
	*($3 + [440]) = [8617]
	*($3 + [444]) = CALL $743([8617])
	*($3 + [56]) = *($3 + [440])
	CALL $328(($0 + [120]), ($3 + [280]), *(CALL $10(($3 + [320]), ($3 + [56]))))
	goto $label$121 
	
.LABEL $label$123
	*($3 + [440]) = [8617]
	*($3 + [444]) = CALL $743([8617])
	*($3 + [64]) = *($3 + [440])
	CALL $330(($0 + [240]), ($3 + [280]), *(CALL $10(($3 + [320]), ($3 + [64]))))
	goto $label$121 
	
.LABEL $label$122
	CALL eosio_assert([0], [29988])
	
.LABEL $label$121
	$5 = *(($3 + [288]))
	if ( ($5 == 0) ){ goto $label$125 }
	*(($3 + [292])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$125
	$5 = *($0 + [360])
	*($3 + [168]) = [21205]
	*($3 + [172]) = CALL $743([21205])
	*($3 + [40]) = *($3 + [168])
	CALL $450($3, $1, ((CASTING uint_32)(uint_64 CALL $153($5, *(CALL $10(($3 + [176]), ($3 + [40]))), (int_64)20)) & [255]))
	if ( ($21 == 0) ){ goto $label$126 }
	CALL _ZdlPv($21)
	
.LABEL $label$126
	$5 = *($3 + [184])
	if ( ($5 == 0) ){ goto $label$127 }
	*($3 + [188]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$127
	$5 = *($3 + [200])
	if ( ($5 == 0) ){ goto $label$30 }
	*($3 + [204]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$30
	$global$0 = ($3 + [592])
	return (unreachable)
	
.LABEL $label$29
	CALL $708(($3 + [504]))
	
.LABEL $label$28
	CALL $708(($3 + [304]))
	
.LABEL $label$27
	CALL $727($24)
	
.LABEL $label$26
	CALL $708(($3 + [480]))
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $282 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = *($2)
	$4 = [0]
	$5 = *($1)
	$5 = CALL db_idx64_lowerbound(*($5), *($5 + [8]), (int_64)-3022886516901806077, ($3 + [8]), ($3 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	CALL $284($3, *($1), *($3 + [16]))
	*((($4 = *($3 + [4])) + [100])) = $5
	
.LABEL $label$1
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = *($2)
	$7 = *($4 + [64])
	$8 = *($4 + [60])
	*(($2 = CALL _Znwj([16])) + [8]) = $8
	*($2) = $7
	CALL sha256($2, [16], ($3 + [16]))
	$7 = *($3 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL _ZdlPv($2)
	
.LABEL $label$5
	*($0) = $1
	if ( ((int_64)$6 != (int_64)$7) ){ goto $label$3 }
	*(($0 + [4])) = $4
	goto $label$2 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
	goto $label$2 
	
.LABEL $label$3
	*(($0 + [4])) = [0]
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $283 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $561($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

int_32 .FUNC $129 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [344]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [348])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [344]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [304]))
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [308])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$10 }
	CALL _ZdlPv($4)
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$9 }
	$3 = *(($0 + [304]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$2 = *(($0 + [264]))
	if ( ($2 == 0) ){ goto $label$11 }
	$5 = ($0 + [268])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$15 }
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$16 }
	*(($4 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$16
	CALL _ZdlPv($4)
	
.LABEL $label$15
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$14 }
	$3 = *(($0 + [264]))
	goto $label$12 
	
.LABEL $label$13
	$3 = $2
	
.LABEL $label$12
	*($5) = $2
	CALL _ZdlPv($3)
	
.LABEL $label$11
	$1 = *(($0 + [224]))
	if ( ($1 == 0) ){ goto $label$17 }
	$2 = ($0 + [228])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$19 }
	
.LOOP $label$20:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$21 }
	CALL _ZdlPv($4)
	
.LABEL $label$21
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$20 }
	$3 = *(($0 + [224]))
	goto $label$18 
	
.LABEL $label$19
	$3 = $1
	
.LABEL $label$18
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$17
	$1 = *(($0 + [184]))
	if ( ($1 == 0) ){ goto $label$22 }
	$2 = ($0 + [188])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$24 }
	
.LOOP $label$25:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$26 }
	CALL _ZdlPv($4)
	
.LABEL $label$26
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$25 }
	$3 = *(($0 + [184]))
	goto $label$23 
	
.LABEL $label$24
	$3 = $1
	
.LABEL $label$23
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$22
	$2 = *(($0 + [144]))
	if ( ($2 == 0) ){ goto $label$27 }
	$5 = ($0 + [148])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$29 }
	
.LOOP $label$30:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$31 }
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$32 }
	*(($4 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$32
	CALL _ZdlPv($4)
	
.LABEL $label$31
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$30 }
	$3 = *(($0 + [144]))
	goto $label$28 
	
.LABEL $label$29
	$3 = $2
	
.LABEL $label$28
	*($5) = $2
	CALL _ZdlPv($3)
	
.LABEL $label$27
	$1 = *(($0 + [104]))
	if ( ($1 == 0) ){ goto $label$33 }
	$2 = ($0 + [108])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$35 }
	
.LOOP $label$36:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$37 }
	CALL _ZdlPv($4)
	
.LABEL $label$37
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$36 }
	$3 = *(($0 + [104]))
	goto $label$34 
	
.LABEL $label$35
	$3 = $1
	
.LABEL $label$34
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$33
	$1 = *(($0 + [64]))
	if ( ($1 == 0) ){ goto $label$38 }
	$2 = ($0 + [68])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$40 }
	
.LOOP $label$41:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$42 }
	CALL _ZdlPv($4)
	
.LABEL $label$42
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$41 }
	$3 = *(($0 + [64]))
	goto $label$39 
	
.LABEL $label$40
	$3 = $1
	
.LABEL $label$39
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$38
	$2 = *($0 + [24])
	if ( ($2 == 0) ){ goto $label$43 }
	$5 = ($0 + [28])
	$3 = *($5)
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$45 }
	
.LOOP $label$46:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$47 }
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$48 }
	*(($4 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$48
	CALL _ZdlPv($4)
	
.LABEL $label$47
	if ( ((int_32)$2 != (int_32)$3) ){ goto $label$46 }
	$3 = *(($0 + [24]))
	goto $label$44 
	
.LABEL $label$45
	$3 = $2
	
.LABEL $label$44
	*($5) = $2
	CALL _ZdlPv($3)
	
.LABEL $label$43
	return $0
}

void .FUNC $128 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [96])
	$global$0 = $1
	$2 = *(($0 + [28]))
	if ( ((int_32)$2 == (int_32)*($0 + [24])) ){ goto $label$3 }
	$2 = *(($2 + [-24]))
	if ( ((int_32)*($2 + [24]) == (int_32)$0) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	if ( $2 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$3
	$2 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)8800273824806109184, (int_64)8800273824806109184)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)*(CALL $480($0, $2) + [24]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [28728])
	goto $label$1 
	
.LABEL $label$2
	*(($1 + [88])) = [0]
	*($1 + [80]) = (int_64)0
	*($1 + [72]) = (int_64)0
	*($1 + [92]) = [0]
	*($1 + [56]) = [8617]
	*($1 + [60]) = CALL $743([8617])
	*($1 + [16]) = *($1 + [56])
	CALL $326($0, ($1 + [72]), *(CALL $10(($1 + [64]), ($1 + [16]))))
	$2 = *($1 + [80])
	if ( ($2 == 0) ){ goto $label$1 }
	*(($1 + [84])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$1
	$2 = ($0 + [120])
	$3 = *(($0 + [148]))
	if ( ((int_32)$3 == (int_32)*(($0 + [144]))) ){ goto $label$7 }
	$3 = *(($3 + [-24]))
	if ( ((int_32)*($3 + [24]) == (int_32)$2) ){ goto $label$8 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$8
	if ( $3 ){ goto $label$5 }
	goto $label$6 
	
.LABEL $label$7
	$3 = CALL db_find_i64(*($2), *(($0 + [128])), (int_64)8800195550100881408, (int_64)8800195550100881408)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((int_32)*(CALL $481($2, $3) + [24]) == (int_32)$2) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	goto $label$5 
	
.LABEL $label$6
	*(($1 + [88])) = [0]
	*($1 + [80]) = (int_64)0
	*($1 + [72]) = (int_64)0
	*($1 + [92]) = [0]
	*($1 + [40]) = [8617]
	*($1 + [44]) = CALL $743([8617])
	*($1 + [8]) = *($1 + [40])
	CALL $328($2, ($1 + [72]), *(CALL $10(($1 + [48]), ($1 + [8]))))
	$2 = *($1 + [80])
	if ( ($2 == 0) ){ goto $label$5 }
	*(($1 + [84])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$2 = ($0 + [240])
	$3 = *(($0 + [268]))
	if ( ((int_32)$3 == (int_32)*(($0 + [264]))) ){ goto $label$11 }
	$0 = *(($3 + [-24]))
	if ( ((int_32)*($0 + [24]) == (int_32)$2) ){ goto $label$12 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$12
	if ( $0 ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$11
	$0 = CALL db_find_i64(*($2), *(($0 + [248])), (int_64)8800535352911593472, (int_64)8800535352911593472)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$10 }
	if ( ((int_32)*(CALL $482($2, $0) + [24]) == (int_32)$2) ){ goto $label$9 }
	CALL eosio_assert([0], [28728])
	goto $label$9 
	
.LABEL $label$10
	*(($1 + [88])) = [0]
	*($1 + [80]) = (int_64)0
	*($1 + [72]) = (int_64)0
	*($1 + [92]) = [0]
	*($1 + [24]) = [8617]
	*($1 + [28]) = CALL $743([8617])
	*($1) = *($1 + [24])
	CALL $330($2, ($1 + [72]), *(CALL $10(($1 + [32]), $1)))
	$0 = *($1 + [80])
	if ( ($0 == 0) ){ goto $label$9 }
	*(($1 + [84])) = $0
	CALL _ZdlPv($0)
	
.LABEL $label$9
	$global$0 = ($1 + [96])
}

void .FUNC $286 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$2 = ($global$0 - [96])
	$global$0 = $2
	$3 = *($0)
	$4 = *(*($0 + [4]))
	$5 = *(($4 + [8]))
	$6 = *(($4 + [16]))
	$7 = *(($4 + [24]))
	$8 = *(($4 + [32]))
	$9 = *(($4 + [40]))
	$10 = *($4)
	*(((($11 = $2) + [16]) + [52])) = (int_64)0
	*(($12 = (($11 + [16]) + [40]))) = $9
	*(($13 = (($11 + [16]) + [32]))) = $8
	*(($14 = (($11 + [16]) + [24]))) = $7
	*(($15 = (($11 + [16]) + [16]))) = $6
	$16 = [0]
	*($11 + [64]) = [0]
	*($11 + [16]) = $10
	*($11 + [24]) = $5
	$17 = [0]
	$18 = [0]
	$19 = (*(($4 + [52])) - *($4 + [48]))
	if ( ($19 == 0) ){ goto $label$2 }
	$17 = int_32($19 >> [3])
	if ( ((uint_32)$17 >= (uint_32)[536870912]) ){ goto $label$1 }
	$18 = CALL _Znwj($19)
	*((($11 + [16]) + [48])) = $18
	$16 = ($18 + ($17 << [3]))
	*(($11 + [72])) = $16
	*(($19 = (($11 + [16]) + [52]))) = $18
	$20 = *(($4 + [48]))
	$17 = (*(($4 + [52])) - $20)
	if ( ((int_32)$17 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($18, $20, $17)
	$17 = ($18 + $17)
	*($19) = $17
	goto $label$2 
	
.LABEL $label$3
	$17 = $18
	
.LABEL $label$2
	*((($11 + [16]) + [76])) = *(($4 + [76]))
	*((($11 + [16]) + [68])) = *(($4 + [68]))
	$5 = *($4 + [60 align=4])
	*($1) = *($11 + [16])
	*(($1 + [8])) = *($11 + [24])
	*(($1 + [16])) = *($15)
	*(($1 + [24])) = *($14)
	*(($1 + [32])) = *($13)
	*(($1 + [40])) = *($12)
	*($11 + [76 align=4]) = $5
	$4 = ($11 + [76])
	$19 = *($1 + [48])
	if ( ($19 == 0) ){ goto $label$5 }
	*(($1 + [52])) = $19
	CALL _ZdlPv($19)
	*(($19 = ($1 + [56]))) = [0]
	*($1 + [48 align=4]) = (int_64)0
	goto $label$4 
	
.LABEL $label$5
	$19 = ($1 + [56])
	
.LABEL $label$4
	*($19) = $16
	*(($1 + [52])) = $17
	*(($1 + [48])) = $18
	*(($11 + [72])) = [0]
	*((($11 + [16]) + [48])) = (int_64)0
	*($1 + [60 align=4]) = *($4)
	*(($1 + [68])) = *(($4 + [8]))
	*(($1 + [76])) = *(($4 + [16]))
	$16 = ($17 - $18)
	$5 = (CASTING uint_64)(uint_32 int_32($16 >> [3]))
	$4 = [40]
	
.LOOP $label$6:
	$4 = ($4 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$18 == (int_32)$17) ){ goto $label$7 }
	$4 = (($16 & [-8]) + $4)
	
.LABEL $label$7
	$18 = ($4 + [20])
	if ( ($18 <= [513]) ){ goto $label$9 }
	$4 = CALL $746($18)
	goto $label$8 
	
.LABEL $label$9
	$4 = ($2 - (($18 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$8
	*($11 + [4]) = $4
	*($11) = $4
	*($11 + [8]) = ($4 + $18)
	CALL $279($11, $1)
	$5 = *($1)
	*($1 + [84]) = CALL db_store_i64(*($3 + [8]), (int_64)-3022886516901806080, *(*($0 + [8])), $5, $4, $18)
	if ( ($18 <= [513]) ){ goto $label$10 }
	CALL $749($4)
	
.LABEL $label$10
	if ( (uint_64)($5 <= *($3 + [16])) ){ goto $label$11 }
	*(($3 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$11
	$4 = ($3 + [8])
	$5 = *($4)
	$18 = *(($0 + [8]))
	$6 = *($18)
	$7 = *($1)
	$0 = ($1 + [24])
	*($11 + [24]) = *($0)
	*($11 + [16]) = *($1 + [16])
	*($1 + [88]) = CALL db_idx128_store($5, (int_64)-3022886516901806080, $6, $7, ($11 + [16]))
	$5 = *($18)
	$6 = *($4)
	$7 = *($1)
	$8 = *($0)
	$0 = ($1 + [60])
	$9 = *($1 + [16])
	$10 = ((int_64)$9 + (int_64)*($0))
	*($11 + [16]) = $10
	*($11 + [24]) = ((int_64)$8 + (int_64)(CASTING uint_64)(uint_32 (uint_64)($10 <= $9)))
	*(($1 + [92])) = CALL db_idx128_store($6, (int_64)-3022886516901806079, $5, $7, ($11 + [16]))
	$5 = *($18)
	$6 = *($4)
	$7 = *($1)
	*($11 + [16]) = *($1 + [64])
	*(($1 + [96])) = CALL db_idx64_store($6, (int_64)-3022886516901806078, $5, $7, ($11 + [16]))
	$5 = *($18)
	$6 = *($4)
	$7 = *($1)
	$8 = *($0)
	$9 = *($1 + [64])
	*(($4 = CALL _Znwj([16])) + [8]) = $8
	*($4) = $9
	CALL sha256($4, [16], ($11 + [16]))
	$8 = *($11 + [16])
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	*($11 + [16]) = $8
	*(($1 + [100])) = CALL db_idx64_store($6, (int_64)-3022886516901806077, $5, $7, ($11 + [16]))
	$global$0 = ($11 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $727(($11 + [64]))
}

int_32 .FUNC $287 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [32])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [28698])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *($2 + [56])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx128_find_primary(*($3), *($3 + [8]), (int_64)-4418111932367241216, ($1 + [16]), *($2))
	*(*(($0 + [4])) + [56]) = $3
	
.LABEL $label$2
	*($1 + [16]) = (int_64)0
	$2 = CALL db_idx128_next($3, ($1 + [16]))
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$4 }
	CALL $264(($1 + [8]), *(*($0)), *($1 + [16]))
	$3 = *($1 + [12])
	*(($0 + [4])) = $3
	*(($3 + [56])) = $2
	goto $label$3 
	
.LABEL $label$4
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	$global$0 = ($1 + [32])
	return $0
}

void .FUNC $284 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [80]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-3022886516901806080, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $560($1, $5)
	if ( ((int_32)*($5 + [80]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $285 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [32])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [28698])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *($2 + [88])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx128_find_primary(*($3), *($3 + [8]), (int_64)-3022886516901806080, ($1 + [16]), *($2))
	*(*(($0 + [4])) + [88]) = $3
	
.LABEL $label$2
	*($1 + [16]) = (int_64)0
	$2 = CALL db_idx128_next($3, ($1 + [16]))
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$4 }
	CALL $284(($1 + [8]), *(*($0)), *($1 + [16]))
	$3 = *($1 + [12])
	*(($0 + [4])) = $3
	*(($3 + [88])) = $2
	goto $label$3 
	
.LABEL $label$4
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	$global$0 = ($1 + [32])
	return $0
}

void .FUNC $534 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13)
{
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_64 $18
	$14 = ($global$0 - [240])
	$global$0 = $14
	$0 = *($0 + [4])
	$15 = *($0 + [4])
	$16 = (*($0) + int_32($15 >> [1]))
	$0 = *($0)
	if ( (($15 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($16) + $0))
	
.LABEL $label$1
	*((($14 + [216]) + [16])) = *(($2 + [16]))
	*((($14 + [216]) + [8])) = *(($2 + [8]))
	*((($14 + [200]) + [8])) = *(($3 + [8]))
	*($14 + [184]) = (int_64)0
	*($14 + [192]) = [0]
	*($14 + [216]) = *($2)
	*($14 + [200]) = *($3)
	$2 = (*($4 + [4]) - *($4))
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$6 }
	$3 = CALL _Znwj($2)
	*(($14 + [192])) = ($3 + $2)
	*($14 + [184]) = $3
	*($14 + [188]) = $3
	$2 = *($4)
	$4 = (*(($4 + [4])) - $2)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($3, $2, $4)
	*($14 + [188]) = ($3 + $4)
	
.LABEL $label$7
	*($14 + [176]) = [0]
	*($14 + [168]) = (int_64)0
	$4 = (*($6 + [4]) - *($6))
	if ( ($4 == 0) ){ goto $label$8 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$2 = CALL _Znwj($4)
	*(($14 + [176])) = ($2 + $4)
	*($14 + [168]) = $2
	*($14 + [172]) = $2
	$6 = *($6)
	$4 = (*(($6 + [4])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($2, $6, $4)
	*($14 + [172]) = ($2 + $4)
	
.LABEL $label$8
	*($14 + [160]) = [0]
	*($14 + [152]) = (int_64)0
	$4 = (*($7 + [4]) - *($7))
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$4 }
	$6 = CALL _Znwj($4)
	*(($14 + [160])) = ($6 + $4)
	*($14 + [152]) = $6
	*($14 + [156]) = $6
	$7 = *($7)
	$4 = (*(($7 + [4])) - $7)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($6, $7, $4)
	*($14 + [156]) = ($6 + $4)
	
.LABEL $label$9
	*($14 + [144]) = [0]
	*($14 + [136]) = (int_64)0
	$4 = (*($8 + [4]) - *($8))
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = CALL _Znwj($4)
	*(($14 + [144])) = ($6 + $4)
	*($14 + [136]) = $6
	*($14 + [140]) = $6
	$7 = *($8)
	$4 = (*(($8 + [4])) - $7)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($6, $7, $4)
	*($14 + [140]) = ($6 + $4)
	
.LABEL $label$10
	*($14 + [128]) = [0]
	*($14 + [120]) = (int_64)0
	$4 = (*($9 + [4]) - *($9))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = CALL _Znwj($4)
	*(($14 + [128])) = ($6 + (int_32($4 >> [1]) << [1]))
	*($14 + [120]) = $6
	*($14 + [124]) = $6
	$7 = *($9)
	$4 = (*(($9 + [4])) - $7)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$11 }
	CALL memcpy($6, $7, $4)
	*($14 + [124]) = ($6 + $4)
	
.LABEL $label$11
	$4 = CALL $709(($14 + [104]), $10)
	*(($6 = (($14 + [88]) + [8]))) = *(($11 + [8]))
	*(($7 = (($14 + [72]) + [8]))) = *(($12 + [8]))
	$17 = *($12)
	$18 = *($11)
	*((($14 + [48]) + [8])) = *((($14 + [216]) + [8]))
	*((($14 + [48]) + [16])) = *((($14 + [216]) + [16]))
	*((($14 + [32]) + [8])) = *((($14 + [200]) + [8]))
	*($14 + [88]) = $18
	*($14 + [72]) = $17
	*($14 + [48]) = *($14 + [216])
	*($14 + [32]) = *($14 + [200])
	*((($14 + [16]) + [8])) = *($6)
	*(($14 + [8])) = *($7)
	*($14 + [16]) = *($14 + [88])
	*($14) = *($14 + [72])
	CALL void $16((int_32 $1), (int_64 ($14 + [48])), (int_32 ($14 + [32])), (int_32 ($14 + [184])), (int_32 $5), (int_32 ($14 + [168])), (int_32 ($14 + [152])), (int_32 ($14 + [136])), (int_32 ($14 + [120])), (int_32 $4), (int_32 ($14 + [16])), (int_32 $14), (int_32 $13), (int_32 $0))
	if ( ((*($4) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$12
	$4 = *($14 + [120])
	if ( ($4 == 0) ){ goto $label$13 }
	*($14 + [124]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$13
	$4 = *($14 + [136])
	if ( ($4 == 0) ){ goto $label$14 }
	*($14 + [140]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$14
	$4 = *($14 + [152])
	if ( ($4 == 0) ){ goto $label$15 }
	*($14 + [156]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$15
	$4 = *($14 + [168])
	if ( ($4 == 0) ){ goto $label$16 }
	*($14 + [172]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$16
	$4 = *($14 + [184])
	if ( ($4 == 0) ){ goto $label$17 }
	*($14 + [188]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$17
	$global$0 = ($14 + [240])
	return (unreachable)
	
.LABEL $label$6
	CALL $727(($14 + [184]))
	
.LABEL $label$5
	CALL $727(($14 + [168]))
	
.LABEL $label$4
	CALL $727(($14 + [152]))
	
.LABEL $label$3
	CALL $727(($14 + [136]))
	
.LABEL $label$2
	CALL $727(($14 + [120]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $535 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = (*($0) + [41])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)*($3 + [8]) != (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [1])
	*(($3 = ($3 + [4]))) = (*($3) + [1])
	$3 = *($0)
	CALL $306(*($1), ($3 + [48]))
	$0 = ($3 + [64])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	$5 = CALL _Znwj([72])
	$2 = CALL $122($5)
	*($5 + [56]) = $0
	CALL $214(($3 + [32]), $2)
	*($5 + [60]) = $1
	*($3 + [24]) = $5
	*($3 + [16]) = (int_64)-8173740188290908160
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$2 = *($7)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($2 + [8]) = (int_64)-8173740188290908160
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($7) = ($2 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $594(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = *($1 + [28])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [32])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$11
	$4 = *($1 + [16])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [20])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $120 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-5915276457178488320, (int_64)-5915276457178488320)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $119($0, $4)
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $323($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $324($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $530 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)*($4 + [8]) != (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0)
	CALL $169(*($1), ($4 + [64]))
	CALL $169(*($1), ($4 + [76]))
	CALL $169(*($1), ($4 + [88]))
	*($2 + [8]) = $4
	CALL $531(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $126 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)-4293730779636826112, (int_64)-4293730779636826112)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $124($0, $4)
	if ( ((int_32)*($4 + [48]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $501($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $502($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $532 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$5 = *($1 + [4])
	$6 = int_32(($5 - $7) >> [1])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $533($1, ($2 - $6))
	$5 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($7 + ($2 << [1]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($0 + [4])
	$2 = *($6)
	$4 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($4) - $2) > (uint_32)[1]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($6)
	
.LABEL $label$8
	CALL memcpy($7, $2, [2])
	$2 = (*($6) + [2])
	*($6) = $2
	$7 = ($7 + [2])
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $533 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [1]) >= (uint_32)$1) ){ goto $label$3 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [1])
	$3 = ($5 + $1)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [0]
	$2 = ($2 - $4)
	$2 = ( ( $3 ? $2 : ($2 <= $3) ) ? [2147483647] : (int_32($2 >> [1]) <= [1073741823]) )
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$1 }
	$6 = CALL _Znwj(($2 << [1]))
	
.LABEL $label$4
	$4 = ($6 + ($2 << [1]))
	$3 = ($6 + ($5 << [1]))
	$6 = $3
	$2 = $1
	
.LOOP $label$5:
	*($6) = [0]
	$6 = ($6 + [2])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	$5 = ($3 + ($1 << [1]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$7 }
	CALL _ZdlPv($6)
	
.LABEL $label$7
	return (unreachable)
	
.LABEL $label$3
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [2])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	*(($0 + [4])) = ($3 + ($1 << [1]))
	return (unreachable)
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $722 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $713(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $734(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8484], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $713(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $713(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $682 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $683 (int_32 $0)
{
	return $0
}

int_32 .FUNC $479 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $529 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $184(*($1), (*($0) + [52]))
	$0 = *($0)
	CALL $306(*($1), ($0 + [64]))
	CALL $306(*($1), ($0 + [80]))
	$2 = ($0 + [96])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$3 = ($0 + [128])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$0) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $478 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [208])
	$global$0 = $3
	*($3 + [136]) = [8617]
	*($3 + [140]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [136])
	$4 = CALL $10(($3 + [144]), ($3 + [24]))
	*($3 + [120]) = [8344]
	*($3 + [124]) = CALL $743([8344])
	*($3 + [16]) = *($3 + [120])
	$5 = CALL $10(($3 + [128]), ($3 + [16]))
	*($3 + [104]) = [8617]
	$6 = *($5)
	$7 = *($4)
	*($3 + [108]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [104])
	$8 = CALL $10(($3 + [112]), ($3 + [8]))
	*($3 + [88]) = [20964]
	*($3 + [92]) = CALL $743([20964])
	*($3) = *($3 + [88])
	$9 = CALL $10(($3 + [96]), $3)
	if ( ((uint_32)$1 >= (uint_32)[3]) ){ goto $label$2 }
	$5 = *((($1 << [2]) + [30452]))
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [20997])
	$5 = [8302]
	
.LABEL $label$1
	*(($3 + [40])) = [0]
	*($3 + [32]) = (int_64)0
	$1 = CALL $743($5)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$6 }
	*($3 + [32]) = ($1 << [1])
	$4 = (($3 + [32]) | [1])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = (($1 + [16]) & [-16])
	$4 = CALL _Znwj($10)
	*($3 + [32]) = ($10 | [1])
	*($3 + [40]) = $4
	*($3 + [36]) = $1
	
.LABEL $label$5
	CALL memcpy($4, $5, $1)
	
.LABEL $label$4
	*(($4 + $1)) = [0]
	$1 = (($3 + [32]) + [8])
	*((($3 + [48]) + [8])) = *($1)
	*($1) = [0]
	*((($3 + [48]) + [24])) = *(($2 + [8]))
	*(($3 + [80])) = *(($2 + [16]))
	*($3 + [48]) = *($3 + [32])
	*($3 + [32]) = (int_64)0
	*($3 + [64]) = *($2)
	*($3 + [152]) = *($8)
	*($3 + [160]) = *($9)
	*(($1 = CALL _Znwj([16]))) = $7
	*($1 + [8]) = $6
	*(($3 + [188])) = [0]
	$2 = ($1 + [16])
	*((($3 + [152]) + [24])) = $2
	*(($3 + [172])) = $2
	*($3 + [168]) = $1
	*($3 + [180 align=4]) = (int_64)0
	$1 = *($3 + [48])
	$2 = ( *($3 + [52]) ? uint_32($1 >> [1]) : ($1 & [1]) )
	$1 = ($2 + [24])
	$6 = (CASTING uint_64)(uint_32 $2)
	$2 = ($3 + [180])
	
.LOOP $label$7:
	$1 = ($1 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$7 }
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $11($2, $1)
	$2 = *(($3 + [184]))
	$1 = *(($3 + [180]))
	goto $label$8 
	
.LABEL $label$9
	$2 = [0]
	$1 = [0]
	
.LABEL $label$8
	*($3 + [196]) = $1
	*($3 + [192]) = $1
	*($3 + [200]) = $2
	CALL $479(($3 + [192]), ($3 + [48]))
	CALL $156(($3 + [192]), ($3 + [64]))
	CALL $13(($3 + [192]), ($3 + [152]))
	$1 = *($3 + [192])
	CALL send_inline($1, (*($3 + [196]) - $1))
	$1 = *($3 + [192])
	if ( ($1 == 0) ){ goto $label$10 }
	*($3 + [196]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$1 = *($3 + [180])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($3 + [184])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	$1 = *($3 + [168])
	if ( ($1 == 0) ){ goto $label$12 }
	*(($3 + [172])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$12
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($3 + [56]))
	
.LABEL $label$13
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*(($3 + [40])))
	
.LABEL $label$14
	$global$0 = ($3 + [208])
	return (unreachable)
	
.LABEL $label$3
	CALL $708(($3 + [32]))
}

int_32 .FUNC $528 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $11($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $295 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $720($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $573 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $306($0, ($1 + [32]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [24])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($4, $3, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $294 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$6 = *($1)
	$5 = *($1 + [4])
	$7 = int_32(($5 - $6) >> [4])
	if ( ((uint_32)$7 >= (uint_32)$2) ){ goto $label$4 }
	CALL $565($1, ($2 - $7))
	$5 = *(($1 + [4]))
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$3 }
	$6 = ($6 + ($2 << [4]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$6:
	$2 = ($5 + [-16])
	$7 = *(($5 + [-12]))
	if ( ($7 == 0) ){ goto $label$7 }
	*(($5 + [-8])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$7
	$5 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	*(($1 + [4])) = $6
	$5 = $6
	
.LABEL $label$3
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	$7 = ($0 + [4])
	$4 = ($0 + [8])
	
.LOOP $label$9:
	$6 = *($7)
	if ( ((uint_32)(*($4) - $6) > (uint_32)[1]) ){ goto $label$10 }
	CALL eosio_assert([0], [28806])
	$6 = *($7)
	
.LABEL $label$10
	CALL memcpy($2, $6, [2])
	*($7) = (*($7) + [2])
	CALL $528($0, ($2 + [4]))
	$2 = ($2 + [16])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$9 }
	
.LABEL $label$8
	return $0
}

void .FUNC $297 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $709(($3 + [32]), $2)
	*(($5 = ($3 + [8]))) = *((($3 + [32]) + [8]))
	*($3) = *($3 + [32])
	$4 = *($3)
	$1 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($5) ? ($3 | [1]) : $1 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $1 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($5))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $29 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	$5 = ($global$0 - [32])
	$global$0 = $5
	*($5 + [16]) = [8617]
	*($5 + [20]) = CALL $743([8617])
	*($5 + [8]) = *($5 + [16])
	CALL require_auth(*(CALL $10(($5 + [24]), ($5 + [8]))))
	$global$0 = ($5 + [32])
}

int_32 .FUNC $28 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [272])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [256]) = [0]
	*($4 + [248]) = (int_64)0
	*($4 + [258]) = [0]
	*($4 + [236]) = $2
	*($4 + [232]) = $2
	*($4 + [240]) = ($2 + $7)
	*($4 + [264]) = ($4 + [232])
	*($4 + [32]) = ($4 + [248])
	CALL $216(($4 + [32]), ($4 + [264]))
	$3 = *($4 + [240])
	*((($4 + [16]) + [8])) = $3
	*(($4 + [8])) = $3
	$8 = *($4 + [232])
	*($4) = $8
	*($4 + [16]) = $8
	$9 = CALL $20(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$10 = *($4 + [258])
	$11 = *($4 + [256])
	$0 = *($4 + [248])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $0), (int_64 ($11 & [65535])), (int_32 ($10 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $749($2)
	
.LABEL $label$5
	CALL $24($9)
	$global$0 = ($4 + [272])
	return [1]
}

void .FUNC $296 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $570($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $21 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [400])
	$global$0 = $3
	*($3 + [384]) = [8617]
	*($3 + [388]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [384])
	CALL require_auth(*(CALL $10(($3 + [392]), ($3 + [8]))))
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$1 }
	$5 = CALL _Znwj([280])
	$4 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$1
	$4 = CALL $127(($3 + [16]), $4)
	CALL $228($4, $1, $2)
	CALL $129($4)
	$global$0 = ($3 + [400])
}

int_32 .FUNC $20 (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [112])
	$global$0 = $4
	*(($5 = (($4 + [80]) + [8]))) = *(($3 + [8]))
	*($4 + [80]) = *($3)
	*($0) = $1
	*($0 + [8]) = $2
	$3 = *($5)
	*((($4 + [96]) + [8])) = $3
	$2 = *($4 + [80])
	*($0 + [16]) = $2
	*(($0 + [24])) = $3
	*($4 + [96]) = $2
	*($4 + [64]) = [8617]
	*($4 + [68]) = CALL $743([8617])
	*($4 + [24]) = *($4 + [64])
	$3 = CALL $10(($4 + [72]), ($4 + [24]))
	*($4 + [56]) = [8617]
	*($4 + [60]) = CALL $743([8617])
	*($4 + [16]) = *($4 + [56])
	CALL $10(($4 + [96]), ($4 + [16]))
	*(($0 + [40])) = (int_64)4298345121774150816
	*(($0 + [48])) = (int_64)-1
	*(($0 + [56])) = (int_64)0
	*(($0 + [64])) = [0]
	*($0 + [32]) = *($3)
	*($4 + [40]) = [8617]
	*($4 + [44]) = CALL $743([8617])
	*($4 + [8]) = *($4 + [40])
	$3 = CALL $10(($4 + [48]), ($4 + [8]))
	*($4 + [32]) = [8617]
	*($4 + [36]) = CALL $743([8617])
	*($4) = *($4 + [32])
	CALL $10(($4 + [96]), $4)
	*(($0 + [80])) = (int_64)4298345121774150816
	*(($0 + [88])) = (int_64)-1
	*(($0 + [96])) = (int_64)0
	*(($0 + [104])) = [0]
	*($0 + [72]) = *($3)
	CALL $243(($0 + [120]))
	*($0 + [112]) = [0]
	$global$0 = ($4 + [112])
	return $0
}

void .FUNC $23 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$4 = ($global$0 - [544])
	$global$0 = $4
	*($4 + [304]) = [8617]
	*($4 + [308]) = CALL $743([8617])
	*($4 + [64]) = *($4 + [304])
	CALL $10(($4 + [200]), ($4 + [64]))
	if ( ((int_64)$1 != (int_64)4298345121774150816) ){ goto $label$1 }
	*($4 + [296]) = [8351]
	*($4 + [300]) = CALL $743([8351])
	*($4 + [56]) = *($4 + [296])
	CALL $10(($4 + [112]), ($4 + [56]))
	if ( ((int_64)$3 != (int_64)-3617168760277827584) ){ goto $label$1 }
	CALL $14(($4 + [312]))
	if ( ((int_64)*($4 + [312]) == (int_64)$2) ){ goto $label$2 }
	if ( ((int_64)*($4 + [336]) == (int_64)$2) ){ goto $label$2 }
	if ( ((int_64)*($4 + [360]) == (int_64)$2) ){ goto $label$2 }
	if ( ((int_64)*($4 + [384]) == (int_64)$2) ){ goto $label$2 }
	if ( ((int_64)*($4 + [408]) == (int_64)$2) ){ goto $label$2 }
	if ( ((int_64)*($4 + [432]) == (int_64)$2) ){ goto $label$2 }
	if ( ((int_64)*($4 + [456]) == (int_64)$2) ){ goto $label$2 }
	if ( ((int_64)*($4 + [480]) == (int_64)$2) ){ goto $label$2 }
	if ( ((int_64)*($4 + [504]) != (int_64)$2) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $150(($4 + [312]))
	CALL sha256(($4 + [312]), (CALL $fimport$3() + [-12]), ($4 + [256]))
	$3 = *($4 + [256])
	$1 = (int_64)0
	*($4 + [248]) = (int_64)0
	$5 = *($4 + [348])
	if ( (((int_32)(*((($4 + [312]) + [40])) - $5) / (int_32)[40]) <= [2]) ){ goto $label$3 }
	$5 = *(($5 + [68]))
	*($4 + [248]) = ((int_64)((int_64)*($5 + [8]) + (int_64)*($5)) + (int_64)*($5 + [16]))
	$1 = ((int_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) + (int_64)*($4 + [248]))
	*($4 + [248]) = $1
	
.LABEL $label$3
	CALL $244(($4 + [200]))
	if ( ((int_64)*($4 + [208]) != (int_64)*($0)) ){ goto $label$5 }
	$5 = *(($4 + [348]))
	$6 = (*((($4 + [312]) + [40])) - $5)
	if ( ((int_32)$6 == (int_32)[40]) ){ goto $label$8 }
	*($4 + [192]) = [8351]
	*($4 + [196]) = CALL $743([8351])
	*($4 + [48]) = *($4 + [192])
	$7 = CALL $10(($4 + [112]), ($4 + [48]))
	if ( ((int_64)*((($5 + ((int_32)((int_32)$6 / (int_32)[40]) * (int_32)[40])) + [-32])) != (int_64)*($7)) ){ goto $label$7 }
	
.LABEL $label$8
	$8 = *($4 + [200])
	$5 = CALL $709(($4 + [176]), ($4 + [232]))
	$9 = *(($4 + [224]))
	*((($4 + [160]) + [8])) = $9
	*((($4 + [32]) + [8])) = $9
	$9 = *($4 + [216])
	*($4 + [32]) = $9
	*($4 + [160]) = $9
	$6 = CALL $245($4, $8, $5, ($4 + [32]))
	if ( ((*($5) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($5 + [8]))
	
.LABEL $label$9
	if ( $6 ){ goto $label$4 }
	$5 = ($4 + [216])
	goto $label$6 
	
.LABEL $label$7
	$5 = ($4 + [216])
	
.LABEL $label$6
	*(($6 = ($4 + [152]))) = (int_64)0
	*($4 + [144]) = (int_64)0
	*($4 + [136]) = (int_64)-3617168760277827584
	*($4 + [120]) = (int_64)4298345121774150816
	*($4 + [128]) = $2
	$2 = CALL current_time()
	*($6) = *(($5 + [8]))
	*($4 + [112]) = $2
	*($4 + [144]) = *($5)
	$5 = *([0] + [8632])
	if ( $5 ){ goto $label$10 }
	$6 = CALL _Znwj([280])
	$5 = CALL $111($6)
	*([0] + [8632]) = $6
	
.LABEL $label$10
	*($4 + [96]) = [8617]
	*($4 + [100]) = CALL $743([8617])
	*($4 + [24]) = *($4 + [96])
	CALL $246(($5 + [240]), ($4 + [112]), *(CALL $10(($4 + [104]), ($4 + [24]))))
	
.LABEL $label$5
	*($4 + [88]) = [8617]
	*($4 + [92]) = CALL $743([8617])
	*($4 + [16]) = *($4 + [88])
	$5 = CALL $10(($4 + [112]), ($4 + [16]))
	if ( ((int_64)*($4 + [200]) == (int_64)*($5)) ){ goto $label$4 }
	$1 = ((int_64)$1 + (int_64)$3)
	$6 = ($0 + [32])
	CALL $247(($4 + [112]), $6, $1)
	if ( (*($4 + [116]) == 0) ){ goto $label$11 }
	CALL $248(($4 + [112]), [21344], ($4 + [248]))
	if ( (*($4 + [112]) & [1]) ){ goto $label$13 }
	$5 = (($4 + [112]) | [1])
	goto $label$12 
	
.LABEL $label$13
	$5 = *($4 + [120])
	CALL _ZdlPv($5)
	
.LABEL $label$12
	CALL eosio_assert([0], $5)
	
.LABEL $label$11
	$5 = ($0 + [40])
	$7 = CALL db_lowerbound_i64(*($6), *($5), (int_64)-3609768575805423616, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$14 }
	CALL $249($6, $7)
	$5 = CALL db_lowerbound_i64(*(($0 + [32])), *($5), (int_64)-3609768575805423616, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$16 }
	$5 = CALL $249($6, $5)
	goto $label$15 
	
.LABEL $label$16
	$5 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$15
	$7 = CALL db_next_i64(*($5 + [12]), ($4 + [112]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$17 }
	CALL $249($6, $7)
	
.LABEL $label$17
	CALL $250($6, $5)
	
.LABEL $label$14
	*($4 + [72]) = [8617]
	*($4 + [76]) = CALL $743([8617])
	*($4 + [8]) = *($4 + [72])
	$2 = *(CALL $10(($4 + [80]), ($4 + [8])))
	if ( ((int_64)*($6) == (int_64)CALL current_receiver()) ){ goto $label$18 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$18
	*(($5 = CALL _Znwj([24])) + [8]) = $6
	*($5) = $1
	CALL memcpy(($4 + [112]), $5, [8])
	$1 = *($5)
	$7 = CALL db_store_i64(*(($0 + [40])), (int_64)-3609768575805423616, $2, $1, ($4 + [112]), [8])
	*($5 + [12]) = $7
	$6 = ($0 + [48])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$19 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$19
	*($4 + [536]) = $5
	$1 = *($5)
	*($4 + [112]) = $1
	*($4 + [532]) = $7
	$10 = ($0 + [60])
	$6 = *($10)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [64]))) ){ goto $label$21 }
	*($6 + [8]) = $1
	*($6 + [16]) = $7
	*($4 + [536]) = [0]
	*($6) = $5
	*($10) = ($6 + [24])
	goto $label$20 
	
.LABEL $label$21
	CALL $251(($0 + [56]), ($4 + [536]), ($4 + [112]), ($4 + [532]))
	
.LABEL $label$20
	$0 = *($4 + [536])
	*($4 + [536]) = [0]
	if ( ($0 == 0) ){ goto $label$4 }
	CALL _ZdlPv($0)
	
.LABEL $label$4
	if ( ((*($4 + [232]) & [1]) == 0) ){ goto $label$22 }
	CALL _ZdlPv(*(($4 + [240])))
	
.LABEL $label$22
	CALL $164(($4 + [312]))
	
.LABEL $label$1
	$global$0 = ($4 + [544])
}

int_32 .FUNC $22 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [232]) = [0]
	$3 = ($2 + $7)
	$8 = (($4 + [232]) | [1])
	if ( ($7 == 0) ){ goto $label$5 }
	CALL memcpy(($4 + [232]), $2, [1])
	$9 = ($2 + [1])
	if ( ((int_32)$7 != (int_32)[1]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	goto $label$4 
	
.LABEL $label$5
	CALL eosio_assert([0], [28806])
	CALL memcpy(($4 + [232]), $2, [1])
	$9 = ($2 + [1])
	
.LABEL $label$4
	CALL memcpy($8, $9, [1])
	*(($4 + [8])) = $3
	*($4 + [16]) = $2
	*($4 + [20]) = ($2 + [2])
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $20(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$9 = *($4 + [233])
	$10 = *($4 + [232])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 ($10 & [255])), (int_32 ($9 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $749($2)
	
.LABEL $label$7
	CALL $24($8)
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	$6 = ($global$0 - [448])
	$global$0 = $6
	*($6 + [440]) = $3
	CALL $149($0, $1, [0])
	$0 = CALL $109($6)
	CALL $167($0, $1, $2, ($6 + [440]), $4, $5)
	CALL $130($0)
	$global$0 = ($6 + [448])
}

int_32 .FUNC $24 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $252(($0 + [120]))
	$1 = *(($0 + [96]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [100])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ((*($4 + [48]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [56])))
	
.LABEL $label$6
	CALL _ZdlPv($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$3 = *(($0 + [96]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$1
	$1 = *(($0 + [56]))
	if ( ($1 == 0) ){ goto $label$7 }
	$2 = ($0 + [60])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$11 }
	CALL _ZdlPv($4)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$10 }
	$3 = *(($0 + [56]))
	goto $label$8 
	
.LABEL $label$9
	$3 = $1
	
.LABEL $label$8
	*($2) = $1
	CALL _ZdlPv($3)
	
.LABEL $label$7
	return $0
}

void .FUNC $27 (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	CALL $110($2)
	CALL $217($1, $2, $3)
}

int_32 .FUNC $26 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [368])
	$global$0 = $3
	*(($4 = $3) + [360]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $746($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [312])) = (int_64)0
	*(($4 + [304])) = (int_64)0
	*(($4 + [296])) = (int_64)0
	*(($4 + [336])) = (int_64)0
	*(($4 + [344])) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [244]) = $3
	*($4 + [240]) = $3
	*($4 + [248]) = ($3 + $2)
	*($4 + [16]) = ($4 + [240])
	*($4 + [40]) = ($4 + [256])
	CALL $165(($4 + [40]), ($4 + [16]))
	$5 = *($4 + [248])
	*((($4 + [24]) + [8])) = $5
	*(($4 + [8])) = $5
	$6 = *($4 + [240])
	*($4) = $6
	*($4 + [24]) = $6
	$5 = CALL $20(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $5
	*($4 + [20]) = ($4 + [360])
	CALL $166(($4 + [16]), ($4 + [256]))
	if ( ($2 <= [513]) ){ goto $label$5 }
	CALL $749($3)
	
.LABEL $label$5
	CALL $24($5)
	$3 = *(($4 + [340]))
	if ( ($3 == 0) ){ goto $label$6 }
	*(($4 + [344])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$3 = *(($4 + [328]))
	if ( ($3 == 0) ){ goto $label$7 }
	*(($4 + [332])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$global$0 = ($4 + [368])
	return [1]
}

void .FUNC $471 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($0)
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$1 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$1
	$6 = ($6 + [160])
	CALL $142(($3 + [24]), $6)
	$8 = ((int_64)*($3 + [40]) + (int_64)1)
	*($3 + [40]) = $8
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [16])
	CALL $113($6, ($3 + [24]), *(CALL $10(($3 + [88]), ($3 + [8]))))
	$6 = *($3 + [72])
	if ( ($6 == 0) ){ goto $label$2 }
	*(($3 + [76])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$2
	*($1) = $8
	$6 = *($4)
	*($1 + [48]) = *($6)
	*(($1 + [56])) = *(($6 + [8]))
	$6 = *($4 + [4])
	*($1 + [16]) = *($6)
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [8]) = *(*($4 + [8]))
	*($1 + [40]) = *(*($4 + [12]))
	$6 = [64]
	$4 = *($4 + [16])
	$7 = ($1 + [64])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	CALL $640($7, *($4), *($4 + [4]))
	
.LABEL $label$3
	$7 = *($1 + [64])
	$4 = *(($1 + [68]))
	$9 = ($4 - $7)
	$8 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$4:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$4 }
	$4 = ( $6 ? ($9 + $6) : ((int_32)$7 == (int_32)$4) )
	if ( ($4 <= [513]) ){ goto $label$6 }
	$6 = CALL $746($4)
	goto $label$5 
	
.LABEL $label$6
	$6 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$5
	*($3 + [28]) = $6
	*($3 + [24]) = $6
	*($3 + [32]) = ($6 + $4)
	CALL $641(($3 + [24]), $1)
	$8 = *($1)
	*($1 + [80]) = CALL db_store_i64(*($5 + [8]), (int_64)-4293738990248394752, *(*($0 + [8])), $8, $6, $4)
	if ( ($4 <= [513]) ){ goto $label$7 }
	CALL $749($6)
	
.LABEL $label$7
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$8 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$8
	$8 = *(($5 + [8]))
	$10 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [88]) = *(($1 + [8]))
	*($1 + [84]) = CALL db_idx64_store($8, (int_64)-4293738990248394752, $10, $11, ($3 + [88]))
	$global$0 = ($3 + [96])
}

void .FUNC $232 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [80])
	$global$0 = $2
	$3 = CALL $709(($2 + [64]), $1)
	*(($4 = (($2 + [40]) + [16]))) = *(($1 + [32]))
	*(($5 = (($2 + [40]) + [8]))) = *(($1 + [24]))
	*($2 + [24]) = (int_64)0
	*($2 + [32]) = [0]
	*($2 + [40]) = *($1 + [16])
	$6 = *($1 + [40])
	$7 = (*(($1 + [48])) - *($1 + [44]))
	if ( ($7 == 0) ){ goto $label$2 }
	$8 = int_32($7 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL _Znwj($7)
	*(($2 + [32])) = ($7 + ($8 << [4]))
	*($2 + [24]) = $7
	*($2 + [28]) = $7
	$8 = *(($1 + [44]))
	$1 = (*(($1 + [48])) - $8)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($7, $8, $1)
	*($2 + [28]) = (*($2 + [28]) + $1)
	
.LABEL $label$2
	*(($2 + [16])) = *($4)
	*(($2 + [8])) = *($5)
	*($2) = *($2 + [40])
	CALL $536($0, $3, $2, ($6 & [255]), ($2 + [24]))
	$1 = *($2 + [24])
	if ( ($1 == 0) ){ goto $label$3 }
	*($2 + [28]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$3
	if ( ((*($3) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$4
	$global$0 = ($2 + [80])
	return (unreachable)
	
.LABEL $label$1
	CALL $727(($2 + [24]))
}

int_32 .FUNC $293 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$5 = *($1)
	$7 = *($1 + [4])
	$6 = ((int_32)($7 - $5) / (int_32)[40])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$4 }
	CALL $566($1, ($2 - $6))
	$7 = *(($1 + [4]))
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$3 }
	$5 = ($5 + ((int_32)$2 * (int_32)[40]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$5 }
	
.LOOP $label$6:
	$2 = *(($7 + [-12]))
	if ( ($2 == 0) ){ goto $label$7 }
	*(($7 + [-8])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$7
	$2 = ($7 + [-40])
	$6 = *(($7 + [-24]))
	if ( ($6 == 0) ){ goto $label$8 }
	*(($7 + [-20])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$8
	$7 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$5
	*(($1 + [4])) = $5
	$7 = $5
	
.LABEL $label$3
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$9 }
	
.LOOP $label$10:
	CALL $567($0, $2)
	$2 = ($2 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$10 }
	
.LABEL $label$9
	return $0
}

int_32 .FUNC $470 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$2 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($5)
	$2 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $5)
	*($3 + [20]) = $4
	*($3 + [16]) = $4
	*($3 + [24]) = ($4 + $5)
	$6 = (int_64)0
	*(($5 = CALL _Znwj([48])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [32]) = $0
	CALL $637(($3 + [16]), $5)
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [8]) = $5
	$7 = *($5 + [8])
	$9 = *($5)
	$8 = *($5 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$9 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	*(($1 = CALL _Znwj([24])) + [8]) = $7
	*($1) = $9
	*($1 + [16]) = $8
	CALL sha256($1, [24], ($3 + [32]))
	$6 = *($3 + [32])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	*($3 + [32]) = $6
	$10 = *($3 + [8])
	$11 = *($10 + [36])
	*($3 + [4]) = $11
	$12 = ($0 + [28])
	$1 = *($12)
	if ( ((uint_32)$1 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($1 + [8]) = $6
	*($1 + [16]) = $11
	*($3 + [8]) = [0]
	*($1) = $10
	*($12) = ($1 + [24])
	if ( $2 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $466(($0 + [24]), ($3 + [8]), ($3 + [32]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $749($4)
	
.LABEL $label$10
	$1 = *($3 + [8])
	*($3 + [8]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [64])
	return $5
}

int_32 .FUNC $292 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [4])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [2])
	$3 = (*($2) + [2])
	*($2) = $3
	$2 = ($1 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [4])
	$2 = (*($6) + [4])
	*(($6 = ($0 + [4]))) = $2
	$7 = (int_64)0
	$8 = ($0 + [8])
	$5 = [0]
	
.LOOP $label$4:
	if ( ($2 <= *($8)) ){ goto $label$5 }
	CALL eosio_assert([0], [28802])
	$2 = *($6)
	
.LABEL $label$5
	$3 = *($2)
	$4 = ($2 + [1])
	*($6) = $4
	$2 = ($5 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $2)))
	$5 = ($2 + [7])
	$2 = $4
	if ( ($3 & [128]) ){ goto $label$4 }
	*($1 + [12]) = $7
	$2 = ($1 + [16])
	$6 = ($0 + [8])
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	$4 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	$2 = (*($5) + [1])
	*(($5 = ($0 + [4]))) = $2
	$7 = (int_64)0
	$4 = [0]
	
.LOOP $label$7:
	if ( ($2 <= *($6)) ){ goto $label$8 }
	CALL eosio_assert([0], [28802])
	$2 = *($5)
	
.LABEL $label$8
	$3 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$4 = ($4 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $4)))
	$4 = ($4 + [7])
	$2 = $2
	if ( ($3 & [128]) ){ goto $label$7 }
	*($1 + [20]) = $7
	return $0
}

void .FUNC $727 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $620 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (*($0) + [60])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	$4 = *($0)
	CALL $522(*($1), ($4 + [64]))
	CALL $522(*($1), ($4 + [76]))
	CALL $522(*($1), ($4 + [88]))
	*($2 + [8]) = $4
	CALL $621(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $378 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [28698])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *($2 + [92])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-4293738252348264448, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [92]) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$2 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$4 }
	CALL $377($1, *(*($0)), *($1 + [8]))
	*(($3 = *($1 + [4])) + [92]) = $2
	*(($0 + [4])) = $3
	goto $label$3 
	
.LABEL $label$4
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $379 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_64 $6
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$4 }
	$5 = *($4 + [8])
	*($0 + [8]) = $5
	$6 = ((int_64)((int_64)*($4) * (int_64)(CASTING int_64)(int_32 ((int_32)[98500] / (int_32)($2 + [-1])))) / (int_64)1000)
	*($0) = $6
	if ( (uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$5 }
	CALL eosio_assert([0], [22584])
	
.LABEL $label$5
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$8 }
	$5 = $6
	$2 = $0
	goto $label$7 
	
.LABEL $label$8
	$5 = $6
	
.LOOP $label$9:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$2 = ($0 + [1])
	$0 = $2
	if ( $4 ){ goto $label$9 }
	
.LABEL $label$7
	$0 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$4
	*($0) = (int_64)0
	$5 = *($4 + [8])
	*($0 + [8]) = $5
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$0 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$1 }
	$6 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$5 = $6
	$2 = $0
	goto $label$11 
	
.LABEL $label$12
	$5 = $6
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$1 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$4 = ((int_32)$0 < (int_32)[6])
	$2 = ($0 + [1])
	$0 = $2
	if ( $4 ){ goto $label$13 }
	
.LABEL $label$11
	$0 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[6]) ){ goto $label$10 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	CALL eosio_assert([0], [22633])
	return 
	
.LABEL $label$1
	CALL eosio_assert([0], [22633])
}

int_32 .FUNC $548 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	CALL $145($0, ($1 + [48]))
	$2 = *($0 + [4])
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [24])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [32])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $3, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($4, $3, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $372 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*(($5 + [68])) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)5445031321149636608, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $406($1, $5)
	if ( ((int_32)*($5 + [68]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $373 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [28698])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *($2 + [76])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)5445031321149636608, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [76]) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$2 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$4 }
	CALL $372($1, *(*($0)), *($1 + [8]))
	*(($3 = *($1 + [4])) + [76]) = $2
	*(($0 + [4])) = $3
	goto $label$3 
	
.LABEL $label$4
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $370 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [76]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4293738990248394752, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $417($1, $5)
	if ( ((int_32)*($5 + [76]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $371 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [28698])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *($2 + [84])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-4293738990248394752, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [84]) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$2 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$4 }
	CALL $370($1, *(*($0)), *($1 + [8]))
	*(($3 = *($1 + [4])) + [84]) = $2
	*(($0 + [4])) = $3
	goto $label$3 
	
.LABEL $label$4
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $376 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [28698])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *($2 + [76])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-8173735248220127232, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [76]) = $3
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	$2 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$4 }
	CALL $375($1, *(*($0)), *($1 + [8]))
	*(($3 = *($1 + [4])) + [76]) = $2
	*(($0 + [4])) = $3
	goto $label$3 
	
.LABEL $label$4
	*(($0 + [4])) = [0]
	
.LABEL $label$3
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $377 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [84]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-4293738252348264448, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $430($1, $5)
	if ( ((int_32)*($5 + [84]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $374 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $720($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $375 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*(($5 + [68])) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-8173735248220127232, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $436($1, $5)
	if ( ((int_32)*($5 + [68]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $626 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$2 = (*($0) + [24])
	*($0) = $2
	$4 = *($1 + [24])
	$3 = *(($1 + [28]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	$2 = ( $2 ? ($5 + $2) : ((int_32)$4 == (int_32)$3) )
	*($0) = $2
	$4 = *($1 + [36])
	$3 = *(($1 + [40]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$3 }
	$2 = (($5 & [-16]) + $2)
	
.LABEL $label$3
	*($0) = $2
	$4 = *($1 + [48])
	$3 = *(($1 + [52]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$4:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	$2 = (($5 & [-8]) + $2)
	
.LABEL $label$5
	*($0) = $2
	$4 = *($1 + [60])
	$3 = *(($1 + [64]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$2 = (($5 & [-8]) + $2)
	
.LABEL $label$7
	*($0) = $2
	$1 = *($1 + [72])
	$3 = *(($1 + [76]))
	$4 = ($3 - $1)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [2]))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$9 }
	$2 = (($4 & [-4]) + $2)
	
.LABEL $label$9
	*($0) = $2
	return $0
}

void .FUNC $290 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = *($1)
	$4 = *($1 + [4])
	$6 = ($4 - $5)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$2 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$2
	$5 = *(($1 + [96]))
	$4 = *(($1 + [100]))
	$6 = ($4 - $5)
	$7 = (CASTING uint_64)(uint_32 int_32($6 >> [3]))
	$3 = ($3 + [72])
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	$3 = (($6 & [-8]) + $3)
	
.LABEL $label$4
	$3 = ($3 + [20])
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $11($0, $3)
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = [0]
	$3 = [0]
	
.LABEL $label$5
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	CALL $553($2, $1)
	$0 = ($1 + [16])
	$3 = *($2 + [4])
	if ( ((int_32)(*($2 + [8]) - $3) > (int_32)[31]) ){ goto $label$7 }
	CALL eosio_assert([0], [22875])
	$3 = *($2 + [4])
	
.LABEL $label$7
	CALL memcpy($3, $0, [32])
	*($2 + [4]) = (*($2 + [4]) + [32])
	CALL $279($2, ($1 + [48]))
	$global$0 = ($2 + [16])
}

int_32 .FUNC $627 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [2]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [4])
	$4 = (*($7) + [4])
	*($7) = $4
	$6 = ($6 + [4])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $628 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [40])
	$2 = *($0 + [4])
	$0 = CALL $168($0, ($1 + [16]))
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [64])
	$2 = *($0 + [4])
	$0 = CALL $306($0, ($1 + [48]))
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $2, [1])
	$2 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $2
	$3 = ($1 + [72])
	if ( ((uint_32)(*(($0 + [8])) - $2) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [80])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[3]) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($1, $3, [4])
	*($2) = (*($2) + [4])
	return $0
}

int_32 .FUNC $540 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[1]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [2])
	*(($2 = ($0 + [4]))) = (*($2) + [2])
	$2 = ($1 + [32])
	$1 = *($0 + [4])
	$0 = CALL $537($0, ($1 + [20]))
	if ( ((int_32)*($0 + [8]) != (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$1 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($2, $1, [1])
	*(($1 = ($0 + [4]))) = (*($1) + [1])
	return $0
}

int_32 .FUNC $543 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [8]) = *($1)
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[15]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [16])
	$4 = (*($3) + [16])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [32])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $1, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $570 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [32])
	$global$0 = $3
	CALL $709(($3 + [16]), $1)
	$1 = (($3 + [16]) + [8])
	*(($3 + [8])) = *($1)
	*($3) = *($3 + [16])
	*($1) = [0]
	*($3 + [16]) = (int_64)0
	$1 = CALL $743($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($1 << [1])
	$4 = (($3 + [16]) | [1])
	$5 = $4
	if ( $1 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($3 + [16]) = ($4 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $1
	$4 = (($3 + [16]) | [1])
	
.LABEL $label$3
	CALL memcpy($5, $2, $1)
	
.LABEL $label$2
	*(($5 + $1)) = [0]
	$1 = *($3 + [16])
	$5 = ($1 & [1])
	$1 = CALL $716($3, ( *($3 + [24]) ? $4 : $5 ), ( *($3 + [20]) ? uint_32($1 >> [1]) : $5 ))
	$6 = *($1)
	*($1) = (int_64)0
	*($0) = $6
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*((($3 + [16]) + [8])))
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $571 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($1)
	if ( ((int_64)$5 == (int_64)0) ){ goto $label$4 }
	$6 = [0]
	$7 = *([0] + [23024])
	
.LOOP $label$6:
	*((($4 + [16]) + ($1 = $6))) = *(($7 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$5 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$1 == (int_32)[12]) )))))
	$6 = ($1 + [1])
	if ( ((uint_32)$1 > (uint_32)[11]) ){ goto $label$5 }
	$5 = ((int_64)$5 << (int_64)5)
	if ( ((int_64)$5 != (int_64)0) ){ goto $label$6 }
	
.LABEL $label$5
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$3 }
	*($4) = ($6 << [1])
	$7 = ($4 | [1])
	goto $label$2 
	
.LABEL $label$4
	*(($4 + [8])) = [0]
	*($4) = (int_64)0
	*($4) = [0]
	$1 = ($4 | [1])
	goto $label$1 
	
.LABEL $label$3
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($4) = ($8 | [1])
	*($4 + [8]) = $7
	*($4 + [4]) = $6
	
.LABEL $label$2
	$8 = ($1 + [1])
	$1 = [0]
	
.LOOP $label$7:
	*(($7 + $1)) = *((($4 + [16]) + $1))
	$1 = ($1 + [1])
	if ( ((int_32)$8 != (int_32)$1) ){ goto $label$7 }
	$1 = ($7 + $6)
	
.LABEL $label$1
	*($1) = [0]
	CALL $572(($4 + [16]), $2, $3)
	$1 = *($4 + [16])
	$6 = ($1 & [1])
	$1 = CALL $716($4, ( *($4 + [24]) ? (($4 + [16]) | [1]) : $6 ), ( *($4 + [20]) ? uint_32($1 >> [1]) : $6 ))
	$5 = *($1)
	*($1) = (int_64)0
	*($0) = $5
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*((($4 + [16]) + [8])))
	
.LABEL $label$8
	if ( ((*($4) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$9
	$global$0 = ($4 + [32])
}

void .FUNC $572 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	$1 = [0]
	*(($5 + $4)) = [0]
	$7 = *($2)
	if ( ((int_64)$7 == (int_64)0) ){ goto $label$8 }
	$5 = *([0] + [23024])
	
.LOOP $label$10:
	*((($3 + [35]) + ($4 = $1))) = *(($5 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$7 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$4 == (int_32)[12]) )))))
	$1 = ($4 + [1])
	if ( ((uint_32)$4 > (uint_32)[11]) ){ goto $label$9 }
	$7 = ((int_64)$7 << (int_64)5)
	if ( ((int_64)$7 != (int_64)0) ){ goto $label$10 }
	
.LABEL $label$9
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$7 }
	*($3) = ($1 << [1])
	$5 = ($3 | [1])
	goto $label$6 
	
.LABEL $label$8
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	*($3) = [0]
	$4 = ($3 | [1])
	$1 = $4
	goto $label$5 
	
.LABEL $label$7
	$2 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($2)
	*($3) = ($2 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $1
	
.LABEL $label$6
	$2 = ($4 + [1])
	$4 = [0]
	
.LOOP $label$11:
	*(($5 + $4)) = *((($3 + [35]) + $4))
	$4 = ($4 + [1])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$11 }
	$1 = ($5 + $1)
	$4 = ($3 | [1])
	
.LABEL $label$5
	*($1) = [0]
	$1 = *($3)
	$5 = ($1 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $4 : $5 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$12
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$13 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$13
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

int_32 .FUNC $542 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[48]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$6 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $543($0, $4)
	$4 = ($4 + [48])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $574 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $575 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_64 $7
	$6 = ($global$0 - [32])
	$global$0 = $6
	CALL $709(($6 + [16]), $1)
	$1 = (($6 + [16]) + [8])
	*(($6 + [8])) = *($1)
	*($6) = *($6 + [16])
	CALL $576(($6 + [16]), $2, $3, $4, $5)
	$2 = *($6 + [16])
	$3 = ($2 & [1])
	$2 = CALL $716($6, ( *($6 + [24]) ? (($6 + [16]) | [1]) : $3 ), ( *($6 + [20]) ? uint_32($2 >> [1]) : $3 ))
	$7 = *($2)
	*($2) = (int_64)0
	*($0) = $7
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($1))
	
.LABEL $label$1
	if ( ((*($6) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($6 + [8]))
	
.LABEL $label$2
	$global$0 = ($6 + [32])
}

void .FUNC $576 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $577($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $577 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL $709(($4 + [16]), $1)
	$1 = (($4 + [16]) + [8])
	*(($4 + [8])) = *($1)
	*($4) = *($4 + [16])
	CALL $578(($4 + [16]), $2, $3)
	$2 = *($4 + [16])
	$3 = ($2 & [1])
	$2 = CALL $716($4, ( *($4 + [24]) ? (($4 + [16]) | [1]) : $3 ), ( *($4 + [20]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*($1))
	
.LABEL $label$1
	if ( ((*($4) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$2
	$global$0 = ($4 + [32])
}

void .FUNC $578 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [48])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $709(($3 + [32]), $2)
	*(($5 = ($3 + [8]))) = *((($3 + [32]) + [8]))
	*($3) = *($3 + [32])
	$4 = *($3)
	$1 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($5) ? ($3 | [1]) : $1 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $1 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($5))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [48])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $545 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *(($1 + [8]))
	$4 = *($1)
	$5 = CALL _Znwj([48])
	*($2 + [24]) = $5
	*($2 + [16]) = (int_64)137438953521
	CALL memset($5, [48], [32])
	*($5 + [1]) = *((((CASTING uint_32)(uint_64 $4) & [15]) + [29684]))
	$6 = [0]
	*($5 + [32]) = [0]
	$7 = (($2 + [16]) | [1])
	
.LOOP $label$1:
	$4 = (uint_64)$4 >> (uint_64)(int_64)4
	*((( *((($2 + [16]) + [8])) ? $7 : (*($2 + [16]) & [1]) ) + ( $6 ? ($6 + [2]) : (($5 = ($6 + [1])) & [1]) ))) = *((((CASTING uint_32)(uint_64 $4)) & [15]) + [29684]))
	$4 = ((int_64)$4 | (int_64)((int_64)$3 << (int_64)60))
	$3 = (uint_64)$3 >> (uint_64)(int_64)4)
	$6 = $5
	if ( ((int_32)$5 != (int_32)[31]) ){ goto $label$1 }
	$3 = *(($1 + [24]))
	$4 = *($1 + [16])
	$5 = CALL _Znwj([48])
	*($2 + [8]) = $5
	*($2) = (int_64)137438953521
	CALL memset($5, [48], [32])
	*($5 + [1]) = *((((CASTING uint_32)(uint_64 $4) & [15]) + [29684]))
	$6 = [0]
	*($5 + [32]) = [0]
	$7 = ($2 | [1])
	$1 = ($2 + [8])
	
.LOOP $label$2:
	$4 = (uint_64)$4 >> (uint_64)(int_64)4
	*((( *($1) ? $7 : (*($2) & [1]) ) + ( $6 ? ($6 + [2]) : (($5 = ($6 + [1])) & [1]) ))) = *((((CASTING uint_32)(uint_64 $4)) & [15]) + [29684]))
	$4 = ((int_64)$4 | (int_64)((int_64)$3 << (int_64)60))
	$3 = (uint_64)$3 >> (uint_64)(int_64)4)
	$6 = $5
	if ( ((int_32)$5 != (int_32)[31]) ){ goto $label$2 }
	$6 = *($2)
	$5 = ($6 & [1])
	$1 = ($2 + [8])
	$6 = CALL $716(($2 + [16]), ( *($1) ? $7 : $5 ), ( *($2 + [4]) ? uint_32($6 >> [1]) : $5 ))
	$3 = *($6)
	*($6) = (int_64)0
	*($0) = $3
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($2) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($1))
	
.LABEL $label$3
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*(($2 + [24])))
	
.LABEL $label$4
	$global$0 = ($2 + [32])
}

void .FUNC $473 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	$2 = ($global$0 - [96])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($0)
	$6 = *([0] + [8632])
	if ( $6 ){ goto $label$1 }
	$7 = CALL _Znwj([280])
	$6 = CALL $111($7)
	*([0] + [8632]) = $7
	
.LABEL $label$1
	$6 = ($6 + [160])
	CALL $142(($3 + [24]), $6)
	$8 = ((int_64)*($3 + [40]) + (int_64)1)
	*($3 + [40]) = $8
	*($3 + [16]) = [8617]
	*($3 + [20]) = CALL $743([8617])
	*($3 + [8]) = *($3 + [16])
	CALL $113($6, ($3 + [24]), *(CALL $10(($3 + [88]), ($3 + [8]))))
	$6 = *($3 + [72])
	if ( ($6 == 0) ){ goto $label$2 }
	*(($3 + [76])) = $6
	CALL _ZdlPv($6)
	
.LABEL $label$2
	*($1) = $8
	$8 = (int_64)5459781
	$6 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$7 }
	$8 = $9
	$10 = $6
	goto $label$6 
	
.LABEL $label$7
	$8 = $9
	
.LOOP $label$8:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$4 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$7 = ((int_32)$6 < (int_32)[6])
	$10 = ($6 + [1])
	$6 = $10
	if ( $7 ){ goto $label$8 }
	
.LABEL $label$6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	CALL eosio_assert([0], [22633])
	
.LABEL $label$3
	*($1 + [48]) = (int_64)0
	*(($7 = ($1 + [56]))) = (int_64)1397703940
	$6 = *($4)
	*($1 + [16]) = *($6)
	*(($1 + [32])) = *(($6 + [16]))
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [40]) = *(*($4 + [8]))
	$6 = *(*($4 + [12]) + [4])
	*($1 + [64]) = *(*($6 + [24]))
	$6 = *($6 + [36])
	*($7) = *(($6 + [8]))
	*($1 + [48]) = *($6)
	$6 = *(*($4 + [12]) + [4])
	*($1 + [72]) = *(*($6 + [60]))
	*($1 + [80]) = *(*($6 + [72]))
	$7 = $2
	$6 = ($7 + [-80])
	$global$0 = $6
	*($3 + [28]) = $6
	*($3 + [24]) = $6
	*($3 + [32]) = ($7 + [-3])
	CALL $642(($3 + [24]), $1)
	$8 = *($1)
	*($1 + [88]) = CALL db_store_i64(*($5 + [8]), (int_64)-4293738252348264448, *(*($0 + [8])), $8, $6, [77])
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$9 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	$8 = *(($5 + [8]))
	$9 = *(*(($0 + [8])))
	$11 = *($1)
	*($3 + [88]) = *(($1 + [8]))
	*($1 + [92]) = CALL db_idx64_store($8, (int_64)-4293738252348264448, $9, $11, ($3 + [88]))
	$global$0 = ($3 + [96])
}

void .FUNC $472 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [64])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [68])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL _ZdlPv($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $475 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	$3 = ($global$0 - [32])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [84]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$5 = (int_64)0
	$6 = *($1 + [8])
	$8 = *($1)
	$7 = *($1 + [16])
	if ( ((int_64)((int_64)$7 | (int_64)$8) != (int_64)0) ){ goto $label$4 }
	$7 = (int_64)0
	if ( (int_64)($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($9 = CALL _Znwj([24])) + [8]) = $6
	*($9) = $8
	*($9 + [16]) = $7
	CALL sha256($9, [24], $4)
	$5 = *($4)
	if ( ($9 == 0) ){ goto $label$3 }
	CALL _ZdlPv($9)
	
.LABEL $label$3
	$9 = *($1 + [24])
	$11 = ($9 + [1])
	$10 = ($1 + [28])
	$12 = (*($10) - $11)
	if ( ($12 == 0) ){ goto $label$5 }
	CALL memmove($9, $11, $12)
	
.LABEL $label$5
	*($10) = ($9 + $12)
	$9 = *($1 + [48])
	$13 = ($9 + [8])
	$10 = ($1 + [52])
	$12 = (*($10) - $13)
	$11 = int_32($12 >> [3])
	if ( ($12 == 0) ){ goto $label$6 }
	CALL memmove($9, $13, $12)
	
.LABEL $label$6
	*($10) = ($9 + ($11 << [3]))
	$9 = *($1 + [36])
	$13 = ($9 + [16])
	$10 = ($1 + [40])
	$12 = (*($10) - $13)
	$11 = int_32($12 >> [4])
	if ( ($12 == 0) ){ goto $label$7 }
	CALL memmove($9, $13, $12)
	
.LABEL $label$7
	*($10) = ($9 + ($11 << [4]))
	$9 = *($1 + [60])
	$13 = ($9 + [8])
	$10 = ($1 + [64])
	$12 = (*($10) - $13)
	$11 = int_32($12 >> [3])
	if ( ($12 == 0) ){ goto $label$8 }
	CALL memmove($9, $13, $12)
	
.LABEL $label$8
	*($10) = ($9 + ($11 << [3]))
	$9 = *($1 + [72])
	$13 = ($9 + [4])
	$10 = ($1 + [76])
	$12 = (*($10) - $13)
	$11 = int_32($12 >> [2])
	if ( ($12 == 0) ){ goto $label$9 }
	CALL memmove($9, $13, $12)
	
.LABEL $label$9
	*($10) = ($9 + ($11 << [2]))
	$6 = (int_64)0
	$7 = *(($1 + [8]))
	$14 = *($1)
	$8 = *(($1 + [16]))
	if ( ((int_64)((int_64)$8 | (int_64)$14) != (int_64)0) ){ goto $label$11 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	*(($9 = CALL _Znwj([24])) + [8]) = $7
	*($9) = $14
	*($9 + [16]) = $8
	CALL sha256($9, [24], $4)
	$6 = *($4)
	if ( ($9 == 0) ){ goto $label$10 }
	CALL _ZdlPv($9)
	
.LABEL $label$10
	if ( ((int_64)$5 == (int_64)$6) ){ goto $label$12 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$12
	*($4) = [0]
	CALL $626($4, $1)
	$12 = *($4)
	if ( ($12 <= [513]) ){ goto $label$14 }
	$9 = CALL $746($12)
	goto $label$13 
	
.LABEL $label$14
	$9 = ($3 - (($12 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$13
	*($4 + [4]) = $9
	*($4) = $9
	*($4 + [8]) = ($9 + $12)
	CALL $627(CALL $553(CALL $553(CALL $230(CALL $522(CALL $156($4, $1), ($1 + [24])), ($1 + [36])), ($1 + [48])), ($1 + [60])), ($1 + [72]))
	CALL db_update_i64(*($1 + [88]), $2, $9, $12)
	if ( ($12 <= [513]) ){ goto $label$15 }
	CALL $749($9)
	
.LABEL $label$15
	if ( (uint_64)($5 <= *($0 + [16])) ){ goto $label$16 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$5 + (int_64)1) : ((uint_64)$5 > (uint_64)(int_64)-3) )
	
.LABEL $label$16
	$global$0 = ($4 + [32])
}

void .FUNC $474 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL _ZdlPv($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $477 (int_32 $0, int_32 $1)
{
	int_32 $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	CALL $11($0, [2])
	$0 = *($0)
	$2 = (*($0 + [4]) - $0)
	if ( ((int_32)$2 > (int_32)[0]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	
.LABEL $label$1
	CALL memcpy($0, $1, [1])
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	if ( ((int_32)($2 + [-1]) <= (int_32)[0]) ){ goto $label$2 }
	CALL memcpy($0, $1, [1])
	return 
	
.LABEL $label$2
	CALL eosio_assert([0], [22875])
	CALL memcpy($0, $1, [1])
}

void .FUNC $476 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [32])
	$global$0 = $2
	if ( ((int_32)*($1 + [84]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$3 = (int_64)0
	$4 = *($1 + [8])
	$6 = *($1)
	$5 = *($1 + [16])
	if ( ((int_64)((int_64)$5 | (int_64)$6) != (int_64)0) ){ goto $label$4 }
	$5 = (int_64)0
	if ( (int_64)($4 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($7 = CALL _Znwj([24])) + [8]) = $4
	*($7) = $6
	*($7 + [16]) = $5
	CALL sha256($7, [24], $2)
	$3 = *($2)
	if ( ($7 == 0) ){ goto $label$3 }
	CALL _ZdlPv($7)
	
.LABEL $label$3
	$9 = *(($0 + [28]))
	$8 = *($0 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$6 }
	$10 = $9
	
.LOOP $label$7:
	$10 = ($10 + [-24])
	$7 = *($10)
	$5 = *($7 + [8])
	$6 = *($7)
	$4 = *($7 + [16])
	if ( ((int_64)((int_64)$4 | (int_64)$6) != (int_64)0) ){ goto $label$9 }
	$4 = (int_64)0
	if ( (int_64)($5 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	*(($7 = CALL _Znwj([24])) + [8]) = $5
	*($7) = $6
	*($7 + [16]) = $4
	CALL sha256($7, [24], $2)
	$4 = *($2)
	if ( ($7 == 0) ){ goto $label$8 }
	CALL _ZdlPv($7)
	
.LABEL $label$8
	if ( ((int_64)$4 == (int_64)$3) ){ goto $label$5 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$7 }
	
.LABEL $label$6
	$9 = $8
	
.LABEL $label$5
	if ( ((int_32)$9 != (int_32)*(($0 + [24]))) ){ goto $label$10 }
	CALL eosio_assert([0], [29265])
	
.LABEL $label$10
	$11 = *(($0 + [28]))
	if ( ((int_32)$9 == (int_32)$11) ){ goto $label$13 }
	$7 = $9
	
.LOOP $label$14:
	$10 = *($7)
	*($7) = [0]
	$8 = ($7 + [-24])
	$9 = *($8)
	*($8) = $10
	if ( ($9 == 0) ){ goto $label$15 }
	$10 = *($9 + [72])
	if ( ($10 == 0) ){ goto $label$16 }
	*(($9 + [76])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$16
	$10 = *($9 + [60])
	if ( ($10 == 0) ){ goto $label$17 }
	*(($9 + [64])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$17
	$10 = *($9 + [48])
	if ( ($10 == 0) ){ goto $label$18 }
	*(($9 + [52])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$18
	$10 = *($9 + [36])
	if ( ($10 == 0) ){ goto $label$19 }
	*(($9 + [40])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$19
	$10 = *($9 + [24])
	if ( ($10 == 0) ){ goto $label$20 }
	*(($9 + [28])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$20
	CALL _ZdlPv($9)
	
.LABEL $label$15
	*(($7 + [-8])) = *(($7 + [16]))
	*(($7 + [-16])) = *(($7 + [8]))
	$7 = ($7 + [24])
	if ( ((int_32)$11 != (int_32)$7) ){ goto $label$14 }
	$8 = ($7 + [-24])
	$9 = *(($0 + [28]))
	if ( ((int_32)($9 + [24]) != (int_32)$7) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$8 = ($9 + [-24])
	
.LABEL $label$12
	
.LOOP $label$21:
	$9 = ($9 + [-24])
	$7 = *($9)
	*($9) = [0]
	if ( ($7 == 0) ){ goto $label$22 }
	$10 = *($7 + [72])
	if ( ($10 == 0) ){ goto $label$23 }
	*(($7 + [76])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$23
	$10 = *($7 + [60])
	if ( ($10 == 0) ){ goto $label$24 }
	*(($7 + [64])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$24
	$10 = *($7 + [48])
	if ( ($10 == 0) ){ goto $label$25 }
	*(($7 + [52])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$25
	$10 = *($7 + [36])
	if ( ($10 == 0) ){ goto $label$26 }
	*(($7 + [40])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$26
	$10 = *($7 + [24])
	if ( ($10 == 0) ){ goto $label$27 }
	*(($7 + [28])) = $10
	CALL _ZdlPv($10)
	
.LABEL $label$27
	CALL _ZdlPv($7)
	
.LABEL $label$22
	if ( ((int_32)$8 != (int_32)$9) ){ goto $label$21 }
	
.LABEL $label$11
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [88]))
	$global$0 = ($2 + [32])
}

void .FUNC $231 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *(($1 + [28]))
	if ( ((int_32)$5 == (int_32)*($1 + [24])) ){ goto $label$4 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [56]) == (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-8173740188290908160, (int_64)-8173740188290908160)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$2 }
	$5 = CALL $121($1, $5)
	if ( ((int_32)*($5 + [56]) == (int_32)$1) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	CALL $215($0, $5)
	goto $label$1 
	
.LABEL $label$2
	*($4 + [8]) = $3
	CALL $509($4, $1, $2, ($4 + [8]))
	CALL $215($0, *($4 + [4]))
	
.LABEL $label$1
	$global$0 = ($4 + [16])
}

void .FUNC $679 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$2 }
	$6 = ($1 + [8])
	CALL $596($6, *($4 + [8]), *(($4 + [12])))
	CALL $596(($1 + [20]), *($4 + [20]), *(($4 + [24])))
	*($1 + [32]) = *($4 + [32])
	CALL $551(($1 + [36]), *($4 + [36]), *(($4 + [40])))
	goto $label$1 
	
.LABEL $label$2
	*($1 + [32]) = *($4 + [32])
	$6 = ($1 + [8])
	
.LABEL $label$1
	$6 = *($6)
	$7 = *(($1 + [12]))
	$8 = ($7 - $6)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	$4 = [8]
	
.LOOP $label$3:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$4 }
	$4 = (($8 & [-16]) + $4)
	
.LABEL $label$4
	$7 = *($1 + [20])
	$6 = *(($1 + [24]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$5:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$6 }
	$4 = (($8 & [-16]) + $4)
	
.LABEL $label$6
	$4 = ($4 + [1])
	$7 = *($1 + [36])
	$6 = *(($1 + [40]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	
.LOOP $label$7:
	$4 = ($4 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	$4 = (($8 & [-8]) + $4)
	
.LABEL $label$8
	if ( ($4 <= [513]) ){ goto $label$10 }
	$2 = CALL $746($4)
	goto $label$9 
	
.LABEL $label$10
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$9
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $4)
	CALL $680($3, $1)
	*($1 + [52]) = CALL db_store_i64(*($5 + [8]), (int_64)-4293730779636826112, *(*($0 + [8])), (int_64)-4293730779636826112, $2, $4)
	if ( ($4 <= [513]) ){ goto $label$11 }
	CALL $749($2)
	
.LABEL $label$11
	if ( ((uint_64)*($5 + [16]) > (uint_64)(int_64)-4293730779636826112) ){ goto $label$12 }
	*(($5 + [16])) = (int_64)-4293730779636826111
	
.LABEL $label$12
	$global$0 = ($3 + [16])
}

void .FUNC $551 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [3])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [3])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL _ZdlPv($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	$6 = [536870911]
	if ( ((uint_32)int_32($5 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [2])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [3])
	$6 = CALL _Znwj($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [3])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [3]) << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $727($0)
}

void .FUNC $677 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = [8]
	$6 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $596(($1 + [8]), *($4 + [8]), *(($4 + [12])))
	CALL $596(($1 + [20]), *($4 + [20]), *(($4 + [24])))
	
.LABEL $label$1
	*($1 + [32]) = *($4 + [32])
	*($1 + [33 align=1]) = *($4 + [33 align=1])
	$7 = *($1 + [8])
	$4 = *(($1 + [12]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	$5 = (($8 & [-16]) + $5)
	
.LABEL $label$3
	$7 = *($1 + [20])
	$4 = *(($1 + [24]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$4:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$5 = (($8 & [-16]) + $5)
	
.LABEL $label$5
	$4 = ($5 + [3])
	if ( ($4 <= [513]) ){ goto $label$7 }
	$5 = CALL $746($4)
	goto $label$6 
	
.LABEL $label$7
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$6
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $4)
	CALL $678($3, $1)
	*($1 + [44]) = CALL db_store_i64(*($6 + [8]), (int_64)5445039531761205248, *(*($0 + [8])), (int_64)5445039531761205248, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$8 }
	CALL $749($5)
	
.LABEL $label$8
	if ( ((uint_64)*($6 + [16]) > (uint_64)(int_64)5445039531761205248) ){ goto $label$9 }
	*(($6 + [16])) = (int_64)5445039531761205249
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

int_32 .FUNC $676 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $230(CALL $230($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $3, [1])
	$2 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $2
	$1 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $2) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

void .FUNC $675 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *(*($0 + [4]))
	*($1) = *($4)
	$5 = [8]
	$6 = *($0)
	if ( ((int_32)$1 == (int_32)$4) ){ goto $label$1 }
	CALL $596(($1 + [8]), *($4 + [8]), *(($4 + [12])))
	CALL $596(($1 + [20]), *($4 + [20]), *(($4 + [24])))
	
.LABEL $label$1
	*($1 + [32]) = *($4 + [32])
	*($1 + [40]) = *($4 + [40])
	$7 = *($1 + [8])
	$4 = *(($1 + [12]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	$5 = (($8 & [-16]) + $5)
	
.LABEL $label$3
	$7 = *($1 + [20])
	$4 = *(($1 + [24]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$4:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$5 = (($8 & [-16]) + $5)
	
.LABEL $label$5
	$4 = ($5 + [9])
	if ( ($4 <= [513]) ){ goto $label$7 }
	$5 = CALL $746($4)
	goto $label$6 
	
.LABEL $label$7
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	
.LABEL $label$6
	*($3 + [4]) = $5
	*($3) = $5
	*($3 + [8]) = ($5 + $4)
	CALL $676($3, $1)
	*($1 + [52]) = CALL db_store_i64(*($6 + [8]), (int_64)-4812911374179631104, *(*($0 + [8])), (int_64)-4812911374179631104, $5, $4)
	if ( ($4 <= [513]) ){ goto $label$8 }
	CALL $749($5)
	
.LABEL $label$8
	if ( ((uint_64)*($6 + [16]) > (uint_64)(int_64)-4812911374179631104) ){ goto $label$9 }
	*(($6 + [16])) = (int_64)-4812911374179631103
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

int_32 .FUNC $674 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $673 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = *($1)
	$1 = CALL $743($4)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [16]) = ($1 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $1
	
.LABEL $label$4
	CALL memcpy($5, $4, $1)
	
.LABEL $label$3
	*(($5 + $1)) = [0]
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$1 = CALL $743($2)
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$8 }
	*($3) = ($1 << [1])
	$4 = ($3 | [1])
	$5 = $4
	if ( $1 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = (($1 + [16]) & [-16])
	$5 = CALL _Znwj($4)
	*($3) = ($4 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $1
	$4 = ($3 | [1])
	
.LABEL $label$7
	CALL memcpy($5, $2, $1)
	
.LABEL $label$6
	*(($5 + $1)) = [0]
	$1 = *($3)
	$5 = ($1 & [1])
	$1 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $4 : $5 ), ( *($3 + [4]) ? uint_32($1 >> [1]) : $5 ))
	$7 = *($1)
	*($1) = (int_64)0
	*($0) = $7
	$1 = ($1 + [8])
	*(($0 + [8])) = *($1)
	*($1) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$9
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$10
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $708(($3 + [16]))
	
.LABEL $label$1
	CALL $708($3)
	(unreachable)
}

void .FUNC $672 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $673($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $671 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	$5 = ($global$0 - [32])
	$global$0 = $5
	CALL $721(($5 + [16]), *($1))
	CALL $672($5, $2, $3, $4)
	$2 = *($5)
	$3 = ($2 & [1])
	$2 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $3 ), ( *($5 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$6 = *($2)
	*($2) = (int_64)0
	*($0) = $6
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$1
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$2
	$global$0 = ($5 + [32])
}

void .FUNC $670 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $721($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $273 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($1 + [200])
	$4 = CALL db_lowerbound_i64(*($1 + [200]), *(($1 + [208])), (int_64)-4418111932367241216, (int_64)0)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	CALL $274($3, $4)
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [17102])
	
.LABEL $label$1
	$4 = [0]
	$1 = ($1 + [208])
	$5 = ($1 + [200])
	$6 = CALL db_lowerbound_i64(*($5), *($1), (int_64)-4418111932367241216, (int_64)0)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$3 }
	$4 = CALL $274($3, $6)
	
.LABEL $label$3
	*($0) = *($4 + [16])
	*(($0 + [24])) = *(($4 + [40]))
	*(($0 + [16])) = *(($4 + [32]))
	*(($0 + [8])) = *(($4 + [24]))
	$1 = CALL db_lowerbound_i64(*($5), *($1), (int_64)-4418111932367241216, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$5 }
	$1 = CALL $274($3, $1)
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$4
	$4 = CALL db_next_i64(*($1 + [52]), ($2 + [8]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$6 }
	CALL $274($3, $4)
	
.LABEL $label$6
	CALL $275($3, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $272 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	*(($3 = CALL _Znwj([80])) + [56]) = [0]
	*($3 + [48 align=4]) = (int_64)0
	*($3) = [0]
	*($3 + [8]) = (int_64)0
	*($3 + [16]) = (int_64)0
	*($3 + [24]) = (int_64)0
	*($3 + [32]) = (int_64)0
	*($3 + [40]) = (int_64)0
	*($3 + [64]) = $1
	CALL $550(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-7297072577464238080
	$5 = *($3 + [68])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-7297072577464238080
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $549(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [48])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [52])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

void .FUNC $271 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [40])) = *(($3 + [40]))
	*(($1 + [32])) = *(($3 + [32]))
	*(($1 + [24])) = *(($3 + [24]))
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	if ( ((int_32)$1 == (int_32)$3) ){ goto $label$3 }
	CALL $551(($1 + [48]), *($3 + [48]), *(($3 + [52])))
	
.LABEL $label$3
	$7 = *($1 + [48])
	$6 = *(($1 + [52]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [3]))
	$3 = [41]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$3 = (($8 & [-8]) + $3)
	
.LABEL $label$5
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $746($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $552($5, $1)
	CALL db_update_i64(*(($1 + [68])), $2, $4, $3)
	if ( ($3 <= [513]) ){ goto $label$8 }
	CALL $749($4)
	
.LABEL $label$8
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-7297072577464238080) ){ goto $label$9 }
	*(($0 + [16])) = (int_64)-7297072577464238079
	
.LABEL $label$9
	$global$0 = ($5 + [16])
}

void .FUNC $270 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [32])
	$global$0 = $4
	*(($4 + [24])) = [0]
	*($4 + [16]) = (int_64)0
	$5 = CALL $743($1)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$4 }
	*($4 + [16]) = ($5 << [1])
	$6 = (($4 + [16]) | [1])
	if ( $5 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($5 + [16]) & [-16])
	$6 = CALL _Znwj($7)
	*($4 + [16]) = ($7 | [1])
	*($4 + [24]) = $6
	*($4 + [20]) = $5
	
.LABEL $label$3
	CALL memcpy($6, $1, $5)
	
.LABEL $label$2
	*(($6 + $5)) = [0]
	CALL $547($4, $2, $3)
	$5 = *($4)
	$6 = ($5 & [1])
	$5 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $6 ), ( *($4 + [4]) ? uint_32($5 >> [1]) : $6 ))
	$8 = *($5)
	*($5) = (int_64)0
	*($0) = $8
	$5 = ($5 + [8])
	*(($0 + [8])) = *($5)
	*($5) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$5
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$6
	$global$0 = ($4 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($4 + [16]))
}

void .FUNC $277 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$7 = ($global$0 - [32])
	$global$0 = $7
	*(($7 + [24])) = [0]
	*($7 + [16]) = (int_64)0
	$8 = CALL $743($1)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$4 }
	*($7 + [16]) = ($8 << [1])
	$9 = (($7 + [16]) | [1])
	if ( $8 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$10 = (($8 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($7 + [16]) = ($10 | [1])
	*($7 + [24]) = $9
	*($7 + [20]) = $8
	
.LABEL $label$3
	CALL memcpy($9, $1, $8)
	
.LABEL $label$2
	*(($9 + $8)) = [0]
	CALL $554($7, $2, $3, $4, $5, $6)
	$8 = *($7)
	$9 = ($8 & [1])
	$8 = CALL $716(($7 + [16]), ( *($7 + [8]) ? ($7 | [1]) : $9 ), ( *($7 + [4]) ? uint_32($8 >> [1]) : $9 ))
	$11 = *($8)
	*($8) = (int_64)0
	*($0) = $11
	$8 = ($8 + [8])
	*(($0 + [8])) = *($8)
	*($8) = [0]
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($7 + [8])))
	
.LABEL $label$5
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($7 + [24]))
	
.LABEL $label$6
	$global$0 = ($7 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($7 + [16]))
}

void .FUNC $276 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [44]) = [0]
	$3 = *($1)
	if ( ((int_32)*($1 + [4]) == (int_32)$3) ){ goto $label$1 }
	$4 = (($2 + [48]) | [1])
	$5 = ($1 + [4])
	$6 = ($2 + [56])
	$7 = [0]
	
.LOOP $label$2:
	CALL $273($2, $0)
	$7 = ($3 + ($7 << [5]))
	if ( (CALL $742($7, $2, [32]) == 0) ){ goto $label$3 }
	CALL $277(($2 + [48]), [17146], ($2 + [44]), [17149], $7, [17245], $2)
	$7 = $4
	if ( ((*($2 + [48]) & [1]) == 0) ){ goto $label$4 }
	$7 = *($6)
	CALL _ZdlPv($7)
	
.LABEL $label$4
	CALL eosio_assert([0], $7)
	
.LABEL $label$3
	$7 = (*($2 + [44]) + [1])
	*($2 + [44]) = $7
	$3 = *($1)
	if ( ($7 <= int_32((*($5) - $3) >> [5])) ){ goto $label$2 }
	
.LABEL $label$1
	$global$0 = ($2 + [64])
}

void .FUNC $275 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [52]))
	$9 = *(($1 + [56]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx128_find_primary(*($0), *($0 + [8]), (int_64)-4418111932367241216, $2, *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx128_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $274 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$2 = CALL $746($4)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL _Znwj([64])) + [48]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [16])
	$8 = ($2 + [8])
	if ( ((uint_32)($4 + [-8]) > (uint_32)[31]) ){ goto $label$9 }
	CALL eosio_assert([0], [28806])
	
.LABEL $label$9
	CALL memcpy($7, $8, [32])
	*($5 + [56]) = [-1]
	*($5 + [52]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$12 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	CALL $267(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	CALL $749($2)
	
.LABEL $label$10
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $279 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [16])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[31]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [32])
	*($2) = (*($2) + [32])
	$3 = ($1 + [60])
	$2 = *($0 + [4])
	$0 = CALL $553($0, ($1 + [48]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [64])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$1 = ($1 + [72])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

void .FUNC $278 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [240])
	$global$0 = $2
	*($2 + [168]) = [8617]
	*($2 + [172]) = CALL $743([8617])
	*($2 + [24]) = *($2 + [168])
	$3 = CALL $10(($2 + [176]), ($2 + [24]))
	*($2 + [152]) = [8344]
	*($2 + [156]) = CALL $743([8344])
	*($2 + [16]) = *($2 + [152])
	$4 = CALL $10(($2 + [160]), ($2 + [16]))
	*($2 + [136]) = [8617]
	$5 = *($4)
	$6 = *($3)
	*($2 + [140]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [136])
	$7 = CALL $10(($2 + [144]), ($2 + [8]))
	*($2 + [120]) = [17267]
	*($2 + [124]) = CALL $743([17267])
	*($2) = *($2 + [120])
	$8 = CALL $10(($2 + [128]), $2)
	*(($2 + [88])) = [0]
	$3 = [40]
	*((($2 + [32]) + [40])) = *(($1 + [40]))
	*((($2 + [32]) + [32])) = *(($1 + [32]))
	*((($2 + [32]) + [24])) = *(($1 + [24]))
	*((($2 + [32]) + [16])) = *(($1 + [16]))
	*($2 + [80]) = (int_64)0
	*($2 + [40]) = *(($1 + [8]))
	*($2 + [32]) = *($1)
	$9 = ($2 + [80])
	$4 = (*(($1 + [52])) - *($1 + [48]))
	if ( ($4 == 0) ){ goto $label$2 }
	$10 = int_32($4 >> [3])
	if ( ((uint_32)$10 >= (uint_32)[536870912]) ){ goto $label$1 }
	$4 = CALL _Znwj($4)
	*((($2 + [32]) + [48])) = $4
	*(($11 = (($2 + [32]) + [52]))) = $4
	*(($2 + [88])) = ($4 + ($10 << [3]))
	$12 = *(($1 + [48]))
	$10 = (*(($1 + [52])) - $12)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$2 }
	CALL memcpy($4, $12, $10)
	*($11) = (*($11) + $10)
	
.LABEL $label$2
	*((($2 + [32]) + [76])) = *(($1 + [76]))
	*((($2 + [32]) + [68])) = *(($1 + [68]))
	*($2 + [92 align=4]) = *($1 + [60 align=4])
	*($2 + [184]) = *($7)
	*($2 + [192]) = *($8)
	*(($1 = CALL _Znwj([16]))) = $6
	*($1 + [8]) = $5
	*(($2 + [220])) = [0]
	$4 = ($1 + [16])
	*((($2 + [184]) + [24])) = $4
	*(($2 + [204])) = $4
	*($2 + [200]) = $1
	*($2 + [212 align=4]) = (int_64)0
	$4 = *($9)
	$1 = *((($2 + [32]) + [52]))
	$7 = ($1 - $4)
	$5 = (CASTING uint_64)(uint_32 int_32($7 >> [3]))
	$8 = ($2 + [212])
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$4 }
	$3 = (($7 & [-8]) + $3)
	
.LABEL $label$4
	$3 = ($3 + [20])
	if ( ($3 == 0) ){ goto $label$6 }
	CALL $11($8, $3)
	$1 = *(($2 + [216]))
	$3 = *(($2 + [212]))
	goto $label$5 
	
.LABEL $label$6
	$1 = [0]
	$3 = [0]
	
.LABEL $label$5
	*($2 + [228]) = $3
	*($2 + [224]) = $3
	*($2 + [232]) = $1
	CALL $279(($2 + [224]), ($2 + [32]))
	CALL $13(($2 + [224]), ($2 + [184]))
	$3 = *($2 + [224])
	CALL send_inline($3, (*($2 + [228]) - $3))
	$3 = *($2 + [224])
	if ( ($3 == 0) ){ goto $label$7 }
	*($2 + [228]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$3 = *($2 + [212])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($2 + [216])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$8
	$3 = *($2 + [200])
	if ( ($3 == 0) ){ goto $label$9 }
	*(($2 + [204])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$9
	$3 = *($2 + [80])
	if ( ($3 == 0) ){ goto $label$10 }
	*(($2 + [84])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$10
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$1
	CALL $727($9)
}

int_32 .FUNC $152 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $184(CALL $306($0, ($1 + [16])), ($1 + [32]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	return *($2) = (*($2) + [8])
}

int_64 .FUNC $153 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [64])
	$global$0 = $3
	$4 = ($0 + [80])
	CALL $132(($3 + [24]), $4, $1)
	$5 = *($3 + [28])
	if ( ($5 == 0) ){ goto $label$2 }
	$2 = *($5 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = [8617]
	*($3 + [12]) = CALL $743([8617])
	*($3) = *($3 + [8])
	$6 = *(CALL $10(($3 + [16]), $3))
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$3 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$3
	*(($5 = CALL _Znwj([32])) + [16]) = $4
	*($5) = $1
	*($5 + [8]) = $2
	CALL memcpy(($3 + [48]), $5, [8])
	CALL memcpy((($3 + [48]) | [8]), ($5 + [8]), [8])
	$1 = *($5)
	$7 = CALL db_store_i64(*(($0 + [88])), (int_64)7235159551874301952, $6, $1, ($3 + [48]), [16])
	*($5 + [20]) = $7
	$4 = ($0 + [96])
	if ( (uint_64)($1 <= *($4)) ){ goto $label$4 }
	*($4) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*($3 + [40]) = $5
	$1 = *($5)
	*($3 + [48]) = $1
	*($3 + [36]) = $7
	$8 = ($0 + [108])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [112]))) ){ goto $label$6 }
	*($4 + [8]) = $1
	*($4 + [16]) = $7
	*($3 + [40]) = [0]
	*($4) = $5
	*($8) = ($4 + [24])
	goto $label$5 
	
.LABEL $label$6
	CALL $268(($0 + [104]), ($3 + [40]), ($3 + [48]), ($3 + [36]))
	
.LABEL $label$5
	$0 = *($3 + [40])
	*($3 + [40]) = [0]
	if ( ($0 == 0) ){ goto $label$1 }
	CALL _ZdlPv($0)
	
.LABEL $label$1
	$global$0 = ($3 + [64])
	return $2
}

void .FUNC $150 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	$1 = ($global$0 - [16])
	$global$0 = $1
	$3 = CALL _Znaj($2)
	$2 = CALL read_transaction($3, $2)
	$2 = CALL transaction_size()
	if ( ((int_32)$2 == (int_32)$2) ){ goto $label$1 }
	if ( ($3 == 0) ){ goto $label$2 }
	CALL _ZdaPv($3)
	
.LABEL $label$2
	CALL eosio_assert([0], [17612])
	
.LABEL $label$1
	*($1 + [4]) = $3
	*($1) = $3
	*($1 + [8]) = ($3 + $2)
	$4 = CALL current_time()
	*($0 + [12]) = [0]
	*($0 + [16]) = [0]
	*($0 + [20 align=4]) = (int_64)0
	*(($0 + [28])) = (int_64)0
	*($0 + [36 align=4]) = (int_64)0
	*(($0 + [44])) = (int_64)0
	*(($0 + [52])) = (int_64)0
	*($0) = ((CASTING uint_32)(uint_64 ((uint_64)$4 / (uint_64)(int_64)1000000)) + [60])
	CALL $292($1, $0)
	CALL $294(CALL $293(CALL $293($1, ($0 + [24])), ($0 + [36])), ($0 + [48]))
	if ( ($3 == 0) ){ goto $label$3 }
	CALL _ZdaPv($3)
	
.LABEL $label$3
	$global$0 = ($1 + [16])
}

void .FUNC $151 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$5 = ($global$0 - [560])
	$global$0 = $5
	*($0 + [8]) = (int_64)0
	*($0) = (int_64)0
	CALL $150(($5 + [264]))
	$6 = *($5 + [300])
	$7 = ((int_32)(*((($5 + [264]) + [40])) - $6) / (int_32)[40])
	*($5 + [260]) = $7
	if ( ((int_32)($7 | [1]) == (int_32)[3]) ){ goto $label$1 }
	CALL $295(($5 + [344]), [17659], ($5 + [260]))
	if ( (*($5 + [344]) & [1]) ){ goto $label$3 }
	$6 = (($5 + [344]) | [1])
	goto $label$2 
	
.LABEL $label$3
	$6 = *($5 + [352])
	CALL _ZdlPv($6)
	
.LABEL $label$2
	CALL eosio_assert([0], $6)
	$6 = *(($5 + [300]))
	
.LABEL $label$1
	*($5 + [248]) = [8617]
	*($5 + [252]) = CALL $743([8617])
	*($5 + [64]) = *($5 + [248])
	$7 = CALL $10(($5 + [344]), ($5 + [64]))
	if ( ((int_64)*($6 + [40]) == (int_64)*($7)) ){ goto $label$4 }
	*($5 + [240]) = [8617]
	*($5 + [244]) = CALL $743([8617])
	*($5 + [56]) = *($5 + [240])
	$8 = *(CALL $10(($5 + [200]), ($5 + [56])))
	if ( ((int_64)$8 == (int_64)0) ){ goto $label$8 }
	$7 = [0]
	$9 = *([0] + [23024])
	
.LOOP $label$10:
	*((($5 + [328]) + ($6 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$8 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$7 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$9 }
	$8 = ((int_64)$8 << (int_64)5)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$10 }
	
.LABEL $label$9
	*(($5 + [160])) = [0]
	*($5 + [152]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$7 }
	*($5 + [152]) = ($7 << [1])
	$9 = (($5 + [152]) | [1])
	goto $label$6 
	
.LABEL $label$8
	*(($5 + [160])) = [0]
	*($5 + [152]) = (int_64)0
	*($5 + [152]) = [0]
	$6 = (($5 + [152]) | [1])
	goto $label$5 
	
.LABEL $label$7
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [152]) = ($10 | [1])
	*($5 + [160]) = $9
	*($5 + [156]) = $7
	
.LABEL $label$6
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$11:
	*(($9 + $6)) = *((($5 + [328]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$11 }
	$6 = ($9 + $7)
	
.LABEL $label$5
	*($6) = [0]
	CALL $296(($5 + [344]), [17780], ($5 + [152]), [17851])
	if ( (*($5 + [344]) & [1]) ){ goto $label$13 }
	$6 = (($5 + [344]) | [1])
	goto $label$12 
	
.LABEL $label$13
	$6 = *($5 + [352])
	CALL _ZdlPv($6)
	
.LABEL $label$12
	CALL eosio_assert([0], $6)
	if ( ((*($5 + [152]) & [1]) == 0) ){ goto $label$4 }
	CALL _ZdlPv(*($5 + [160]))
	
.LABEL $label$4
	$8 = *((*(($5 + [300])) + [48]))
	if ( ((int_64)$8 == (int_64)$3) ){ goto $label$14 }
	if ( ((int_64)$8 == (int_64)$4) ){ goto $label$14 }
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$18 }
	$7 = [0]
	$9 = *([0] + [23024])
	
.LOOP $label$20:
	*((($5 + [328]) + ($6 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$3 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$7 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$19 }
	$3 = ((int_64)$3 << (int_64)5)
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$20 }
	
.LABEL $label$19
	*(($5 + [160])) = [0]
	*($5 + [152]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$17 }
	*($5 + [152]) = ($7 << [1])
	$9 = (($5 + [152]) | [1])
	goto $label$16 
	
.LABEL $label$18
	*(($5 + [160])) = [0]
	*($5 + [152]) = (int_64)0
	*($5 + [152]) = [0]
	$6 = (($5 + [152]) | [1])
	goto $label$15 
	
.LABEL $label$17
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [152]) = ($10 | [1])
	*($5 + [160]) = $9
	*($5 + [156]) = $7
	
.LABEL $label$16
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$21:
	*(($9 + $6)) = *((($5 + [328]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$21 }
	$6 = ($9 + $7)
	
.LABEL $label$15
	*($6) = [0]
	CALL $297(($5 + [344]), [17879], ($5 + [152]))
	if ( (*($5 + [344]) & [1]) ){ goto $label$23 }
	$6 = (($5 + [344]) | [1])
	goto $label$22 
	
.LABEL $label$23
	$6 = *($5 + [352])
	CALL _ZdlPv($6)
	
.LABEL $label$22
	CALL eosio_assert([0], $6)
	if ( ((*($5 + [152]) & [1]) == 0) ){ goto $label$14 }
	CALL _ZdlPv(*($5 + [160]))
	
.LABEL $label$14
	if ( ((int_32)*($5 + [260]) != (int_32)[3]) ){ goto $label$24 }
	$9 = ($5 + [300])
	$6 = *($9)
	*($5 + [232]) = [17948]
	*($5 + [236]) = CALL $743([17948])
	*($5 + [48]) = *($5 + [232])
	$7 = CALL $10(($5 + [344]), ($5 + [48]))
	if ( ((int_64)*(($6 + [88])) != (int_64)*($7)) ){ goto $label$25 }
	$6 = *($9)
	*($5 + [224]) = [8561]
	*($5 + [228]) = CALL $743([8561])
	*($5 + [40]) = *($5 + [224])
	$7 = CALL $10(($5 + [152]), ($5 + [40]))
	if ( ((int_64)*($6 + [80]) == (int_64)*($7)) ){ goto $label$24 }
	
.LABEL $label$25
	CALL eosio_assert([0], CALL $298([17961]))
	
.LABEL $label$24
	$6 = ($5 + [300])
	$3 = *(*($6))
	CALL $14(($5 + [344]))
	if ( ((int_64)$3 == (int_64)*($5 + [344])) ){ goto $label$28 }
	if ( ((int_64)*($5 + [368]) == (int_64)$3) ){ goto $label$28 }
	if ( ((int_64)*($5 + [392]) == (int_64)$3) ){ goto $label$28 }
	if ( ((int_64)*($5 + [416]) == (int_64)$3) ){ goto $label$28 }
	if ( ((int_64)*($5 + [440]) == (int_64)$3) ){ goto $label$28 }
	if ( ((int_64)*($5 + [464]) == (int_64)$3) ){ goto $label$28 }
	if ( ((int_64)*($5 + [488]) == (int_64)$3) ){ goto $label$28 }
	if ( ((int_64)*($5 + [512]) == (int_64)$3) ){ goto $label$28 }
	if ( ((int_64)*($5 + [536]) != (int_64)$3) ){ goto $label$27 }
	
.LABEL $label$28
	$6 = *($6)
	*($5 + [216]) = [8351]
	*($5 + [220]) = CALL $743([8351])
	*($5 + [32]) = *($5 + [216])
	$7 = CALL $10(($5 + [344]), ($5 + [32]))
	if ( ((int_64)*($6 + [8]) == (int_64)*($7)) ){ goto $label$26 }
	
.LABEL $label$27
	*($5 + [152]) = [23061]
	CALL $299(($5 + [344]), [18049], ($5 + [152]))
	if ( (*($5 + [344]) & [1]) ){ goto $label$30 }
	$6 = (($5 + [344]) | [1])
	goto $label$29 
	
.LABEL $label$30
	$6 = *($5 + [352])
	CALL _ZdlPv($6)
	
.LABEL $label$29
	CALL eosio_assert([0], $6)
	
.LABEL $label$26
	$6 = *(($5 + [300]))
	$7 = *($6 + [28])
	*($5 + [200]) = $7
	*($5 + [204]) = $7
	*($5 + [208]) = *(($6 + [32]))
	*(($6 = ($5 + [176]))) = (int_64)0
	*(($5 + [192])) = [0]
	*($5 + [160]) = (int_64)0
	*($5 + [152]) = (int_64)0
	*($5 + [168]) = (int_64)0
	*($5 + [184]) = (int_64)0
	CALL $152(($5 + [200]), ($5 + [152]))
	*(($0 + [8])) = *($6)
	*($0) = *($5 + [168])
	*($5 + [328]) = [8414]
	*($5 + [332]) = CALL $743([8414])
	*($5 + [24]) = *($5 + [328])
	$6 = CALL $10(($5 + [344]), ($5 + [24]))
	$3 = *($5 + [152])
	$8 = *($2 + [8])
	if ( ((int_64)$8 != (int_64)*($6)) ){ goto $label$32 }
	if ( ((int_64)$3 == (int_64)*($2 + [16])) ){ goto $label$31 }
	CALL eosio_assert([0], [18135])
	goto $label$31 
	
.LABEL $label$32
	if ( ((int_64)$3 == (int_64)$8) ){ goto $label$31 }
	CALL eosio_assert([0], [18135])
	
.LABEL $label$31
	*($5 + [144]) = [8617]
	*($5 + [148]) = CALL $743([8617])
	*($5 + [16]) = *($5 + [144])
	$6 = CALL $10(($5 + [344]), ($5 + [16]))
	if ( ((int_64)*(($5 + [160])) == (int_64)*($6)) ){ goto $label$33 }
	CALL eosio_assert([0], [18162])
	
.LABEL $label$33
	if ( ((int_64)*($0) > (int_64)0) ){ goto $label$34 }
	CALL eosio_assert([0], [18199])
	
.LABEL $label$34
	$3 = *(($0 + [8]))
	CALL $14(($5 + [344]))
	$6 = ($5 + [344])
	if ( ((int_64)$3 == (int_64)*($5 + [352])) ){ goto $label$36 }
	if ( ((int_64)*(($5 + [376])) != (int_64)$3) ){ goto $label$37 }
	$6 = ($5 + [368])
	goto $label$36 
	
.LABEL $label$37
	if ( ((int_64)*(($5 + [400])) != (int_64)$3) ){ goto $label$38 }
	$6 = ($5 + [392])
	goto $label$36 
	
.LABEL $label$38
	if ( ((int_64)*(($5 + [424])) != (int_64)$3) ){ goto $label$39 }
	$6 = ($5 + [416])
	goto $label$36 
	
.LABEL $label$39
	if ( ((int_64)*(($5 + [448])) != (int_64)$3) ){ goto $label$40 }
	$6 = ($5 + [440])
	goto $label$36 
	
.LABEL $label$40
	if ( ((int_64)*(($5 + [472])) != (int_64)$3) ){ goto $label$41 }
	$6 = ($5 + [464])
	goto $label$36 
	
.LABEL $label$41
	if ( ((int_64)*(($5 + [496])) != (int_64)$3) ){ goto $label$42 }
	$6 = ($5 + [488])
	goto $label$36 
	
.LABEL $label$42
	if ( ((int_64)*(($5 + [520])) != (int_64)$3) ){ goto $label$43 }
	$6 = ($5 + [512])
	goto $label$36 
	
.LABEL $label$43
	if ( ((int_64)*(($5 + [544])) != (int_64)$3) ){ goto $label$35 }
	$6 = ($5 + [536])
	
.LABEL $label$36
	if ( ((int_64)$3 == (int_64)*($6 + [8])) ){ goto $label$35 }
	*($5 + [328]) = [23061]
	CALL $300(($5 + [344]), [18241], ($5 + [328]))
	if ( (*($5 + [344]) & [1]) ){ goto $label$45 }
	$6 = (($5 + [344]) | [1])
	goto $label$44 
	
.LABEL $label$45
	$6 = *($5 + [352])
	CALL _ZdlPv($6)
	
.LABEL $label$44
	CALL eosio_assert([0], $6)
	$3 = *(($0 + [8]))
	
.LABEL $label$35
	$3 = CALL $15($3)
	*($5 + [136]) = $3
	$8 = *(*(($5 + [300])))
	if ( ((int_64)$3 == (int_64)$8) ){ goto $label$46 }
	*($5 + [328]) = $8
	CALL $301(($5 + [344]), [18278], ($5 + [328]), [18310], ($5 + [136]))
	if ( (*($5 + [344]) & [1]) ){ goto $label$48 }
	$6 = (($5 + [344]) | [1])
	goto $label$47 
	
.LABEL $label$48
	$6 = *($5 + [352])
	CALL _ZdlPv($6)
	
.LABEL $label$47
	CALL eosio_assert([0], $6)
	
.LABEL $label$46
	$7 = ($1 + [240])
	$6 = *(($1 + [268]))
	if ( ((int_32)$6 == (int_32)*(($1 + [264]))) ){ goto $label$51 }
	$6 = *(($6 + [-24]))
	if ( ((int_32)*($6 + [48]) == (int_32)$7) ){ goto $label$52 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$52
	if ( $6 ){ goto $label$49 }
	goto $label$50 
	
.LABEL $label$51
	$6 = CALL db_find_i64(*($7), *(($1 + [248])), (int_64)8516495933114040320, (int_64)8516495933114040320)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$50 }
	if ( ((int_32)*(CALL $302($7, $6) + [48]) == (int_32)$7) ){ goto $label$49 }
	CALL eosio_assert([0], [28728])
	goto $label$49 
	
.LABEL $label$50
	CALL eosio_assert([0], [18325])
	
.LABEL $label$49
	$6 = *(($1 + [268]))
	if ( ((int_32)$6 == (int_32)*(($1 + [264]))) ){ goto $label$55 }
	$6 = *(($6 + [-24]))
	if ( ((int_32)*($6 + [48]) == (int_32)$7) ){ goto $label$56 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$56
	if ( $6 ){ goto $label$53 }
	goto $label$54 
	
.LABEL $label$55
	$6 = CALL db_find_i64(*(($1 + [240])), *(($1 + [248])), (int_64)8516495933114040320, (int_64)8516495933114040320)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$54 }
	$6 = CALL $302($7, $6)
	if ( ((int_32)*($6 + [48]) == (int_32)$7) ){ goto $label$53 }
	CALL eosio_assert([0], [28728])
	goto $label$53 
	
.LABEL $label$54
	$6 = [0]
	CALL eosio_assert([0], [29701])
	
.LABEL $label$53
	*((($5 + [344]) + [40])) = *(($6 + [40]))
	*((($5 + [344]) + [32])) = *(($6 + [32]))
	*((($5 + [344]) + [24])) = *(($6 + [24]))
	*((($5 + [344]) + [16])) = *(($6 + [16]))
	*((($5 + [344]) + [8])) = *(($6 + [8]))
	*($5 + [344]) = *($6)
	$6 = *(($1 + [268]))
	if ( ((int_32)$6 == (int_32)*(($1 + [264]))) ){ goto $label$59 }
	$6 = *(($6 + [-24]))
	if ( ((int_32)*($6 + [48]) == (int_32)$7) ){ goto $label$60 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$60
	if ( $6 ){ goto $label$58 }
	goto $label$57 
	
.LABEL $label$59
	$6 = CALL db_find_i64(*(($1 + [240])), *(($1 + [248])), (int_64)8516495933114040320, (int_64)8516495933114040320)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$57 }
	$6 = CALL $302($7, $6)
	if ( ((int_32)*($6 + [48]) == (int_32)$7) ){ goto $label$58 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$58
	$9 = CALL db_next_i64(*($6 + [52]), ($5 + [328]))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$61 }
	CALL $302($7, $9)
	
.LABEL $label$61
	CALL $303($7, $6)
	
.LABEL $label$57
	if ( ((int_64)*($5 + [344]) == (int_64)CALL current_time()) ){ goto $label$62 }
	CALL eosio_assert([0], [18378])
	
.LABEL $label$62
	$3 = *($5 + [360])
	if ( ((int_64)$3 != (int_64)*($5 + [136])) ){ goto $label$64 }
	$3 = *($5 + [368])
	*($5 + [128]) = [8351]
	*($5 + [132]) = CALL $743([8351])
	*($5 + [8]) = *($5 + [128])
	CALL $10(($5 + [328]), ($5 + [8]))
	if ( ((int_64)$3 != (int_64)-3617168760277827584) ){ goto $label$65 }
	$3 = *($5 + [352])
	*($5 + [120]) = [8617]
	*($5 + [124]) = CALL $743([8617])
	*($5) = *($5 + [120])
	CALL $10(($5 + [104]), $5)
	if ( ((int_64)$3 == (int_64)4298345121774150816) ){ goto $label$63 }
	
.LABEL $label$65
	$3 = *(($5 + [360]))
	
.LABEL $label$64
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$69 }
	$7 = [0]
	$9 = *([0] + [23024])
	
.LOOP $label$71:
	*((($5 + [328]) + ($6 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$3 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$7 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$70 }
	$3 = ((int_64)$3 << (int_64)5)
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$71 }
	
.LABEL $label$70
	*(($5 + [112])) = [0]
	*($5 + [104]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$68 }
	*($5 + [104]) = ($7 << [1])
	$9 = (($5 + [104]) | [1])
	goto $label$67 
	
.LABEL $label$69
	*(($5 + [112])) = [0]
	*($5 + [104]) = (int_64)0
	*($5 + [104]) = [0]
	$6 = (($5 + [104]) | [1])
	goto $label$66 
	
.LABEL $label$68
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [104]) = ($10 | [1])
	*($5 + [112]) = $9
	*($5 + [108]) = $7
	
.LABEL $label$67
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$72:
	*(($9 + $6)) = *((($5 + [328]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$72 }
	$6 = ($9 + $7)
	
.LABEL $label$66
	$7 = [0]
	*($6) = [0]
	$3 = *($5 + [368])
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$76 }
	$9 = *([0] + [23024])
	
.LOOP $label$78:
	*((($5 + [328]) + ($6 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$3 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$7 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$77 }
	$3 = ((int_64)$3 << (int_64)5)
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$78 }
	
.LABEL $label$77
	*(($5 + [96])) = [0]
	*($5 + [88]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$75 }
	*($5 + [88]) = ($7 << [1])
	$9 = (($5 + [88]) | [1])
	goto $label$74 
	
.LABEL $label$76
	*(($5 + [96])) = [0]
	*($5 + [88]) = (int_64)0
	*($5 + [88]) = [0]
	$6 = (($5 + [88]) | [1])
	goto $label$73 
	
.LABEL $label$75
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [88]) = ($10 | [1])
	*($5 + [96]) = $9
	*($5 + [92]) = $7
	
.LABEL $label$74
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$79:
	*(($9 + $6)) = *((($5 + [328]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$79 }
	$6 = ($9 + $7)
	
.LABEL $label$73
	$7 = [0]
	*($6) = [0]
	$3 = *($5 + [352])
	if ( ((int_64)$3 == (int_64)0) ){ goto $label$83 }
	$9 = *([0] + [23024])
	
.LOOP $label$85:
	*((($5 + [328]) + ($6 = $7))) = *(($9 + (CASTING uint_32)(uint_64 (uint_64)((int_64)$3 & (int_64)-576460752303423488) >> (uint_64)( (int_64)60 ? (int_64)59 : ((int_32)$6 == (int_32)[12]) )))))
	$7 = ($6 + [1])
	if ( ((uint_32)$6 > (uint_32)[11]) ){ goto $label$84 }
	$3 = ((int_64)$3 << (int_64)5)
	if ( ((int_64)$3 != (int_64)0) ){ goto $label$85 }
	
.LABEL $label$84
	*(($5 + [80])) = [0]
	*($5 + [72]) = (int_64)0
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$82 }
	*($5 + [72]) = ($7 << [1])
	$9 = (($5 + [72]) | [1])
	goto $label$81 
	
.LABEL $label$83
	*(($5 + [80])) = [0]
	*($5 + [72]) = (int_64)0
	*($5 + [72]) = [0]
	$6 = (($5 + [72]) | [1])
	goto $label$80 
	
.LABEL $label$82
	$10 = (($7 + [16]) & [-16])
	$9 = CALL _Znwj($10)
	*($5 + [72]) = ($10 | [1])
	*($5 + [80]) = $9
	*($5 + [76]) = $7
	
.LABEL $label$81
	$10 = ($6 + [1])
	$6 = [0]
	
.LOOP $label$86:
	*(($9 + $6)) = *((($5 + [328]) + $6))
	$6 = ($6 + [1])
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$86 }
	$6 = ($9 + $7)
	
.LABEL $label$80
	*($6) = [0]
	CALL $304(($5 + [328]), [18425], ($5 + [104]), [18468], ($5 + [88]), [18479], ($5 + [72]))
	if ( (*($5 + [328]) & [1]) ){ goto $label$88 }
	$6 = (($5 + [328]) | [1])
	goto $label$87 
	
.LABEL $label$88
	$6 = *($5 + [336])
	CALL _ZdlPv($6)
	
.LABEL $label$87
	CALL eosio_assert([0], $6)
	if ( ((*($5 + [72]) & [1]) == 0) ){ goto $label$89 }
	CALL _ZdlPv(*($5 + [80]))
	
.LABEL $label$89
	if ( ((*($5 + [88]) & [1]) == 0) ){ goto $label$90 }
	CALL _ZdlPv(*($5 + [96]))
	
.LABEL $label$90
	if ( ((*($5 + [104]) & [1]) == 0) ){ goto $label$63 }
	CALL _ZdlPv(*($5 + [112]))
	
.LABEL $label$63
	$6 = ($5 + [376])
	if ( ((int_64)*(($0 + [8])) == (int_64)*(($5 + [384]))) ){ goto $label$91 }
	CALL eosio_assert([0], [23115])
	
.LABEL $label$91
	if ( ((int_64)*($0) == (int_64)*($6)) ){ goto $label$92 }
	CALL $305(($5 + [328]), [18492], $0, [18538], $6)
	if ( (*($5 + [328]) & [1]) ){ goto $label$94 }
	$6 = (($5 + [328]) | [1])
	goto $label$93 
	
.LABEL $label$94
	$6 = *($5 + [336])
	CALL _ZdlPv($6)
	
.LABEL $label$93
	CALL eosio_assert([0], $6)
	
.LABEL $label$92
	if ( ((*($5 + [184]) & [1]) == 0) ){ goto $label$95 }
	CALL _ZdlPv(*(($5 + [192])))
	
.LABEL $label$95
	CALL $164(($5 + [264]))
	$global$0 = ($5 + [560])
}

void .FUNC $408 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	$3 = ($global$0 - [1456])
	$global$0 = $3
	$4 = *($2)
	$5 = (*($2 + [4]) - $4)
	if ( ((int_32)$5 == (int_32)[8]) ){ goto $label$1 }
	*($3 + [1224]) = int_32($5 >> [3])
	CALL $401(($3 + [608]), [19717], ($3 + [1224]))
	if ( (*($3 + [608]) & [1]) ){ goto $label$3 }
	$4 = (($3 + [608]) | [1])
	goto $label$2 
	
.LABEL $label$3
	$4 = *($3 + [616])
	CALL _ZdlPv($4)
	
.LABEL $label$2
	CALL eosio_assert([0], $4)
	$4 = *($2)
	
.LABEL $label$1
	$6 = ($0 + [160])
	CALL $370(($3 + [1432]), $6, *($4))
	$4 = *($3 + [1436])
	if ( $4 ){ goto $label$4 }
	CALL $402(($3 + [608]), [19758], *($2))
	if ( (*($3 + [608]) & [1]) ){ goto $label$6 }
	$2 = (($3 + [608]) | [1])
	goto $label$5 
	
.LABEL $label$6
	$2 = *($3 + [616])
	CALL _ZdlPv($2)
	
.LABEL $label$5
	CALL eosio_assert([0], $2)
	$4 = *($3 + [1436])
	
.LABEL $label$4
	$7 = *($4 + [40])
	$2 = *($1 + [48])
	if ( ((uint_32)int_32((*(($1 + [52])) - $2) >> [3]) > (uint_32)[1]) ){ goto $label$8 }
	$8 = CALL current_time()
	$4 = CALL tapos_block_num()
	$5 = CALL tapos_block_prefix()
	*(($2 = CALL _Znwj([8]))) = ((int_64)((int_64)$8 + (int_64)(CASTING int_64)(int_32 $4)) + (int_64)(CASTING int_64)(int_32 $5))
	CALL sha256($2, [8], ($3 + [608]))
	if ( ($2 == 0) ){ goto $label$9 }
	CALL _ZdlPv($2)
	
.LABEL $label$9
	$8 = *($3 + [608])
	goto $label$7 
	
.LABEL $label$8
	$8 = *($2 + [8])
	
.LABEL $label$7
	$9 = (uint_64)$7 >> (uint_64)(int_64)32)
	$10 = ((int_64)$7 & (int_64)4294967295)
	$5 = [0]
	*($3 + [1431]) = [0]
	$2 = *($1 + [60])
	if ( ((int_32)$2 == (int_32)[7]) ){ goto $label$12 }
	if ( ((int_32)$2 == (int_32)[9]) ){ goto $label$13 }
	if ( ((int_32)$2 != (int_32)[8]) ){ goto $label$11 }
	*($3 + [615 align=1]) = (int_64)0
	*($3 + [608]) = (int_64)0
	$7 = ((int_64)$8 + (int_64)$9)
	$8 = ((int_64)*(*(($1 + [48]))) + (int_64)$10)
	$5 = [0]
	$2 = [0]
	
.LOOP $label$14:
	CALL __udivti3(($3 + [344]), $7, $8, (int_64)41, (int_64)0)
	$8 = *((($3 + [344]) + [8]))
	$9 = *($3 + [344])
	CALL __multi3(($3 + [328]), $9, $8, (int_64)41, (int_64)0)
	$4 = *(((CASTING uint_32)(uint_64 (int_64))($7 - *($3 + [328]))) + [28864])
	*((($3 + [608]) + $2)) = $4)
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$15 }
	$5 = ($5 + [1])
	*($3 + [1431]) = $5
	
.LABEL $label$15
	$7 = $9
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[15]) ){ goto $label$14 }
	*($3 + [1423 align=1]) = *($3 + [615 align=1])
	*($3 + [1416]) = *($3 + [608])
	goto $label$10 
	
.LABEL $label$13
	*($3 + [615 align=1]) = (int_64)0
	*($3 + [608]) = (int_64)0
	$7 = ((int_64)$8 + (int_64)$9)
	$8 = ((int_64)*(*(($1 + [48]))) + (int_64)$10)
	$5 = [0]
	$2 = [0]
	
.LOOP $label$16:
	CALL __udivti3(($3 + [408]), $7, $8, (int_64)41, (int_64)0)
	$8 = *((($3 + [408]) + [8]))
	$9 = *($3 + [408])
	CALL __multi3(($3 + [392]), $9, $8, (int_64)41, (int_64)0)
	$4 = *(((CASTING uint_32)(uint_64 (int_64))($7 - *($3 + [392]))) + [28960])
	*((($3 + [608]) + $2)) = $4)
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$17 }
	$5 = ($5 + [1])
	*($3 + [1431]) = $5
	
.LABEL $label$17
	$7 = $9
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[15]) ){ goto $label$16 }
	*($3 + [1423 align=1]) = *($3 + [615 align=1])
	*($3 + [1416]) = *($3 + [608])
	goto $label$10 
	
.LABEL $label$12
	*($3 + [615 align=1]) = (int_64)0
	*($3 + [608]) = (int_64)0
	$7 = ((int_64)$8 + (int_64)$9)
	$8 = ((int_64)*(*(($1 + [48]))) + (int_64)$10)
	$2 = [0]
	
.LOOP $label$18:
	CALL __udivti3(($3 + [376]), $7, $8, (int_64)43, (int_64)0)
	$8 = *((($3 + [376]) + [8]))
	$9 = *($3 + [376])
	CALL __multi3(($3 + [360]), $9, $8, (int_64)43, (int_64)0)
	$4 = *(((CASTING uint_32)(uint_64 (int_64))($7 - *($3 + [360]))) + [28912])
	*((($3 + [608]) + $2)) = $4)
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$19 }
	$5 = ($5 + [1])
	*($3 + [1431]) = $5
	
.LABEL $label$19
	$7 = $9
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[15]) ){ goto $label$18 }
	*($3 + [1423 align=1]) = *($3 + [615 align=1])
	*($3 + [1416]) = *($3 + [608])
	goto $label$10 
	
.LABEL $label$11
	CALL eosio_assert([0], [19939])
	
.LABEL $label$10
	*($3 + [1360]) = [8617]
	*($3 + [1364]) = CALL $743([8617])
	*($3 + [320]) = *($3 + [1360])
	$2 = CALL $10(($3 + [1368]), ($3 + [320]))
	*($3 + [1352]) = [19963]
	*($3 + [1356]) = CALL $743([19963])
	*($3 + [312]) = *($3 + [1352])
	CALL $10(($3 + [608]), ($3 + [312]))
	*(($3 + [1408])) = [0]
	*($3 + [1384]) = (int_64)4298345144882210704
	*($3 + [1392]) = (int_64)-1
	*($3 + [1400]) = (int_64)0
	*($3 + [1376]) = *($2)
	*($3 + [1296]) = [8617]
	*($3 + [1300]) = CALL $743([8617])
	*($3 + [304]) = *($3 + [1296])
	$2 = CALL $10(($3 + [1304]), ($3 + [304]))
	*(($3 + [1240])) = (int_64)0
	*(($5 = ($3 + [1248]))) = (int_64)0
	*($3 + [1232]) = (int_64)0
	*($3 + [1224]) = (int_64)0
	CALL memcpy(($3 + [608]), [29008], [80])
	$4 = (($3 + [608]) + [80])
	CALL $409(($3 + [1232]), ($3 + [608]), $4)
	CALL memcpy(($3 + [608]), [29008], [80])
	CALL $409(($3 + [1244]), ($3 + [608]), $4)
	*($3 + [1256]) = (int_64)0
	CALL $410(($3 + [1312]), ($3 + [1376]), *($2), ($3 + [1224]))
	$2 = *($3 + [1244])
	if ( ($2 == 0) ){ goto $label$20 }
	*($5) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$20
	$2 = *($3 + [1232])
	if ( ($2 == 0) ){ goto $label$21 }
	*(($3 + [1236])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$21
	*($3 + [1312]) = ((int_64)*($3 + [1312]) + (int_64)1)
	*($3 + [1344]) = ((int_64)*($3 + [1344]) + (int_64)15)
	*(($4 = (($2 = *($3 + [1320])) + (*($3 + [1416]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1417]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1418]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1419]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1420]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1421]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1422]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1423]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1424]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1425]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1426]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1427]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1428]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($4 = ($2 + (*($3 + [1429]) << [3])))) = ((int_64)*($4) + (int_64)1)
	*(($2 = ($2 + (*($3 + [1430]) << [3])))) = ((int_64)*($2) + (int_64)1)
	$2 = [0]
	$4 = *($3 + [1332])
	$5 = *($3 + [1320])
	$11 = ($3 + [1344])
	
.LOOP $label$22:
	*(($4 + $2)) = ((uint_64)((int_64)*(($5 + $2)) * (int_64)10000) / (uint_64)*($11))
	$2 = ($2 + [8])
	if ( ((int_32)$2 != (int_32)[120]) ){ goto $label$22 }
	*($3 + [1280]) = [8617]
	*($3 + [1284]) = CALL $743([8617])
	*($3 + [296]) = *($3 + [1280])
	CALL $411(($3 + [1376]), ($3 + [1312]), *(CALL $10(($3 + [1288]), ($3 + [296]))))
	$4 = ($1 + [60])
	$5 = *($4)
	$2 = *($3 + [1436])
	$7 = *($2 + [48])
	$8 = *(($2 + [56]))
	*((($3 + [264]) + [8])) = $8
	*((($3 + [1192]) + [8])) = $8
	*($3 + [1215 align=1]) = *($3 + [1423 align=1])
	*($3 + [1208]) = *($3 + [1416])
	*($3 + [287 align=1]) = *($3 + [1215 align=1])
	*($3 + [280]) = *($3 + [1208])
	*($3 + [1192]) = $7
	*($3 + [264]) = $7
	CALL $381(($3 + [1224]), $3, ($3 + [280]), ($2 + [64]), ($3 + [264]), $5)
	$2 = *($3 + [1436])
	*((($3 + [1168]) + [8])) = *(($2 + [24]))
	*(($3 + [1184])) = *(($2 + [32]))
	*((($3 + [1152]) + [8])) = *(($2 + [56]))
	*($3 + [1136]) = (int_64)0
	*($3 + [1144]) = (int_64)1397703940
	*($3 + [1168]) = *($2 + [16])
	*($3 + [1152]) = *($2 + [48])
	$11 = *($4)
	$7 = (int_64)5459781
	$2 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$27 }
	$7 = $8
	$5 = $2
	goto $label$26 
	
.LABEL $label$27
	$7 = $8
	
.LOOP $label$28:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$24 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $4 ){ goto $label$28 }
	
.LABEL $label$26
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [22633])
	
.LABEL $label$23
	*((($3 + [240]) + [16])) = *((($3 + [1168]) + [16]))
	*((($3 + [240]) + [8])) = *((($3 + [1168]) + [8]))
	*((($3 + [224]) + [8])) = *((($3 + [1152]) + [8]))
	*((($3 + [208]) + [8])) = *((($3 + [1136]) + [8]))
	*($3 + [240]) = *($3 + [1168])
	*($3 + [224]) = *($3 + [1152])
	*($3 + [208]) = *($3 + [1136])
	CALL $386($3, ($3 + [240]), $11, ($3 + [224]), ($3 + [208]))
	if ( (int_64)(*($3 + [1224]) == 0) ){ goto $label$35 }
	$2 = *($3 + [1436])
	*((($3 + [1112]) + [8])) = *(($2 + [24]))
	*((($3 + [1112]) + [16])) = *(($2 + [32]))
	*($3 + [1096]) = (int_64)0
	*($3 + [1104]) = (int_64)1397703940
	*($3 + [1112]) = *($2 + [16])
	$11 = *(($1 + [60]))
	$7 = (int_64)5459781
	$2 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$40 }
	$7 = $8
	$5 = $2
	goto $label$39 
	
.LABEL $label$40
	$7 = $8
	
.LOOP $label$41:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$37 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $4 ){ goto $label$41 }
	
.LABEL $label$39
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	CALL eosio_assert([0], [22633])
	
.LABEL $label$36
	$2 = (($3 + [1224]) + [8])
	$7 = *($2)
	*((($3 + [1080]) + [8])) = $7
	*((($3 + [184]) + [8])) = *((($3 + [1112]) + [8]))
	*((($3 + [184]) + [16])) = *((($3 + [1112]) + [16]))
	*((($3 + [168]) + [8])) = *((($3 + [1096]) + [8]))
	*((($3 + [152]) + [8])) = $7
	$7 = *($3 + [1224])
	*($3 + [1080]) = $7
	*($3 + [184]) = *($3 + [1112])
	*($3 + [168]) = *($3 + [1096])
	*($3 + [152]) = $7
	CALL $386($3, ($3 + [184]), $11, ($3 + [168]), ($3 + [152]))
	*((($3 + [1040]) + [8])) = *($2)
	$2 = *($3 + [1436])
	*((($3 + [1056]) + [8])) = *(($2 + [24]))
	*((($3 + [1056]) + [16])) = *(($2 + [32]))
	*($3 + [1040]) = *($3 + [1224])
	*($3 + [1056]) = *($2 + [16])
	$5 = CALL $412([19976])
	*((($3 + [1024]) + [8])) = [0]
	*($3 + [1024]) = (int_64)0
	$2 = CALL $743($5)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$34 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$44 }
	*($3 + [1024]) = ($2 << [1])
	$4 = (($3 + [1024]) | [1])
	if ( $2 ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$44
	$11 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($11)
	*($3 + [1024]) = ($11 | [1])
	*($3 + [1032]) = $4
	*($3 + [1028]) = $2
	
.LABEL $label$43
	CALL memcpy($4, $5, $2)
	
.LABEL $label$42
	*(($4 + $2)) = [0]
	*((($3 + [128]) + [16])) = *((($3 + [1056]) + [16]))
	*((($3 + [128]) + [8])) = *((($3 + [1056]) + [8]))
	*((($3 + [112]) + [8])) = *((($3 + [1040]) + [8]))
	*($3 + [128]) = *($3 + [1056])
	*($3 + [112]) = *($3 + [1040])
	CALL $162(($3 + [128]), ($3 + [112]), ($3 + [1024]), [0])
	if ( ((*($3 + [1024]) & [1]) == 0) ){ goto $label$35 }
	CALL _ZdlPv(*($3 + [1032]))
	
.LABEL $label$35
	$7 = (int_64)340498729282
	$2 = [0]
	
.LOOP $label$47:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$46 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$49 }
	$7 = $8
	$5 = $2
	goto $label$48 
	
.LABEL $label$49
	$7 = $8
	
.LOOP $label$50:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$46 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $4 ){ goto $label$50 }
	
.LABEL $label$48
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$47 }
	goto $label$45 
	
.LABEL $label$46
	CALL eosio_assert([0], [22633])
	
.LABEL $label$45
	$9 = (int_64)0
	if ( ((int_64)*((*($3 + [1436]) + [56])) != (int_64)1397703940) ){ goto $label$51 }
	$2 = *(($1 + [60]))
	if ( ((int_32)$2 == (int_32)[7]) ){ goto $label$54 }
	if ( ((int_32)$2 == (int_32)[9]) ){ goto $label$55 }
	if ( ((int_32)$2 != (int_32)[8]) ){ goto $label$53 }
	$2 = *([0] + [8632])
	if ( $2 ){ goto $label$56 }
	$4 = CALL _Znwj([280])
	$2 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$56
	*($3 + [1008]) = [20015]
	*($3 + [1012]) = CALL $743([20015])
	*($3 + [88]) = *($3 + [1008])
	$4 = CALL $10(($3 + [1016]), ($3 + [88]))
	goto $label$52 
	
.LABEL $label$55
	$2 = *([0] + [8632])
	if ( $2 ){ goto $label$57 }
	$4 = CALL _Znwj([280])
	$2 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$57
	*($3 + [992]) = [20027]
	*($3 + [996]) = CALL $743([20027])
	*($3 + [96]) = *($3 + [992])
	$4 = CALL $10(($3 + [1000]), ($3 + [96]))
	goto $label$52 
	
.LABEL $label$54
	$2 = *([0] + [8632])
	if ( $2 ){ goto $label$58 }
	$4 = CALL _Znwj([280])
	$2 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$58
	*($3 + [976]) = [20039]
	*($3 + [980]) = CALL $743([20039])
	*($3 + [104]) = *($3 + [976])
	$4 = CALL $10(($3 + [984]), ($3 + [104]))
	goto $label$52 
	
.LABEL $label$53
	$2 = *([0] + [8632])
	if ( $2 ){ goto $label$59 }
	$4 = CALL _Znwj([280])
	$2 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$59
	*($3 + [960]) = [20051]
	*($3 + [964]) = CALL $743([20051])
	*($3 + [80]) = *($3 + [960])
	$4 = CALL $10(($3 + [968]), ($3 + [80]))
	
.LABEL $label$52
	$11 = *($3 + [1436])
	$9 = ((uint_64)((int_64)CALL $153($2, *($4), (int_64)10000) * (int_64)*($11 + [48])) / (uint_64)(int_64)100)
	$7 = (int_64)340498729282
	$2 = [0]
	
.LOOP $label$62:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$61 }
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$64 }
	$7 = $8
	$5 = $2
	goto $label$63 
	
.LABEL $label$64
	$7 = $8
	
.LOOP $label$65:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$61 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$5 = ($2 + [1])
	$2 = $5
	if ( $4 ){ goto $label$65 }
	
.LABEL $label$63
	$2 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$62 }
	goto $label$60 
	
.LABEL $label$61
	CALL eosio_assert([0], [22633])
	$11 = *($3 + [1436])
	
.LABEL $label$60
	*(($3 + [952])) = *(($11 + [32]))
	*((($3 + [936]) + [8])) = *(($11 + [24]))
	*($3 + [920]) = $9
	*($3 + [928]) = (int_64)87167674696196
	*($3 + [936]) = *($11 + [16])
	$5 = CALL $404([20061])
	*((($3 + [904]) + [8])) = [0]
	*($3 + [904]) = (int_64)0
	$2 = CALL $743($5)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$29 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$68 }
	*($3 + [904]) = ($2 << [1])
	$4 = (($3 + [904]) | [1])
	if ( $2 ){ goto $label$67 }
	goto $label$66 
	
.LABEL $label$68
	$11 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($11)
	*($3 + [904]) = ($11 | [1])
	*($3 + [912]) = $4
	*($3 + [908]) = $2
	
.LABEL $label$67
	CALL memcpy($4, $5, $2)
	
.LABEL $label$66
	*(($4 + $2)) = [0]
	*((($3 + [56]) + [16])) = *((($3 + [936]) + [16]))
	*((($3 + [56]) + [8])) = *((($3 + [936]) + [8]))
	*((($3 + [40]) + [8])) = *((($3 + [920]) + [8]))
	*($3 + [56]) = *($3 + [936])
	*($3 + [40]) = *($3 + [920])
	CALL $162(($3 + [56]), ($3 + [40]), ($3 + [904]), [4])
	if ( ((*($3 + [904]) & [1]) == 0) ){ goto $label$51 }
	CALL _ZdlPv(*($3 + [912]))
	
.LABEL $label$51
	if ( (*($3 + [1431]) <= [6]) ){ goto $label$69 }
	*($3 + [1431]) = [5]
	
.LABEL $label$69
	$2 = *($3 + [1436])
	*(($4 = (($3 + [880]) + [8]))) = *(($2 + [24]))
	*(($5 = (($3 + [880]) + [16]))) = *(($2 + [32]))
	*($3 + [880]) = *($2 + [16])
	*($3 + [824]) = [8617]
	*($3 + [828]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [824])
	$2 = CALL $10(($3 + [832]), ($3 + [32]))
	*($3 + [808]) = [8344]
	*($3 + [812]) = CALL $743([8344])
	*($3 + [24]) = *($3 + [808])
	$11 = CALL $10(($3 + [816]), ($3 + [24]))
	*($3 + [792]) = [8617]
	$7 = *($11)
	$8 = *($2)
	*($3 + [796]) = CALL $743([8617])
	*($3 + [16]) = *($3 + [792])
	$11 = CALL $10(($3 + [800]), ($3 + [16]))
	*($3 + [776]) = [20112]
	*($3 + [780]) = CALL $743([20112])
	*($3 + [8]) = *($3 + [776])
	$12 = CALL $10(($3 + [784]), ($3 + [8]))
	$2 = *($3 + [1436])
	$10 = *($2 + [8])
	*((($3 + [584]) + [16])) = *($5)
	*((($3 + [584]) + [8])) = *($4)
	*($3 + [584]) = *($3 + [880])
	*((($3 + [568]) + [8])) = *(($2 + [56]))
	*($3 + [568]) = *($2 + [48])
	*($3 + [560]) = [0]
	*($3 + [552]) = (int_64)0
	$4 = (*(($2 + [68])) - *($2 + [64]))
	if ( ($4 == 0) ){ goto $label$70 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$33 }
	$5 = CALL _Znwj($4)
	*(($3 + [560])) = ($5 + $4)
	*($3 + [552]) = $5
	*($3 + [556]) = $5
	$4 = *(($2 + [64]))
	$2 = (*(($2 + [68])) - $4)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$70 }
	CALL memcpy($5, $4, $2)
	*($3 + [556]) = (*($3 + [556]) + $2)
	
.LABEL $label$70
	$5 = *(($1 + [60]))
	$4 = *($3 + [1416])
	*($3 + [520]) = $4
	$13 = *($3 + [1417])
	*($3 + [521]) = $13
	$14 = *($3 + [1418])
	*($3 + [522]) = $14
	$15 = *($3 + [1419])
	*($3 + [523]) = $15
	$16 = *($3 + [1420])
	*($3 + [524]) = $16
	*($3 + [525 align=1]) = *($3 + [1421 align=1])
	*($3 + [529 align=1]) = *($3 + [1425 align=1])
	*($3 + [531]) = *($3 + [1427])
	*($3 + [532]) = *($3 + [1428])
	*($3 + [533]) = *($3 + [1429])
	*($3 + [534]) = *($3 + [1430])
	*(($2 = CALL _Znwj([15]))) = $4
	*($2 + [1]) = $13
	*($2 + [2]) = $14
	*($2 + [3]) = $15
	*($2 + [4]) = $16
	*($2 + [5 align=1]) = *($3 + [525 align=1])
	*($2 + [13 align=1]) = *($3 + [533 align=1])
	*($3 + [536]) = $2
	$2 = ($2 + [15])
	*($3 + [544]) = $2
	*($3 + [540]) = $2
	*($3 + [512]) = [0]
	*($3 + [504]) = (int_64)0
	$2 = (*(($3 + [1244])) - *($3 + [1240]))
	if ( ($2 == 0) ){ goto $label$71 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$32 }
	$4 = CALL _Znwj($2)
	*(($3 + [512])) = ($4 + $2)
	*($3 + [504]) = $4
	*($3 + [508]) = $4
	$13 = *(($3 + [1240]))
	$2 = (*(($3 + [1244])) - $13)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$71 }
	CALL memcpy($4, $13, $2)
	*($3 + [508]) = (*($3 + [508]) + $2)
	
.LABEL $label$71
	*($3 + [496]) = [0]
	*($3 + [488]) = (int_64)0
	$2 = (*(($3 + [1256])) - *($3 + [1252]))
	if ( ($2 == 0) ){ goto $label$72 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$31 }
	$4 = CALL _Znwj($2)
	*(($3 + [496])) = ($4 + $2)
	*($3 + [488]) = $4
	*($3 + [492]) = $4
	$13 = *(($3 + [1252]))
	$2 = (*(($3 + [1256])) - $13)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$72 }
	CALL memcpy($4, $13, $2)
	*($3 + [492]) = (*($3 + [492]) + $2)
	
.LABEL $label$72
	*($3 + [480]) = [0]
	*($3 + [472]) = (int_64)0
	$2 = (*(($3 + [1268])) - *($3 + [1264]))
	if ( ($2 == 0) ){ goto $label$73 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$30 }
	$4 = CALL _Znwj($2)
	*(($3 + [480])) = ($4 + (int_32($2 >> [1]) << [1]))
	*($3 + [472]) = $4
	*($3 + [476]) = $4
	$13 = *(($3 + [1264]))
	$2 = (*(($3 + [1268])) - $13)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$73 }
	CALL memcpy($4, $13, $2)
	*($3 + [476]) = (*($3 + [476]) + $2)
	
.LABEL $label$73
	*(($3 + [464])) = [0]
	*($3 + [456]) = (int_64)0
	$13 = ( [19937] ? [19935] : (int_64)(*($3 + [1224]) == 0) )
	$2 = CALL $743($13)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$74 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$77 }
	*($3 + [456]) = ($2 << [1])
	$4 = (($3 + [456]) | [1])
	if ( $2 ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$77
	$14 = (($2 + [16]) & [-16])
	$4 = CALL _Znwj($14)
	*($3 + [456]) = ($14 | [1])
	*($3 + [464]) = $4
	*($3 + [460]) = $2
	
.LABEL $label$76
	CALL memcpy($4, $13, $2)
	
.LABEL $label$75
	*(($4 + $2)) = [0]
	*(($2 = (($3 + [440]) + [8]))) = *((($3 + [1224]) + [8]))
	*((($3 + [608]) + [16])) = *((($3 + [584]) + [8]))
	*((($3 + [608]) + [24])) = *((($3 + [584]) + [16]))
	*(($3 + [648])) = *((($3 + [568]) + [8]))
	*($3 + [608]) = $10
	*($3 + [440]) = *($3 + [1224])
	*($3 + [616]) = *($3 + [584])
	*($3 + [640]) = *($3 + [568])
	$4 = *($3 + [1431])
	$13 = *($3 + [552])
	*(($3 + [660])) = *($3 + [556])
	*(($3 + [664])) = *((($3 + [552]) + [8]))
	$14 = (($3 + [536]) + [8])
	$15 = *($14)
	*($14) = [0]
	*(($3 + [680])) = $15
	*($3 + [552]) = [0]
	*($3 + [656]) = $13
	*($3 + [668]) = $5
	*($3 + [556 align=4]) = (int_64)0
	*($3 + [672]) = *($3 + [536])
	*($3 + [536]) = (int_64)0
	*($3 + [684]) = *($3 + [504])
	*(($3 + [688])) = *($3 + [508])
	$5 = (($3 + [504]) + [8])
	$13 = *($5)
	*($5) = [0]
	*(($3 + [692])) = $13
	*($3 + [504]) = [0]
	*($3 + [508]) = [0]
	*($3 + [696]) = *($3 + [488])
	*(($3 + [700])) = *($3 + [492])
	$5 = (($3 + [488]) + [8])
	$13 = *($5)
	*($5) = [0]
	*(($3 + [704])) = $13
	*($3 + [488]) = [0]
	*($3 + [492]) = [0]
	*($3 + [708]) = *($3 + [472])
	*(($3 + [712])) = *($3 + [476])
	$5 = (($3 + [472]) + [8])
	$13 = *($5)
	*($5) = [0]
	*(($3 + [716])) = $13
	*($3 + [472]) = [0]
	*($3 + [476]) = [0]
	$5 = (($3 + [456]) + [8])
	*(($3 + [728])) = *($5)
	*($3 + [720]) = *($3 + [456])
	*($3 + [456]) = [0]
	*($3 + [460]) = [0]
	*($5) = [0]
	*(($3 + [744])) = *($2)
	*($3 + [736]) = *($3 + [440])
	*($3 + [752]) = $9
	*(($3 + [760])) = (int_64)87167674696196
	*($3 + [768]) = $4
	$9 = *($12)
	*($3 + [840]) = *($11)
	*($3 + [848]) = $9
	*($3 + [856]) = [0]
	*(($4 = ($3 + [860]))) = [0]
	*(($5 = (($3 + [840]) + [24]))) = [0]
	*(($2 = CALL _Znwj([16]))) = $8
	*($2 + [8]) = $7
	$11 = ($2 + [16])
	*($5) = $11
	*($4) = $11
	*($3 + [856]) = $2
	CALL $413(($3 + [868]), ($3 + [608]))
	CALL $13(($3 + [1440]), ($3 + [840]))
	$2 = *($3 + [1440])
	CALL send_inline($2, (*($3 + [1444]) - $2))
	$2 = *($3 + [1440])
	if ( ($2 == 0) ){ goto $label$78 }
	*($3 + [1444]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$78
	$2 = *($3 + [868])
	if ( ($2 == 0) ){ goto $label$79 }
	*(($3 + [872])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$79
	$2 = *($3 + [856])
	if ( ($2 == 0) ){ goto $label$80 }
	*(($3 + [860])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$80
	if ( ((*(($3 + [720])) & [1]) == 0) ){ goto $label$81 }
	CALL _ZdlPv(*(($3 + [728])))
	
.LABEL $label$81
	$2 = *($3 + [708])
	if ( ($2 == 0) ){ goto $label$82 }
	*(($3 + [712])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$82
	$2 = *($3 + [696])
	if ( ($2 == 0) ){ goto $label$83 }
	*(($3 + [700])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$83
	$2 = *($3 + [684])
	if ( ($2 == 0) ){ goto $label$84 }
	*(($3 + [688])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$84
	$2 = *($3 + [672])
	if ( ($2 == 0) ){ goto $label$85 }
	*(($3 + [676])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$85
	$2 = *($3 + [656])
	if ( ($2 == 0) ){ goto $label$86 }
	*(($3 + [660])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$86
	if ( ((*($3 + [456]) & [1]) == 0) ){ goto $label$87 }
	CALL _ZdlPv(*(($3 + [464])))
	
.LABEL $label$87
	$2 = *($3 + [472])
	if ( ($2 == 0) ){ goto $label$88 }
	*($3 + [476]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$88
	$2 = *($3 + [488])
	if ( ($2 == 0) ){ goto $label$89 }
	*($3 + [492]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$89
	$2 = *($3 + [504])
	if ( ($2 == 0) ){ goto $label$90 }
	*($3 + [508]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$90
	$2 = *($3 + [536])
	if ( ($2 == 0) ){ goto $label$91 }
	*($3 + [540]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$91
	$2 = *($3 + [552])
	if ( ($2 == 0) ){ goto $label$92 }
	*($3 + [556]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$92
	if ( (*($3 + [1431]) <= [3]) ){ goto $label$93 }
	$4 = ($0 + [240])
	$7 = (int_64)0
	$2 = *($3 + [1436])
	$8 = *(($2 + [24]))
	$10 = *($2 + [16])
	$9 = *(($2 + [32]))
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$95 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$94 }
	
.LABEL $label$95
	*(($2 = CALL _Znwj([24])) + [8]) = $8
	*($2) = $10
	*($2 + [16]) = $9
	CALL sha256($2, [24], ($3 + [608]))
	$7 = *($3 + [608])
	if ( ($2 == 0) ){ goto $label$94 }
	CALL _ZdlPv($2)
	
.LABEL $label$94
	CALL $414(($3 + [568]), $4, $7)
	if ( *($3 + [572]) ){ goto $label$93 }
	*($3 + [424]) = [8617]
	*($3 + [428]) = CALL $743([8617])
	*($3) = *($3 + [424])
	$2 = CALL $10(($3 + [432]), $3)
	*($3 + [848]) = $1
	*($3 + [844]) = ($3 + [1432])
	*($3 + [840]) = ($3 + [1431])
	*($3 + [584]) = *($2)
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$96 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$96
	*($3 + [608]) = $4
	*($3 + [612]) = ($3 + [840])
	*($3 + [616]) = ($3 + [584])
	$7 = (int_64)0
	*(($2 = CALL _Znwj([96])) + [8]) = (int_64)0
	*($2) = (int_64)0
	*($2 + [16]) = (int_64)0
	*($2 + [24 align=4]) = (int_64)0
	*($2 + [32 align=4]) = (int_64)0
	*($2 + [40 align=4]) = (int_64)0
	*($2 + [48 align=4]) = (int_64)0
	*($2 + [56 align=4]) = (int_64)0
	*($2 + [64 align=4]) = (int_64)0
	*($2 + [72 align=4]) = (int_64)0
	*($2 + [80]) = [0]
	*($2 + [84]) = $4
	CALL $415(($3 + [608]), $2)
	*($3 + [440]) = $2
	$8 = *($2 + [8])
	$10 = *($2)
	$9 = *($2 + [16])
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$98 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$97 }
	
.LABEL $label$98
	*(($2 = CALL _Znwj([24])) + [8]) = $8
	*($2) = $10
	*($2 + [16]) = $9
	CALL sha256($2, [24], ($3 + [608]))
	$7 = *($3 + [608])
	if ( ($2 == 0) ){ goto $label$97 }
	CALL _ZdlPv($2)
	
.LABEL $label$97
	*($3 + [608]) = $7
	$4 = *($3 + [440])
	$5 = *($4 + [88])
	*($3 + [520]) = $5
	$11 = ($0 + [268])
	$2 = *($11)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [272]))) ){ goto $label$100 }
	*($2 + [8]) = $7
	*($2 + [16]) = $5
	*($3 + [440]) = [0]
	*($2) = $4
	*($11) = ($2 + [24])
	goto $label$99 
	
.LABEL $label$100
	CALL $416(($0 + [264]), ($3 + [440]), ($3 + [608]), ($3 + [520]))
	
.LABEL $label$99
	$2 = *($3 + [440])
	*($3 + [440]) = [0]
	if ( ($2 == 0) ){ goto $label$93 }
	$4 = *($2 + [72])
	if ( ($4 == 0) ){ goto $label$101 }
	*(($2 + [76])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$101
	$4 = *($2 + [60])
	if ( ($4 == 0) ){ goto $label$102 }
	*(($2 + [64])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$102
	$4 = *($2 + [48])
	if ( ($4 == 0) ){ goto $label$103 }
	*(($2 + [52])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$103
	$4 = *($2 + [36])
	if ( ($4 == 0) ){ goto $label$104 }
	*(($2 + [40])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$104
	$4 = *($2 + [24])
	if ( ($4 == 0) ){ goto $label$105 }
	*(($2 + [28])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$105
	CALL _ZdlPv($2)
	
.LABEL $label$93
	$7 = *($3 + [1432])
	$2 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32)
	if ( $2) ){ goto $label$106 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$106
	$4 = CALL db_next_i64(*($2 + [80]), ($3 + [608]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$107 }
	CALL $417((CASTING uint_32)(uint_64 $7), $4)
	
.LABEL $label$107
	CALL $418($6, $2)
	$2 = *($3 + [1264])
	if ( ($2 == 0) ){ goto $label$108 }
	*(($3 + [1268])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$108
	$2 = *($3 + [1252])
	if ( ($2 == 0) ){ goto $label$109 }
	*(($3 + [1256])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$109
	$2 = *($3 + [1240])
	if ( ($2 == 0) ){ goto $label$110 }
	*(($3 + [1244])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$110
	$2 = *(($3 + [1332]))
	if ( ($2 == 0) ){ goto $label$111 }
	*(($3 + [1336])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$111
	$2 = *(($3 + [1320]))
	if ( ($2 == 0) ){ goto $label$112 }
	*(($3 + [1324])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$112
	$11 = *($3 + [1400])
	if ( ($11 == 0) ){ goto $label$113 }
	$1 = ($3 + [1404])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$11) ){ goto $label$115 }
	
.LOOP $label$116:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$117 }
	$5 = *($2 + [20])
	if ( ($5 == 0) ){ goto $label$118 }
	*(($2 + [24])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$118
	$5 = *($2 + [8])
	if ( ($5 == 0) ){ goto $label$119 }
	*(($2 + [12])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$119
	CALL _ZdlPv($2)
	
.LABEL $label$117
	if ( ((int_32)$11 != (int_32)$4) ){ goto $label$116 }
	$2 = *(($3 + [1400]))
	goto $label$114 
	
.LABEL $label$115
	$2 = $11
	
.LABEL $label$114
	*($1) = $11
	CALL _ZdlPv($2)
	
.LABEL $label$113
	$global$0 = ($3 + [1456])
	return (unreachable)
	
.LABEL $label$74
	CALL $708(($3 + [456]))
	
.LABEL $label$34
	CALL $708(($3 + [1024]))
	
.LABEL $label$33
	CALL $727(($3 + [552]))
	
.LABEL $label$32
	CALL $727(($3 + [504]))
	
.LABEL $label$31
	CALL $727(($3 + [488]))
	
.LABEL $label$30
	CALL $727(($3 + [472]))
	
.LABEL $label$29
	CALL $708(($3 + [904]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $409 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [3])
	if ( ((uint_32)$3 <= (uint_32)int_32(($4 - $5) >> [3])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL _ZdlPv($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$5 = [536870911]
	if ( ((uint_32)int_32($4 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$5 = $3
	$4 = int_32($4 >> [2])
	if ( ($4 <= $3) ){ goto $label$6 }
	$5 = $4
	if ( ((uint_32)$4 >= (uint_32)[536870912]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($5 << [3])
	$5 = CALL _Znwj($4)
	*($0) = $5
	*($0 + [4]) = $5
	*(($0 + [8])) = ($5 + $4)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$3 = (($2 + [-8]) - $1)
	$4 = $5
	
.LOOP $label$7:
	*($4) = *($1)
	$4 = ($4 + [8])
	$1 = ($1 + [8])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	*(($0 + [4])) = (($5 + ($3 & [-8])) + [8])
	goto $label$3 
	
.LABEL $label$4
	$7 = int_32($6 >> [3])
	$6 = (*($0 + [4]) - $5)
	$4 = ($1 + $6)
	$8 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$7) )
	$6 = ($8 - $1)
	if ( ($6 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$7) ){ goto $label$2 }
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$3 }
	$5 = (($2 + [-8]) - $8)
	$3 = *(($0 + [4]))
	$1 = $3
	
.LOOP $label$9:
	*($1) = *($4)
	$1 = ($1 + [8])
	$4 = ($4 + [8])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	*(($0 + [4])) = (($3 + ($5 & [-8])) + [8])
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + (int_32($6 >> [3]) << [3]))
	return (unreachable)
	
.LABEL $label$1
	CALL $727($0)
}

void .FUNC $154 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ($2 - $3)
	$5 = ($4 + [1])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$2 }
	$6 = [2147483647]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)$7 > (uint_32)[1073741822]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj($6)
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	*(($4 = ($5 + $4))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + $6)
	$5 = ($4 + [1])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $155 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $156(*($1), *($0))
	$2 = *($0)
	$3 = ($2 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $522(*($1), ($2 + [32]))
	$2 = ($2 + [44])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

int_32 .FUNC $404 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ($global$0 - [16])
	$global$0 = $1
	*(($1 + [8])) = [0]
	*($1) = (int_64)0
	$2 = CALL $743($0)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($1) = ($2 << [1])
	$3 = ($1 | [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$3 = CALL _Znwj($4)
	*($1) = ($4 | [1])
	*($1 + [8]) = $3
	*($1 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($3, $0, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($1) & [1]) ){ goto $label$6 }
	$2 = ($1 | [1])
	goto $label$5 
	
.LABEL $label$6
	$2 = *($1 + [8])
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($1 + [16])
	return $2
	
.LABEL $label$1
	CALL $708($1)
	return (unreachable)
}

void .FUNC $405 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	CALL $156(*($1), ($0 + [8]))
	$3 = ($0 + [32])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [40]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [48])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [1])
	*(($4 = ($4 + [4]))) = (*($4) + [1])
	*($2) = $0
	CALL $611($2, $1)
	$global$0 = ($2 + [16])
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = *($1 + [80])
	$3 = *(($1 + [84]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [3]))
	$7 = [65]
	
.LOOP $label$1:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$7 = (($5 & [-8]) + $7)
	
.LABEL $label$2
	$4 = *($1 + [92])
	$3 = *(($1 + [96]))
	$5 = ($3 - $4)
	$6 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$3:
	$7 = ($7 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$4 }
	$7 = (($5 & [-16]) + $7)
	
.LABEL $label$4
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $11($0, $7)
	$3 = *(($0 + [4]))
	$7 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$3 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($2 + [4]) = $7
	*($2) = $7
	*($2 + [8]) = $3
	*($2 + [16]) = $2
	*($2 + [24]) = $1
	CALL $696(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [32])
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $156(*($1), *($0))
	$2 = *($0)
	$3 = ($2 + [24])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$4 = ($2 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $4, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $400 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [848])
	$global$0 = $3
	$4 = *($2)
	$5 = (*($2 + [4]) - $4)
	if ( ((int_32)$5 == (int_32)[8]) ){ goto $label$1 }
	*($3 + [464]) = int_32($5 >> [3])
	CALL $401(($3 + [304]), [19717], ($3 + [464]))
	if ( (*($3 + [304]) & [1]) ){ goto $label$3 }
	$4 = (($3 + [304]) | [1])
	goto $label$2 
	
.LABEL $label$3
	$4 = *($3 + [312])
	CALL _ZdlPv($4)
	
.LABEL $label$2
	CALL eosio_assert([0], $4)
	$4 = *($2)
	
.LABEL $label$1
	$5 = ($0 + [80])
	CALL $372(($3 + [808]), $5, *($4))
	$4 = *($3 + [812])
	if ( $4 ){ goto $label$4 }
	CALL $402(($3 + [304]), [19758], *($2))
	if ( (*($3 + [304]) & [1]) ){ goto $label$6 }
	$4 = (($3 + [304]) | [1])
	goto $label$5 
	
.LABEL $label$6
	$4 = *($3 + [312])
	CALL _ZdlPv($4)
	
.LABEL $label$5
	CALL eosio_assert([0], $4)
	$4 = *($3 + [812])
	
.LABEL $label$4
	$2 = ((CASTING uint_32)(uint_64 ((uint_64)((int_64)*($4 + [40]) + (int_64)*(*($1 + [48]))) % (uint_64)(int_64)100)) + [1])
	*($3 + [807]) = $2
	$6 = *(($4 + [56]))
	*((($3 + [768]) + [8])) = $6
	$0 = *($4 + [64])
	$7 = *($4 + [48])
	*((($3 + [240]) + [8])) = $6
	*($3 + [768]) = $7
	*($3 + [240]) = $7
	CALL $379(($3 + [784]), $3, $0, $2, ($3 + [240]))
	$4 = *($3 + [812])
	*((($3 + [744]) + [8])) = *(($4 + [24]))
	*(($3 + [760])) = *(($4 + [32]))
	*((($3 + [728]) + [8])) = *(($4 + [56]))
	*($3 + [712]) = (int_64)0
	*($3 + [720]) = (int_64)1397703940
	*($3 + [744]) = *($4 + [16])
	*($3 + [728]) = *($4 + [48])
	$8 = *($1 + [60])
	$7 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$11 }
	$7 = $6
	$0 = $4
	goto $label$10 
	
.LABEL $label$11
	$7 = $6
	
.LOOP $label$12:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$0 = ($4 + [1])
	$4 = $0
	if ( $2 ){ goto $label$12 }
	
.LABEL $label$10
	$4 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [22633])
	
.LABEL $label$7
	*((($3 + [216]) + [16])) = *((($3 + [744]) + [16]))
	*((($3 + [216]) + [8])) = *((($3 + [744]) + [8]))
	*((($3 + [200]) + [8])) = *((($3 + [728]) + [8]))
	*((($3 + [184]) + [8])) = *((($3 + [712]) + [8]))
	*($3 + [216]) = *($3 + [744])
	*($3 + [200]) = *($3 + [728])
	*($3 + [184]) = *($3 + [712])
	CALL $386($3, ($3 + [216]), $8, ($3 + [200]), ($3 + [184]))
	if ( (int_64)(*($3 + [784]) == 0) ){ goto $label$15 }
	$4 = *($3 + [812])
	*((($3 + [688]) + [8])) = *(($4 + [24]))
	*((($3 + [688]) + [16])) = *(($4 + [32]))
	*($3 + [672]) = (int_64)0
	*($3 + [680]) = (int_64)1397703940
	*($3 + [688]) = *($4 + [16])
	$1 = *(($1 + [60]))
	$7 = (int_64)5459781
	$4 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$20 }
	$7 = $6
	$0 = $4
	goto $label$19 
	
.LABEL $label$20
	$7 = $6
	
.LOOP $label$21:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$17 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$0 = ($4 + [1])
	$4 = $0
	if ( $2 ){ goto $label$21 }
	
.LABEL $label$19
	$4 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert([0], [22633])
	
.LABEL $label$16
	$4 = (($3 + [784]) + [8])
	$7 = *($4)
	*((($3 + [656]) + [8])) = $7
	*((($3 + [160]) + [8])) = *((($3 + [688]) + [8]))
	*((($3 + [160]) + [16])) = *((($3 + [688]) + [16]))
	*((($3 + [144]) + [8])) = *((($3 + [672]) + [8]))
	*((($3 + [128]) + [8])) = $7
	$7 = *($3 + [784])
	*($3 + [656]) = $7
	*($3 + [160]) = *($3 + [688])
	*($3 + [144]) = *($3 + [672])
	*($3 + [128]) = $7
	CALL $386($3, ($3 + [160]), $1, ($3 + [144]), ($3 + [128]))
	*((($3 + [616]) + [8])) = *($4)
	$4 = *($3 + [812])
	*((($3 + [632]) + [8])) = *(($4 + [24]))
	*((($3 + [632]) + [16])) = *(($4 + [32]))
	*($3 + [616]) = *($3 + [784])
	*($3 + [632]) = *($4 + [16])
	CALL $403(($3 + [304]), [19790], ($4 + [64]), [19844], ($3 + [807]))
	if ( (*($3 + [304]) & [1]) ){ goto $label$23 }
	$0 = (($3 + [304]) | [1])
	goto $label$22 
	
.LABEL $label$23
	$0 = *($3 + [312])
	CALL _ZdlPv($0)
	
.LABEL $label$22
	*(($3 + [608])) = [0]
	*($3 + [600]) = (int_64)0
	$4 = CALL $743($0)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$14 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$26 }
	*($3 + [600]) = ($4 << [1])
	$2 = (($3 + [600]) | [1])
	if ( $4 ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$26
	$1 = (($4 + [16]) & [-16])
	$2 = CALL _Znwj($1)
	*($3 + [600]) = ($1 | [1])
	*($3 + [608]) = $2
	*($3 + [604]) = $4
	
.LABEL $label$25
	CALL memcpy($2, $0, $4)
	
.LABEL $label$24
	*(($2 + $4)) = [0]
	*((($3 + [104]) + [16])) = *((($3 + [632]) + [16]))
	*((($3 + [104]) + [8])) = *((($3 + [632]) + [8]))
	*((($3 + [88]) + [8])) = *((($3 + [616]) + [8]))
	*($3 + [104]) = *($3 + [632])
	*($3 + [88]) = *($3 + [616])
	CALL $162(($3 + [104]), ($3 + [88]), ($3 + [600]), [0])
	if ( ((*($3 + [600]) & [1]) == 0) ){ goto $label$15 }
	CALL _ZdlPv(*($3 + [608]))
	
.LABEL $label$15
	$7 = (int_64)340498729282
	$4 = [0]
	
.LOOP $label$29:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$28 }
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$31 }
	$7 = $6
	$0 = $4
	goto $label$30 
	
.LABEL $label$31
	$7 = $6
	
.LOOP $label$32:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$28 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$0 = ($4 + [1])
	$4 = $0
	if ( $2 ){ goto $label$32 }
	
.LABEL $label$30
	$4 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$29 }
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [22633])
	
.LABEL $label$27
	$9 = (int_64)0
	$2 = *($3 + [812])
	if ( ((int_64)*(($2 + [56])) != (int_64)1397703940) ){ goto $label$33 }
	$4 = [0]
	$7 = *($2 + [48])
	$2 = *([0] + [8632])
	if ( $2 ){ goto $label$34 }
	$0 = CALL _Znwj([280])
	$2 = CALL $111($0)
	*([0] + [8632]) = $0
	
.LABEL $label$34
	*($3 + [584]) = [19860]
	*($3 + [588]) = CALL $743([19860])
	*($3 + [80]) = *($3 + [584])
	$9 = ((uint_64)((int_64)CALL $153($2, *(CALL $10(($3 + [592]), ($3 + [80]))), (int_64)325) * (int_64)$7) / (uint_64)(int_64)100)
	$7 = (int_64)340498729282
	
.LOOP $label$37:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$36 }
	$6 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$39 }
	$7 = $6
	$0 = $4
	goto $label$38 
	
.LABEL $label$39
	$7 = $6
	
.LOOP $label$40:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$36 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$2 = ((int_32)$4 < (int_32)[6])
	$0 = ($4 + [1])
	$4 = $0
	if ( $2 ){ goto $label$40 }
	
.LABEL $label$38
	$4 = ($0 + [1])
	if ( ((int_32)$0 < (int_32)[6]) ){ goto $label$37 }
	goto $label$35 
	
.LABEL $label$36
	CALL eosio_assert([0], [22633])
	
.LABEL $label$35
	$4 = *($3 + [812])
	*((($3 + [560]) + [8])) = *(($4 + [24]))
	*(($3 + [576])) = *(($4 + [32]))
	*($3 + [544]) = $9
	*($3 + [552]) = (int_64)87167674696196
	*($3 + [560]) = *($4 + [16])
	$0 = CALL $404([19872])
	*((($3 + [528]) + [8])) = [0]
	*($3 + [528]) = (int_64)0
	$4 = CALL $743($0)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$43 }
	*($3 + [528]) = ($4 << [1])
	$2 = (($3 + [528]) | [1])
	if ( $4 ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$43
	$1 = (($4 + [16]) & [-16])
	$2 = CALL _Znwj($1)
	*($3 + [528]) = ($1 | [1])
	*($3 + [536]) = $2
	*($3 + [532]) = $4
	
.LABEL $label$42
	CALL memcpy($2, $0, $4)
	
.LABEL $label$41
	*(($2 + $4)) = [0]
	*((($3 + [56]) + [16])) = *((($3 + [560]) + [16]))
	*((($3 + [56]) + [8])) = *((($3 + [560]) + [8]))
	*((($3 + [40]) + [8])) = *((($3 + [544]) + [8]))
	*($3 + [56]) = *($3 + [560])
	*($3 + [40]) = *($3 + [544])
	CALL $162(($3 + [56]), ($3 + [40]), ($3 + [528]), [4])
	if ( ((*($3 + [528]) & [1]) == 0) ){ goto $label$33 }
	CALL _ZdlPv(*($3 + [536]))
	
.LABEL $label$33
	$4 = *($3 + [812])
	*((($3 + [504]) + [8])) = *(($4 + [24]))
	*(($3 + [520])) = *(($4 + [32]))
	*($3 + [504]) = *($4 + [16])
	*($3 + [448]) = [8617]
	*($3 + [452]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [448])
	$4 = CALL $10(($3 + [456]), ($3 + [32]))
	*($3 + [432]) = [8344]
	*($3 + [436]) = CALL $743([8344])
	*($3 + [24]) = *($3 + [432])
	$2 = CALL $10(($3 + [440]), ($3 + [24]))
	*($3 + [416]) = [8617]
	$7 = *($2)
	$6 = *($4)
	*($3 + [420]) = CALL $743([8617])
	*($3 + [16]) = *($3 + [416])
	$0 = CALL $10(($3 + [424]), ($3 + [16]))
	*($3 + [400]) = [19923]
	*($3 + [404]) = CALL $743([19923])
	*($3 + [8]) = *($3 + [400])
	$1 = CALL $10(($3 + [408]), ($3 + [8]))
	$4 = *($3 + [812])
	$10 = *($4 + [8])
	*((($3 + [288]) + [8])) = *(($4 + [56]))
	*($3 + [288]) = *($4 + [48])
	$8 = *($4 + [64])
	$11 = *($3 + [807])
	*((($3 + [272]) + [8])) = [0]
	*($3 + [272]) = (int_64)0
	$12 = ( [19937] ? [19935] : (int_64)(*($3 + [784]) == 0) )
	$4 = CALL $743($12)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$44 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$47 }
	*($3 + [272]) = ($4 << [1])
	$2 = (($3 + [272]) | [1])
	if ( $4 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$13 = (($4 + [16]) & [-16])
	$2 = CALL _Znwj($13)
	*($3 + [272]) = ($13 | [1])
	*($3 + [280]) = $2
	*($3 + [276]) = $4
	
.LABEL $label$46
	CALL memcpy($2, $12, $4)
	
.LABEL $label$45
	*(($2 + $4)) = [0]
	*(($4 = (($3 + [256]) + [8]))) = *((($3 + [784]) + [8]))
	*((($3 + [304]) + [16])) = *((($3 + [504]) + [8]))
	*((($3 + [304]) + [24])) = *((($3 + [504]) + [16]))
	*(($3 + [344])) = *((($3 + [288]) + [8]))
	*($3 + [304]) = $10
	*($3 + [352]) = $8
	*($3 + [353]) = $11
	*($3 + [256]) = *($3 + [784])
	*($3 + [312]) = *($3 + [504])
	*($3 + [336]) = *($3 + [288])
	*(($3 + [392])) = (int_64)87167674696196
	$2 = (($3 + [272]) + [8])
	*(($3 + [364])) = *($2)
	*($2) = [0]
	*(($3 + [376])) = *($4)
	*($3 + [384]) = $9
	*($3 + [356 align=4]) = *($3 + [272])
	*($3 + [272]) = (int_64)0
	*($3 + [368]) = *($3 + [256])
	*($3 + [464]) = *($0)
	*($3 + [472]) = *($1)
	*(($4 = CALL _Znwj([16]))) = $6
	*($4 + [8]) = $7
	*(($3 + [500])) = [0]
	$2 = ($4 + [16])
	*((($3 + [464]) + [24])) = $2
	*(($3 + [484])) = $2
	*($3 + [480]) = $4
	*($3 + [492 align=4]) = (int_64)0
	$4 = *($3 + [356])
	$2 = ( *(($3 + [360])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$4 = ($2 + [82])
	$7 = (CASTING uint_64)(uint_32 $2)
	$2 = ($3 + [492])
	
.LOOP $label$48:
	$4 = ($4 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$48 }
	if ( ($4 == 0) ){ goto $label$50 }
	CALL $11($2, $4)
	$2 = *(($3 + [496]))
	$4 = *(($3 + [492]))
	goto $label$49 
	
.LABEL $label$50
	$2 = [0]
	$4 = [0]
	
.LABEL $label$49
	*($3 + [820]) = $4
	*($3 + [816]) = $4
	*($3 + [824]) = $2
	*($3 + [832]) = ($3 + [816])
	*($3 + [840]) = ($3 + [304])
	CALL $405(($3 + [840]), ($3 + [832]))
	CALL $13(($3 + [816]), ($3 + [464]))
	$4 = *($3 + [816])
	CALL send_inline($4, (*($3 + [820]) - $4))
	$4 = *($3 + [816])
	if ( ($4 == 0) ){ goto $label$51 }
	*($3 + [820]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$51
	$4 = *($3 + [492])
	if ( ($4 == 0) ){ goto $label$52 }
	*(($3 + [496])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$52
	$4 = *($3 + [480])
	if ( ($4 == 0) ){ goto $label$53 }
	*(($3 + [484])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$53
	if ( ((*(($3 + [356])) & [1]) == 0) ){ goto $label$54 }
	CALL _ZdlPv(*(($3 + [364])))
	
.LABEL $label$54
	if ( ((*($3 + [272]) & [1]) == 0) ){ goto $label$55 }
	CALL _ZdlPv(*(($3 + [280])))
	
.LABEL $label$55
	$7 = *($3 + [808])
	$4 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32)
	if ( $4) ){ goto $label$56 }
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$56
	$2 = CALL db_next_i64(*($4 + [72]), ($3 + [304]))
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$57 }
	CALL $406((CASTING uint_32)(uint_64 $7), $2)
	
.LABEL $label$57
	CALL $407($5, $4)
	$global$0 = ($3 + [848])
	return (unreachable)
	
.LABEL $label$44
	CALL $708(($3 + [272]))
	
.LABEL $label$14
	CALL $708(($3 + [600]))
	
.LABEL $label$13
	CALL $708(($3 + [528]))
	(unreachable)
	(unreachable)
}

void .FUNC $401 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $721($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $402 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $723($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $403 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $609($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $343 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800195549752983552, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $440($1, $5)
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $347 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [160])
	$global$0 = $3
	if ( *($1 + [4]) ){ goto $label$1 }
	$4 = *($0 + [12])
	*(($1 = *($0))) = (int_64))(*($1) - *(*($0 + [4])))
	*($3 + [64]) = [8617]
	*($3 + [68]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [64])
	$5 = *(CALL $10(($3 + [72]), ($3 + [32])))
	$6 = *($0 + [8])
	if ( ((int_64)*($2) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$2
	*(($1 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = $2
	*($1) = CALL $666($2)
	$6 = *($6 + [4])
	*($1 + [8]) = *($6)
	*($1 + [24]) = *(($6 + [16]))
	*($1 + [16]) = *(($6 + [8]))
	*($3 + [120]) = (($3 + [80]) + [32])
	*($3 + [112]) = ($3 + [80])
	CALL memcpy(($3 + [80]), $1, [8])
	*($3 + [116]) = (($3 + [80]) | [8])
	$6 = ($1 + [8])
	CALL $156(($3 + [112]), $6)
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)8800535342315732992, $5, $7, ($3 + [80]), [32])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$9 = *($1)
	$10 = *(($1 + [16]))
	$11 = *($6)
	$7 = *(($1 + [24]))
	if ( ((int_64)((int_64)$7 | (int_64)$11) != (int_64)0) ){ goto $label$5 }
	$7 = (int_64)0
	if ( (int_64)($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = CALL _Znwj([24])) + [8]) = $10
	*($6) = $11
	*($6 + [16]) = $7
	CALL sha256($6, [24], ($3 + [128]))
	$7 = *($3 + [128])
	if ( ($6 == 0) ){ goto $label$4 }
	CALL _ZdlPv($6)
	
.LABEL $label$4
	*($3 + [128]) = $7
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)8800535342315732992, $5, $9, ($3 + [128]))
	*($3 + [80]) = $1
	$7 = *($1)
	*($3 + [128]) = $7
	$12 = *(($1 + [36]))
	*($3 + [112]) = $12
	$13 = ($2 + [28])
	$6 = *($13)
	if ( ((uint_32)$6 >= (uint_32)*(($2 + [32]))) ){ goto $label$7 }
	*($6 + [8]) = $7
	*($6 + [16]) = $12
	*($3 + [80]) = [0]
	*($6) = $1
	*($13) = ($6 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $668(($2 + [24]), ($3 + [80]), ($3 + [128]), ($3 + [112]))
	
.LABEL $label$6
	$1 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	$1 = ($4 + [240])
	CALL $329(($3 + [80]), $1)
	*((($3 + [128]) + [16])) = *((($3 + [80]) + [16]))
	*($3 + [136]) = *($3 + [88])
	*($3 + [148]) = *($3 + [100])
	*($3 + [128]) = ((int_64)*($3 + [80]) + (int_64)1)
	*($3 + [112]) = [8617]
	*($3 + [116]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [112])
	CALL $330($1, ($3 + [128]), *(CALL $10(($3 + [80]), ($3 + [24]))))
	$1 = *($3 + [136])
	if ( ($1 == 0) ){ goto $label$9 }
	*(($3 + [140])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *(*(($0 + [8])) + [4])
	$7 = *($1)
	$5 = *(($1 + [16]))
	$10 = *(($1 + [8]))
	*(($3 + [8])) = $10
	*(($3 + [16])) = $5
	*((($3 + [40]) + [8])) = $10
	*((($3 + [40]) + [16])) = $5
	*($3 + [40]) = $7
	*($3) = $7
	CALL $478($3, [2], $3)
	
.LABEL $label$1
	$global$0 = ($3 + [160])
}

void .FUNC $346 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800535342315732992, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $443($1, $5)
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $345 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = *($2)
	$4 = [0]
	$5 = *($1)
	$5 = CALL db_idx64_lowerbound(*($5), *($5 + [8]), (int_64)8800535342315732992, ($3 + [8]), ($3 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	CALL $346($3, *($1), *($3 + [16]))
	*((($4 = *($3 + [4])) + [40])) = $5
	
.LABEL $label$1
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = (int_64)0
	$7 = *(($4 + [16]))
	$8 = *($2)
	$10 = *($4 + [8])
	$9 = *(($4 + [24]))
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$6 }
	$9 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($2 = CALL _Znwj([24])) + [8]) = $7
	*($2) = $10
	*($2 + [16]) = $9
	CALL sha256($2, [24], ($3 + [16]))
	$6 = *($3 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL _ZdlPv($2)
	
.LABEL $label$5
	*($0) = $1
	if ( ((int_64)$8 != (int_64)$6) ){ goto $label$3 }
	*(($0 + [4])) = $4
	goto $label$2 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
	goto $label$2 
	
.LABEL $label$3
	*(($0 + [4])) = [0]
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $344 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [160])
	$global$0 = $3
	if ( *($1 + [4]) ){ goto $label$1 }
	$4 = *($0 + [12])
	*(($1 = *($0))) = (int_64))(*($1) - *(*($0 + [4])))
	*($3 + [64]) = [8617]
	*($3 + [68]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [64])
	$5 = *(CALL $10(($3 + [72]), ($3 + [32])))
	$6 = *($0 + [8])
	if ( ((int_64)*($2) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$2
	*(($1 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = $2
	*($1) = CALL $657($2)
	$6 = *($6 + [4])
	*($1 + [8]) = *($6)
	*($1 + [24]) = *(($6 + [16]))
	*($1 + [16]) = *(($6 + [8]))
	*($3 + [120]) = (($3 + [80]) + [32])
	*($3 + [112]) = ($3 + [80])
	CALL memcpy(($3 + [80]), $1, [8])
	*($3 + [116]) = (($3 + [80]) | [8])
	$6 = ($1 + [8])
	CALL $156(($3 + [112]), $6)
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)8800195549752983552, $5, $7, ($3 + [80]), [32])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$9 = *($1)
	$10 = *(($1 + [16]))
	$11 = *($6)
	$7 = *(($1 + [24]))
	if ( ((int_64)((int_64)$7 | (int_64)$11) != (int_64)0) ){ goto $label$5 }
	$7 = (int_64)0
	if ( (int_64)($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = CALL _Znwj([24])) + [8]) = $10
	*($6) = $11
	*($6 + [16]) = $7
	CALL sha256($6, [24], ($3 + [128]))
	$7 = *($3 + [128])
	if ( ($6 == 0) ){ goto $label$4 }
	CALL _ZdlPv($6)
	
.LABEL $label$4
	*($3 + [128]) = $7
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)8800195549752983552, $5, $9, ($3 + [128]))
	*($3 + [80]) = $1
	$7 = *($1)
	*($3 + [128]) = $7
	$12 = *(($1 + [36]))
	*($3 + [112]) = $12
	$13 = ($2 + [28])
	$6 = *($13)
	if ( ((uint_32)$6 >= (uint_32)*(($2 + [32]))) ){ goto $label$7 }
	*($6 + [8]) = $7
	*($6 + [16]) = $12
	*($3 + [80]) = [0]
	*($6) = $1
	*($13) = ($6 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $659(($2 + [24]), ($3 + [80]), ($3 + [128]), ($3 + [112]))
	
.LABEL $label$6
	$1 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	$1 = ($4 + [120])
	CALL $327(($3 + [80]), $1)
	*((($3 + [128]) + [16])) = *((($3 + [80]) + [16]))
	*($3 + [136]) = *($3 + [88])
	*($3 + [148]) = *($3 + [100])
	*($3 + [128]) = ((int_64)*($3 + [80]) + (int_64)1)
	*($3 + [112]) = [8617]
	*($3 + [116]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [112])
	CALL $328($1, ($3 + [128]), *(CALL $10(($3 + [80]), ($3 + [24]))))
	$1 = *($3 + [136])
	if ( ($1 == 0) ){ goto $label$9 }
	*(($3 + [140])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *(*(($0 + [8])) + [4])
	$7 = *($1)
	$5 = *(($1 + [16]))
	$10 = *(($1 + [8]))
	*(($3 + [8])) = $10
	*(($3 + [16])) = $5
	*((($3 + [40]) + [8])) = $10
	*((($3 + [40]) + [16])) = $5
	*($3 + [40]) = $7
	*($3) = $7
	CALL $478($3, [1], $3)
	
.LABEL $label$1
	$global$0 = ($3 + [160])
}

int_32 .FUNC $89 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [592])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$7 = CALL $746($8)
	goto $label$2 
	
.LABEL $label$3
	$7 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $7
	
.LABEL $label$2
	CALL read_action_data($7, $8)
	
.LABEL $label$1
	*(($2 = (($4 + [256]) + [16]))) = (int_64)0
	*(($3 = (($4 + [256]) + [24]))) = (int_64)0
	*(($9 = (($4 + [256]) + [40]))) = (int_64)0
	*(($4 + [312])) = [0]
	*($4 + [264]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [244]) = $7
	*($4 + [240]) = $7
	*($4 + [248]) = ($7 + $8)
	CALL $195(($4 + [240]), ($4 + [256]))
	$10 = *($4 + [248])
	*((($4 + [24]) + [8])) = $10
	*((($4 + [8]) + [8])) = $10
	$11 = *($4 + [240])
	*($4 + [8]) = $11
	*($4 + [24]) = $11
	$10 = CALL $20(($4 + [40]), $0, $1, ($4 + [8]))
	*((($4 + [368]) + [40])) = *($9)
	*(($4 + [400])) = *($4 + [288])
	*((($4 + [368]) + [24])) = *($3)
	*((($4 + [368]) + [16])) = *($2)
	*($4 + [376]) = *($4 + [264])
	*($4 + [368]) = *($4 + [256])
	$3 = CALL $709((($4 + [368]) + [48]), (($4 + [256]) + [48]))
	*((($4 + [368]) + [96])) = *((($4 + [256]) + [96]))
	*((($4 + [368]) + [88])) = *((($4 + [256]) + [88]))
	*((($4 + [368]) + [80])) = *((($4 + [256]) + [80]))
	*((($4 + [368]) + [72])) = *((($4 + [256]) + [72]))
	*($4 + [432]) = *($4 + [320])
	$9 = (($4 + [40]) + int_32($5 >> [1]))
	$2 = ($4 + [432])
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($9) + $6))
	
.LABEL $label$4
	*((($4 + [480]) + [40])) = *((($4 + [368]) + [40]))
	*((($4 + [480]) + [32])) = *((($4 + [368]) + [32]))
	*((($4 + [480]) + [24])) = *((($4 + [368]) + [24]))
	*((($4 + [480]) + [16])) = *((($4 + [368]) + [16]))
	*($4 + [488]) = *($4 + [376])
	*($4 + [480]) = *($4 + [368])
	$5 = CALL $709(($4 + [528]), $3)
	*(($4 + [576])) = *(($2 + [32]))
	*(($4 + [568])) = *(($2 + [24]))
	*(($4 + [560])) = *(($2 + [16]))
	*(($4 + [552])) = *(($2 + [8]))
	*($4 + [544]) = *($2)
	CALL void $9((int_32 ($4 + [480])), (int_32 $6))
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [536])))
	
.LABEL $label$5
	if ( ((*($3) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*(($4 + [424])))
	
.LABEL $label$6
	if ( ($8 <= [513]) ){ goto $label$7 }
	CALL $749($7)
	
.LABEL $label$7
	CALL $24($10)
	if ( ((*(($4 + [304])) & [1]) == 0) ){ goto $label$8 }
	CALL _ZdlPv(*(($4 + [312])))
	
.LABEL $label$8
	$global$0 = ($4 + [592])
	return [1]
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [16]) = [8617]
	*($2 + [20]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [16])
	CALL require_auth(*(CALL $10(($2 + [24]), ($2 + [8]))))
	$global$0 = ($2 + [32])
}

int_32 .FUNC $87 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$3 = ($global$0 - [384])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [288]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [268]) = $2
	*($4 + [264]) = $2
	*($4 + [272]) = ($2 + $7)
	CALL $168(($4 + [264]), ($4 + [280]))
	$3 = ($4 + [304])
	$8 = *($4 + [268])
	if ( ((uint_32)(*($4 + [272]) - $8) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$8 = *($4 + [268])
	
.LABEL $label$5
	CALL memcpy($3, $8, [8])
	*($4 + [268]) = (*($4 + [268]) + [8])
	$8 = *((($4 + [264]) + [8]))
	*((($4 + [48]) + [8])) = $8
	*((($4 + [32]) + [8])) = $8
	$9 = *($4 + [264])
	*($4 + [32]) = $9
	*($4 + [48]) = $9
	$8 = CALL $20(($4 + [64]), $0, $1, ($4 + [32]))
	*(($10 = (($4 + [312]) + [16]))) = *((($4 + [280]) + [16]))
	*(($11 = (($4 + [312]) + [8]))) = *((($4 + [280]) + [8]))
	*($4 + [312]) = *($4 + [280])
	$0 = *($3)
	*((($4 + [336]) + [16])) = *($10)
	*((($4 + [336]) + [8])) = *($11)
	*($4 + [336]) = *($4 + [312])
	$3 = (($4 + [64]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	$1 = *((($4 + [336]) + [16]))
	*((($4 + [360]) + [16])) = $1
	$9 = *((($4 + [336]) + [8]))
	*((($4 + [360]) + [8])) = $9
	*((($4 + [8]) + [8])) = $9
	*((($4 + [8]) + [16])) = $1
	$1 = *($4 + [336])
	*($4 + [8]) = $1
	*($4 + [360]) = $1
	CALL void $3((int_32 ($4 + [8])), (int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $749($2)
	
.LABEL $label$7
	CALL $24($8)
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $86 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	$3 = ($global$0 - [48])
	$global$0 = $3
	CALL $110($3)
	$4 = *(($1 + [16]))
	*((($3 + [24]) + [16])) = $4
	$5 = *(($1 + [8]))
	*((($3 + [24]) + [8])) = $5
	$6 = *($1)
	*(($3 + [8])) = $5
	*(($3 + [16])) = $4
	*($3) = $6
	*($3 + [24]) = $6
	CALL $219(($0 + [120]), $3, $2)
	$global$0 = ($3 + [48])
}

int_32 .FUNC $85 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [304])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [256]) = [0]
	*($4 + [260 align=4]) = (int_64)0
	*($4 + [268]) = [0]
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $7)
	$8 = (($4 + [256]) | [4])
	$3 = $2
	if ( $7 ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($4 + [244])
	
.LABEL $label$4
	CALL memcpy(($4 + [256]), $3, [1])
	*($4 + [244]) = ($3 + [1])
	CALL $136(($4 + [240]), $8)
	$3 = *((($4 + [240]) + [8]))
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$9 = *($4 + [240])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	$10 = CALL $20(($4 + [40]), $0, $1, ($4 + [8]))
	*($4 + [272]) = (int_64)0
	$3 = [0]
	*($4 + [280]) = [0]
	$11 = *($4 + [256])
	$8 = (*((($4 + [256]) + [8])) - *($4 + [260]))
	if ( ($8 == 0) ){ goto $label$7 }
	$12 = int_32($8 >> [5])
	if ( ((uint_32)$12 >= (uint_32)[134217728]) ){ goto $label$6 }
	$3 = CALL _Znwj($8)
	*((($4 + [272]) + [8])) = ($3 + ($12 << [5]))
	*($4 + [272]) = $3
	*($4 + [276]) = $3
	$12 = *($4 + [260])
	$8 = (*((($4 + [256]) + [8])) - $12)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($3, $12, $8)
	$3 = (*($4 + [276]) + $8)
	*($4 + [276]) = $3
	
.LABEL $label$7
	$8 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$8 }
	$6 = *((*($8) + $6))
	
.LABEL $label$8
	*($4 + [296]) = [0]
	*($4 + [288]) = (int_64)0
	$3 = ($3 - *($4 + [272]))
	if ( ($3 == 0) ){ goto $label$9 }
	$5 = int_32($3 >> [5])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$5 }
	$3 = CALL _Znwj($3)
	*(($4 + [296])) = ($3 + ($5 << [5]))
	*($4 + [288]) = $3
	*($4 + [292]) = $3
	$12 = *($4 + [272])
	$5 = (*($4 + [276]) - $12)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($3, $12, $5)
	*($4 + [292]) = ($3 + $5)
	
.LABEL $label$9
	CALL void $8((int_32 ($11 & [255])), (int_32 ($4 + [288])), (int_32 $6))
	$3 = *($4 + [288])
	if ( ($3 == 0) ){ goto $label$10 }
	*($4 + [292]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$10
	$3 = *($4 + [272])
	if ( ($3 == 0) ){ goto $label$11 }
	*($4 + [276]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$11
	if ( ($7 <= [513]) ){ goto $label$12 }
	CALL $749($2)
	
.LABEL $label$12
	CALL $24($10)
	$2 = *($4 + [260])
	if ( ($2 == 0) ){ goto $label$13 }
	*(($4 + [264])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$13
	$global$0 = ($4 + [304])
	return [1]
	
.LABEL $label$6
	CALL $727(($4 + [272]))
	
.LABEL $label$5
	CALL $727(($4 + [288]))
	(unreachable)
	return (unreachable)
}

void .FUNC $84 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [80])
	$global$0 = $3
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$1 }
	$5 = CALL _Znwj([280])
	$4 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$1
	CALL $141(($3 + [16]), $4, $1)
	CALL require_auth(*($3 + [48]))
	$4 = *([0] + [8632])
	if ( $4 ){ goto $label$2 }
	$1 = CALL _Znwj([280])
	$4 = CALL $111($1)
	*([0] + [8632]) = $1
	
.LABEL $label$2
	*($3 + [8]) = [0]
	*($3) = (int_64)0
	$1 = (*($2 + [4]) - *($2))
	if ( ($1 == 0) ){ goto $label$4 }
	$5 = int_32($1 >> [5])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$1 = CALL _Znwj($1)
	*(($3 + [8])) = ($1 + ($5 << [5]))
	*($3) = $1
	*($3 + [4]) = $1
	$5 = *($2)
	$2 = (*(($2 + [4])) - $5)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($1, $5, $2)
	*($3 + [4]) = (*($3 + [4]) + $2)
	
.LABEL $label$4
	CALL $276($4, $3)
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$5 }
	*($3 + [4]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$2 = *($3 + [56])
	if ( ($2 == 0) ){ goto $label$6 }
	*(($3 + [60])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	if ( ((*($3 + [20]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*(($3 + [28])))
	
.LABEL $label$7
	$global$0 = ($3 + [80])
	return (unreachable)
	
.LABEL $label$3
	CALL $727($3)
}

int_32 .FUNC $83 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [432])
	$global$0 = $3
	*(($4 = $3) + [424]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = (int_64)0
	*(($4 + [296])) = (int_64)0
	*(($4 + [312])) = [0]
	*(($4 + [328])) = (int_64)0
	*(($4 + [336])) = (int_64)0
	*(($4 + [352])) = (int_64)0
	*(($4 + [360])) = (int_64)0
	*(($4 + [376])) = [0]
	*($4 + [264]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [316]) = [0]
	*($4 + [320]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*(($4 + [392])) = (int_64)0
	*(($4 + [408])) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [416]) = [0]
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $5)
	*($4 + [16]) = ($4 + [240])
	*($4 + [40]) = ($4 + [256])
	CALL $202(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [248])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [240])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $20(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [424])
	CALL $203(($4 + [16]), ($4 + [256]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $749($2)
	
.LABEL $label$4
	CALL $24($3)
	if ( ((*($4 + [368]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($4 + [376])))
	
.LABEL $label$5
	$2 = *(($4 + [356]))
	if ( ($2 == 0) ){ goto $label$6 }
	*(($4 + [360])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$2 = *(($4 + [344]))
	if ( ($2 == 0) ){ goto $label$7 }
	*(($4 + [348])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$7
	$2 = *(($4 + [332]))
	if ( ($2 == 0) ){ goto $label$8 }
	*(($4 + [336])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$8
	$2 = *(($4 + [320]))
	if ( ($2 == 0) ){ goto $label$9 }
	*(($4 + [324])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$9
	$2 = *(($4 + [304]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($4 + [308])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$10
	$global$0 = ($4 + [432])
	return [1]
}

void .FUNC $82 (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10, int_32 $11, int_32 $12, int_32 $13)
{
	int_32 $14
	int_32 $15
	$14 = ($global$0 - [240])
	$global$0 = $14
	if ( ((int_32)$5 != (int_32)[14]) ){ goto $label$7 }
	*($14 + [224]) = [21459]
	*($14 + [228]) = CALL $743([21459])
	*($14 + [80]) = *($14 + [224])
	CALL require_auth(*(CALL $10(($14 + [232]), ($14 + [80]))))
	if ( *([0] + [8632]) ){ goto $label$8 }
	$5 = CALL _Znwj([280])
	CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$8
	*((($14 + [168]) + [8])) = [0]
	*((($14 + [200]) + [16])) = *(($2 + [16]))
	*((($14 + [200]) + [8])) = *(($2 + [8]))
	*((($14 + [184]) + [8])) = *(($11 + [8]))
	*($14 + [168]) = (int_64)0
	*($14 + [200]) = *($2)
	*($14 + [184]) = *($11)
	$11 = CALL $743([21472])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$6 }
	*($14 + [168]) = ($11 << [1])
	$5 = (($14 + [168]) | [1])
	if ( $11 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	*($14 + [96]) = [8617]
	*($14 + [100]) = CALL $743([8617])
	*($14 + [88]) = *($14 + [96])
	CALL require_auth(*(CALL $10(($14 + [104]), ($14 + [88]))))
	goto $label$3 
	
.LABEL $label$6
	$15 = (($11 + [16]) & [-16])
	$5 = CALL _Znwj($15)
	*($14 + [168]) = ($15 | [1])
	*($14 + [176]) = $5
	*($14 + [172]) = $11
	
.LABEL $label$5
	CALL memcpy($5, [21472], $11)
	
.LABEL $label$4
	*(($5 + $11)) = [0]
	*((($14 + [56]) + [16])) = *((($14 + [200]) + [16]))
	*((($14 + [56]) + [8])) = *((($14 + [200]) + [8]))
	*((($14 + [40]) + [8])) = *((($14 + [184]) + [8]))
	*($14 + [56]) = *($14 + [200])
	*($14 + [40]) = *($14 + [184])
	CALL $162(($14 + [56]), ($14 + [40]), ($14 + [168]), [0])
	if ( ((*($14 + [168]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*($14 + [176]))
	
.LABEL $label$9
	if ( *([0] + [8632]) ){ goto $label$10 }
	$11 = CALL _Znwj([280])
	CALL $111($11)
	*([0] + [8632]) = $11
	
.LABEL $label$10
	*((($14 + [112]) + [8])) = [0]
	*((($14 + [144]) + [16])) = *(($2 + [16]))
	*((($14 + [144]) + [8])) = *(($2 + [8]))
	*((($14 + [128]) + [8])) = *(($12 + [8]))
	*($14 + [112]) = (int_64)0
	*($14 + [144]) = *($2)
	*($14 + [128]) = *($12)
	$2 = CALL $743([21520])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$13 }
	*($14 + [112]) = ($2 << [1])
	$11 = (($14 + [112]) | [1])
	if ( $2 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$12 = (($2 + [16]) & [-16])
	$11 = CALL _Znwj($12)
	*($14 + [112]) = ($12 | [1])
	*($14 + [120]) = $11
	*($14 + [116]) = $2
	
.LABEL $label$12
	CALL memcpy($11, [21520], $2)
	
.LABEL $label$11
	*(($11 + $2)) = [0]
	*((($14 + [16]) + [16])) = *((($14 + [144]) + [16]))
	*((($14 + [16]) + [8])) = *((($14 + [144]) + [8]))
	*(($14 + [8])) = *((($14 + [128]) + [8]))
	*($14 + [16]) = *($14 + [144])
	*($14) = *($14 + [128])
	CALL $162(($14 + [16]), $14, ($14 + [112]), [4])
	if ( ((*($14 + [112]) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($14 + [120]))
	
.LABEL $label$3
	$global$0 = ($14 + [240])
	return (unreachable)
	
.LABEL $label$2
	CALL $708(($14 + [168]))
	
.LABEL $label$1
	CALL $708(($14 + [112]))
	(unreachable)
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [31]) = $2
	CALL $110($3)
	if ( ($2 <= [2]) ){ goto $label$1 }
	CALL eosio_assert([0], [21988])
	
.LABEL $label$1
	$2 = *([0] + [8632])
	if ( ($2 == 0) ){ goto $label$3 }
	$4 = ($2 + [120])
	goto $label$2 
	
.LABEL $label$3
	$5 = CALL _Znwj([280])
	$2 = CALL $111($5)
	*([0] + [8632]) = $5
	$4 = ($5 + [120])
	if ( $5 ){ goto $label$2 }
	$5 = CALL _Znwj([280])
	$2 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$2
	CALL $207(($3 + [16]), ($2 + [120]), (CASTING uint_64)(uint_32 $1))
	*($3 + [8]) = ($3 + [31])
	$2 = *($3 + [20])
	if ( $2 ){ goto $label$4 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$4
	CALL $208($4, $2, ($3 + [8]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $80 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [368])
	$global$0 = $3
	*(($4 = $3) + [312]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	$3 = CALL $125(($4 + [264]))
	*($4 + [252]) = $2
	*($4 + [248]) = $2
	*($4 + [256]) = ($2 + $5)
	CALL $212(($4 + [248]), $3)
	$3 = *($4 + [256])
	*((($4 + [32]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$6 = *($4 + [248])
	*($4 + [8]) = $6
	*($4 + [32]) = $6
	$7 = CALL $20(($4 + [48]), $0, $1, ($4 + [8]))
	*($4 + [24]) = $7
	*($4 + [28]) = ($4 + [312])
	CALL $210(($4 + [320]), ($4 + [264]))
	*(($4 + [364])) = [0]
	*($4 + [356 align=4]) = (int_64)0
	$3 = (*(($4 + [304])) - *($4 + [300]))
	if ( ($3 == 0) ){ goto $label$5 }
	$8 = int_32($3 >> [3])
	if ( ((uint_32)$8 >= (uint_32)[536870912]) ){ goto $label$4 }
	$3 = CALL _Znwj($3)
	*((($4 + [320]) + [36])) = $3
	*(($9 = (($4 + [320]) + [40]))) = $3
	*(($4 + [364])) = ($3 + ($8 << [3]))
	$10 = *((($4 + [264]) + [36]))
	$8 = (*((($4 + [264]) + [40])) - $10)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($3, $10, $8)
	*($9) = (*($9) + $8)
	
.LABEL $label$5
	CALL $213(($4 + [24]), ($4 + [320]))
	$3 = *($4 + [356])
	if ( ($3 == 0) ){ goto $label$6 }
	*(($4 + [360])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$3 = *($4 + [340])
	if ( ($3 == 0) ){ goto $label$7 }
	*(($4 + [344])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$3 = *($4 + [328])
	if ( ($3 == 0) ){ goto $label$8 }
	*(($4 + [332])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$8
	if ( ($5 <= [513]) ){ goto $label$9 }
	CALL $749($2)
	
.LABEL $label$9
	CALL $24($7)
	$2 = *($4 + [300])
	if ( ($2 == 0) ){ goto $label$10 }
	*(($4 + [304])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$10
	$2 = *($4 + [284])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($4 + [288])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($4 + [272])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($4 + [276])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($4 + [368])
	return [1]
	
.LABEL $label$4
	CALL $727(($4 + [356]))
	return (unreachable)
}

void .FUNC _ZdaPvSt11align_val_t (int_32 $0, int_32 $1)
{
	CALL _ZdlPvSt11align_val_t($0, $1)
}

void .FUNC _ZdlPvSt11align_val_t (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $749($0)
	
.LABEL $label$1
}

int_32 .FUNC _ZnajSt11align_val_t (int_32 $0, int_32 $1)
{
	return CALL _ZnwjSt11align_val_t($0, $1)
}

int_32 .FUNC _ZnwjSt11align_val_t (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $744(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8636])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $744(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC _ZdaPv (int_32 $0)
{
	CALL _ZdlPv($0)
}

void .FUNC $341 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [160])
	$global$0 = $3
	if ( *($1 + [4]) ){ goto $label$1 }
	$4 = *($0 + [12])
	*(($1 = *($0))) = (int_64))(*($1) - *(*($0 + [4])))
	*($3 + [64]) = [8617]
	*($3 + [68]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [64])
	$5 = *(CALL $10(($3 + [72]), ($3 + [32])))
	$6 = *($0 + [8])
	if ( ((int_64)*($2) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$2
	*(($1 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = $2
	*($1) = CALL $660($2)
	$6 = *($6 + [4])
	*($1 + [8]) = *($6)
	*($1 + [24]) = *(($6 + [16]))
	*($1 + [16]) = *(($6 + [8]))
	*($3 + [120]) = (($3 + [80]) + [32])
	*($3 + [112]) = ($3 + [80])
	CALL memcpy(($3 + [80]), $1, [8])
	*($3 + [116]) = (($3 + [80]) | [8])
	$6 = ($1 + [8])
	CALL $156(($3 + [112]), $6)
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)8800195549769760768, $5, $7, ($3 + [80]), [32])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$9 = *($1)
	$10 = *(($1 + [16]))
	$11 = *($6)
	$7 = *(($1 + [24]))
	if ( ((int_64)((int_64)$7 | (int_64)$11) != (int_64)0) ){ goto $label$5 }
	$7 = (int_64)0
	if ( (int_64)($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = CALL _Znwj([24])) + [8]) = $10
	*($6) = $11
	*($6 + [16]) = $7
	CALL sha256($6, [24], ($3 + [128]))
	$7 = *($3 + [128])
	if ( ($6 == 0) ){ goto $label$4 }
	CALL _ZdlPv($6)
	
.LABEL $label$4
	*($3 + [128]) = $7
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)8800195549769760768, $5, $9, ($3 + [128]))
	*($3 + [80]) = $1
	$7 = *($1)
	*($3 + [128]) = $7
	$12 = *(($1 + [36]))
	*($3 + [112]) = $12
	$13 = ($2 + [28])
	$6 = *($13)
	if ( ((uint_32)$6 >= (uint_32)*(($2 + [32]))) ){ goto $label$7 }
	*($6 + [8]) = $7
	*($6 + [16]) = $12
	*($3 + [80]) = [0]
	*($6) = $1
	*($13) = ($6 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $662(($2 + [24]), ($3 + [80]), ($3 + [128]), ($3 + [112]))
	
.LABEL $label$6
	$1 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	$1 = ($4 + [120])
	CALL $327(($3 + [80]), $1)
	*((($3 + [128]) + [16])) = *((($3 + [80]) + [16]))
	*($3 + [136]) = *($3 + [88])
	*($3 + [148]) = *($3 + [100])
	*($3 + [128]) = ((int_64)*($3 + [80]) + (int_64)1)
	*($3 + [112]) = [8617]
	*($3 + [116]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [112])
	CALL $328($1, ($3 + [128]), *(CALL $10(($3 + [80]), ($3 + [24]))))
	$1 = *($3 + [136])
	if ( ($1 == 0) ){ goto $label$9 }
	*(($3 + [140])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *(*(($0 + [8])) + [4])
	$7 = *($1)
	$5 = *(($1 + [16]))
	$10 = *(($1 + [8]))
	*(($3 + [8])) = $10
	*(($3 + [16])) = $5
	*((($3 + [40]) + [8])) = $10
	*((($3 + [40]) + [16])) = $5
	*($3 + [40]) = $7
	*($3) = $7
	CALL $478($3, [1], $3)
	
.LABEL $label$1
	$global$0 = ($3 + [160])
}

int_32 .FUNC _Znaj (int_32 $0)
{
	return CALL _Znwj($0)
}

int_32 .FUNC _Znwj (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $746($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8636])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $746($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $340 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800195549769760768, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $442($1, $5)
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $709 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL _Znwj($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $708 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $497 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = *($3)
	*($1) = *($6)
	$3 = [8]
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$3 }
	CALL $596(($1 + [8]), *($6 + [8]), *(($6 + [12])))
	CALL $596(($1 + [20]), *($6 + [20]), *(($6 + [24])))
	
.LABEL $label$3
	*($1 + [32]) = *($6 + [32])
	*($1 + [40]) = *($6 + [40])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$5
	$7 = *($1 + [20])
	$6 = *(($1 + [24]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$7
	$6 = ($3 + [9])
	if ( ($6 <= [513]) ){ goto $label$9 }
	$3 = CALL $746($6)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $676($5, $1)
	CALL db_update_i64(*($1 + [52]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL $749($3)
	
.LABEL $label$10
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)-4812911374179631104) ){ goto $label$11 }
	*(($0 + [16])) = (int_64)-4812911374179631103
	
.LABEL $label$11
	$global$0 = ($5 + [16])
}

void .FUNC $496 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [80])
	$global$0 = $4
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*(($5 = CALL _Znwj([64])) + [40]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48]) = $1
	$3 = *($3)
	*($5) = *($3)
	*(($5 + [8])) = *(($3 + [8]))
	*(($5 + [16])) = *(($3 + [16]))
	*(($5 + [24])) = *(($3 + [24]))
	*($5 + [32]) = *(($3 + [32]))
	*($5 + [40]) = *(($3 + [40]))
	*($4 + [72]) = (($4 + [16]) + [48])
	*($4 + [68]) = ($4 + [16])
	*($4 + [64]) = ($4 + [16])
	CALL $674(($4 + [64]), $5)
	$6 = CALL db_store_i64(*($1 + [8]), (int_64)8516495933114040320, $2, (int_64)8516495933114040320, ($4 + [16]), [48])
	*($5 + [52]) = $6
	if ( ((uint_64)*($1 + [16]) > (uint_64)(int_64)8516495933114040320) ){ goto $label$2 }
	*(($1 + [16])) = (int_64)8516495933114040321
	
.LABEL $label$2
	*($4 + [64]) = $5
	*($4 + [16]) = (int_64)8516495933114040320
	*($4 + [12]) = $6
	$7 = ($1 + [28])
	$3 = *($7)
	if ( ((uint_32)$3 >= (uint_32)*(($1 + [32]))) ){ goto $label$4 }
	*($3 + [8]) = (int_64)8516495933114040320
	*($3 + [16]) = $6
	*($4 + [64]) = [0]
	*($3) = $5
	*($7) = ($3 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $574(($1 + [24]), ($4 + [64]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$3
	*($0 + [4]) = $5
	*($0) = $1
	$5 = *($4 + [64])
	*($4 + [64]) = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL _ZdlPv($5)
	
.LABEL $label$5
	$global$0 = ($4 + [80])
}

void .FUNC $495 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$3 = *($3)
	*($1) = *($3)
	*(($1 + [40])) = *(($3 + [40]))
	*(($1 + [32])) = *(($3 + [32]))
	*(($1 + [24])) = *(($3 + [24]))
	*(($1 + [16])) = *(($3 + [16]))
	*(($1 + [8])) = *(($3 + [8]))
	$4 = $4
	$3 = ($4 + [-48])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = $4
	CALL $674($5, $1)
	CALL db_update_i64(*($1 + [52]), $2, $3, [48])
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)8516495933114040320) ){ goto $label$3 }
	*(($0 + [16])) = (int_64)8516495933114040321
	
.LABEL $label$3
	$global$0 = ($5 + [16])
}

int_32 .FUNC $71 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$3 = ($global$0 - [480])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = (($4 + [296]) + [16]))) = (int_64)0
	*(($8 = ($4 + [320]))) = (int_64)0
	*(($9 = ($4 + [336]))) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [344]) = (int_64)0
	*($4 + [352]) = [0]
	*($4 + [284]) = $2
	*($4 + [280]) = $2
	*($4 + [288]) = ($2 + $7)
	*($4 + [456]) = ($4 + [280])
	*($4 + [80]) = ($4 + [296])
	CALL $205(($4 + [80]), ($4 + [456]))
	$10 = *($4 + [288])
	*((($4 + [64]) + [8])) = $10
	*((($4 + [48]) + [8])) = $10
	$11 = *($4 + [280])
	*($4 + [48]) = $11
	*($4 + [64]) = $11
	$10 = CALL $20(($4 + [80]), $0, $1, ($4 + [48]))
	*(($12 = (($4 + [376]) + [8]))) = *($3)
	*(($3 = (($4 + [376]) + [16]))) = *($8)
	*(($8 = (($4 + [360]) + [8]))) = *($9)
	*($4 + [376]) = *($4 + [304])
	*($4 + [360]) = *($4 + [328])
	$0 = *($4 + [296])
	$1 = *($4 + [344])
	$9 = *($4 + [352])
	*((($4 + [424]) + [8])) = *($8)
	*((($4 + [400]) + [8])) = *($12)
	*((($4 + [400]) + [16])) = *($3)
	*($4 + [424]) = *($4 + [360])
	*($4 + [400]) = *($4 + [376])
	$3 = (($4 + [80]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [400]) + [16]))
	*((($4 + [456]) + [16])) = $11
	$13 = *((($4 + [400]) + [8]))
	*((($4 + [456]) + [8])) = $13
	$14 = *((($4 + [424]) + [8]))
	*((($4 + [440]) + [8])) = $14
	*((($4 + [24]) + [8])) = $13
	*((($4 + [24]) + [16])) = $11
	*((($4 + [8]) + [8])) = $14
	$11 = *($4 + [400])
	*($4 + [456]) = $11
	$13 = *($4 + [424])
	*($4 + [440]) = $13
	*($4 + [24]) = $11
	*($4 + [8]) = $13
	CALL void $3((int_32 $0), (int_64 ($4 + [24])), (int_32 ($4 + [8])), (int_32 $1), (int_64 ($9 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $749($2)
	
.LABEL $label$5
	CALL $24($10)
	$global$0 = ($4 + [480])
	return [1]
}

void .FUNC $493 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8800535342315732992, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $492 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8800273824474988544, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $491 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8800195549752983552, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $490 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [36]))
	$9 = *(($1 + [40]))
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)8800535341778862080, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $78 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [320])
	$global$0 = $3
	*(($4 = $3) + [312]) = *($2)
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$3 = CALL $746($2)
	goto $label$2 
	
.LABEL $label$4
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$3 = ($3 - (($2 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$2
	CALL read_action_data($3, $2)
	
.LABEL $label$1
	*(($4 + [296])) = (int_64)0
	*(($4 + [304])) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [280]) = (int_64)0
	*($4 + [288]) = (int_64)0
	*($4 + [244]) = $3
	*($4 + [240]) = $3
	*($4 + [248]) = ($3 + $2)
	CALL $168(($4 + [240]), ($4 + [256]))
	$5 = ($4 + [280])
	$6 = *($4 + [244])
	if ( ((uint_32)(*($4 + [248]) - $6) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$6 = *($4 + [244])
	
.LABEL $label$5
	CALL memcpy($5, $6, [8])
	*($4 + [244]) = (*($4 + [244]) + [8])
	CALL $169(($4 + [240]), ($4 + [288]))
	$6 = ($4 + [300])
	CALL $170(($4 + [240]), $6)
	$5 = *((($4 + [240]) + [8]))
	*((($4 + [24]) + [8])) = $5
	*(($4 + [8])) = $5
	$7 = *($4 + [240])
	*($4) = $7
	*($4 + [24]) = $7
	$5 = CALL $20(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $5
	*($4 + [20]) = ($4 + [312])
	CALL $171(($4 + [16]), ($4 + [256]))
	if ( ($2 <= [513]) ){ goto $label$6 }
	CALL $749($3)
	
.LABEL $label$6
	CALL $24($5)
	$3 = *($6)
	if ( ($3 == 0) ){ goto $label$7 }
	*(($4 + [304])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$3 = *(($4 + [288]))
	if ( ($3 == 0) ){ goto $label$8 }
	*(($4 + [292])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$8
	$global$0 = ($4 + [320])
	return [1]
}

void .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [464])
	$global$0 = $2
	CALL $110($2)
	$3 = CALL $109(($2 + [24]))
	*($2 + [8]) = [8617]
	*($2 + [12]) = CALL $743([8617])
	*($2) = *($2 + [8])
	CALL $126(($3 + [200]), $1, *(CALL $10(($2 + [16]), $2)))
	CALL $130($3)
	$global$0 = ($2 + [464])
}

void .FUNC $499 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [40]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = *($3)
	*($1) = *($6)
	$3 = [8]
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$3 }
	CALL $596(($1 + [8]), *($6 + [8]), *(($6 + [12])))
	CALL $596(($1 + [20]), *($6 + [20]), *(($6 + [24])))
	
.LABEL $label$3
	*($1 + [32]) = *($6 + [32])
	*($1 + [33 align=1]) = *($6 + [33 align=1])
	$7 = *($1 + [8])
	$6 = *(($1 + [12]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$5 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$5
	$7 = *($1 + [20])
	$6 = *(($1 + [24]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$7
	$6 = ($3 + [3])
	if ( ($6 <= [513]) ){ goto $label$9 }
	$3 = CALL $746($6)
	goto $label$8 
	
.LABEL $label$9
	$3 = ($4 - (($6 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$8
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($3 + $6)
	CALL $678($5, $1)
	CALL db_update_i64(*($1 + [44]), $2, $3, $6)
	if ( ($6 <= [513]) ){ goto $label$10 }
	CALL $749($3)
	
.LABEL $label$10
	if ( ((uint_64)*($0 + [16]) > (uint_64)(int_64)5445039531761205248) ){ goto $label$11 }
	*(($0 + [16])) = (int_64)5445039531761205249
	
.LABEL $label$11
	$global$0 = ($5 + [16])
}

void .FUNC $498 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*($4 + [40]) = $2
	if ( ((int_64)*($1) == (int_64)CALL current_receiver()) ){ goto $label$1 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$1
	*($4 + [20]) = $3
	*($4 + [16]) = $1
	*($4 + [24]) = ($4 + [40])
	$3 = CALL _Znwj([64])
	CALL $115($3)
	*($3 + [40]) = (int_64)2630
	*($3) = (int_64)5260
	*($3 + [48]) = $1
	CALL $675(($4 + [16]), $3)
	*($4 + [32]) = $3
	*($4 + [16]) = (int_64)-4812911374179631104
	$5 = *($3 + [52])
	*($4 + [12]) = $5
	$6 = ($1 + [28])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($1 + [32]))) ){ goto $label$3 }
	*($7 + [8]) = (int_64)-4812911374179631104
	*($7 + [16]) = $5
	*($4 + [32]) = [0]
	*($7) = $3
	*($6) = ($7 + [24])
	goto $label$2 
	
.LABEL $label$3
	CALL $592(($1 + [24]), ($4 + [32]), ($4 + [16]), ($4 + [12]))
	
.LABEL $label$2
	*($0 + [4]) = $3
	*($0) = $1
	$3 = *($4 + [32])
	*($4 + [32]) = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	$1 = *($3 + [20])
	if ( ($1 == 0) ){ goto $label$5 }
	*(($3 + [24])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$5
	$1 = *($3 + [8])
	if ( ($1 == 0) ){ goto $label$6 }
	*(($3 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$6
	CALL _ZdlPv($3)
	
.LABEL $label$4
	$global$0 = ($4 + [48])
}

int_32 .FUNC $34 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	$3 = ($global$0 - [384])
	$global$0 = $3
	*(($4 = $3) + [376]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [328])) = (int_64)0
	*(($4 + [320])) = (int_64)0
	*(($4 + [312])) = (int_64)0
	*(($4 + [344])) = (int_64)0
	*(($4 + [352])) = (int_64)0
	*($4 + [264]) = (int_64)0
	*($4 + [256]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [280]) = [0]
	*($4 + [288]) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [336]) = (int_64)0
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $5)
	*($4 + [16]) = ($4 + [240])
	*($4 + [40]) = ($4 + [256])
	CALL $147(($4 + [40]), ($4 + [16]))
	$3 = *($4 + [248])
	*((($4 + [24]) + [8])) = $3
	*(($4 + [8])) = $3
	$6 = *($4 + [240])
	*($4) = $6
	*($4 + [24]) = $6
	$3 = CALL $20(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $3
	*($4 + [20]) = ($4 + [376])
	CALL $148(($4 + [16]), ($4 + [256]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $749($2)
	
.LABEL $label$4
	CALL $24($3)
	$2 = *(($4 + [348]))
	if ( ($2 == 0) ){ goto $label$5 }
	*(($4 + [352])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$2 = *(($4 + [336]))
	if ( ($2 == 0) ){ goto $label$6 }
	*(($4 + [340])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$global$0 = ($4 + [384])
	return [1]
}

void .FUNC $280 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	CALL $11($0, [41])
	$3 = *($0 + [4])
	$0 = *($0)
	*($2 + [12]) = $0
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	CALL $156(($2 + [8]), $1)
	$3 = ($1 + [24])
	$0 = *($2 + [12])
	if ( ((int_32)(*($2 + [16]) - $0) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$0 = *($2 + [12])
	
.LABEL $label$1
	CALL memcpy($0, $3, [8])
	$0 = (*($2 + [12]) + [8])
	*($2 + [12]) = $0
	*($2 + [24]) = *(($1 + [32]))
	$3 = (($2 + [8]) + [8])
	if ( ((int_32)(*($3) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$0 = *($2 + [12])
	
.LABEL $label$2
	CALL memcpy($0, ($2 + [24]), [8])
	$0 = (*($2 + [12]) + [8])
	*($2 + [12]) = $0
	$1 = ($1 + [40])
	if ( ((int_32)(*($3) - $0) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$0 = *($2 + [12])
	
.LABEL $label$3
	CALL memcpy($0, $1, [1])
	$global$0 = ($2 + [32])
}

void .FUNC $692 (int_32 $0, int_32 $1)
{
	*($1) = [30300]
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$4 = ($global$0 - [352])
	$global$0 = $4
	*($4 + [351]) = $3
	*($4 + [328]) = [8617]
	*($4 + [332]) = CALL $743([8617])
	*($4 + [80]) = *($4 + [328])
	CALL require_auth(*(CALL $10(($4 + [336]), ($4 + [80]))))
	*($4 + [316]) = $1
	*($4 + [312]) = $2
	*($4 + [320]) = $0
	*($4 + [296]) = [22008]
	*($4 + [300]) = CALL $743([22008])
	*($4 + [72]) = *($4 + [296])
	if ( CALL $224(($4 + [312]), [18768], *(CALL $10(($4 + [304]), ($4 + [72]))), (int_64)1000) ){ goto $label$1 }
	*($4 + [280]) = [22032]
	*($4 + [284]) = CALL $743([22032])
	*($4 + [64]) = *($4 + [280])
	if ( CALL $224(($4 + [312]), [22024], *(CALL $10(($4 + [288]), ($4 + [64]))), (int_64)1000) ){ goto $label$1 }
	*($4 + [264]) = [22056]
	*($4 + [268]) = CALL $743([22056])
	*($4 + [56]) = *($4 + [264])
	if ( CALL $224(($4 + [312]), [22048], *(CALL $10(($4 + [272]), ($4 + [56]))), (int_64)100000) ){ goto $label$1 }
	*($4 + [248]) = [22069]
	*($4 + [252]) = CALL $743([22069])
	*($4 + [48]) = *($4 + [248])
	if ( CALL $224(($4 + [312]), [19632], *(CALL $10(($4 + [256]), ($4 + [48]))), (int_64)10000000) ){ goto $label$1 }
	*($4 + [232]) = [22096]
	*($4 + [236]) = CALL $743([22096])
	*($4 + [40]) = *($4 + [232])
	CALL $224(($4 + [312]), [22088], *(CALL $10(($4 + [240]), ($4 + [40]))), (int_64)10000000)
	
.LABEL $label$1
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$2 }
	$5 = CALL _Znwj([280])
	$3 = CALL $111($5)
	*([0] + [8632]) = $5
	
.LABEL $label$2
	$6 = *($4 + [351])
	CALL $225(($4 + [168]), [22109], ($4 + [351]))
	$3 = ($3 + [120])
	if ( (*($4 + [168]) & [1]) ){ goto $label$4 }
	$5 = (($4 + [168]) | [1])
	goto $label$3 
	
.LABEL $label$4
	$5 = *($4 + [176])
	CALL _ZdlPv($5)
	
.LABEL $label$3
	CALL $207(($4 + [168]), $3, $6)
	$3 = *($4 + [172])
	if ( $3 ){ goto $label$5 }
	CALL eosio_assert([0], $5)
	$3 = *($4 + [172])
	
.LABEL $label$5
	*($4 + [168]) = *($3)
	$7 = CALL $709((($4 + [168]) | [4]), ($3 + [4]))
	$6 = *(($3 + [24]))
	$8 = *(($3 + [32]))
	$9 = *($3 + [16])
	*((($4 + [168]) + [44])) = (int_64)0
	*((($4 + [168]) + [32])) = $8
	*((($4 + [168]) + [24])) = $6
	*($4 + [208]) = [0]
	*($4 + [184]) = $9
	$5 = (*(($3 + [44])) - *($3 + [40]))
	$10 = ((int_32)$5 / (int_32)[48])
	if ( ($5 == 0) ){ goto $label$9 }
	if ( ((uint_32)$10 >= (uint_32)[89478486]) ){ goto $label$8 }
	$5 = CALL _Znwj($5)
	*((($4 + [168]) + [40])) = $5
	*((($4 + [168]) + [48])) = ($5 + ((int_32)$10 * (int_32)[48]))
	*(($10 = (($4 + [168]) + [44]))) = $5
	$11 = *(($3 + [40]))
	$12 = (*(($3 + [44])) - $11)
	if ( ((int_32)$12 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $11, $12)
	*($10) = (*($10) + ((int_32)((uint_32)$12 / (uint_32)[48]) * (int_32)[48]))
	
.LABEL $label$9
	*((($4 + [168]) + [60])) = *(($3 + [60]))
	*($4 + [220 align=4]) = *($3 + [52 align=4])
	if ( (int_64)(*(($4 + [184])) == 0) ){ goto $label$6 }
	if ( (*($4 + [194]) == 0) ){ goto $label$6 }
	if ( (*($4 + [193]) == 0) ){ goto $label$6 }
	*($4 + [120]) = (int_64)0
	*($4 + [112]) = (int_64)0
	$3 = CALL $743([22881])
	if ( ($3 <= [8]) ){ goto $label$12 }
	CALL eosio_assert([0], [29586])
	goto $label$11 
	
.LABEL $label$12
	if ( ($3 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$6 = (int_64)0
	
.LOOP $label$13:
	$5 = *(($3 + [22880]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$14 }
	CALL eosio_assert([0], [29631])
	
.LABEL $label$14
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$13 }
	$6 = ((int_64)((int_64)$6 << (int_64)8) | (int_64)4)
	goto $label$7 
	
.LABEL $label$10
	$6 = (int_64)4
	goto $label$7 
	
.LABEL $label$8
	CALL $727(($4 + [208]))
	
.LABEL $label$7
	*(($3 = ($4 + [136]))) = (int_64)0
	*($4 + [144]) = [1000000000]
	*($4 + [112]) = $6
	*($4 + [120]) = (int_64)0
	$6 = ((uint_64)((int_64)((uint_64)((int_64)*((($4 + [168]) + [16])) * (int_64)1000000000) / (uint_64)(int_64)100000) * (int_64)*(($4 + [193]))) / (uint_64)(int_64)100)
	*($4 + [128]) = $6
	*($4 + [96]) = [8617]
	*($4 + [100]) = CALL $743([8617])
	*($4 + [32]) = *($4 + [96])
	$5 = CALL $10(($4 + [104]), ($4 + [32]))
	$8 = (int_64)0
	if ( ((int_64)*($4 + [200]) == (int_64)*($5)) ){ goto $label$15 }
	$5 = *([0] + [8632])
	if ( ($5 == 0) ){ goto $label$17 }
	$10 = ($5 + [120])
	goto $label$16 
	
.LABEL $label$17
	$12 = CALL _Znwj([280])
	$5 = CALL $111($12)
	*([0] + [8632]) = $12
	$10 = ($12 + [120])
	if ( $12 ){ goto $label$16 }
	$12 = CALL _Znwj([280])
	$5 = CALL $111($12)
	*([0] + [8632]) = $12
	
.LABEL $label$16
	CALL $207(($4 + [88]), ($5 + [120]), *($4 + [168]))
	*($4 + [104]) = $2
	*($4 + [108]) = ($4 + [112])
	$5 = *($4 + [92])
	if ( $5 ){ goto $label$18 }
	CALL eosio_assert([0], [29344])
	
.LABEL $label$18
	CALL $226($10, $5, ($4 + [104]))
	$8 = *(($4 + [136]))
	$6 = *(($4 + [128]))
	
.LABEL $label$15
	CALL __multi3(($4 + [16]), $6, $8, *(($4 + [194])), (int_64)0)
	CALL __udivti3($4, *($4 + [16]), *((($4 + [16]) + [8])), (int_64)100, (int_64)0)
	*($3) = *(($4 + [8]))
	*((($4 + [112]) + [16])) = *($4)
	CALL $227(($0 + [120]), $1, $2, ($4 + [112]))
	
.LABEL $label$6
	$3 = *($4 + [208])
	if ( ($3 == 0) ){ goto $label$19 }
	*(($4 + [212])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$19
	if ( ((*($7) & [1]) == 0) ){ goto $label$20 }
	CALL _ZdlPv(*(($4 + [180])))
	
.LABEL $label$20
	$global$0 = ($4 + [352])
	(unreachable)
}

void .FUNC $228 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	$3 = ($global$0 - [48])
	$global$0 = $3
	if ( ($2 == 0) ){ goto $label$2 }
	$4 = ($0 + [280])
	$5 = ($0 + [320])
	$6 = ($0 + [160])
	$7 = ($0 + [200])
	$8 = ($0 + [40])
	$9 = ($0 + [80])
	$10 = ($0 + [240])
	$11 = ($0 + [120])
	$12 = ((int_32)$1 == (int_32)[2])
	$13 = ($3 + [36])
	$14 = ($0 + [328])
	$15 = ($3 + [24])
	$16 = ($3 + [28])
	$17 = ($0 + [288])
	$18 = ($0 + [208])
	$19 = ($0 + [168])
	$20 = ($0 + [88])
	$21 = ($0 + [48])
	$22 = [0]
	
.LOOP $label$3:
	if ( $12 ){ goto $label$34 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$33 }
	if ( $1 ){ goto $label$32 }
	CALL $325(($3 + [16]), $0)
	if ( (*($13) == 0) ){ goto $label$31 }
	CALL $337(($3 + [8]), $8, (int_64)-1)
	$23 = CALL db_lowerbound_i64(*($8), *($21), (int_64)8800273824458211328, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$28 }
	CALL $439($8, $23)
	$23 = CALL db_lowerbound_i64(*($8), *($21), (int_64)8800273824458211328, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$25 }
	$23 = CALL $439($8, $23)
	goto $label$24 
	
.LABEL $label$34
	CALL $329(($3 + [16]), $10)
	if ( (*($13) == 0) ){ goto $label$30 }
	CALL $349(($3 + [8]), $4, (int_64)-1)
	$23 = CALL db_lowerbound_i64(*($4), *($17), (int_64)8800535341778862080, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$27 }
	CALL $441($4, $23)
	$23 = CALL db_lowerbound_i64(*($4), *($17), (int_64)8800535341778862080, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$23 }
	$23 = CALL $441($4, $23)
	goto $label$22 
	
.LABEL $label$33
	CALL $327(($3 + [16]), $11)
	if ( (*($13) == 0) ){ goto $label$29 }
	CALL $343(($3 + [8]), $6, (int_64)-1)
	$23 = CALL db_lowerbound_i64(*($6), *($19), (int_64)8800195549752983552, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$26 }
	CALL $440($6, $23)
	$23 = CALL db_lowerbound_i64(*($6), *($19), (int_64)8800195549752983552, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$21 }
	$23 = CALL $440($6, $23)
	goto $label$20 
	
.LABEL $label$32
	CALL eosio_assert([0], [29988])
	CALL eosio_assert([0], [20997])
	goto $label$4 
	
.LABEL $label$31
	CALL $334(($3 + [8]), $9, (int_64)-1)
	$23 = CALL db_lowerbound_i64(*($9), *($20), (int_64)8800273824474988544, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$28 }
	CALL $444($9, $23)
	$23 = CALL db_lowerbound_i64(*($9), *($20), (int_64)8800273824474988544, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$19 }
	$23 = CALL $444($9, $23)
	goto $label$18 
	
.LABEL $label$30
	CALL $346(($3 + [8]), $5, (int_64)-1)
	$23 = CALL db_lowerbound_i64(*($5), *($14), (int_64)8800535342315732992, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$27 }
	CALL $443($5, $23)
	$23 = CALL db_lowerbound_i64(*($5), *($14), (int_64)8800535342315732992, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$14 }
	$23 = CALL $443($5, $23)
	goto $label$13 
	
.LABEL $label$29
	CALL $340(($3 + [8]), $7, (int_64)-1)
	$23 = CALL db_lowerbound_i64(*($7), *($18), (int_64)8800195549769760768, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$26 }
	CALL $442($7, $23)
	$23 = CALL db_lowerbound_i64(*($7), *($18), (int_64)8800195549769760768, (int_64)0)
	if ( ((int_32)$23 < (int_32)[0]) ){ goto $label$9 }
	$23 = CALL $442($7, $23)
	goto $label$8 
	
.LABEL $label$28
	$24 = [1]
	$23 = *($15)
	if ( $23 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$27
	$24 = [1]
	$23 = *($15)
	if ( $23 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$26
	$24 = [1]
	$23 = *($15)
	if ( $23 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$25
	$23 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$24
	$24 = CALL db_next_i64(*($23 + [36]), ($3 + [40]))
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$35 }
	CALL $439($8, $24)
	
.LABEL $label$35
	CALL $489($8, $23)
	goto $label$17 
	
.LABEL $label$23
	$23 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$22
	$24 = CALL db_next_i64(*($23 + [36]), ($3 + [40]))
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$36 }
	CALL $441($4, $24)
	
.LABEL $label$36
	CALL $490($4, $23)
	goto $label$12 
	
.LABEL $label$21
	$23 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$20
	$24 = CALL db_next_i64(*($23 + [36]), ($3 + [40]))
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$37 }
	CALL $440($6, $24)
	
.LABEL $label$37
	CALL $491($6, $23)
	goto $label$7 
	
.LABEL $label$19
	$23 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$18
	$24 = CALL db_next_i64(*($23 + [36]), ($3 + [40]))
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$38 }
	CALL $444($9, $24)
	
.LABEL $label$38
	CALL $492($9, $23)
	
.LABEL $label$17
	$24 = [0]
	$23 = *($15)
	if ( ($23 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	*($16) = $23
	CALL _ZdlPv($23)
	
.LABEL $label$15
	if ( ($24 == 0) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$14
	$23 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$13
	$24 = CALL db_next_i64(*($23 + [36]), ($3 + [40]))
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$39 }
	CALL $443($5, $24)
	
.LABEL $label$39
	CALL $493($5, $23)
	
.LABEL $label$12
	$24 = [0]
	$23 = *($15)
	if ( ($23 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	*($16) = $23
	CALL _ZdlPv($23)
	
.LABEL $label$10
	if ( ($24 == 0) ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$9
	$23 = [0]
	CALL eosio_assert([0], [29136])
	CALL eosio_assert([0], [28698])
	
.LABEL $label$8
	$24 = CALL db_next_i64(*($23 + [36]), ($3 + [40]))
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$40 }
	CALL $442($7, $24)
	
.LABEL $label$40
	CALL $494($7, $23)
	
.LABEL $label$7
	$24 = [0]
	$23 = *($15)
	if ( ($23 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*($16) = $23
	CALL _ZdlPv($23)
	
.LABEL $label$5
	if ( $24 ){ goto $label$1 }
	
.LABEL $label$4
	$22 = ($22 + [1])
	if ( ($22 <= $2) ){ goto $label$3 }
	
.LABEL $label$2
	CALL $450($3, $1, $2)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
}

void .FUNC $342 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = *($2)
	$4 = [0]
	$5 = *($1)
	$5 = CALL db_idx64_lowerbound(*($5), *($5 + [8]), (int_64)8800195549752983552, ($3 + [8]), ($3 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	CALL $343($3, *($1), *($3 + [16]))
	*((($4 = *($3 + [4])) + [40])) = $5
	
.LABEL $label$1
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = (int_64)0
	$7 = *(($4 + [16]))
	$8 = *($2)
	$10 = *($4 + [8])
	$9 = *(($4 + [24]))
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$6 }
	$9 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($2 = CALL _Znwj([24])) + [8]) = $7
	*($2) = $10
	*($2 + [16]) = $9
	CALL sha256($2, [24], ($3 + [16]))
	$6 = *($3 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL _ZdlPv($2)
	
.LABEL $label$5
	*($0) = $1
	if ( ((int_64)$8 != (int_64)$6) ){ goto $label$3 }
	*(($0 + [4])) = $4
	goto $label$2 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
	goto $label$2 
	
.LABEL $label$3
	*(($0 + [4])) = [0]
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

int_32 .FUNC $306 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*($1 + [8]) = *($2 + [8])
	*($3) = (*($3) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $633 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($3 - $2)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$1 }
	$6 = *($0 + [4])
	$4 = *($0 + [8])
	$5 = int_32($4 >> [4])
	if ( ((int_32)$5 <= (int_32)int_32(($4 - $6) >> [4])) ){ goto $label$7 }
	$7 = *($0)
	$8 = (int_32(($6 - $7) >> [4]) + $5)
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$3 }
	$4 = ($4 - $7)
	if ( ((uint_32)int_32($4 >> [4]) >= (uint_32)[134217727]) ){ goto $label$6 }
	$5 = int_32(($1 - $7) >> [4])
	$4 = int_32($4 >> [3])
	$6 = ( $8 ? $4 : ($4 <= $8) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ($6 <= [268435456]) ){ goto $label$5 }
	CALL abort()
	
.LABEL $label$7
	$9 = ($6 - $1)
	$4 = int_32($9 >> [4])
	if ( ((int_32)$5 <= (int_32)$4) ){ goto $label$9 }
	$7 = $6
	$10 = ($2 + ($4 << [4]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$10 }
	$8 = ($0 + [4])
	$7 = $6
	$4 = $10
	
.LOOP $label$11:
	*($7) = *($4)
	*(($7 + [8])) = *(($4 + [8]))
	$7 = (*($8) + [16])
	*($8) = $7
	$4 = ($4 + [16])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ((int_32)$9 >= (int_32)[1]) ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$9
	$7 = $6
	$10 = $3
	
.LABEL $label$8
	$4 = ($5 << [4])
	$5 = ($7 - ($1 + $4))
	$4 = ($7 - $4)
	if ( ((uint_32)$4 >= (uint_32)$6) ){ goto $label$12 }
	$8 = ($0 + [4])
	$3 = $7
	
.LOOP $label$13:
	*($3) = *($4)
	*(($3 + [8])) = *(($4 + [8]))
	$3 = (*($8) + [16])
	*($8) = $3
	$4 = ($4 + [16])
	if ( ($4 <= $6) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($5 == 0) ){ goto $label$14 }
	CALL memmove(($7 - (int_32($5 >> [4]) << [4])), $1, $5)
	
.LABEL $label$14
	$4 = ($10 - $2)
	if ( ($4 == 0) ){ goto $label$1 }
	CALL memmove($1, $2, $4)
	return $1
	
.LABEL $label$6
	$5 = int_32(($1 - $7) >> [4])
	$6 = [268435455]
	
.LABEL $label$5
	$7 = CALL _Znwj(($6 << [4]))
	goto $label$2 
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	$8 = ($7 + ($5 << [4]))
	$4 = $8
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$15 }
	$5 = (($5 + uint_32((($3 + [-16]) - $2) >> [4])) + [1])
	$4 = $8
	
.LOOP $label$16:
	*($4) = *($2)
	*(($4 + [8])) = *(($2 + [8]))
	$4 = ($4 + [16])
	$2 = ($2 + [16])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$16 }
	$4 = ($7 + ($5 << [4]))
	
.LABEL $label$15
	$6 = ($6 << [4])
	$5 = *($0)
	$2 = ($1 - $5)
	$3 = ($8 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($3, $5, $2)
	
.LABEL $label$17
	$7 = ($7 + $6)
	$6 = ($0 + [4])
	$2 = (*($6) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$18 }
	CALL memcpy($4, $1, $2)
	$4 = ($4 + $2)
	
.LABEL $label$18
	*($6) = $4
	$2 = *($0)
	*($0) = $3
	*(($0 + [8])) = $7
	if ( ($2 == 0) ){ goto $label$19 }
	CALL _ZdlPv($2)
	
.LABEL $label$19
	$1 = $8
	
.LABEL $label$1
	(unreachable)
	(unreachable)
	return $1
}

int_32 .FUNC $632 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($3 - $2)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$2 }
	$6 = *($0 + [4])
	$5 = *($0 + [8])
	if ( ((int_32)$4 <= (int_32)($5 - $6)) ){ goto $label$6 }
	$7 = *($0)
	$8 = (($6 - $7) + $4)
	if ( ((int_32)$8 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = ($5 - $7)
	if ( ((uint_32)$5 >= (uint_32)[1073741823]) ){ goto $label$5 }
	$4 = ($1 - $7)
	$5 = ($5 << [1])
	$6 = ( $8 ? $5 : ($5 <= $8) )
	if ( $6 ){ goto $label$4 }
	$6 = [0]
	$7 = [0]
	goto $label$3 
	
.LABEL $label$6
	$9 = ($6 - $1)
	if ( ((int_32)$4 <= (int_32)$9) ){ goto $label$8 }
	$8 = $6
	$10 = ($2 + $9)
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$9 }
	$7 = ($0 + [4])
	$8 = $6
	$5 = $10
	
.LOOP $label$10:
	*($8) = *($5)
	$8 = (*($7) + [1])
	*($7) = $8
	$5 = ($5 + [1])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$9 >= (int_32)[1]) ){ goto $label$7 }
	goto $label$2 
	
.LABEL $label$8
	$8 = $6
	$10 = $3
	
.LABEL $label$7
	$9 = ($8 - ($1 + $4))
	$5 = ($8 - $4)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$11 }
	$3 = ($0 + [4])
	$7 = $8
	
.LOOP $label$12:
	*($7) = *($5)
	$7 = (*($3) + [1])
	*($3) = $7
	$5 = ($5 + [1])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($9 == 0) ){ goto $label$13 }
	CALL memmove(($8 - $9), $1, $9)
	
.LABEL $label$13
	$5 = ($10 - $2)
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memmove($1, $2, $5)
	return $1
	
.LABEL $label$5
	$4 = ($1 - $7)
	$6 = [2147483647]
	
.LABEL $label$4
	$7 = CALL _Znwj($6)
	
.LABEL $label$3
	$8 = ($7 + $4)
	$5 = $8
	if ( ((int_32)$2 == (int_32)$3) ){ goto $label$14 }
	$4 = ($3 + ($4 - $2))
	$5 = $8
	
.LOOP $label$15:
	*($5) = *($2)
	$5 = ($5 + [1])
	$2 = ($2 + [1])
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$15 }
	$5 = ($7 + $4)
	
.LABEL $label$14
	$4 = *($0)
	$2 = ($1 - $4)
	$3 = ($8 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$16 }
	CALL memcpy($3, $4, $2)
	
.LABEL $label$16
	$7 = ($7 + $6)
	$6 = ($0 + [4])
	$2 = (*($6) - $1)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$17 }
	CALL memcpy($5, $1, $2)
	$5 = ($5 + $2)
	
.LABEL $label$17
	*($6) = $5
	$2 = *($0)
	*($0) = $3
	*(($0 + [8])) = $7
	if ( ($2 == 0) ){ goto $label$18 }
	CALL _ZdlPv($2)
	
.LABEL $label$18
	$1 = $8
	
.LABEL $label$2
	return $1
	
.LABEL $label$1
	CALL $727($0)
	return (unreachable)
}

void .FUNC $208 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$3 = ($global$0 - [48])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	*($4 + [24]) = *($1 + [32])
	$5 = *($1)
	$6 = *(*($2))
	if ( ((int_32)*($1 + [24]) != (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [30328])
	*(($1 + [24])) = *(*($2))
	if ( ((int_32)$5 == (int_32)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [29476])
	goto $label$3 
	
.LABEL $label$4
	*(($1 + [24])) = $6
	
.LABEL $label$3
	$7 = (CASTING uint_64)(uint_32 $5)
	$2 = *($1 + [4])
	$5 = ( *(($1 + [8])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($5 + [59])
	$8 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	$6 = *($1 + [40])
	$5 = *(($1 + [44]))
	$9 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 ((int_32)$9 / (int_32)[48]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$8 }
	$2 = (((int_32)((uint_32)($9 + [-48]) / (uint_32)[48]) * (int_32)[36]) + $2)
	goto $label$7 
	
.LABEL $label$8
	$2 = ($2 + [-36])
	
.LABEL $label$7
	$5 = ($2 + [12])
	if ( ($5 <= [513]) ){ goto $label$10 }
	$2 = CALL $746($5)
	goto $label$9 
	
.LABEL $label$10
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$9
	*($4 + [12]) = $2
	*($4 + [8]) = $2
	*($4 + [16]) = ($2 + $5)
	CALL $589(($4 + [8]), $1)
	CALL db_update_i64(*(($1 + [68])), (int_64)0, $2, $5)
	if ( ($5 <= [513]) ){ goto $label$11 }
	CALL $749($2)
	
.LABEL $label$11
	if ( ((uint_64)*($0 + [16]) > (uint_64)$7) ){ goto $label$12 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$12
	*($4 + [40]) = *(($1 + [32]))
	if ( (CALL $742(($4 + [24]), ($4 + [40]), [8]) == 0) ){ goto $label$13 }
	$1 = ($1 + [72])
	$2 = *($1)
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	$2 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)6138621011882409984, ($4 + [32]), $7)
	*($1) = $2
	
.LABEL $label$14
	CALL db_idx64_update($2, (int_64)0, ($4 + [40]))
	
.LABEL $label$13
	$global$0 = ($4 + [48])
}

int_32 .FUNC $209 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $170(CALL $170($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)*($0 + [8]) != (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $2, [1])
	$2 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $2
	$1 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $2) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($1, $2, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	return $0
}

int_32 .FUNC $637 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($1 + [24])
	$3 = *($0 + [4])
	$0 = CALL $168($0, $1)
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $3, [4])
	$2 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $2
	$1 = ($1 + [28])
	if ( ((int_32)*(($0 + [8])) != (int_32)$2) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$2 = *($3)
	
.LABEL $label$2
	CALL memcpy($1, $2, [1])
	*($3) = (*($3) + [1])
	return $0
}

int_32 .FUNC $636 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [40])
	$3 = *($0 + [4])
	$0 = CALL $156($0, ($1 + [16]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [48])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [56]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$4 = ($1 + [64])
	$1 = *($3)
	if ( ((int_32)(*(($0 + [8])) - $1) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$1 = *($3)
	
.LABEL $label$6
	CALL memcpy($1, $4, [1])
	*($3) = (*($3) + [1])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $635 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$4 = ($1 + [40])
	$3 = *($0 + [4])
	$0 = CALL $156($0, ($1 + [16]))
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [48])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [56]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	*(($3 = ($0 + [4]))) = (*($3) + [8])
	$5 = ($1 + [64])
	$4 = *($3)
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [1])
	*($3) = (*($3) + [1])
	$1 = CALL $230(CALL $522($0, ($1 + [68])), ($1 + [80]))
	$global$0 = ($2 + [16])
	return $1
}

void .FUNC $634 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = *($2)
	$4 = [0]
	$5 = *($1)
	$5 = CALL db_idx64_lowerbound(*($5), *($5 + [8]), (int_64)-4812917093941759103, ($3 + [8]), ($3 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	CALL $368($3, *($1), *($3 + [16]))
	*((($4 = *($3 + [4])) + [104])) = $5
	
.LABEL $label$1
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = *(($4 + [32]))
	$7 = *(($4 + [24]))
	$8 = *($2)
	$9 = *($4 + [8])
	$10 = *($4 + [16])
	*(($2 = CALL _Znwj([32])) + [8]) = $10
	*($2) = $9
	*($2 + [16]) = $7
	*($2 + [24]) = $6
	CALL sha256($2, [32], ($3 + [16]))
	$6 = *($3 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL _ZdlPv($2)
	
.LABEL $label$5
	*($0) = $1
	if ( ((int_64)$8 != (int_64)$6) ){ goto $label$3 }
	*(($0 + [4])) = $4
	goto $label$2 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
	goto $label$2 
	
.LABEL $label$3
	*(($0 + [4])) = [0]
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	CALL $168(*($1), ($4 + [8]))
	CALL $306(*($1), ($4 + [32]))
	CALL $169(*($1), ($4 + [48]))
	*($2 + [8]) = $4
	CALL $530(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$2 = ($global$0 - [240])
	$global$0 = $2
	*((($2 + [216]) + [8])) = *(($1 + [16]))
	*((($2 + [216]) + [16])) = *(($1 + [24]))
	*((($2 + [200]) + [8])) = *(($1 + [40]))
	*($2 + [184]) = (int_64)0
	*($2 + [192]) = [0]
	*($2 + [216]) = *($1 + [8])
	*($2 + [200]) = *($1 + [32])
	$3 = *($1)
	$4 = (*(($1 + [52])) - *($1 + [48]))
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL _Znwj($4)
	*(($2 + [192])) = ($5 + $4)
	*($2 + [184]) = $5
	*($2 + [188]) = $5
	$6 = *(($1 + [48]))
	$4 = (*(($1 + [52])) - $6)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($5, $6, $4)
	*($2 + [188]) = ($5 + $4)
	
.LABEL $label$6
	*($2 + [168]) = (int_64)0
	*($2 + [176]) = [0]
	$6 = *($1 + [60])
	$4 = (*(($1 + [68])) - *($1 + [64]))
	if ( ($4 == 0) ){ goto $label$7 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$4 }
	$5 = CALL _Znwj($4)
	*(($2 + [176])) = ($5 + $4)
	*($2 + [168]) = $5
	*($2 + [172]) = $5
	$7 = *(($1 + [64]))
	$4 = (*(($1 + [68])) - $7)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$7 }
	CALL memcpy($5, $7, $4)
	*($2 + [172]) = ($5 + $4)
	
.LABEL $label$7
	*($2 + [160]) = [0]
	*($2 + [152]) = (int_64)0
	$4 = (*(($1 + [80])) - *($1 + [76]))
	if ( ($4 == 0) ){ goto $label$8 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$5 = CALL _Znwj($4)
	*(($2 + [160])) = ($5 + $4)
	*($2 + [152]) = $5
	*($2 + [156]) = $5
	$7 = *(($1 + [76]))
	$4 = (*(($1 + [80])) - $7)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($5, $7, $4)
	*($2 + [156]) = ($5 + $4)
	
.LABEL $label$8
	*($2 + [144]) = [0]
	*($2 + [136]) = (int_64)0
	$4 = (*(($1 + [92])) - *($1 + [88]))
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$2 }
	$5 = CALL _Znwj($4)
	*(($2 + [144])) = ($5 + $4)
	*($2 + [136]) = $5
	*($2 + [140]) = $5
	$7 = *(($1 + [88]))
	$4 = (*(($1 + [92])) - $7)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $7, $4)
	*($2 + [140]) = ($5 + $4)
	
.LABEL $label$9
	*($2 + [128]) = [0]
	*($2 + [120]) = (int_64)0
	$4 = (*(($1 + [104])) - *($1 + [100]))
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$1 }
	$5 = CALL _Znwj($4)
	*(($2 + [128])) = ($5 + (int_32($4 >> [1]) << [1]))
	*($2 + [120]) = $5
	*($2 + [124]) = $5
	$7 = *(($1 + [100]))
	$4 = (*(($1 + [104])) - $7)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($5, $7, $4)
	*($2 + [124]) = ($5 + $4)
	
.LABEL $label$10
	$4 = CALL $709(($2 + [104]), ($1 + [112]))
	*(($5 = (($2 + [88]) + [8]))) = *(($1 + [136]))
	*(($7 = (($2 + [72]) + [8]))) = *(($1 + [152]))
	$8 = *($1 + [160])
	$9 = *($1 + [144])
	$10 = *($1 + [128])
	*((($2 + [48]) + [16])) = *((($2 + [216]) + [16]))
	*((($2 + [48]) + [8])) = *((($2 + [216]) + [8]))
	*((($2 + [32]) + [8])) = *((($2 + [200]) + [8]))
	*($2 + [88]) = $10
	*($2 + [72]) = $9
	*($2 + [48]) = *($2 + [216])
	*($2 + [32]) = *($2 + [200])
	*((($2 + [16]) + [8])) = *($5)
	*($2 + [16]) = *($2 + [88])
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [72])
	CALL $534($0, $3, ($2 + [48]), ($2 + [32]), ($2 + [184]), ($6 & [255]), ($2 + [168]), ($2 + [152]), ($2 + [136]), ($2 + [120]), $4, ($2 + [16]), $2, $8)
	if ( ((*($4) & [1]) == 0) ){ goto $label$11 }
	CALL _ZdlPv(*($4 + [8]))
	
.LABEL $label$11
	$1 = *($2 + [120])
	if ( ($1 == 0) ){ goto $label$12 }
	*($2 + [124]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$12
	$1 = *($2 + [136])
	if ( ($1 == 0) ){ goto $label$13 }
	*($2 + [140]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$13
	$1 = *($2 + [152])
	if ( ($1 == 0) ){ goto $label$14 }
	*($2 + [156]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$14
	$1 = *($2 + [168])
	if ( ($1 == 0) ){ goto $label$15 }
	*($2 + [172]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$15
	$1 = *($2 + [184])
	if ( ($1 == 0) ){ goto $label$16 }
	*($2 + [188]) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$16
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$5
	CALL $727(($2 + [184]))
	
.LABEL $label$4
	CALL $727(($2 + [168]))
	
.LABEL $label$3
	CALL $727(($2 + [152]))
	
.LABEL $label$2
	CALL $727(($2 + [136]))
	
.LABEL $label$1
	CALL $727(($2 + [120]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $168(*($1), ($3 + [8]))
	CALL $306(*($1), ($3 + [32]))
	$2 = ($3 + [48])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	$2 = ($3 + [49])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$4) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	CALL $184(*($1), ($3 + [52]))
	CALL $306(*($1), ($3 + [64]))
	CALL $306(*($1), ($3 + [80]))
}

void .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [320])
	$global$0 = $2
	*(($3 = (($2 + [136]) + [8]))) = *(($1 + [16]))
	*(($4 = (($2 + [136]) + [16]))) = *(($1 + [24]))
	*(($5 = (($2 + [120]) + [8]))) = *(($1 + [40]))
	*($2 + [136]) = *($1 + [8])
	*($2 + [120]) = *($1 + [32])
	$6 = *($1)
	$7 = *($1 + [48])
	$8 = *($1 + [49])
	$9 = CALL $709(($2 + [104]), ($1 + [52]))
	*(($10 = (($2 + [88]) + [8]))) = *(($1 + [72]))
	*(($11 = (($2 + [72]) + [8]))) = *(($1 + [88]))
	*($2 + [88]) = *($1 + [64])
	*($2 + [72]) = *($1 + [80])
	*((($2 + [216]) + [8])) = *($11)
	*((($2 + [200]) + [8])) = *($10)
	*((($2 + [184]) + [8])) = *($5)
	*((($2 + [160]) + [8])) = *($3)
	*((($2 + [160]) + [16])) = *($4)
	*($2 + [216]) = *($2 + [72])
	*($2 + [200]) = *($2 + [88])
	*($2 + [184]) = *($2 + [120])
	*($2 + [160]) = *($2 + [136])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($2 + [296]) + [16]))) = *((($2 + [160]) + [16]))
	*(($5 = (($2 + [296]) + [8]))) = *((($2 + [160]) + [8]))
	*(($10 = (($2 + [280]) + [8]))) = *((($2 + [184]) + [8]))
	*($2 + [296]) = *($2 + [160])
	*($2 + [280]) = *($2 + [184])
	$3 = CALL $709(($2 + [264]), $9)
	*(($11 = (($2 + [248]) + [8]))) = *((($2 + [200]) + [8]))
	*(($12 = (($2 + [232]) + [8]))) = *((($2 + [216]) + [8]))
	*((($2 + [48]) + [8])) = *($5)
	*((($2 + [48]) + [16])) = *($4)
	*((($2 + [32]) + [8])) = *($10)
	*($2 + [248]) = *($2 + [200])
	*($2 + [232]) = *($2 + [216])
	*($2 + [48]) = *($2 + [296])
	*($2 + [32]) = *($2 + [280])
	*((($2 + [16]) + [8])) = *($11)
	*(($2 + [8])) = *($12)
	*($2 + [16]) = *($2 + [248])
	*($2) = *($2 + [232])
	CALL void $0((int_32 $6), (int_64 ($2 + [48])), (int_32 ($2 + [32])), (int_32 ($7 & [255])), (int_32 ($8 & [255])), (int_32 $3), (int_32 ($2 + [16])), (int_32 $2), (int_32 $1))
	if ( ((*($2 + [264]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($3 + [8]))
	
.LABEL $label$2
	if ( ((*($9) & [1]) == 0) ){ goto $label$3 }
	CALL _ZdlPv(*($9 + [8]))
	
.LABEL $label$3
	$global$0 = ($2 + [320])
}

void .FUNC $206 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	$4 = ($global$0 - [16])
	$global$0 = $4
	$5 = *(($1 + [28]))
	if ( ((int_32)$5 == (int_32)*($1 + [24])) ){ goto $label$6 }
	$5 = *(($5 + [-24]))
	if ( ((int_32)*($5 + [64]) == (int_32)$1) ){ goto $label$7 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$7
	if ( $5 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)-7297072577464238080, (int_64)-7297072577464238080)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $112($1, $5)
	if ( ((int_32)*($5 + [64]) == (int_32)$1) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	*($0) = *($5)
	$2 = *(($5 + [8]))
	$6 = *(($5 + [16]))
	$7 = *(($5 + [24]))
	$8 = *(($5 + [32]))
	$9 = *(($5 + [40]))
	*(($0 + [52])) = (int_64)0
	*(($0 + [40])) = $9
	*(($0 + [32])) = $8
	*(($0 + [24])) = $7
	*(($0 + [16])) = $6
	*(($0 + [8])) = $2
	*($0 + [48]) = [0]
	$1 = (*(($5 + [52])) - *($5 + [48]))
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = int_32($1 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$2 }
	$1 = CALL _Znwj($1)
	*(($0 + [48])) = $1
	*(($0 + [56])) = ($1 + ($3 << [3]))
	*(($0 = ($0 + [52]))) = $1
	$3 = *(($5 + [48]))
	$5 = (*(($5 + [52])) - $3)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($1, $3, $5)
	*($0) = (*($0) + $5)
	goto $label$3 
	
.LABEL $label$4
	*($4 + [8]) = $3
	CALL $507($4, $1, $2, ($4 + [8]))
	$5 = *($4 + [4])
	*($0) = *($5)
	$2 = *(($5 + [8]))
	$6 = *(($5 + [16]))
	$7 = *(($5 + [24]))
	$8 = *(($5 + [32]))
	$9 = *(($5 + [40]))
	*(($0 + [52])) = (int_64)0
	*(($0 + [40])) = $9
	*(($0 + [32])) = $8
	*(($0 + [24])) = $7
	*(($0 + [16])) = $6
	*(($0 + [8])) = $2
	*($0 + [48]) = [0]
	$1 = (*(($5 + [52])) - *($5 + [48]))
	if ( ($1 == 0) ){ goto $label$3 }
	$3 = int_32($1 >> [3])
	if ( ((uint_32)$3 >= (uint_32)[536870912]) ){ goto $label$1 }
	$1 = CALL _Znwj($1)
	*(($0 + [48])) = $1
	*(($0 + [56])) = ($1 + ($3 << [3]))
	*(($0 = ($0 + [52]))) = $1
	$3 = *(($5 + [48]))
	$5 = (*(($5 + [52])) - $3)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($1, $3, $5)
	*($0) = (*($0) + $5)
	
.LABEL $label$3
	$global$0 = ($4 + [16])
	return (unreachable)
	
.LABEL $label$2
	CALL $727(($0 + [48]))
	
.LABEL $label$1
	CALL $727(($0 + [48]))
	(unreachable)
}

void .FUNC $207 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [64]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)6138621011882409984, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $238($1, $5)
	if ( ((int_32)*($5 + [64]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	CALL $168(*($1), ($4 + [16]))
	$3 = ($4 + [40])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)*($0 + [8]) != (int_32)$5) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [1])
	*(($0 = ($0 + [4]))) = (*($0) + [1])
	*($2 + [8]) = $4
	CALL $535(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0)
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((uint_32)(*($3 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $4, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	$3 = *($0)
	CALL $168(*($1), ($3 + [8]))
	CALL $306(*($1), ($3 + [32]))
	$2 = ($3 + [48])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$0 = ($3 + [56])
	$3 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)*($1 + [8]) != (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$3 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [1])
	*(($1 = ($1 + [4]))) = (*($1) + [1])
}

void .FUNC $308 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [48])
	$global$0 = $2
	CALL $221($1)
	if ( (int_64)(*($1 + [16]) == 0) ){ goto $label$2 }
	CALL $260(*($1))
	*($2 + [32]) = [8414]
	*($2 + [36]) = CALL $743([8414])
	*($2 + [16]) = *($2 + [32])
	$3 = CALL $10(($2 + [40]), ($2 + [16]))
	if ( ((int_64)*($1 + [8]) == (int_64)*($3)) ){ goto $label$1 }
	*($2 + [24]) = [8561]
	*($2 + [28]) = CALL $743([8561])
	*($2 + [8]) = *($2 + [24])
	$3 = CALL $10(($2 + [40]), ($2 + [8]))
	if ( ((int_64)*(($1 + [8])) == (int_64)*($3)) ){ goto $label$1 }
	CALL eosio_assert([0], [18588])
	goto $label$1 
	
.LABEL $label$2
	*($1 + [8]) = (int_64)0
	*($1) = (int_64)0
	*(($1 + [16])) = (int_64)0
	
.LABEL $label$1
	$global$0 = ($2 + [48])
}

int_32 .FUNC $38 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [240])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	*($4 + [232]) = [0]
	CALL eosio_assert([0], [28806])
	$3 = ($4 + [232])
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	*($4 + [232]) = [0]
	$3 = ($4 + [232])
	
.LABEL $label$1
	CALL memcpy($3, $2, [1])
	$3 = ($2 + $7)
	*(($4 + [8])) = $3
	*($4 + [20]) = ($2 + [1])
	*($4 + [16]) = $2
	*($4 + [24]) = $3
	*($4) = *($4 + [16])
	$8 = CALL $20(($4 + [32]), $0, $1, $4)
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	$9 = *($4 + [232])
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	CALL void $3((int_32 ($9 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$6 }
	CALL $749($2)
	
.LABEL $label$6
	CALL $24($8)
	$global$0 = ($4 + [240])
	return [1]
}

void .FUNC $39 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$2 = ($global$0 - [240])
	$global$0 = $2
	*($2 + [152]) = [8561]
	*($2 + [156]) = CALL $743([8561])
	*($2 + [64]) = *($2 + [152])
	CALL require_auth(*(CALL $10(($2 + [160]), ($2 + [64]))))
	CALL $220(($2 + [136]), $1)
	$4 = *($2 + [140])
	$3 = *($2 + [136])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$3 }
	$5 = (($2 + [72]) | [1])
	$6 = [0]
	
.LOOP $label$4:
	$7 = ($3 + [8])
	if ( ((int_64)*($7) < (int_64)1) ){ goto $label$5 }
	*($2 + [120]) = [8617]
	*($2 + [124]) = CALL $743([8617])
	*($2 + [56]) = *($2 + [120])
	CALL $10(($2 + [128]), ($2 + [56]))
	*($2 + [104]) = [8617]
	*($2 + [108]) = CALL $743([8617])
	*($2 + [48]) = *($2 + [104])
	CALL $10(($2 + [112]), ($2 + [48]))
	$8 = *($7)
	$9 = *(($3 + [16]))
	*(($10 = (($2 + [72]) + [8]))) = [0]
	*(($11 = (($2 + [88]) + [8]))) = $9
	*($2 + [72]) = (int_64)0
	*($2 + [88]) = $8
	$8 = *($2 + [112])
	$7 = CALL $743([22405])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$8 }
	*($2 + [72]) = ($7 << [1])
	$6 = $5
	if ( $7 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$12 = (($7 + [16]) & [-16])
	$6 = CALL _Znwj($12)
	*($10) = $6
	*($2 + [72]) = ($12 | [1])
	*($2 + [76]) = $7
	
.LABEL $label$7
	CALL memcpy($6, [22405], $7)
	
.LABEL $label$6
	*(($6 + $7)) = [0]
	$9 = *($3)
	$13 = *($2 + [128])
	*(($7 = (($2 + [216]) + [8]))) = (int_64)0
	*(($6 = (($2 + [216]) + [16]))) = $1
	$14 = *($11)
	*(($12 = (($2 + [200]) + [8]))) = $14
	*((($2 + [168]) + [8])) = $14
	*($2 + [216]) = $8
	$8 = *($2 + [88])
	*($2 + [200]) = $8
	*($2 + [168]) = $8
	$11 = CALL $709(($2 + [184]), ($2 + [72]))
	*((($2 + [24]) + [16])) = *($6)
	*((($2 + [24]) + [8])) = *($7)
	*((($2 + [8]) + [8])) = *($12)
	*($2 + [24]) = *($2 + [216])
	*($2 + [8]) = *($2 + [200])
	CALL $9($13, ($2 + [24]), ($2 + [8]), $11, $9)
	if ( ((*($2 + [184]) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*((($2 + [184]) + [8])))
	
.LABEL $label$9
	$6 = [1]
	if ( ((*($2 + [72]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*($10))
	
.LABEL $label$5
	$3 = ($3 + [24])
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$4 }
	if ( ($6 & [1]) ){ goto $label$2 }
	
.LABEL $label$3
	CALL eosio_assert([0], [22446])
	
.LABEL $label$2
	$3 = *($2 + [136])
	if ( ($3 == 0) ){ goto $label$10 }
	*($2 + [140]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$10
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($2 + [72]))
}

void .FUNC $338 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [160])
	$global$0 = $3
	if ( *($1 + [4]) ){ goto $label$1 }
	$4 = *($0 + [12])
	*(($1 = *($0))) = (int_64))(*($1) - *(*($0 + [4])))
	*($3 + [64]) = [8617]
	*($3 + [68]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [64])
	$5 = *(CALL $10(($3 + [72]), ($3 + [32])))
	$6 = *($0 + [8])
	if ( ((int_64)*($2) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$2
	*(($1 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = $2
	*($1) = CALL $651($2)
	$6 = *($6 + [4])
	*($1 + [8]) = *($6)
	*($1 + [24]) = *(($6 + [16]))
	*($1 + [16]) = *(($6 + [8]))
	*($3 + [120]) = (($3 + [80]) + [32])
	*($3 + [112]) = ($3 + [80])
	CALL memcpy(($3 + [80]), $1, [8])
	*($3 + [116]) = (($3 + [80]) | [8])
	$6 = ($1 + [8])
	CALL $156(($3 + [112]), $6)
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)8800273824458211328, $5, $7, ($3 + [80]), [32])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$9 = *($1)
	$10 = *(($1 + [16]))
	$11 = *($6)
	$7 = *(($1 + [24]))
	if ( ((int_64)((int_64)$7 | (int_64)$11) != (int_64)0) ){ goto $label$5 }
	$7 = (int_64)0
	if ( (int_64)($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = CALL _Znwj([24])) + [8]) = $10
	*($6) = $11
	*($6 + [16]) = $7
	CALL sha256($6, [24], ($3 + [128]))
	$7 = *($3 + [128])
	if ( ($6 == 0) ){ goto $label$4 }
	CALL _ZdlPv($6)
	
.LABEL $label$4
	*($3 + [128]) = $7
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)8800273824458211328, $5, $9, ($3 + [128]))
	*($3 + [80]) = $1
	$7 = *($1)
	*($3 + [128]) = $7
	$12 = *(($1 + [36]))
	*($3 + [112]) = $12
	$13 = ($2 + [28])
	$6 = *($13)
	if ( ((uint_32)$6 >= (uint_32)*(($2 + [32]))) ){ goto $label$7 }
	*($6 + [8]) = $7
	*($6 + [16]) = $12
	*($3 + [80]) = [0]
	*($6) = $1
	*($13) = ($6 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $652(($2 + [24]), ($3 + [80]), ($3 + [128]), ($3 + [112]))
	
.LABEL $label$6
	$1 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	CALL $325(($3 + [80]), $4)
	*((($3 + [128]) + [16])) = *((($3 + [80]) + [16]))
	*($3 + [136]) = *($3 + [88])
	*($3 + [148]) = *($3 + [100])
	*($3 + [128]) = ((int_64)*($3 + [80]) + (int_64)1)
	*($3 + [112]) = [8617]
	*($3 + [116]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [112])
	CALL $326($4, ($3 + [128]), *(CALL $10(($3 + [80]), ($3 + [24]))))
	$1 = *($3 + [136])
	if ( ($1 == 0) ){ goto $label$9 }
	*(($3 + [140])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *(*(($0 + [8])) + [4])
	$7 = *($1)
	$5 = *(($1 + [16]))
	$10 = *(($1 + [8]))
	*(($3 + [8])) = $10
	*(($3 + [16])) = $5
	*((($3 + [40]) + [8])) = $10
	*((($3 + [40]) + [16])) = $5
	*($3 + [40]) = $7
	*($3) = $7
	CALL $478($3, [0], $3)
	
.LABEL $label$1
	$global$0 = ($3 + [160])
}

void .FUNC $339 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = *($2)
	$4 = [0]
	$5 = *($1)
	$5 = CALL db_idx64_lowerbound(*($5), *($5 + [8]), (int_64)8800195549769760768, ($3 + [8]), ($3 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	CALL $340($3, *($1), *($3 + [16]))
	*((($4 = *($3 + [4])) + [40])) = $5
	
.LABEL $label$1
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = (int_64)0
	$7 = *(($4 + [16]))
	$8 = *($2)
	$10 = *($4 + [8])
	$9 = *(($4 + [24]))
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$6 }
	$9 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($2 = CALL _Znwj([24])) + [8]) = $7
	*($2) = $10
	*($2 + [16]) = $9
	CALL sha256($2, [24], ($3 + [16]))
	$6 = *($3 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL _ZdlPv($2)
	
.LABEL $label$5
	*($0) = $1
	if ( ((int_64)$8 != (int_64)$6) ){ goto $label$3 }
	*(($0 + [4])) = $4
	goto $label$2 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
	goto $label$2 
	
.LABEL $label$3
	*(($0 + [4])) = [0]
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $336 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = *($2)
	$4 = [0]
	$5 = *($1)
	$5 = CALL db_idx64_lowerbound(*($5), *($5 + [8]), (int_64)8800273824458211328, ($3 + [8]), ($3 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	CALL $337($3, *($1), *($3 + [16]))
	*((($4 = *($3 + [4])) + [40])) = $5
	
.LABEL $label$1
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = (int_64)0
	$7 = *(($4 + [16]))
	$8 = *($2)
	$10 = *($4 + [8])
	$9 = *(($4 + [24]))
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$6 }
	$9 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($2 = CALL _Znwj([24])) + [8]) = $7
	*($2) = $10
	*($2 + [16]) = $9
	CALL sha256($2, [24], ($3 + [16]))
	$6 = *($3 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL _ZdlPv($2)
	
.LABEL $label$5
	*($0) = $1
	if ( ((int_64)$8 != (int_64)$6) ){ goto $label$3 }
	*(($0 + [4])) = $4
	goto $label$2 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
	goto $label$2 
	
.LABEL $label$3
	*(($0 + [4])) = [0]
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

int_32 .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	$3 = (*($2) + [8])
	*($2) = $3
	$2 = ($1 + [16])
	if ( ((int_32)(*($5) - $3) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $2, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	return $0
}

void .FUNC $334 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = *(($1 + [28]))
	$3 = *($1 + [24])
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	
.LOOP $label$3:
	$5 = ($4 + [-24])
	if ( ((int_64)*(*($5)) == (int_64)$2) ){ goto $label$2 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$1 }
	$5 = *(($4 + [-24]))
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$4 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$4
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$1
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)8800273824474988544, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$5 }
	$5 = CALL $444($1, $5)
	if ( ((int_32)*($5 + [32]) == (int_32)$1) ){ goto $label$6 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$6
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$5
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC $335 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [160])
	$global$0 = $3
	if ( *($1 + [4]) ){ goto $label$1 }
	$4 = *($0 + [12])
	*(($1 = *($0))) = (int_64))(*($1) - *(*($0 + [4])))
	*($3 + [64]) = [8617]
	*($3 + [68]) = CALL $743([8617])
	*($3 + [32]) = *($3 + [64])
	$5 = *(CALL $10(($3 + [72]), ($3 + [32])))
	$6 = *($0 + [8])
	if ( ((int_64)*($2) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29535])
	
.LABEL $label$2
	*(($1 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($1 + [8]) = (int_64)0
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = $2
	*($1) = CALL $653($2)
	$6 = *($6 + [4])
	*($1 + [8]) = *($6)
	*($1 + [24]) = *(($6 + [16]))
	*($1 + [16]) = *(($6 + [8]))
	*($3 + [120]) = (($3 + [80]) + [32])
	*($3 + [112]) = ($3 + [80])
	CALL memcpy(($3 + [80]), $1, [8])
	*($3 + [116]) = (($3 + [80]) | [8])
	$6 = ($1 + [8])
	CALL $156(($3 + [112]), $6)
	$7 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($2 + [8]), (int_64)8800273824474988544, $5, $7, ($3 + [80]), [32])
	if ( (uint_64)($7 <= *($2 + [16])) ){ goto $label$3 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$8 = *(($2 + [8]))
	$9 = *($1)
	$10 = *(($1 + [16]))
	$11 = *($6)
	$7 = *(($1 + [24]))
	if ( ((int_64)((int_64)$7 | (int_64)$11) != (int_64)0) ){ goto $label$5 }
	$7 = (int_64)0
	if ( (int_64)($10 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*(($6 = CALL _Znwj([24])) + [8]) = $10
	*($6) = $11
	*($6 + [16]) = $7
	CALL sha256($6, [24], ($3 + [128]))
	$7 = *($3 + [128])
	if ( ($6 == 0) ){ goto $label$4 }
	CALL _ZdlPv($6)
	
.LABEL $label$4
	*($3 + [128]) = $7
	*($1 + [40]) = CALL db_idx64_store($8, (int_64)8800273824474988544, $5, $9, ($3 + [128]))
	*($3 + [80]) = $1
	$7 = *($1)
	*($3 + [128]) = $7
	$12 = *(($1 + [36]))
	*($3 + [112]) = $12
	$13 = ($2 + [28])
	$6 = *($13)
	if ( ((uint_32)$6 >= (uint_32)*(($2 + [32]))) ){ goto $label$7 }
	*($6 + [8]) = $7
	*($6 + [16]) = $12
	*($3 + [80]) = [0]
	*($6) = $1
	*($13) = ($6 + [24])
	goto $label$6 
	
.LABEL $label$7
	CALL $654(($2 + [24]), ($3 + [80]), ($3 + [128]), ($3 + [112]))
	
.LABEL $label$6
	$1 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	CALL _ZdlPv($1)
	
.LABEL $label$8
	CALL $325(($3 + [80]), $4)
	*((($3 + [128]) + [16])) = *((($3 + [80]) + [16]))
	*($3 + [136]) = *($3 + [88])
	*($3 + [148]) = *($3 + [100])
	*($3 + [128]) = ((int_64)*($3 + [80]) + (int_64)1)
	*($3 + [112]) = [8617]
	*($3 + [116]) = CALL $743([8617])
	*($3 + [24]) = *($3 + [112])
	CALL $326($4, ($3 + [128]), *(CALL $10(($3 + [80]), ($3 + [24]))))
	$1 = *($3 + [136])
	if ( ($1 == 0) ){ goto $label$9 }
	*(($3 + [140])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$9
	$1 = *(*(($0 + [8])) + [4])
	$7 = *($1)
	$5 = *(($1 + [16]))
	$10 = *(($1 + [8]))
	*(($3 + [8])) = $10
	*(($3 + [16])) = $5
	*((($3 + [40]) + [8])) = $10
	*((($3 + [40]) + [16])) = $5
	*($3 + [40]) = $7
	*($3) = $7
	CALL $478($3, [0], $3)
	
.LABEL $label$1
	$global$0 = ($3 + [160])
}

void .FUNC $332 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_64 $11
	$4 = ($global$0 - [32])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [48]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29379])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29425])
	
.LABEL $label$2
	$6 = (int_64)0
	$7 = *($1 + [8])
	$9 = *($1)
	$8 = *($1 + [16])
	if ( ((int_64)((int_64)$8 | (int_64)$9) != (int_64)0) ){ goto $label$4 }
	$8 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	*(($10 = CALL _Znwj([24])) + [8]) = $7
	*($10) = $9
	*($10 + [16]) = $8
	CALL sha256($10, [24], $5)
	$6 = *($5)
	if ( ($10 == 0) ){ goto $label$3 }
	CALL _ZdlPv($10)
	
.LABEL $label$3
	$10 = *(*($3))
	if ( ((int_32)$10 == (int_32)[2]) ){ goto $label$8 }
	if ( ((int_32)$10 == (int_32)[1]) ){ goto $label$7 }
	if ( $10 ){ goto $label$6 }
	*($1 + [24]) = *(*($3 + [4]))
	goto $label$5 
	
.LABEL $label$8
	*($1 + [40]) = *(*($3 + [4]))
	goto $label$5 
	
.LABEL $label$7
	*($1 + [32]) = *(*($3 + [4]))
	goto $label$5 
	
.LABEL $label$6
	CALL eosio_assert([0], [30009])
	
.LABEL $label$5
	$7 = (int_64)0
	$8 = *(($1 + [8]))
	$11 = *($1)
	$9 = *(($1 + [16]))
	if ( ((int_64)((int_64)$9 | (int_64)$11) != (int_64)0) ){ goto $label$10 }
	$9 = (int_64)0
	if ( (int_64)($8 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	*(($10 = CALL _Znwj([24])) + [8]) = $8
	*($10) = $11
	*($10 + [16]) = $9
	CALL sha256($10, [24], $5)
	$7 = *($5)
	if ( ($10 == 0) ){ goto $label$9 }
	CALL _ZdlPv($10)
	
.LABEL $label$9
	if ( ((int_64)$6 == (int_64)$7) ){ goto $label$11 }
	CALL eosio_assert([0], [29476])
	
.LABEL $label$11
	$4 = $4
	$10 = ($4 + [-48])
	$global$0 = $10
	*($5 + [4]) = $10
	*($5) = $10
	*($5 + [8]) = $4
	CALL $319($5, $1)
	CALL db_update_i64(*($1 + [52]), $2, $10, [48])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$12 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$global$0 = ($5 + [32])
}

void .FUNC $333 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [16]) = (int_64)0
	*($3 + [8]) = *($2)
	$4 = [0]
	$5 = *($1)
	$5 = CALL db_idx64_lowerbound(*($5), *($5 + [8]), (int_64)8800273824474988544, ($3 + [8]), ($3 + [16]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	CALL $334($3, *($1), *($3 + [16]))
	*((($4 = *($3 + [4])) + [40])) = $5
	
.LABEL $label$1
	if ( ($4 == 0) ){ goto $label$4 }
	$6 = (int_64)0
	$7 = *(($4 + [16]))
	$8 = *($2)
	$10 = *($4 + [8])
	$9 = *(($4 + [24]))
	if ( ((int_64)((int_64)$9 | (int_64)$10) != (int_64)0) ){ goto $label$6 }
	$9 = (int_64)0
	if ( (int_64)($7 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	*(($2 = CALL _Znwj([24])) + [8]) = $7
	*($2) = $10
	*($2 + [16]) = $9
	CALL sha256($2, [24], ($3 + [16]))
	$6 = *($3 + [16])
	if ( ($2 == 0) ){ goto $label$5 }
	CALL _ZdlPv($2)
	
.LABEL $label$5
	*($0) = $1
	if ( ((int_64)$8 != (int_64)$6) ){ goto $label$3 }
	*(($0 + [4])) = $4
	goto $label$2 
	
.LABEL $label$4
	*($0 + [4]) = [0]
	*($0) = $1
	goto $label$2 
	
.LABEL $label$3
	*(($0 + [4])) = [0]
	
.LABEL $label$2
	$global$0 = ($3 + [48])
}

void .FUNC $330 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)8800535352911593472, (int_64)8800535352911593472)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $482($0, $4)
	if ( ((int_32)*($4 + [24]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $487($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $488($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = [32]
	$4 = ($1 + [32])
	$6 = *($1 + [32])
	$5 = *(($1 + [36]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 $7)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	$3 = ( $3 ? ($7 + $3) : ((int_32)$6 == (int_32)$5) )
	$5 = ($1 + [44])
	$7 = *($1 + [44])
	$6 = *(($1 + [48]))
	$9 = ($6 - $7)
	$8 = (CASTING uint_64)(uint_32 int_32($9 >> [4]))
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$3 }
	$3 = (($9 & [-16]) + $3)
	
.LABEL $label$3
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $11($0, $3)
	$6 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$6 = [0]
	$3 = [0]
	
.LABEL $label$4
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $6
	CALL $156($2, $1)
	$1 = ($1 + [24])
	$3 = *($2 + [4])
	if ( ((int_32)(*($2 + [8]) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$3 = *($2 + [4])
	
.LABEL $label$6
	CALL memcpy($3, $1, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $522($2, $4)
	CALL $230($2, $5)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $440 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($6)
	$7 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($3 + [36])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $168(($3 + [32]), $8)
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $659(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $749($4)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $441 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($6)
	$7 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($3 + [36])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $168(($3 + [32]), $8)
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $665(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $749($4)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $442 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($6)
	$7 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($3 + [36])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $168(($3 + [32]), $8)
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $662(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $749($4)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $443 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($6)
	$7 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($3 + [36])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $168(($3 + [32]), $8)
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $668(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $749($4)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $444 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$5 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$6 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$4 = CALL $746($6)
	$7 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL _Znwj([48])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = $0
	$8 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [28806])
	$2 = *($3 + [36])
	
.LABEL $label$8
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $168(($3 + [32]), $8)
	*($5 + [40]) = [-1]
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $654(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $749($4)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	CALL _ZdlPv($1)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $445 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL _Znwj(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL _ZdlPv($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $446 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = ((int_32)($2 - $3) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$6 = [178956970]
	$7 = ((int_32)(*($0 + [8]) - $3) / (int_32)[24])
	if ( ((uint_32)$7 > (uint_32)[89478484]) ){ goto $label$4 }
	$6 = ($7 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$6 * (int_32)[24]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	*(($4 = ($5 + ((int_32)$4 * (int_32)[24])))) = *($1)
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 + ((int_32)((int_32)$1 / (int_32)[-24]) * (int_32)[24]))
	$6 = ($5 + ((int_32)$6 * (int_32)[24]))
	$4 = ($4 + [24])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$5
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$6 }
	CALL _ZdlPv($3)
	
.LABEL $label$6
	(unreachable)
}

void .FUNC $447 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $669($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $448 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1)
	$4 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ($4 + [25])
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$3 = ($3 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = ($1 + [44])
	$7 = *($1 + [44])
	$6 = *(($1 + [48]))
	$8 = ($6 - $7)
	$5 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$2:
	$3 = ($3 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$3 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$3
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $11($0, $3)
	$6 = *(($0 + [4]))
	$3 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$6 = [0]
	$3 = [0]
	
.LABEL $label$4
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $6
	CALL $479($2, $1)
	CALL $156($2, ($1 + [16]))
	$1 = ($1 + [40])
	$3 = *($2 + [4])
	if ( ((int_32)(*($2 + [8]) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$3 = *($2 + [4])
	
.LABEL $label$6
	CALL memcpy($3, $1, [1])
	*($2 + [4]) = (*($2 + [4]) + [1])
	CALL $230($2, $4)
	$global$0 = ($2 + [16])
}

void .FUNC $449 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$6 = ($global$0 - [32])
	$global$0 = $6
	*(($6 + [24])) = [0]
	*($6 + [16]) = (int_64)0
	$7 = CALL $743($1)
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$4 }
	*($6 + [16]) = ($7 << [1])
	$8 = (($6 + [16]) | [1])
	if ( $7 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$9 = (($7 + [16]) & [-16])
	$8 = CALL _Znwj($9)
	*($6 + [16]) = ($9 | [1])
	*($6 + [24]) = $8
	*($6 + [20]) = $7
	
.LABEL $label$3
	CALL memcpy($8, $1, $7)
	
.LABEL $label$2
	*(($8 + $7)) = [0]
	CALL $671($6, $2, $3, $4, $5)
	$7 = *($6)
	$8 = ($7 & [1])
	$7 = CALL $716(($6 + [16]), ( *($6 + [8]) ? ($6 | [1]) : $8 ), ( *($6 + [4]) ? uint_32($7 >> [1]) : $8 ))
	$10 = *($7)
	*($7) = (int_64)0
	*($0) = $10
	$7 = ($7 + [8])
	*(($0 + [8])) = *($7)
	*($7) = [0]
	if ( ((*($6) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($6 + [8])))
	
.LABEL $label$5
	if ( ((*($6 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($6 + [24]))
	
.LABEL $label$6
	$global$0 = ($6 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($6 + [16]))
}

void .FUNC $118 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *(($0 + [28]))
	if ( ((int_32)$4 == (int_32)*($0 + [24])) ){ goto $label$4 }
	$4 = *(($4 + [-24]))
	if ( ((int_32)*($4 + [40]) == (int_32)$0) ){ goto $label$5 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$5
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = CALL db_find_i64(*($0), *($0 + [8]), (int_64)5445039531761205248, (int_64)5445039531761205248)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$2 }
	$4 = CALL $117($0, $4)
	if ( ((int_32)*($4 + [40]) == (int_32)$0) ){ goto $label$3 }
	CALL eosio_assert([0], [28728])
	
.LABEL $label$3
	*($3) = $1
	CALL $499($0, $4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*($3 + [8]) = $1
	CALL $500($3, $0, $2, ($3 + [8]))
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$3 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	$2 = *(($5 + [-24]))
	goto $label$1 
	
.LABEL $label$2
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$7 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$6 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$6 = [0]
	goto $label$5 
	
.LABEL $label$7
	CALL eosio_assert([0], [28779])
	
.LABEL $label$6
	$5 = CALL $746($4)
	$6 = [1]
	
.LABEL $label$5
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL _Znwj([40])
	$2 = CALL $584($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	*($3 + [8]) = (int_64)-5915276457178488320
	$7 = *($1 + [28])
	*($3 + [4]) = $7
	$8 = ($0 + [28])
	$4 = *($8)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($4 + [8]) = (int_64)-5915276457178488320
	*($4 + [16]) = $7
	*($3 + [24]) = [0]
	*($4) = $1
	*($8) = ($4 + [24])
	if ( $6 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $585(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($6 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $749($5)
	
.LABEL $label$8
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$1 }
	$1 = *($5 + [8])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($5 + [12])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	CALL _ZdlPv($5)
	
.LABEL $label$1
	$global$0 = ($3 + [48])
	return $2
}

void .FUNC $686 (int_32 $0, int_32 $1)
{
	*($1) = [30264]
}

void .FUNC $687 (int_32 $0)
{
}

void .FUNC $684 (int_32 $0)
{
	CALL _ZdlPv($0)
}

int_32 .FUNC $685 (int_32 $0)
{
	int_32 $1
	*(($1 = CALL _Znwj([8]))) = [30264]
	return $1
}

void .FUNC $299 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$5 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$4
	CALL memcpy($5, $1, $4)
	
.LABEL $label$3
	*(($5 + $4)) = [0]
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$2 = *($2)
	$4 = CALL $743($2)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$8 }
	*($3) = ($4 << [1])
	$1 = ($3 | [1])
	$5 = $1
	if ( $4 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$1 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($1)
	*($3) = ($1 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	$1 = ($3 | [1])
	
.LABEL $label$7
	CALL memcpy($5, $2, $4)
	
.LABEL $label$6
	*(($5 + $4)) = [0]
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? $1 : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$9 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$9
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$10 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$10
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $708(($3 + [16]))
	
.LABEL $label$1
	CALL $708($3)
	(unreachable)
}

int_32 .FUNC $298 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = ($global$0 - [16])
	$global$0 = $1
	*(($1 + [8])) = [0]
	*($1) = (int_64)0
	$2 = CALL $743($0)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($1) = ($2 << [1])
	$3 = ($1 | [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$3 = CALL _Znwj($4)
	*($1) = ($4 | [1])
	*($1 + [8]) = $3
	*($1 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($3, $0, $2)
	
.LABEL $label$2
	*(($3 + $2)) = [0]
	if ( (*($1) & [1]) ){ goto $label$6 }
	$2 = ($1 | [1])
	goto $label$5 
	
.LABEL $label$6
	$2 = *($1 + [8])
	CALL _ZdlPv($2)
	
.LABEL $label$5
	$global$0 = ($1 + [16])
	return $2
	
.LABEL $label$1
	CALL $708($1)
	return (unreachable)
}

int_32 .FUNC $680 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	CALL $553($0, ($1 + [36]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	*(($2 = ($0 + [4]))) = (*($2) + [8])
	$3 = ($1 + [32])
	$2 = *($0 + [4])
	$0 = CALL $230(CALL $230($0, ($1 + [8])), ($1 + [20]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $3, [1])
	return *(($2 = ($0 + [4]))) = (*($2) + [1])
}

void .FUNC $681 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL $723(($4 + [16]), *($1))
	CALL $682($4, $2, $3)
	$2 = *($4)
	$3 = ($2 & [1])
	$2 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $3 ), ( *($4 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$1
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$2
	$global$0 = ($4 + [32])
}

void .FUNC $527 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$5 = ($global$0 - [80])
	$global$0 = $5
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$7 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($7) + $0))
	
.LABEL $label$1
	*((($5 + [56]) + [16])) = *(($1 + [16]))
	*((($5 + [56]) + [8])) = *(($1 + [8]))
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = [0]
	*($5 + [56]) = *($1)
	$1 = (*($3 + [4]) - *($3))
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = CALL _Znwj($1)
	*(($5 + [48])) = ($6 + $1)
	*($5 + [40]) = $6
	*($5 + [44]) = $6
	$1 = *($3)
	$3 = (*(($3 + [4])) - $1)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($6, $1, $3)
	*($5 + [44]) = ($6 + $3)
	
.LABEL $label$4
	*($5 + [32]) = [0]
	*($5 + [24]) = (int_64)0
	$3 = (*($4 + [4]) - *($4))
	if ( ($3 == 0) ){ goto $label$5 }
	$1 = int_32($3 >> [4])
	if ( ((uint_32)$1 >= (uint_32)[268435456]) ){ goto $label$2 }
	$3 = CALL _Znwj($3)
	*(($5 + [32])) = ($3 + ($1 << [4]))
	*($5 + [24]) = $3
	*($5 + [28]) = $3
	$1 = *($4)
	$4 = (*(($4 + [4])) - $1)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($3, $1, $4)
	*($5 + [28]) = ($3 + $4)
	
.LABEL $label$5
	*(($5 + [16])) = *((($5 + [56]) + [16]))
	*(($5 + [8])) = *((($5 + [56]) + [8]))
	*($5) = *($5 + [56])
	CALL void $7((int_32 $5), (int_32 $2), (int_64 ($5 + [40])), (int_32 ($5 + [24])), (int_32 $0))
	$3 = *($5 + [24])
	if ( ($3 == 0) ){ goto $label$6 }
	*($5 + [28]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$6
	$3 = *($5 + [40])
	if ( ($3 == 0) ){ goto $label$7 }
	*($5 + [44]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$global$0 = ($5 + [80])
	return (unreachable)
	
.LABEL $label$3
	CALL $727(($5 + [40]))
	
.LABEL $label$2
	CALL $727(($5 + [24]))
	(unreachable)
}

void .FUNC $526 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = ($global$0 - [160])
	$global$0 = $6
	$0 = *($0 + [4])
	$7 = *($0 + [4])
	$8 = (*($0) + int_32($7 >> [1]))
	$0 = *($0)
	if ( (($7 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($8) + $0))
	
.LABEL $label$1
	*((($6 + [136]) + [16])) = *(($1 + [16]))
	*((($6 + [136]) + [8])) = *(($1 + [8]))
	*((($6 + [96]) + [16])) = *(($2 + [16]))
	*((($6 + [96]) + [24])) = *(($2 + [24]))
	*($6 + [80]) = (int_64)0
	*($6 + [88]) = [0]
	*($6 + [136]) = *($1)
	*($6 + [96]) = *($2)
	*($6 + [104]) = *(($2 + [8]))
	$2 = (*($4 + [4]) - *($4))
	if ( ($2 == 0) ){ goto $label$4 }
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$3 }
	$1 = CALL _Znwj($2)
	*(($6 + [88])) = ($1 + $2)
	*($6 + [80]) = $1
	*($6 + [84]) = $1
	$4 = *($4)
	$2 = (*(($4 + [4])) - $4)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($1, $4, $2)
	*($6 + [84]) = ($1 + $2)
	
.LABEL $label$4
	*($6 + [72]) = [0]
	*($6 + [64]) = (int_64)0
	$2 = (*($5 + [4]) - *($5))
	if ( ($2 == 0) ){ goto $label$5 }
	$4 = int_32($2 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	$2 = CALL _Znwj($2)
	*(($6 + [72])) = ($2 + ($4 << [4]))
	*($6 + [64]) = $2
	*($6 + [68]) = $2
	$5 = *($5)
	$4 = (*(($5 + [4])) - $5)
	if ( ((int_32)$4 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($2, $5, $4)
	*($6 + [68]) = ($2 + $4)
	
.LABEL $label$5
	*((($6 + [40]) + [16])) = *((($6 + [136]) + [16]))
	*((($6 + [40]) + [8])) = *((($6 + [136]) + [8]))
	*(($6 + [16])) = *((($6 + [96]) + [16]))
	*(($6 + [24])) = *((($6 + [96]) + [24]))
	*($6 + [40]) = *($6 + [136])
	*($6) = *($6 + [96])
	*($6 + [8]) = *($6 + [104])
	CALL void $8((int_32 ($6 + [40])), (int_32 $6), (int_32 $3), (int_64 ($6 + [80])), (int_32 ($6 + [64])), (int_32 $0))
	$2 = *($6 + [64])
	if ( ($2 == 0) ){ goto $label$6 }
	*($6 + [68]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	$2 = *($6 + [80])
	if ( ($2 == 0) ){ goto $label$7 }
	*($6 + [84]) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$7
	$global$0 = ($6 + [160])
	return (unreachable)
	
.LABEL $label$3
	CALL $727(($6 + [80]))
	
.LABEL $label$2
	CALL $727(($6 + [64]))
	(unreachable)
}

void .FUNC $525 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	$7 = ($global$0 - [160])
	$global$0 = $7
	$0 = *($0 + [4])
	$8 = *($0 + [4])
	$9 = (*($0) + int_32($8 >> [1]))
	$0 = *($0)
	if ( (($8 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($9) + $0))
	
.LABEL $label$1
	*((($7 + [136]) + [16])) = *(($1 + [16]))
	*((($7 + [136]) + [8])) = *(($1 + [8]))
	*((($7 + [96]) + [16])) = *(($4 + [16]))
	*((($7 + [96]) + [24])) = *(($4 + [24]))
	*($7 + [80]) = (int_64)0
	*($7 + [88]) = [0]
	*($7 + [136]) = *($1)
	*($7 + [96]) = *($4)
	*($7 + [104]) = *(($4 + [8]))
	$4 = (*($5 + [4]) - *($5))
	if ( ($4 == 0) ){ goto $label$4 }
	$1 = int_32($4 >> [3])
	if ( ((uint_32)$1 >= (uint_32)[536870912]) ){ goto $label$3 }
	$4 = CALL _Znwj($4)
	*(($7 + [88])) = ($4 + ($1 << [3]))
	*($7 + [80]) = $4
	*($7 + [84]) = $4
	$1 = *($5)
	$5 = (*(($5 + [4])) - $1)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($4, $1, $5)
	*($7 + [84]) = ($4 + $5)
	
.LABEL $label$4
	*($7 + [72]) = [0]
	*($7 + [64]) = (int_64)0
	$4 = (*($6 + [4]) - *($6))
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = int_32($4 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$2 }
	$4 = CALL _Znwj($4)
	*(($7 + [72])) = ($4 + ($5 << [4]))
	*($7 + [64]) = $4
	*($7 + [68]) = $4
	$6 = *($6)
	$5 = (*(($6 + [4])) - $6)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$5 }
	CALL memcpy($4, $6, $5)
	*($7 + [68]) = ($4 + $5)
	
.LABEL $label$5
	*((($7 + [40]) + [16])) = *((($7 + [136]) + [16]))
	*((($7 + [40]) + [8])) = *((($7 + [136]) + [8]))
	*(($7 + [16])) = *((($7 + [96]) + [16]))
	*(($7 + [24])) = *((($7 + [96]) + [24]))
	*($7 + [40]) = *($7 + [136])
	*($7) = *($7 + [96])
	*($7 + [8]) = *($7 + [104])
	CALL void $9((int_32 ($7 + [40])), (int_32 $2), (int_32 $3), (int_64 $7), (int_32 ($7 + [80])), (int_32 ($7 + [64])), (int_32 $0))
	$4 = *($7 + [64])
	if ( ($4 == 0) ){ goto $label$6 }
	*($7 + [68]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$6
	$4 = *($7 + [80])
	if ( ($4 == 0) ){ goto $label$7 }
	*($7 + [84]) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$7
	$global$0 = ($7 + [160])
	return (unreachable)
	
.LABEL $label$3
	CALL $727(($7 + [80]))
	
.LABEL $label$2
	CALL $727(($7 + [64]))
	(unreachable)
}

void .FUNC $524 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [3]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [3])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [3]) > (uint_32)[268435454]) ){ goto $label$6 }
	$6 = int_32($2 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL _Znwj(($6 << [3]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [3]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [3]))
	$3 = ($2 + ($3 << [3]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	$6 = ($6 + [8])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [3]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL _ZdlPv($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $291 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [48]) = ($4 << [1])
	$5 = (($3 + [48]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [48]) = ($6 | [1])
	*($3 + [56]) = $5
	*($3 + [52]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	$7 = *(($2 + [24]))
	*((($3 + [64]) + [24])) = $7
	$8 = *(($2 + [16]))
	*((($3 + [64]) + [16])) = $8
	$9 = *(($2 + [8]))
	$10 = *($2)
	*(($3 + [16])) = $8
	*(($3 + [24])) = $7
	*($3 + [72]) = $9
	*($3) = $10
	*($3 + [64]) = $10
	*($3 + [8]) = $9
	CALL $545(($3 + [32]), $3)
	$4 = *($3 + [32])
	$2 = ($4 & [1])
	$4 = CALL $716(($3 + [48]), ( *($3 + [40]) ? (($3 + [32]) | [1]) : $2 ), ( *($3 + [36]) ? uint_32($4 >> [1]) : $2 ))
	$9 = *($4)
	*($4) = (int_64)0
	*($0) = $9
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*((($3 + [32]) + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [56]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [48]))
}

int_32 .FUNC $522 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$8 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$3 }
	$5 = ($0 + [8])
	$7 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$4 = *($7)
	
.LABEL $label$5
	CALL memcpy($4, $6, [1])
	$4 = (*($7) + [1])
	*($7) = $4
	$6 = ($6 + [1])
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $521 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $156(*($1), *($0))
	$0 = *($0)
	$2 = ($0 + [32])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[31]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$4 = *(($3 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $2, [32])
	*(($3 = ($3 + [4]))) = (*($3) + [32])
	$2 = ($0 + [64])
	$4 = *($3 + [4])
	$3 = *($1)
	if ( ((int_32)(*($3 + [8]) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$4 = *(($3 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, $2, [8])
	*(($3 = ($3 + [4]))) = (*($3) + [8])
	CALL $522(*($1), ($0 + [72]))
	CALL $230(*($1), ($0 + [84]))
}

void .FUNC $520 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	$4 = *($0)
	$5 = *($4 + [4])
	$6 = *($5 + [100])
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$2 }
	$6 = *($4)
	$6 = CALL db_idx64_find_primary(*($6), *($6 + [8]), (int_64)-4812917093941759104, ($3 + [8]), *($5))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL db_idx64_remove($6)
	
.LABEL $label$1
	$6 = *($0)
	$4 = *($6 + [4])
	$0 = *(($4 + [104]))
	if ( ((int_32)$0 > (int_32)[-1]) ){ goto $label$4 }
	$0 = *($6)
	$0 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-4812917093941759103, ($3 + [8]), *($4))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$3 }
	
.LABEL $label$4
	CALL db_idx64_remove($0)
	
.LABEL $label$3
	$global$0 = ($3 + [16])
}

void .FUNC $407 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*(($1 + [68])) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [29170])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [29215])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$5 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$6 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$7:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$5 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$6 = $3
	
.LABEL $label$4
	CALL eosio_assert([0], [29265])
	$5 = *($4)
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$10 }
	$9 = $6
	
.LOOP $label$11:
	$10 = *($9)
	*($9) = [0]
	$8 = ($9 + [-24])
	$6 = *($8)
	*($8) = $10
	if ( ($6 == 0) ){ goto $label$12 }
	CALL _ZdlPv($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$10 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) != (int_32)$9) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$10 = ($6 + [-24])
	
.LABEL $label$9
	
.LOOP $label$13:
	$6 = ($6 + [-24])
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL _ZdlPv($9)
	
.LABEL $label$14
	if ( ((int_32)$10 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$8
	*(($0 + [28])) = $10
	CALL db_remove_i64(*($1 + [72]))
	$9 = *($1 + [76])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)5445031321149636608, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

void .FUNC $699 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$5 = *($0)
	$4 = *($0 + [8])
	$3 = ((int_32)($2 - $1) / (int_32)[48])
	if ( ((uint_32)$3 <= (uint_32)((int_32)($4 - $5) / (int_32)[48])) ){ goto $label$4 }
	if ( ($5 == 0) ){ goto $label$5 }
	*($0 + [4]) = $5
	CALL _ZdlPv($5)
	$4 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[89478486]) ){ goto $label$1 }
	$5 = [89478485]
	$4 = ((int_32)$4 / (int_32)[48])
	if ( ((uint_32)$4 > (uint_32)[44739241]) ){ goto $label$6 }
	$4 = ($4 << [1])
	$5 = ( $3 ? $4 : ($4 <= $3) )
	
.LABEL $label$6
	$5 = ((int_32)$5 * (int_32)[48])
	$4 = CALL _Znwj($5)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $5)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($4) = *($1)
	*(($4 + [40])) = *(($1 + [40]))
	*(($4 + [32])) = *(($1 + [32]))
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$4 = (*($0) + [48])
	*($0) = $4
	$1 = ($1 + [48])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$4
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[48])
	$4 = ($1 + ((int_32)$6 * (int_32)[48]))
	$7 = ( $4 ? $2 : ((uint_32)$3 > (uint_32)$6) )
	$8 = ($7 - $1)
	$9 = ((int_32)$8 / (int_32)[48])
	if ( ($8 == 0) ){ goto $label$8 }
	CALL memmove($5, $1, $8)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$3 }
	$0 = ($0 + [4])
	$1 = *($0)
	
.LOOP $label$9:
	*($1) = *($4)
	*(($1 + [40])) = *(($4 + [40]))
	*(($1 + [32])) = *(($4 + [32]))
	*(($1 + [24])) = *(($4 + [24]))
	*(($1 + [16])) = *(($4 + [16]))
	*(($1 + [8])) = *(($4 + [8]))
	$1 = (*($0) + [48])
	*($0) = $1
	$4 = ($4 + [48])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$9 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($5 + ((int_32)$9 * (int_32)[48]))
	return (unreachable)
	
.LABEL $label$1
	CALL $727($0)
}

void .FUNC $546 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$3 = ($global$0 - [96])
	$global$0 = $3
	*(($3 + [56])) = [0]
	*($3 + [48]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [48]) = ($4 << [1])
	$5 = (($3 + [48]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [48]) = ($6 | [1])
	*($3 + [56]) = $5
	*($3 + [52]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	$7 = *(($2 + [24]))
	*((($3 + [64]) + [24])) = $7
	$8 = *(($2 + [16]))
	*((($3 + [64]) + [16])) = $8
	$9 = *(($2 + [8]))
	$10 = *($2)
	*(($3 + [16])) = $8
	*(($3 + [24])) = $7
	*($3 + [72]) = $9
	*($3) = $10
	*($3 + [64]) = $10
	*($3 + [8]) = $9
	CALL $545(($3 + [32]), $3)
	$4 = *($3 + [32])
	$2 = ($4 & [1])
	$4 = CALL $716(($3 + [48]), ( *($3 + [40]) ? (($3 + [32]) | [1]) : $2 ), ( *($3 + [36]) ? uint_32($4 >> [1]) : $2 ))
	$9 = *($4)
	*($4) = (int_64)0
	*($0) = $9
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3 + [32]) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*((($3 + [32]) + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [56]))
	
.LABEL $label$6
	$global$0 = ($3 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [48]))
}

void .FUNC $749 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$1 = *([0] + [17040])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	$2 = [16848]
	$3 = (((int_32)$1 * (int_32)[12]) + [16848])
	
.LOOP $label$3:
	$1 = *(($2 + [4]))
	if ( ($1 == 0) ){ goto $label$2 }
	if ( ((uint_32)($1 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($1 + *($2)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$2 = ($2 + [12])
	if ( ($2 <= $3) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($2 = ($0 + [-4]))) = (*($2) & [2147483647])
}

int_32 .FUNC $748 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [8648]) == 0) ){ goto $label$2 }
	$2 = *([0] + [8652])
	goto $label$1 
	
.LABEL $label$2
	$2 = (current_memory)
	*([0] + [8648]) = [1]
	$2 = ($2 << [16])
	*([0] + [8652]) = $2
	
.LABEL $label$1
	$3 = $2
	$5 = (current_memory)
	$4 = uint_32(($2 + [65535]) >> [16])
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$6 }
	($4 - $5)
	$5 = [0]
	if ( ((int_32)$4 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [8652])
	
.LABEL $label$6
	$5 = [0]
	*([0] + [8652]) = $3
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	$4 = ((int_32)$1 * (int_32)[12])
	$5 = ($2 & [65535])
	if ( ((uint_32)$5 > (uint_32)[64512]) ){ goto $label$8 }
	$5 = (($2 + [65536]) - $5)
	goto $label$7 
	
.LABEL $label$8
	$5 = (($2 + [131072]) - ($2 & [131071]))
	
.LABEL $label$7
	$4 = ($0 + $4)
	$2 = ($5 - $2)
	if ( *([0] + [8648]) ){ goto $label$9 }
	$3 = (current_memory)
	*([0] + [8648]) = [1]
	$3 = ($3 << [16])
	*([0] + [8652]) = $3
	
.LABEL $label$9
	$4 = ($4 + [8192])
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$8 = (current_memory)
	$7 = (($2 + [7]) & [-8])
	$5 = uint_32((($7 + $3) + [65535]) >> [16])
	if ( ((uint_32)$5 <= (uint_32)$8) ){ goto $label$10 }
	($5 - $8)
	if ( ((int_32)$5 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [8652])
	
.LABEL $label$10
	*([0] + [8652]) = ($6 + $7)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$5 = *($4)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $5) == (int_32)$3) ){ goto $label$3 }
	$7 = ($1 + [8200])
	$1 = *($7)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$11 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $5))
	*($7) = *($4)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$11
	$4 = (*($4) + [1])
	*(($4 = ($0 + [8388]))) = $4
	*(($5 = (($0 = ($0 + ((int_32)$4 * (int_32)[12]))) + [8192]))) = $2
	*(($0 + [8196])) = $3
	
.LABEL $label$5
	return $5
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$2 = *($1)
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$12 }
	*(($3 = (*(($3 + [8196])) + $2))) = ((*($3) & [-2147483648]) | (([-4] - $2) + $5))
	*($1) = *($4)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$12
	$2 = ($0 + [8388])
	$3 = (*($2) + [1])
	*($0 + [8384]) = $3
	*($2) = $3
	return [0]
	
.LABEL $label$3
	*($4) = ($5 + $2)
	return $4
}

int_32 .FUNC $743 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $742 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $741 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$5 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$6:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$4 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$6 }
	
.LABEL $label$7
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$5 = $2
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = $2
	
.LABEL $label$3
	if ( ((int_32)*($0) != (int_32)($1 & [255])) ){ goto $label$8 }
	if ( $5 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$8
	if ( ($5 <= [4]) ){ goto $label$10 }
	$3 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$3)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$2 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$1 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	return $0
}

int_64 .FUNC $740 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $737($3, (int_64)0)
	$4 = CALL $739($3, $2, [1], (int_64)-1)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return $4
}

int_32 .FUNC $747 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($0 + [8384])
	if ( $2 ){ goto $label$2 }
	$2 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$3 = (($1 + [4]) & [7])
	$3 = ( (($1 + [8]) - $3) ? $1 : $3 )
	$4 = *($0 + [8388])
	if ( ((uint_32)$4 >= (uint_32)$2) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$4 * (int_32)[12])) + [8192])
	if ( $4 ){ goto $label$6 }
	$2 = ($0 + [8196])
	if ( *($2) ){ goto $label$6 }
	*($1) = [8192]
	*($2) = $0
	
.LABEL $label$6
	$4 = ($3 + [4])
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( ((uint_32)($2 + $4) > (uint_32)*($1)) ){ goto $label$8 }
	*(($2 = (*($1 + [4]) + $2))) = ((*($2) & [-2147483648]) | $3)
	*(($1 = ($1 + [8]))) = (*($1) + $4)
	*($2) = (*($2) | [-2147483648])
	$1 = ($2 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $748($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$5 = ([2147483644] - $3)
	$6 = ($0 + [8392])
	$7 = ($0 + [8384])
	$8 = *($0 + [8392])
	$2 = $8
	
.LOOP $label$9:
	$9 = ($1 + [8192])
	$1 = ($0 + ((int_32)$2 * (int_32)[12]))
	if ( ((int_32)*(($1 + [8200])) == (int_32)*($9)) ){ goto $label$10 }
	CALL eosio_assert([0], [8216])
	
.LABEL $label$10
	$10 = *(($1 + [8196]))
	$2 = ($10 + [4])
	
.LOOP $label$11:
	$11 = ($10 + *($9))
	$12 = ($2 + [-4])
	$13 = *($12)
	$1 = ($13 & [2147483647])
	if ( ((int_32)$13 < (int_32)[0]) ){ goto $label$12 }
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($2 + $1)
	if ( ((uint_32)$4 >= (uint_32)$11) ){ goto $label$13 }
	$4 = *($4)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$13 }
	$1 = (($1 + ($4 & [2147483647])) + [4])
	if ( ($1 <= $3) ){ goto $label$14 }
	
.LABEL $label$13
	*($12) = (( $1 ? $3 : ($1 <= $3) ) | ($13 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$3) ){ goto $label$15 }
	*(($2 + $3)) = (($5 + $1) & [2147483647])
	
.LABEL $label$15
	if ( ((uint_32)$1 >= (uint_32)$3) ){ goto $label$3 }
	
.LABEL $label$12
	$2 = (($2 + $1) + [4])
	if ( ($2 <= $11) ){ goto $label$11 }
	$1 = [0]
	$2 = (*($6) + [1])
	$2 = ( [0] ? $2 : ((int_32)$2 == (int_32)*($7)) )
	*($6) = $2
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($12) = (*($12) | [-2147483648])
	return $2
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $746 (int_32 $0)
{
	return CALL $747([8656], $0)
}

int_32 .FUNC $745 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $746($1)
	
.LABEL $label$2
	*(CALL $728()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $746(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $749($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

int_32 .FUNC $744 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $728())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $745($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $592 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [20])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $593 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [20])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $590 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	$4 = ($global$0 - [32])
	$global$0 = $4
	CALL $720(($4 + [16]), *($1))
	CALL $591($4, $2, $3)
	$2 = *($4)
	$3 = ($2 & [1])
	$2 = CALL $716(($4 + [16]), ( *($4 + [8]) ? ($4 | [1]) : $3 ), ( *($4 + [4]) ? uint_32($2 >> [1]) : $3 ))
	$5 = *($2)
	*($2) = (int_64)0
	*($0) = $5
	$0 = ($2 + [8])
	*(($0 + [8])) = *($0)
	*($0) = [0]
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL _ZdlPv(*(($4 + [8])))
	
.LABEL $label$1
	if ( ((*($4 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL _ZdlPv(*($4 + [24]))
	
.LABEL $label$2
	$global$0 = ($4 + [32])
}

void .FUNC $591 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [32])
	$global$0 = $3
	*(($3 + [24])) = [0]
	*($3 + [16]) = (int_64)0
	$4 = CALL $743($1)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$4 }
	*($3 + [16]) = ($4 << [1])
	$5 = (($3 + [16]) | [1])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$6 = (($4 + [16]) & [-16])
	$5 = CALL _Znwj($6)
	*($3 + [16]) = ($6 | [1])
	*($3 + [24]) = $5
	*($3 + [20]) = $4
	
.LABEL $label$3
	CALL memcpy($5, $1, $4)
	
.LABEL $label$2
	*(($5 + $4)) = [0]
	CALL $721($3, *($2))
	$4 = *($3)
	$5 = ($4 & [1])
	$4 = CALL $716(($3 + [16]), ( *($3 + [8]) ? ($3 | [1]) : $5 ), ( *($3 + [4]) ? uint_32($4 >> [1]) : $5 ))
	$7 = *($4)
	*($4) = (int_64)0
	*($0) = $7
	$4 = ($4 + [8])
	*(($0 + [8])) = *($4)
	*($4) = [0]
	if ( ((*($3) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($3 + [8])))
	
.LABEL $label$5
	if ( ((*($3 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($3 + [24]))
	
.LABEL $label$6
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($3 + [16]))
}

void .FUNC $596 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [4])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL _ZdlPv($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$6 = [268435455]
	if ( ((uint_32)int_32($5 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [4])
	$6 = CALL _Znwj($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [4]) << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $727($0)
}

int_32 .FUNC $597 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	*($2) = (*($2) + [8])
	$3 = ($1 + [40])
	$2 = *($0 + [4])
	$0 = CALL $230(CALL $230($0, ($1 + [16])), ($1 + [28]))
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[0]) ){ goto $label$3 }
	CALL eosio_assert([0], [22875])
	$2 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [1])
	$3 = (*($2) + [1])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [41])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$4 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$4
	CALL memcpy($3, $4, [1])
	$3 = (*($2) + [1])
	*($2) = $3
	$2 = ($1 + [44])
	if ( ((int_32)(*($5) - $3) > (int_32)[3]) ){ goto $label$5 }
	CALL eosio_assert([0], [22875])
	$3 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$1 = ($1 + [48])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [22875])
	$3 = *($2)
	
.LABEL $label$6
	CALL memcpy($3, $1, [1])
	*($2) = (*($2) + [1])
	return $0
}

void .FUNC $594 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL _Znwj(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [28])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [32])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$11
	$2 = *($1 + [16])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [20])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	CALL _ZdlPv($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL _ZdlPv($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $595 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *(*($0 + [4]))
	*($1) = *($5)
	*(($1 + [8])) = *(($5 + [8]))
	$6 = [16]
	if ( ((int_32)$1 == (int_32)$5) ){ goto $label$1 }
	CALL $596(($1 + [16]), *($5 + [16]), *(($5 + [20])))
	CALL $596(($1 + [28]), *($5 + [28]), *(($5 + [32])))
	
.LABEL $label$1
	*($1 + [40]) = *($5 + [40])
	*(($1 + [48])) = *(($5 + [48]))
	$7 = *($1 + [16])
	$5 = *(($1 + [20]))
	$8 = ($5 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$3 }
	$6 = (($8 & [-16]) + $6)
	
.LABEL $label$3
	$7 = *($1 + [28])
	$5 = *(($1 + [32]))
	$8 = ($5 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$4:
	$6 = ($6 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$5 }
	$6 = (($8 & [-16]) + $6)
	
.LABEL $label$5
	$5 = ($6 + [7])
	if ( ($5 <= [513]) ){ goto $label$7 }
	$6 = CALL $746($5)
	goto $label$6 
	
.LABEL $label$7
	$6 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $6
	
.LABEL $label$6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($6 + $5)
	CALL $597($3, $1)
	*($1 + [60]) = CALL db_store_i64(*($4 + [8]), (int_64)-8173740188290908160, *(*($0 + [8])), (int_64)-8173740188290908160, $6, $5)
	if ( ($5 <= [513]) ){ goto $label$8 }
	CALL $749($6)
	
.LABEL $label$8
	if ( ((uint_64)*($4 + [16]) > (uint_64)(int_64)-8173740188290908160) ){ goto $label$9 }
	*(($4 + [16])) = (int_64)-8173740188290908159
	
.LABEL $label$9
	$global$0 = ($3 + [16])
}

int_32 .FUNC $36 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	$3 = ($global$0 - [464])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [328])) = (int_64)0
	*($4 + [304]) = (int_64)0
	*($4 + [296]) = (int_64)0
	*($4 + [312]) = (int_64)0
	*($4 + [320]) = (int_64)0
	*($4 + [336]) = [0]
	*($4 + [284]) = $2
	*($4 + [280]) = $2
	*($4 + [288]) = ($2 + $7)
	CALL $168(($4 + [280]), ($4 + [296]))
	$3 = ($4 + [320])
	$8 = *($4 + [284])
	if ( ((uint_32)(*($4 + [288]) - $8) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$8 = *($4 + [284])
	
.LABEL $label$4
	CALL memcpy($3, $8, [8])
	$8 = (*($4 + [284]) + [8])
	*($4 + [284]) = $8
	*($4 + [80]) = (int_64)0
	$9 = (($4 + [280]) + [8])
	if ( ((uint_32)(*($9) - $8) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [28806])
	$8 = *($4 + [284])
	
.LABEL $label$5
	$10 = ($4 + [336])
	CALL memcpy(($4 + [80]), $8, [8])
	*(($4 + [328])) = *($4 + [80])
	$8 = (*($4 + [284]) + [8])
	*($4 + [284]) = $8
	if ( ((int_32)*($9) != (int_32)$8) ){ goto $label$6 }
	CALL eosio_assert([0], [28806])
	$8 = *($4 + [284])
	
.LABEL $label$6
	CALL memcpy($10, $8, [1])
	*($4 + [284]) = (*($4 + [284]) + [1])
	$8 = *((($4 + [280]) + [8]))
	*((($4 + [64]) + [8])) = $8
	*((($4 + [48]) + [8])) = $8
	$11 = *($4 + [280])
	*($4 + [48]) = $11
	*($4 + [64]) = $11
	$8 = CALL $20(($4 + [80]), $0, $1, ($4 + [48]))
	*(($9 = (($4 + [360]) + [16]))) = *((($4 + [296]) + [16]))
	*(($10 = (($4 + [360]) + [8]))) = *((($4 + [296]) + [8]))
	*(($12 = (($4 + [344]) + [8]))) = *(($3 + [8]))
	*($4 + [360]) = *($4 + [296])
	*($4 + [344]) = *($3)
	$13 = *(($4 + [336]))
	*((($4 + [408]) + [8])) = *($12)
	*((($4 + [384]) + [8])) = *($10)
	*((($4 + [384]) + [16])) = *($9)
	*($4 + [408]) = *($4 + [344])
	*($4 + [384]) = *($4 + [360])
	$3 = (($4 + [80]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	$0 = *((($4 + [384]) + [16]))
	*((($4 + [440]) + [16])) = $0
	$1 = *((($4 + [384]) + [8]))
	*((($4 + [440]) + [8])) = $1
	$11 = *((($4 + [408]) + [8]))
	*((($4 + [424]) + [8])) = $11
	*((($4 + [24]) + [8])) = $1
	*((($4 + [24]) + [16])) = $0
	*((($4 + [8]) + [8])) = $11
	$0 = *($4 + [384])
	*($4 + [440]) = $0
	$1 = *($4 + [408])
	*($4 + [424]) = $1
	*($4 + [24]) = $0
	*($4 + [8]) = $1
	CALL void $3((int_32 ($4 + [24])), (int_32 ($4 + [8])), (int_32 ($13 & [255])), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $749($2)
	
.LABEL $label$8
	CALL $24($8)
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$2 = ($global$0 - [352])
	$global$0 = $2
	CALL $110($2)
	$3 = CALL db_lowerbound_i64(*($0 + [72]), *(($0 + [80])), (int_64)7035940084004159488, (int_64)0)
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$2 }
	$4 = ($0 + [72])
	$0 = CALL $193($4, $3)
	if ( ($1 == 0) ){ goto $label$1 }
	$5 = (($2 + [256]) + [36])
	$6 = (($2 + [216]) + [28])
	$7 = ($2 + [268])
	$8 = ($2 + [300])
	$9 = ($2 + [308])
	$10 = (($2 + [96]) + [32])
	$11 = (($2 + [216]) + [8])
	$12 = (($2 + [256]) + [40])
	$13 = [0]
	
.LOOP $label$3:
	*(($3 = (($2 + [320]) + [24]))) = *(($0 + [88]))
	*(($14 = (($2 + [320]) + [16]))) = *(($0 + [80]))
	*($2 + [320]) = *($0 + [64])
	*($2 + [328]) = *(($0 + [72]))
	$15 = CALL current_time()
	*($7) = [0]
	*((($2 + [256]) + [16])) = [0]
	*(($16 = (($2 + [256]) + [20]))) = (int_64)0
	*((($2 + [256]) + [28])) = (int_64)0
	*($5) = (int_64)0
	*($8) = (int_64)0
	*($9) = (int_64)0
	*($2 + [256]) = ((CASTING uint_32)(uint_64 ((uint_64)$15 / (uint_64)(int_64)1000000)) + [60])
	*($2 + [200]) = [8617]
	*($2 + [204]) = CALL $743([8617])
	*($2 + [56]) = *($2 + [200])
	CALL $10(($2 + [208]), ($2 + [56]))
	*($2 + [184]) = [8344]
	*($2 + [188]) = CALL $743([8344])
	*($2 + [48]) = *($2 + [184])
	CALL $10(($2 + [192]), ($2 + [48]))
	*($2 + [168]) = [8617]
	$15 = *($2 + [192])
	$17 = *($2 + [208])
	*($2 + [172]) = CALL $743([8617])
	*($2 + [40]) = *($2 + [168])
	CALL $10(($2 + [176]), ($2 + [40]))
	*($2 + [152]) = [21894]
	*($2 + [156]) = CALL $743([21894])
	*($2 + [32]) = *($2 + [152])
	CALL $10(($2 + [160]), ($2 + [32]))
	*((($2 + [96]) + [24])) = *($3)
	*((($2 + [96]) + [16])) = *($14)
	*(($14 = (($2 + [216]) + [16]))) = (int_64)0
	*(($18 = (($2 + [216]) + [24]))) = [0]
	*($2 + [104]) = *($2 + [328])
	*($2 + [96]) = *($2 + [320])
	*($10) = *($0)
	*($11) = *($2 + [160])
	*($2 + [216]) = *($2 + [176])
	$3 = CALL _Znwj([16])
	*($14) = $3
	*($3) = $17
	*($3 + [8]) = $15
	$3 = ($3 + [16])
	*($18) = $3
	*(($19 = (($2 + [216]) + [20]))) = $3
	CALL $188($6, ($2 + [96]))
	$3 = *($12)
	if ( ((uint_32)$3 >= (uint_32)*($8)) ){ goto $label$6 }
	*($3) = *($2 + [216])
	*($3 + [16]) = [0]
	*(($3 + [8])) = *($11)
	*(($20 = ($3 + [20]))) = (int_64)0
	*($3 + [16]) = *($14)
	*($20) = *($19)
	*(($3 + [24])) = *($18)
	*($18) = [0]
	*($3 + [28 align=4]) = (int_64)0
	*($19) = [0]
	*($14) = [0]
	*(($18 = ($3 + [36]))) = [0]
	*($3 + [28]) = *($6)
	$3 = (($2 + [216]) + [32])
	*(($3 + [32])) = *($3)
	$20 = (($2 + [216]) + [36])
	*($18) = *($20)
	*($3) = [0]
	*($6) = [0]
	*($20) = [0]
	*($12) = (*($12) + [40])
	$3 = *($14)
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	CALL $189($5, ($2 + [216]))
	$3 = *($6)
	if ( ($3 == 0) ){ goto $label$7 }
	*((($2 + [216]) + [32])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$7
	$3 = *($14)
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	*($19) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$4
	*($16) = [0]
	*($2 + [88]) = [8617]
	*($2 + [92]) = CALL $743([8617])
	*($2 + [24]) = *($2 + [88])
	CALL $10(($2 + [96]), ($2 + [24]))
	*($2 + [80]) = [21894]
	*($2 + [84]) = CALL $743([21894])
	*($2 + [16]) = *($2 + [80])
	CALL $10(($2 + [216]), ($2 + [16]))
	$15 = *($0)
	*($2 + [104]) = (int_64)0
	$15 = ((int_64)$15 + (int_64)-122328436508220256)
	*($2 + [96]) = $15
	CALL cancel_deferred(($2 + [96]))
	*($2 + [104]) = (int_64)0
	*($2 + [96]) = $15
	*($2 + [64]) = [8617]
	*($2 + [68]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [64])
	CALL $10(($2 + [72]), ($2 + [8]))
	$15 = *($2 + [72])
	CALL $190(($2 + [216]), ($2 + [256]))
	$3 = *($2 + [216])
	CALL send_deferred(($2 + [96]), $15, $3, (*($2 + [220]) - $3), [1])
	$3 = *($2 + [216])
	if ( ($3 == 0) ){ goto $label$8 }
	*($2 + [220]) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$8
	if ( $0 ){ goto $label$9 }
	CALL eosio_assert([0], [28698])
	
.LABEL $label$9
	$3 = *($0 + [104])
	$0 = [0]
	$3 = CALL db_next_i64($3, ($2 + [96]))
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$10 }
	$0 = CALL $193($4, $3)
	
.LABEL $label$10
	CALL $164(($2 + [256]))
	if ( ($0 == 0) ){ goto $label$1 }
	$13 = ($13 + [1])
	if ( (($13 & [65535]) <= $1) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [21957])
	
.LABEL $label$1
	$global$0 = ($2 + [352])
}

void .FUNC $598 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[24])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[178956971]) ){ goto $label$2 }
	$8 = ($0 + [8])
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[24])
	if ( ((uint_32)$5 >= (uint_32)[89478485]) ){ goto $label$5 }
	*(($4 + [24])) = $8
	$8 = [0]
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$5 = ($5 << [1])
	$5 = ( $7 ? $5 : ($5 <= $7) )
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = $5
	goto $label$4 
	
.LABEL $label$5
	*(($4 + [24])) = $8
	*($4 + [20]) = [0]
	$9 = ($4 + [20])
	$8 = [178956970]
	
.LABEL $label$4
	$5 = CALL _Znwj(((int_32)$8 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $727($0)
	
.LABEL $label$1
	$7 = *($1)
	*($1) = [0]
	*($4 + [8]) = $5
	*(($4 + [20])) = ($5 + ((int_32)$8 * (int_32)[24]))
	*(($5 = ($5 + ((int_32)$6 * (int_32)[24])))) = $7
	*($5 + [8]) = *($2)
	*($5 + [16]) = *($3)
	*($4 + [12]) = $5
	$1 = ($5 + [24])
	*($4 + [16]) = $1
	$3 = *($0)
	$5 = *(($0 + [4]))
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$7 }
	$8 = *($4 + [12])
	
.LOOP $label$8:
	$1 = ($5 + [-24])
	$2 = *($1)
	*($1) = [0]
	*(($8 + [-24])) = $2
	*(($8 + [-8])) = *(($5 + [-8]))
	*(($8 + [-16])) = *(($5 + [-16]))
	$8 = (*($4 + [12]) + [-24])
	*($4 + [12]) = $8
	$5 = $1
	if ( ((int_32)$3 != (int_32)$1) ){ goto $label$8 }
	$5 = *(($0 + [4]))
	$3 = *($0)
	$1 = *(($4 + [16]))
	goto $label$6 
	
.LABEL $label$7
	$8 = *($4 + [12])
	
.LABEL $label$6
	*($0) = $8
	*(($0 + [4])) = $1
	*((($4 + [8]) + [8])) = $5
	*($4 + [12]) = $3
	$5 = ($0 + [8])
	$8 = *($5)
	*($5) = *($9)
	*($9) = $8
	*($4 + [8]) = $3
	CALL $599(($4 + [8]))
	$global$0 = ($4 + [32])
	(unreachable)
}

int_32 .FUNC $599 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$2 = *($0 + [4])
	$1 = *($0 + [8])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$3 = ($0 + [8])
	
.LOOP $label$2:
	$4 = ($1 + [-24])
	*($3) = $4
	$1 = *($4)
	*($4) = [0]
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = *($1 + [36])
	if ( ($4 == 0) ){ goto $label$4 }
	*(($1 + [40])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$4
	$4 = *($1 + [20])
	if ( ($4 == 0) ){ goto $label$5 }
	*(($1 + [24])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$5
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$6 }
	*(($1 + [12])) = $4
	CALL _ZdlPv($4)
	
.LABEL $label$6
	CALL _ZdlPv($1)
	
.LABEL $label$3
	$1 = *($3)
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$7 }
	CALL _ZdlPv($1)
	
.LABEL $label$7
	return $0
}

int_32 .FUNC $32 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$3 = ($global$0 - [496])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = [0]
	$2 = [0]
	$8 = CALL action_data_size()
	if ( ($8 == 0) ){ goto $label$1 }
	if ( ($8 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($8)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($8 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $8)
	
.LABEL $label$1
	*((($4 + [256]) + [56])) = [0]
	*($4 + [304]) = (int_64)0
	*($4 + [328]) = (int_64)0
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $8)
	CALL $140(($4 + [240]), ($4 + [256]))
	$3 = *($4 + [248])
	*((($4 + [24]) + [8])) = $3
	*((($4 + [8]) + [8])) = $3
	$9 = *($4 + [240])
	*($4 + [8]) = $9
	*($4 + [24]) = $9
	$10 = CALL $20(($4 + [40]), $0, $1, ($4 + [8]))
	*((($4 + [336]) + [56])) = [0]
	*((($4 + [336]) + [40])) = *((($4 + [256]) + [40]))
	*((($4 + [336]) + [32])) = *((($4 + [256]) + [32]))
	*((($4 + [336]) + [24])) = *((($4 + [256]) + [24]))
	*((($4 + [336]) + [16])) = *((($4 + [256]) + [16]))
	*($4 + [384]) = (int_64)0
	*($4 + [344]) = *($4 + [264])
	*($4 + [336]) = *($4 + [256])
	$3 = (*(($4 + [308])) - *($4 + [304]))
	if ( ($3 == 0) ){ goto $label$6 }
	$11 = int_32($3 >> [3])
	if ( ((uint_32)$11 >= (uint_32)[536870912]) ){ goto $label$5 }
	$7 = CALL _Znwj($3)
	*((($4 + [336]) + [48])) = $7
	*(($3 = (($4 + [336]) + [52]))) = $7
	*(($4 + [392])) = ($7 + ($11 << [3]))
	$12 = *((($4 + [256]) + [48]))
	$11 = (*((($4 + [256]) + [52])) - $12)
	if ( ((int_32)$11 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($7, $12, $11)
	$7 = (*($3) + $11)
	*($3) = $7
	
.LABEL $label$6
	*((($4 + [336]) + [76])) = *((($4 + [256]) + [76]))
	*((($4 + [336]) + [68])) = *((($4 + [256]) + [68]))
	*($4 + [396 align=4]) = *($4 + [316 align=4])
	$3 = (($4 + [40]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	*(($4 + [472])) = [0]
	*((($4 + [416]) + [40])) = *((($4 + [336]) + [40]))
	*((($4 + [416]) + [32])) = *((($4 + [336]) + [32]))
	*((($4 + [416]) + [24])) = *((($4 + [336]) + [24]))
	*((($4 + [416]) + [16])) = *((($4 + [336]) + [16]))
	*($4 + [424]) = *($4 + [344])
	*($4 + [416]) = *($4 + [336])
	*($4 + [464]) = (int_64)0
	$7 = ($7 - *((($4 + [336]) + [48])))
	if ( ($7 == 0) ){ goto $label$8 }
	$5 = int_32($7 >> [3])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$4 }
	$7 = CALL _Znwj($7)
	*((($4 + [416]) + [48])) = $7
	*(($11 = (($4 + [416]) + [52]))) = $7
	*(($4 + [472])) = ($7 + ($5 << [3]))
	$12 = *((($4 + [336]) + [48]))
	$5 = (*((($4 + [336]) + [52])) - $12)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$8 }
	CALL memcpy($7, $12, $5)
	*($11) = ($7 + $5)
	
.LABEL $label$8
	$7 = ($4 + [396])
	*(($4 + [492])) = *(($7 + [16]))
	*(($4 + [484])) = *(($7 + [8]))
	*($4 + [476 align=4]) = *($7)
	CALL void $3((int_32 ($4 + [416])), (int_32 $6))
	$7 = *($4 + [464])
	if ( ($7 == 0) ){ goto $label$9 }
	*(($4 + [468])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$9
	$7 = *($4 + [384])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [388])) = $7
	CALL _ZdlPv($7)
	
.LABEL $label$10
	if ( ($8 <= [513]) ){ goto $label$11 }
	CALL $749($2)
	
.LABEL $label$11
	CALL $24($10)
	$2 = *(($4 + [304]))
	if ( ($2 == 0) ){ goto $label$12 }
	*(($4 + [308])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$12
	$global$0 = ($4 + [496])
	return [1]
	
.LABEL $label$5
	CALL $727(($4 + [384]))
	
.LABEL $label$4
	CALL $727((($4 + [416]) + [48]))
	(unreachable)
	return (unreachable)
}

void .FUNC $33 (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	int_64 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_32 $17
	int_32 $18
	$7 = ($global$0 - [1232])
	$global$0 = $7
	CALL $149($0, $1, [1])
	$8 = *([0] + [8632])
	if ( $8 ){ goto $label$1 }
	$9 = CALL _Znwj([280])
	$8 = CALL $111($9)
	*([0] + [8632]) = $9
	
.LABEL $label$1
	CALL $141(($7 + [1088]), $8, $2)
	*($7 + [1080]) = [8617]
	*($7 + [1084]) = CALL $743([8617])
	*($7 + [392]) = *($7 + [1080])
	$8 = CALL $10(($7 + [448]), ($7 + [392]))
	if ( ((int_64)*($7 + [1120]) != (int_64)*($8)) ){ goto $label$2 }
	*($7 + [672]) = [8414]
	*($7 + [676]) = CALL $743([8414])
	*($7 + [384]) = *($7 + [672])
	$8 = CALL $10(($7 + [784]), ($7 + [384]))
	if ( ((int_64)*($1 + [8]) != (int_64)*($8)) ){ goto $label$2 }
	CALL eosio_assert([0], [21646])
	
.LABEL $label$2
	if ( ((uint_32)$2 > (uint_32)[15]) ){ goto $label$38 }
	goto $label$29 
	
.LABEL $label$39
	CALL eosio_assert([0], [21785])
	
.LABEL $label$38
	if ( (*($7 + [1112]) == 0) ){ goto $label$40 }
	CALL eosio_assert([0], [21736])
	
.LABEL $label$40
	CALL $150(($7 + [672]))
	$8 = *($7 + [708])
	*($7 + [664]) = [8351]
	*($7 + [668]) = CALL $743([8351])
	*($7 + [144]) = *($7 + [664])
	$0 = CALL $10(($7 + [784]), ($7 + [144]))
	if ( ((int_64)*($8 + [8]) != (int_64)*($0)) ){ goto $label$16 }
	$8 = *([0] + [8632])
	if ( $8 ){ goto $label$41 }
	$0 = CALL _Znwj([280])
	$8 = CALL $111($0)
	*([0] + [8632]) = $0
	
.LABEL $label$41
	*($7 + [640]) = [20617]
	*($7 + [644]) = CALL $743([20617])
	*($7 + [136]) = *($7 + [640])
	CALL $10(($7 + [784]), ($7 + [136]))
	CALL $151(($7 + [648]), $8, $1, (int_64)-6030911325394173952, (int_64)0)
	$0 = ($7 + [708])
	$8 = *($0)
	$9 = *($8 + [28])
	*($7 + [624]) = $9
	*($7 + [628]) = $9
	*($7 + [632]) = *(($8 + [32]))
	*(($7 + [808])) = (int_64)0
	*(($7 + [824])) = [0]
	*($7 + [792]) = (int_64)0
	*($7 + [784]) = (int_64)0
	*($7 + [800]) = (int_64)0
	*($7 + [816]) = (int_64)0
	CALL $152(($7 + [624]), ($7 + [784]))
	*($7 + [608]) = [8617]
	*($7 + [612]) = CALL $743([8617])
	*($7 + [128]) = *($7 + [608])
	$9 = CALL $10(($7 + [616]), ($7 + [128]))
	$10 = *($1)
	*($7 + [592]) = [8414]
	*($7 + [596]) = CALL $743([8414])
	*($7 + [120]) = *($7 + [592])
	$8 = CALL $10(($7 + [600]), ($7 + [120]))
	*(($11 = (($7 + [576]) + [8]))) = *((($7 + [648]) + [8]))
	*($7 + [576]) = *($7 + [648])
	$12 = *((($7 + [1088]) + [32]))
	$13 = *($8)
	$8 = CALL $709(($7 + [560]), (($7 + [784]) + [32]))
	$14 = *($9)
	$15 = *(*($0))
	$16 = *($11)
	*(($9 = (($7 + [1216]) + [8]))) = $16
	*((($7 + [1184]) + [8])) = $16
	*($7 + [448]) = $10
	*($7 + [456]) = $13
	*($7 + [464]) = $12
	$10 = *($7 + [576])
	*($7 + [1216]) = $10
	*($7 + [1184]) = $10
	$0 = CALL $709(($7 + [1200]), $8)
	*(($7 + [112])) = *($7 + [464])
	*((($7 + [96]) + [8])) = *($7 + [456])
	*((($7 + [80]) + [8])) = *($9)
	*($7 + [96]) = *($7 + [448])
	*($7 + [80]) = *($7 + [1216])
	CALL $9($14, ($7 + [96]), ($7 + [80]), $0, $15)
	if ( ((*($7 + [1200]) & [1]) == 0) ){ goto $label$42 }
	CALL _ZdlPv(*($0 + [8]))
	
.LABEL $label$42
	if ( ((*($8) & [1]) == 0) ){ goto $label$43 }
	CALL _ZdlPv(*($8 + [8]))
	
.LABEL $label$43
	if ( ((int_64)*(($7 + [808])) != (int_64)1397703940) ){ goto $label$17 }
	if ( ((int_32)*($7 + [1088]) != (int_32)[13]) ){ goto $label$17 }
	$10 = *((($7 + [784]) + [16]))
	$8 = *([0] + [8632])
	if ( $8 ){ goto $label$44 }
	$0 = CALL _Znwj([280])
	$8 = CALL $111($0)
	*([0] + [8632]) = $0
	
.LABEL $label$44
	*($7 + [544]) = [21829]
	*($7 + [548]) = CALL $743([21829])
	*($7 + [72]) = *($7 + [544])
	$12 = CALL $153($8, *(CALL $10(($7 + [552]), ($7 + [72]))), (int_64)25000)
	*((($7 + [488]) + [8])) = [0]
	*((($7 + [520]) + [16])) = *(($1 + [16]))
	*((($7 + [520]) + [8])) = *(($1 + [8]))
	*($7 + [512]) = (int_64)87167674696196
	*($7 + [488]) = (int_64)0
	*($7 + [520]) = *($1)
	*($7 + [504]) = ((int_64)((uint_64)$12 / (uint_64)(int_64)100) * (int_64)$10)
	$8 = CALL $743([21840])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$20 }
	*($7 + [488]) = ($8 << [1])
	$0 = (($7 + [488]) | [1])
	if ( $8 ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$37
	*($7 + [968]) = [20923]
	*($7 + [972]) = CALL $743([20923])
	*($7 + [248]) = *($7 + [968])
	$17 = CALL $10(($7 + [976]), ($7 + [248]))
	$4 = [0]
	*($7 + [1224]) = [0]
	*($7 + [1216]) = (int_64)0
	$9 = *($5)
	if ( ((int_32)*($5 + [4]) != (int_32)$9) ){ goto $label$46 }
	$5 = [0]
	$4 = [0]
	$8 = [0]
	goto $label$45 
	
.LABEL $label$46
	$6 = ($5 + [4])
	$8 = [1]
	$11 = [0]
	$0 = [0]
	
.LOOP $label$47:
	$9 = *(($9 + $4))
	*($7 + [784]) = $9
	if ( ((uint_32)$0 >= (uint_32)$11) ){ goto $label$49 }
	*($0) = $9
	*($7 + [1220]) = (*($7 + [1220]) + [1])
	goto $label$48 
	
.LABEL $label$49
	CALL $154(($7 + [1216]), ($7 + [784]))
	
.LABEL $label$48
	$9 = *($5)
	if ( ((uint_32)$8 >= (uint_32)int_32((*($6) - $9) >> [3])) ){ goto $label$50 }
	$4 = ($4 + [8])
	$8 = ($8 + [1])
	$11 = *((($7 + [1216]) + [8]))
	$0 = *($7 + [1220])
	goto $label$47 
	
.LABEL $label$50
	$5 = *(($7 + [1224]))
	$4 = *($7 + [1220])
	$8 = *($7 + [1216])
	
.LABEL $label$45
	*((($7 + [784]) + [36])) = $4
	*(($7 + [824])) = $5
	*((($7 + [1216]) + [8])) = [0]
	*((($7 + [784]) + [16])) = *(($1 + [16]))
	*((($7 + [784]) + [8])) = *(($1 + [8]))
	*($7 + [808]) = $3
	*($7 + [1216]) = (int_64)0
	*($7 + [828]) = $2
	*($7 + [784]) = *($1)
	*($7 + [816]) = $8
	$3 = *($17)
	*($7 + [648]) = [8617]
	*($7 + [652]) = CALL $743([8617])
	*($7 + [240]) = *($7 + [648])
	$5 = CALL $10(($7 + [1184]), ($7 + [240]))
	*($7 + [624]) = [8344]
	*($7 + [628]) = CALL $743([8344])
	*($7 + [232]) = *($7 + [624])
	$0 = CALL $10(($7 + [1200]), ($7 + [232]))
	*($7 + [1152]) = [8617]
	$10 = *($0)
	$12 = *($5)
	*($7 + [1156]) = CALL $743([8617])
	*($7 + [224]) = *($7 + [1152])
	$5 = CALL $10(($7 + [1176]), ($7 + [224]))
	*($7 + [680]) = $3
	*($7 + [672]) = *($5)
	*(($5 = CALL _Znwj([16]))) = $12
	*($5 + [8]) = $10
	*((($7 + [672]) + [36])) = [0]
	$0 = ($5 + [16])
	*(($7 + [696])) = $0
	*(($7 + [692])) = $0
	*($7 + [688]) = $5
	*($7 + [700 align=4]) = (int_64)0
	$0 = ($4 - $8)
	$3 = (CASTING uint_64)(uint_32 $0)
	$9 = ($7 + [700])
	$5 = [32]
	
.LOOP $label$51:
	$5 = ($5 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$51 }
	$5 = (( $5 ? ($0 + $5) : ((int_32)$8 == (int_32)$4) ) + [1])
	if ( ($5 == 0) ){ goto $label$53 }
	CALL $11($9, $5)
	$4 = *(($7 + [704]))
	$5 = *(($7 + [700]))
	goto $label$52 
	
.LABEL $label$53
	$4 = [0]
	$5 = [0]
	
.LABEL $label$52
	*($7 + [452]) = $5
	*($7 + [448]) = $5
	*($7 + [456]) = $4
	*($7 + [1160]) = ($7 + [448])
	*($7 + [1168]) = ($7 + [784])
	CALL $155(($7 + [1168]), ($7 + [1160]))
	CALL $13(($7 + [448]), ($7 + [672]))
	$5 = *($7 + [448])
	CALL send_inline($5, (*($7 + [452]) - $5))
	$5 = *($7 + [448])
	if ( ($5 == 0) ){ goto $label$54 }
	*($7 + [452]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$54
	$5 = *($7 + [700])
	if ( ($5 == 0) ){ goto $label$55 }
	*(($7 + [704])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$55
	$5 = *($7 + [688])
	if ( ($5 == 0) ){ goto $label$56 }
	*(($7 + [692])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$56
	$5 = *($7 + [816])
	if ( ($5 == 0) ){ goto $label$57 }
	*(($7 + [820])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$57
	$5 = *($7 + [1216])
	if ( ($5 == 0) ){ goto $label$15 }
	*($7 + [1220]) = $5
	CALL _ZdlPv($5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$36
	if ( ((int_32)*($5 + [4]) != (int_32)*($5)) ){ goto $label$58 }
	CALL eosio_assert([0], [21720])
	
.LABEL $label$58
	if ( (*($7 + [1112]) == 0) ){ goto $label$59 }
	CALL eosio_assert([0], [21736])
	
.LABEL $label$59
	$8 = *([0] + [8632])
	if ( $8 ){ goto $label$60 }
	$0 = CALL _Znwj([280])
	$8 = CALL $111($0)
	*([0] + [8632]) = $0
	
.LABEL $label$60
	*($7 + [944]) = [20617]
	*($7 + [948]) = CALL $743([20617])
	*($7 + [312]) = *($7 + [944])
	CALL $10(($7 + [784]), ($7 + [312]))
	CALL $151(($7 + [448]), $8, $1, (int_64)-6030911325394173952, (int_64)0)
	$8 = *($6 + [4])
	if ( ((int_32)$8 == (int_32)*($6)) ){ goto $label$61 }
	CALL eosio_assert([0], [21763])
	$8 = *(($6 + [4]))
	
.LABEL $label$61
	if ( ((int_32)$8 == (int_32)*($6 + [8])) ){ goto $label$22 }
	*($8) = *($7 + [448])
	*(($8 + [8])) = *((($7 + [448]) + [8]))
	*(($8 = ($6 + [4]))) = (*($8) + [16])
	goto $label$21 
	
.LABEL $label$35
	*($7 + [952]) = [21707]
	*($7 + [956]) = CALL $743([21707])
	*($7 + [280]) = *($7 + [952])
	$5 = CALL $10(($7 + [960]), ($7 + [280]))
	*((($7 + [672]) + [16])) = *(($1 + [16]))
	*((($7 + [672]) + [8])) = *(($1 + [8]))
	*($7 + [696]) = $3
	*($7 + [672]) = *($1)
	$3 = *($5)
	*($7 + [1184]) = [8617]
	*($7 + [1188]) = CALL $743([8617])
	*($7 + [272]) = *($7 + [1184])
	$5 = CALL $10(($7 + [1216]), ($7 + [272]))
	*($7 + [1200]) = [8344]
	*($7 + [1204]) = CALL $743([8344])
	*($7 + [264]) = *($7 + [1200])
	$4 = CALL $10(($7 + [648]), ($7 + [264]))
	*($7 + [1176]) = [8617]
	$10 = *($4)
	$12 = *($5)
	*($7 + [1180]) = CALL $743([8617])
	*($7 + [256]) = *($7 + [1176])
	$5 = CALL $10(($7 + [624]), ($7 + [256]))
	*($7 + [792]) = $3
	*($7 + [784]) = *($5)
	*(($5 = CALL _Znwj([16]))) = $12
	*($5 + [8]) = $10
	*(($7 + [820])) = [0]
	$4 = ($5 + [16])
	*((($7 + [784]) + [24])) = $4
	*(($7 + [804])) = $4
	*($7 + [800]) = $5
	*($7 + [812 align=4]) = (int_64)0
	CALL $11(($7 + [812]), [32])
	$5 = *((($7 + [784]) + [32]))
	$4 = *($7 + [812])
	*($7 + [452]) = $4
	*($7 + [448]) = $4
	*($7 + [456]) = $5
	CALL $156(($7 + [448]), ($7 + [672]))
	$4 = (($7 + [672]) + [24])
	$5 = *($7 + [452])
	if ( ((int_32)(*($7 + [456]) - $5) > (int_32)[7]) ){ goto $label$62 }
	CALL eosio_assert([0], [22875])
	$5 = *($7 + [452])
	
.LABEL $label$62
	CALL memcpy($5, $4, [8])
	CALL $13(($7 + [448]), ($7 + [784]))
	$5 = *($7 + [448])
	CALL send_inline($5, (*($7 + [452]) - $5))
	$5 = *($7 + [448])
	if ( ($5 == 0) ){ goto $label$63 }
	*($7 + [452]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$63
	$5 = *($7 + [812])
	if ( ($5 == 0) ){ goto $label$64 }
	*(($7 + [816])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$64
	$5 = *($7 + [800])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($7 + [804])) = $5
	CALL _ZdlPv($5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$34
	*($7 + [1008]) = [20778]
	*($7 + [1012]) = CALL $743([20778])
	*($7 + [376]) = *($7 + [1008])
	CALL $10(($7 + [1024]), ($7 + [376]))
	goto $label$31 
	
.LABEL $label$33
	*($7 + [1032]) = [20754]
	*($7 + [1036]) = CALL $743([20754])
	*($7 + [192]) = *($7 + [1032])
	$18 = CALL $10(($7 + [1040]), ($7 + [192]))
	$8 = [0]
	*($7 + [680]) = [0]
	*($7 + [672]) = (int_64)0
	$11 = *($5)
	if ( ((int_32)*($5 + [4]) != (int_32)$11) ){ goto $label$26 }
	$5 = [0]
	$8 = [0]
	$0 = [0]
	goto $label$25 
	
.LABEL $label$32
	*($7 + [1016]) = [20765]
	*($7 + [1020]) = CALL $743([20765])
	*($7 + [368]) = *($7 + [1016])
	CALL $10(($7 + [1024]), ($7 + [368]))
	
.LABEL $label$31
	$4 = [0]
	*($7 + [1224]) = [0]
	*($7 + [1216]) = (int_64)0
	$9 = *($5)
	if ( ((int_32)*($5 + [4]) != (int_32)$9) ){ goto $label$66 }
	$5 = [0]
	$4 = [0]
	$8 = [0]
	goto $label$65 
	
.LABEL $label$66
	$2 = ($5 + [4])
	$8 = [1]
	$11 = [0]
	$0 = [0]
	
.LOOP $label$67:
	$9 = *(($9 + $4))
	*($7 + [784]) = $9
	if ( ((uint_32)$0 >= (uint_32)$11) ){ goto $label$69 }
	*($0) = $9
	*($7 + [1220]) = (*($7 + [1220]) + [1])
	goto $label$68 
	
.LABEL $label$69
	CALL $154(($7 + [1216]), ($7 + [784]))
	
.LABEL $label$68
	$9 = *($5)
	if ( ((uint_32)$8 >= (uint_32)int_32((*($2) - $9) >> [3])) ){ goto $label$70 }
	$4 = ($4 + [8])
	$8 = ($8 + [1])
	$11 = *((($7 + [1216]) + [8]))
	$0 = *($7 + [1220])
	goto $label$67 
	
.LABEL $label$70
	$5 = *(($7 + [1224]))
	$4 = *($7 + [1220])
	$8 = *($7 + [1216])
	
.LABEL $label$65
	*(($7 + [820])) = $4
	*(($7 + [824])) = $5
	*((($7 + [1216]) + [8])) = [0]
	*(($7 + [836])) = [0]
	*((($7 + [784]) + [16])) = *(($1 + [16]))
	*((($7 + [784]) + [8])) = *(($1 + [8]))
	*($7 + [808]) = $3
	*($7 + [816]) = $8
	*($7 + [1216]) = (int_64)0
	*($7 + [828 align=4]) = (int_64)0
	*($7 + [784]) = *($1)
	$5 = (*($6 + [4]) - *($6))
	if ( ($5 == 0) ){ goto $label$71 }
	$8 = int_32($5 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$10 }
	$5 = CALL _Znwj($5)
	*(($7 + [828])) = $5
	*(($4 = ($7 + [832]))) = $5
	*(($7 + [836])) = ($5 + ($8 << [4]))
	$0 = *($6)
	$8 = (*(($6 + [4])) - $0)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$71 }
	CALL memcpy($5, $0, $8)
	*($4) = (*($4) + $8)
	
.LABEL $label$71
	$3 = *($7 + [1024])
	*($7 + [648]) = [8617]
	*($7 + [652]) = CALL $743([8617])
	*($7 + [360]) = *($7 + [648])
	$5 = CALL $10(($7 + [1184]), ($7 + [360]))
	*($7 + [624]) = [8344]
	*($7 + [628]) = CALL $743([8344])
	*($7 + [352]) = *($7 + [624])
	$4 = CALL $10(($7 + [1200]), ($7 + [352]))
	*($7 + [1152]) = [8617]
	$10 = *($4)
	$12 = *($5)
	*($7 + [1156]) = CALL $743([8617])
	*($7 + [344]) = *($7 + [1152])
	$5 = CALL $10(($7 + [1176]), ($7 + [344]))
	*($7 + [680]) = $3
	*($7 + [672]) = *($5)
	*(($5 = CALL _Znwj([16]))) = $12
	*($5 + [8]) = $10
	$4 = ($5 + [16])
	*(($7 + [696])) = $4
	*(($7 + [692])) = $4
	*($7 + [688]) = $5
	CALL $157(($7 + [700]), ($7 + [784]))
	CALL $13(($7 + [448]), ($7 + [672]))
	$5 = *($7 + [448])
	CALL send_inline($5, (*($7 + [452]) - $5))
	$5 = *($7 + [448])
	if ( ($5 == 0) ){ goto $label$72 }
	*($7 + [452]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$72
	$5 = *($7 + [700])
	if ( ($5 == 0) ){ goto $label$73 }
	*(($7 + [704])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$73
	$5 = *($7 + [688])
	if ( ($5 == 0) ){ goto $label$74 }
	*(($7 + [692])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$74
	$5 = *($7 + [828])
	if ( ($5 == 0) ){ goto $label$75 }
	*(($7 + [832])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$75
	$5 = *($7 + [816])
	if ( ($5 == 0) ){ goto $label$76 }
	*(($7 + [820])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$76
	$5 = *($7 + [1216])
	if ( ($5 == 0) ){ goto $label$15 }
	*($7 + [1220]) = $5
	CALL _ZdlPv($5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$30
	*($7 + [768]) = [8617]
	*($7 + [772]) = CALL $743([8617])
	*($7 + [336]) = *($7 + [768])
	$8 = CALL $10(($7 + [776]), ($7 + [336]))
	*($7 + [752]) = [8344]
	*($7 + [756]) = CALL $743([8344])
	*($7 + [328]) = *($7 + [752])
	$0 = CALL $10(($7 + [760]), ($7 + [328]))
	$10 = *(($7 + [1120]))
	$12 = *($0)
	$13 = *($8)
	*($7 + [736]) = [20617]
	*($7 + [740]) = CALL $743([20617])
	*($7 + [320]) = *($7 + [736])
	$8 = CALL $10(($7 + [744]), ($7 + [320]))
	*((($7 + [784]) + [16])) = *(($1 + [16]))
	*(($7 + [840])) = *(($4 + [8]))
	*(($7 + [848])) = *(($4 + [16]))
	*(($7 + [856])) = *(($4 + [24]))
	*($7 + [808]) = [15]
	*($7 + [816]) = $3
	*($7 + [864]) = [0]
	*($7 + [792]) = *(($1 + [8]))
	*($7 + [784]) = *($1)
	*($7 + [832]) = *($4)
	*(($7 + [868])) = (int_64)0
	$4 = (*($5 + [4]) - *($5))
	if ( ($4 == 0) ){ goto $label$77 }
	$9 = int_32($4 >> [3])
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$6 }
	$4 = CALL _Znwj($4)
	*(($7 + [864])) = $4
	*(($0 = ($7 + [868]))) = $4
	*(($7 + [872])) = ($4 + ($9 << [3]))
	$9 = *($5)
	$5 = (*(($5 + [4])) - $9)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$77 }
	CALL memcpy($4, $9, $5)
	*($0) = (*($0) + $5)
	
.LABEL $label$77
	*(($7 + [884])) = [0]
	*($7 + [876 align=4]) = (int_64)0
	$5 = (*($6 + [4]) - *($6))
	if ( ($5 == 0) ){ goto $label$78 }
	$0 = int_32($5 >> [4])
	if ( ((uint_32)$0 >= (uint_32)[268435456]) ){ goto $label$5 }
	$5 = CALL _Znwj($5)
	*(($7 + [876])) = $5
	*(($4 = ($7 + [880]))) = $5
	*(($7 + [884])) = ($5 + ($0 << [4]))
	$9 = *($6)
	$0 = (*(($6 + [4])) - $9)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$78 }
	CALL memcpy($5, $9, $0)
	*($4) = (*($4) + $0)
	
.LABEL $label$78
	*($7 + [672]) = $10
	*($7 + [680]) = *($8)
	*(($5 = CALL _Znwj([16]))) = $13
	*($5 + [8]) = $12
	$4 = ($5 + [16])
	*(($7 + [696])) = $4
	*(($7 + [692])) = $4
	*($7 + [688]) = $5
	CALL $158(($7 + [700]), ($7 + [784]))
	CALL $13(($7 + [448]), ($7 + [672]))
	$5 = *($7 + [448])
	CALL send_inline($5, (*($7 + [452]) - $5))
	$5 = *($7 + [448])
	if ( ($5 == 0) ){ goto $label$79 }
	*($7 + [452]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$79
	$5 = *($7 + [700])
	if ( ($5 == 0) ){ goto $label$80 }
	*(($7 + [704])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$80
	$5 = *($7 + [688])
	if ( ($5 == 0) ){ goto $label$81 }
	*(($7 + [692])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$81
	$5 = *($7 + [876])
	if ( ($5 == 0) ){ goto $label$82 }
	*(($7 + [880])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$82
	$5 = *($7 + [864])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($7 + [868])) = $5
	CALL _ZdlPv($5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$29
	*($7 + [1064]) = [20791]
	*($7 + [1068]) = CALL $743([20791])
	*($7 + [176]) = *($7 + [1064])
	$4 = CALL $10(($7 + [1072]), ($7 + [176]))
	$10 = *(*($5))
	*((($7 + [672]) + [8])) = *(($1 + [8]))
	*((($7 + [672]) + [16])) = *(($1 + [16]))
	*($7 + [672]) = *($1)
	*($7 + [696]) = $3
	*($7 + [704]) = $10
	$3 = *($4)
	*($7 + [1184]) = [8617]
	*($7 + [1188]) = CALL $743([8617])
	*($7 + [168]) = *($7 + [1184])
	$5 = CALL $10(($7 + [1216]), ($7 + [168]))
	*($7 + [1200]) = [8344]
	*($7 + [1204]) = CALL $743([8344])
	*($7 + [160]) = *($7 + [1200])
	$4 = CALL $10(($7 + [648]), ($7 + [160]))
	*($7 + [1176]) = [8617]
	$10 = *($4)
	$12 = *($5)
	*($7 + [1180]) = CALL $743([8617])
	*($7 + [152]) = *($7 + [1176])
	$5 = CALL $10(($7 + [624]), ($7 + [152]))
	*($7 + [792]) = $3
	*($7 + [784]) = *($5)
	*(($5 = CALL _Znwj([16]))) = $12
	*($5 + [8]) = $10
	*(($7 + [820])) = [0]
	$4 = ($5 + [16])
	*(($7 + [808])) = $4
	*(($7 + [804])) = $4
	*($7 + [800]) = $5
	*($7 + [812 align=4]) = (int_64)0
	CALL $11(($7 + [812]), [33])
	$5 = *(($7 + [816]))
	$4 = *($7 + [812])
	*($7 + [452]) = $4
	*($7 + [448]) = $4
	*($7 + [456]) = $5
	*($7 + [1168]) = ($7 + [448])
	*($7 + [1152]) = ($7 + [672])
	CALL $159(($7 + [1152]), ($7 + [1168]))
	CALL $13(($7 + [448]), ($7 + [784]))
	$5 = *($7 + [448])
	CALL send_inline($5, (*($7 + [452]) - $5))
	$5 = *($7 + [448])
	if ( ($5 == 0) ){ goto $label$83 }
	*($7 + [452]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$83
	$5 = *($7 + [812])
	if ( ($5 == 0) ){ goto $label$84 }
	*(($7 + [816])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$84
	$5 = *($7 + [800])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($7 + [804])) = $5
	CALL _ZdlPv($5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$28
	$10 = *(($1 + [16]))
	*((($7 + [984]) + [16])) = $10
	$12 = *(($1 + [8]))
	*((($7 + [984]) + [8])) = $12
	$13 = *($1)
	*($7 + [984]) = $13
	$5 = *(*($5))
	*((($7 + [200]) + [16])) = $10
	*((($7 + [200]) + [8])) = $12
	*($7 + [200]) = $13
	CALL $100($0, ($7 + [200]), $3, $5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$27
	*($7 + [1048]) = [20743]
	*($7 + [1052]) = CALL $743([20743])
	*($7 + [184]) = *($7 + [1048])
	$18 = CALL $10(($7 + [1056]), ($7 + [184]))
	$8 = [0]
	*($7 + [680]) = [0]
	*($7 + [672]) = (int_64)0
	$11 = *($5)
	if ( ((int_32)*($5 + [4]) != (int_32)$11) ){ goto $label$24 }
	$5 = [0]
	$8 = [0]
	$0 = [0]
	goto $label$23 
	
.LABEL $label$26
	$17 = ($5 + [4])
	$0 = [1]
	$2 = [0]
	$9 = [0]
	
.LOOP $label$85:
	$11 = *(($11 + $8))
	*($7 + [784]) = $11
	if ( ((uint_32)$9 >= (uint_32)$2) ){ goto $label$87 }
	*($9) = $11
	*($7 + [676]) = (*($7 + [676]) + [1])
	goto $label$86 
	
.LABEL $label$87
	CALL $154(($7 + [672]), ($7 + [784]))
	
.LABEL $label$86
	$11 = *($5)
	if ( ((uint_32)$0 >= (uint_32)int_32((*($17) - $11) >> [3])) ){ goto $label$88 }
	$8 = ($8 + [8])
	$0 = ($0 + [1])
	$2 = *((($7 + [672]) + [8]))
	$9 = *($7 + [676])
	goto $label$85 
	
.LABEL $label$88
	$5 = *(($7 + [680]))
	$8 = *($7 + [676])
	$0 = *($7 + [672])
	
.LABEL $label$25
	*(($7 + [860])) = $8
	*((($7 + [784]) + [16])) = *(($1 + [16]))
	*(($7 + [824])) = *(($4 + [8]))
	*(($7 + [832])) = *(($4 + [16]))
	*(($7 + [840])) = *(($4 + [24]))
	*($7 + [848]) = $3
	*($7 + [856]) = $0
	*($7 + [784]) = *($1)
	*($7 + [816]) = *($4)
	*($7 + [792]) = *(($1 + [8]))
	*((($7 + [672]) + [8])) = [0]
	*(($7 + [864])) = $5
	*(($7 + [876])) = [0]
	*($7 + [672]) = (int_64)0
	*($7 + [868 align=4]) = (int_64)0
	$5 = (*($6 + [4]) - *($6))
	if ( ($5 == 0) ){ goto $label$89 }
	$8 = int_32($5 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$9 }
	$5 = CALL _Znwj($5)
	*(($7 + [868])) = $5
	*(($4 = ($7 + [872]))) = $5
	*(($7 + [876])) = ($5 + ($8 << [4]))
	$0 = *($6)
	$8 = (*(($6 + [4])) - $0)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$89 }
	CALL memcpy($5, $0, $8)
	*($4) = (*($4) + $8)
	
.LABEL $label$89
	CALL $160(*($18), ($7 + [784]))
	$5 = *($7 + [868])
	if ( ($5 == 0) ){ goto $label$90 }
	*(($7 + [872])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$90
	$5 = *($7 + [856])
	if ( ($5 == 0) ){ goto $label$91 }
	*(($7 + [860])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$91
	$5 = *($7 + [672])
	if ( ($5 == 0) ){ goto $label$15 }
	*($7 + [676]) = $5
	CALL _ZdlPv($5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$24
	$17 = ($5 + [4])
	$0 = [1]
	$2 = [0]
	$9 = [0]
	
.LOOP $label$92:
	$11 = *(($11 + $8))
	*($7 + [784]) = $11
	if ( ((uint_32)$9 >= (uint_32)$2) ){ goto $label$94 }
	*($9) = $11
	*($7 + [676]) = (*($7 + [676]) + [1])
	goto $label$93 
	
.LABEL $label$94
	CALL $154(($7 + [672]), ($7 + [784]))
	
.LABEL $label$93
	$11 = *($5)
	if ( ((uint_32)$0 >= (uint_32)int_32((*($17) - $11) >> [3])) ){ goto $label$95 }
	$8 = ($8 + [8])
	$0 = ($0 + [1])
	$2 = *((($7 + [672]) + [8]))
	$9 = *($7 + [676])
	goto $label$92 
	
.LABEL $label$95
	$5 = *(($7 + [680]))
	$8 = *($7 + [676])
	$0 = *($7 + [672])
	
.LABEL $label$23
	*(($7 + [860])) = $8
	*((($7 + [784]) + [16])) = *(($1 + [16]))
	*(($7 + [824])) = *(($4 + [8]))
	*(($7 + [832])) = *(($4 + [16]))
	*(($7 + [840])) = *(($4 + [24]))
	*($7 + [848]) = $3
	*($7 + [856]) = $0
	*($7 + [784]) = *($1)
	*($7 + [816]) = *($4)
	*($7 + [792]) = *(($1 + [8]))
	*((($7 + [672]) + [8])) = [0]
	*(($7 + [864])) = $5
	*(($7 + [876])) = [0]
	*($7 + [672]) = (int_64)0
	*($7 + [868 align=4]) = (int_64)0
	$5 = (*($6 + [4]) - *($6))
	if ( ($5 == 0) ){ goto $label$96 }
	$8 = int_32($5 >> [4])
	if ( ((uint_32)$8 >= (uint_32)[268435456]) ){ goto $label$4 }
	$5 = CALL _Znwj($5)
	*(($7 + [868])) = $5
	*(($4 = ($7 + [872]))) = $5
	*(($7 + [876])) = ($5 + ($8 << [4]))
	$0 = *($6)
	$8 = (*(($6 + [4])) - $0)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$96 }
	CALL memcpy($5, $0, $8)
	*($4) = (*($4) + $8)
	
.LABEL $label$96
	CALL $160(*($18), ($7 + [784]))
	$5 = *($7 + [868])
	if ( ($5 == 0) ){ goto $label$97 }
	*(($7 + [872])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$97
	$5 = *($7 + [856])
	if ( ($5 == 0) ){ goto $label$98 }
	*(($7 + [860])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$98
	$5 = *($7 + [672])
	if ( ($5 == 0) ){ goto $label$15 }
	*($7 + [676]) = $5
	CALL _ZdlPv($5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$22
	CALL $161($6, ($7 + [448]))
	
.LABEL $label$21
	*($7 + [928]) = [8617]
	*($7 + [932]) = CALL $743([8617])
	*($7 + [304]) = *($7 + [928])
	$8 = CALL $10(($7 + [936]), ($7 + [304]))
	*($7 + [912]) = [8344]
	*($7 + [916]) = CALL $743([8344])
	*($7 + [296]) = *($7 + [912])
	$0 = CALL $10(($7 + [920]), ($7 + [296]))
	$10 = *(($7 + [1120]))
	$12 = *($0)
	$13 = *($8)
	*($7 + [896]) = [20617]
	*($7 + [900]) = CALL $743([20617])
	*($7 + [288]) = *($7 + [896])
	$8 = CALL $10(($7 + [904]), ($7 + [288]))
	*((($7 + [784]) + [16])) = *(($1 + [16]))
	*(($7 + [840])) = *(($4 + [8]))
	*(($7 + [848])) = *(($4 + [16]))
	*(($7 + [856])) = *(($4 + [24]))
	*($7 + [808]) = [14]
	*($7 + [816]) = $3
	*($7 + [864]) = [0]
	*($7 + [792]) = *(($1 + [8]))
	*($7 + [784]) = *($1)
	*($7 + [832]) = *($4)
	*(($7 + [868])) = (int_64)0
	$4 = (*(($5 + [4])) - *($5))
	if ( ($4 == 0) ){ goto $label$99 }
	$9 = int_32($4 >> [3])
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$8 }
	$4 = CALL _Znwj($4)
	*(($7 + [864])) = $4
	*(($0 = ($7 + [868]))) = $4
	*(($7 + [872])) = ($4 + ($9 << [3]))
	$9 = *($5)
	$5 = (*(($5 + [4])) - $9)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$99 }
	CALL memcpy($4, $9, $5)
	*($0) = (*($0) + $5)
	
.LABEL $label$99
	*(($7 + [884])) = [0]
	*($7 + [876 align=4]) = (int_64)0
	$5 = (*(($6 + [4])) - *($6))
	if ( ($5 == 0) ){ goto $label$100 }
	$0 = int_32($5 >> [4])
	if ( ((uint_32)$0 >= (uint_32)[268435456]) ){ goto $label$7 }
	$5 = CALL _Znwj($5)
	*(($7 + [876])) = $5
	*(($4 = ($7 + [880]))) = $5
	*(($7 + [884])) = ($5 + ($0 << [4]))
	$9 = *($6)
	$0 = (*(($6 + [4])) - $9)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$100 }
	CALL memcpy($5, $9, $0)
	*($4) = (*($4) + $0)
	
.LABEL $label$100
	*($7 + [672]) = $10
	*($7 + [680]) = *($8)
	*(($5 = CALL _Znwj([16]))) = $13
	*($5 + [8]) = $12
	$4 = ($5 + [16])
	*(($7 + [696])) = $4
	*(($7 + [692])) = $4
	*($7 + [688]) = $5
	CALL $158(($7 + [700]), ($7 + [784]))
	CALL $13(($7 + [1216]), ($7 + [672]))
	$5 = *($7 + [1216])
	CALL send_inline($5, (*($7 + [1220]) - $5))
	$5 = *($7 + [1216])
	if ( ($5 == 0) ){ goto $label$101 }
	*($7 + [1220]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$101
	$5 = *($7 + [700])
	if ( ($5 == 0) ){ goto $label$102 }
	*(($7 + [704])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$102
	$5 = *($7 + [688])
	if ( ($5 == 0) ){ goto $label$103 }
	*(($7 + [692])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$103
	$5 = *($7 + [876])
	if ( ($5 == 0) ){ goto $label$104 }
	*(($7 + [880])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$104
	$5 = *($7 + [864])
	if ( ($5 == 0) ){ goto $label$15 }
	*(($7 + [868])) = $5
	CALL _ZdlPv($5)
	$5 = *($7 + [1128])
	if ( $5 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$20
	$9 = (($8 + [16]) & [-16])
	$0 = CALL _Znwj($9)
	*($7 + [488]) = ($9 | [1])
	*($7 + [496]) = $0
	*($7 + [492]) = $8
	
.LABEL $label$19
	CALL memcpy($0, [21840], $8)
	
.LABEL $label$18
	*(($0 + $8)) = [0]
	*((($7 + [48]) + [16])) = *((($7 + [520]) + [16]))
	*((($7 + [48]) + [8])) = *((($7 + [520]) + [8]))
	*((($7 + [32]) + [8])) = *((($7 + [504]) + [8]))
	*($7 + [48]) = *($7 + [520])
	*($7 + [32]) = *($7 + [504])
	CALL $162(($7 + [48]), ($7 + [32]), ($7 + [488]), [4])
	if ( ((*($7 + [488]) & [1]) == 0) ){ goto $label$17 }
	CALL _ZdlPv(*($7 + [496]))
	
.LABEL $label$17
	if ( (*($7 + [1113]) == 0) ){ goto $label$105 }
	if ( (*($7 + [1114]) == 0) ){ goto $label$105 }
	if ( *([0] + [8632]) ){ goto $label$106 }
	$8 = CALL _Znwj([280])
	CALL $111($8)
	*([0] + [8632]) = $8
	
.LABEL $label$106
	CALL $163($7, $1, ($7 + [648]), $2)
	
.LABEL $label$105
	if ( ((*(($7 + [816])) & [1]) == 0) ){ goto $label$16 }
	CALL _ZdlPv(*(($7 + [824])))
	
.LABEL $label$16
	*($7 + [432]) = [8617]
	*($7 + [436]) = CALL $743([8617])
	*($7 + [24]) = *($7 + [432])
	$8 = CALL $10(($7 + [440]), ($7 + [24]))
	*($7 + [416]) = [8344]
	*($7 + [420]) = CALL $743([8344])
	*($7 + [16]) = *($7 + [416])
	$0 = CALL $10(($7 + [424]), ($7 + [16]))
	$10 = *(($7 + [1120]))
	$12 = *($0)
	$13 = *($8)
	*($7 + [400]) = [20617]
	*($7 + [404]) = CALL $743([20617])
	*($7 + [8]) = *($7 + [400])
	$8 = CALL $10(($7 + [408]), ($7 + [8]))
	*((($7 + [784]) + [16])) = *(($1 + [16]))
	*(($7 + [840])) = *(($4 + [8]))
	*(($7 + [848])) = *(($4 + [16]))
	*(($7 + [856])) = *(($4 + [24]))
	*($7 + [808]) = $2
	*($7 + [816]) = $3
	*($7 + [864]) = [0]
	*($7 + [792]) = *(($1 + [8]))
	*($7 + [784]) = *($1)
	*($7 + [832]) = *($4)
	*(($7 + [868])) = (int_64)0
	$4 = (*($5 + [4]) - *($5))
	if ( ($4 == 0) ){ goto $label$107 }
	$9 = int_32($4 >> [3])
	if ( ((uint_32)$9 >= (uint_32)[536870912]) ){ goto $label$12 }
	$4 = CALL _Znwj($4)
	*(($7 + [864])) = $4
	*(($0 = ($7 + [868]))) = $4
	*(($7 + [872])) = ($4 + ($9 << [3]))
	$9 = *($5)
	$5 = (*(($5 + [4])) - $9)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$107 }
	CALL memcpy($4, $9, $5)
	*($0) = (*($0) + $5)
	
.LABEL $label$107
	*(($7 + [884])) = [0]
	*($7 + [876 align=4]) = (int_64)0
	$5 = (*($6 + [4]) - *($6))
	if ( ($5 == 0) ){ goto $label$108 }
	$0 = int_32($5 >> [4])
	if ( ((uint_32)$0 >= (uint_32)[268435456]) ){ goto $label$11 }
	$5 = CALL _Znwj($5)
	*(($7 + [876])) = $5
	*(($4 = ($7 + [880]))) = $5
	*(($7 + [884])) = ($5 + ($0 << [4]))
	$9 = *($6)
	$0 = (*(($6 + [4])) - $9)
	if ( ((int_32)$0 < (int_32)[1]) ){ goto $label$108 }
	CALL memcpy($5, $9, $0)
	*($4) = (*($4) + $0)
	
.LABEL $label$108
	*($7 + [448]) = $10
	*($7 + [456]) = *($8)
	*(($5 = CALL _Znwj([16]))) = $13
	*($5 + [8]) = $12
	$4 = ($5 + [16])
	*(($7 + [472])) = $4
	*(($7 + [468])) = $4
	*($7 + [464]) = $5
	CALL $158(($7 + [476]), ($7 + [784]))
	CALL $13(($7 + [1216]), ($7 + [448]))
	$5 = *($7 + [1216])
	CALL send_inline($5, (*($7 + [1220]) - $5))
	$5 = *($7 + [1216])
	if ( ($5 == 0) ){ goto $label$109 }
	*($7 + [1220]) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$109
	$5 = *($7 + [476])
	if ( ($5 == 0) ){ goto $label$110 }
	*(($7 + [480])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$110
	$5 = *($7 + [464])
	if ( ($5 == 0) ){ goto $label$111 }
	*(($7 + [468])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$111
	$5 = *($7 + [876])
	if ( ($5 == 0) ){ goto $label$112 }
	*(($7 + [880])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$112
	$5 = *($7 + [864])
	if ( ($5 == 0) ){ goto $label$113 }
	*(($7 + [868])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$113
	CALL $164(($7 + [672]))
	
.LABEL $label$15
	$5 = *($7 + [1128])
	if ( ($5 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	*(($7 + [1132])) = $5
	CALL _ZdlPv($5)
	
.LABEL $label$13
	if ( ((*($7 + [1092]) & [1]) == 0) ){ goto $label$114 }
	CALL _ZdlPv(*(($7 + [1100])))
	
.LABEL $label$114
	$global$0 = ($7 + [1232])
	return (unreachable)
	
.LABEL $label$12
	CALL $727(($7 + [864]))
	
.LABEL $label$11
	CALL $727(($7 + [876]))
	
.LABEL $label$10
	CALL $727(($7 + [828]))
	
.LABEL $label$9
	CALL $727(($7 + [868]))
	
.LABEL $label$8
	CALL $727(($7 + [864]))
	
.LABEL $label$7
	CALL $727(($7 + [876]))
	
.LABEL $label$6
	CALL $727(($7 + [864]))
	
.LABEL $label$5
	CALL $727(($7 + [876]))
	
.LABEL $label$4
	CALL $727(($7 + [868]))
	
.LABEL $label$3
	CALL $708(($7 + [488]))
	$2
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC $30 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [320])
	$global$0 = $3
	*(($4 = $3) + [312]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $746($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = (int_64)0
	*(($4 + [308])) = [0]
	*($4 + [264]) = [0]
	*($4 + [256]) = (int_64)0
	*($4 + [272]) = (int_64)0
	*($4 + [296]) = [0]
	*($4 + [300 align=4]) = (int_64)0
	*($4 + [244]) = $2
	*($4 + [240]) = $2
	*($4 + [248]) = ($2 + $5)
	CALL $184(($4 + [240]), ($4 + [256]))
	CALL $168(($4 + [240]), ($4 + [272]))
	$6 = ($4 + [296])
	$3 = *($4 + [244])
	if ( ((int_32)*($4 + [248]) != (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$3 = *($4 + [244])
	
.LABEL $label$4
	CALL memcpy($6, $3, [1])
	*($4 + [244]) = (*($4 + [244]) + [1])
	$3 = ($4 + [300])
	CALL $170(($4 + [240]), $3)
	$6 = *((($4 + [240]) + [8]))
	*((($4 + [24]) + [8])) = $6
	*(($4 + [8])) = $6
	$7 = *($4 + [240])
	*($4) = $7
	*($4 + [24]) = $7
	$6 = CALL $20(($4 + [40]), $0, $1, $4)
	*($4 + [16]) = $6
	*($4 + [20]) = ($4 + [312])
	CALL $232(($4 + [16]), ($4 + [256]))
	if ( ($5 <= [513]) ){ goto $label$5 }
	CALL $749($2)
	
.LABEL $label$5
	CALL $24($6)
	$2 = *($3)
	if ( ($2 == 0) ){ goto $label$6 }
	*(($4 + [304])) = $2
	CALL _ZdlPv($2)
	
.LABEL $label$6
	if ( ((*($4 + [256]) & [1]) == 0) ){ goto $label$7 }
	CALL _ZdlPv(*(($4 + [264])))
	
.LABEL $label$7
	$global$0 = ($4 + [320])
	return [1]
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [256])
	$global$0 = $2
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$1 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$1
	CALL $141(($2 + [112]), $3, *($1 + [60]))
	CALL require_auth(*($2 + [144]))
	*($2 + [104]) = [8617]
	*($2 + [108]) = CALL $743([8617])
	*($2 + [8]) = *($2 + [104])
	$3 = CALL $10(($2 + [192]), ($2 + [8]))
	if ( ((int_64)*($2 + [144]) == (int_64)*($3)) ){ goto $label$2 }
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$3 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$3
	$3 = ($3 + [160])
	CALL $142(($2 + [192]), $3)
	$5 = ((int_64)*($2 + [200]) + (int_64)1)
	*($2 + [200]) = $5
	*($2 + [176]) = [8617]
	*($2 + [180]) = CALL $743([8617])
	*($2) = *($2 + [176])
	CALL $113($3, ($2 + [192]), *(CALL $10(($2 + [184]), $2)))
	$3 = *($2 + [240])
	if ( ($3 == 0) ){ goto $label$4 }
	*(($2 + [244])) = $3
	CALL _ZdlPv($3)
	
.LABEL $label$4
	*($2 + [184]) = $5
	if ( ((int_64)*($1) == (int_64)$5) ){ goto $label$2 }
	CALL $143(($2 + [192]), [21404], $1, [21455], ($2 + [184]))
	if ( (*($2 + [192]) & [1]) ){ goto $label$6 }
	$3 = (($2 + [192]) | [1])
	goto $label$5 
	
.LABEL $label$6
	$3 = *($2 + [200])
	CALL _ZdlPv($3)
	
.LABEL $label$5
	CALL eosio_assert([0], $3)
	
.LABEL $label$2
	$3 = *([0] + [8632])
	if ( $3 ){ goto $label$7 }
	$4 = CALL _Znwj([280])
	$3 = CALL $111($4)
	*([0] + [8632]) = $4
	
.LABEL $label$7
	*(($2 + [72])) = [0]
	*((($2 + [16]) + [40])) = *(($1 + [40]))
	*((($2 + [16]) + [32])) = *(($1 + [32]))
	*((($2 + [16]) + [24])) = *(($1 + [24]))
	*((($2 + [16]) + [16])) = *(($1 + [16]))
	*($2 + [64]) = (int_64)0
	*($2 + [16]) = *($1)
	*($2 + [24]) = *(($1 + [8]))
	$4 = (*(($1 + [52])) - *($1 + [48]))
	if ( ($4 == 0) ){ goto $label$9 }
	$6 = int_32($4 >> [3])
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$8 }
	$4 = CALL _Znwj($4)
	*((($2 + [16]) + [48])) = $4
	*(($7 = (($2 + [16]) + [52]))) = $4
	*(($2 + [72])) = ($4 + ($6 << [3]))
	$8 = *(($1 + [48]))
	$6 = (*(($1 + [52])) - $8)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($4, $8, $6)
	*($7) = (*($7) + $6)
	
.LABEL $label$9
	$1 = ($1 + [60])
	*(($2 + [92])) = *(($1 + [16]))
	*(($2 + [84])) = *(($1 + [8]))
	*($2 + [76 align=4]) = *($1)
	CALL $144($3, ($2 + [16]))
	$1 = *($2 + [64])
	if ( ($1 == 0) ){ goto $label$10 }
	*(($2 + [68])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$10
	$1 = *($2 + [152])
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [156])) = $1
	CALL _ZdlPv($1)
	
.LABEL $label$11
	if ( ((*($2 + [116]) & [1]) == 0) ){ goto $label$12 }
	CALL _ZdlPv(*(($2 + [124])))
	
.LABEL $label$12
	$global$0 = ($2 + [256])
	return (unreachable)
	
.LABEL $label$8
	CALL $727(($2 + [64]))
}

void .FUNC $281 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$5 = ($global$0 - [32])
	$global$0 = $5
	*(($5 + [24])) = [0]
	*($5 + [16]) = (int_64)0
	$6 = CALL $743($1)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$4 }
	*($5 + [16]) = ($6 << [1])
	$7 = (($5 + [16]) | [1])
	if ( $6 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = (($6 + [16]) & [-16])
	$7 = CALL _Znwj($8)
	*($5 + [16]) = ($8 | [1])
	*($5 + [24]) = $7
	*($5 + [20]) = $6
	
.LABEL $label$3
	CALL memcpy($7, $1, $6)
	
.LABEL $label$2
	*(($7 + $6)) = [0]
	CALL $558($5, $2, $3, $4)
	$6 = *($5)
	$7 = ($6 & [1])
	$6 = CALL $716(($5 + [16]), ( *($5 + [8]) ? ($5 | [1]) : $7 ), ( *($5 + [4]) ? uint_32($6 >> [1]) : $7 ))
	$9 = *($6)
	*($6) = (int_64)0
	*($0) = $9
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($5) & [1]) == 0) ){ goto $label$5 }
	CALL _ZdlPv(*(($5 + [8])))
	
.LABEL $label$5
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$6 }
	CALL _ZdlPv(*($5 + [24]))
	
.LABEL $label$6
	$global$0 = ($5 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL $708(($5 + [16]))
}

void .FUNC $538 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[48]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[48])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[89478486]) ){ goto $label$3 }
	$6 = [89478485]
	$2 = ((int_32)($2 - $4) / (int_32)[48])
	if ( ((uint_32)$2 > (uint_32)[44739241]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$4 = CALL _Znwj(((int_32)$6 * (int_32)[48]))
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$6 = CALL $743([22881])
	if ( ($6 <= [8]) ){ goto $label$10 }
	CALL eosio_assert([0], [29586])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$9 }
	$9 = (int_64)4
	goto $label$8 
	
.LABEL $label$9
	$9 = (int_64)0
	
.LOOP $label$11:
	$2 = *(($6 + [22880]))
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$12 }
	CALL eosio_assert([0], [29631])
	
.LABEL $label$12
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$11 }
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	
.LABEL $label$8
	*($3 + [16]) = (int_64)0
	*($3 + [32]) = [1000000000]
	*($3) = $9
	*(($3 + [24])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = (*($0) + [48])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$4 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $727($0)
	
.LABEL $label$2
	$7 = ($4 + ((int_32)$6 * (int_32)[48]))
	$8 = ($4 + ((int_32)$3 * (int_32)[48]))
	$3 = $8
	
.LOOP $label$13:
	*($3 + [8]) = (int_64)0
	*($3) = (int_64)0
	$6 = CALL $743([22881])
	if ( ($6 <= [8]) ){ goto $label$16 }
	CALL eosio_assert([0], [29586])
	goto $label$15 
	
.LABEL $label$16
	if ( $6 ){ goto $label$15 }
	$9 = (int_64)4
	goto $label$14 
	
.LABEL $label$15
	$9 = (int_64)0
	
.LOOP $label$17:
	$2 = *(($6 + [22880]))
	if ( ((($2 + [-65]) & [255]) <= [26]) ){ goto $label$18 }
	CALL eosio_assert([0], [29631])
	
.LABEL $label$18
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$17 }
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	
.LABEL $label$14
	*($3 + [16]) = (int_64)0
	*($3 + [32]) = [1000000000]
	*($3) = $9
	*(($3 + [24])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	$3 = ($3 + [48])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$13 }
	$1 = ($4 + ((int_32)$5 * (int_32)[48]))
	$6 = *($0)
	$4 = ($0 + [4])
	$2 = (*($4) - $6)
	$3 = ($8 + ((int_32)((int_32)$2 / (int_32)[-48]) * (int_32)[48]))
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$19 }
	CALL memcpy($3, $6, $2)
	$6 = *($0)
	
.LABEL $label$19
	*($0) = $3
	*($4) = $1
	*(($0 + [8])) = $7
	if ( ($6 == 0) ){ goto $label$1 }
	CALL _ZdlPv($6)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $539 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [8]) = (int_64)0
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [28806])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy(($2 + [8]), $3, [8])
	*($1) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [28806])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[15]) ){ goto $label$3 }
	CALL eosio_assert([0], [28806])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [16])
	$4 = (*($3) + [16])
	*(($3 = ($0 + [4]))) = $4
	$1 = ($1 + [32])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[3]) ){ goto $label$4 }
	CALL eosio_assert([0], [28806])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($1, $4, [4])
	*($3) = (*($3) + [4])
	$global$0 = ($2 + [16])
	return $0
}