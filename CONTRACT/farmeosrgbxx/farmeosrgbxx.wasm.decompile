(data (i32.const 4) "`l\00\00")
(data (i32.const 16) "onlyforaddfund\00")
(data (i32.const 32) "only accepts EOS or FOS\00")
(data (i32.const 64) "must purchase a positive amount\00")
(data (i32.const 96) "The bet amount exceeds the upper limit (50) of the bet.\00")
(data (i32.const 160) "invalid symbol name\00")
(data (i32.const 192) "RGB not find global\00")
(data (i32.const 224) "RGB not start\00")
(data (i32.const 240) "attempt to subtract asset with different symbol\00")
(data (i32.const 288) "subtraction underflow\00")
(data (i32.const 320) "subtraction overflow\00")
(data (i32.const 352) "The EOS amount exceeds the upper limit of the bet.\00")
(data (i32.const 416) "The FOS amount exceeds the upper limit of the bet.\00")
(data (i32.const 480) " \00")
(data (i32.const 496) "err memo\00")
(data (i32.const 512) ",\00")
(data (i32.const 528) "err bet array\00")
(data (i32.const 544) "err bet array, value must be greater than 0.\00")
(data (i32.const 592) "?EOS=\00")
(data (i32.const 608) "err bet array, not equals EOS quantity\00")
(data (i32.const 656) "before 1 record_bet\00")
(data (i32.const 688) "after 1 record_bet\00")
(data (i32.const 720) "before 2 record_bet\00")
(data (i32.const 752) "after 2 record_bet\00")
(data (i32.const 784) "before 3 record_bet\00")
(data (i32.const 816) "?FOS=\00")
(data (i32.const 832) "err bet array, not equals FOS quantity\00")
(data (i32.const 880) "farmeosbank4\00")
(data (i32.const 896) "multiplication overflow\00")
(data (i32.const 928) "multiplication underflow\00")
(data (i32.const 960) "divide by zero\00")
(data (i32.const 976) "signed division overflow\00")
(data (i32.const 1008) "active\00")
(data (i32.const 1024) "farmeosbank2\00")
(data (i32.const 1040) "buyfarm\00")
(data (i32.const 1056) "eosio.token\00")
(data (i32.const 1072) "transfer\00")
(data (i32.const 1088) "buy token\00")
(data (i32.const 1104) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1168) "write\00")
(data (i32.const 1184) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 1248) "cannot create objects in table of another contract\00")
(data (i32.const 1312) "cannot pass end iterator to modify\00")
(data (i32.const 1360) "object passed to modify is not in multi_index\00")
(data (i32.const 1408) "cannot modify objects in table of another contract\00")
(data (i32.const 1472) "attempt to add asset with different symbol\00")
(data (i32.const 1520) "addition underflow\00")
(data (i32.const 1552) "addition overflow\00")
(data (i32.const 1584) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1648) "error reading iterator\00")
(data (i32.const 1680) "read\00")
(data (i32.const 1696) "get\00")
(data (i32.const 1712) "not open lucky number.\00")
(data (i32.const 1744) ";lucky;\00")
(data (i32.const 1760) ";green;\00")
(data (i32.const 1776) "Lose\00")
(data (i32.const 1792) ";black;\00")
(data (i32.const 1808) ";red;\00")
(data (i32.const 1824) "You win! Congratulations!\00")
(data (i32.const 1856) "farmeosbankx\00")
(data (i32.const 1872) "cannot pass end iterator to erase\00")
(data (i32.const 1920) "cannot increment end iterator\00")
(data (i32.const 1952) "result\00")
(data (i32.const 1968) ";next transaction;\00")
(data (i32.const 2000) "Win\00")
(data (i32.const 2016) ";EOS;\00")
(data (i32.const 2032) ";FOS;\00")
(data (i32.const 2048) "object passed to erase is not in multi_index\00")
(data (i32.const 2096) "cannot erase objects in table of another contract\00")
(data (i32.const 2160) "attempt to remove object that was not in multi_index\00")
(data (i32.const 2224) "next primary key in table is at autoincrement limit\00")
(data (i32.const 2288) "cannot decrement end iterator when the table is empty\00")
(data (i32.const 2352) "cannot decrement iterator at beginning of table\00")
(data (i32.const 2400) "emplace;\00")
(data (i32.const 2416) "before; status;\00")
(data (i32.const 2432) ";after modify;status;\00")
(data (i32.const 2464) ";generate result, lock the game 5s; after modify;status;\00")
(data (i32.const 2528) ";after transaction;status;\00")
(data (i32.const 2560) "to rollback transaction!\00")
(data (i32.const 2720) "cleanhistory\00")
(data (i32.const 2736) "Keep at least 50 rounds\00")
(data (i32.const 2768) "onerror\00")
(data (i32.const 2784) "eosio\00")
(data (i32.const 2800) "onerror action\'s are only valid from the \"eosio\" system account\00")
(data (i32.const 11264) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(import "env" "__multi3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "abort" (func $fimport$1))
(import "env" "action_data_size" (func $fimport$2 (result i32)))
(import "env" "current_receiver" (func $fimport$3 (result i64)))
(import "env" "current_time" (func $fimport$4 (result i64)))
(import "env" "db_end_i64" (func $fimport$5 (param i64 i64 i64) (result i32)))
(import "env" "db_find_i64" (func $fimport$6 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$7 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$9 (param i32 i32) (result i32)))
(import "env" "db_previous_i64" (func $fimport$10 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$11 (param i32)))
(import "env" "db_store_i64" (func $fimport$12 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$13 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$14 (param i32 i32)))
(import "env" "is_account" (func $fimport$15 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$17 (param i32 i32 i32) (result i32)))
(import "env" "printi" (func $fimport$18 (param i64)))
(import "env" "prints" (func $fimport$19 (param i32)))
(import "env" "prints_l" (func $fimport$20 (param i32 i32)))
(import "env" "printui" (func $fimport$21 (param i64)))
(import "env" "read_action_data" (func $fimport$22 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$23 (param i64)))
(import "env" "require_auth2" (func $fimport$24 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$25 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$26 (param i32 i32)))
(export "memory" (memory $0))
(export "_ZeqRK11checksum256S1_" (func $0))
(export "_ZeqRK11checksum160S1_" (func $1))
(export "_ZneRK11checksum160S1_" (func $2))
(export "now" (func $3))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $4))
(export "_ZN9farmeosrb8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $5))
(export "_ZN9farmeosrb10record_betEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE" (func $8))
(export "_ZN9farmeosrb14record_bet_fosEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE" (func $9))
(export "_ZN9farmeosrb6resultEy" (func $42))
(export "_ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_" (func $43))
(export "_ZN9farmeosrb13next_sequenceEv" (func $62))
(export "_ZN9farmeosrb5adminEym" (func $63))
(export "_ZN9farmeosrb10rcd_roundsEv" (func $68))
(export "_ZN9farmeosrb10cleanroundEv" (func $78))
(export "_ZN9farmeosrb12cleanhistoryEm" (func $79))
(export "_ZN9farmeosrb8depositsEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $82))
(export "_ZN9farmeosrb10withdrawalEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $83))
(export "_ZN9farmeosrb4drawEy" (func $84))
(export "apply" (func $85))
(export "malloc" (func $94))
(export "free" (func $97))
(export "atoi" (func $109))
(export "memchr" (func $110))
(export "memcmp" (func $111))
(export "strlen" (func $112))
(table $0 6 6 anyfunc)
(elem (i32.const 0) $113 $78 $5 $63 $79 $42)



int_32 .FUNC $98 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [11356])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $99 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $95([2864], $0)
}

int_32 .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $96($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [11264])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC $96 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [11350]) == 0) ){ goto $label$2 }
	$7 = *([0] + [11352])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [11350]) = [1]
	$7 = ($7 << [16])
	*([0] + [11352]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [11352])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [11352]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [11350]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [11350]) = [1]
	$3 = ($3 << [16])
	*([0] + [11352]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [11352])
	
.LABEL $label$8
	*([0] + [11352]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [11248])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [11056]
	$1 = (((int_32)$2 * (int_32)[12]) + [11056])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

int_32 .FUNC $90 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	$5 = $6
	*([0] + [4]) = $6
	$2 = *($1 + [4])
	$4 = *($1)
	$3 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$3 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$3 = ($6 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$2
	CALL read_action_data($3, $1)
	
.LABEL $label$1
	*($5 + [8]) = [0]
	CALL eosio_assert(((uint_32)$1 > (uint_32)[3]), [1680])
	CALL memcpy(($5 + [8]), $3, [4])
	$6 = *($5 + [8])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($3)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$4 = *((*($1) + $4))
	
.LABEL $label$5
	CALL void $1((int_32 $6), (int_32 $4))
	*([0] + [4]) = ($5 + [16])
	return [1]
}

int_32 .FUNC $91 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *(($0 + [152]))
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = ($0 + [156])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$5 }
	if ( ((*($2 + [52]) & [1]) == 0) ){ goto $label$6 }
	CALL $99(*(($2 + [60])))
	
.LABEL $label$6
	CALL $99($2)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$4 = *(($0 + [152]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($3) = $1
	CALL $99($4)
	
.LABEL $label$1
	$1 = *(($0 + [112]))
	if ( ($1 == 0) ){ goto $label$7 }
	$3 = ($0 + [116])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$9 }
	
.LOOP $label$10:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $99($2)
	
.LABEL $label$11
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$10 }
	$4 = *(($0 + [112]))
	goto $label$8 
	
.LABEL $label$9
	$4 = $1
	
.LABEL $label$8
	*($3) = $1
	CALL $99($4)
	
.LABEL $label$7
	$1 = *(($0 + [72]))
	if ( ($1 == 0) ){ goto $label$12 }
	$3 = ($0 + [76])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = ($4 + [-24])
	$2 = *($4)
	*($4) = [0]
	if ( ($2 == 0) ){ goto $label$16 }
	if ( ((*($2 + [144]) & [1]) == 0) ){ goto $label$17 }
	CALL $99(*(($2 + [152])))
	
.LABEL $label$17
	CALL $99($2)
	
.LABEL $label$16
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$4 = *(($0 + [72]))
	goto $label$13 
	
.LABEL $label$14
	$4 = $1
	
.LABEL $label$13
	*($3) = $1
	CALL $99($4)
	
.LABEL $label$12
	$1 = *(($0 + [32]))
	if ( ($1 == 0) ){ goto $label$18 }
	$3 = ($0 + [36])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$20 }
	$4 = ($4 + [-24])
	
.LOOP $label$21:
	$2 = CALL $39($4)
	$4 = ($4 + [-24])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$21 }
	$4 = *(($0 + [32]))
	goto $label$19 
	
.LABEL $label$20
	$4 = $1
	
.LABEL $label$19
	*($3) = $1
	CALL $99($4)
	
.LABEL $label$18
	return $0
}

void .FUNC $92 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($2, *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy(($0 + [8]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((uint_32)(*($3 + [8]) - *($3 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy(($0 + [16]), *($3 + [4]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((uint_32)(*($3 + [8]) - $2) > (uint_32)[7]), [1680])
	CALL memcpy(($0 + [24]), *($3 + [4]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $29(*($1), ($0 + [32]))
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [96])
	*([0] + [4]) = $5
	*(($5 + [44])) = *(($1 + [28]))
	*(($4 = (($5 + [32]) + [8]))) = *(($1 + [24]))
	*($5 + [32]) = *($1 + [16])
	*($5 + [36]) = *(($1 + [20]))
	$3 = *($1 + [8])
	$2 = *($1)
	CALL $107(($5 + [16]), ($1 + [32]))
	*((($5 + [48]) + [8])) = *($4)
	*($5 + [48]) = *($5 + [32])
	$1 = *($0 + [4])
	$4 = *($1 + [4])
	$0 = (*(*($0)) + int_32($4 >> [1]))
	$1 = *($1)
	if ( (($4 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($4 = (($5 + [80]) + [8]))) = *((($5 + [48]) + [8]))
	*($5 + [80]) = *($5 + [48])
	CALL $107(($5 + [64]), ($5 + [16]))
	*(($5 + [8])) = *($4)
	*($5) = *($5 + [80])
	CALL void $0((int_32 $2), (int_64 $3), (int_64 $5), (int_32 ($5 + [64])), (int_32 $1))
	if ( ((*($5 + [64]) & [1]) == 0) ){ goto $label$2 }
	CALL $99(*($5 + [72]))
	
.LABEL $label$2
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$3 }
	CALL $99(*($5 + [24]))
	
.LABEL $label$3
	*([0] + [4]) = ($5 + [96])
}

void .FUNC $38 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$3 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$6 }
	
.LOOP $label$7:
	$6 = ($7 + [-24])
	$2 = *($6)
	*($6) = [0]
	*(($1 + [-24])) = $2
	*(($1 + [-8])) = *(($7 + [-8]))
	*(($1 + [-12])) = *(($7 + [-12]))
	*(($1 + [-16])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$7 }
	$3 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $3
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$8 }
	$1 = ($3 + [-24])
	
.LOOP $label$9:
	$7 = CALL $39($1)
	$1 = ($1 + [-24])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $99($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $98(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $98([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $10(($8 + [28]), [8])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[7]), [1168])
	CALL memcpy($2, $4, [8])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $99($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $99($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $99($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $48 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [212]) == (int_32)$0), [2048])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [2096])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2160])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$7 }
	CALL $99(*(($4 + [152])))
	
.LABEL $label$7
	CALL $99($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($4 + [152])))
	
.LABEL $label$10
	CALL $99($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [216]))
}

void .FUNC _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_ (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_64 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [176])
	*([0] + [4]) = $10
	*($10 + [136]) = $1
	*($10 + [128]) = $2
	*($10 + [120]) = $4
	*($10 + [116]) = $5
	*((($10 + [72]) + [32])) = [0]
	*($10 + [80]) = $2
	*($10 + [88]) = (int_64)-1
	*($10 + [96]) = (int_64)0
	$4 = *($0)
	*($10 + [72]) = $4
	*((($10 + [32]) + [32])) = [0]
	*($10 + [40]) = (CASTING uint_64)(uint_32 $1)
	*($10 + [32]) = $4
	*($10 + [48]) = (int_64)-1
	*($10 + [56]) = (int_64)0
	$1 = CALL db_lowerbound_i64(*($0 + [128]), *(($0 + [136])), (int_64)4229679821141028864, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL $54(($0 + [128]), $1)
	
.LABEL $label$1
	$1 = CALL db_lowerbound_i64($4, $2, (int_64)4229679821141028864, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$2 }
	CALL $54(($10 + [72]), $1)
	
.LABEL $label$2
	if ( ((int_64)*($3) < (int_64)1) ){ goto $label$3 }
	$2 = *($0)
	*($10 + [12]) = $3
	*($10 + [24]) = $6
	*($10 + [4]) = ($10 + [136])
	*($10) = ($10 + [72])
	*($10 + [8]) = ($10 + [128])
	*($10 + [16]) = ($10 + [120])
	*($10 + [20]) = ($10 + [116])
	*($10 + [28]) = $7
	*($10 + [168]) = $2
	CALL eosio_assert(((int_64)*($10 + [72]) == (int_64)CALL $fimport$3()), [1248])
	*($10 + [148]) = $10
	*($10 + [144]) = ($10 + [72])
	*($10 + [152]) = ($10 + [168])
	$1 = CALL $98([112])
	CALL $55($1)
	*($1 + [100]) = ($10 + [72])
	CALL $56(($10 + [144]), $1)
	*($10 + [160]) = $1
	$2 = *($1)
	*($10 + [144]) = $2
	$8 = *($1 + [104])
	*($10 + [140]) = $8
	$9 = ($10 + [100])
	$5 = *($9)
	if ( ((uint_32)$5 >= (uint_32)*(($10 + [104]))) ){ goto $label$5 }
	*($5 + [8]) = $2
	*($5 + [16]) = $8
	*($10 + [160]) = [0]
	*($5) = $1
	*($9) = ($5 + [24])
	goto $label$4 
	
.LABEL $label$5
	CALL $57(($10 + [96]), ($10 + [160]), ($10 + [144]), ($10 + [140]))
	
.LABEL $label$4
	$1 = *($10 + [160])
	*($10 + [160]) = [0]
	if ( ($1 == 0) ){ goto $label$6 }
	if ( ((*($1 + [52]) & [1]) == 0) ){ goto $label$7 }
	CALL $99(*(($1 + [60])))
	
.LABEL $label$7
	CALL $99($1)
	
.LABEL $label$6
	$2 = *($0)
	*($10 + [12]) = $3
	*($10 + [24]) = $6
	*($10 + [4]) = ($10 + [136])
	*($10) = ($10 + [32])
	*($10 + [8]) = ($10 + [128])
	*($10 + [16]) = ($10 + [120])
	*($10 + [20]) = ($10 + [116])
	*($10 + [28]) = $7
	*($10 + [168]) = $2
	CALL eosio_assert(((int_64)*($10 + [32]) == (int_64)CALL $fimport$3()), [1248])
	*($10 + [148]) = $10
	*($10 + [144]) = ($10 + [32])
	*($10 + [152]) = ($10 + [168])
	$0 = CALL $98([112])
	CALL $55($0)
	*($0 + [100]) = ($10 + [32])
	CALL $58(($10 + [144]), $0)
	*($10 + [160]) = $0
	$2 = *($0)
	*($10 + [144]) = $2
	$3 = *($0 + [104])
	*($10 + [140]) = $3
	$6 = ($10 + [60])
	$1 = *($6)
	if ( ((uint_32)$1 >= (uint_32)*(($10 + [64]))) ){ goto $label$9 }
	*($1 + [8]) = $2
	*($1 + [16]) = $3
	*($10 + [160]) = [0]
	*($1) = $0
	*($6) = ($1 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $57(($10 + [56]), ($10 + [160]), ($10 + [144]), ($10 + [140]))
	
.LABEL $label$8
	$0 = *($10 + [160])
	*($10 + [160]) = [0]
	if ( ($0 == 0) ){ goto $label$3 }
	if ( ((*($0 + [52]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($0 + [60])))
	
.LABEL $label$10
	CALL $99($0)
	
.LABEL $label$3
	$3 = *($10 + [56])
	if ( ($3 == 0) ){ goto $label$11 }
	$6 = ($10 + [60])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$15 }
	if ( ((*($1 + [52]) & [1]) == 0) ){ goto $label$16 }
	CALL $99(*(($1 + [60])))
	
.LABEL $label$16
	CALL $99($1)
	
.LABEL $label$15
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$14 }
	$0 = *(($10 + [56]))
	goto $label$12 
	
.LABEL $label$13
	$0 = $3
	
.LABEL $label$12
	*($6) = $3
	CALL $99($0)
	
.LABEL $label$11
	$3 = *($10 + [96])
	if ( ($3 == 0) ){ goto $label$17 }
	$6 = ($10 + [100])
	$0 = *($6)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$19 }
	
.LOOP $label$20:
	$0 = ($0 + [-24])
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$21 }
	if ( ((*($1 + [52]) & [1]) == 0) ){ goto $label$22 }
	CALL $99(*(($1 + [60])))
	
.LABEL $label$22
	CALL $99($1)
	
.LABEL $label$21
	if ( ((int_32)$3 != (int_32)$0) ){ goto $label$20 }
	$0 = *(($10 + [96]))
	goto $label$18 
	
.LABEL $label$19
	$0 = $3
	
.LABEL $label$18
	*($6) = $3
	CALL $99($0)
	
.LABEL $label$17
	*([0] + [4]) = ($10 + [176])
}

void .FUNC _ZN9farmeosrb6resultEy (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_32 $24
	int_64 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_32 $33
	int_32 $34
	int_32 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_64 $39
	int_32 $40
	int_32 $41
	int_32 $42
	int_64 $43
	int_64 $44
	int_64 $45
	int_32 $46
	int_32 $47
	$47 = (*([0] + [4]) - [912])
	*([0] + [4]) = $47
	CALL require_auth(*($0))
	$4 = [0]
	$41 = CALL db_lowerbound_i64(*($0 + [48]), *(($0 + [56])), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$41 < (int_32)[0]) ){ goto $label$10 }
	$2 = ($0 + [48])
	CALL $17($2, $41)
	$3 = ($0 + [8])
	$41 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$41 < (int_32)[0]) ){ goto $label$11 }
	$4 = CALL $6($3, $41)
	
.LABEL $label$11
	CALL eosio_assert((*($4 + [48]) <= [15]), [1712])
	$5 = *($4 + [28])
	$26 = ($0 + [56])
	$27 = ($0 + [48])
	$41 = CALL db_lowerbound_i64(*($27), *($26), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$41 < (int_32)[0]) ){ goto $label$12 }
	$16 = (($47 + [800]) | [1])
	$15 = (($47 + [848]) | [1])
	$14 = (($47 + [704]) | [1])
	$13 = (($47 + [752]) | [1])
	$12 = (($47 + [608]) | [1])
	$11 = (($47 + [656]) | [1])
	$9 = (($47 + [416]) | [1])
	$8 = (($47 + [512]) + [36])
	$7 = (($47 + [416]) | [1])
	$6 = (($47 + [576]) | [1])
	$31 = (($47 + [576]) + [8])
	$32 = (($47 + [512]) + [12])
	$33 = (($47 + [512]) + [20])
	$34 = (($47 + [512]) + [28])
	$35 = (($47 + [512]) + [40])
	$36 = ($47 + [556])
	$37 = ($47 + [564])
	$10 = (($47 + [432]) + [32])
	$38 = ($10 + [4])
	$18 = [0]
	
.LOOP $label$13:
	CALL $17($2, $41)
	if ( ((int_32)$18 >= (int_32)[10]) ){ goto $label$12 }
	$40 = [0]
	$24 = [0]
	$41 = CALL db_lowerbound_i64(*($27), *($26), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$41 < (int_32)[0]) ){ goto $label$14 }
	$24 = CALL $17($2, $41)
	
.LABEL $label$14
	$25 = *($24)
	CALL eosio_assert([1], [1104])
	$39 = (int_64)5462355
	
.LOOP $label$17:
	$41 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $39) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$16 }
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$18 }
	
.LOOP $label$19:
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	$40 = ($40 + [1])
	if ( ((int_32)$40 < (int_32)[7]) ){ goto $label$19 }
	
.LABEL $label$18
	$46 = [1]
	$40 = ($40 + [1])
	if ( ((int_32)$40 < (int_32)[7]) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	$46 = [0]
	
.LABEL $label$15
	CALL eosio_assert($46, [160])
	CALL eosio_assert([1], [1104])
	$39 = (int_64)5462355
	
.LOOP $label$21:
	$40 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $39) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$20 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$40 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$21 }
	
.LABEL $label$20
	CALL eosio_assert($40, [160])
	CALL prints([1744])
	$40 = ($4 + [48])
	CALL printui(*($40))
	if ( (*($40) == 0) ){ goto $label$28 }
	*(($30 = (($47 + [864]) + [8]))) = *(($24 + [80]))
	*(($28 = (($47 + [848]) + [8]))) = [0]
	*($47 + [864]) = *($24 + [72])
	*($47 + [848]) = (int_64)0
	$45 = *($24 + [136])
	$41 = CALL strlen([1776])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$8 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$27 }
	*($47 + [848]) = ($41 << [1])
	$46 = $15
	if ( $41 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$28
	$20 = *(($24 + [128]))
	$22 = *(($24 + [80]))
	$19 = *($24 + [120])
	$21 = *($24 + [72])
	CALL prints([1760])
	$17 = [3]
	$46 = [1300]
	goto $label$24 
	
.LABEL $label$27
	$42 = (($41 + [16]) & [-16])
	$46 = CALL $98($42)
	*($28) = $46
	*($47 + [848]) = ($42 | [1])
	*($47 + [852]) = $41
	
.LABEL $label$26
	CALL memcpy($46, [1776], $41)
	
.LABEL $label$25
	*(($46 + $41)) = [0]
	*(($42 = (($47 + [832]) + [8]))) = (int_64)1397703940
	*($47 + [832]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$39 = (uint_64)*($42) >> (uint_64)(int_64)8)
	$41 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $39) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	
.LOOP $label$33:
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$30 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$33 }
	
.LABEL $label$32
	$46 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	$46 = [0]
	
.LABEL $label$29
	CALL eosio_assert($46, [160])
	*((($47 + [304]) + [8])) = *($30)
	*((($47 + [288]) + [8])) = *($42)
	*($47 + [304]) = *($47 + [864])
	*($47 + [288]) = *($47 + [832])
	CALL _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_($0, $5, $25, ($47 + [304]), $45, [3], ($47 + [848]), ($47 + [288]))
	if ( ((*($47 + [848]) & [1]) == 0) ){ goto $label$34 }
	CALL $99(*($28))
	
.LABEL $label$34
	*(($30 = (($47 + [816]) + [8]))) = *(($24 + [128]))
	*($47 + [816]) = *($24 + [120])
	$45 = *(($24 + [136]))
	*(($28 = (($47 + [800]) + [8]))) = [0]
	*($47 + [800]) = (int_64)0
	$41 = CALL strlen([1776])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$37 }
	*($47 + [800]) = ($41 << [1])
	$46 = $16
	if ( $41 ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$37
	$42 = (($41 + [16]) & [-16])
	$46 = CALL $98($42)
	*($28) = $46
	*($47 + [800]) = ($42 | [1])
	*($47 + [804]) = $41
	
.LABEL $label$36
	CALL memcpy($46, [1776], $41)
	
.LABEL $label$35
	*(($46 + $41)) = [0]
	*(($42 = (($47 + [784]) + [8]))) = (int_64)1397704196
	*($47 + [784]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$39 = (uint_64)*($42) >> (uint_64)(int_64)8)
	$41 = [0]
	
.LOOP $label$40:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $39) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$39 }
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$41 }
	
.LOOP $label$42:
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$42 }
	
.LABEL $label$41
	$46 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$40 }
	goto $label$38 
	
.LABEL $label$39
	$46 = [0]
	
.LABEL $label$38
	CALL eosio_assert($46, [160])
	*((($47 + [272]) + [8])) = *($30)
	*((($47 + [256]) + [8])) = *($42)
	*($47 + [272]) = *($47 + [816])
	*($47 + [256]) = *($47 + [784])
	CALL _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_($0, $5, $25, ($47 + [272]), $45, [3], ($47 + [800]), ($47 + [256]))
	$46 = [0]
	$20 = (int_64)1398362884
	$19 = (int_64)0
	if ( ((*($47 + [800]) & [1]) == 0) ){ goto $label$43 }
	CALL $99(*($28))
	
.LABEL $label$43
	$21 = (int_64)0
	$22 = (int_64)1398362884
	
.LABEL $label$24
	if ( ((uint_32)(*($40) + [-1]) > (uint_32)[6]) ){ goto $label$45 }
	$20 = *(($24 + [112]))
	$22 = *(($24 + [64]))
	$19 = *($24 + [104])
	$21 = *($24 + [56])
	CALL prints([1792])
	$17 = [2]
	$46 = [196]
	goto $label$44 
	
.LABEL $label$45
	*(($28 = (($47 + [768]) + [8]))) = *(($24 + [64]))
	*(($29 = (($47 + [752]) + [8]))) = [0]
	*($47 + [768]) = *($24 + [56])
	*($47 + [752]) = (int_64)0
	$45 = *($24 + [136])
	$41 = CALL strlen([1776])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$6 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$48 }
	*($47 + [752]) = ($41 << [1])
	$42 = $13
	if ( $41 ){ goto $label$47 }
	goto $label$46 
	
.LABEL $label$48
	$30 = (($41 + [16]) & [-16])
	$42 = CALL $98($30)
	*($29) = $42
	*($47 + [752]) = ($30 | [1])
	*($47 + [756]) = $41
	
.LABEL $label$47
	CALL memcpy($42, [1776], $41)
	
.LABEL $label$46
	*(($42 + $41)) = [0]
	*(($30 = (($47 + [736]) + [8]))) = (int_64)1397703940
	*($47 + [736]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$39 = (uint_64)*($30) >> (uint_64)(int_64)8)
	$41 = [0]
	
.LOOP $label$51:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $39) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$50 }
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	
.LOOP $label$53:
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$50 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$53 }
	
.LABEL $label$52
	$42 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$51 }
	goto $label$49 
	
.LABEL $label$50
	$42 = [0]
	
.LABEL $label$49
	CALL eosio_assert($42, [160])
	*((($47 + [240]) + [8])) = *($28)
	*((($47 + [224]) + [8])) = *($30)
	*($47 + [240]) = *($47 + [768])
	*($47 + [224]) = *($47 + [736])
	CALL _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_($0, $5, $25, ($47 + [240]), $45, [2], ($47 + [752]), ($47 + [224]))
	if ( ((*($47 + [752]) & [1]) == 0) ){ goto $label$54 }
	CALL $99(*($29))
	
.LABEL $label$54
	*(($29 = (($47 + [720]) + [8]))) = *(($24 + [112]))
	*($47 + [720]) = *($24 + [104])
	$45 = *(($24 + [136]))
	*(($28 = (($47 + [704]) + [8]))) = [0]
	*($47 + [704]) = (int_64)0
	$41 = CALL strlen([1776])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$57 }
	*($47 + [704]) = ($41 << [1])
	$42 = $14
	if ( $41 ){ goto $label$56 }
	goto $label$55 
	
.LABEL $label$57
	$30 = (($41 + [16]) & [-16])
	$42 = CALL $98($30)
	*($28) = $42
	*($47 + [704]) = ($30 | [1])
	*($47 + [708]) = $41
	
.LABEL $label$56
	CALL memcpy($42, [1776], $41)
	
.LABEL $label$55
	*(($42 + $41)) = [0]
	*(($30 = (($47 + [688]) + [8]))) = (int_64)1397704196
	*($47 + [688]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$39 = (uint_64)*($30) >> (uint_64)(int_64)8)
	$41 = [0]
	
.LOOP $label$60:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $39) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$59 }
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$61 }
	
.LOOP $label$62:
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$59 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$62 }
	
.LABEL $label$61
	$42 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$60 }
	goto $label$58 
	
.LABEL $label$59
	$42 = [0]
	
.LABEL $label$58
	CALL eosio_assert($42, [160])
	*((($47 + [208]) + [8])) = *($29)
	*((($47 + [192]) + [8])) = *($30)
	*($47 + [208]) = *($47 + [720])
	*($47 + [192]) = *($47 + [688])
	CALL _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_($0, $5, $25, ($47 + [208]), $45, [2], ($47 + [704]), ($47 + [192]))
	if ( ((*($47 + [704]) & [1]) == 0) ){ goto $label$44 }
	CALL $99(*($28))
	
.LABEL $label$44
	if ( ((uint_32)(*($40) + [-8]) > (uint_32)[6]) ){ goto $label$64 }
	$20 = *(($24 + [96]))
	$22 = *(($24 + [48]))
	$19 = *($24 + [88])
	$21 = *($24 + [40])
	CALL prints([1808])
	$17 = [1]
	$46 = [196]
	goto $label$63 
	
.LABEL $label$64
	*(($28 = (($47 + [672]) + [8]))) = *(($24 + [48]))
	*(($30 = (($47 + [656]) + [8]))) = [0]
	*($47 + [672]) = *($24 + [40])
	*($47 + [656]) = (int_64)0
	$45 = *($24 + [136])
	$41 = CALL strlen([1776])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$67 }
	*($47 + [656]) = ($41 << [1])
	$40 = $11
	if ( $41 ){ goto $label$66 }
	goto $label$65 
	
.LABEL $label$67
	$42 = (($41 + [16]) & [-16])
	$40 = CALL $98($42)
	*($30) = $40
	*($47 + [656]) = ($42 | [1])
	*($47 + [660]) = $41
	
.LABEL $label$66
	CALL memcpy($40, [1776], $41)
	
.LABEL $label$65
	*(($40 + $41)) = [0]
	*(($42 = (($47 + [640]) + [8]))) = (int_64)1397703940
	*($47 + [640]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$39 = (uint_64)*($42) >> (uint_64)(int_64)8)
	$41 = [0]
	
.LOOP $label$70:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $39) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$69 }
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$71 }
	
.LOOP $label$72:
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$69 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$72 }
	
.LABEL $label$71
	$40 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$69
	$40 = [0]
	
.LABEL $label$68
	CALL eosio_assert($40, [160])
	*((($47 + [176]) + [8])) = *($28)
	*((($47 + [160]) + [8])) = *($42)
	*($47 + [176]) = *($47 + [672])
	*($47 + [160]) = *($47 + [640])
	CALL _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_($0, $5, $25, ($47 + [176]), $45, [1], ($47 + [656]), ($47 + [160]))
	if ( ((*($47 + [656]) & [1]) == 0) ){ goto $label$73 }
	CALL $99(*($30))
	
.LABEL $label$73
	*(($30 = (($47 + [624]) + [8]))) = *(($24 + [96]))
	*($47 + [624]) = *($24 + [88])
	$45 = *(($24 + [136]))
	*(($28 = (($47 + [608]) + [8]))) = [0]
	*($47 + [608]) = (int_64)0
	$41 = CALL strlen([1776])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$76 }
	*($47 + [608]) = ($41 << [1])
	$40 = $12
	if ( $41 ){ goto $label$75 }
	goto $label$74 
	
.LABEL $label$76
	$42 = (($41 + [16]) & [-16])
	$40 = CALL $98($42)
	*($28) = $40
	*($47 + [608]) = ($42 | [1])
	*($47 + [612]) = $41
	
.LABEL $label$75
	CALL memcpy($40, [1776], $41)
	
.LABEL $label$74
	*(($40 + $41)) = [0]
	*(($42 = (($47 + [592]) + [8]))) = (int_64)1397704196
	*($47 + [592]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$39 = (uint_64)*($42) >> (uint_64)(int_64)8)
	$41 = [0]
	
.LOOP $label$79:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $39) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$78 }
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$80 }
	
.LOOP $label$81:
	$39 = (uint_64)$39 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$39) & (int_64)255) != (int_64)0) ){ goto $label$78 }
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$81 }
	
.LABEL $label$80
	$40 = [1]
	$41 = ($41 + [1])
	if ( ((int_32)$41 < (int_32)[7]) ){ goto $label$79 }
	goto $label$77 
	
.LABEL $label$78
	$40 = [0]
	
.LABEL $label$77
	CALL eosio_assert($40, [160])
	*((($47 + [144]) + [8])) = *($30)
	*((($47 + [128]) + [8])) = *($42)
	*($47 + [144]) = *($47 + [624])
	*($47 + [128]) = *($47 + [592])
	CALL _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_($0, $5, $25, ($47 + [144]), $45, [1], ($47 + [608]), ($47 + [128]))
	if ( ((*($47 + [608]) & [1]) == 0) ){ goto $label$63 }
	CALL $99(*($28))
	
.LABEL $label$63
	*($31) = [0]
	*($47 + [576]) = (int_64)0
	$41 = CALL strlen([1776])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$9 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$84 }
	*($47 + [576]) = ($41 << [1])
	$40 = $6
	if ( $41 ){ goto $label$83 }
	goto $label$82 
	
.LABEL $label$84
	$42 = (($41 + [16]) & [-16])
	$40 = CALL $98($42)
	*($31) = $40
	*($47 + [576]) = ($42 | [1])
	*($47 + [580]) = $41
	
.LABEL $label$83
	CALL memcpy($40, [1776], $41)
	
.LABEL $label$82
	*(($40 + $41)) = [0]
	if ( ((int_64)$21 <= (int_64)0) ){ goto $label$85 }
	CALL $104(($47 + [576]), [2000])
	$41 = *($47 + [576])
	$40 = ($41 & [1])
	CALL prints_l(( *($31) ? $6 : $40 ), ( *($47 + [580]) ? uint_32($41 >> [1]) : $40 ))
	CALL prints([2016])
	if ( ((int_64)*(($24 + [16])) != (int_64)1397703940) ){ goto $label$90 }
	$39 = CALL current_time()
	*($32) = [0]
	*((($47 + [512]) + [16])) = [0]
	*($33) = [0]
	*((($47 + [512]) + [24])) = [0]
	*($34) = [0]
	*((($47 + [512]) + [32])) = [0]
	*($47 + [512]) = ((CASTING uint_32)(uint_64 ((uint_64)$39 / (uint_64)(int_64)1000000)) + [60])
	*($8) = [0]
	*($35) = [0]
	*($36) = [0]
	*((($47 + [512]) + [48])) = [0]
	*($37) = [0]
	*((($47 + [512]) + [56])) = [0]
	$23 = *($0)
	$39 = (int_64)0
	$43 = (int_64)59
	$41 = [1008]
	$44 = (int_64)0
	
.LOOP $label$91:
	if ( ((uint_64)$39 > (uint_64)(int_64)5) ){ goto $label$96 }
	$40 = *($41)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$95 }
	$40 = ($40 + [165])
	goto $label$94 
	
.LABEL $label$96
	$45 = (int_64)0
	if ( ((uint_64)$39 <= (uint_64)(int_64)11) ){ goto $label$93 }
	goto $label$92 
	
.LABEL $label$95
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$94
	$45 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$93
	$45 = ((int_64)((int_64)$45 & (int_64)31) << (int_64)((int_64)$43 & (int_64)4294967295))
	
.LABEL $label$92
	$41 = ($41 + [1])
	$39 = ((int_64)$39 + (int_64)1)
	$44 = ((int_64)$45 | (int_64)$44)
	$43 = ((int_64)$43 + (int_64)-5)
	if ( ((int_64)$43 != (int_64)-6) ){ goto $label$91 }
	*(($30 = (($47 + [496]) + [8]))) = $44
	*($47 + [496]) = $23
	$39 = (int_64)0
	$43 = (int_64)59
	$41 = [1056]
	$44 = (int_64)0
	
.LOOP $label$97:
	if ( ((uint_64)$39 > (uint_64)(int_64)10) ){ goto $label$102 }
	$40 = *($41)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$101 }
	$40 = ($40 + [165])
	goto $label$100 
	
.LABEL $label$102
	$45 = (int_64)0
	if ( ((int_64)$39 == (int_64)11) ){ goto $label$99 }
	goto $label$98 
	
.LABEL $label$101
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$100
	$45 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$99
	$45 = ((int_64)((int_64)$45 & (int_64)31) << (int_64)((int_64)$43 & (int_64)4294967295))
	
.LABEL $label$98
	$41 = ($41 + [1])
	$43 = ((int_64)$43 + (int_64)-5)
	$44 = ((int_64)$45 | (int_64)$44)
	$39 = ((int_64)$39 + (int_64)1)
	if ( ((int_64)$39 != (int_64)13) ){ goto $label$97 }
	*($47 + [488]) = $44
	$39 = (int_64)0
	$43 = (int_64)59
	$41 = [1072]
	$44 = (int_64)0
	
.LOOP $label$103:
	if ( ((uint_64)$39 > (uint_64)(int_64)7) ){ goto $label$108 }
	$40 = *($41)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$107 }
	$40 = ($40 + [165])
	goto $label$106 
	
.LABEL $label$108
	$45 = (int_64)0
	if ( ((uint_64)$39 <= (uint_64)(int_64)11) ){ goto $label$105 }
	goto $label$104 
	
.LABEL $label$107
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$106
	$45 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$105
	$45 = ((int_64)((int_64)$45 & (int_64)31) << (int_64)((int_64)$43 & (int_64)4294967295))
	
.LABEL $label$104
	$41 = ($41 + [1])
	$39 = ((int_64)$39 + (int_64)1)
	$44 = ((int_64)$45 | (int_64)$44)
	$43 = ((int_64)$43 + (int_64)-5)
	if ( ((int_64)$43 != (int_64)-6) ){ goto $label$103 }
	CALL __multi3(($47 + [96]), (CASTING uint_64)(uint_32 $46), (int_64)0, $21, (int_64)$21 >> (int_64)63))
	*($47 + [480]) = $44
	$45 = *((($47 + [96]) + [8]))
	$43 = *($47 + [96])
	CALL eosio_assert(( (uint_64)($43 <= (int_64)4611686018427387904) ? ((int_64)$45 < (int_64)0) : (int_64)($45 == 0) ), [896])
	CALL eosio_assert(( ((uint_64)$43 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$45 > (int_64)-1) : ((int_64)$45 == (int_64)-1) ), [928])
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [976])
	*(($42 = (($47 + [416]) + [8]))) = [0]
	*($47 + [416]) = (int_64)0
	$44 = ((int_64)$43 / (int_64)100)
	$41 = CALL strlen([1824])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$89 }
	*($47 + [416]) = ($41 << [1])
	$40 = $7
	if ( $41 ){ goto $label$88 }
	goto $label$87 
	
.LABEL $label$90
	CALL __multi3(($47 + [112]), (CASTING uint_64)(uint_32 $46), (int_64)0, $21, (int_64)$21 >> (int_64)63))
	$43 = *($47 + [112])
	$44 = ((int_64)$43 / (int_64)100)
	$45 = *((($47 + [112]) + [8]))
	goto $label$86 
	
.LABEL $label$89
	$28 = (($41 + [16]) & [-16])
	$40 = CALL $98($28)
	*($42) = $40
	*($47 + [416]) = ($28 | [1])
	*($47 + [420]) = $41
	
.LABEL $label$88
	CALL memcpy($40, [1824], $41)
	
.LABEL $label$87
	*(($40 + $41)) = [0]
	*((($47 + [432]) + [8])) = $25
	*((($47 + [432]) + [16])) = $44
	*((($47 + [432]) + [24])) = $22
	*($38) = *($47 + [420])
	*(($10 + [8])) = *($42)
	*($47 + [432]) = *($0)
	*($10) = *($47 + [416])
	*($47 + [416]) = [0]
	*($47 + [420]) = [0]
	*($42) = [0]
	$40 = *($35)
	if ( ((uint_32)$40 >= (uint_32)*($36)) ){ goto $label$112 }
	*($40 + [8]) = *($47 + [480])
	*($40) = *($47 + [488])
	*($40 + [16 align=4]) = (int_64)0
	*(($28 = ($40 + [24]))) = [0]
	$41 = CALL $98([16])
	*($40 + [16]) = $41
	$29 = ($41 + [16])
	*($28) = $29
	*(($41 + [8])) = *($30)
	*($41) = *($47 + [496])
	*(($40 + [20])) = $29
	*($40 + [28]) = [0]
	*(($28 = ($40 + [32]))) = [0]
	*(($40 + [36])) = [0]
	$41 = *($10)
	$30 = ( *((($47 + [432]) + [36])) ? uint_32($41 >> [1]) : ($41 & [1]) )
	$41 = ($30 + [32])
	$39 = (CASTING uint_64)(uint_32 $30)
	$40 = ($40 + [28])
	
.LOOP $label$113:
	$41 = ($41 + [1])
	$39 = (uint_64)$39 >> (uint_64)(int_64)7
	if ( ((int_64)$39) != (int_64)0) ){ goto $label$113 }
	if ( ($41 == 0) ){ goto $label$111 }
	CALL $10($40, $41)
	$30 = *($28)
	$41 = *($40)
	goto $label$110 
	
.LABEL $label$112
	CALL $44($8, ($47 + [496]), ($47 + [488]), ($47 + [480]), ($47 + [432]))
	goto $label$109 
	
.LABEL $label$111
	$30 = [0]
	$41 = [0]
	
.LABEL $label$110
	*((($47 + [880]) + [8])) = $30
	*($47 + [884]) = $41
	*($47 + [880]) = $41
	*($47 + [896]) = ($47 + [880])
	*($47 + [904]) = ($47 + [432])
	CALL $13(($47 + [904]), ($47 + [896]))
	*($35) = (*($35) + [40])
	
.LABEL $label$109
	if ( ((*($10) & [1]) == 0) ){ goto $label$114 }
	CALL $99(*((($47 + [432]) + [40])))
	
.LABEL $label$114
	if ( ((*($47 + [416]) & [1]) == 0) ){ goto $label$115 }
	CALL $99(*($42))
	
.LABEL $label$115
	*($33) = [1]
	CALL require_auth(*($0))
	$41 = [0]
	$40 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$40 < (int_32)[0]) ){ goto $label$116 }
	$41 = CALL $6($3, $40)
	
.LABEL $label$116
	*($47 + [432]) = *($41 + [64])
	$39 = *($0)
	*($47 + [496]) = ($47 + [432])
	CALL eosio_assert(((int_32)$41 != (int_32)[0]), [1312])
	CALL $45($3, $41, $39, ($47 + [496]))
	$39 = *($47 + [432])
	*($47 + [440]) = (int_64)0
	*($47 + [432]) = $39
	$39 = *($0)
	CALL $46(($47 + [496]), ($47 + [512]))
	$41 = *($47 + [496])
	CALL send_deferred(($47 + [432]), $39, $41, (*($47 + [500]) - $41), [0])
	$41 = *($47 + [496])
	if ( ($41 == 0) ){ goto $label$117 }
	*($47 + [500]) = $41
	CALL $99($41)
	
.LABEL $label$117
	CALL $47(($47 + [512]))
	
.LABEL $label$86
	*(($41 = (($47 + [400]) + [8]))) = $22
	*($47 + [400]) = $21
	$39 = *($24 + [136])
	CALL $107(($47 + [384]), ($47 + [576]))
	CALL eosio_assert(( (uint_64)($43 <= (int_64)4611686018427387904) ? ((int_64)$45 < (int_64)0) : (int_64)($45 == 0) ), [896])
	CALL eosio_assert(( ((uint_64)$43 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$45 > (int_64)-1) : ((int_64)$45 == (int_64)-1) ), [928])
	*(($40 = (($47 + [368]) + [8]))) = $22
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [976])
	*((($47 + [80]) + [12])) = *((($47 + [400]) + [12]))
	*((($47 + [80]) + [8])) = *($41)
	*($47 + [368]) = $44
	*($47 + [80]) = *($47 + [400])
	*((($47 + [64]) + [8])) = *($40)
	*($47 + [64]) = *($47 + [368])
	CALL _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_($0, $5, $25, ($47 + [80]), $39, $17, ($47 + [384]), ($47 + [64]))
	if ( ((*($47 + [384]) & [1]) == 0) ){ goto $label$85 }
	CALL $99(*((($47 + [384]) + [8])))
	
.LABEL $label$85
	if ( ((int_64)$19 <= (int_64)0) ){ goto $label$118 }
	CALL $104(($47 + [576]), [2000])
	$41 = *($47 + [576])
	$40 = ($41 & [1])
	CALL prints_l(( *($31) ? $6 : $40 ), ( *($47 + [580]) ? uint_32($41 >> [1]) : $40 ))
	CALL prints([2032])
	if ( ((int_64)*(($24 + [32])) != (int_64)1397704196) ){ goto $label$123 }
	$39 = CALL current_time()
	*($32) = [0]
	*((($47 + [512]) + [16])) = [0]
	*($33) = [0]
	*((($47 + [512]) + [24])) = [0]
	*($34) = [0]
	*((($47 + [512]) + [32])) = [0]
	*($47 + [512]) = ((CASTING uint_32)(uint_64 ((uint_64)$39 / (uint_64)(int_64)1000000)) + [60])
	*($8) = [0]
	*($35) = [0]
	*($36) = [0]
	*((($47 + [512]) + [48])) = [0]
	*($37) = [0]
	*((($47 + [512]) + [56])) = [0]
	$21 = *($0)
	$39 = (int_64)0
	$43 = (int_64)59
	$41 = [1008]
	$44 = (int_64)0
	
.LOOP $label$124:
	if ( ((uint_64)$39 > (uint_64)(int_64)5) ){ goto $label$129 }
	$40 = *($41)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$128 }
	$40 = ($40 + [165])
	goto $label$127 
	
.LABEL $label$129
	$45 = (int_64)0
	if ( ((uint_64)$39 <= (uint_64)(int_64)11) ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$128
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$127
	$45 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$126
	$45 = ((int_64)((int_64)$45 & (int_64)31) << (int_64)((int_64)$43 & (int_64)4294967295))
	
.LABEL $label$125
	$41 = ($41 + [1])
	$39 = ((int_64)$39 + (int_64)1)
	$44 = ((int_64)$45 | (int_64)$44)
	$43 = ((int_64)$43 + (int_64)-5)
	if ( ((int_64)$43 != (int_64)-6) ){ goto $label$124 }
	*(($42 = (($47 + [496]) + [8]))) = $44
	*($47 + [496]) = $21
	$39 = (int_64)0
	$45 = (int_64)59
	$41 = [1856]
	$44 = (int_64)0
	
.LOOP $label$130:
	$43 = (int_64)0
	if ( ((uint_64)$39 > (uint_64)(int_64)11) ){ goto $label$131 }
	$40 = *($41)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$133 }
	$40 = ($40 + [165])
	goto $label$132 
	
.LABEL $label$133
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$132
	$43 = ((int_64)(CASTING uint_64)(uint_32 ($40 & [31])) << (int_64)((int_64)$45 & (int_64)4294967295))
	
.LABEL $label$131
	$41 = ($41 + [1])
	$39 = ((int_64)$39 + (int_64)1)
	$44 = ((int_64)$43 | (int_64)$44)
	$45 = ((int_64)$45 + (int_64)-5)
	if ( ((int_64)$45 != (int_64)-6) ){ goto $label$130 }
	*($47 + [488]) = $44
	$39 = (int_64)0
	$43 = (int_64)59
	$41 = [1072]
	$44 = (int_64)0
	
.LOOP $label$134:
	if ( ((uint_64)$39 > (uint_64)(int_64)7) ){ goto $label$139 }
	$40 = *($41)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$138 }
	$40 = ($40 + [165])
	goto $label$137 
	
.LABEL $label$139
	$45 = (int_64)0
	if ( ((uint_64)$39 <= (uint_64)(int_64)11) ){ goto $label$136 }
	goto $label$135 
	
.LABEL $label$138
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$137
	$45 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$136
	$45 = ((int_64)((int_64)$45 & (int_64)31) << (int_64)((int_64)$43 & (int_64)4294967295))
	
.LABEL $label$135
	$41 = ($41 + [1])
	$39 = ((int_64)$39 + (int_64)1)
	$44 = ((int_64)$45 | (int_64)$44)
	$43 = ((int_64)$43 + (int_64)-5)
	if ( ((int_64)$43 != (int_64)-6) ){ goto $label$134 }
	CALL __multi3(($47 + [32]), (CASTING uint_64)(uint_32 $46), (int_64)0, $19, (int_64)$19 >> (int_64)63))
	*($47 + [480]) = $44
	$45 = *((($47 + [32]) + [8]))
	$43 = *($47 + [32])
	CALL eosio_assert(( (uint_64)($43 <= (int_64)4611686018427387904) ? ((int_64)$45 < (int_64)0) : (int_64)($45 == 0) ), [896])
	CALL eosio_assert(( ((uint_64)$43 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$45 > (int_64)-1) : ((int_64)$45 == (int_64)-1) ), [928])
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [976])
	*(($46 = (($47 + [416]) + [8]))) = [0]
	*($47 + [416]) = (int_64)0
	$44 = ((int_64)$43 / (int_64)100)
	$41 = CALL strlen([1824])
	if ( ((uint_32)$41 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$41 >= (uint_32)[11]) ){ goto $label$122 }
	*($47 + [416]) = ($41 << [1])
	$40 = $9
	if ( $41 ){ goto $label$121 }
	goto $label$120 
	
.LABEL $label$123
	CALL __multi3(($47 + [48]), (CASTING uint_64)(uint_32 $46), (int_64)0, $19, (int_64)$19 >> (int_64)63))
	$43 = *($47 + [48])
	$44 = ((int_64)$43 / (int_64)100)
	$45 = *((($47 + [48]) + [8]))
	goto $label$119 
	
.LABEL $label$122
	$30 = (($41 + [16]) & [-16])
	$40 = CALL $98($30)
	*($46) = $40
	*($47 + [416]) = ($30 | [1])
	*($47 + [420]) = $41
	
.LABEL $label$121
	CALL memcpy($40, [1824], $41)
	
.LABEL $label$120
	*(($40 + $41)) = [0]
	*((($47 + [432]) + [8])) = $25
	*((($47 + [432]) + [16])) = $44
	*((($47 + [432]) + [24])) = $20
	*($38) = *($47 + [420])
	*(($10 + [8])) = *($46)
	*($47 + [432]) = *($0)
	*($10) = *($47 + [416])
	*($47 + [416]) = [0]
	*($47 + [420]) = [0]
	*($46) = [0]
	$40 = *($35)
	if ( ((uint_32)$40 >= (uint_32)*($36)) ){ goto $label$143 }
	*($40 + [8]) = *($47 + [480])
	*($40) = *($47 + [488])
	*($40 + [16 align=4]) = (int_64)0
	*(($30 = ($40 + [24]))) = [0]
	$41 = CALL $98([16])
	*($40 + [16]) = $41
	$28 = ($41 + [16])
	*($30) = $28
	*(($41 + [8])) = *($42)
	*($41) = *($47 + [496])
	*(($40 + [20])) = $28
	*($40 + [28]) = [0]
	*(($30 = ($40 + [32]))) = [0]
	*(($40 + [36])) = [0]
	$41 = *($10)
	$42 = ( *((($47 + [432]) + [36])) ? uint_32($41 >> [1]) : ($41 & [1]) )
	$41 = ($42 + [32])
	$39 = (CASTING uint_64)(uint_32 $42)
	$40 = ($40 + [28])
	
.LOOP $label$144:
	$41 = ($41 + [1])
	$39 = (uint_64)$39 >> (uint_64)(int_64)7
	if ( ((int_64)$39) != (int_64)0) ){ goto $label$144 }
	if ( ($41 == 0) ){ goto $label$142 }
	CALL $10($40, $41)
	$42 = *($30)
	$41 = *($40)
	goto $label$141 
	
.LABEL $label$143
	CALL $44($8, ($47 + [496]), ($47 + [488]), ($47 + [480]), ($47 + [432]))
	goto $label$140 
	
.LABEL $label$142
	$42 = [0]
	$41 = [0]
	
.LABEL $label$141
	*((($47 + [880]) + [8])) = $42
	*($47 + [884]) = $41
	*($47 + [880]) = $41
	*($47 + [896]) = ($47 + [880])
	*($47 + [904]) = ($47 + [432])
	CALL $13(($47 + [904]), ($47 + [896]))
	*($35) = (*($35) + [40])
	
.LABEL $label$140
	if ( ((*($10) & [1]) == 0) ){ goto $label$145 }
	CALL $99(*((($47 + [432]) + [40])))
	
.LABEL $label$145
	if ( ((*($47 + [416]) & [1]) == 0) ){ goto $label$146 }
	CALL $99(*($46))
	
.LABEL $label$146
	*($33) = [1]
	CALL require_auth(*($0))
	$41 = [0]
	$40 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$40 < (int_32)[0]) ){ goto $label$147 }
	$41 = CALL $6($3, $40)
	
.LABEL $label$147
	*($47 + [432]) = *($41 + [64])
	$39 = *($0)
	*($47 + [496]) = ($47 + [432])
	CALL eosio_assert(((int_32)$41 != (int_32)[0]), [1312])
	CALL $45($3, $41, $39, ($47 + [496]))
	$39 = *($47 + [432])
	*($47 + [440]) = (int_64)0
	*($47 + [432]) = $39
	$39 = *($0)
	CALL $46(($47 + [496]), ($47 + [512]))
	$41 = *($47 + [496])
	CALL send_deferred(($47 + [432]), $39, $41, (*($47 + [500]) - $41), [0])
	$41 = *($47 + [496])
	if ( ($41 == 0) ){ goto $label$148 }
	*($47 + [500]) = $41
	CALL $99($41)
	
.LABEL $label$148
	CALL $47(($47 + [512]))
	
.LABEL $label$119
	*(($41 = (($47 + [352]) + [8]))) = $20
	*($47 + [352]) = $19
	$39 = *($24 + [136])
	CALL $107(($47 + [336]), ($47 + [576]))
	CALL eosio_assert(( (uint_64)($43 <= (int_64)4611686018427387904) ? ((int_64)$45 < (int_64)0) : (int_64)($45 == 0) ), [896])
	CALL eosio_assert(( ((uint_64)$43 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$45 > (int_64)-1) : ((int_64)$45 == (int_64)-1) ), [928])
	*(($40 = (($47 + [320]) + [8]))) = $20
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [976])
	*((($47 + [16]) + [12])) = *((($47 + [352]) + [12]))
	*((($47 + [16]) + [8])) = *($41)
	*($47 + [320]) = $44
	*($47 + [16]) = *($47 + [352])
	*(($47 + [8])) = *($40)
	*($47) = *($47 + [320])
	CALL _ZN9farmeosrb11rcd_my_betsEmyN5eosio5assetEymNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEES1_($0, $5, $25, ($47 + [16]), $39, $17, ($47 + [336]), $47)
	if ( ((*($47 + [336]) & [1]) == 0) ){ goto $label$118 }
	CALL $99(*((($47 + [336]) + [8])))
	
.LABEL $label$118
	$41 = [0]
	$40 = CALL db_lowerbound_i64(*($27), *($26), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$40 < (int_32)[0]) ){ goto $label$149 }
	$41 = CALL $17($2, $40)
	
.LABEL $label$149
	$40 = ((int_32)$41 != (int_32)[0])
	CALL eosio_assert($40, [1872])
	CALL eosio_assert($40, [1920])
	$40 = CALL db_next_i64(*($41 + [216]), ($47 + [512]))
	if ( ((int_32)$40 < (int_32)[0]) ){ goto $label$150 }
	CALL $17($2, $40)
	
.LABEL $label$150
	CALL $48($2, $41)
	if ( ((*($47 + [576]) & [1]) == 0) ){ goto $label$151 }
	CALL $99(*($31))
	
.LABEL $label$151
	$18 = ($18 + [1])
	$41 = CALL db_lowerbound_i64(*($27), *($26), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$41 >= (int_32)[0]) ){ goto $label$13 }
	
.LABEL $label$12
	$41 = CALL db_lowerbound_i64(*($27), *($26), (int_64)4229865212519383040, (int_64)0)
	if ( ((int_32)$41 < (int_32)[0]) ){ goto $label$10 }
	CALL $17($2, $41)
	$39 = CALL current_time()
	*(($47 + [540])) = [0]
	*(($47 + [544])) = [0]
	*($47 + [524]) = [0]
	*($47 + [528]) = [0]
	*($47 + [532]) = [0]
	*($47 + [536]) = [0]
	*($47 + [512]) = ((CASTING uint_32)(uint_64 ((uint_64)$39 / (uint_64)(int_64)1000000)) + [60])
	*($47 + [548]) = [0]
	*(($47 + [552])) = [0]
	*(($47 + [556])) = [0]
	*($47 + [560]) = [0]
	*(($47 + [564])) = [0]
	*(($47 + [568])) = [0]
	$24 = ($47 + [548])
	$25 = *($0)
	$39 = (int_64)0
	$43 = (int_64)59
	$41 = [1008]
	$44 = (int_64)0
	
.LOOP $label$152:
	if ( ((uint_64)$39 > (uint_64)(int_64)5) ){ goto $label$157 }
	$40 = *($41)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$156 }
	$40 = ($40 + [165])
	goto $label$155 
	
.LABEL $label$157
	$45 = (int_64)0
	if ( ((uint_64)$39 <= (uint_64)(int_64)11) ){ goto $label$154 }
	goto $label$153 
	
.LABEL $label$156
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$155
	$45 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$154
	$45 = ((int_64)((int_64)$45 & (int_64)31) << (int_64)((int_64)$43 & (int_64)4294967295))
	
.LABEL $label$153
	$41 = ($41 + [1])
	$39 = ((int_64)$39 + (int_64)1)
	$44 = ((int_64)$45 | (int_64)$44)
	$43 = ((int_64)$43 + (int_64)-5)
	if ( ((int_64)$43 != (int_64)-6) ){ goto $label$152 }
	*($47 + [440]) = $44
	*($47 + [432]) = $25
	$39 = (int_64)0
	$43 = (int_64)59
	$41 = [1952]
	$44 = (int_64)0
	
.LOOP $label$158:
	if ( ((uint_64)$39 > (uint_64)(int_64)5) ){ goto $label$163 }
	$40 = *($41)
	if ( ((uint_32)(($40 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$162 }
	$40 = ($40 + [165])
	goto $label$161 
	
.LABEL $label$163
	$45 = (int_64)0
	if ( ((uint_64)$39 <= (uint_64)(int_64)11) ){ goto $label$160 }
	goto $label$159 
	
.LABEL $label$162
	$40 = ( ($40 + [208]) ? [0] : ((($40 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$161
	$45 = (int_64)((int_64)(CASTING uint_64)(uint_32 $40) << (int_64)56) >> (int_64)56)
	
.LABEL $label$160
	$45 = ((int_64)((int_64)$45 & (int_64)31) << (int_64)((int_64)$43 & (int_64)4294967295))
	
.LABEL $label$159
	$41 = ($41 + [1])
	$39 = ((int_64)$39 + (int_64)1)
	$44 = ((int_64)$45 | (int_64)$44)
	$43 = ((int_64)$43 + (int_64)-5)
	if ( ((int_64)$43 != (int_64)-6) ){ goto $label$158 }
	*($47 + [496]) = $44
	*($47 + [880]) = $25
	CALL $49($24, ($47 + [432]), $0, ($47 + [496]), ($47 + [880]))
	$39 = *($0)
	*(($47 + [532])) = [1]
	CALL require_auth($39)
	$41 = [0]
	$40 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$40 < (int_32)[0]) ){ goto $label$164 }
	$41 = CALL $6($3, $40)
	
.LABEL $label$164
	*($47 + [432]) = *($41 + [64])
	$39 = *($0)
	*($47 + [496]) = ($47 + [432])
	CALL eosio_assert(((int_32)$41 != (int_32)[0]), [1312])
	CALL $45($3, $41, $39, ($47 + [496]))
	$39 = *($47 + [432])
	*($47 + [440]) = (int_64)0
	*($47 + [432]) = $39
	$39 = *($0)
	CALL $46(($47 + [496]), ($47 + [512]))
	$41 = *($47 + [496])
	CALL send_deferred(($47 + [432]), $39, $41, (*($47 + [500]) - $41), [0])
	$41 = *($47 + [496])
	if ( ($41 == 0) ){ goto $label$165 }
	*($47 + [500]) = $41
	CALL $99($41)
	
.LABEL $label$165
	CALL prints([1968])
	CALL $47(($47 + [512]))
	
.LABEL $label$10
	*([0] + [4]) = ($47 + [912])
	return (unreachable)
	
.LABEL $label$9
	CALL $100(($47 + [576]))
	
.LABEL $label$8
	CALL $100(($47 + [848]))
	
.LABEL $label$7
	CALL $100(($47 + [800]))
	
.LABEL $label$6
	CALL $100(($47 + [752]))
	
.LABEL $label$5
	CALL $100(($47 + [704]))
	
.LABEL $label$4
	CALL $100(($47 + [656]))
	
.LABEL $label$3
	CALL $100(($47 + [608]))
	
.LABEL $label$2
	CALL $100(($47 + [416]))
	
.LABEL $label$1
	CALL $100(($47 + [416]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $41 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$7 = *($0 + [8])
	if ( ((uint_32)int_32(($7 - $2) >> [2]) >= (uint_32)$1) ){ goto $label$5 }
	$3 = *($0)
	$4 = int_32(($2 - $3) >> [2])
	$2 = ($4 + $1)
	if ( ((uint_32)$2 >= (uint_32)[1073741824]) ){ goto $label$3 }
	$6 = [1073741823]
	$7 = ($7 - $3)
	if ( ((uint_32)int_32($7 >> [2]) > (uint_32)[536870910]) ){ goto $label$6 }
	$6 = int_32($7 >> [1])
	$6 = ( $2 ? $6 : ($6 <= $2) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[1073741824]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $98(($6 << [2]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $2
	$7 = $1
	
.LOOP $label$7:
	*($6) = [0]
	$6 = ($6 + [4])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	*(($0 + [4])) = ($2 + ($1 << [2]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $106($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$3 = ($7 + ($6 << [2]))
	$2 = ($7 + ($4 << [2]))
	$6 = $2
	$7 = $1
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [4])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$8 }
	$4 = ($2 + ($1 << [2]))
	$6 = *($0)
	$5 = ($0 + [4])
	$7 = (*($5) - $6)
	$1 = ($2 - $7)
	if ( ((int_32)$7 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $7)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($5) = $4
	*(($0 + [8])) = $3
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $99($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1696])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$3 = *($1 + [4])
	$7 = int_32(($3 - $4) >> [2])
	$5 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$5 <= (uint_32)$7) ){ goto $label$4 }
	CALL $41($1, ($5 - $7))
	$3 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 != (int_32)$3) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ((uint_32)$5 >= (uint_32)$7) ){ goto $label$5 }
	$3 = ($4 + ($5 << [2]))
	*(($1 + [4])) = $3
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$3
	$5 = ($0 + [4])
	$7 = *($5)
	$2 = ($0 + [8])
	
.LOOP $label$6:
	CALL eosio_assert(((uint_32)(*($2) - $7) > (uint_32)[3]), [1680])
	CALL memcpy($4, *($5), [4])
	$7 = (*($5) + [4])
	*($5) = $7
	$4 = ($4 + [4])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$6 }
	
.LABEL $label$2
	return $0
}

int_32 .FUNC $47 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $99($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $99($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $99($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $99($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $99($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $99($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $99($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $99($5)
	
.LABEL $label$12
	return $0
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $50($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $10($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $51($4, $1)
	CALL $53(CALL $52(CALL $52($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

void .FUNC $45 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	$29 = (*([0] + [4]) - [128])
	*([0] + [4]) = $29
	CALL eosio_assert(((int_32)*($1 + [240]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	*($1 + [64]) = ((int_64)*(*($3)) + (int_64)1)
	$4 = *($1)
	CALL eosio_assert([1], [1584])
	*(($3 = $29) + [24]) = [0]
	*($3 + [8]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	$7 = ($1 + [12])
	*($3 + [40]) = $7
	$8 = ($1 + [16])
	*($3 + [44]) = $8
	$9 = ($1 + [20])
	*($3 + [48]) = $9
	$10 = ($1 + [24])
	*($3 + [52]) = $10
	$11 = ($1 + [28])
	*($3 + [56]) = $11
	$12 = ($1 + [32])
	*($3 + [60]) = $12
	$13 = ($1 + [40])
	*($3 + [64]) = $13
	$14 = ($1 + [48])
	*($3 + [68]) = $14
	$15 = ($1 + [56])
	*($3 + [72]) = $15
	$5 = ($1 + [64])
	*($3 + [76]) = $5
	$16 = ($1 + [72])
	*($3 + [80]) = $16
	$17 = ($1 + [88])
	*($3 + [84]) = $17
	$18 = ($1 + [104])
	*($3 + [88]) = $18
	$19 = ($1 + [120])
	*($3 + [92]) = $19
	$20 = ($1 + [136])
	*($3 + [96]) = $20
	$21 = ($1 + [152])
	*($3 + [100]) = $21
	$22 = ($1 + [168])
	*($3 + [104]) = $22
	$23 = ($1 + [180])
	*($3 + [108]) = $23
	$24 = ($1 + [192])
	*($3 + [112]) = $24
	$25 = ($1 + [204])
	*($3 + [116]) = $25
	$26 = ($1 + [216])
	*($3 + [120]) = $26
	$27 = ($1 + [228])
	*($3 + [124]) = $27
	CALL $23(($3 + [32]), ($3 + [8]))
	$28 = *($3 + [24])
	if ( ($28 <= [513]) ){ goto $label$2 }
	$29 = CALL malloc($28)
	goto $label$1 
	
.LABEL $label$2
	$29 = ($29 - (($28 + [15]) & [-16]))
	*([0] + [4]) = $29
	
.LABEL $label$1
	*($3 + [12]) = $29
	*($3 + [8]) = $29
	*($3 + [16]) = ($29 + $28)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $6
	*($3 + [40]) = $7
	*($3 + [44]) = $8
	*($3 + [48]) = $9
	*($3 + [52]) = $10
	*($3 + [56]) = $11
	*($3 + [32]) = $1
	*($3 + [60]) = $12
	*($3 + [64]) = $13
	*($3 + [68]) = $14
	*($3 + [72]) = $15
	*($3 + [76]) = $5
	*($3 + [80]) = $16
	*($3 + [84]) = $17
	*($3 + [88]) = $18
	*($3 + [92]) = $19
	*($3 + [96]) = $20
	*($3 + [100]) = $21
	*($3 + [104]) = $22
	*($3 + [108]) = $23
	*($3 + [112]) = $24
	*($3 + [116]) = $25
	*($3 + [120]) = $26
	*($3 + [124]) = $27
	CALL $24(($3 + [32]), ($3 + [24]))
	CALL db_update_i64(*($1 + [244]), $2, $29, $28)
	if ( ($28 <= [513]) ){ goto $label$3 }
	CALL free($29)
	
.LABEL $label$3
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($3 + [128])
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $6 ? $9 : ($9 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	*(($9 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $98([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($5 = ($9 + [32]))) = [0]
	*(($9 + [36])) = [0]
	$2 = *($4 + [32])
	$1 = ( *(($4 + [36])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [32])
	$8 = (CASTING uint_64)(uint_32 $1)
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$1 = ($9 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $10($1, $2)
	$7 = *($5)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($10 + [4]) = $2
	*($10) = $2
	*($10 + [8]) = $7
	*($10 + [16]) = $10
	*($10 + [24]) = $4
	$5 = ($9 + [40])
	CALL $13(($10 + [24]), ($10 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$10:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($4 = ($9 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($9 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $9
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	$1 = ([0] - $4)
	$9 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $99($2)
	
.LABEL $label$13
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($9 + [4])) = $2
	CALL $99($2)
	
.LABEL $label$14
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $99($4)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

void .FUNC _ZN9farmeosrb10record_betEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	*([0] + [4]) = $12
	*($12 + [16]) = $1
	*($12 + [12]) = $2
	$11 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$1 }
	$2 = ($10 + [-24])
	$6 = ([0] - $11)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$10 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$4 }
	$2 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [212]) == (int_32)$5), [1184])
	goto $label$3 
	
.LABEL $label$4
	$2 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4229865212519383040, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $17($5, $7)
	CALL eosio_assert(((int_32)*($2 + [212]) == (int_32)$5), [1184])
	
.LABEL $label$3
	$8 = ($0 + [8])
	$11 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$11 = CALL $6($8, $7)
	
.LABEL $label$5
	if ( $2 ){ goto $label$6 }
	$1 = *($0)
	*($12 + [8]) = ($12 + [16])
	*($12 + [56]) = $1
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$3()), [1248])
	*($12 + [32]) = $5
	*($12 + [36]) = ($12 + [8])
	*($12 + [40]) = ($12 + [56])
	$2 = CALL $98([224])
	CALL $18($2)
	*($2 + [212]) = $5
	CALL $31(($12 + [32]), $2)
	*($12 + [48]) = $2
	$1 = *($2)
	*($12 + [32]) = $1
	$10 = *($2 + [216])
	*($12 + [28]) = $10
	$6 = ($0 + [76])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [80]))) ){ goto $label$8 }
	*($7 + [8]) = $1
	*($7 + [16]) = $10
	*($12 + [48]) = [0]
	*($7) = $2
	*($6) = ($7 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $20(($0 + [72]), ($12 + [48]), ($12 + [32]), ($12 + [28]))
	
.LABEL $label$7
	$2 = *($12 + [48])
	*($12 + [48]) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ((*($2 + [144]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($2 + [152])))
	
.LABEL $label$10
	CALL $99($2)
	
.LABEL $label$9
	$1 = *($12 + [16])
	
.LABEL $label$6
	$9 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$11 }
	$2 = ($10 + [-24])
	$6 = ([0] - $9)
	
.LOOP $label$12:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$11 }
	$10 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$14 }
	$2 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [212]) == (int_32)$5), [1184])
	goto $label$13 
	
.LABEL $label$14
	$2 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4229865212519383040, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	$2 = CALL $17($5, $7)
	CALL eosio_assert(((int_32)*($2 + [212]) == (int_32)$5), [1184])
	
.LABEL $label$13
	$1 = *($0)
	*($12 + [32]) = $3
	*($12 + [36]) = ($12 + [12])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1312])
	CALL $32($5, $2, $1, ($12 + [32]))
	$1 = *($0)
	*($12 + [36]) = $3
	*($12 + [40]) = $4
	*($12 + [32]) = ($12 + [12])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [1312])
	CALL $33($8, $11, $1, ($12 + [32]))
	*([0] + [4]) = ($12 + [64])
}

void .FUNC _ZN9farmeosrb14record_bet_fosEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$12 = (*([0] + [4]) - [64])
	*([0] + [4]) = $12
	*($12 + [16]) = $1
	*($12 + [12]) = $2
	$11 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$1 }
	$2 = ($10 + [-24])
	$6 = ([0] - $11)
	
.LOOP $label$2:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$1 }
	$10 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	$5 = ($0 + [48])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$4 }
	$2 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [212]) == (int_32)$5), [1184])
	goto $label$3 
	
.LABEL $label$4
	$2 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4229865212519383040, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$2 = CALL $17($5, $7)
	CALL eosio_assert(((int_32)*($2 + [212]) == (int_32)$5), [1184])
	
.LABEL $label$3
	$8 = ($0 + [8])
	$11 = [0]
	$7 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$11 = CALL $6($8, $7)
	
.LABEL $label$5
	if ( $2 ){ goto $label$6 }
	$1 = *($0)
	*($12 + [8]) = ($12 + [16])
	*($12 + [56]) = $1
	CALL eosio_assert(((int_64)*(($0 + [48])) == (int_64)CALL $fimport$3()), [1248])
	*($12 + [32]) = $5
	*($12 + [36]) = ($12 + [8])
	*($12 + [40]) = ($12 + [56])
	$2 = CALL $98([224])
	CALL $18($2)
	*($2 + [212]) = $5
	CALL $19(($12 + [32]), $2)
	*($12 + [48]) = $2
	$1 = *($2)
	*($12 + [32]) = $1
	$10 = *($2 + [216])
	*($12 + [28]) = $10
	$6 = ($0 + [76])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [80]))) ){ goto $label$8 }
	*($7 + [8]) = $1
	*($7 + [16]) = $10
	*($12 + [48]) = [0]
	*($7) = $2
	*($6) = ($7 + [24])
	goto $label$7 
	
.LABEL $label$8
	CALL $20(($0 + [72]), ($12 + [48]), ($12 + [32]), ($12 + [28]))
	
.LABEL $label$7
	$2 = *($12 + [48])
	*($12 + [48]) = [0]
	if ( ($2 == 0) ){ goto $label$9 }
	if ( ((*($2 + [144]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($2 + [152])))
	
.LABEL $label$10
	CALL $99($2)
	
.LABEL $label$9
	$1 = *($12 + [16])
	
.LABEL $label$6
	$9 = *(($0 + [72]))
	$10 = *(($0 + [76]))
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$11 }
	$2 = ($10 + [-24])
	$6 = ([0] - $9)
	
.LOOP $label$12:
	if ( ((int_64)*(*($2)) == (int_64)$1) ){ goto $label$11 }
	$10 = $2
	$7 = ($2 + [-24])
	$2 = $7
	if ( ((int_32)($7 + $6) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$14 }
	$2 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($2 + [212]) == (int_32)$5), [1184])
	goto $label$13 
	
.LABEL $label$14
	$2 = [0]
	$7 = CALL db_find_i64(*(($0 + [48])), *(($0 + [56])), (int_64)4229865212519383040, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$13 }
	$2 = CALL $17($5, $7)
	CALL eosio_assert(((int_32)*($2 + [212]) == (int_32)$5), [1184])
	
.LABEL $label$13
	$1 = *($0)
	*($12 + [32]) = $3
	*($12 + [36]) = ($12 + [12])
	CALL eosio_assert(((int_32)$2 != (int_32)[0]), [1312])
	CALL $21($5, $2, $1, ($12 + [32]))
	$1 = *($0)
	*($12 + [36]) = $3
	*($12 + [40]) = $4
	*($12 + [32]) = ($12 + [12])
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [1312])
	CALL $22($8, $11, $1, ($12 + [32]))
	*([0] + [4]) = ($12 + [64])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [128])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1648])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $98([256])
	CALL $36($6)
	*($6 + [240]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [12])
	*($8 + [44]) = ($6 + [16])
	*($8 + [48]) = ($6 + [20])
	*($8 + [52]) = ($6 + [24])
	*($8 + [56]) = ($6 + [28])
	*($8 + [60]) = ($6 + [32])
	*($8 + [64]) = ($6 + [40])
	*($8 + [68]) = ($6 + [48])
	*($8 + [72]) = ($6 + [56])
	*($8 + [76]) = ($6 + [64])
	*($8 + [80]) = ($6 + [72])
	*($8 + [84]) = ($6 + [88])
	*($8 + [88]) = ($6 + [104])
	*($8 + [92]) = ($6 + [120])
	*($8 + [96]) = ($6 + [136])
	*($8 + [100]) = ($6 + [152])
	*($8 + [104]) = ($6 + [168])
	*($8 + [108]) = ($6 + [180])
	*($8 + [112]) = ($6 + [192])
	*($8 + [116]) = ($6 + [204])
	*($8 + [120]) = ($6 + [216])
	*($8 + [124]) = ($6 + [228])
	CALL $37(($8 + [32]), ($8 + [24]))
	*($6 + [244]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [244])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $38(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	$7 = *($4 + [228])
	if ( ($7 == 0) ){ goto $label$10 }
	*(($4 + [232])) = $7
	CALL $99($7)
	
.LABEL $label$10
	$7 = *($4 + [216])
	if ( ($7 == 0) ){ goto $label$11 }
	*(($4 + [220])) = $7
	CALL $99($7)
	
.LABEL $label$11
	$7 = *($4 + [204])
	if ( ($7 == 0) ){ goto $label$12 }
	*(($4 + [208])) = $7
	CALL $99($7)
	
.LABEL $label$12
	$7 = *($4 + [192])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($4 + [196])) = $7
	CALL $99($7)
	
.LABEL $label$13
	$7 = *($4 + [180])
	if ( ($7 == 0) ){ goto $label$14 }
	*(($4 + [184])) = $7
	CALL $99($7)
	
.LABEL $label$14
	$7 = *($4 + [168])
	if ( ($7 == 0) ){ goto $label$15 }
	*(($4 + [172])) = $7
	CALL $99($7)
	
.LABEL $label$15
	CALL $99($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [128])
	return $6
}

void .FUNC $7 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [32])
	*([0] + [4]) = $14
	$10 = *($3 + [4])
	if ( ((int_32)$10 == (int_32)*($3 + [8])) ){ goto $label$2 }
	CALL $107($10, $1)
	*(($1 = ($3 + [4]))) = (*($1) + [12])
	goto $label$1 
	
.LABEL $label$2
	CALL $34($3, $1)
	
.LABEL $label$1
	$1 = *($2)
	if ( ($1 & [1]) ){ goto $label$4 }
	$12 = uint_32($1 >> [1])
	goto $label$3 
	
.LABEL $label$4
	$12 = *($2 + [4])
	
.LABEL $label$3
	*($14 + [24]) = [0]
	*($14 + [16]) = (int_64)0
	$5 = ($2 + [1])
	$4 = (($14 + [16]) | [1])
	
.LOOP $label$6:
	$11 = ($3 + [4])
	CALL $101(($14 + [16]), (*($11) + [-12]))
	$9 = *($14 + [16])
	$13 = ($9 & [1])
	$10 = [0]
	$7 = ($1 & [1])
	$1 = *($2)
	$1 = ( *(($2 + [4])) ? uint_32($1 >> [1]) : $7 )
	if ( ($1 == 0) ){ goto $label$7 }
	$10 = ( *($14 + [20]) ? uint_32($9 >> [1]) : $13 )
	if ( ((int_32)$10 < (int_32)$1) ){ goto $label$5 }
	$6 = ( *((($14 + [16]) + [8])) ? $4 : $13 )
	$8 = ($6 + $10)
	$7 = ( *(($2 + [8])) ? $5 : $7 )
	$9 = *($7)
	$13 = $6
	
.LOOP $label$8:
	$10 = (($10 - $1) + [1])
	if ( ($10 == 0) ){ goto $label$5 }
	$10 = CALL memchr($13, $9, $10)
	if ( ($10 == 0) ){ goto $label$5 }
	if ( (CALL memcmp($10, $7, $1) == 0) ){ goto $label$9 }
	$13 = ($10 + [1])
	$10 = ($8 - $13)
	if ( ((int_32)$10 >= (int_32)$1) ){ goto $label$8 }
	goto $label$5 
	
.LABEL $label$9
	if ( ((int_32)$10 == (int_32)$8) ){ goto $label$5 }
	$10 = ($10 - $6)
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$5 }
	
.LABEL $label$7
	CALL $108($14, ($14 + [16]), [0], $10, ($14 + [16]))
	$13 = *($11)
	$1 = ($13 + [-12])
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*(($13 + [-4]))) = [0]
	*(($13 + [-8])) = [0]
	
.LABEL $label$10
	CALL $103($1, [0])
	$13 = ($14 + [8])
	*(($1 + [8])) = *($13)
	*($1) = *($14)
	$10 = *($14 + [16])
	$1 = ($10 + $12)
	CALL $108($14, ($14 + [16]), $1, (( *($14 + [20]) ? uint_32($10 >> [1]) : ($10 & [1]) ) - $1), ($14 + [16]))
	$1 = *($11)
	if ( ($1 <= *(($3 + [8]))) ){ goto $label$12 }
	CALL $35($3, $14)
	if ( ((*($14) & [1]) == 0) ){ goto $label$6 }
	CALL $99(*($13))
	goto $label$6 
	
.LABEL $label$12
	*($1) = *($14)
	*(($1 + [8])) = *($13)
	*($13) = [0]
	*($14) = [0]
	*($14 + [4]) = [0]
	*($11) = (*($11) + [12])
	goto $label$6 
	
.LABEL $label$5
	if ( ((*($14 + [16]) & [1]) == 0) ){ goto $label$13 }
	CALL $99(*(($14 + [24])))
	
.LABEL $label$13
	*([0] + [4]) = ($14 + [32])
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

void .FUNC _ZN9farmeosrb8transferEyyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_64 $24
	int_64 $25
	int_32 $26
	int_64 $27
	int_64 $28
	int_64 $29
	int_32 $30
	$30 = (*([0] + [4]) - [576])
	*([0] + [4]) = $30
	$29 = *($0)
	if ( ((int_64)$29 == (int_64)$1) ){ goto $label$5 }
	if ( ((int_64)$29 != (int_64)$2) ){ goto $label$5 }
	CALL require_auth($1)
	$26 = [1]
	$23 = *($4)
	$8 = CALL strlen([16])
	if ( ((int_32)$8 != (int_32)( *($4 + [4]) ? uint_32($23 >> [1]) : ($23 & [1]) )) ){ goto $label$6 }
	if ( (CALL $105($4, [0], [-1], [16], $8) == 0) ){ goto $label$5 }
	
.LABEL $label$6
	$29 = *($3 + [8])
	if ( ((int_64)$29 == (int_64)1397703940) ){ goto $label$7 }
	$26 = ((int_64)$29 == (int_64)1397704196)
	
.LABEL $label$7
	CALL eosio_assert($26, [32])
	$24 = *($3)
	CALL eosio_assert(((int_64)$24 > (int_64)0), [64])
	CALL eosio_assert(((int_64)$24 < (int_64)500001), [96])
	$2 = (uint_64)$29 >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$23 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$23 = [0]
	
.LABEL $label$8
	CALL eosio_assert($23, [160])
	$26 = ($0 + [8])
	$23 = [0]
	$8 = [0]
	$7 = ($0 + [16])
	$5 = CALL db_lowerbound_i64(*($0 + [8]), *($7), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$13 }
	$8 = CALL $6($26, $5)
	
.LABEL $label$13
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [192])
	$8 = CALL db_lowerbound_i64(*($26), *($7), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$14 }
	$23 = CALL $6($26, $8)
	
.LABEL $label$14
	CALL eosio_assert(((int_32)*($23 + [32]) == (int_32)[2]), [224])
	if ( ((int_64)$29 != (int_64)1397703940) ){ goto $label$20 }
	CALL eosio_assert([1], [1104])
	$2 = (int_64)5459781
	$26 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	
.LOOP $label$23:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$23 }
	
.LABEL $label$22
	$8 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$21 }
	goto $label$18 
	
.LABEL $label$20
	if ( ((int_64)$29 != (int_64)1397704196) ){ goto $label$15 }
	CALL eosio_assert([1], [1104])
	$2 = (int_64)5459782
	$26 = [0]
	
.LOOP $label$24:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$25 }
	
.LOOP $label$26:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$26 }
	
.LABEL $label$25
	$8 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$24 }
	goto $label$16 
	
.LABEL $label$19
	$8 = [0]
	
.LABEL $label$18
	CALL eosio_assert($8, [160])
	CALL eosio_assert(((int_64)*(($23 + [80])) == (int_64)1397703940), [240])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2((int_64)1000000 - *($23 + [72]))) > (int_64)-4611686018427387904), [288])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [320])
	CALL eosio_assert(((int_64)*(($23 + [112])) == (int_64)1397703940), [240])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($2 - *($23 + [104]))) > (int_64)-4611686018427387904), [288])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [320])
	CALL eosio_assert(((int_64)*(($23 + [144])) == (int_64)1397703940), [240])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($2 - *($23 + [136]))) > (int_64)-4611686018427387904), [288])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [320])
	CALL eosio_assert(((int_64)$2 >= (int_64)$24), [352])
	goto $label$15 
	
.LABEL $label$17
	$8 = [0]
	
.LABEL $label$16
	CALL eosio_assert($8, [160])
	CALL eosio_assert(((int_64)*(($23 + [96])) == (int_64)1397704196), [240])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2((int_64)10000000 - *($23 + [88]))) > (int_64)-4611686018427387904), [288])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [320])
	CALL eosio_assert(((int_64)*(($23 + [128])) == (int_64)1397704196), [240])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($2 - *($23 + [120]))) > (int_64)-4611686018427387904), [288])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [320])
	CALL eosio_assert(((int_64)*(($23 + [160])) == (int_64)1397704196), [240])
	$2 = (int_64)
	CALL eosio_assert(((int_64)$2($2 - *($23 + [152]))) > (int_64)-4611686018427387904), [288])
	CALL eosio_assert(((int_64)$2 < (int_64)4611686018427387904), [320])
	CALL eosio_assert(((int_64)$2 >= (int_64)$24), [416])
	
.LABEL $label$15
	$6 = *($23 + [28])
	*($30 + [536]) = [0]
	*($30 + [528]) = (int_64)0
	CALL $107(($30 + [512]), $4)
	*(($30 + [504])) = [0]
	*($30 + [496]) = (int_64)0
	$26 = CALL strlen([480])
	if ( ((uint_32)$26 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$26 >= (uint_32)[11]) ){ goto $label$29 }
	*($30 + [496]) = ($26 << [1])
	$23 = (($30 + [496]) | [1])
	if ( $26 ){ goto $label$28 }
	goto $label$27 
	
.LABEL $label$29
	$4 = (($26 + [16]) & [-16])
	$23 = CALL $98($4)
	*($30 + [496]) = ($4 | [1])
	*($30 + [504]) = $23
	*($30 + [500]) = $26
	
.LABEL $label$28
	CALL memcpy($23, [480], $26)
	
.LABEL $label$27
	*(($23 + $26)) = [0]
	CALL $7($0, ($30 + [512]), ($30 + [496]), ($30 + [528]))
	if ( ((*($30 + [496]) & [1]) == 0) ){ goto $label$30 }
	CALL $99(*($30 + [504]))
	
.LABEL $label$30
	if ( ((*($30 + [512]) & [1]) == 0) ){ goto $label$31 }
	CALL $99(*($30 + [520]))
	
.LABEL $label$31
	CALL eosio_assert(((int_32)(*($30 + [532]) - *($30 + [528])) == (int_32)[36]), [496])
	$7 = *($30 + [528])
	if ( (*($7) & [1]) ){ goto $label$33 }
	$26 = ($7 + [1])
	goto $label$32 
	
.LABEL $label$33
	$26 = *($7 + [8])
	
.LABEL $label$32
	$23 = [-1]
	
.LOOP $label$34:
	$4 = ($26 + $23)
	$8 = ($23 + [1])
	$23 = $8
	if ( *(($4 + [1])) ){ goto $label$34 }
	$9 = (CASTING uint_64)(uint_32 $8)
	$2 = (int_64)0
	$24 = (int_64)59
	$29 = (int_64)0
	
.LOOP $label$35:
	$25 = (int_64)0
	if ( ((uint_64)$2 >= (uint_64)$9) ){ goto $label$36 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$23 = ($23 + [165])
	goto $label$37 
	
.LABEL $label$38
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$25 = (int_64)((int_64)(CASTING uint_64)(uint_32 $23) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$40 }
	$25 = ((int_64)((int_64)$25 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	goto $label$39 
	
.LABEL $label$40
	$25 = ((int_64)$25 & (int_64)15)
	
.LABEL $label$39
	$26 = ($26 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$29 = ((int_64)$25 | (int_64)$29)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$35 }
	if ( (*($7 + [12]) & [1]) ){ goto $label$42 }
	$26 = (($7 + [12]) + [1])
	goto $label$41 
	
.LABEL $label$42
	$26 = *(($7 + [20]))
	
.LABEL $label$41
	CALL atoi($26)
	$26 = *($30 + [528])
	if ( (*($26 + [24]) & [1]) ){ goto $label$44 }
	$4 = (($26 + [24]) + [1])
	goto $label$43 
	
.LABEL $label$44
	$4 = *(($26 + [32]))
	
.LABEL $label$43
	*(($30 + [488])) = [0]
	*($30 + [480]) = (int_64)0
	$26 = CALL strlen($4)
	if ( ((uint_32)$26 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$26 >= (uint_32)[11]) ){ goto $label$47 }
	*($30 + [480]) = ($26 << [1])
	$23 = (($30 + [480]) | [1])
	if ( $26 ){ goto $label$46 }
	goto $label$45 
	
.LABEL $label$47
	$8 = (($26 + [16]) & [-16])
	$23 = CALL $98($8)
	*($30 + [480]) = ($8 | [1])
	*($30 + [488]) = $23
	*($30 + [484]) = $26
	
.LABEL $label$46
	CALL memcpy($23, $4, $26)
	
.LABEL $label$45
	*(($23 + $26)) = [0]
	*($30 + [472]) = [0]
	*($30 + [464]) = (int_64)0
	CALL $107(($30 + [448]), ($30 + [480]))
	*(($30 + [440])) = [0]
	*($30 + [432]) = (int_64)0
	$26 = CALL strlen([512])
	if ( ((uint_32)$26 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$26 >= (uint_32)[11]) ){ goto $label$50 }
	*($30 + [432]) = ($26 << [1])
	$23 = (($30 + [432]) | [1])
	if ( $26 ){ goto $label$49 }
	goto $label$48 
	
.LABEL $label$50
	$4 = (($26 + [16]) & [-16])
	$23 = CALL $98($4)
	*($30 + [432]) = ($4 | [1])
	*($30 + [440]) = $23
	*($30 + [436]) = $26
	
.LABEL $label$49
	CALL memcpy($23, [512], $26)
	
.LABEL $label$48
	*(($23 + $26)) = [0]
	CALL $7($0, ($30 + [448]), ($30 + [432]), ($30 + [464]))
	if ( ((*($30 + [432]) & [1]) == 0) ){ goto $label$51 }
	CALL $99(*($30 + [440]))
	
.LABEL $label$51
	if ( ((*($30 + [448]) & [1]) == 0) ){ goto $label$52 }
	CALL $99(*($30 + [456]))
	
.LABEL $label$52
	CALL eosio_assert(((int_32)(*($30 + [468]) - *($30 + [464])) == (int_32)[180]), [528])
	*(($26 = CALL $98([60]))) = (int_64)0
	*($26 + [8 align=4]) = (int_64)0
	*($26 + [16 align=4]) = (int_64)0
	*($26 + [24]) = [0]
	*($30 + [416]) = $26
	$23 = ($26 + [60])
	*($30 + [424]) = $23
	*($26 + [28]) = [0]
	*($26 + [32]) = [0]
	*($26 + [36]) = [0]
	*($26 + [40]) = [0]
	*($26 + [44]) = [0]
	*($26 + [48]) = [0]
	*($26 + [52]) = [0]
	*($26 + [56]) = [0]
	*($30 + [420]) = $23
	$23 = [8]
	$8 = *($30 + [416])
	$26 = $8
	
.LOOP $label$53:
	$4 = (*($30 + [464]) + $23)
	if ( (*(($4 + [-8])) & [1]) ){ goto $label$55 }
	$4 = ($4 + [-7])
	goto $label$54 
	
.LABEL $label$55
	$4 = *($4)
	
.LABEL $label$54
	$4 = CALL atoi($4)
	CALL eosio_assert(((int_32)uint_32($4 >> [31]) ^ (int_32)[1]), [544])
	*($26) = ($4 + *($26))
	$26 = ($26 + [4])
	$23 = ($23 + [12])
	if ( ((int_32)$23 != (int_32)[188]) ){ goto $label$53 }
	$12 = *(($3 + [8]))
	if ( ((int_64)$12 != (int_64)1397703940) ){ goto $label$63 }
	$26 = *($8 + [56])
	$23 = *($8 + [52])
	$4 = *($8 + [48])
	$7 = *($8 + [44])
	$25 = *($8 + [40])
	$5 = *($8 + [36])
	$16 = *($8 + [32])
	$17 = *($8 + [28])
	$18 = *($8 + [24])
	$2 = *($8 + [20])
	$19 = *($8 + [16])
	$20 = *($8 + [12])
	$21 = *($8 + [8])
	$22 = *($8 + [4])
	$9 = *($8)
	$27 = *($3)
	CALL printi($27)
	CALL prints([592])
	$25 = ((int_64)((int_64)((int_64)((int_64)((int_64)$25 * (int_64)5000) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$7 * (int_32)[10000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$4 * (int_32)[50000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$23 * (int_32)[100000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$26 * (int_32)[200000])))
	$2 = ((int_64)((int_64)((int_64)((int_64)((int_64)$9 * (int_64)5000) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$22 * (int_32)[10000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$21 * (int_32)[50000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$20 * (int_32)[100000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$19 * (int_32)[200000])))
	$24 = ((int_64)((int_64)((int_64)((int_64)((int_64)$2 * (int_64)5000) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$18 * (int_32)[10000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$17 * (int_32)[50000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$16 * (int_32)[100000]))) + (int_64)(CASTING uint_64)(uint_32 ((int_32)$5 * (int_32)[200000])))
	$9 = ((int_64)((int_64)$24 + (int_64)$2) + (int_64)$25)
	CALL printi($9)
	CALL eosio_assert(((int_64)$27 == (int_64)$9), [608])
	if ( (int_64)($2 == 0) ){ goto $label$60 }
	*(($23 = CALL $98([20]))) = (int_64)0
	*($23 + [8 align=4]) = (int_64)0
	*($23 + [16]) = [0]
	CALL prints([656])
	*($23) = *($8)
	*($23 + [4]) = *(($8 + [4]))
	*($23 + [8]) = *(($8 + [8]))
	*($23 + [12]) = *(($8 + [12]))
	*($30 + [408]) = (int_64)1397703940
	*($30 + [400]) = $2
	CALL eosio_assert((uint_64)(((int_64)$2 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1104])
	$2 = (uint_64)*($30 + [408]) >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$64:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$62 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$65 }
	
.LOOP $label$66:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$62 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$66 }
	
.LABEL $label$65
	$4 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$64 }
	goto $label$61 
	
.LABEL $label$63
	if ( ((int_64)$12 != (int_64)1397704196) ){ goto $label$56 }
	$26 = *($8 + [56])
	$23 = *($8 + [52])
	$4 = *($8 + [48])
	$7 = *($8 + [44])
	$5 = *($8 + [40])
	$16 = *($8 + [36])
	$17 = *($8 + [32])
	$18 = *($8 + [28])
	$19 = *($8 + [24])
	$20 = *($8 + [20])
	$21 = *($8 + [16])
	$22 = *($8 + [12])
	$13 = *($8 + [8])
	$14 = *($8 + [4])
	$15 = *($8)
	$2 = *($3)
	CALL printi($2)
	CALL prints([816])
	$7 = ((((((int_32)$7 * (int_32)[100000]) + ((int_32)$5 * (int_32)[10000])) + ((int_32)$4 * (int_32)[500000])) + ((int_32)$23 * (int_32)[1000000])) + ((int_32)$26 * (int_32)[2500000]))
	$27 = (CASTING uint_64)(uint_32 $7)
	$17 = ((((((int_32)$14 * (int_32)[100000]) + ((int_32)$15 * (int_32)[10000])) + ((int_32)$13 * (int_32)[500000])) + ((int_32)$22 * (int_32)[1000000])) + ((int_32)$21 * (int_32)[2500000]))
	$9 = (CASTING uint_64)(uint_32 $17)
	$16 = ((((((int_32)$19 * (int_32)[100000]) + ((int_32)$20 * (int_32)[10000])) + ((int_32)$18 * (int_32)[500000])) + ((int_32)$17 * (int_32)[1000000])) + ((int_32)$16 * (int_32)[2500000]))
	$25 = (CASTING uint_64)(uint_32 $16)
	$24 = ((int_64)((int_64)$25 + (int_64)$9) + (int_64)$27)
	CALL printi($24)
	CALL eosio_assert(((int_64)$2 == (int_64)$24), [832])
	if ( ($17 == 0) ){ goto $label$57 }
	*(($23 = CALL $98([20]))) = (int_64)0
	*($23 + [8 align=4]) = (int_64)0
	*($23 + [16]) = [0]
	*($23) = *($8)
	*($23 + [4]) = *(($8 + [4]))
	*($23 + [8]) = *(($8 + [8]))
	*($23 + [12]) = *(($8 + [12]))
	*($30 + [312]) = (int_64)1397704196
	*($30 + [304]) = $9
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($30 + [312]) >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$67:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$59 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$68 }
	
.LOOP $label$69:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$59 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$69 }
	
.LABEL $label$68
	$4 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$67 }
	goto $label$58 
	
.LABEL $label$62
	$4 = [0]
	
.LABEL $label$61
	CALL eosio_assert($4, [160])
	*($30 + [392]) = [0]
	*($30 + [384]) = (int_64)0
	$26 = CALL $98([20])
	*($30 + [384]) = $26
	*($30 + [388]) = $26
	*($30 + [392]) = ($26 + [20])
	CALL memcpy($26, $23, [20])
	*((($30 + [56]) + [8])) = *((($30 + [400]) + [8]))
	*($30 + [388]) = (*($30 + [388]) + [20])
	*($30 + [56]) = *($30 + [400])
	CALL _ZN9farmeosrb10record_betEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE($0, $1, [1], ($30 + [56]), ($30 + [384]))
	$26 = *($30 + [384])
	if ( ($26 == 0) ){ goto $label$70 }
	*($30 + [388]) = $26
	CALL $99($26)
	
.LABEL $label$70
	CALL prints([688])
	if ( ($23 == 0) ){ goto $label$60 }
	CALL $99($23)
	
.LABEL $label$60
	if ( (int_64)($24 == 0) ){ goto $label$71 }
	*(($23 = CALL $98([20]))) = (int_64)0
	*($23 + [8 align=4]) = (int_64)0
	*($23 + [16]) = [0]
	CALL prints([720])
	*($23) = *(($8 + [20]))
	*($23 + [4]) = *(($8 + [24]))
	*($23 + [8]) = *(($8 + [28]))
	*($23 + [12]) = *(($8 + [32]))
	*($30 + [376]) = (int_64)1397703940
	*($30 + [368]) = $24
	CALL eosio_assert((uint_64)(((int_64)$24 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1104])
	$2 = (uint_64)*($30 + [376]) >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$74:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$73 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$75 }
	
.LOOP $label$76:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$73 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$76 }
	
.LABEL $label$75
	$4 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$74 }
	goto $label$72 
	
.LABEL $label$73
	$4 = [0]
	
.LABEL $label$72
	CALL eosio_assert($4, [160])
	*($30 + [360]) = [0]
	*($30 + [352]) = (int_64)0
	$26 = CALL $98([20])
	*($30 + [352]) = $26
	*($30 + [356]) = $26
	*($30 + [360]) = ($26 + [20])
	CALL memcpy($26, $23, [20])
	*((($30 + [40]) + [8])) = *((($30 + [368]) + [8]))
	*($30 + [356]) = (*($30 + [356]) + [20])
	*($30 + [40]) = *($30 + [368])
	CALL _ZN9farmeosrb10record_betEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE($0, $1, [2], ($30 + [40]), ($30 + [352]))
	$26 = *($30 + [352])
	if ( ($26 == 0) ){ goto $label$77 }
	*($30 + [356]) = $26
	CALL $99($26)
	
.LABEL $label$77
	CALL prints([752])
	if ( ($23 == 0) ){ goto $label$71 }
	CALL $99($23)
	
.LABEL $label$71
	if ( (int_64)($25 == 0) ){ goto $label$56 }
	*(($23 = CALL $98([20]))) = (int_64)0
	*($23 + [8 align=4]) = (int_64)0
	*($23 + [16]) = [0]
	CALL prints([784])
	*($23) = *(($8 + [40]))
	*($23 + [4]) = *(($8 + [44]))
	*($23 + [8]) = *(($8 + [48]))
	*($23 + [12]) = *(($8 + [52]))
	*($30 + [344]) = (int_64)1397703940
	*($30 + [336]) = $25
	CALL eosio_assert((uint_64)(((int_64)$25 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1104])
	$2 = (uint_64)*($30 + [344]) >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$80:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$79 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$81 }
	
.LOOP $label$82:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$79 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$82 }
	
.LABEL $label$81
	$4 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$80 }
	goto $label$78 
	
.LABEL $label$79
	$4 = [0]
	
.LABEL $label$78
	CALL eosio_assert($4, [160])
	*($30 + [328]) = [0]
	*($30 + [320]) = (int_64)0
	$26 = CALL $98([20])
	*($30 + [320]) = $26
	*($30 + [324]) = $26
	*($30 + [328]) = ($26 + [20])
	CALL memcpy($26, $23, [20])
	*((($30 + [24]) + [8])) = *((($30 + [336]) + [8]))
	*($30 + [324]) = (*($30 + [324]) + [20])
	*($30 + [24]) = *($30 + [336])
	CALL _ZN9farmeosrb10record_betEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE($0, $1, [3], ($30 + [24]), ($30 + [320]))
	$26 = *($30 + [320])
	if ( ($26 == 0) ){ goto $label$83 }
	*($30 + [324]) = $26
	CALL $99($26)
	
.LABEL $label$83
	CALL prints([784])
	if ( ($23 == 0) ){ goto $label$56 }
	CALL $99($23)
	goto $label$56 
	
.LABEL $label$59
	$4 = [0]
	
.LABEL $label$58
	CALL eosio_assert($4, [160])
	*($30 + [296]) = [0]
	*($30 + [288]) = (int_64)0
	$26 = CALL $98([20])
	*($30 + [288]) = $26
	*($30 + [292]) = $26
	*($30 + [296]) = ($26 + [20])
	CALL memcpy($26, $23, [20])
	*((($30 + [104]) + [8])) = *((($30 + [304]) + [8]))
	*($30 + [292]) = (*($30 + [292]) + [20])
	*($30 + [104]) = *($30 + [304])
	CALL _ZN9farmeosrb14record_bet_fosEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE($0, $1, [1], ($30 + [104]), ($30 + [288]))
	$26 = *($30 + [288])
	if ( ($26 == 0) ){ goto $label$84 }
	*($30 + [292]) = $26
	CALL $99($26)
	
.LABEL $label$84
	if ( ($23 == 0) ){ goto $label$57 }
	CALL $99($23)
	
.LABEL $label$57
	if ( ($16 == 0) ){ goto $label$85 }
	*(($23 = CALL $98([20]))) = (int_64)0
	*($23 + [8 align=4]) = (int_64)0
	*($23 + [16]) = [0]
	*($23) = *(($8 + [20]))
	*($23 + [4]) = *(($8 + [24]))
	*($23 + [8]) = *(($8 + [28]))
	*($23 + [12]) = *(($8 + [32]))
	*($30 + [280]) = (int_64)1397704196
	*($30 + [272]) = $25
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($30 + [280]) >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$88:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$87 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$89 }
	
.LOOP $label$90:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$87 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$90 }
	
.LABEL $label$89
	$4 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$88 }
	goto $label$86 
	
.LABEL $label$87
	$4 = [0]
	
.LABEL $label$86
	CALL eosio_assert($4, [160])
	*($30 + [264]) = [0]
	*($30 + [256]) = (int_64)0
	$26 = CALL $98([20])
	*($30 + [256]) = $26
	*($30 + [260]) = $26
	*($30 + [264]) = ($26 + [20])
	CALL memcpy($26, $23, [20])
	*((($30 + [88]) + [8])) = *((($30 + [272]) + [8]))
	*($30 + [260]) = (*($30 + [260]) + [20])
	*($30 + [88]) = *($30 + [272])
	CALL _ZN9farmeosrb14record_bet_fosEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE($0, $1, [2], ($30 + [88]), ($30 + [256]))
	$26 = *($30 + [256])
	if ( ($26 == 0) ){ goto $label$91 }
	*($30 + [260]) = $26
	CALL $99($26)
	
.LABEL $label$91
	if ( ($23 == 0) ){ goto $label$85 }
	CALL $99($23)
	
.LABEL $label$85
	if ( ($7 == 0) ){ goto $label$56 }
	*(($23 = CALL $98([20]))) = (int_64)0
	*($23 + [8 align=4]) = (int_64)0
	*($23 + [16]) = [0]
	*($23) = *(($8 + [40]))
	*($23 + [4]) = *(($8 + [44]))
	*($23 + [8]) = *(($8 + [48]))
	*($23 + [12]) = *(($8 + [52]))
	*($30 + [248]) = (int_64)1397704196
	*($30 + [240]) = $27
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($30 + [248]) >> (uint_64)(int_64)8)
	$26 = [0]
	
.LOOP $label$94:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$93 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$95 }
	
.LOOP $label$96:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$93 }
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$96 }
	
.LABEL $label$95
	$4 = [1]
	$26 = ($26 + [1])
	if ( ((int_32)$26 < (int_32)[7]) ){ goto $label$94 }
	goto $label$92 
	
.LABEL $label$93
	$4 = [0]
	
.LABEL $label$92
	CALL eosio_assert($4, [160])
	*($30 + [232]) = [0]
	*($30 + [224]) = (int_64)0
	$26 = CALL $98([20])
	*($30 + [224]) = $26
	*($30 + [228]) = $26
	*($30 + [232]) = ($26 + [20])
	CALL memcpy($26, $23, [20])
	*((($30 + [72]) + [8])) = *((($30 + [240]) + [8]))
	*($30 + [228]) = (*($30 + [228]) + [20])
	*($30 + [72]) = *($30 + [240])
	CALL _ZN9farmeosrb14record_bet_fosEymN5eosio5assetENSt3__16vectorImNS2_9allocatorImEEEE($0, $1, [3], ($30 + [72]), ($30 + [224]))
	$26 = *($30 + [224])
	if ( ($26 == 0) ){ goto $label$97 }
	*($30 + [228]) = $26
	CALL $99($26)
	
.LABEL $label$97
	if ( ($23 == 0) ){ goto $label$56 }
	CALL $99($23)
	
.LABEL $label$56
	$26 = CALL is_account($29)
	if ( ((int_64)$29 == (int_64)$1) ){ goto $label$99 }
	if ( (((int_32)$26 ^ (int_32)[1]) == 0) ){ goto $label$98 }
	
.LABEL $label$99
	$2 = (int_64)0
	$24 = (int_64)59
	$26 = [880]
	$29 = (int_64)0
	
.LOOP $label$100:
	$25 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$101 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$103 }
	$23 = ($23 + [165])
	goto $label$102 
	
.LABEL $label$103
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$102
	$25 = ((int_64)(CASTING uint_64)(uint_32 ($23 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$101
	$26 = ($26 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$29 = ((int_64)$25 | (int_64)$29)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$100 }
	
.LABEL $label$98
	if ( ((int_64)$12 != (int_64)1397703940) ){ goto $label$104 }
	$2 = (int_64)0
	$24 = *($3)
	CALL __multi3(($30 + [8]), $24, (int_64)$24 >> (int_64)63), (int_64)100, (int_64)0)
	$24 = *(($30 + [16]))
	$25 = *($30 + [8])
	CALL eosio_assert(( (uint_64)($25 <= (int_64)4611686018427387904) ? ((int_64)$24 < (int_64)0) : (int_64)($24 == 0) ), [896])
	CALL eosio_assert(( ((uint_64)$25 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$24 > (int_64)-1) : ((int_64)$24 == (int_64)-1) ), [928])
	CALL eosio_assert([1], [960])
	CALL eosio_assert([1], [976])
	$11 = ((int_64)$25 / (int_64)10000)
	$10 = *($0)
	$25 = (int_64)59
	$26 = [1008]
	$9 = (int_64)0
	
.LOOP $label$105:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$110 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$109 }
	$23 = ($23 + [165])
	goto $label$108 
	
.LABEL $label$110
	$24 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$107 }
	goto $label$106 
	
.LABEL $label$109
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$108
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $23) << (int_64)56) >> (int_64)56)
	
.LABEL $label$107
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$106
	$26 = ($26 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$9 = ((int_64)$24 | (int_64)$9)
	$25 = ((int_64)$25 + (int_64)-5)
	if ( ((int_64)$25 != (int_64)-6) ){ goto $label$105 }
	$2 = (int_64)0
	$24 = (int_64)59
	$26 = [1024]
	$27 = (int_64)0
	
.LOOP $label$111:
	$25 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$112 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$114 }
	$23 = ($23 + [165])
	goto $label$113 
	
.LABEL $label$114
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$113
	$25 = ((int_64)(CASTING uint_64)(uint_32 ($23 & [31])) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$112
	$26 = ($26 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$27 = ((int_64)$25 | (int_64)$27)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$111 }
	$2 = (int_64)0
	$25 = (int_64)59
	$26 = [1040]
	$28 = (int_64)0
	
.LOOP $label$115:
	if ( ((uint_64)$2 > (uint_64)(int_64)6) ){ goto $label$120 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$119 }
	$23 = ($23 + [165])
	goto $label$118 
	
.LABEL $label$120
	$24 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$119
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$118
	$24 = (int_64)((int_64)(CASTING uint_64)(uint_32 $23) << (int_64)56) >> (int_64)56)
	
.LABEL $label$117
	$24 = ((int_64)((int_64)$24 & (int_64)31) << (int_64)((int_64)$25 & (int_64)4294967295))
	
.LABEL $label$116
	$26 = ($26 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$28 = ((int_64)$24 | (int_64)$28)
	$25 = ((int_64)$25 + (int_64)-5)
	if ( ((int_64)$25 != (int_64)-6) ){ goto $label$115 }
	*((($30 + [136]) + [16])) = $12
	*($30 + [144]) = $11
	*($30 + [136]) = $10
	*($30 + [160]) = $1
	*($30 + [168]) = $29
	*($30 + [176]) = $6
	*($30 + [192]) = $28
	*($30 + [184]) = $27
	*($30 + [200]) = [0]
	*(($23 = ($30 + [204]))) = [0]
	*(($4 = ($30 + [208]))) = [0]
	*(($26 = CALL $98([16]))) = $10
	*($26 + [8]) = $9
	*(($8 = ($30 + [216]))) = [0]
	$3 = ($26 + [16])
	*($4) = $3
	*($23) = $3
	*($30 + [200]) = $26
	*($30 + [212]) = [0]
	*(($30 + [220])) = [0]
	CALL $10(($30 + [212]), [48])
	$26 = *($8)
	$23 = *($30 + [212])
	*($30 + [556]) = $23
	*($30 + [552]) = $23
	*($30 + [560]) = $26
	*($30 + [568]) = ($30 + [552])
	*($30 + [120]) = ($30 + [136])
	CALL $11(($30 + [120]), ($30 + [568]))
	CALL $12(($30 + [552]), ($30 + [184]))
	$26 = *($30 + [552])
	CALL send_inline($26, (*($30 + [556]) - $26))
	$26 = *($30 + [552])
	if ( ($26 == 0) ){ goto $label$121 }
	*($30 + [556]) = $26
	CALL $99($26)
	
.LABEL $label$121
	$26 = *($30 + [212])
	if ( ($26 == 0) ){ goto $label$122 }
	*(($30 + [216])) = $26
	CALL $99($26)
	
.LABEL $label$122
	$26 = *($30 + [200])
	if ( ($26 == 0) ){ goto $label$123 }
	*(($30 + [204])) = $26
	CALL $99($26)
	
.LABEL $label$123
	$1 = *($0)
	$2 = (int_64)0
	$24 = (int_64)59
	$26 = [1008]
	$25 = (int_64)0
	
.LOOP $label$124:
	if ( ((uint_64)$2 > (uint_64)(int_64)5) ){ goto $label$129 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$128 }
	$23 = ($23 + [165])
	goto $label$127 
	
.LABEL $label$129
	$29 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$126 }
	goto $label$125 
	
.LABEL $label$128
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$127
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $23) << (int_64)56) >> (int_64)56)
	
.LABEL $label$126
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$125
	$26 = ($26 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$25 = ((int_64)$29 | (int_64)$25)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$124 }
	$2 = (int_64)0
	$24 = (int_64)59
	$26 = [1056]
	$9 = (int_64)0
	
.LOOP $label$130:
	if ( ((uint_64)$2 > (uint_64)(int_64)10) ){ goto $label$135 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$134 }
	$23 = ($23 + [165])
	goto $label$133 
	
.LABEL $label$135
	$29 = (int_64)0
	if ( ((int_64)$2 == (int_64)11) ){ goto $label$132 }
	goto $label$131 
	
.LABEL $label$134
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$133
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $23) << (int_64)56) >> (int_64)56)
	
.LABEL $label$132
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$131
	$26 = ($26 + [1])
	$24 = ((int_64)$24 + (int_64)-5)
	$9 = ((int_64)$29 | (int_64)$9)
	$2 = ((int_64)$2 + (int_64)1)
	if ( ((int_64)$2 != (int_64)13) ){ goto $label$130 }
	$2 = (int_64)0
	$24 = (int_64)59
	$26 = [1072]
	$27 = (int_64)0
	
.LOOP $label$136:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$141 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$140 }
	$23 = ($23 + [165])
	goto $label$139 
	
.LABEL $label$141
	$29 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$138 }
	goto $label$137 
	
.LABEL $label$140
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$139
	$29 = (int_64)((int_64)(CASTING uint_64)(uint_32 $23) << (int_64)56) >> (int_64)56)
	
.LABEL $label$138
	$29 = ((int_64)((int_64)$29 & (int_64)31) << (int_64)((int_64)$24 & (int_64)4294967295))
	
.LABEL $label$137
	$26 = ($26 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$27 = ((int_64)$29 | (int_64)$27)
	$24 = ((int_64)$24 + (int_64)-5)
	if ( ((int_64)$24 != (int_64)-6) ){ goto $label$136 }
	$2 = (int_64)0
	$29 = (int_64)59
	$26 = [1024]
	$28 = (int_64)0
	
.LOOP $label$142:
	$24 = (int_64)0
	if ( ((uint_64)$2 > (uint_64)(int_64)11) ){ goto $label$143 }
	$23 = *($26)
	if ( ((uint_32)(($23 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$145 }
	$23 = ($23 + [165])
	goto $label$144 
	
.LABEL $label$145
	$23 = ( ($23 + [208]) ? [0] : ((($23 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$144
	$24 = ((int_64)(CASTING uint_64)(uint_32 ($23 & [31])) << (int_64)((int_64)$29 & (int_64)4294967295))
	
.LABEL $label$143
	$26 = ($26 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$28 = ((int_64)$24 | (int_64)$28)
	$29 = ((int_64)$29 + (int_64)-5)
	if ( ((int_64)$29 != (int_64)-6) ){ goto $label$142 }
	*(($30 + [128])) = [0]
	*($30 + [120]) = (int_64)0
	$26 = CALL strlen([1088])
	if ( ((uint_32)$26 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$26 >= (uint_32)[11]) ){ goto $label$148 }
	*($30 + [120]) = ($26 << [1])
	$23 = (($30 + [120]) | [1])
	if ( $26 ){ goto $label$147 }
	goto $label$146 
	
.LABEL $label$148
	$4 = (($26 + [16]) & [-16])
	$23 = CALL $98($4)
	*($30 + [120]) = ($4 | [1])
	*($30 + [128]) = $23
	*($30 + [124]) = $26
	
.LABEL $label$147
	CALL memcpy($23, [1088], $26)
	
.LABEL $label$146
	*(($23 + $26)) = [0]
	*((($30 + [136]) + [24])) = $12
	*(($23 = (($30 + [136]) + [36]))) = *($30 + [124])
	*($30 + [144]) = $28
	$26 = ($30 + [128])
	*(($30 + [176])) = *($26)
	*($30 + [136]) = *($0)
	*($30 + [152]) = $11
	*($30 + [168]) = *($30 + [120])
	*($30 + [120]) = [0]
	*($30 + [124]) = [0]
	*($26) = [0]
	*($30 + [184]) = $9
	*($30 + [192]) = $27
	*($30 + [200]) = [0]
	*(($4 = ($30 + [204]))) = [0]
	*(($8 = (($30 + [184]) + [24]))) = [0]
	*(($26 = CALL $98([16]))) = $1
	*($26 + [8]) = $25
	*((($30 + [184]) + [32])) = [0]
	$0 = ($26 + [16])
	*($8) = $0
	*($4) = $0
	*($30 + [200]) = $26
	*($30 + [212]) = [0]
	*((($30 + [184]) + [36])) = [0]
	$26 = *($30 + [168])
	$23 = ( *($23) ? uint_32($26 >> [1]) : ($26 & [1]) )
	$26 = ($23 + [32])
	$2 = (CASTING uint_64)(uint_32 $23)
	$23 = ($30 + [212])
	
.LOOP $label$149:
	$26 = ($26 + [1])
	$2 = (uint_64)$2 >> (uint_64)(int_64)7
	if ( ((int_64)$2) != (int_64)0) ){ goto $label$149 }
	if ( ($26 == 0) ){ goto $label$151 }
	CALL $10($23, $26)
	$23 = *(($30 + [216]))
	$26 = *(($30 + [212]))
	goto $label$150 
	
.LABEL $label$151
	$23 = [0]
	$26 = [0]
	
.LABEL $label$150
	*($30 + [556]) = $26
	*($30 + [552]) = $26
	*($30 + [560]) = $23
	*($30 + [544]) = ($30 + [552])
	*($30 + [568]) = ($30 + [136])
	CALL $13(($30 + [568]), ($30 + [544]))
	CALL $12(($30 + [552]), ($30 + [184]))
	$26 = *($30 + [552])
	CALL send_inline($26, (*($30 + [556]) - $26))
	$26 = *($30 + [552])
	if ( ($26 == 0) ){ goto $label$152 }
	*($30 + [556]) = $26
	CALL $99($26)
	
.LABEL $label$152
	$26 = *($30 + [212])
	if ( ($26 == 0) ){ goto $label$153 }
	*(($30 + [216])) = $26
	CALL $99($26)
	
.LABEL $label$153
	$26 = *($30 + [200])
	if ( ($26 == 0) ){ goto $label$154 }
	*(($30 + [204])) = $26
	CALL $99($26)
	
.LABEL $label$154
	if ( ((*(($30 + [168])) & [1]) == 0) ){ goto $label$155 }
	CALL $99(*(($30 + [176])))
	
.LABEL $label$155
	if ( ((*($30 + [120]) & [1]) == 0) ){ goto $label$156 }
	CALL $99(*(($30 + [128])))
	
.LABEL $label$156
	$8 = *($30 + [416])
	
.LABEL $label$104
	if ( ($8 == 0) ){ goto $label$157 }
	*($30 + [420]) = $8
	CALL $99($8)
	
.LABEL $label$157
	$4 = *($30 + [464])
	if ( ($4 == 0) ){ goto $label$158 }
	$26 = *($30 + [468])
	if ( ((int_32)$26 == (int_32)$4) ){ goto $label$160 }
	$23 = ([0] - $4)
	$26 = ($26 + [-12])
	
.LOOP $label$161:
	if ( ((*($26) & [1]) == 0) ){ goto $label$162 }
	CALL $99(*(($26 + [8])))
	
.LABEL $label$162
	$26 = ($26 + [-12])
	if ( ((int_32)($26 + $23) != (int_32)[-12]) ){ goto $label$161 }
	$26 = *($30 + [464])
	goto $label$159 
	
.LABEL $label$160
	$26 = $4
	
.LABEL $label$159
	*($30 + [468]) = $4
	CALL $99($26)
	
.LABEL $label$158
	if ( ((*($30 + [480]) & [1]) == 0) ){ goto $label$163 }
	CALL $99(*($30 + [488]))
	
.LABEL $label$163
	$4 = *($30 + [528])
	if ( ($4 == 0) ){ goto $label$5 }
	$26 = *($30 + [532])
	if ( ((int_32)$26 == (int_32)$4) ){ goto $label$165 }
	$23 = ([0] - $4)
	$26 = ($26 + [-12])
	
.LOOP $label$166:
	if ( ((*($26) & [1]) == 0) ){ goto $label$167 }
	CALL $99(*(($26 + [8])))
	
.LABEL $label$167
	$26 = ($26 + [-12])
	if ( ((int_32)($26 + $23) != (int_32)[-12]) ){ goto $label$166 }
	$26 = *($30 + [528])
	goto $label$164 
	
.LABEL $label$165
	$26 = $4
	
.LABEL $label$164
	*($30 + [532]) = $4
	CALL $99($26)
	
.LABEL $label$5
	*([0] + [4]) = ($30 + [576])
	return (unreachable)
	
.LABEL $label$4
	CALL $100(($30 + [496]))
	
.LABEL $label$3
	CALL $100(($30 + [480]))
	
.LABEL $label$2
	CALL $100(($30 + [432]))
	
.LABEL $label$1
	CALL $100(($30 + [120]))
	(unreachable)
	(unreachable)
	(unreachable)
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

int_32 .FUNC memory (int_32 memory, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 _ZeqRK11checksum160S1_)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $14 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1168])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1168])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [1168])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1168])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [1168])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [1168])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [1168])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [96])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1648])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $98([224])
	CALL $18($6)
	*($6 + [212]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [24])
	*($8 + [44]) = ($6 + [40])
	*($8 + [48]) = ($6 + [56])
	*($8 + [52]) = ($6 + [72])
	*($8 + [56]) = ($6 + [88])
	*($8 + [60]) = ($6 + [104])
	*($8 + [64]) = ($6 + [120])
	*($8 + [68]) = ($6 + [136])
	*($8 + [72]) = ($6 + [144])
	*($8 + [76]) = ($6 + [160])
	*($8 + [80]) = ($6 + [176])
	*($8 + [84]) = ($6 + [192])
	*($8 + [88]) = ($6 + [208])
	CALL $28(($8 + [32]), ($8 + [24]))
	*($6 + [216]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [216])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $20(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [144]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($4 + [152])))
	
.LABEL $label$10
	CALL $99($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [96])
	return $6
}

void .FUNC $10 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $98($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $106($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $99($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), ($0 + [40]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
}

void .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $10($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [1168])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [1168])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $16(CALL $15($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [1168])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $14(*($1), ($0 + [32]))
}

void .FUNC $75 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$0), [2048])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [2096])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2160])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $99($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$8 }
	CALL $99($4)
	
.LABEL $label$8
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [36]))
}

int_32 .FUNC $18 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [8]) = (int_64)0
	*(($2 = ($0 + [16]))) = (int_64)1398362884
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	*($0 + [24]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [48]))) = (int_64)1398362884
	*($0 + [40]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [64]))) = (int_64)1398362884
	*($0 + [56]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$3 = [0]
	
.LABEL $label$16
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [80]))) = (int_64)1398362884
	*($0 + [72]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$3 = [0]
	
.LABEL $label$21
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$3 = [0]
	
.LABEL $label$26
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [112]))) = (int_64)1398362884
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$3 = [0]
	
.LABEL $label$31
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [128]))) = (int_64)1398362884
	*($0 + [120]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$3 = [0]
	
.LABEL $label$36
	CALL eosio_assert($3, [160])
	*(($0 + [152])) = [0]
	*($0 + [144 align=4]) = (int_64)0
	*($0 + [160]) = (int_64)0
	*(($2 = ($0 + [168]))) = (int_64)1398362884
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	
.LOOP $label$45:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$45 }
	
.LABEL $label$44
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	$3 = [0]
	
.LABEL $label$41
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [184]))) = (int_64)1398362884
	*($0 + [176]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	
.LOOP $label$50:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$50 }
	
.LABEL $label$49
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$3 = [0]
	
.LABEL $label$46
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [200]))) = (int_64)1398362884
	*($0 + [192]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	
.LOOP $label$55:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$55 }
	
.LABEL $label$54
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	$3 = [0]
	
.LABEL $label$51
	CALL eosio_assert($3, [160])
	return $0
}

void .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$21 = (*([0] + [4]) - [96])
	$20 = $21
	*([0] + [4]) = $21
	*($1) = *(*(*($0 + [4])))
	$2 = *($0)
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$19 = [0]
	
.LABEL $label$1
	CALL eosio_assert($19, [160])
	*(($1 + [16])) = (int_64)1397703940
	*($1 + [8]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$19 = [0]
	
.LABEL $label$6
	CALL eosio_assert($19, [160])
	*(($1 + [48])) = (int_64)1397703940
	*($1 + [40]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$19 = [0]
	
.LABEL $label$11
	CALL eosio_assert($19, [160])
	*(($1 + [64])) = (int_64)1397703940
	*($1 + [56]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$19 = [0]
	
.LABEL $label$16
	CALL eosio_assert($19, [160])
	*(($1 + [80])) = (int_64)1397703940
	*($1 + [72]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$19 = [0]
	
.LABEL $label$21
	CALL eosio_assert($19, [160])
	*(($1 + [32])) = (int_64)1397704196
	*($1 + [24]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$19 = [0]
	
.LABEL $label$26
	CALL eosio_assert($19, [160])
	*(($1 + [96])) = (int_64)1397704196
	*($1 + [88]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$19 = [0]
	
.LABEL $label$31
	CALL eosio_assert($19, [160])
	*(($1 + [112])) = (int_64)1397704196
	*($1 + [104]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$19 = [0]
	
.LABEL $label$36
	CALL eosio_assert($19, [160])
	*(($1 + [128])) = (int_64)1397704196
	*($1 + [120]) = (int_64)0
	*($1 + [136]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($20 + [24]) = [0]
	*($20 + [8]) = ($20 + [24])
	$4 = ($1 + [8])
	*($20 + [36]) = $4
	*($20 + [32]) = $1
	$5 = ($1 + [24])
	*($20 + [40]) = $5
	$6 = ($1 + [40])
	*($20 + [44]) = $6
	$7 = ($1 + [56])
	*($20 + [48]) = $7
	$8 = ($1 + [72])
	*($20 + [52]) = $8
	$9 = ($1 + [88])
	*($20 + [56]) = $9
	$10 = ($1 + [104])
	*($20 + [60]) = $10
	$11 = ($1 + [120])
	*($20 + [64]) = $11
	$3 = ($1 + [136])
	*($20 + [68]) = $3
	$12 = ($1 + [144])
	*($20 + [72]) = $12
	$13 = ($1 + [160])
	*($20 + [76]) = $13
	$14 = ($1 + [176])
	*($20 + [80]) = $14
	$15 = ($1 + [192])
	*($20 + [84]) = $15
	$16 = ($1 + [208])
	*($20 + [88]) = $16
	CALL $26(($20 + [32]), ($20 + [8]))
	$19 = *($20 + [24])
	if ( ($19 <= [513]) ){ goto $label$42 }
	$18 = CALL malloc($19)
	goto $label$41 
	
.LABEL $label$42
	$18 = ($21 - (($19 + [15]) & [-16]))
	*([0] + [4]) = $18
	
.LABEL $label$41
	*($20 + [12]) = $18
	*($20 + [8]) = $18
	*($20 + [16]) = ($18 + $19)
	*($20 + [24]) = ($20 + [8])
	*($20 + [36]) = $4
	*($20 + [32]) = $1
	*($20 + [40]) = $5
	*($20 + [44]) = $6
	*($20 + [48]) = $7
	*($20 + [52]) = $8
	*($20 + [56]) = $9
	*($20 + [60]) = $10
	*($20 + [64]) = $11
	*($20 + [68]) = $3
	*($20 + [72]) = $12
	*($20 + [76]) = $13
	*($20 + [80]) = $14
	*($20 + [84]) = $15
	*($20 + [88]) = $16
	CALL $27(($20 + [32]), ($20 + [24]))
	$17 = *($1)
	*($1 + [216]) = CALL db_store_i64(*($2 + [8]), (int_64)4229865212519383040, *(*($0 + [8])), $17, $18, $19)
	if ( ($19 <= [513]) ){ goto $label$43 }
	CALL free($18)
	
.LABEL $label$43
	if ( (uint_64)($17 <= *($2 + [16])) ){ goto $label$44 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$17 + (int_64)1) : ((uint_64)$17 > (uint_64)(int_64)-3) )
	
.LABEL $label$44
	*([0] + [4]) = ($20 + [96])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [64])
	$13 = $14
	*([0] + [4]) = $14
	$2 = *($0)
	$10 = *($0 + [4])
	$12 = *($10)
	$11 = *($12 + [16])
	if ( ((int_64)$11 != (int_64)-1) ){ goto $label$1 }
	$11 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($12), *($12 + [8]), (int_64)4229679821141028864, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $54($12, $8)
	*($13 + [28]) = [0]
	*($13 + [24]) = $12
	$11 = *(*(CALL $59(($13 + [24])) + [4]))
	$11 = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($12 + [16])) = $11
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($11 <= (int_64)-2), [2224])
	*($1) = *(($12 + [16]))
	*($1 + [8]) = *(*($10 + [4]))
	*($1 + [16]) = *(*($10 + [8]))
	$12 = *($10 + [12])
	*($1 + [24]) = *($12)
	*(($1 + [32])) = *(($12 + [8]))
	*($1 + [40]) = *(*($10 + [16]))
	*($1 + [48]) = *(*($10 + [20]))
	$8 = ($1 + [52])
	CALL $101($8, *($10 + [24]))
	$10 = *($10 + [28])
	*($1 + [64]) = *($10)
	*(($1 + [72])) = *(($10 + [8]))
	CALL eosio_assert([1], [1104])
	$9 = ($1 + [64])
	$7 = ($1 + [48])
	$6 = ($1 + [40])
	$5 = ($1 + [24])
	$4 = ($1 + [16])
	$3 = ($1 + [8])
	$11 = (int_64)1297236294
	$10 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$12 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$12 = [0]
	
.LABEL $label$3
	CALL eosio_assert($12, [160])
	*(($1 + [88])) = (int_64)332092491268
	*($1 + [80]) = (int_64)0
	$10 = *(($1 + [52]))
	$12 = ( *(($1 + [56])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$10 = ($12 + [84])
	$11 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$8:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$8 }
	if ( ($10 <= [513]) ){ goto $label$10 }
	$12 = CALL malloc($10)
	goto $label$9 
	
.LABEL $label$10
	$12 = ($14 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $12
	
.LABEL $label$9
	*($13 + [4]) = $12
	*($13) = $12
	*($13 + [8]) = ($12 + $10)
	*($13 + [16]) = $13
	*($13 + [28]) = $3
	*($13 + [24]) = $1
	*($13 + [32]) = $4
	*($13 + [36]) = $5
	*($13 + [40]) = $6
	*($13 + [44]) = $7
	*($13 + [48]) = $8
	*($13 + [52]) = $9
	*($13 + [56]) = ($1 + [80])
	*($13 + [60]) = ($1 + [96])
	CALL $60(($13 + [24]), ($13 + [16]))
	$11 = *($1)
	*($1 + [104]) = CALL db_store_i64(*($2 + [8]), (int_64)4229679821141028864, *(*($0 + [8])), $11, $12, $10)
	if ( ($10 <= [513]) ){ goto $label$11 }
	CALL free($12)
	
.LABEL $label$11
	if ( (uint_64)($11 <= *($2 + [16])) ){ goto $label$12 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*([0] + [4]) = ($13 + [64])
}

int_32 .FUNC $59 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [104]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2352])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)4229679821141028864)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2288])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2288])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $54(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [1168])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [1168])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [1168])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1168])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [1168])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1168])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1168])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [1168])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $16(CALL $15($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [1168])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [1168])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $16($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1648])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [20]) = $4
	*($8 + [16]) = $4
	*($8 + [24]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	$6 = CALL $98([112])
	CALL $55($6)
	*($6 + [100]) = $0
	*($8 + [32]) = ($8 + [16])
	*($8 + [44]) = ($6 + [8])
	*($8 + [40]) = $6
	*($8 + [48]) = ($6 + [16])
	*($8 + [52]) = ($6 + [24])
	*($8 + [56]) = ($6 + [40])
	*($8 + [60]) = ($6 + [48])
	*($8 + [64]) = ($6 + [52])
	*($8 + [68]) = ($6 + [64])
	*($8 + [72]) = ($6 + [80])
	*($8 + [76]) = ($6 + [96])
	CALL $61(($8 + [40]), ($8 + [32]))
	*($6 + [104]) = $1
	*($8 + [32]) = $6
	$5 = *($6)
	*($8 + [40]) = $5
	$7 = *($6 + [104])
	*($8 + [12]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [32]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $57(($0 + [24]), ($8 + [32]), ($8 + [40]), ($8 + [12]))
	
.LABEL $label$8
	$4 = *($8 + [32])
	*($8 + [32]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	if ( ((*($4 + [52]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($4 + [60])))
	
.LABEL $label$10
	CALL $99($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [80])
	return $6
}

void .FUNC $34 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$2 = ((int_32)(*($0 + [4]) - $6) / (int_32)[12])
	$4 = ($2 + [1])
	if ( ((uint_32)$4 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[12])
	if ( ((uint_32)$6 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($6 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $98(((int_32)$5 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	$6 = ($4 + ((int_32)$2 * (int_32)[12]))
	CALL $107($6, $1)
	$2 = ($4 + ((int_32)$5 * (int_32)[12]))
	$3 = ($6 + [12])
	$5 = *($0)
	$4 = *(($0 + [4]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	$1 = ([0] - $5)
	$5 = ($4 + [-12])
	
.LOOP $label$7:
	*(($6 + [-12])) = *($5)
	$4 = ($5 + [8])
	*(($6 + [-4])) = *($4)
	*($5) = [0]
	*(($5 + [4])) = [0]
	*($4) = [0]
	$6 = ($6 + [-12])
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$5 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $5
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $3
	*(($0 + [8])) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$8 }
	$6 = ([0] - $4)
	$5 = ($5 + [-12])
	
.LOOP $label$9:
	if ( ((*($5) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($5 + [8])))
	
.LABEL $label$10
	$5 = ($5 + [-12])
	if ( ((int_32)($5 + $6) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $99($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [64])
	$13 = $14
	*([0] + [4]) = $14
	$2 = *($0)
	$10 = *($0 + [4])
	$12 = *($10)
	$11 = *($12 + [16])
	if ( ((int_64)$11 != (int_64)-1) ){ goto $label$1 }
	$11 = (int_64)0
	$8 = CALL db_lowerbound_i64(*($12), *($12 + [8]), (int_64)4229679821141028864, (int_64)0)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$2 }
	CALL $54($12, $8)
	*($13 + [28]) = [0]
	*($13 + [24]) = $12
	$11 = *(*(CALL $59(($13 + [24])) + [4]))
	$11 = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($12 + [16])) = $11
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($11 <= (int_64)-2), [2224])
	*($1) = *(($12 + [16]))
	*($1 + [8]) = *(*($10 + [4]))
	*($1 + [16]) = *(*($10 + [8]))
	$12 = *($10 + [12])
	*($1 + [24]) = *($12)
	*(($1 + [32])) = *(($12 + [8]))
	*($1 + [40]) = *(*($10 + [16]))
	*($1 + [48]) = *(*($10 + [20]))
	$8 = ($1 + [52])
	CALL $101($8, *($10 + [24]))
	$10 = *($10 + [28])
	*($1 + [64]) = *($10)
	*(($1 + [72])) = *(($10 + [8]))
	CALL eosio_assert([1], [1104])
	$9 = ($1 + [64])
	$7 = ($1 + [48])
	$6 = ($1 + [40])
	$5 = ($1 + [24])
	$4 = ($1 + [16])
	$3 = ($1 + [8])
	$11 = (int_64)1297236294
	$10 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$11 = (uint_64)$11 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$11) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$12 = [1]
	$10 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$12 = [0]
	
.LABEL $label$3
	CALL eosio_assert($12, [160])
	*(($1 + [88])) = (int_64)332092491268
	*($1 + [80]) = (int_64)0
	$10 = *(($1 + [52]))
	$12 = ( *(($1 + [56])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$10 = ($12 + [84])
	$11 = (CASTING uint_64)(uint_32 $12)
	
.LOOP $label$8:
	$10 = ($10 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$8 }
	if ( ($10 <= [513]) ){ goto $label$10 }
	$12 = CALL malloc($10)
	goto $label$9 
	
.LABEL $label$10
	$12 = ($14 - (($10 + [15]) & [-16]))
	*([0] + [4]) = $12
	
.LABEL $label$9
	*($13 + [4]) = $12
	*($13) = $12
	*($13 + [8]) = ($12 + $10)
	*($13 + [16]) = $13
	*($13 + [28]) = $3
	*($13 + [24]) = $1
	*($13 + [32]) = $4
	*($13 + [36]) = $5
	*($13 + [40]) = $6
	*($13 + [44]) = $7
	*($13 + [48]) = $8
	*($13 + [52]) = $9
	*($13 + [56]) = ($1 + [80])
	*($13 + [60]) = ($1 + [96])
	CALL $60(($13 + [24]), ($13 + [16]))
	$11 = *($1)
	*($1 + [104]) = CALL db_store_i64(*($2 + [8]), (int_64)4229679821141028864, *(*($0 + [8])), $11, $12, $10)
	if ( ($10 <= [513]) ){ goto $label$11 }
	CALL free($12)
	
.LABEL $label$11
	if ( (uint_64)($11 <= *($2 + [16])) ){ goto $label$12 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	*([0] + [4]) = ($13 + [64])
}

void .FUNC $57 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [52]) & [1]) == 0) ){ goto $label$11 }
	CALL $99(*(($1 + [60])))
	
.LABEL $label$11
	CALL $99($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $99($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $35 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $99($4)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

void .FUNC $113 ()
{
	(unreachable)
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC $29 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $30($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $103($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $98($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $103($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $99($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $100($7)
	return (unreachable)
}

void .FUNC $28 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $29(*($1), *($0 + [40]))
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [56])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $55 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	*($0 + [24]) = (int_64)0
	*(($2 = ($0 + [32]))) = (int_64)1398362884
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [0]
	
.LABEL $label$1
	CALL eosio_assert($3, [160])
	*(($0 + [60])) = [0]
	*($0 + [52 align=4]) = (int_64)0
	*($0 + [64]) = (int_64)0
	*(($2 = ($0 + [72]))) = (int_64)1398362884
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$3 = [0]
	
.LABEL $label$6
	CALL eosio_assert($3, [160])
	*(($2 = ($0 + [88]))) = (int_64)1398362884
	*($0 + [80]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$1 = (uint_64)*($2) >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$1 = (uint_64)$1 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$1) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$3 = [1]
	$2 = ($2 + [1])
	if ( ((int_32)$2 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$3 = [0]
	
.LABEL $label$11
	CALL eosio_assert($3, [160])
	return $0
}

int_32 .FUNC $107 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $98($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

void .FUNC $106 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $21 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [96])
	$21 = $22
	*([0] + [4]) = $22
	CALL eosio_assert(((int_32)*($1 + [212]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	$4 = *($1)
	$19 = *($3)
	CALL eosio_assert(((int_64)*($19 + [8]) == (int_64)*(($1 + [32]))), [1472])
	$20 = ((int_64)*($1 + [24]) + (int_64)*($19))
	*($1 + [24]) = $20
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [24]) < (int_64)4611686018427387904), [1552])
	$19 = *(*($3 + [4]))
	if ( ((int_32)$19 == (int_32)[3]) ){ goto $label$3 }
	if ( ((int_32)$19 == (int_32)[2]) ){ goto $label$2 }
	if ( ((int_32)$19 != (int_32)[1]) ){ goto $label$1 }
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [96]))), [1472])
	$20 = ((int_64)*($1 + [88]) + (int_64)*($3))
	*($1 + [88]) = $20
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [1552])
	goto $label$1 
	
.LABEL $label$3
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [128]))), [1472])
	$20 = ((int_64)*($1 + [120]) + (int_64)*($3))
	*($1 + [120]) = $20
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [120]) < (int_64)4611686018427387904), [1552])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [112]))), [1472])
	$20 = ((int_64)*($1 + [104]) + (int_64)*($3))
	*($1 + [104]) = $20
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [1552])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1584])
	*($21 + [24]) = [0]
	*($21 + [8]) = ($21 + [24])
	$5 = ($1 + [8])
	*($21 + [36]) = $5
	*($21 + [32]) = $1
	$6 = ($1 + [24])
	*($21 + [40]) = $6
	$7 = ($1 + [40])
	*($21 + [44]) = $7
	$8 = ($1 + [56])
	*($21 + [48]) = $8
	$9 = ($1 + [72])
	*($21 + [52]) = $9
	$10 = ($1 + [88])
	*($21 + [56]) = $10
	$11 = ($1 + [104])
	*($21 + [60]) = $11
	$12 = ($1 + [120])
	*($21 + [64]) = $12
	$13 = ($1 + [136])
	*($21 + [68]) = $13
	$14 = ($1 + [144])
	*($21 + [72]) = $14
	$15 = ($1 + [160])
	*($21 + [76]) = $15
	$16 = ($1 + [176])
	*($21 + [80]) = $16
	$17 = ($1 + [192])
	*($21 + [84]) = $17
	$18 = ($1 + [208])
	*($21 + [88]) = $18
	CALL $26(($21 + [32]), ($21 + [8]))
	$19 = *($21 + [24])
	if ( ($19 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($19)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($22 - (($19 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($21 + [12]) = $3
	*($21 + [8]) = $3
	*($21 + [16]) = ($3 + $19)
	*($21 + [24]) = ($21 + [8])
	*($21 + [36]) = $5
	*($21 + [40]) = $6
	*($21 + [44]) = $7
	*($21 + [48]) = $8
	*($21 + [52]) = $9
	*($21 + [56]) = $10
	*($21 + [32]) = $1
	*($21 + [60]) = $11
	*($21 + [64]) = $12
	*($21 + [68]) = $13
	*($21 + [72]) = $14
	*($21 + [76]) = $15
	*($21 + [80]) = $16
	*($21 + [84]) = $17
	*($21 + [88]) = $18
	CALL $27(($21 + [32]), ($21 + [24]))
	CALL db_update_i64(*($1 + [216]), $2, $3, $19)
	if ( ($19 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($21 + [96])
}

void .FUNC $20 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [144]) & [1]) == 0) ){ goto $label$11 }
	CALL $99(*(($1 + [152])))
	
.LABEL $label$11
	CALL $99($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $99($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $23 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	*(($6 = *($1))) = (*($6) + [8])
	*(($6 = *($1))) = (*($6) + [4])
	*(($6 = *($1))) = (*($6) + [4])
	*(($6 = *($1))) = (*($6) + [4])
	*(($6 = *($1))) = (*($6) + [4])
	*(($6 = *($1))) = (*($6) + [4])
	*(($6 = *($1))) = (*($6) + [4])
	*(($6 = *($1))) = (*($6) + [4])
	*(($6 = *($1))) = (*($6) + [8])
	*(($6 = *($1))) = (*($6) + [4])
	*(($6 = *($1))) = (*($6) + [8])
	*(($6 = *($1))) = (*($6) + [8])
	*(($6 = *($1))) = (*($6) + [16])
	*(($6 = *($1))) = (*($6) + [16])
	*(($6 = *($1))) = (*($6) + [16])
	*(($6 = *($1))) = (*($6) + [16])
	*(($6 = *($1))) = (*($6) + [16])
	*(($6 = *($1))) = (*($6) + [16])
	$4 = *($6)
	$6 = *($0 + [72])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [2]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$2 }
	$6 = (($5 & [-4]) + $6)
	
.LABEL $label$2
	*($2) = $6
	$4 = *($6)
	$6 = *($0 + [76])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [2]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$4 }
	$6 = (($5 & [-4]) + $6)
	
.LABEL $label$4
	*($2) = $6
	$4 = *($6)
	$6 = *($0 + [80])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [2]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$5:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$5 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$6 }
	$6 = (($5 & [-4]) + $6)
	
.LABEL $label$6
	*($2) = $6
	$4 = *($6)
	$6 = *($0 + [84])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [2]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$7:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$7 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$8 }
	$6 = (($5 & [-4]) + $6)
	
.LABEL $label$8
	*($2) = $6
	$4 = *($6)
	$6 = *($0 + [88])
	$3 = *($6 + [4])
	$5 = ($3 - $4)
	$7 = (CASTING uint_64)(uint_32 int_32($5 >> [2]))
	$2 = *($1)
	$6 = *($2)
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$10 }
	$6 = (($5 & [-4]) + $6)
	
.LABEL $label$10
	*($2) = $6
	$3 = *($6)
	$6 = *($0 + [92])
	$0 = *($6 + [4])
	$4 = ($0 - $3)
	$7 = (CASTING uint_64)(uint_32 int_32($4 >> [2]))
	$1 = *($1)
	$6 = *($1)
	
.LOOP $label$11:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$11 }
	if ( ((int_32)$3 == (int_32)$0) ){ goto $label$12 }
	$6 = (($4 & [-4]) + $6)
	
.LABEL $label$12
	*($1) = $6
}

void .FUNC $22 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_64 $29
	int_32 $30
	int_32 $31
	$31 = (*([0] + [4]) - [128])
	$30 = $31
	*([0] + [4]) = $31
	CALL eosio_assert(((int_32)*($1 + [240]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	$4 = *($1)
	$28 = *(*($3))
	if ( ((int_32)$28 == (int_32)[1]) ){ goto $label$3 }
	if ( ((int_32)$28 == (int_32)[2]) ){ goto $label$2 }
	if ( ((int_32)$28 != (int_32)[3]) ){ goto $label$1 }
	$28 = *($3 + [4])
	if ( ((int_64)*($28 + [8]) != (int_64)1397704196) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($1 + [160])) == (int_64)1397704196), [1472])
	$29 = ((int_64)*($1 + [152]) + (int_64)*($28))
	*($1 + [152]) = $29
	CALL eosio_assert(((int_64)$29 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [152]) < (int_64)4611686018427387904), [1552])
	*(($28 = *($1 + [228]))) = (*($28) + *(*(*($3 + [8]))))
	*($28 + [4]) = (*($28 + [4]) + *(*(*($3 + [8])) + [4]))
	*($28 + [8]) = (*($28 + [8]) + *(*(*($3 + [8])) + [8]))
	*($28 + [12]) = (*($28 + [12]) + *(*(*($3 + [8])) + [12]))
	*($28 + [16]) = (*($28 + [16]) + *(*(*($3 + [8])) + [16]))
	goto $label$1 
	
.LABEL $label$3
	$28 = *($3 + [4])
	if ( ((int_64)*($28 + [8]) != (int_64)1397704196) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($1 + [96])) == (int_64)1397704196), [1472])
	$29 = ((int_64)*($1 + [88]) + (int_64)*($28))
	*($1 + [88]) = $29
	CALL eosio_assert(((int_64)$29 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [88]) < (int_64)4611686018427387904), [1552])
	*(($28 = *($1 + [204]))) = (*($28) + *(*(*($3 + [8]))))
	*($28 + [4]) = (*($28 + [4]) + *(*(*($3 + [8])) + [4]))
	*($28 + [8]) = (*($28 + [8]) + *(*(*($3 + [8])) + [8]))
	*($28 + [12]) = (*($28 + [12]) + *(*(*($3 + [8])) + [12]))
	*($28 + [16]) = (*($28 + [16]) + *(*(*($3 + [8])) + [16]))
	goto $label$1 
	
.LABEL $label$2
	$28 = *($3 + [4])
	if ( ((int_64)*($28 + [8]) != (int_64)1397704196) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($1 + [128])) == (int_64)1397704196), [1472])
	$29 = ((int_64)*($1 + [120]) + (int_64)*($28))
	*($1 + [120]) = $29
	CALL eosio_assert(((int_64)$29 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [120]) < (int_64)4611686018427387904), [1552])
	*(($28 = *($1 + [216]))) = (*($28) + *(*(*($3 + [8]))))
	*($28 + [4]) = (*($28 + [4]) + *(*(*($3 + [8])) + [4]))
	*($28 + [8]) = (*($28 + [8]) + *(*(*($3 + [8])) + [8]))
	*($28 + [12]) = (*($28 + [12]) + *(*(*($3 + [8])) + [12]))
	*($28 + [16]) = (*($28 + [16]) + *(*(*($3 + [8])) + [16]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1584])
	*($30 + [24]) = [0]
	*($30 + [8]) = ($30 + [24])
	$5 = ($1 + [8])
	*($30 + [36]) = $5
	*($30 + [32]) = $1
	$6 = ($1 + [12])
	*($30 + [40]) = $6
	$7 = ($1 + [16])
	*($30 + [44]) = $7
	$8 = ($1 + [20])
	*($30 + [48]) = $8
	$9 = ($1 + [24])
	*($30 + [52]) = $9
	$10 = ($1 + [28])
	*($30 + [56]) = $10
	$11 = ($1 + [32])
	*($30 + [60]) = $11
	$12 = ($1 + [40])
	*($30 + [64]) = $12
	$13 = ($1 + [48])
	*($30 + [68]) = $13
	$14 = ($1 + [56])
	*($30 + [72]) = $14
	$15 = ($1 + [64])
	*($30 + [76]) = $15
	$16 = ($1 + [72])
	*($30 + [80]) = $16
	$17 = ($1 + [88])
	*($30 + [84]) = $17
	$18 = ($1 + [104])
	*($30 + [88]) = $18
	$19 = ($1 + [120])
	*($30 + [92]) = $19
	$20 = ($1 + [136])
	*($30 + [96]) = $20
	$21 = ($1 + [152])
	*($30 + [100]) = $21
	$22 = ($1 + [168])
	*($30 + [104]) = $22
	$23 = ($1 + [180])
	*($30 + [108]) = $23
	$24 = ($1 + [192])
	*($30 + [112]) = $24
	$25 = ($1 + [204])
	*($30 + [116]) = $25
	$26 = ($1 + [216])
	*($30 + [120]) = $26
	$27 = ($1 + [228])
	*($30 + [124]) = $27
	CALL $23(($30 + [32]), ($30 + [8]))
	$28 = *($30 + [24])
	if ( ($28 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($28)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($31 - (($28 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($30 + [12]) = $3
	*($30 + [8]) = $3
	*($30 + [16]) = ($3 + $28)
	*($30 + [24]) = ($30 + [8])
	*($30 + [36]) = $5
	*($30 + [40]) = $6
	*($30 + [44]) = $7
	*($30 + [48]) = $8
	*($30 + [52]) = $9
	*($30 + [56]) = $10
	*($30 + [32]) = $1
	*($30 + [60]) = $11
	*($30 + [64]) = $12
	*($30 + [68]) = $13
	*($30 + [72]) = $14
	*($30 + [76]) = $15
	*($30 + [80]) = $16
	*($30 + [84]) = $17
	*($30 + [88]) = $18
	*($30 + [92]) = $19
	*($30 + [96]) = $20
	*($30 + [100]) = $21
	*($30 + [104]) = $22
	*($30 + [108]) = $23
	*($30 + [112]) = $24
	*($30 + [116]) = $25
	*($30 + [120]) = $26
	*($30 + [124]) = $27
	CALL $24(($30 + [32]), ($30 + [24]))
	CALL db_update_i64(*($1 + [244]), $2, $3, $28)
	if ( ($28 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($30 + [128])
}

int_32 .FUNC $25 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$6 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [2]))
	$7 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$3 = ((int_64)$6) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[0]), [1168])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$7 = (*($5) + [1])
	*($5) = $7
	if ( $3 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$5 = *($1)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($4) - $7) > (int_32)[3]), [1168])
	$2 = ($0 + [4])
	CALL memcpy(*($2), $5, [4])
	$7 = (*($2) + [4])
	*($2) = $7
	$5 = ($5 + [4])
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

void .FUNC $24 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [56])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [60])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [64])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [68])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $25(*($1), *($0 + [72]))
	CALL $25(*($1), *($0 + [76]))
	CALL $25(*($1), *($0 + [80]))
	CALL $25(*($1), *($0 + [84]))
	CALL $25(*($1), *($0 + [88]))
	CALL $25(*($1), *($0 + [92]))
}

void .FUNC $27 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $14(*($1), *($0 + [40]))
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [56])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $26 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*(($2 = *($1))) = (*($2) + [8])
	*(($2 = *($1))) = (*($2) + [16])
	*(($2 = *($1))) = (*($2) + [16])
	*(($2 = *($1))) = (*($2) + [16])
	*(($2 = *($1))) = (*($2) + [16])
	*(($2 = *($1))) = (*($2) + [16])
	*(($2 = *($1))) = (*($2) + [16])
	*(($2 = *($1))) = (*($2) + [16])
	*(($2 = *($1))) = (*($2) + [16])
	*(($2 = *($1))) = (*($2) + [8])
	$0 = *($2)
	$2 = *($0 + [40])
	$4 = (CASTING uint_64)(uint_32 ( *($2 + [4]) ? uint_32($0 >> [1]) : ($0 & [1]) ))
	$3 = *($1)
	$0 = *($3)
	
.LOOP $label$1:
	$0 = ($0 + [1])
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	if ( ((int_64)$4) != (int_64)0) ){ goto $label$1 }
	*($3) = $0
	$2 = *($2)
	$2 = ( *(($2 + [4])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	if ( ($2 == 0) ){ goto $label$2 }
	*($3) = ($2 + $0)
	
.LABEL $label$2
	*(($0 = *($1))) = (*($0) + [16])
	*(($0 = *($1))) = (*($0) + [16])
	*(($0 = *($1))) = (*($0) + [16])
	*(($0 = *($1))) = (*($0) + [4])
}

int_32 .FUNC atoi (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$1 = [1]
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$1 = [0]
	
.LABEL $label$2
	$2 = [0]
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$2 = [0]
	
.LOOP $label$7:
	$2 = (((int_32)$2 * (int_32)[10]) - $3)
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $2 ? ([0] - $2) : $1 )
}

void .FUNC $69 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_64 $28
	int_32 $29
	int_32 $30
	int_32 $31
	$31 = (*([0] + [4]) - [128])
	$30 = $31
	*([0] + [4]) = $31
	CALL eosio_assert(((int_32)*($1 + [240]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	$4 = *($1)
	*($1 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$28 = CALL current_time()
	*($1 + [32]) = [1]
	*($1 + [48]) = [100]
	*($1 + [56]) = ((int_64)((uint_64)$28 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	*($1 + [28]) = (*(*(*($3) + [4]) + [28]) + [1])
	CALL eosio_assert([1], [1104])
	$9 = ($1 + [28])
	$8 = ($1 + [48])
	$7 = ($1 + [32])
	$6 = ($1 + [56])
	$5 = ($1 + [40])
	$28 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$29 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$29 = [0]
	
.LABEL $label$1
	CALL eosio_assert($29, [160])
	*(($1 + [80])) = (int_64)1397703940
	*($1 + [72]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$28 = (int_64)5459782
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$29 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$29 = [0]
	
.LABEL $label$6
	CALL eosio_assert($29, [160])
	*(($1 + [96])) = (int_64)1397704196
	*($1 + [88]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$28 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$29 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$29 = [0]
	
.LABEL $label$11
	CALL eosio_assert($29, [160])
	*(($1 + [112])) = (int_64)1397703940
	*($1 + [104]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$28 = (int_64)5459782
	$3 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$29 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$29 = [0]
	
.LABEL $label$16
	CALL eosio_assert($29, [160])
	*(($1 + [128])) = (int_64)1397704196
	*($1 + [120]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$28 = (int_64)5459781
	$3 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$29 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$29 = [0]
	
.LABEL $label$21
	CALL eosio_assert($29, [160])
	*(($1 + [144])) = (int_64)1397703940
	*($1 + [136]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$28 = (int_64)5459782
	$3 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $28) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$28 = (uint_64)$28 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$28) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$29 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$29 = [0]
	
.LABEL $label$26
	CALL eosio_assert($29, [160])
	*(($1 + [160])) = (int_64)1397704196
	*($1 + [152]) = (int_64)0
	$10 = ($1 + [168])
	CALL $70($10, [2588], [2608])
	$11 = ($1 + [180])
	CALL $70($11, [2608], [2628])
	$12 = ($1 + [192])
	CALL $70($12, [2628], [2648])
	$13 = ($1 + [204])
	CALL $70($13, [2648], [2668])
	$14 = ($1 + [216])
	CALL $70($14, [2668], [2688])
	$15 = ($1 + [228])
	CALL $70($15, [2688], [2708])
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1584])
	*($30 + [24]) = [0]
	*($30 + [8]) = ($30 + [24])
	$16 = ($1 + [8])
	*($30 + [36]) = $16
	*($30 + [32]) = $1
	$17 = ($1 + [12])
	*($30 + [40]) = $17
	$18 = ($1 + [16])
	*($30 + [44]) = $18
	$19 = ($1 + [20])
	*($30 + [48]) = $19
	$20 = ($1 + [24])
	*($30 + [52]) = $20
	*($30 + [56]) = $9
	*($30 + [60]) = $7
	*($30 + [64]) = $5
	*($30 + [68]) = $8
	*($30 + [72]) = $6
	$21 = ($1 + [64])
	*($30 + [76]) = $21
	$22 = ($1 + [72])
	*($30 + [80]) = $22
	$23 = ($1 + [88])
	*($30 + [84]) = $23
	$24 = ($1 + [104])
	*($30 + [88]) = $24
	$25 = ($1 + [120])
	*($30 + [92]) = $25
	$26 = ($1 + [136])
	*($30 + [96]) = $26
	$27 = ($1 + [152])
	*($30 + [100]) = $27
	*($30 + [104]) = $10
	*($30 + [108]) = $11
	*($30 + [112]) = $12
	*($30 + [116]) = $13
	*($30 + [120]) = $14
	*($30 + [124]) = $15
	CALL $23(($30 + [32]), ($30 + [8]))
	$29 = *($30 + [24])
	if ( ($29 <= [513]) ){ goto $label$32 }
	$3 = CALL malloc($29)
	goto $label$31 
	
.LABEL $label$32
	$3 = ($31 - (($29 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$31
	*($30 + [12]) = $3
	*($30 + [8]) = $3
	*($30 + [16]) = ($3 + $29)
	*($30 + [24]) = ($30 + [8])
	*($30 + [36]) = $16
	*($30 + [40]) = $17
	*($30 + [44]) = $18
	*($30 + [48]) = $19
	*($30 + [52]) = $20
	*($30 + [56]) = $9
	*($30 + [32]) = $1
	*($30 + [60]) = $7
	*($30 + [64]) = $5
	*($30 + [68]) = $8
	*($30 + [72]) = $6
	*($30 + [76]) = $21
	*($30 + [80]) = $22
	*($30 + [84]) = $23
	*($30 + [88]) = $24
	*($30 + [92]) = $25
	*($30 + [96]) = $26
	*($30 + [100]) = $27
	*($30 + [104]) = $10
	*($30 + [108]) = $11
	*($30 + [112]) = $12
	*($30 + [116]) = $13
	*($30 + [120]) = $14
	*($30 + [124]) = $15
	CALL $24(($30 + [32]), ($30 + [24]))
	CALL db_update_i64(*($1 + [244]), $2, $3, $29)
	if ( ($29 <= [513]) ){ goto $label$33 }
	CALL free($3)
	
.LABEL $label$33
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$34 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$34
	*([0] + [4]) = ($30 + [128])
}

void .FUNC _ZN9farmeosrb10rcd_roundsEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [80])
	*([0] + [4]) = $9
	$1 = ($0 + [8])
	$8 = [0]
	$3 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $6($1, $3)
	
.LABEL $label$1
	*($9 + [8]) = $1
	$6 = *($0)
	*($9 + [12]) = $8
	CALL eosio_assert(((int_64)*($0 + [88]) == (int_64)CALL $fimport$3()), [1248])
	$2 = ($0 + [88])
	*(($3 = CALL $98([48])) + [32]) = $2
	*($3) = *($8 + [28])
	*($3 + [8]) = *($8 + [32])
	*($3 + [16]) = *($8 + [40])
	*($3 + [24]) = *($8 + [48])
	*($9 + [48]) = (($9 + [16]) + [24])
	*($9 + [44]) = ($9 + [16])
	*($9 + [40]) = ($9 + [16])
	*($9 + [56]) = ($9 + [40])
	*($9 + [68]) = ($3 + [8])
	*($9 + [64]) = $3
	*($9 + [72]) = ($3 + [16])
	*($9 + [76]) = ($3 + [24])
	CALL $71(($9 + [64]), ($9 + [56]))
	$4 = *($3)
	$5 = CALL db_store_i64(*(($0 + [96])), (int_64)-4812882490098188288, $6, $4, ($9 + [16]), [24])
	*($3 + [36]) = $5
	$8 = ($0 + [104])
	if ( (uint_64)($4 <= *($8)) ){ goto $label$2 }
	*($8) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*($9 + [64]) = $3
	$4 = *($3)
	*($9 + [16]) = $4
	*($9 + [40]) = $5
	$7 = ($0 + [116])
	$8 = *($7)
	if ( ((uint_32)$8 >= (uint_32)*(($0 + [120]))) ){ goto $label$4 }
	*($8 + [8]) = $4
	*($8 + [16]) = $5
	*($9 + [64]) = [0]
	*($8) = $3
	*($7) = ($8 + [24])
	goto $label$3 
	
.LABEL $label$4
	CALL $72(($0 + [112]), ($9 + [64]), ($9 + [16]), ($9 + [40]))
	
.LABEL $label$3
	$3 = *($9 + [64])
	*($9 + [64]) = [0]
	if ( ($3 == 0) ){ goto $label$5 }
	CALL $99($3)
	
.LABEL $label$5
	$3 = *($9 + [12])
	$4 = *($0)
	*($9 + [16]) = ($9 + [8])
	CALL eosio_assert(((int_32)$3 != (int_32)[0]), [1312])
	CALL $73($1, $3, $4, ($9 + [16]))
	if ( (*(*($9 + [12]) + [24]) <= [101]) ){ goto $label$6 }
	$3 = [0]
	$0 = CALL db_lowerbound_i64(*(($0 + [88])), *(($0 + [96])), (int_64)-4812882490098188288, (int_64)0)
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$7 }
	$3 = CALL $74($2, $0)
	
.LABEL $label$7
	$0 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($0, [1872])
	CALL eosio_assert($0, [1920])
	$0 = CALL db_next_i64(*($3 + [36]), ($9 + [16]))
	if ( ((int_32)$0 < (int_32)[0]) ){ goto $label$8 }
	CALL $74($2, $0)
	
.LABEL $label$8
	CALL $75($2, $3)
	
.LABEL $label$6
	*([0] + [4]) = ($9 + [80])
}

int_32 .FUNC $108 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $98($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	$28 = (*([0] + [4]) - [128])
	*([0] + [4]) = $28
	CALL eosio_assert(((int_32)*($1 + [240]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	*($1 + [32]) = [2]
	$3 = *($1)
	*($1 + [56]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [1584])
	*(($29 = $28) + [24]) = [0]
	*($29 + [8]) = ($29 + [24])
	$6 = ($1 + [8])
	*($29 + [36]) = $6
	*($29 + [32]) = $1
	$7 = ($1 + [12])
	*($29 + [40]) = $7
	$8 = ($1 + [16])
	*($29 + [44]) = $8
	$9 = ($1 + [20])
	*($29 + [48]) = $9
	$10 = ($1 + [24])
	*($29 + [52]) = $10
	$11 = ($1 + [28])
	*($29 + [56]) = $11
	$4 = ($1 + [32])
	*($29 + [60]) = $4
	$12 = ($1 + [40])
	*($29 + [64]) = $12
	$13 = ($1 + [48])
	*($29 + [68]) = $13
	$5 = ($1 + [56])
	*($29 + [72]) = $5
	$14 = ($1 + [64])
	*($29 + [76]) = $14
	$15 = ($1 + [72])
	*($29 + [80]) = $15
	$16 = ($1 + [88])
	*($29 + [84]) = $16
	$17 = ($1 + [104])
	*($29 + [88]) = $17
	$18 = ($1 + [120])
	*($29 + [92]) = $18
	$19 = ($1 + [136])
	*($29 + [96]) = $19
	$20 = ($1 + [152])
	*($29 + [100]) = $20
	$21 = ($1 + [168])
	*($29 + [104]) = $21
	$22 = ($1 + [180])
	*($29 + [108]) = $22
	$23 = ($1 + [192])
	*($29 + [112]) = $23
	$24 = ($1 + [204])
	*($29 + [116]) = $24
	$25 = ($1 + [216])
	*($29 + [120]) = $25
	$26 = ($1 + [228])
	*($29 + [124]) = $26
	CALL $23(($29 + [32]), ($29 + [8]))
	$27 = *($29 + [24])
	if ( ($27 <= [513]) ){ goto $label$2 }
	$28 = CALL malloc($27)
	goto $label$1 
	
.LABEL $label$2
	$28 = ($28 - (($27 + [15]) & [-16]))
	*([0] + [4]) = $28
	
.LABEL $label$1
	*($29 + [12]) = $28
	*($29 + [8]) = $28
	*($29 + [16]) = ($28 + $27)
	*($29 + [24]) = ($29 + [8])
	*($29 + [36]) = $6
	*($29 + [40]) = $7
	*($29 + [44]) = $8
	*($29 + [48]) = $9
	*($29 + [52]) = $10
	*($29 + [56]) = $11
	*($29 + [32]) = $1
	*($29 + [60]) = $4
	*($29 + [64]) = $12
	*($29 + [68]) = $13
	*($29 + [72]) = $5
	*($29 + [76]) = $14
	*($29 + [80]) = $15
	*($29 + [84]) = $16
	*($29 + [88]) = $17
	*($29 + [92]) = $18
	*($29 + [96]) = $19
	*($29 + [100]) = $20
	*($29 + [104]) = $21
	*($29 + [108]) = $22
	*($29 + [112]) = $23
	*($29 + [116]) = $24
	*($29 + [120]) = $25
	*($29 + [124]) = $26
	CALL $24(($29 + [32]), ($29 + [24]))
	CALL db_update_i64(*($1 + [244]), $2, $28, $27)
	if ( ($27 <= [513]) ){ goto $label$3 }
	CALL free($28)
	
.LABEL $label$3
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($29 + [128])
}

void .FUNC $64 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_64 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	$30 = (*([0] + [4]) - [128])
	$29 = $30
	*([0] + [4]) = $30
	$2 = *($0)
	$27 = *(*($0 + [4]))
	$28 = ($27 + [24])
	$26 = *($28)
	if ( ((int_64)$26 != (int_64)-1) ){ goto $label$1 }
	$26 = (int_64)0
	$25 = ($27 + [8])
	$24 = CALL db_lowerbound_i64(*($25), *(($27 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$24 < (int_32)[0]) ){ goto $label$2 }
	CALL $6($25, $24)
	*($29 + [36]) = [0]
	*($29 + [32]) = $25
	$26 = *(*(CALL $77(($29 + [32])) + [4]))
	$26 = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$2
	*(($27 + [24])) = $26
	
.LABEL $label$1
	CALL eosio_assert((uint_64)($26 <= (int_64)-2), [2224])
	*($1) = *($28)
	*($1 + [40]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$26 = CALL current_time()
	*($1 + [48]) = [100]
	*($1 + [28 align=4]) = (int_64)4294967297
	*($1 + [56]) = ((int_64)((uint_64)$26 / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [1104])
	$25 = ($1 + [28])
	$24 = ($1 + [48])
	$23 = ($1 + [32])
	$22 = ($1 + [56])
	$21 = ($1 + [40])
	$26 = (int_64)5459781
	$27 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$28 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$28 = [0]
	
.LABEL $label$3
	CALL eosio_assert($28, [160])
	*(($1 + [80])) = (int_64)1397703940
	*($1 + [72]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$26 = (int_64)5459782
	$27 = [0]
	
.LOOP $label$10:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$9 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$11 }
	
.LOOP $label$12:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$12 }
	
.LABEL $label$11
	$28 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	$28 = [0]
	
.LABEL $label$8
	CALL eosio_assert($28, [160])
	*(($1 + [96])) = (int_64)1397704196
	*($1 + [88]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$26 = (int_64)5459781
	$27 = [0]
	
.LOOP $label$15:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$14 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$16 }
	
.LOOP $label$17:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$17 }
	
.LABEL $label$16
	$28 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$15 }
	goto $label$13 
	
.LABEL $label$14
	$28 = [0]
	
.LABEL $label$13
	CALL eosio_assert($28, [160])
	*(($1 + [112])) = (int_64)1397703940
	*($1 + [104]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$26 = (int_64)5459782
	$27 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$21 }
	
.LOOP $label$22:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$22 }
	
.LABEL $label$21
	$28 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	$28 = [0]
	
.LABEL $label$18
	CALL eosio_assert($28, [160])
	*(($1 + [128])) = (int_64)1397704196
	*($1 + [120]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$26 = (int_64)5459781
	$27 = [0]
	
.LOOP $label$25:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$24 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$26 }
	
.LOOP $label$27:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$27 }
	
.LABEL $label$26
	$28 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$25 }
	goto $label$23 
	
.LABEL $label$24
	$28 = [0]
	
.LABEL $label$23
	CALL eosio_assert($28, [160])
	*(($1 + [144])) = (int_64)1397703940
	*($1 + [136]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$26 = (int_64)5459782
	$27 = [0]
	
.LOOP $label$30:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $26) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$29 }
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$31 }
	
.LOOP $label$32:
	$26 = (uint_64)$26 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$26) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$32 }
	
.LABEL $label$31
	$28 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$30 }
	goto $label$28 
	
.LABEL $label$29
	$28 = [0]
	
.LABEL $label$28
	CALL eosio_assert($28, [160])
	*(($1 + [160])) = (int_64)1397704196
	*($1 + [152]) = (int_64)0
	*($29 + [24]) = [0]
	*($29 + [8]) = ($29 + [24])
	$3 = ($1 + [8])
	*($29 + [36]) = $3
	*($29 + [32]) = $1
	$4 = ($1 + [12])
	*($29 + [40]) = $4
	$5 = ($1 + [16])
	*($29 + [44]) = $5
	$6 = ($1 + [20])
	*($29 + [48]) = $6
	$7 = ($1 + [24])
	*($29 + [52]) = $7
	*($29 + [56]) = $25
	*($29 + [60]) = $23
	*($29 + [64]) = $21
	*($29 + [68]) = $24
	*($29 + [72]) = $22
	$8 = ($1 + [64])
	*($29 + [76]) = $8
	$9 = ($1 + [72])
	*($29 + [80]) = $9
	$10 = ($1 + [88])
	*($29 + [84]) = $10
	$11 = ($1 + [104])
	*($29 + [88]) = $11
	$12 = ($1 + [120])
	*($29 + [92]) = $12
	$13 = ($1 + [136])
	*($29 + [96]) = $13
	$14 = ($1 + [152])
	*($29 + [100]) = $14
	$15 = ($1 + [168])
	*($29 + [104]) = $15
	$16 = ($1 + [180])
	*($29 + [108]) = $16
	$17 = ($1 + [192])
	*($29 + [112]) = $17
	$18 = ($1 + [204])
	*($29 + [116]) = $18
	$19 = ($1 + [216])
	*($29 + [120]) = $19
	$20 = ($1 + [228])
	*($29 + [124]) = $20
	CALL $23(($29 + [32]), ($29 + [8]))
	$28 = *($29 + [24])
	if ( ($28 <= [513]) ){ goto $label$34 }
	$27 = CALL malloc($28)
	goto $label$33 
	
.LABEL $label$34
	$27 = ($30 - (($28 + [15]) & [-16]))
	*([0] + [4]) = $27
	
.LABEL $label$33
	*($29 + [12]) = $27
	*($29 + [8]) = $27
	*($29 + [16]) = ($27 + $28)
	*($29 + [24]) = ($29 + [8])
	*($29 + [36]) = $3
	*($29 + [32]) = $1
	*($29 + [40]) = $4
	*($29 + [44]) = $5
	*($29 + [48]) = $6
	*($29 + [52]) = $7
	*($29 + [56]) = $25
	*($29 + [60]) = $23
	*($29 + [64]) = $21
	*($29 + [68]) = $24
	*($29 + [72]) = $22
	*($29 + [76]) = $8
	*($29 + [80]) = $9
	*($29 + [84]) = $10
	*($29 + [88]) = $11
	*($29 + [92]) = $12
	*($29 + [96]) = $13
	*($29 + [100]) = $14
	*($29 + [104]) = $15
	*($29 + [108]) = $16
	*($29 + [112]) = $17
	*($29 + [116]) = $18
	*($29 + [120]) = $19
	*($29 + [124]) = $20
	CALL $24(($29 + [32]), ($29 + [24]))
	$26 = *($1)
	*($1 + [244]) = CALL db_store_i64(*($2 + [8]), (int_64)7235159550150574080, *(*($0 + [8])), $26, $27, $28)
	if ( ($28 <= [513]) ){ goto $label$35 }
	CALL free($27)
	
.LABEL $label$35
	if ( (uint_64)($26 <= *($2 + [16])) ){ goto $label$36 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$26 + (int_64)1) : ((uint_64)$26 > (uint_64)(int_64)-3) )
	
.LABEL $label$36
	*([0] + [4]) = ($29 + [128])
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	$28 = (*([0] + [4]) - [128])
	*([0] + [4]) = $28
	CALL eosio_assert(((int_32)*($1 + [240]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	*($1 + [32]) = [4]
	$3 = *($1)
	*($1 + [56]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert(((int_64)$3 == (int_64)*($1)), [1584])
	*(($29 = $28) + [24]) = [0]
	*($29 + [8]) = ($29 + [24])
	$6 = ($1 + [8])
	*($29 + [36]) = $6
	*($29 + [32]) = $1
	$7 = ($1 + [12])
	*($29 + [40]) = $7
	$8 = ($1 + [16])
	*($29 + [44]) = $8
	$9 = ($1 + [20])
	*($29 + [48]) = $9
	$10 = ($1 + [24])
	*($29 + [52]) = $10
	$11 = ($1 + [28])
	*($29 + [56]) = $11
	$4 = ($1 + [32])
	*($29 + [60]) = $4
	$12 = ($1 + [40])
	*($29 + [64]) = $12
	$13 = ($1 + [48])
	*($29 + [68]) = $13
	$5 = ($1 + [56])
	*($29 + [72]) = $5
	$14 = ($1 + [64])
	*($29 + [76]) = $14
	$15 = ($1 + [72])
	*($29 + [80]) = $15
	$16 = ($1 + [88])
	*($29 + [84]) = $16
	$17 = ($1 + [104])
	*($29 + [88]) = $17
	$18 = ($1 + [120])
	*($29 + [92]) = $18
	$19 = ($1 + [136])
	*($29 + [96]) = $19
	$20 = ($1 + [152])
	*($29 + [100]) = $20
	$21 = ($1 + [168])
	*($29 + [104]) = $21
	$22 = ($1 + [180])
	*($29 + [108]) = $22
	$23 = ($1 + [192])
	*($29 + [112]) = $23
	$24 = ($1 + [204])
	*($29 + [116]) = $24
	$25 = ($1 + [216])
	*($29 + [120]) = $25
	$26 = ($1 + [228])
	*($29 + [124]) = $26
	CALL $23(($29 + [32]), ($29 + [8]))
	$27 = *($29 + [24])
	if ( ($27 <= [513]) ){ goto $label$2 }
	$28 = CALL malloc($27)
	goto $label$1 
	
.LABEL $label$2
	$28 = ($28 - (($27 + [15]) & [-16]))
	*([0] + [4]) = $28
	
.LABEL $label$1
	*($29 + [12]) = $28
	*($29 + [8]) = $28
	*($29 + [16]) = ($28 + $27)
	*($29 + [24]) = ($29 + [8])
	*($29 + [36]) = $6
	*($29 + [40]) = $7
	*($29 + [44]) = $8
	*($29 + [48]) = $9
	*($29 + [52]) = $10
	*($29 + [56]) = $11
	*($29 + [32]) = $1
	*($29 + [60]) = $4
	*($29 + [64]) = $12
	*($29 + [68]) = $13
	*($29 + [72]) = $5
	*($29 + [76]) = $14
	*($29 + [80]) = $15
	*($29 + [84]) = $16
	*($29 + [88]) = $17
	*($29 + [92]) = $18
	*($29 + [96]) = $19
	*($29 + [100]) = $20
	*($29 + [104]) = $21
	*($29 + [108]) = $22
	*($29 + [112]) = $23
	*($29 + [116]) = $24
	*($29 + [120]) = $25
	*($29 + [124]) = $26
	CALL $24(($29 + [32]), ($29 + [24]))
	CALL db_update_i64(*($1 + [244]), $2, $28, $27)
	if ( ($27 <= [513]) ){ goto $label$3 }
	CALL free($28)
	
.LABEL $label$3
	if ( (uint_64)($3 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$3 + (int_64)1) : ((uint_64)$3 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($29 + [128])
}

void .FUNC $66 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	$30 = (*([0] + [4]) - [128])
	$29 = $30
	*([0] + [4]) = $30
	CALL eosio_assert(((int_32)*($1 + [240]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	*($1 + [32]) = [3]
	*($1 + [48]) = ((uint_32)*(*($3)) % (uint_32)[15])
	$4 = *($1)
	*($1 + [56]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	$7 = ($1 + [56])
	$6 = ($1 + [48])
	$5 = ($1 + [32])
	$28 = *($1 + [48])
	if ( ($28 == 0) ){ goto $label$3 }
	if ( ((uint_32)$28 > (uint_32)[7]) ){ goto $label$2 }
	*($1 + [12]) = (*(*(*($3 + [4]) + [4]) + [12]) + [1])
	goto $label$1 
	
.LABEL $label$3
	*($1 + [16]) = (*(*(*($3 + [4]) + [4]) + [16]) + [1])
	goto $label$1 
	
.LABEL $label$2
	if ( ((uint_32)$28 > (uint_32)[14]) ){ goto $label$1 }
	*($1 + [8]) = (*(*(*($3 + [4]) + [4]) + [8]) + [1])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1584])
	*($29 + [24]) = [0]
	*($29 + [8]) = ($29 + [24])
	$8 = ($1 + [8])
	*($29 + [36]) = $8
	*($29 + [32]) = $1
	$9 = ($1 + [12])
	*($29 + [40]) = $9
	$10 = ($1 + [16])
	*($29 + [44]) = $10
	$11 = ($1 + [20])
	*($29 + [48]) = $11
	$12 = ($1 + [24])
	*($29 + [52]) = $12
	$13 = ($1 + [28])
	*($29 + [56]) = $13
	*($29 + [60]) = $5
	$14 = ($1 + [40])
	*($29 + [64]) = $14
	*($29 + [68]) = $6
	*($29 + [72]) = $7
	$15 = ($1 + [64])
	*($29 + [76]) = $15
	$16 = ($1 + [72])
	*($29 + [80]) = $16
	$17 = ($1 + [88])
	*($29 + [84]) = $17
	$18 = ($1 + [104])
	*($29 + [88]) = $18
	$19 = ($1 + [120])
	*($29 + [92]) = $19
	$20 = ($1 + [136])
	*($29 + [96]) = $20
	$21 = ($1 + [152])
	*($29 + [100]) = $21
	$22 = ($1 + [168])
	*($29 + [104]) = $22
	$23 = ($1 + [180])
	*($29 + [108]) = $23
	$24 = ($1 + [192])
	*($29 + [112]) = $24
	$25 = ($1 + [204])
	*($29 + [116]) = $25
	$26 = ($1 + [216])
	*($29 + [120]) = $26
	$27 = ($1 + [228])
	*($29 + [124]) = $27
	CALL $23(($29 + [32]), ($29 + [8]))
	$28 = *($29 + [24])
	if ( ($28 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($28)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($30 - (($28 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($29 + [12]) = $3
	*($29 + [8]) = $3
	*($29 + [16]) = ($3 + $28)
	*($29 + [24]) = ($29 + [8])
	*($29 + [36]) = $8
	*($29 + [40]) = $9
	*($29 + [44]) = $10
	*($29 + [48]) = $11
	*($29 + [52]) = $12
	*($29 + [56]) = $13
	*($29 + [32]) = $1
	*($29 + [60]) = $5
	*($29 + [64]) = $14
	*($29 + [68]) = $6
	*($29 + [72]) = $7
	*($29 + [76]) = $15
	*($29 + [80]) = $16
	*($29 + [84]) = $17
	*($29 + [88]) = $18
	*($29 + [92]) = $19
	*($29 + [96]) = $20
	*($29 + [100]) = $21
	*($29 + [104]) = $22
	*($29 + [108]) = $23
	*($29 + [112]) = $24
	*($29 + [116]) = $25
	*($29 + [120]) = $26
	*($29 + [124]) = $27
	CALL $24(($29 + [32]), ($29 + [24]))
	CALL db_update_i64(*($1 + [244]), $2, $3, $28)
	if ( ($28 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($29 + [128])
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	CALL $29(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [36])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $60 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	CALL $14(*($1), *($0 + [24]))
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((int_32)(*($2 + [8]) - $4) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), ($3 + [8]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [36])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC _ZN9farmeosrb5adminEym (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [128])
	*([0] + [4]) = $11
	*($11 + [108]) = $2
	CALL require_auth(*($0))
	$3 = ($0 + [8])
	$5 = ($0 + [16])
	$2 = CALL db_lowerbound_i64(*($0 + [8]), *($5), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	CALL $6($3, $2)
	$2 = [0]
	$5 = CALL db_lowerbound_i64(*($3), *($5), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$6 }
	$2 = CALL $6($3, $5)
	
.LABEL $label$6
	*($11 + [96]) = $3
	*($11 + [100]) = $2
	CALL prints([2416])
	CALL printui(*($2 + [32]))
	if ( (uint_64)(((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) <= ((int_64)*($2 + [40]) + (int_64)3)) ){ goto $label$7 }
	if ( ((int_32)*($2 + [32]) != (int_32)[1]) ){ goto $label$7 }
	$8 = *($0)
	CALL eosio_assert([1], [1312])
	CALL $65($3, $2, $8)
	CALL prints([2432])
	CALL printui(*(($2 + [32])))
	goto $label$1 
	
.LABEL $label$7
	$5 = ($2 + [40])
	if ( (uint_64)(((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) <= ((int_64)*($5) + (int_64)23)) ){ goto $label$4 }
	if ( ((int_32)*($2 + [32]) != (int_32)[2]) ){ goto $label$4 }
	$8 = *($0)
	*($11 + [36]) = ($11 + [96])
	*($11 + [32]) = ($11 + [108])
	CALL eosio_assert([1], [1312])
	CALL $66($3, $2, $8, ($11 + [32]))
	CALL prints([2464])
	CALL printui(*(*($11 + [100]) + [32]))
	CALL prints([1744])
	CALL printui(*(*($11 + [100]) + [48]))
	$8 = CALL current_time()
	*(($11 + [60])) = [0]
	*(($11 + [64])) = [0]
	*($11 + [44]) = [0]
	*($11 + [48]) = [0]
	*($11 + [52]) = [0]
	*($11 + [56]) = [0]
	*($11 + [32]) = ((CASTING uint_32)(uint_64 ((uint_64)$8 / (uint_64)(int_64)1000000)) + [60])
	*($11 + [68]) = [0]
	*(($11 + [72])) = [0]
	*(($11 + [76])) = [0]
	*($11 + [80]) = [0]
	*(($11 + [84])) = [0]
	*(($11 + [88])) = [0]
	$5 = ($11 + [68])
	$4 = *($0)
	$8 = (int_64)0
	$7 = (int_64)59
	$2 = [1008]
	$9 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$13 }
	$3 = *($2)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$9
	$2 = ($2 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$8 }
	*($11 + [24]) = $9
	*($11 + [16]) = $4
	$8 = (int_64)0
	$7 = (int_64)59
	$2 = [1952]
	$9 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$8 > (uint_64)(int_64)5) ){ goto $label$19 }
	$3 = *($2)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$3 = ($3 + [165])
	goto $label$17 
	
.LABEL $label$19
	$10 = (int_64)0
	if ( ((uint_64)$8 <= (uint_64)(int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$15
	$2 = ($2 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$14 }
	*($11 + [112]) = $9
	*($11 + [8]) = $4
	CALL $49($5, ($11 + [16]), $0, ($11 + [112]), ($11 + [8]))
	$8 = *(*($11 + [100]) + [28])
	$10 = CALL current_time()
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = ((int_64)$8 + (int_64)$10)
	$8 = *($0)
	CALL $46(($11 + [112]), ($11 + [32]))
	$2 = *($11 + [112])
	CALL send_deferred(($11 + [16]), $8, $2, (*($11 + [116]) - $2), [0])
	$2 = *($11 + [112])
	if ( ($2 == 0) ){ goto $label$20 }
	*($11 + [116]) = $2
	CALL $99($2)
	
.LABEL $label$20
	CALL prints([2528])
	CALL printui(*(*($11 + [100]) + [32]))
	CALL $47(($11 + [32]))
	goto $label$1 
	
.LABEL $label$5
	$8 = *($0)
	*($11 + [8]) = $0
	*($11 + [16]) = $8
	CALL eosio_assert(((int_64)*($3) == (int_64)CALL $fimport$3()), [1248])
	*($11 + [32]) = $3
	*($11 + [36]) = ($11 + [8])
	*($11 + [40]) = ($11 + [16])
	$2 = CALL $98([256])
	CALL $36($2)
	*($2 + [240]) = $3
	CALL $64(($11 + [32]), $2)
	*($11 + [112]) = $2
	$8 = *($2)
	*($11 + [32]) = $8
	$5 = *($2 + [244])
	*($11 + [96]) = $5
	$6 = ($0 + [36])
	$3 = *($6)
	if ( ((uint_32)$3 >= (uint_32)*(($0 + [40]))) ){ goto $label$3 }
	*($3 + [8]) = $8
	*($3 + [16]) = $5
	*($11 + [112]) = [0]
	*($3) = $2
	*($6) = ($3 + [24])
	goto $label$2 
	
.LABEL $label$4
	if ( (uint_64)(((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) <= ((int_64)*($5) + (int_64)28)) ){ goto $label$21 }
	if ( ((int_32)*($2 + [32]) != (int_32)[3]) ){ goto $label$21 }
	$8 = *($0)
	CALL eosio_assert([1], [1312])
	CALL $67($3, $2, $8)
	CALL prints([2432])
	CALL printui(*(($2 + [32])))
	goto $label$1 
	
.LABEL $label$21
	if ( ((uint_64)((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295) <= (uint_64)((int_64)*(($2 + [40])) + (int_64)31)) ){ goto $label$22 }
	if ( ((int_32)*($2 + [32]) != (int_32)[4]) ){ goto $label$22 }
	CALL _ZN9farmeosrb10rcd_roundsEv($0)
	$8 = *($0)
	*($11 + [32]) = ($11 + [96])
	CALL eosio_assert([1], [1312])
	CALL $69($3, $2, $8, ($11 + [32]))
	CALL prints([2432])
	CALL printui(*(*($11 + [100]) + [32]))
	goto $label$1 
	
.LABEL $label$22
	CALL eosio_assert([0], [2560])
	goto $label$1 
	
.LABEL $label$3
	CALL $38(($0 + [32]), ($11 + [112]), ($11 + [32]), ($11 + [96]))
	
.LABEL $label$2
	$2 = *($11 + [112])
	*($11 + [112]) = [0]
	if ( ($2 == 0) ){ goto $label$23 }
	$0 = *($2 + [228])
	if ( ($0 == 0) ){ goto $label$24 }
	*(($2 + [232])) = $0
	CALL $99($0)
	
.LABEL $label$24
	$0 = *($2 + [216])
	if ( ($0 == 0) ){ goto $label$25 }
	*(($2 + [220])) = $0
	CALL $99($0)
	
.LABEL $label$25
	$0 = *($2 + [204])
	if ( ($0 == 0) ){ goto $label$26 }
	*(($2 + [208])) = $0
	CALL $99($0)
	
.LABEL $label$26
	$0 = *($2 + [192])
	if ( ($0 == 0) ){ goto $label$27 }
	*(($2 + [196])) = $0
	CALL $99($0)
	
.LABEL $label$27
	$0 = *($2 + [180])
	if ( ($0 == 0) ){ goto $label$28 }
	*(($2 + [184])) = $0
	CALL $99($0)
	
.LABEL $label$28
	$0 = *($2 + [168])
	if ( ($0 == 0) ){ goto $label$29 }
	*(($2 + [172])) = $0
	CALL $99($0)
	
.LABEL $label$29
	CALL $99($2)
	
.LABEL $label$23
	CALL prints([2400])
	
.LABEL $label$1
	*([0] + [4]) = ($11 + [128])
}

int_64 .FUNC _ZN9farmeosrb13next_sequenceEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL require_auth(*($0))
	$1 = ($0 + [8])
	$4 = [0]
	$2 = CALL db_lowerbound_i64(*($0 + [8]), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$1 }
	$4 = CALL $6($1, $2)
	
.LABEL $label$1
	*($5 + [8]) = *($4 + [64])
	$3 = *($0)
	*($5) = ($5 + [8])
	CALL eosio_assert(((int_32)$4 != (int_32)[0]), [1312])
	CALL $45($1, $4, $3, $5)
	$3 = *($5 + [8])
	*([0] + [4]) = ($5 + [16])
	return $3
}

int_32 .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$4 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $4 )
	$5 = ($1 + [1])
	$6 = *($1 + [8])
	$1 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$5 }
	$3 = *($0)
	$1 = (($3 & [-2]) + [-1])
	
.LABEL $label$5
	$5 = ( $6 ? $5 : $4 )
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $4 ){ goto $label$7 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $4 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$3 = *($0 + [4])
	
.LABEL $label$6
	CALL $102($0, $1, ($2 - $1), $3, [0], $3, $2, $5)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $5, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $100 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $98(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $99($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $102 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $98($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $99($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $105 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $104 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = CALL strlen($1)
	$5 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	$4 = ($3 & [1])
	if ( ((uint_32)$2 <= (uint_32)$5) ){ goto $label$7 }
	if ( $4 ){ goto $label$6 }
	$3 = uint_32(($3 & [254]) >> [1])
	goto $label$5 
	
.LABEL $label$7
	if ( $4 ){ goto $label$4 }
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$3 = *($0 + [4])
	
.LABEL $label$5
	CALL $102($0, $5, ($2 - $5), $3, [0], $3, $2, $1)
	return $0
	
.LABEL $label$4
	$5 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memmove($5, $1, $2)
	
.LABEL $label$2
	*(($5 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$8 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$8
	*($0 + [4]) = $2
	return $0
}

int_32 .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

int_32 .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$2 = *($1 + [4])
	$5 = *($1)
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$4 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$4
	$4 = [0]
	goto $label$1 
	
.LABEL $label$3
	$4 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1680])
	CALL memcpy(($6 + [8]), $4, [8])
	$3 = *($6 + [8])
	if ( ($1 <= [513]) ){ goto $label$5 }
	CALL free($4)
	
.LABEL $label$5
	$1 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$6 }
	$5 = *((*($1) + $5))
	
.LABEL $label$6
	CALL void $1((int_32 $3), (int_64 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $87 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	$6 = $7
	*([0] + [4]) = $7
	$2 = *($1 + [4])
	$5 = *($1)
	$4 = [0]
	$1 = CALL action_data_size()
	if ( ($1 == 0) ){ goto $label$1 }
	if ( ($1 <= [513]) ){ goto $label$3 }
	$4 = CALL malloc($1)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($7 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$2
	CALL read_action_data($4, $1)
	
.LABEL $label$1
	*($6 + [8]) = [0]
	*($6) = (int_64)0
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1680])
	CALL memcpy($6, $4, [8])
	CALL eosio_assert(((int_32)($1 & [-4]) != (int_32)[8]), [1680])
	$7 = ($6 + [8])
	CALL memcpy($7, ($4 + [8]), [4])
	if ( ($1 <= [513]) ){ goto $label$4 }
	CALL free($4)
	
.LABEL $label$4
	$1 = ($0 + int_32($2 >> [1]))
	$4 = *($7)
	$3 = *($6)
	if ( (($2 & [1]) == 0) ){ goto $label$5 }
	$5 = *((*($1) + $5))
	
.LABEL $label$5
	CALL void $1((int_32 $3), (int_64 $4), (int_32 $5))
	*([0] + [4]) = ($6 + [16])
	return [1]
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [96])
	*([0] + [4]) = $4
	*(($5 = $4) + [60]) = $0
	*($5 + [48]) = *($1)
	*($5 + [52]) = *($1 + [4])
	$1 = [0]
	$0 = [0]
	$2 = CALL action_data_size()
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ($2 <= [513]) ){ goto $label$3 }
	$0 = CALL malloc($2)
	goto $label$2 
	
.LABEL $label$3
	$0 = ($4 - (($2 + [15]) & [-16]))
	*([0] + [4]) = $0
	
.LABEL $label$2
	CALL read_action_data($0, $2)
	
.LABEL $label$1
	*(($5 + [24])) = (int_64)1398362884
	*($5 + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$3 = (int_64)5462355
	
.LOOP $label$6:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$5 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	
.LOOP $label$8:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$5 }
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = [1]
	$1 = ($1 + [1])
	if ( ((int_32)$1 < (int_32)[7]) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	$4 = [0]
	
.LABEL $label$4
	CALL eosio_assert($4, [160])
	*(($5 + [40])) = [0]
	*($5 + [32]) = (int_64)0
	*($5 + [68]) = $0
	*($5 + [64]) = $0
	*($5 + [72]) = ($0 + $2)
	*($5 + [80]) = ($5 + [64])
	*($5 + [88]) = $5
	CALL $92(($5 + [88]), ($5 + [80]))
	if ( ($2 <= [513]) ){ goto $label$9 }
	CALL free($0)
	
.LABEL $label$9
	*($5 + [68]) = ($5 + [48])
	*($5 + [64]) = ($5 + [60])
	CALL $93(($5 + [64]), $5)
	if ( ((*($5 + [32]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($5 + [40])))
	
.LABEL $label$10
	*([0] + [4]) = ($5 + [96])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [256])
	*([0] + [4]) = $9
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2768]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$3 = ($3 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$7 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2784]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)4) ){ goto $label$13 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$3 = ($3 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$7 == (int_64)$1), [2800])
	
.LABEL $label$7
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1056]
	$7 = (int_64)0
	
.LOOP $label$14:
	if ( ((uint_64)$6 > (uint_64)(int_64)10) ){ goto $label$19 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$18 }
	$3 = ($3 + [165])
	goto $label$17 
	
.LABEL $label$19
	$8 = (int_64)0
	if ( ((int_64)$6 == (int_64)11) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$18
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$17
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$16
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$15
	$4 = ($4 + [1])
	$5 = ((int_64)$5 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 != (int_64)13) ){ goto $label$14 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$22 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1072]
	$7 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$28 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$3 = ($3 + [165])
	goto $label$26 
	
.LABEL $label$28
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$24
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$23 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$21 }
	
.LABEL $label$22
	$6 = (int_64)0
	$8 = (int_64)59
	$4 = [1856]
	$7 = (int_64)0
	
.LOOP $label$29:
	$5 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$30 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$32 }
	$3 = ($3 + [165])
	goto $label$31 
	
.LABEL $label$32
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$31
	$5 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$30
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$5 | (int_64)$7)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$29 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$33 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1072]
	$7 = (int_64)0
	
.LOOP $label$34:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$39 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$38 }
	$3 = ($3 + [165])
	goto $label$37 
	
.LABEL $label$39
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$36 }
	goto $label$35 
	
.LABEL $label$38
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$37
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$36
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$35
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$34 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$21 }
	
.LABEL $label$33
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$20 }
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [1072]
	$7 = (int_64)0
	
.LOOP $label$40:
	if ( ((uint_64)$6 > (uint_64)(int_64)7) ){ goto $label$45 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$44 }
	$3 = ($3 + [165])
	goto $label$43 
	
.LABEL $label$45
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$42 }
	goto $label$41 
	
.LABEL $label$44
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$43
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $3) << (int_64)56) >> (int_64)56)
	
.LABEL $label$42
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$41
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$40 }
	if ( ((int_64)$7 == (int_64)$2) ){ goto $label$20 }
	
.LABEL $label$21
	*(($9 + [104])) = $0
	*(($9 + [112])) = (int_64)-1
	*(($9 + [120])) = (int_64)0
	*(($9 + [128])) = [0]
	*($9 + [96]) = $0
	*($9 + [88]) = $0
	*($9 + [136]) = $0
	*(($9 + [144])) = $0
	*(($9 + [152])) = (int_64)-1
	*(($9 + [160])) = [0]
	*(($9 + [164])) = [0]
	*(($9 + [168])) = [0]
	*($9 + [176]) = $0
	*(($9 + [184])) = $0
	*(($9 + [192])) = (int_64)-1
	*(($9 + [200])) = [0]
	*(($9 + [204])) = [0]
	*(($9 + [208])) = [0]
	*($9 + [216]) = $0
	*(($9 + [224])) = $0
	*(($9 + [232])) = (int_64)-1
	*(($9 + [240])) = [0]
	*(($9 + [244])) = [0]
	*(($9 + [248])) = [0]
	if ( ((int_64)$2 <= (int_64)3631283935532548095) ){ goto $label$50 }
	if ( ((int_64)$2 == (int_64)3631283935532548096) ){ goto $label$49 }
	if ( ((int_64)$2 == (int_64)4923676522370117600) ){ goto $label$48 }
	if ( ((int_64)$2 != (int_64)4923676697420251136) ){ goto $label$46 }
	*($9 + [60]) = [0]
	*($9 + [56]) = [1]
	*($9 + [32 align=4]) = *($9 + [56])
	CALL $89(($9 + [88]), ($9 + [32]))
	goto $label$46 
	
.LABEL $label$50
	if ( ((int_64)$2 == (int_64)-4994024814571159552) ){ goto $label$47 }
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$46 }
	*($9 + [84]) = [0]
	*($9 + [80]) = [2]
	*($9 + [8 align=4]) = *($9 + [80])
	CALL $86(($9 + [88]), ($9 + [8]))
	goto $label$46 
	
.LABEL $label$49
	*($9 + [76]) = [0]
	*($9 + [72]) = [3]
	*($9 + [16 align=4]) = *($9 + [72])
	CALL $87(($9 + [88]), ($9 + [16]))
	goto $label$46 
	
.LABEL $label$48
	*($9 + [52]) = [0]
	*($9 + [48]) = [4]
	*($9 + [40 align=4]) = *($9 + [48])
	CALL $90(($9 + [88]), ($9 + [40]))
	goto $label$46 
	
.LABEL $label$47
	*($9 + [68]) = [0]
	*($9 + [64]) = [5]
	*($9 + [24 align=4]) = *($9 + [64])
	CALL $88(($9 + [88]), ($9 + [24]))
	
.LABEL $label$46
	CALL $91(($9 + [88]))
	
.LABEL $label$20
	*([0] + [4]) = ($9 + [256])
}

void .FUNC _ZN9farmeosrb4drawEy (int_32 $0, int_64 $1)
{
}

void .FUNC _ZN9farmeosrb10withdrawalEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
}

void .FUNC _ZN9farmeosrb8depositsEyN5eosio5assetENSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $8) / (int_32)[40])
	$7 = ($5 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$8 = ((int_32)(*($0 + [8]) - $8) / (int_32)[40])
	if ( ((uint_32)$8 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($8 << [1])
	$6 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $98(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	*(($8 = ($7 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($8 + [8]) = *($3)
	*($8 + [16 align=4]) = (int_64)0
	*(($3 = ($8 + [24]))) = [0]
	$2 = CALL $98([16])
	*($8 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($8 + [20])) = $5
	*($8 + [28]) = [0]
	*(($2 = ($8 + [32]))) = [0]
	*(($8 + [36])) = [0]
	CALL $10(($8 + [28]), [4])
	$2 = *($8 + [28])
	CALL eosio_assert(((int_32)(*($2) - $2) > (int_32)[3]), [1168])
	CALL memcpy($2, $4, [4])
	$4 = ($7 + ((int_32)$6 * (int_32)[40]))
	$5 = ($8 + [40])
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	$3 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$7:
	*(($8 + [-32])) = *(($2 + [-12]))
	*(($8 + [-40])) = *(($2 + [-20]))
	*(($1 = ($8 + [-24]))) = (int_64)0
	*(($6 = ($8 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($8 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($6) = *($1)
	*($1) = [0]
	*(($1 = ($8 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($6 = ($8 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($8 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($6) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$8 = ($8 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $3) != (int_32)[-20]) ){ goto $label$7 }
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	$1 = ([0] - $6)
	$8 = ($2 + [-24])
	
.LOOP $label$9:
	$2 = *(($8 + [12]))
	if ( ($2 == 0) ){ goto $label$10 }
	*(($8 + [16])) = $2
	CALL $99($2)
	
.LABEL $label$10
	$2 = *($8)
	if ( ($2 == 0) ){ goto $label$11 }
	*(($8 + [4])) = $2
	CALL $99($2)
	
.LABEL $label$11
	$8 = ($8 + [-40])
	if ( ((int_32)($8 + $1) != (int_32)[-24]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $99($6)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	CALL eosio_assert(((int_32)*($1 + [100]) == (int_32)$0), [2048])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [2096])
	$3 = *($0 + [24])
	$5 = ($0 + [28])
	$7 = *($5)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$1 }
	$2 = *($1)
	$6 = ([0] - $3)
	$8 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_64)*(*($8)) == (int_64)$2) ){ goto $label$1 }
	$7 = $8
	$4 = ($8 + [-24])
	$8 = $4
	if ( ((int_32)($4 + $6) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$7 != (int_32)$3), [2160])
	$8 = ($7 + [-24])
	$4 = *($5)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$4 }
	$3 = ([0] - $4)
	$7 = $8
	
.LOOP $label$5:
	$8 = ($7 + [24])
	$6 = *($8)
	*($8) = [0]
	$4 = *($7)
	*($7) = $6
	if ( ($4 == 0) ){ goto $label$6 }
	if ( ((*($4 + [52]) & [1]) == 0) ){ goto $label$7 }
	CALL $99(*(($4 + [60])))
	
.LABEL $label$7
	CALL $99($4)
	
.LABEL $label$6
	*(($7 + [16])) = *(($7 + [40]))
	*(($7 + [8])) = *(($7 + [32]))
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$5 }
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$8:
	$7 = ($7 + [-24])
	$4 = *($7)
	*($7) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	if ( ((*($4 + [52]) & [1]) == 0) ){ goto $label$10 }
	CALL $99(*(($4 + [60])))
	
.LABEL $label$10
	CALL $99($4)
	
.LABEL $label$9
	if ( ((int_32)$8 != (int_32)$7) ){ goto $label$8 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [104]))
}

void .FUNC $72 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $98(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $106($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $99($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $99($6)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $73 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	$29 = (*([0] + [4]) - [128])
	*([0] + [4]) = $29
	CALL eosio_assert(((int_32)*($1 + [240]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	*($1 + [24]) = (*(*(*($3) + [4]) + [24]) + [1])
	$4 = *($1)
	CALL eosio_assert([1], [1584])
	*(($3 = $29) + [24]) = [0]
	*($3 + [8]) = ($3 + [24])
	$6 = ($1 + [8])
	*($3 + [36]) = $6
	*($3 + [32]) = $1
	$7 = ($1 + [12])
	*($3 + [40]) = $7
	$8 = ($1 + [16])
	*($3 + [44]) = $8
	$9 = ($1 + [20])
	*($3 + [48]) = $9
	$5 = ($1 + [24])
	*($3 + [52]) = $5
	$10 = ($1 + [28])
	*($3 + [56]) = $10
	$11 = ($1 + [32])
	*($3 + [60]) = $11
	$12 = ($1 + [40])
	*($3 + [64]) = $12
	$13 = ($1 + [48])
	*($3 + [68]) = $13
	$14 = ($1 + [56])
	*($3 + [72]) = $14
	$15 = ($1 + [64])
	*($3 + [76]) = $15
	$16 = ($1 + [72])
	*($3 + [80]) = $16
	$17 = ($1 + [88])
	*($3 + [84]) = $17
	$18 = ($1 + [104])
	*($3 + [88]) = $18
	$19 = ($1 + [120])
	*($3 + [92]) = $19
	$20 = ($1 + [136])
	*($3 + [96]) = $20
	$21 = ($1 + [152])
	*($3 + [100]) = $21
	$22 = ($1 + [168])
	*($3 + [104]) = $22
	$23 = ($1 + [180])
	*($3 + [108]) = $23
	$24 = ($1 + [192])
	*($3 + [112]) = $24
	$25 = ($1 + [204])
	*($3 + [116]) = $25
	$26 = ($1 + [216])
	*($3 + [120]) = $26
	$27 = ($1 + [228])
	*($3 + [124]) = $27
	CALL $23(($3 + [32]), ($3 + [8]))
	$28 = *($3 + [24])
	if ( ($28 <= [513]) ){ goto $label$2 }
	$29 = CALL malloc($28)
	goto $label$1 
	
.LABEL $label$2
	$29 = ($29 - (($28 + [15]) & [-16]))
	*([0] + [4]) = $29
	
.LABEL $label$1
	*($3 + [12]) = $29
	*($3 + [8]) = $29
	*($3 + [16]) = ($29 + $28)
	*($3 + [24]) = ($3 + [8])
	*($3 + [36]) = $6
	*($3 + [40]) = $7
	*($3 + [44]) = $8
	*($3 + [48]) = $9
	*($3 + [52]) = $5
	*($3 + [56]) = $10
	*($3 + [32]) = $1
	*($3 + [60]) = $11
	*($3 + [64]) = $12
	*($3 + [68]) = $13
	*($3 + [72]) = $14
	*($3 + [76]) = $15
	*($3 + [80]) = $16
	*($3 + [84]) = $17
	*($3 + [88]) = $18
	*($3 + [92]) = $19
	*($3 + [96]) = $20
	*($3 + [100]) = $21
	*($3 + [104]) = $22
	*($3 + [108]) = $23
	*($3 + [112]) = $24
	*($3 + [116]) = $25
	*($3 + [120]) = $26
	*($3 + [124]) = $27
	CALL $24(($3 + [32]), ($3 + [24]))
	CALL db_update_i64(*($1 + [244]), $2, $29, $28)
	if ( ($28 <= [513]) ){ goto $label$3 }
	CALL free($29)
	
.LABEL $label$3
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$4
	*([0] + [4]) = ($3 + [128])
}

void .FUNC $70 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$9 = *($0 + [8])
	$3 = int_32(($2 - $1) >> [2])
	if ( ((uint_32)$3 <= (uint_32)int_32(($9 - $4) >> [2])) ){ goto $label$4 }
	if ( ($4 == 0) ){ goto $label$5 }
	*($0 + [4]) = $4
	CALL $99($4)
	$9 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$3 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$4 = [1073741823]
	if ( ((uint_32)int_32($9 >> [2]) > (uint_32)[536870910]) ){ goto $label$6 }
	$4 = $3
	$9 = int_32($9 >> [1])
	if ( ($9 <= $3) ){ goto $label$6 }
	$4 = $9
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	
.LABEL $label$6
	$9 = ($4 << [2])
	$4 = CALL $98($9)
	*($0) = $4
	*($0 + [4]) = $4
	*(($0 + [8])) = ($4 + $9)
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$3 }
	$3 = (($2 + [-4]) - $1)
	$9 = $4
	
.LOOP $label$7:
	*($9) = *($1)
	$9 = ($9 + [4])
	$1 = ($1 + [4])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$7 }
	*(($0 + [4])) = (($4 + ($3 & [-4])) + [4])
	return 
	
.LABEL $label$4
	$8 = int_32($8 >> [2])
	$8 = (*($0 + [4]) - $4)
	$9 = ($1 + $8)
	$5 = ( $9 ? $2 : ((uint_32)$3 > (uint_32)$8) )
	$6 = ($5 - $1)
	$7 = int_32($6 >> [2])
	if ( ($7 == 0) ){ goto $label$8 }
	CALL memmove($4, $1, $6)
	
.LABEL $label$8
	if ( ((uint_32)$3 <= (uint_32)$8) ){ goto $label$2 }
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$3 }
	$4 = (($2 + [-4]) - $5)
	$3 = *(($0 + [4]))
	$1 = $3
	
.LOOP $label$9:
	*($1) = *($9)
	$1 = ($1 + [4])
	$9 = ($9 + [4])
	if ( ((int_32)$2 != (int_32)$9) ){ goto $label$9 }
	*(($0 + [4])) = (($3 + ($4 & [-4])) + [4])
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($4 + ($7 << [2]))
	return (unreachable)
	
.LABEL $label$1
	CALL $106($0)
}

void .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($2 + [4]), $3, [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((int_32)(*($2 + [8]) - *($2 + [4])) > (int_32)[7]), [1168])
	CALL memcpy(*($2 + [4]), $3, [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [1168])
	CALL memcpy(*($0 + [4]), $2, [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

void .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$2 = *($0 + [12])
	$0 = *($1)
	CALL eosio_assert(((uint_32)(*($0 + [8]) - *($0 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($2, *($0 + [4]), [4])
	*($0 + [4]) = (*($0 + [4]) + [4])
}

int_32 .FUNC $77 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = *($0 + [4])
	if ( ($1 == 0) ){ goto $label$2 }
	$1 = CALL db_previous_i64(*($1 + [244]), ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2352])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($0)
	$1 = CALL db_end_i64(*($1), *($1 + [8]), (int_64)7235159550150574080)
	CALL eosio_assert(((int_32)$1 != (int_32)[-1]), [2288])
	$1 = CALL db_previous_i64($1, ($2 + [8]))
	CALL eosio_assert(((int_32)uint_32($1 >> [31]) ^ (int_32)[1]), [2288])
	
.LABEL $label$1
	*(($0 + [4])) = CALL $6(*($0), $1)
	*([0] + [4]) = ($2 + [16])
	return $0
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	$8 = $9
	*([0] + [4]) = $9
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1648])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [12]) = $4
	*($8 + [8]) = $4
	*($8 + [16]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*(($6 = CALL $98([48])) + [32]) = $0
	*($8 + [24]) = ($8 + [8])
	*($8 + [36]) = ($6 + [8])
	*($8 + [32]) = $6
	*($8 + [40]) = ($6 + [16])
	*($8 + [44]) = ($6 + [24])
	CALL $76(($8 + [32]), ($8 + [24]))
	*($6 + [36]) = $1
	*($8 + [24]) = $6
	$5 = *($6)
	*($8 + [32]) = $5
	$7 = *($6 + [36])
	*($8 + [4]) = $7
	$1 = ($0 + [28])
	$4 = *($1)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $5
	*($4 + [16]) = $7
	*($8 + [24]) = [0]
	*($4) = $6
	*($1) = ($4 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $72(($0 + [24]), ($8 + [24]), ($8 + [32]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $99($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

int_32 .FUNC $39 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0)
	*($0) = [0]
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = *($1 + [228])
	if ( ($2 == 0) ){ goto $label$2 }
	*(($1 + [232])) = $2
	CALL $99($2)
	
.LABEL $label$2
	$2 = *($1 + [216])
	if ( ($2 == 0) ){ goto $label$3 }
	*(($1 + [220])) = $2
	CALL $99($2)
	
.LABEL $label$3
	$2 = *($1 + [204])
	if ( ($2 == 0) ){ goto $label$4 }
	*(($1 + [208])) = $2
	CALL $99($2)
	
.LABEL $label$4
	$2 = *($1 + [192])
	if ( ($2 == 0) ){ goto $label$5 }
	*(($1 + [196])) = $2
	CALL $99($2)
	
.LABEL $label$5
	$2 = *($1 + [180])
	if ( ($2 == 0) ){ goto $label$6 }
	*(($1 + [184])) = $2
	CALL $99($2)
	
.LABEL $label$6
	$2 = *($1 + [168])
	if ( ($2 == 0) ){ goto $label$7 }
	*(($1 + [172])) = $2
	CALL $99($2)
	
.LABEL $label$7
	CALL $99($1)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $36 (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	*($0 + [72]) = (int_64)0
	*($0 + [64]) = (int_64)1
	*(($3 = ($0 + [80]))) = (int_64)1398362884
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	
.LABEL $label$1
	CALL eosio_assert($4, [160])
	*(($3 = ($0 + [96]))) = (int_64)1398362884
	*($0 + [88]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$4 = [0]
	
.LABEL $label$6
	CALL eosio_assert($4, [160])
	*(($3 = ($0 + [112]))) = (int_64)1398362884
	*($0 + [104]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$4 = [0]
	
.LABEL $label$11
	CALL eosio_assert($4, [160])
	*(($3 = ($0 + [128]))) = (int_64)1398362884
	*($0 + [120]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$4 = [0]
	
.LABEL $label$16
	CALL eosio_assert($4, [160])
	*(($3 = ($0 + [144]))) = (int_64)1398362884
	*($0 + [136]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$4 = [0]
	
.LABEL $label$21
	CALL eosio_assert($4, [160])
	*(($3 = ($0 + [160]))) = (int_64)1398362884
	*($0 + [152]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$2 = (uint_64)*($3) >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $2) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$2 = (uint_64)$2 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$2) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$4 = [1]
	$3 = ($3 + [1])
	if ( ((int_32)$3 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$4 = [0]
	
.LABEL $label$26
	CALL eosio_assert($4, [160])
	*(($4 = ($0 + [176]))) = [0]
	*($0 + [168 align=4]) = (int_64)0
	$3 = CALL $98([20])
	*($0 + [168]) = $3
	*($3) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	$3 = ($3 + [20])
	*($4) = $3
	*(($0 + [172])) = $3
	*($0 + [180]) = [0]
	*(($4 = ($0 + [184]))) = [0]
	*(($1 = ($0 + [188]))) = [0]
	$3 = CALL $98([20])
	*($0 + [180]) = $3
	*($3) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	$3 = ($3 + [20])
	*($1) = $3
	*($4) = $3
	*($0 + [192]) = [0]
	*(($4 = ($0 + [196]))) = [0]
	*(($1 = ($0 + [200]))) = [0]
	$3 = CALL $98([20])
	*($0 + [192]) = $3
	*($3) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	$3 = ($3 + [20])
	*($1) = $3
	*($4) = $3
	*($0 + [204]) = [0]
	*(($4 = ($0 + [208]))) = [0]
	*(($1 = ($0 + [212]))) = [0]
	$3 = CALL $98([20])
	*($0 + [204]) = $3
	*($3) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	$3 = ($3 + [20])
	*($1) = $3
	*($4) = $3
	*($0 + [216]) = [0]
	*(($4 = ($0 + [220]))) = [0]
	*(($1 = ($0 + [224]))) = [0]
	$3 = CALL $98([20])
	*($0 + [216]) = $3
	*($3) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	$3 = ($3 + [20])
	*($1) = $3
	*($4) = $3
	*($0 + [228]) = [0]
	*(($4 = ($0 + [232]))) = [0]
	*(($1 = ($0 + [236]))) = [0]
	$3 = CALL $98([20])
	*($0 + [228]) = $3
	*($3) = (int_64)0
	*($3 + [8 align=4]) = (int_64)0
	*($3 + [16]) = [0]
	$3 = ($3 + [20])
	*($1) = $3
	*($4) = $3
	return $0
}

void .FUNC $37 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = *($0)
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [4])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [8])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [12])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [16])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [20])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [24])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [28])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [32])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [36])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[3]), [1680])
	CALL memcpy($3, *($2 + [4]), [4])
	*($2 + [4]) = (*($2 + [4]) + [4])
	$3 = *($0 + [40])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [44])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [48])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [52])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [56])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [60])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [64])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	$3 = *($0 + [68])
	$2 = *($1)
	CALL eosio_assert(((uint_32)(*($2 + [8]) - *($2 + [4])) > (uint_32)[7]), [1680])
	CALL memcpy($3, *($2 + [4]), [8])
	$4 = (*($2 + [4]) + [8])
	*($2 + [4]) = $4
	CALL eosio_assert(((uint_32)(*($2 + [8]) - $4) > (uint_32)[7]), [1680])
	CALL memcpy(($3 + [8]), *($2 + [4]), [8])
	*($2 + [4]) = (*($2 + [4]) + [8])
	CALL $40(*($1), *($0 + [72]))
	CALL $40(*($1), *($0 + [76]))
	CALL $40(*($1), *($0 + [80]))
	CALL $40(*($1), *($0 + [84]))
	CALL $40(*($1), *($0 + [88]))
	CALL $40(*($1), *($0 + [92]))
}

void .FUNC _ZN9farmeosrb10cleanroundEv (int_32 $0)
{
	int_32 $1
	CALL require_auth(*($0))
	$1 = CALL db_lowerbound_i64(*($0 + [88]), *(($0 + [96])), (int_64)-4812882490098188288, (int_64)0)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$1 }
	CALL $74(($0 + [88]), $1)
	
.LABEL $label$1
	(unreachable)
}

void .FUNC _ZN9farmeosrb12cleanhistoryEm (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$11 = (*([0] + [4]) - [160])
	*([0] + [4]) = $11
	CALL require_auth(*($0))
	CALL prints([2720])
	$2 = ($0 + [8])
	CALL eosio_assert(((uint_32)(*(CALL $6($2, CALL $fimport$8(*($0 + [8]), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)) + [28]) + [-51]) > (uint_32)$1), [2736])
	*(($11 + [136])) = [0]
	*($11 + [112]) = (CASTING uint_64)(uint_32 $1)
	*($11 + [120]) = (int_64)-1
	*($11 + [128]) = (int_64)0
	*($11 + [104]) = *($0)
	$6 = (int_64)0
	
.LOOP $label$2:
	CALL printi($6)
	$5 = (($11 + [104]) + [8])
	$7 = CALL db_lowerbound_i64(*($11 + [104]), *($5), (int_64)4229679821141028864, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	CALL $54(($11 + [104]), $7)
	$7 = [0]
	$5 = CALL db_lowerbound_i64(*($11 + [104]), *($5), (int_64)4229679821141028864, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$3 }
	$7 = CALL $54(($11 + [104]), $5)
	
.LABEL $label$3
	$5 = ((int_32)$7 != (int_32)[0])
	CALL eosio_assert($5, [1872])
	CALL eosio_assert($5, [1920])
	$5 = CALL db_next_i64(*($7 + [104]), ($11 + [40]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	CALL $54(($11 + [104]), $5)
	
.LABEL $label$4
	CALL $80(($11 + [104]), $7)
	$6 = ((int_64)$6 + (int_64)1)
	if ( ((int_64)$6 < (int_64)10) ){ goto $label$2 }
	$6 = (int_64)0
	$7 = CALL db_lowerbound_i64(*($11 + [104]), *(($11 + [112])), (int_64)4229679821141028864, (int_64)0)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	CALL $54(($11 + [104]), $7)
	$10 = CALL current_time()
	*(($11 + [68])) = [0]
	*(($11 + [72])) = [0]
	*($11 + [52]) = [0]
	*($11 + [56]) = [0]
	*($11 + [60]) = [0]
	*($11 + [64]) = [0]
	*($11 + [40]) = ((CASTING uint_32)(uint_64 ((uint_64)$10 / (uint_64)(int_64)1000000)) + [60])
	*($11 + [76]) = [0]
	*(($11 + [80])) = [0]
	*(($11 + [84])) = [0]
	*($11 + [88]) = [0]
	*(($11 + [92])) = [0]
	*(($11 + [96])) = [0]
	$4 = ($11 + [76])
	$3 = *($0)
	$8 = (int_64)59
	$7 = [1008]
	$9 = (int_64)0
	
.LOOP $label$5:
	if ( ((uint_64)$6 > (uint_64)(int_64)5) ){ goto $label$10 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$9 }
	$5 = ($5 + [165])
	goto $label$8 
	
.LABEL $label$10
	$10 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$9
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$8
	$10 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$7
	$10 = ((int_64)((int_64)$10 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$6
	$7 = ($7 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$5 }
	*($11 + [24]) = $9
	*($11 + [16]) = $3
	$6 = (int_64)0
	$10 = (int_64)59
	$7 = [2720]
	$9 = (int_64)0
	
.LOOP $label$11:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$12 }
	$5 = *($7)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$5 = ($5 + [165])
	goto $label$13 
	
.LABEL $label$14
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($5 & [31])) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$12
	$7 = ($7 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$11 }
	*($11 + [144]) = $9
	*($11 + [8]) = $1
	CALL $81($4, ($11 + [16]), $0, ($11 + [144]), ($11 + [8]))
	$6 = *($0)
	*(($11 + [60])) = [1]
	CALL require_auth($6)
	$7 = [0]
	$5 = CALL db_lowerbound_i64(*(($0 + [8])), *(($0 + [16])), (int_64)7235159550150574080, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$15 }
	$7 = CALL $6($2, $5)
	
.LABEL $label$15
	*($11 + [16]) = *($7 + [64])
	$6 = *($0)
	*($11 + [144]) = ($11 + [16])
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [1312])
	CALL $45($2, $7, $6, ($11 + [144]))
	$6 = *($11 + [16])
	*($11 + [24]) = (int_64)0
	*($11 + [16]) = $6
	$6 = *($0)
	CALL $46(($11 + [144]), ($11 + [40]))
	$7 = *($11 + [144])
	CALL send_deferred(($11 + [16]), $6, $7, (*($11 + [148]) - $7), [0])
	$7 = *($11 + [144])
	if ( ($7 == 0) ){ goto $label$16 }
	*($11 + [148]) = $7
	CALL $99($7)
	
.LABEL $label$16
	CALL $47(($11 + [40]))
	
.LABEL $label$1
	$0 = *($11 + [128])
	if ( ($0 == 0) ){ goto $label$17 }
	$1 = ($11 + [132])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$19 }
	
.LOOP $label$20:
	$7 = ($7 + [-24])
	$5 = *($7)
	*($7) = [0]
	if ( ($5 == 0) ){ goto $label$21 }
	if ( ((*($5 + [52]) & [1]) == 0) ){ goto $label$22 }
	CALL $99(*(($5 + [60])))
	
.LABEL $label$22
	CALL $99($5)
	
.LABEL $label$21
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$20 }
	$7 = *(($11 + [128]))
	goto $label$18 
	
.LABEL $label$19
	$7 = $0
	
.LABEL $label$18
	*($1) = $0
	CALL $99($7)
	
.LABEL $label$17
	*([0] + [4]) = ($11 + [160])
}

void .FUNC $32 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_32 $21
	int_32 $22
	$22 = (*([0] + [4]) - [96])
	$21 = $22
	*([0] + [4]) = $22
	CALL eosio_assert(((int_32)*($1 + [212]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	$4 = *($1)
	$19 = *($3)
	CALL eosio_assert(((int_64)*($19 + [8]) == (int_64)*(($1 + [16]))), [1472])
	$20 = ((int_64)*($1 + [8]) + (int_64)*($19))
	*($1 + [8]) = $20
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [8]) < (int_64)4611686018427387904), [1552])
	$19 = *(*($3 + [4]))
	if ( ((int_32)$19 == (int_32)[3]) ){ goto $label$3 }
	if ( ((int_32)$19 == (int_32)[2]) ){ goto $label$2 }
	if ( ((int_32)$19 != (int_32)[1]) ){ goto $label$1 }
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [48]))), [1472])
	$20 = ((int_64)*($1 + [40]) + (int_64)*($3))
	*($1 + [40]) = $20
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [40]) < (int_64)4611686018427387904), [1552])
	goto $label$1 
	
.LABEL $label$3
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [80]))), [1472])
	$20 = ((int_64)*($1 + [72]) + (int_64)*($3))
	*($1 + [72]) = $20
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [72]) < (int_64)4611686018427387904), [1552])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($3)
	CALL eosio_assert(((int_64)*($3 + [8]) == (int_64)*(($1 + [64]))), [1472])
	$20 = ((int_64)*($1 + [56]) + (int_64)*($3))
	*($1 + [56]) = $20
	CALL eosio_assert(((int_64)$20 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [56]) < (int_64)4611686018427387904), [1552])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1584])
	*($21 + [24]) = [0]
	*($21 + [8]) = ($21 + [24])
	$5 = ($1 + [8])
	*($21 + [36]) = $5
	*($21 + [32]) = $1
	$6 = ($1 + [24])
	*($21 + [40]) = $6
	$7 = ($1 + [40])
	*($21 + [44]) = $7
	$8 = ($1 + [56])
	*($21 + [48]) = $8
	$9 = ($1 + [72])
	*($21 + [52]) = $9
	$10 = ($1 + [88])
	*($21 + [56]) = $10
	$11 = ($1 + [104])
	*($21 + [60]) = $11
	$12 = ($1 + [120])
	*($21 + [64]) = $12
	$13 = ($1 + [136])
	*($21 + [68]) = $13
	$14 = ($1 + [144])
	*($21 + [72]) = $14
	$15 = ($1 + [160])
	*($21 + [76]) = $15
	$16 = ($1 + [176])
	*($21 + [80]) = $16
	$17 = ($1 + [192])
	*($21 + [84]) = $17
	$18 = ($1 + [208])
	*($21 + [88]) = $18
	CALL $26(($21 + [32]), ($21 + [8]))
	$19 = *($21 + [24])
	if ( ($19 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($19)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($22 - (($19 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($21 + [12]) = $3
	*($21 + [8]) = $3
	*($21 + [16]) = ($3 + $19)
	*($21 + [24]) = ($21 + [8])
	*($21 + [36]) = $5
	*($21 + [40]) = $6
	*($21 + [44]) = $7
	*($21 + [48]) = $8
	*($21 + [52]) = $9
	*($21 + [56]) = $10
	*($21 + [32]) = $1
	*($21 + [60]) = $11
	*($21 + [64]) = $12
	*($21 + [68]) = $13
	*($21 + [72]) = $14
	*($21 + [76]) = $15
	*($21 + [80]) = $16
	*($21 + [84]) = $17
	*($21 + [88]) = $18
	CALL $27(($21 + [32]), ($21 + [24]))
	CALL db_update_i64(*($1 + [216]), $2, $3, $19)
	if ( ($19 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($21 + [96])
}

void .FUNC $33 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_64 $29
	int_32 $30
	int_32 $31
	$31 = (*([0] + [4]) - [128])
	$30 = $31
	*([0] + [4]) = $31
	CALL eosio_assert(((int_32)*($1 + [240]) == (int_32)$0), [1360])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$3()), [1408])
	$4 = *($1)
	$28 = *(*($3))
	if ( ((int_32)$28 == (int_32)[1]) ){ goto $label$3 }
	if ( ((int_32)$28 == (int_32)[2]) ){ goto $label$2 }
	if ( ((int_32)$28 != (int_32)[3]) ){ goto $label$1 }
	$28 = *($3 + [4])
	if ( ((int_64)*($28 + [8]) != (int_64)1397703940) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($1 + [144])) == (int_64)1397703940), [1472])
	$29 = ((int_64)*($1 + [136]) + (int_64)*($28))
	*($1 + [136]) = $29
	CALL eosio_assert(((int_64)$29 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [136]) < (int_64)4611686018427387904), [1552])
	*(($28 = *($1 + [192]))) = (*($28) + *(*(*($3 + [8]))))
	*($28 + [4]) = (*($28 + [4]) + *(*(*($3 + [8])) + [4]))
	*($28 + [8]) = (*($28 + [8]) + *(*(*($3 + [8])) + [8]))
	*($28 + [12]) = (*($28 + [12]) + *(*(*($3 + [8])) + [12]))
	*($28 + [16]) = (*($28 + [16]) + *(*(*($3 + [8])) + [16]))
	goto $label$1 
	
.LABEL $label$3
	$28 = *($3 + [4])
	if ( ((int_64)*($28 + [8]) != (int_64)1397703940) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($1 + [80])) == (int_64)1397703940), [1472])
	$29 = ((int_64)*($1 + [72]) + (int_64)*($28))
	*($1 + [72]) = $29
	CALL eosio_assert(((int_64)$29 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [72]) < (int_64)4611686018427387904), [1552])
	*(($28 = *($1 + [168]))) = (*($28) + *(*(*($3 + [8]))))
	*($28 + [4]) = (*($28 + [4]) + *(*(*($3 + [8])) + [4]))
	*($28 + [8]) = (*($28 + [8]) + *(*(*($3 + [8])) + [8]))
	*($28 + [12]) = (*($28 + [12]) + *(*(*($3 + [8])) + [12]))
	*($28 + [16]) = (*($28 + [16]) + *(*(*($3 + [8])) + [16]))
	goto $label$1 
	
.LABEL $label$2
	$28 = *($3 + [4])
	if ( ((int_64)*($28 + [8]) != (int_64)1397703940) ){ goto $label$1 }
	CALL eosio_assert(((int_64)*(($1 + [112])) == (int_64)1397703940), [1472])
	$29 = ((int_64)*($1 + [104]) + (int_64)*($28))
	*($1 + [104]) = $29
	CALL eosio_assert(((int_64)$29 > (int_64)-4611686018427387904), [1520])
	CALL eosio_assert(((int_64)*($1 + [104]) < (int_64)4611686018427387904), [1552])
	*(($28 = *($1 + [180]))) = (*($28) + *(*(*($3 + [8]))))
	*($28 + [4]) = (*($28 + [4]) + *(*(*($3 + [8])) + [4]))
	*($28 + [8]) = (*($28 + [8]) + *(*(*($3 + [8])) + [8]))
	*($28 + [12]) = (*($28 + [12]) + *(*(*($3 + [8])) + [12]))
	*($28 + [16]) = (*($28 + [16]) + *(*(*($3 + [8])) + [16]))
	
.LABEL $label$1
	CALL eosio_assert(((int_64)$4 == (int_64)*($1)), [1584])
	*($30 + [24]) = [0]
	*($30 + [8]) = ($30 + [24])
	$5 = ($1 + [8])
	*($30 + [36]) = $5
	*($30 + [32]) = $1
	$6 = ($1 + [12])
	*($30 + [40]) = $6
	$7 = ($1 + [16])
	*($30 + [44]) = $7
	$8 = ($1 + [20])
	*($30 + [48]) = $8
	$9 = ($1 + [24])
	*($30 + [52]) = $9
	$10 = ($1 + [28])
	*($30 + [56]) = $10
	$11 = ($1 + [32])
	*($30 + [60]) = $11
	$12 = ($1 + [40])
	*($30 + [64]) = $12
	$13 = ($1 + [48])
	*($30 + [68]) = $13
	$14 = ($1 + [56])
	*($30 + [72]) = $14
	$15 = ($1 + [64])
	*($30 + [76]) = $15
	$16 = ($1 + [72])
	*($30 + [80]) = $16
	$17 = ($1 + [88])
	*($30 + [84]) = $17
	$18 = ($1 + [104])
	*($30 + [88]) = $18
	$19 = ($1 + [120])
	*($30 + [92]) = $19
	$20 = ($1 + [136])
	*($30 + [96]) = $20
	$21 = ($1 + [152])
	*($30 + [100]) = $21
	$22 = ($1 + [168])
	*($30 + [104]) = $22
	$23 = ($1 + [180])
	*($30 + [108]) = $23
	$24 = ($1 + [192])
	*($30 + [112]) = $24
	$25 = ($1 + [204])
	*($30 + [116]) = $25
	$26 = ($1 + [216])
	*($30 + [120]) = $26
	$27 = ($1 + [228])
	*($30 + [124]) = $27
	CALL $23(($30 + [32]), ($30 + [8]))
	$28 = *($30 + [24])
	if ( ($28 <= [513]) ){ goto $label$5 }
	$3 = CALL malloc($28)
	goto $label$4 
	
.LABEL $label$5
	$3 = ($31 - (($28 + [15]) & [-16]))
	*([0] + [4]) = $3
	
.LABEL $label$4
	*($30 + [12]) = $3
	*($30 + [8]) = $3
	*($30 + [16]) = ($3 + $28)
	*($30 + [24]) = ($30 + [8])
	*($30 + [36]) = $5
	*($30 + [40]) = $6
	*($30 + [44]) = $7
	*($30 + [48]) = $8
	*($30 + [52]) = $9
	*($30 + [56]) = $10
	*($30 + [32]) = $1
	*($30 + [60]) = $11
	*($30 + [64]) = $12
	*($30 + [68]) = $13
	*($30 + [72]) = $14
	*($30 + [76]) = $15
	*($30 + [80]) = $16
	*($30 + [84]) = $17
	*($30 + [88]) = $18
	*($30 + [92]) = $19
	*($30 + [96]) = $20
	*($30 + [100]) = $21
	*($30 + [104]) = $22
	*($30 + [108]) = $23
	*($30 + [112]) = $24
	*($30 + [116]) = $25
	*($30 + [120]) = $26
	*($30 + [124]) = $27
	CALL $24(($30 + [32]), ($30 + [24]))
	CALL db_update_i64(*($1 + [244]), $2, $3, $28)
	if ( ($28 <= [513]) ){ goto $label$6 }
	CALL free($3)
	
.LABEL $label$6
	if ( (uint_64)($4 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$4 + (int_64)1) : ((uint_64)$4 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*([0] + [4]) = ($30 + [128])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [1696])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $10($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1680])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

void .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	$21 = (*([0] + [4]) - [96])
	$20 = $21
	*([0] + [4]) = $21
	*($1) = *(*(*($0 + [4])))
	$2 = *($0)
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$19 = [0]
	
.LABEL $label$1
	CALL eosio_assert($19, [160])
	*(($1 + [16])) = (int_64)1397703940
	*($1 + [8]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$9 }
	
.LOOP $label$10:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$7 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$10 }
	
.LABEL $label$9
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	$19 = [0]
	
.LABEL $label$6
	CALL eosio_assert($19, [160])
	*(($1 + [48])) = (int_64)1397703940
	*($1 + [40]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$19 = [0]
	
.LABEL $label$11
	CALL eosio_assert($19, [160])
	*(($1 + [64])) = (int_64)1397703940
	*($1 + [56]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$18:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$17 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$19 }
	
.LOOP $label$20:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$17 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$20 }
	
.LABEL $label$19
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	$19 = [0]
	
.LABEL $label$16
	CALL eosio_assert($19, [160])
	*(($1 + [80])) = (int_64)1397703940
	*($1 + [72]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$23:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$22 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$24 }
	
.LOOP $label$25:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$22 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$25 }
	
.LABEL $label$24
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$23 }
	goto $label$21 
	
.LABEL $label$22
	$19 = [0]
	
.LABEL $label$21
	CALL eosio_assert($19, [160])
	*(($1 + [32])) = (int_64)1397704196
	*($1 + [24]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$28:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$27 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$29 }
	
.LOOP $label$30:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$27 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$30 }
	
.LABEL $label$29
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$28 }
	goto $label$26 
	
.LABEL $label$27
	$19 = [0]
	
.LABEL $label$26
	CALL eosio_assert($19, [160])
	*(($1 + [96])) = (int_64)1397704196
	*($1 + [88]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$34 }
	
.LOOP $label$35:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$32 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$35 }
	
.LABEL $label$34
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	$19 = [0]
	
.LABEL $label$31
	CALL eosio_assert($19, [160])
	*(($1 + [112])) = (int_64)1397704196
	*($1 + [104]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$38:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$37 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$39 }
	
.LOOP $label$40:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$37 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$40 }
	
.LABEL $label$39
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$38 }
	goto $label$36 
	
.LABEL $label$37
	$19 = [0]
	
.LABEL $label$36
	CALL eosio_assert($19, [160])
	*(($1 + [128])) = (int_64)1397704196
	*($1 + [120]) = (int_64)0
	*($1 + [136]) = ((int_64)((uint_64)CALL current_time() / (uint_64)(int_64)1000000) & (int_64)4294967295)
	CALL eosio_assert([1], [1104])
	$16 = ($1 + [136])
	$17 = (int_64)5459781
	$18 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$44 }
	
.LOOP $label$45:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$42 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$45 }
	
.LABEL $label$44
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	$19 = [0]
	
.LABEL $label$41
	CALL eosio_assert($19, [160])
	*(($1 + [168])) = (int_64)1397703940
	*($1 + [160]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)5459782
	$18 = [0]
	
.LOOP $label$48:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$47 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$49 }
	
.LOOP $label$50:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$50 }
	
.LABEL $label$49
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$48 }
	goto $label$46 
	
.LABEL $label$47
	$19 = [0]
	
.LABEL $label$46
	CALL eosio_assert($19, [160])
	*(($1 + [184])) = (int_64)1397704196
	*($1 + [176]) = (int_64)0
	CALL eosio_assert([1], [1104])
	$17 = (int_64)1297236294
	$18 = [0]
	
.LOOP $label$53:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $17) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$52 }
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$54 }
	
.LOOP $label$55:
	$17 = (uint_64)$17 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$17) & (int_64)255) != (int_64)0) ){ goto $label$52 }
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$55 }
	
.LABEL $label$54
	$19 = [1]
	$18 = ($18 + [1])
	if ( ((int_32)$18 < (int_32)[7]) ){ goto $label$53 }
	goto $label$51 
	
.LABEL $label$52
	$19 = [0]
	
.LABEL $label$51
	CALL eosio_assert($19, [160])
	*(($1 + [200])) = (int_64)332092491268
	*($1 + [192]) = (int_64)0
	*($20 + [24]) = [0]
	*($20 + [8]) = ($20 + [24])
	$3 = ($1 + [8])
	*($20 + [36]) = $3
	*($20 + [32]) = $1
	$4 = ($1 + [24])
	*($20 + [40]) = $4
	$5 = ($1 + [40])
	*($20 + [44]) = $5
	$6 = ($1 + [56])
	*($20 + [48]) = $6
	$7 = ($1 + [72])
	*($20 + [52]) = $7
	$8 = ($1 + [88])
	*($20 + [56]) = $8
	$9 = ($1 + [104])
	*($20 + [60]) = $9
	$10 = ($1 + [120])
	*($20 + [64]) = $10
	*($20 + [68]) = $16
	$11 = ($1 + [144])
	*($20 + [72]) = $11
	$12 = ($1 + [160])
	*($20 + [76]) = $12
	$13 = ($1 + [176])
	*($20 + [80]) = $13
	$14 = ($1 + [192])
	*($20 + [84]) = $14
	$15 = ($1 + [208])
	*($20 + [88]) = $15
	CALL $26(($20 + [32]), ($20 + [8]))
	$19 = *($20 + [24])
	if ( ($19 <= [513]) ){ goto $label$57 }
	$18 = CALL malloc($19)
	goto $label$56 
	
.LABEL $label$57
	$18 = ($21 - (($19 + [15]) & [-16]))
	*([0] + [4]) = $18
	
.LABEL $label$56
	*($20 + [12]) = $18
	*($20 + [8]) = $18
	*($20 + [16]) = ($18 + $19)
	*($20 + [24]) = ($20 + [8])
	*($20 + [36]) = $3
	*($20 + [32]) = $1
	*($20 + [40]) = $4
	*($20 + [44]) = $5
	*($20 + [48]) = $6
	*($20 + [52]) = $7
	*($20 + [56]) = $8
	*($20 + [60]) = $9
	*($20 + [64]) = $10
	*($20 + [68]) = $16
	*($20 + [72]) = $11
	*($20 + [76]) = $12
	*($20 + [80]) = $13
	*($20 + [84]) = $14
	*($20 + [88]) = $15
	CALL $27(($20 + [32]), ($20 + [24]))
	$17 = *($1)
	*($1 + [216]) = CALL db_store_i64(*($2 + [8]), (int_64)4229865212519383040, *(*($0 + [8])), $17, $18, $19)
	if ( ($19 <= [513]) ){ goto $label$58 }
	CALL free($18)
	
.LABEL $label$58
	if ( (uint_64)($17 <= *($2 + [16])) ){ goto $label$59 }
	*(($2 + [16])) = ( (int_64)-2 ? ((int_64)$17 + (int_64)1) : ((uint_64)$17 > (uint_64)(int_64)-3) )
	
.LABEL $label$59
	*([0] + [4]) = ($20 + [96])
}