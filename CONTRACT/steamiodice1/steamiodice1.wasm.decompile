(data (i32.const 8233) "failed to allocate pages\00\00\01\02\04\07\03\06\05\00")
(data (i32.const 8272) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 8544) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00$@\00\00\00\00\00\00Y@\00\00\00\00\00@\8f@\00\00\00\00\00\88\c3@\00\00\00\00\00j\f8@\00\00\00\00\80\84.A\00\00\00\00\d0\12cA\00\00\00\00\84\d7\97A\00\00\00\00e\cd\cdA")
(data (i32.const 8624) "stoi\00")
(data (i32.const 8629) "%llu\00")
(data (i32.const 8634) ": no conversion\00round is missing\00")
(data (i32.const 8667) ": out of range\00deposit\00")
(data (i32.const 8690) "EOS\00")
(data (i32.const 8694) "only EOS token allowed\00")
(data (i32.const 8717) "quantity invalid\00")
(data (i32.const 8734) "read_transaction failed\00")
(data (i32.const 8758) "wrong action\00")
(data (i32.const 8771) "wrong actor\00")
(data (i32.const 8783) "transfer\00")
(data (i32.const 8792) "wrong transaction\00")
(data (i32.const 8810) "game is not active!\00")
(data (i32.const 8830) "Do not support the token transfered\00")
(data (i32.const 8866) "available balance not enough\00")
(data (i32.const 8895) "available balance reached the risk line\00")
(data (i32.const 8935) "bet border must between 2 to 96\00")
(data (i32.const 8967) "inviter can\'t be _self\00")
(data (i32.const 8990) "referral does not exist\00")
(data (i32.const 9014) "Bet amount must between %f and %f\00")
(data (i32.const 9048) "dice\00")
(data (i32.const 9053) "Unable to find the bet\00")
(data (i32.const 9076) "Unable to find the token\00")
(data (i32.const 9101) "Wager, Game: dice\00")
(data (i32.const 9120) "STEAM\00")
(data (i32.const 9126) "Unable to find this bet\00")
(data (i32.const 9150) "Game: dice, bet_id: %lld. Refund! \00")
(data (i32.const 9185) "Reward for voting\00")
(data (i32.const 9203) "voted player wrong\00")
(data (i32.const 9222) "vote has not open\00")
(data (i32.const 9240) "The quantity of votes stake must bet greater than or equal 1\00")
(data (i32.const 9301) "only stake for game token\00")
(data (i32.const 9327) "Voting has ended\00")
(data (i32.const 9344) "Voted player does not exist\00")
(data (i32.const 9372) "The voted player is not betting in the current round\00")
(data (i32.const 9425) "The number of voters has reached the upper limit\00")
(data (i32.const 9474) "The last round has not ended\00")
(data (i32.const 9503) "round has ended\00")
(data (i32.const 9519) "2\1e\14")
(data (i32.const 9522) "Voting reward for captain. [https://betsteam.io]\00")
(data (i32.const 9571) "cannot find the team\00")
(data (i32.const 9592) "cannot find the voter\00")
(data (i32.const 9614) "Voting reward for voter. [https://betsteam.io]\00")
(data (i32.const 9661) "Unable to find this roundfee\00")
(data (i32.const 9690) "eosio.token\00")
(data (i32.const 9702) "votestake\00")
(data (i32.const 9712) "Incorrect action\00")
(data (i32.const 9729) "string is too long to be a valid symbol_code\00")
(data (i32.const 9774) "only uppercase letters allowed in symbol_code string\00")
(data (i32.const 9827) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 9876) "invalid symbol name\00")
(data (i32.const 9896) "string is too long to be a valid name\00")
(data (i32.const 9934) "thirteenth character in name cannot be a letter that comes after j\00")
(data (i32.const 10001) "character is not in allowed character set for names\00")
(data (i32.const 10053) "unable to find key\00")
(data (i32.const 10072) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 10123) "error reading iterator\00")
(data (i32.const 10146) "attempt to subtract asset with different symbol\00")
(data (i32.const 10194) "subtraction underflow\00")
(data (i32.const 10216) "subtraction overflow\00")
(data (i32.const 10237) "cannot pass end iterator to modify\00")
(data (i32.const 10272) "object passed to modify is not in multi_index\00")
(data (i32.const 10318) "cannot modify objects in table of another contract\00")
(data (i32.const 10369) "updater cannot change primary key when modifying an object\00")
(data (i32.const 10428) "attempt to add asset with different symbol\00")
(data (i32.const 10471) "addition underflow\00")
(data (i32.const 10490) "addition overflow\00")
(data (i32.const 10508) "write\00")
(data (i32.const 10514) "Incorrect memo for dice\00")
(data (i32.const 10538) "Incorrect result for reveal\00")
(data (i32.const 10566) "tradetoken unlock error\00")
(data (i32.const 10590) "multiplication overflow\00")
(data (i32.const 10614) "multiplication underflow\00")
(data (i32.const 10639) "comparison of assets with different symbols is not allowed\00")
(data (i32.const 10698) "signed division overflow\00")
(data (i32.const 10723) "cannot increment end iterator\00")
(data (i32.const 10753) "get\00")
(data (i32.const 10757) "read\00")
(data (i32.const 10762) "cannot create objects in table of another contract\00")
(data (i32.const 10813) "cannot pass end iterator to erase\00")
(data (i32.const 10847) "object passed to erase is not in multi_index\00")
(data (i32.const 10892) "cannot erase objects in table of another contract\00")
(data (i32.const 10942) "attempt to remove object that was not in multi_index\00")
(data (i32.const 0) "\f8*\00\00")
(import "env" "abort" (func $fimport$0))
(import "env" "eosio_assert" (func $fimport$1 (param i32 i32)))
(import "env" "memset" (func $fimport$2 (param i32 i32 i32) (result i32)))
(import "env" "memcpy" (func $fimport$3 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$4 (param i32 i32 i32) (result i32)))
(import "env" "__extendsftf2" (func $fimport$5 (param i32 f32)))
(import "env" "__floatsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__floatunsitf" (func $fimport$8 (param i32 i32)))
(import "env" "__divtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__addtf3" (func $fimport$10 (param i32 i64 i64 i64 i64)))
(import "env" "__extenddftf2" (func $fimport$11 (param i32 f64)))
(import "env" "__eqtf2" (func $fimport$12 (param i64 i64 i64 i64) (result i32)))
(import "env" "__letf2" (func $fimport$13 (param i64 i64 i64 i64) (result i32)))
(import "env" "__netf2" (func $fimport$14 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$15 (param i32 i64 i64 i64 i64)))
(import "env" "__trunctfdf2" (func $fimport$16 (param i64 i64) (result f64)))
(import "env" "__getf2" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "__trunctfsf2" (func $fimport$18 (param i64 i64) (result f32)))
(import "env" "prints_l" (func $fimport$19 (param i32 i32)))
(import "env" "__unordtf2" (func $fimport$20 (param i64 i64 i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$21 (param i64 i64) (result i32)))
(import "env" "__fixtfsi" (func $fimport$22 (param i64 i64) (result i32)))
(import "env" "ripemd160" (func $fimport$23 (param i32 i32 i32)))
(import "env" "current_time" (func $fimport$24 (result i64)))
(import "env" "require_auth" (func $fimport$25 (param i64)))
(import "env" "db_find_i64" (func $fimport$26 (param i64 i64 i64 i64) (result i32)))
(import "env" "current_receiver" (func $fimport$27 (result i64)))
(import "env" "db_store_i64" (func $fimport$28 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_next_i64" (func $fimport$29 (param i32 i32) (result i32)))
(import "env" "transaction_size" (func $fimport$30 (result i32)))
(import "env" "read_transaction" (func $fimport$31 (param i32 i32) (result i32)))
(import "env" "is_account" (func $fimport$32 (param i64) (result i32)))
(import "env" "require_auth2" (func $fimport$33 (param i64 i64)))
(import "env" "send_inline" (func $fimport$34 (param i32 i32)))
(import "env" "__multi3" (func $fimport$35 (param i32 i64 i64 i64 i64)))
(import "env" "send_deferred" (func $fimport$36 (param i32 i64 i32 i32 i32)))
(import "env" "require_recipient" (func $fimport$37 (param i64)))
(import "env" "db_lowerbound_i64" (func $fimport$38 (param i64 i64 i64 i64) (result i32)))
(import "env" "eosio_exit" (func $fimport$39 (param i32)))
(import "env" "action_data_size" (func $fimport$40 (result i32)))
(import "env" "read_action_data" (func $fimport$41 (param i32 i32) (result i32)))
(import "env" "eosio_assert_code" (func $fimport$42 (param i32 i64)))
(import "env" "db_get_i64" (func $fimport$43 (param i32 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$44 (param i32 i64 i32 i32)))
(import "env" "db_idx64_find_primary" (func $fimport$45 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx64_next" (func $fimport$46 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$47 (param i32)))
(import "env" "__floatditf" (func $fimport$48 (param i32 i64)))
(import "env" "db_idx_long_double_store" (func $fimport$49 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx_long_double_find_primary" (func $fimport$50 (param i64 i64 i64 i32 i64) (result i32)))
(import "env" "db_idx_long_double_update" (func $fimport$51 (param i32 i64 i32)))
(import "env" "db_idx64_store" (func $fimport$52 (param i64 i64 i64 i64 i32) (result i32)))
(import "env" "db_idx64_update" (func $fimport$53 (param i32 i64 i32)))
(import "env" "db_idx64_lowerbound" (func $fimport$54 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx64_remove" (func $fimport$55 (param i32)))
(import "env" "db_idx_long_double_lowerbound" (func $fimport$56 (param i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_idx_long_double_next" (func $fimport$57 (param i32 i32) (result i32)))
(export "apply" (func $145))
(table $0 18 18 anyfunc)
(elem (i32.const 1) $24 $27 $68 $109 $139 $107 $66 $85 $50 $52 $118 $141 $51 $61 $108 $134 $122)
(global $global$0 (mut i32) (i32.const 8192))
(global $global$1 i32 (i32.const 10995))
(global $global$2 i32 (i32.const 10995))


void .FUNC $174 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [328])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [328])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10757])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$6
	CALL memcpy(($3 + [320]), $5, [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [264])) = [0]
	*(($3 + [256])) = (int_64)0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*($3 + [272]) = $0
	*($3 + [312]) = $1
	CALL $139($3, *($3 + [328]), *($3 + [320]))
	CALL $48($3)
	$global$0 = ($3 + [336])
}

int_32 .FUNC $6 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	*(CALL $4())
	$3 = [22]
	if ( ($1 <= [4]) ){ goto $label$2 }
	$1 = CALL $5($1, $2)
	if ( ($1 == 0) ){ goto $label$1 }
	*($0) = $1
	$3 = [0]
	
.LABEL $label$2
	return $3
	return .LABEL $label$1
}

void .FUNC $176 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [328])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [328])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10757])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [272])) = [0]
	*(($3 + [264])) = (int_64)0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*($3 + [280]) = $0
	*($3 + [320]) = $1
	CALL $134(($3 + [8]), *($3 + [328]))
	CALL $48(($3 + [8]))
	$global$0 = ($3 + [336])
}

void .FUNC $177 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [328])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [328])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10757])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [272])) = [0]
	*(($3 + [264])) = (int_64)0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*($3 + [280]) = $0
	*($3 + [320]) = $1
	CALL $66(($3 + [8]), *($3 + [328]))
	CALL $48(($3 + [8]))
	$global$0 = ($3 + [336])
}

void .FUNC $170 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [528])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [468]) = $2
	*($3 + [464]) = $2
	*($3 + [472]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [468])
	
.LABEL $label$5
	CALL memcpy(($3 + [456]), $2, [8])
	$2 = (*($3 + [468]) + [8])
	*($3 + [468]) = $2
	*($3 + [448]) = (int_64)0
	$4 = (($3 + [464]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [468])
	
.LABEL $label$6
	CALL memcpy(($3 + [448]), $2, [8])
	$2 = (*($3 + [468]) + [8])
	*($3 + [468]) = $2
	*($3 + [440]) = (int_64)0
	*($3 + [432]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [468])
	
.LABEL $label$7
	CALL memcpy(($3 + [432]), $2, [8])
	$2 = (*($3 + [468]) + [8])
	*($3 + [468]) = $2
	*($3 + [48]) = (int_64)0
	$4 = (($3 + [464]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [468])
	
.LABEL $label$8
	CALL memcpy(($3 + [48]), $2, [8])
	*((($3 + [432]) + [8])) = *($3 + [48])
	$2 = (*($3 + [468]) + [8])
	*($3 + [468]) = $2
	*($3 + [424]) = (int_64)0
	*($3 + [416]) = (int_64)0
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [468])
	
.LABEL $label$9
	CALL memcpy(($3 + [416]), $2, [8])
	$2 = (*($3 + [468]) + [8])
	*($3 + [468]) = $2
	*($3 + [48]) = (int_64)0
	$4 = (($3 + [464]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [468])
	
.LABEL $label$10
	CALL memcpy(($3 + [48]), $2, [8])
	*((($3 + [416]) + [8])) = *($3 + [48])
	*($3 + [468]) = (*($3 + [468]) + [8])
	*($3 + [408]) = [0]
	*($3 + [400]) = (int_64)0
	CALL $160(($3 + [464]), ($3 + [400]))
	*($3 + [392]) = [0]
	*($3 + [384]) = (int_64)0
	CALL $160(($3 + [464]), ($3 + [384]))
	$2 = *($3 + [468])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [468])
	
.LABEL $label$11
	CALL memcpy(($3 + [376]), $2, [8])
	$2 = (*($3 + [468]) + [8])
	*($3 + [468]) = $2
	$4 = (($3 + [464]) + [8])
	if ( ((uint_32)(*($4) - $2) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [468])
	
.LABEL $label$12
	CALL memcpy(($3 + [368]), $2, [8])
	*($3 + [468]) = (*($3 + [468]) + [8])
	*(($2 = (($3 + [32]) + [8]))) = *($4)
	*($3 + [32]) = *($3 + [464])
	$2 = *($2)
	*((($3 + [480]) + [8])) = $2
	*(($4 = (($3 + [496]) + [8]))) = $2
	$5 = *($3 + [32])
	*($3 + [496]) = $5
	*($3 + [480]) = $5
	$2 = *($4)
	*((($3 + [512]) + [8])) = $2
	*(($3 + [72])) = $2
	*($3 + [48]) = $0
	*($3 + [56]) = $1
	$5 = *($3 + [496])
	*($3 + [64]) = $5
	*($3 + [512]) = $5
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [196])) = [0]
	*(($3 + [208])) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*(($3 + [264])) = (int_64)0
	*(($3 + [272])) = [0]
	*(($3 + [276])) = [0]
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*(($3 + [328])) = $0
	*(($3 + [336])) = (int_64)-1
	*(($3 + [344])) = [0]
	*($3 + [240]) = $0
	*($3 + [280]) = $0
	*($3 + [320]) = $0
	*(($3 + [348])) = (int_64)0
	*($3 + [360]) = $1
	$0 = *($3 + [448])
	$2 = CALL $30(($3 + [16]), ($3 + [400]))
	$4 = CALL $30($3, ($3 + [384]))
	CALL require_auth(*($3 + [48]))
	CALL require_recipient($0)
	if ( ((*($4) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*($4 + [8]))
	
.LABEL $label$13
	if ( ((*($2) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$14
	CALL $48(($3 + [48]))
	if ( (*($3 + [384]) & [1]) ){ goto $label$17 }
	if ( (*($3 + [400]) & [1]) ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	CALL $9(*(($3 + [392])))
	if ( ((*($3 + [400]) & [1]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	CALL $9(*(($3 + [408])))
	$global$0 = ($3 + [528])
	return 
	
.LABEL $label$15
	$global$0 = ($3 + [528])
}

void .FUNC $171 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [328])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [328])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10757])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*(($3 + [28])) = ($2 + [8])
	*(($3 + [32])) = $6
	*(($3 + [48])) = $0
	*(($3 + [56])) = (int_64)-1
	*(($3 + [64])) = (int_64)0
	*(($3 + [72])) = [0]
	*(($3 + [88])) = $0
	*(($3 + [96])) = (int_64)-1
	*(($3 + [104])) = (int_64)0
	*(($3 + [112])) = [0]
	*(($3 + [128])) = $0
	*($3 + [16]) = $1
	*($3 + [8]) = $0
	*($3 + [24]) = $2
	*($3 + [40]) = $0
	*($3 + [80]) = $0
	*($3 + [120]) = $0
	*(($3 + [136])) = (int_64)-1
	*(($3 + [144])) = (int_64)0
	*(($3 + [152])) = [0]
	*(($3 + [156])) = [0]
	*(($3 + [168])) = $0
	*(($3 + [176])) = (int_64)-1
	*(($3 + [184])) = (int_64)0
	*(($3 + [192])) = [0]
	*(($3 + [208])) = $0
	*(($3 + [216])) = (int_64)-1
	*(($3 + [224])) = (int_64)0
	*(($3 + [232])) = [0]
	*(($3 + [236])) = [0]
	*(($3 + [248])) = $0
	*(($3 + [256])) = (int_64)-1
	*($3 + [160]) = $0
	*($3 + [200]) = $0
	*($3 + [240]) = $0
	*(($3 + [272])) = [0]
	*(($3 + [264])) = (int_64)0
	*(($3 + [288])) = $0
	*(($3 + [296])) = (int_64)-1
	*(($3 + [304])) = (int_64)0
	*(($3 + [312])) = [0]
	*($3 + [280]) = $0
	*($3 + [320]) = $1
	CALL $108(($3 + [8]), *($3 + [328]))
	CALL $48(($3 + [8]))
	$global$0 = ($3 + [336])
}

void .FUNC $172 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [328])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [328])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10757])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$6
	CALL memcpy(($3 + [320]), $5, [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [264])) = [0]
	*(($3 + [256])) = (int_64)0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*($3 + [272]) = $0
	*($3 + [312]) = $1
	CALL $118($3, *($3 + [328]), *($3 + [320]))
	CALL $48($3)
	$global$0 = ($3 + [336])
}

int_32 .FUNC $7 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL $1($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [8216])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL $1($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $178 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $4 ()
{
	return [8208]
}

int_32 .FUNC $5 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = [0]
	$3 = ([0] - $0)
	if ( ((int_32)($3 & $0) != (int_32)$0) ){ goto $label$2 }
	if ( ((uint_32)$0 > (uint_32)[16]) ){ goto $label$1 }
	return CALL $1($1)
	
.LABEL $label$2
	*(CALL $4()) = [22]
	return [0]
	
.LABEL $label$1
	$4 = ($0 + [-1])
	$0 = CALL $1(($4 + $1))
	if ( ($0 == 0) ){ goto $label$5 }
	$2 = (($4 + $0) & $3)
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$4 }
	$3 = ($0 + [-4])
	$4 = *($3)
	$1 = ($4 & [7])
	if ( ($1 == 0) ){ goto $label$3 }
	$4 = ($0 + ($4 & [-8]))
	$5 = ($4 + [-8])
	$6 = *($5)
	$7 = ($2 - $0)
	*($3) = ($1 | $7)
	$3 = ($4 - $2)
	*(($2 + [-4])) = ($3 | $1)
	$1 = ($6 & [7])
	*(($2 + [-8])) = ($1 | $7)
	*($5) = ($1 | $3)
	CALL $2($0)
	
.LABEL $label$5
	return $2
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$0 = ($2 - $0)
	*(($2 + [-8])) = (*(($0 + [-8])) + $0)
	*(($2 + [-4])) = (*($3) - $0)
	return $2
}

void .FUNC $127 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [5])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[134217728]) ){ goto $label$3 }
	$6 = [134217727]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [5]) > (uint_32)[67108862]) ){ goto $label$5 }
	$6 = int_32($7 >> [4])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $7(($6 << [5]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [5])))) = *($1)
	*(($4 + [24])) = *(($1 + [24]))
	*(($4 + [16])) = *(($1 + [16]))
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [5]))
	$4 = ($4 + [32])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $9($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $3 ()
{
	int_32 $0
	*(($0 = ($global$0 - [16])) + [12]) = [0]
	$0 = ((*(*($0 + [12])) + [7]) & [-8])
	*([0] + [8196]) = $0
	*([0] + [8192]) = $0
	*([0] + [8204]) = (current_memory)
}

void .FUNC $189 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $7(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [4]))
	$3 = ($2 + ($3 << [4]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [4]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $9($6)
	
.LABEL $label$10
	(unreachable)
}

int_32 .FUNC $188 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [10753])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$3 = (CASTING uint_32)(uint_64 $4)
	$8 = *($1)
	$5 = *($1 + [4])
	$7 = int_32(($5 - $8) >> [4])
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$5 }
	CALL $189($1, ($3 - $7))
	$5 = *(($1 + [4]))
	$8 = *($1)
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$3) ){ goto $label$6 }
	$5 = ($8 + ($3 << [4]))
	*(($1 + [4])) = $5
	
.LABEL $label$6
	if ( ((int_32)$8 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$3 = ($0 + [4])
	$7 = *($3)
	$6 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($6) - $7) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	$7 = *($3)
	
.LABEL $label$8
	CALL memcpy($8, $7, [8])
	$7 = (*($3) + [8])
	*($3) = $7
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $7) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10757])
	$7 = *($3)
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $7, [8])
	*(($8 + [8])) = *($2 + [8])
	$7 = (*($3) + [8])
	*($3) = $7
	$8 = ($8 + [16])
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $49 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $49($0, *($1))
	CALL $49($0, *($1 + [4]))
	CALL $9($1)
	
.LABEL $label$1
}

int_32 .FUNC $48 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *(($0 + [296]))
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [300])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = ($3 + [-24])
	$4 = *($3)
	*($3) = [0]
	if ( ($4 == 0) ){ goto $label$5 }
	$5 = *($4 + [20])
	if ( ($5 == 0) ){ goto $label$6 }
	*(($4 + [24])) = $5
	CALL $9($5)
	
.LABEL $label$6
	$5 = *($4 + [8])
	if ( ($5 == 0) ){ goto $label$7 }
	*(($4 + [12])) = $5
	CALL $9($5)
	
.LABEL $label$7
	CALL $9($4)
	
.LABEL $label$5
	if ( ((int_32)$1 != (int_32)$3) ){ goto $label$4 }
	$4 = *(($0 + [296]))
	goto $label$2 
	
.LABEL $label$3
	$4 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($4)
	
.LABEL $label$1
	$1 = *(($0 + [256]))
	if ( ($1 == 0) ){ goto $label$8 }
	$2 = ($0 + [260])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$1) ){ goto $label$10 }
	
.LOOP $label$11:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$12 }
	$5 = *($3 + [52])
	if ( ($5 == 0) ){ goto $label$13 }
	*(($3 + [56])) = $5
	CALL $9($5)
	
.LABEL $label$13
	CALL $9($3)
	
.LABEL $label$12
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$11 }
	$4 = *(($0 + [256]))
	goto $label$9 
	
.LABEL $label$10
	$4 = $1
	
.LABEL $label$9
	*($2) = $1
	CALL $9($4)
	
.LABEL $label$8
	$5 = *(($0 + [216]))
	if ( ($5 == 0) ){ goto $label$14 }
	$1 = ($0 + [220])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$18 }
	CALL $49(($3 + [16]), *(($3 + [20])))
	CALL $9($3)
	
.LABEL $label$18
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$17 }
	$4 = *(($0 + [216]))
	goto $label$15 
	
.LABEL $label$16
	$4 = $5
	
.LABEL $label$15
	*($1) = $5
	CALL $9($4)
	
.LABEL $label$14
	$5 = *(($0 + [176]))
	if ( ($5 == 0) ){ goto $label$19 }
	$1 = ($0 + [180])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$21 }
	
.LOOP $label$22:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$23 }
	if ( ((*($3 + [48]) & [1]) == 0) ){ goto $label$24 }
	CALL $9(*(($3 + [56])))
	
.LABEL $label$24
	CALL $9($3)
	
.LABEL $label$23
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$22 }
	$4 = *(($0 + [176]))
	goto $label$20 
	
.LABEL $label$21
	$4 = $5
	
.LABEL $label$20
	*($1) = $5
	CALL $9($4)
	
.LABEL $label$19
	$5 = *(($0 + [136]))
	if ( ($5 == 0) ){ goto $label$25 }
	$1 = ($0 + [140])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$27 }
	
.LOOP $label$28:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$29 }
	CALL $9($3)
	
.LABEL $label$29
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$28 }
	$4 = *(($0 + [136]))
	goto $label$26 
	
.LABEL $label$27
	$4 = $5
	
.LABEL $label$26
	*($1) = $5
	CALL $9($4)
	
.LABEL $label$25
	$5 = *(($0 + [96]))
	if ( ($5 == 0) ){ goto $label$30 }
	$1 = ($0 + [100])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$32 }
	
.LOOP $label$33:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$34 }
	CALL $9($3)
	
.LABEL $label$34
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$33 }
	$4 = *(($0 + [96]))
	goto $label$31 
	
.LABEL $label$32
	$4 = $5
	
.LABEL $label$31
	*($1) = $5
	CALL $9($4)
	
.LABEL $label$30
	$5 = *(($0 + [56]))
	if ( ($5 == 0) ){ goto $label$35 }
	$1 = ($0 + [60])
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$37 }
	
.LOOP $label$38:
	$4 = ($4 + [-24])
	$3 = *($4)
	*($4) = [0]
	if ( ($3 == 0) ){ goto $label$39 }
	CALL $9($3)
	
.LABEL $label$39
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$38 }
	$4 = *(($0 + [56]))
	goto $label$36 
	
.LABEL $label$37
	$4 = $5
	
.LABEL $label$36
	*($1) = $5
	CALL $9($4)
	
.LABEL $label$35
	return $0
}

void .FUNC $0 ()
{
	CALL $3()
}

void .FUNC $43 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $42 ()
{
	CALL abort()
	(unreachable)
}

void .FUNC $41 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL $15($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($3 + $4)
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$4 }
	$6 = *($1)
	$7 = *($1 + [8])
	if ( ((uint_32)$5 > (uint_32)[10]) ){ goto $label$7 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$8 = (($5 + [16]) & [-16])
	$5 = CALL $7($8)
	*($0) = ($8 | [1])
	*(($0 + [8])) = $5
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$5 }
	
.LABEL $label$6
	CALL memcpy($5, ( $7 ? ($1 + [1]) : ($6 & [1]) ), $3)
	
.LABEL $label$5
	*(($5 + $3)) = [0]
	$1 = *($0)
	$5 = ($1 & [1])
	if ( $5 ){ goto $label$9 }
	$3 = [10]
	$1 = uint_32($1 >> [1])
	if ( (([10] - $1) <= $4) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$9
	$1 = *(($0 + [4]))
	$3 = ((*($0) & [-2]) + [-1])
	if ( ((uint_32)($3 - $1) >= (uint_32)$4) ){ goto $label$3 }
	
.LABEL $label$8
	CALL $32($0, $3, (($1 + $4) - $3), $1, $1, [0], $4, $2)
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	if ( ($4 == 0) ){ goto $label$2 }
	$3 = ( *(($0 + [8])) ? ($0 + [1]) : $5 )
	CALL memcpy(($3 + $1), $2, $4)
	$1 = ($1 + $4)
	if ( (*($0) & [1]) ){ goto $label$1 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($0 + [4])) = $1
	*(($3 + $1)) = [0]
	(unreachable)
}

void .FUNC $40 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $34(($2 + [16]), [10], [0])
	$3 = *($2 + [16])
	$4 = ( *($2 + [20]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = (($2 + [16]) | [1])
	$6 = ($2 + [24])
	
.LOOP $label$2:
	*($2) = $1
	$3 = CALL $28(( *($6) ? $5 : ($3 & [1]) ), ($4 + [1]), [8629], $2)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$4 }
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$1 }
	$4 = $3
	goto $label$3 
	
.LABEL $label$4
	$4 = (($4 << [1]) | [1])
	
.LABEL $label$3
	CALL $34(($2 + [16]), $4, [0])
	$3 = *($2 + [16])
	goto $label$2 
	
.LABEL $label$1
	CALL $34(($2 + [16]), $3, [0])
	*(($0 + [8])) = *((($2 + [16]) + [8]))
	*($0) = *($2 + [16])
	$global$0 = ($2 + [32])
}

void .FUNC $47 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $3) / (int_32)[12])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[357913942]) ){ goto $label$2 }
	$6 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $3) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$6 = ($3 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = CALL $7(((int_32)$6 * (int_32)[12]))
	goto $label$1 
	
.LABEL $label$3
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	*(($3 = ($7 + ((int_32)$4 * (int_32)[12])))) = (int_64)0
	*(($3 + [8])) = [0]
	$1 = *($1)
	$2 = *($2)
	$8 = ($2 - $1)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$8 }
	*($3) = ($8 << [1])
	$5 = ($3 + [1])
	$4 = ((int_32)$6 * (int_32)[12])
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$9 = (($8 + [16]) & [-16])
	$5 = CALL $7($9)
	*($3) = ($9 | [1])
	*(($4 = ($7 + ((int_32)$4 * (int_32)[12]))) + [8]) = $5
	*($4 + [4]) = $8
	$4 = ((int_32)$6 * (int_32)[12])
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$6 }
	
.LABEL $label$7
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($1)
	$6 = ($6 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	$5 = ($5 + $8)
	
.LABEL $label$6
	$8 = ($7 + $4)
	*($5) = [0]
	$5 = ($3 + [12])
	$6 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$6) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = ($1 + [-4])
	*(($3 + [-4])) = *($2)
	$1 = ($1 + [-12])
	*(($3 = ($3 + [-12]))) = *($1)
	*($1) = (int_64)0
	*($2) = [0]
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$12 }
	$6 = *(($0 + [4]))
	$2 = *($0)
	goto $label$10 
	
.LABEL $label$11
	$2 = $6
	
.LABEL $label$10
	*($0) = $3
	*(($0 + [4])) = $5
	*(($0 + [8])) = $8
	if ( ((int_32)$6 == (int_32)$2) ){ goto $label$13 }
	
.LOOP $label$14:
	$1 = ($6 + [-12])
	if ( ((*($1) & [1]) == 0) ){ goto $label$15 }
	CALL $9(*(($6 + [-4])))
	
.LABEL $label$15
	$6 = $1
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$14 }
	
.LABEL $label$13
	if ( ($2 == 0) ){ goto $label$16 }
	CALL $9($2)
	
.LABEL $label$16
	return (unreachable)
	
.LABEL $label$5
	CALL $29($3)
	(unreachable)
}

void .FUNC $46 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [32])
	$global$0 = $3
	$4 = *($1)
	if ( ($4 & [1]) ){ goto $label$5 }
	$5 = ($1 + [1])
	*($3 + [24]) = $5
	$4 = uint_32($4 >> [1])
	$1 = ($5 + $4)
	*($3 + [16]) = $1
	*($3 + [8]) = $5
	if ( $4 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($1 + [8])
	*($3 + [24]) = $5
	$4 = *($1 + [4])
	$1 = ($5 + $4)
	*($3 + [16]) = $1
	*($3 + [8]) = $5
	if ( ($4 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = ($2 & [255])
	$7 = ($0 + [8])
	$8 = ($0 + [4])
	$2 = $5
	
.LOOP $label$6:
	if ( ((int_32)*($2) != (int_32)$6) ){ goto $label$12 }
	$1 = *($8)
	if ( ((uint_32)$1 >= (uint_32)*($7)) ){ goto $label$11 }
	*($1) = (int_64)0
	*(($1 + [8])) = [0]
	$9 = ($2 - $5)
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$9 > (uint_32)[10]) ){ goto $label$10 }
	*($1) = ($9 << [1])
	$4 = ($1 + [1])
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$12
	$2 = ($2 + [1])
	*($3 + [8]) = $2
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$6 }
	goto $label$3 
	
.LABEL $label$11
	CALL $47($0, ($3 + [24]), ($3 + [8]))
	goto $label$7 
	
.LABEL $label$10
	$10 = (($9 + [16]) & [-16])
	$4 = CALL $7($10)
	*($1) = ($10 | [1])
	*($1 + [8]) = $4
	*($1 + [4]) = $9
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$9
	$1 = $4
	
.LOOP $label$13:
	*($1) = *($5)
	$1 = ($1 + [1])
	$5 = ($5 + [1])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$13 }
	$4 = ($4 + $9)
	
.LABEL $label$8
	*($4) = [0]
	*($8) = (*($8) + [12])
	
.LABEL $label$7
	$2 = (*($3 + [8]) + [1])
	*($3 + [24]) = $2
	$1 = *($3 + [16])
	$5 = $2
	*($3 + [8]) = $2
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$6 }
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$16 }
	$2 = *($0 + [4])
	if ( ((uint_32)$2 >= (uint_32)*($0 + [8])) ){ goto $label$17 }
	*($2) = (int_64)0
	*(($2 + [8])) = [0]
	$4 = ($1 - $5)
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$15 }
	*($2) = ($4 << [1])
	$6 = ($2 + [1])
	goto $label$14 
	
.LABEL $label$17
	CALL $47($0, ($3 + [24]), ($3 + [16]))
	
.LABEL $label$16
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$15
	$8 = (($4 + [16]) & [-16])
	$6 = CALL $7($8)
	*($2) = ($8 | [1])
	*($2 + [8]) = $6
	*($2 + [4]) = $4
	
.LABEL $label$14
	$2 = $6
	
.LOOP $label$18:
	*($2) = *($5)
	$2 = ($2 + [1])
	$5 = ($5 + [1])
	if ( ((int_32)$1 != (int_32)$5) ){ goto $label$18 }
	*(($6 + $4)) = [0]
	*(($5 = ($0 + [4]))) = (*($5) + [12])
	$global$0 = ($3 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $29($1)
	
.LABEL $label$1
	CALL $29($2)
}

void .FUNC $45 (int_32 $0)
{
}

void .FUNC $44 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $167 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [480])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [472]) = (int_64)0
	*($3 + [464]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$5
	CALL memcpy(($3 + [464]), $2, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [8])
	$6 = ($4 & [-8])
	if ( ((int_32)$6 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$6
	CALL memcpy(($3 + [96]), $5, [8])
	*((($3 + [464]) + [8])) = *($3 + [96])
	*($3 + [456]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$6 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$7
	CALL memcpy(($3 + [456]), $5, [8])
	*($3 + [448]) = (int_64)0
	*($3 + [440]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$6 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$8
	CALL memcpy(($3 + [440]), $5, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$6 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$9
	CALL memcpy(($3 + [96]), $5, [8])
	*((($3 + [440]) + [8])) = *($3 + [96])
	*($3 + [432]) = (int_64)0
	*($3 + [424]) = (int_64)0
	$5 = ($2 + [40])
	if ( ((int_32)$6 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$10
	CALL memcpy(($3 + [424]), $5, [8])
	*($3 + [96]) = (int_64)0
	$5 = ($2 + [48])
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$11 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$11
	$4 = ($2 + $4)
	CALL memcpy(($3 + [96]), $5, [8])
	*(($5 = (($3 + [424]) + [8]))) = *($3 + [96])
	$7 = ($2 + [56])
	if ( ((int_32)$6 != (int_32)[56]) ){ goto $label$12 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$12
	CALL memcpy(($3 + [416]), $7, [8])
	*(($3 + [120])) = $4
	*(($3 + [136])) = $0
	*(($3 + [144])) = (int_64)-1
	*((($3 + [96]) + [56])) = (int_64)0
	*((($3 + [96]) + [64])) = [0]
	*(($3 + [176])) = $0
	*(($3 + [184])) = (int_64)-1
	*(($3 + [192])) = (int_64)0
	*(($3 + [200])) = [0]
	*(($3 + [216])) = $0
	*($3 + [112]) = $2
	*(($3 + [116])) = ($2 + [64])
	*($3 + [104]) = $1
	*($3 + [96]) = $0
	*($3 + [128]) = $0
	*($3 + [168]) = $0
	*($3 + [208]) = $0
	*(($3 + [224])) = (int_64)-1
	*(($3 + [232])) = (int_64)0
	*(($3 + [240])) = [0]
	*(($3 + [244])) = [0]
	*(($3 + [256])) = $0
	*(($3 + [264])) = (int_64)-1
	*(($3 + [272])) = (int_64)0
	*(($3 + [280])) = [0]
	*(($3 + [296])) = $0
	*(($3 + [304])) = (int_64)-1
	*(($3 + [312])) = (int_64)0
	*(($3 + [320])) = [0]
	*(($3 + [324])) = [0]
	*(($3 + [336])) = $0
	*(($3 + [344])) = (int_64)-1
	*($3 + [248]) = $0
	*($3 + [288]) = $0
	*($3 + [328]) = $0
	*(($3 + [360])) = [0]
	*(($3 + [352])) = (int_64)0
	*(($3 + [376])) = $0
	*(($3 + [384])) = (int_64)-1
	*(($3 + [392])) = (int_64)0
	*(($3 + [400])) = [0]
	*(($2 = (($3 + [80]) + [8]))) = *((($3 + [464]) + [8]))
	*(($6 = (($3 + [64]) + [8]))) = *((($3 + [440]) + [8]))
	*($3 + [368]) = $0
	*($3 + [408]) = $1
	*($3 + [80]) = *($3 + [464])
	*($3 + [64]) = *($3 + [440])
	$0 = *($3 + [456])
	$1 = *($5)
	*((($3 + [48]) + [8])) = $1
	*((($3 + [32]) + [8])) = *($2)
	*((($3 + [16]) + [8])) = *($6)
	*(($3 + [8])) = $1
	$1 = *($3 + [424])
	*($3 + [48]) = $1
	*($3 + [32]) = *($3 + [80])
	*($3 + [16]) = *($3 + [64])
	*($3) = $1
	CALL $52(($3 + [96]), ($3 + [32]), $0, ($3 + [16]), $3, *($3 + [416]))
	CALL $48(($3 + [96]))
	$global$0 = ($3 + [480])
}

void .FUNC $166 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [336])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [328])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [328])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10757])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	$5 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$6
	CALL memcpy(($3 + [320]), $5, [8])
	*(($3 + [24])) = $6
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [16]) = $2
	*(($3 + [20])) = ($2 + [16])
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [264])) = [0]
	*(($3 + [256])) = (int_64)0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*($3 + [272]) = $0
	*($3 + [312]) = $1
	CALL $51($3, *($3 + [328]), *($3 + [320]))
	CALL $48($3)
	$global$0 = ($3 + [336])
}

void .FUNC $165 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$2 = ($global$0 - [368])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [360]) = (int_64)0
	*($3 + [352]) = (int_64)0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$5
	$5 = ($2 + $4)
	CALL memcpy(($3 + [352]), $2, [8])
	*($3 + [32]) = (int_64)0
	$6 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$6
	CALL memcpy(($3 + [32]), $6, [8])
	*(($4 = (($3 + [352]) + [8]))) = *($3 + [32])
	*(($3 + [56])) = $5
	*(($3 + [72])) = $0
	*(($3 + [80])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [16])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [180])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*($3 + [184]) = $0
	*($3 + [224]) = $0
	*($3 + [264]) = $0
	*(($3 + [296])) = [0]
	*(($3 + [288])) = (int_64)0
	*(($3 + [312])) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	$7 = *($4)
	*((($3 + [16]) + [8])) = $7
	*(($3 + [8])) = $7
	*($3 + [304]) = $0
	*($3 + [344]) = $1
	$0 = *($3 + [352])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $61(($3 + [32]), $3)
	CALL $48(($3 + [32]))
	$global$0 = ($3 + [368])
}

void .FUNC $164 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [20])) = $4
	*(($3 + [24])) = ($4 + $5)
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $4
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [264])) = [0]
	*(($3 + [256])) = (int_64)0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*($3 + [272]) = $0
	*($3 + [312]) = $1
	CALL $50($3)
	CALL $48($3)
	$global$0 = ($3 + [320])
}

void .FUNC $163 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $5, [8])
	*(($0 + [32])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($0 + [40])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$4 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $4, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $162 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	$2 = ($global$0 - [192])
	$global$0 = $2
	*(($3 = (($2 + [80]) + [8]))) = *(($1 + [24]))
	*(($4 = (($2 + [64]) + [8]))) = *(($1 + [40]))
	*($2 + [80]) = *($1 + [16])
	*($2 + [64]) = *($1 + [32])
	$5 = *($1 + [8])
	$6 = *($1)
	$7 = CALL $30(($2 + [48]), ($1 + [48]))
	$8 = CALL $30(($2 + [32]), ($1 + [60]))
	$9 = *($1 + [80])
	$10 = *($1 + [72])
	*((($2 + [112]) + [8])) = *($4)
	*((($2 + [96]) + [8])) = *($3)
	*($2 + [112]) = *($2 + [64])
	*($2 + [96]) = *($2 + [80])
	$1 = *($0 + [4])
	$3 = *($1 + [4])
	$0 = (*($0) + int_32($3 >> [1]))
	$1 = *($1)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$1 = *((*($0) + $1))
	
.LABEL $label$1
	*(($11 = (($2 + [176]) + [8]))) = *((($2 + [96]) + [8]))
	*(($12 = (($2 + [160]) + [8]))) = *((($2 + [112]) + [8]))
	*($2 + [176]) = *($2 + [96])
	*($2 + [160]) = *($2 + [112])
	$3 = CALL $30(($2 + [144]), $7)
	$4 = CALL $30(($2 + [128]), $8)
	*((($2 + [16]) + [8])) = *($11)
	*(($2 + [8])) = *($12)
	*($2 + [16]) = *($2 + [176])
	*($2) = *($2 + [160])
	CALL void $0((int_32 $6), (int_64 $5), (int_64 ($2 + [16])), (int_32 $2), (int_32 $3), (int_32 $4), (int_32 $10), (int_64 $9), (int_64 $1))
	if ( (*($2 + [128]) & [1]) ){ goto $label$8 }
	if ( (*($2 + [144]) & [1]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL $9(*($4 + [8]))
	if ( ((*($2 + [144]) & [1]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $9(*($3 + [8]))
	$1 = [1]
	if ( ((*($8) & [1]) == 0) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$1 = [1]
	if ( (*($8) & [1]) ){ goto $label$4 }
	
.LABEL $label$5
	if ( (*($7) & $1) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($8 + [8]))
	if ( ((*($7) & $1) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($7 + [8]))
	$global$0 = ($2 + [192])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [192])
}

void .FUNC $161 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [24])) = *($2 + [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $5) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $5, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $3, [8])
	*(($4 + [40])) = *($2 + [8])
	*($5) = (*($5) + [8])
	*($2 + [8]) = $4
	CALL $217(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

int_32 .FUNC $160 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($2 + [24]) = [0]
	*($2 + [16]) = (int_64)0
	CALL $169($0, ($2 + [16]))
	$3 = *($2 + [16])
	$4 = (*($2 + [20]) - $3)
	if ( ($4 == 0) ){ goto $label$8 }
	*(($2 + [8])) = [0]
	*($2) = (int_64)0
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 > (uint_32)[10]) ){ goto $label$7 }
	*($2) = ($4 << [1])
	$5 = ($2 | [1])
	goto $label$6 
	
.LABEL $label$8
	if ( (*($1) & [1]) ){ goto $label$5 }
	*($1) = [0]
	$3 = ($1 + [8])
	goto $label$4 
	
.LABEL $label$7
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($2) = ($6 | [1])
	*($2 + [8]) = $5
	*($2 + [4]) = $4
	
.LABEL $label$6
	$7 = $4
	$6 = $5
	
.LOOP $label$9:
	*($6) = *($3)
	$6 = ($6 + [1])
	$3 = ($3 + [1])
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$9 }
	*(($5 + $4)) = [0]
	if ( (*($1) & [1]) ){ goto $label$11 }
	*($1) = [0]
	goto $label$10 
	
.LABEL $label$11
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$10
	CALL $33($1, [0])
	*(($1 + [8])) = *(($2 + [8]))
	*($1) = *($2)
	$3 = *($2 + [16])
	if ( ($3 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$5
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$3 = ($1 + [8])
	
.LABEL $label$4
	CALL $33($1, [0])
	*($3) = [0]
	*($1) = (int_64)0
	$3 = *($2 + [16])
	if ( $3 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL $29($2)
	
.LABEL $label$2
	*($2 + [20]) = $3
	CALL $9($3)
	
.LABEL $label$1
	$global$0 = ($2 + [32])
	(unreachable)
	return $0
}

int_32 .FUNC $169 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10753])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$8 = ($2 + [1])
	*($5) = $8
	$2 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $2)))
	$6 = ($2 + [7])
	$2 = $8
	if ( ($7 & [128]) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $3)
	$2 = *($1)
	$7 = *($1 + [4])
	$5 = ($7 - $2)
	if ( ((uint_32)$5 >= (uint_32)$6) ){ goto $label$4 }
	CALL $88($1, ($6 - $5))
	$8 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$2 = *($1)
	goto $label$3 
	
.LABEL $label$4
	if ( ((uint_32)$5 <= (uint_32)$6) ){ goto $label$3 }
	$7 = ($2 + $6)
	*(($1 + [4])) = $7
	
.LABEL $label$3
	$7 = ($7 - $2)
	if ( ((uint_32)(*(($0 + [8])) - $8) >= (uint_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$8 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($2, $8, $7)
	*(($2 = ($0 + [4]))) = (*($2) + $7)
	return $0
}

void .FUNC $168 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [448])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$4 }
	if ( ($4 <= [512]) ){ goto $label$3 }
	$2 = CALL $1($4)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $4)
	
.LABEL $label$1
	*($3 + [388]) = $2
	*($3 + [384]) = $2
	*($3 + [392]) = ($2 + $4)
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [388])
	
.LABEL $label$5
	CALL memcpy(($3 + [376]), $2, [8])
	*($3 + [388]) = ($2 + [8])
	*($3 + [368]) = [0]
	*($3 + [360]) = (int_64)0
	CALL $160(($3 + [384]), ($3 + [360]))
	*(($2 = (($3 + [24]) + [8]))) = *((($3 + [384]) + [8]))
	*($3 + [24]) = *($3 + [384])
	$2 = *($2)
	*((($3 + [400]) + [8])) = $2
	*(($4 = (($3 + [416]) + [8]))) = $2
	$5 = *($3 + [24])
	*($3 + [416]) = $5
	*($3 + [400]) = $5
	$2 = *($4)
	*((($3 + [432]) + [8])) = $2
	*(($3 + [64])) = $2
	*($3 + [40]) = $0
	*($3 + [48]) = $1
	$5 = *($3 + [416])
	*($3 + [56]) = $5
	*($3 + [432]) = $5
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [188])) = [0]
	*(($3 + [200])) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*(($3 + [256])) = (int_64)0
	*(($3 + [264])) = [0]
	*(($3 + [268])) = [0]
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*(($3 + [320])) = $0
	*(($3 + [328])) = (int_64)-1
	*(($3 + [336])) = [0]
	*($3 + [232]) = $0
	*($3 + [272]) = $0
	*($3 + [312]) = $0
	*(($3 + [340])) = (int_64)0
	*($3 + [352]) = $1
	$2 = CALL $30(($3 + [8]), ($3 + [360]))
	CALL $85(($3 + [40]), *($3 + [376]), $2)
	if ( ((*($2) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*($2 + [8]))
	
.LABEL $label$6
	CALL $48(($3 + [40]))
	if ( ((*($3 + [360]) & [1]) == 0) ){ goto $label$7 }
	CALL $9(*(($3 + [368])))
	
.LABEL $label$7
	$global$0 = ($3 + [448])
}

void .FUNC $175 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [400])
	$3 = $2
	$global$0 = $2
	$4 = CALL action_data_size()
	if ( ($4 == 0) ){ goto $label$5 }
	if ( ($4 <= [512]) ){ goto $label$4 }
	$2 = CALL $1($4)
	goto $label$3 
	
.LABEL $label$5
	$2 = [0]
	$5 = ($3 + [392])
	$6 = $4
	goto $label$2 
	
.LABEL $label$4
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$3
	CALL read_action_data($2, $4)
	$6 = ($2 + $4)
	$5 = ($3 + [392])
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10757])
	
.LABEL $label$1
	CALL memcpy($5, $2, [8])
	*($3 + [384]) = (int_64)0
	$5 = ($2 + [8])
	$4 = ($4 & [-8])
	if ( ((int_32)$4 != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$6
	CALL memcpy(($3 + [384]), $5, [8])
	*($3 + [376]) = (int_64)0
	$5 = ($2 + [16])
	if ( ((int_32)$4 != (int_32)[16]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$7
	CALL memcpy(($3 + [376]), $5, [8])
	*($3 + [368]) = (int_64)0
	*($3 + [360]) = (int_64)0
	$5 = ($2 + [24])
	if ( ((int_32)$4 != (int_32)[24]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$8
	CALL memcpy(($3 + [360]), $5, [8])
	*($3 + [32]) = (int_64)0
	$5 = ($2 + [32])
	if ( ((int_32)$4 != (int_32)[32]) ){ goto $label$9 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$9
	CALL memcpy(($3 + [32]), $5, [8])
	*(($5 = (($3 + [360]) + [8]))) = *($3 + [32])
	$7 = ($2 + [40])
	if ( ((int_32)$4 != (int_32)[40]) ){ goto $label$10 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$10
	CALL memcpy(($3 + [352]), $7, [8])
	*(($3 + [56])) = $6
	*((($3 + [32]) + [40])) = $0
	*((($3 + [32]) + [48])) = (int_64)-1
	*(($3 + [88])) = (int_64)0
	*(($3 + [96])) = [0]
	*(($3 + [112])) = $0
	*(($3 + [120])) = (int_64)-1
	*(($3 + [128])) = (int_64)0
	*(($3 + [136])) = [0]
	*(($3 + [152])) = $0
	*($3 + [48]) = $2
	*(($3 + [52])) = ($2 + [48])
	*($3 + [40]) = $1
	*($3 + [32]) = $0
	*($3 + [64]) = $0
	*($3 + [104]) = $0
	*($3 + [144]) = $0
	*(($3 + [160])) = (int_64)-1
	*(($3 + [168])) = (int_64)0
	*(($3 + [176])) = [0]
	*(($3 + [180])) = [0]
	*(($3 + [192])) = $0
	*(($3 + [200])) = (int_64)-1
	*(($3 + [208])) = (int_64)0
	*(($3 + [216])) = [0]
	*(($3 + [232])) = $0
	*(($3 + [240])) = (int_64)-1
	*(($3 + [248])) = (int_64)0
	*(($3 + [256])) = [0]
	*(($3 + [260])) = [0]
	*(($3 + [272])) = $0
	*(($3 + [280])) = (int_64)-1
	*($3 + [184]) = $0
	*($3 + [224]) = $0
	*($3 + [264]) = $0
	*(($3 + [296])) = [0]
	*(($3 + [288])) = (int_64)0
	*(($3 + [312])) = $0
	*(($3 + [320])) = (int_64)-1
	*(($3 + [328])) = (int_64)0
	*(($3 + [336])) = [0]
	$8 = *($5)
	*((($3 + [16]) + [8])) = $8
	*(($3 + [8])) = $8
	*($3 + [304]) = $0
	*($3 + [344]) = $1
	$0 = *($3 + [360])
	*($3 + [16]) = $0
	*($3) = $0
	CALL $141(($3 + [32]), *($3 + [392]), *($3 + [384]), *($3 + [376]), $3, *($3 + [352]))
	CALL $48(($3 + [32]))
	$global$0 = ($3 + [400])
}

void .FUNC $58 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0)
	$5 = *($0 + [4])
	$6 = *($5)
	*($1) = *($6)
	*(($1 + [8])) = *(($6 + [8]))
	*($1 + [16]) = *(*($5 + [4]))
	$6 = *($5 + [8])
	*(($1 + [32])) = *(($6 + [8]))
	*($1 + [24]) = *($6)
	$6 = *($5 + [12])
	*($1 + [40]) = *($6)
	*(($1 + [48])) = *(($6 + [8]))
	$7 = *(*($5) + [8])
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$5 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9876])
	
.LABEL $label$1
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $7
	$7 = *(*($5) + [8])
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$8 = $9
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$10 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9876])
	
.LABEL $label$6
	*($1 + [72]) = (int_64)0
	*(($1 + [80])) = $7
	$7 = *(*($5) + [8])
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$13:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$14 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$14
	$8 = $9
	
.LOOP $label$15:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$12 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$15 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	CALL eosio_assert([0], [9876])
	
.LABEL $label$11
	*($1 + [88]) = (int_64)0
	*(($1 + [96])) = $7
	*($1 + [104]) = *(*($5 + [16]))
	*($1 + [112]) = (int_64)0
	$10 = $2
	$6 = ($10 + [-128])
	$global$0 = $6
	*($3 + [4]) = $6
	*($3) = $6
	*($3 + [8]) = ($10 + [-8])
	CALL $179($3, $1)
	$8 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8
	*($1 + [124]) = CALL db_store_i64(*($4 + [8]), (int_64)-3617352132944662528, *(*($0 + [8])), $8), $6, [120])
	if ( (uint_64)($8 <= *($4 + [16])) ){ goto $label$16 }
	*(($4 + [16])) = ((int_64)$8 + (int_64)1)
	
.LABEL $label$16
	$global$0 = ($3 + [16])
}

void .FUNC $59 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10847])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10892])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1 + [8])
	if ( (uint_64)(((int_64)*(*(($4 + [-24])) + [8]) ^ (int_64)$6) <= (int_64)256) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((uint_64)((int_64)*(*($9) + [8]) ^ (int_64)$6) >= (uint_64)(int_64)256) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10942])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$14 }
	CALL $9($8)
	
.LABEL $label$14
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [124]))
}

void .FUNC $50 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [96])
	$global$0 = $1
	CALL require_auth(*($0))
	CALL $51($0, (int_64)101, (int_64)0)
	CALL $51($0, (int_64)102, (int_64)0)
	CALL $51($0, (int_64)103, (int_64)150000)
	CALL $51($0, (int_64)104, (int_64)0)
	CALL $51($0, (int_64)105, (int_64)50)
	CALL $51($0, (int_64)106, (int_64)50)
	CALL $51($0, (int_64)107, (int_64)86400000000)
	CALL $51($0, (int_64)108, (int_64)0)
	CALL $51($0, (int_64)109, (int_64)0)
	CALL $51($0, (int_64)111, (int_64)0)
	CALL $51($0, (int_64)112, (int_64)0)
	CALL $51($0, (int_64)113, (int_64)21)
	CALL $51($0, (int_64)114, (int_64)13)
	$2 = CALL $15([8690])
	if ( ($2 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9729])
	goto $label$3 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = (int_64)0
	
.LOOP $label$5:
	$4 = *(($2 + [8689]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$6
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$5 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$3 = (int_64)4
	
.LABEL $label$1
	*($1 + [80]) = (int_64)10000000
	*($1 + [88]) = $3
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$3 = $5
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$3 = $5
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$11 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [9876])
	
.LABEL $label$7
	$2 = CALL $15([8690])
	if ( ($2 <= [8]) ){ goto $label$15 }
	CALL eosio_assert([0], [9729])
	goto $label$14 
	
.LABEL $label$15
	if ( ($2 == 0) ){ goto $label$13 }
	
.LABEL $label$14
	$3 = (int_64)0
	
.LOOP $label$16:
	$4 = *(($2 + [8689]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$17 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$17
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$16 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$12 
	
.LABEL $label$13
	$3 = (int_64)4
	
.LABEL $label$12
	*($1 + [64]) = (int_64)1000
	*($1 + [72]) = $3
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$20:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$19 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$21 }
	$3 = $5
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$21
	$3 = $5
	
.LOOP $label$22:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$19 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$22 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$20 }
	goto $label$18 
	
.LABEL $label$19
	CALL eosio_assert([0], [9876])
	
.LABEL $label$18
	$2 = CALL $15([8690])
	if ( ($2 <= [8]) ){ goto $label$26 }
	CALL eosio_assert([0], [9729])
	goto $label$25 
	
.LABEL $label$26
	if ( ($2 == 0) ){ goto $label$24 }
	
.LABEL $label$25
	$3 = (int_64)0
	
.LOOP $label$27:
	$4 = *(($2 + [8689]))
	if ( ((($4 + [-65]) & [255]) <= [26]) ){ goto $label$28 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$28
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56))
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$27 }
	$3 = ((int_64)((int_64)$3 << (int_64)8) | (int_64)4)
	goto $label$23 
	
.LABEL $label$24
	$3 = (int_64)4
	
.LABEL $label$23
	*($1 + [48]) = (int_64)1000000
	*($1 + [56]) = $3
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$2 = [0]
	
.LOOP $label$31:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$30 }
	$5 = (uint_64)$3 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$3 & (int_64)65280) == (int_64)0) ){ goto $label$32 }
	$3 = $5
	$4 = $2
	$2 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$32
	$3 = $5
	
.LOOP $label$33:
	if ( ((int_64)((int_64)$3 & (int_64)65280) != (int_64)0) ){ goto $label$30 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8)
	$4 = ((int_32)$2 < (int_32)[6])
	$6 = ($2 + [1])
	$2 = $6
	if ( $4 ){ goto $label$33 }
	$2 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$31 }
	goto $label$29 
	
.LABEL $label$30
	CALL eosio_assert([0], [9876])
	
.LABEL $label$29
	*((($1 + [32]) + [8])) = *((($1 + [80]) + [8]))
	*((($1 + [16]) + [8])) = *((($1 + [64]) + [8]))
	*(($1 + [8])) = *((($1 + [48]) + [8]))
	*($1 + [32]) = *($1 + [80])
	*($1 + [16]) = *($1 + [64])
	*($1) = *($1 + [48])
	CALL $52($0, ($1 + [32]), (int_64)6138663591592764928, ($1 + [16]), $1, (int_64)10)
	$global$0 = ($1 + [96])
}

void .FUNC $51 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$3 = ($global$0 - [48])
	$global$0 = $3
	*($3 + [8]) = $2
	CALL require_auth(*($0))
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	
.LOOP $label$5:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$4 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$3 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [10072])
	goto $label$2 
	
.LABEL $label$3
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)7235159550150574080, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $53($4, $7)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$2 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$2
	$1 = *($0)
	*($3 + [32]) = ($3 + [8])
	CALL $54($4, $8, $1, ($3 + [32]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$1
	$9 = *($0)
	if ( ((int_64)*(($0 + [32])) == (int_64)CALL current_receiver()) ){ goto $label$6 }
	CALL eosio_assert([0], [10762])
	
.LABEL $label$6
	*(($7 = CALL $7([32])) + [16]) = $4
	*($7 + [8]) = $2
	*($7) = $1
	CALL memcpy(($3 + [32]), $7, [8])
	CALL memcpy((($3 + [32]) | [8]), ($7 + [8]), [8])
	$1 = *($7)
	$8 = CALL db_store_i64(*(($0 + [40])), (int_64)7235159550150574080, $9, $1, ($3 + [32]), [16])
	*($7 + [20]) = $8
	$6 = ($0 + [48])
	if ( (uint_64)($1 <= *($6)) ){ goto $label$7 }
	*($6) = ( (int_64)-2 ? ((int_64)$1 + (int_64)1) : ((uint_64)$1 > (uint_64)(int_64)-3) )
	
.LABEL $label$7
	*($3 + [24]) = $7
	$1 = *($7)
	*($3 + [32]) = $1
	*($3 + [20]) = $8
	$5 = ($0 + [60])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [64]))) ){ goto $label$10 }
	*($6 + [8]) = $1
	*($6 + [16]) = $8
	*($3 + [24]) = [0]
	*($6) = $7
	*($5) = ($6 + [24])
	$7 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $55(($0 + [56]), ($3 + [24]), ($3 + [32]), ($3 + [20]))
	$7 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9($7)
	
.LABEL $label$8
	$global$0 = ($3 + [48])
}

void .FUNC $52 (int_32 $0, int_32 $1, int_64 $2, int_32 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$6 = ($global$0 - [80])
	$global$0 = $6
	*($6 + [24]) = $5
	*($6 + [32]) = $2
	CALL require_auth(*($0))
	$7 = ($0 + [72])
	$5 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8)
	$9 = *(($0 + [100]))
	$8 = *(($0 + [96]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	
.LOOP $label$10:
	$10 = ($9 + [-24])
	$11 = *($10)
	if ( ((int_64)(uint_64)*($11 + [8]) >> (uint_64)(int_64)8) == (int_64)$5) ){ goto $label$9 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$10 }
	goto $label$8 
	
.LABEL $label$9
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	if ( ((int_32)*($11 + [120]) == (int_32)$7) ){ goto $label$7 }
	CALL eosio_assert([0], [10072])
	if ( ((int_64)$2 != (int_64)0) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$8
	$10 = CALL db_find_i64(*($7), *(($0 + [80])), (int_64)-3617352132944662528, $5)
	if ( ((int_32)$10 <= (int_32)[-1]) ){ goto $label$5 }
	$11 = CALL $56($7, $10)
	if ( ((int_32)*($11 + [120]) == (int_32)$7) ){ goto $label$7 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$7
	if ( ((int_64)$2 == (int_64)0) ){ goto $label$4 }
	
.LABEL $label$6
	$5 = *($0)
	*($6) = $1
	*($6 + [8]) = $3
	*($6 + [12]) = $4
	*($6 + [4]) = ($6 + [32])
	*($6 + [16]) = ($6 + [24])
	CALL $57($7, $11, $5, $6)
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$5
	if ( (int_64)($2 == 0) ){ goto $label$1 }
	$5 = *($0)
	*($6) = $1
	*($6 + [8]) = $3
	*($6 + [12]) = $4
	*($6 + [4]) = ($6 + [32])
	*($6 + [16]) = ($6 + [24])
	*($6 + [72]) = $5
	if ( ((int_64)*(($0 + [72])) == (int_64)CALL current_receiver()) ){ goto $label$11 }
	CALL eosio_assert([0], [10762])
	
.LABEL $label$11
	*($6 + [48]) = $7
	*($6 + [52]) = $6
	*($6 + [56]) = ($6 + [72])
	*(($10 = CALL $7([136])) + [8]) = (int_64)0
	*($10) = (int_64)0
	*($10 + [16]) = (int_64)0
	*($10 + [24]) = (int_64)0
	*($10 + [32]) = (int_64)0
	*($10 + [40]) = (int_64)0
	*($10 + [48]) = (int_64)0
	*($10 + [56]) = (int_64)0
	*($10 + [64]) = (int_64)0
	*($10 + [72]) = (int_64)0
	*($10 + [80]) = (int_64)0
	*($10 + [88]) = (int_64)0
	*($10 + [96]) = (int_64)0
	*($10 + [120]) = $7
	CALL $58(($6 + [48]), $10)
	*($6 + [64]) = $10
	$5 = (uint_64)*($10 + [8]) >> (uint_64)(int_64)8
	*($6 + [48]) = $5)
	$11 = *($10 + [124])
	*($6 + [44]) = $11
	$8 = ($0 + [100])
	$9 = *($8)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [104]))) ){ goto $label$3 }
	*($9 + [8]) = $5
	*($9 + [16]) = $11
	*($6 + [64]) = [0]
	*($9) = $10
	*($8) = ($9 + [24])
	$10 = *($6 + [64])
	*($6 + [64]) = [0]
	if ( $10 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	$10 = CALL db_next_i64(*($11 + [124]), $6)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	CALL $56($7, $10)
	
.LABEL $label$12
	CALL $59($7, $11)
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$3
	CALL $60(($0 + [96]), ($6 + [64]), ($6 + [48]), ($6 + [44]))
	$10 = *($6 + [64])
	*($6 + [64]) = [0]
	if ( ($10 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL $9($10)
	$global$0 = ($6 + [80])
	return 
	
.LABEL $label$1
	$global$0 = ($6 + [80])
}

int_32 .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10123])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	$7 = ($5 + [8])
	$8 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$8
	CALL memcpy($7, $8, [8])
	*($5 + [20]) = $1
	*($3 + [24]) = $5
	$9 = *($5)
	*($3 + [16]) = $9
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $9
	*($4 + [16]) = $1
	*($3 + [24]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $55(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

void .FUNC $54 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $55 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $56 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10123])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([136])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [48]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = (int_64)0
	*($5 + [96]) = (int_64)0
	*($5 + [120]) = $0
	CALL $186(($3 + [32]), $5)
	*($5 + [124]) = $1
	*($3 + [24]) = $5
	$7 = (uint_64)*($5 + [8]) >> (uint_64)(int_64)8
	*($3 + [16]) = $7)
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $60(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $57 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = *($3)
	*($1) = *($6)
	$7 = *($1 + [8])
	*($1 + [8]) = *(($6 + [8]))
	*($1 + [16]) = *(*($3 + [4]))
	$6 = *($3 + [8])
	*(($1 + [32])) = *(($6 + [8]))
	*($1 + [24]) = *($6)
	$6 = *($3 + [12])
	*($1 + [40]) = *($6)
	*(($1 + [48])) = *(($6 + [8]))
	*($1 + [104]) = *(*($3 + [16]))
	$7 = (uint_64)$7 >> (uint_64)(int_64)8
	if ( ((int_64)$7) == (int_64)(uint_64)*($1 + [8]) >> (uint_64)(int_64)8)) ){ goto $label$3 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$3
	$4 = $4
	$3 = ($4 + [-128])
	$global$0 = $3
	*($5 + [4]) = $3
	*($5) = $3
	*($5 + [8]) = ($4 + [-8])
	CALL $179($5, $1)
	CALL db_update_i64(*($1 + [124]), $2, $3, [120])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$4 }
	*(($0 + [16])) = ((int_64)$7 + (int_64)1)
	
.LABEL $label$4
	$global$0 = ($5 + [16])
}

void .FUNC $173 (int_64 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [320])
	$3 = $2
	$global$0 = $2
	$4 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [512]) ){ goto $label$3 }
	$4 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$2
	CALL read_action_data($4, $5)
	
.LABEL $label$1
	*(($3 + [20])) = $4
	*(($3 + [24])) = ($4 + $5)
	*(($3 + [40])) = $0
	*(($3 + [48])) = (int_64)-1
	*(($3 + [56])) = (int_64)0
	*(($3 + [64])) = [0]
	*(($3 + [80])) = $0
	*(($3 + [88])) = (int_64)-1
	*(($3 + [96])) = (int_64)0
	*(($3 + [104])) = [0]
	*(($3 + [120])) = $0
	*($3 + [8]) = $1
	*($3) = $0
	*($3 + [16]) = $4
	*($3 + [32]) = $0
	*($3 + [72]) = $0
	*($3 + [112]) = $0
	*(($3 + [128])) = (int_64)-1
	*(($3 + [136])) = (int_64)0
	*(($3 + [144])) = [0]
	*(($3 + [148])) = [0]
	*(($3 + [160])) = $0
	*(($3 + [168])) = (int_64)-1
	*(($3 + [176])) = (int_64)0
	*(($3 + [184])) = [0]
	*(($3 + [200])) = $0
	*(($3 + [208])) = (int_64)-1
	*(($3 + [216])) = (int_64)0
	*(($3 + [224])) = [0]
	*(($3 + [228])) = [0]
	*(($3 + [240])) = $0
	*(($3 + [248])) = (int_64)-1
	*($3 + [152]) = $0
	*($3 + [192]) = $0
	*($3 + [232]) = $0
	*(($3 + [264])) = [0]
	*(($3 + [256])) = (int_64)0
	*(($3 + [280])) = $0
	*(($3 + [288])) = (int_64)-1
	*(($3 + [296])) = (int_64)0
	*(($3 + [304])) = [0]
	*($3 + [272]) = $0
	*($3 + [312]) = $1
	CALL $122($3)
	CALL $48($3)
	$global$0 = ($3 + [320])
}

int_32 .FUNC $152 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [320])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [20])) = $2
	*(($4 + [24])) = ($2 + $7)
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [16]) = $2
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [148])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [228])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*(($4 + [264])) = [0]
	*(($4 + [256])) = (int_64)0
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = (int_64)0
	*(($4 + [304])) = [0]
	*($4 + [272]) = $0
	*($4 + [312]) = $1
	$3 = ($4 + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	CALL void $3((int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $48($4)
	$global$0 = ($4 + [320])
	return [1]
}

int_32 .FUNC $153 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [608])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($3 = ($4 + [432]))) = (int_64)0
	*(($8 = (($4 + [400]) + [48]))) = (int_64)0
	*($4 + [408]) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [416]) = (int_64)0
	*($4 + [424]) = (int_64)0
	*($4 + [440]) = (int_64)0
	*($4 + [456]) = (int_64)0
	*($4 + [388]) = $2
	*($4 + [384]) = $2
	*($4 + [392]) = ($2 + $7)
	*($4 + [592]) = ($4 + [384])
	*($4 + [64]) = ($4 + [400])
	CALL $159(($4 + [64]), ($4 + [592]))
	*(($9 = (($4 + [48]) + [8]))) = *($4 + [392])
	*($4 + [48]) = *($4 + [384])
	$9 = *($9)
	*((($4 + [560]) + [8])) = $9
	*(($10 = (($4 + [576]) + [8]))) = $9
	$11 = *($4 + [48])
	*($4 + [576]) = $11
	*($4 + [560]) = $11
	$9 = *($10)
	*((($4 + [592]) + [8])) = $9
	*(($4 + [88])) = $9
	*($4 + [64]) = $0
	*($4 + [72]) = $1
	$11 = *($4 + [576])
	*($4 + [80]) = $11
	*($4 + [592]) = $11
	*(($4 + [104])) = $0
	*((($4 + [64]) + [48])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [184])) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [212])) = [0]
	*(($4 + [224])) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*($4 + [216]) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [292])) = [0]
	*(($4 + [304])) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = (int_64)0
	*(($4 + [328])) = [0]
	*(($4 + [344])) = $0
	*(($4 + [352])) = (int_64)-1
	*(($4 + [360])) = [0]
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*($4 + [336]) = $0
	*(($4 + [364])) = (int_64)0
	*($4 + [376]) = $1
	*(($9 = (($4 + [496]) + [8]))) = *($4 + [408])
	*(($10 = (($4 + [480]) + [8]))) = *($3)
	*(($3 = (($4 + [464]) + [8]))) = *($8)
	*($4 + [496]) = *($4 + [400])
	*($4 + [480]) = *($4 + [424])
	*($4 + [464]) = *($4 + [440])
	$0 = *($4 + [416])
	$1 = *($4 + [456])
	*((($4 + [544]) + [8])) = *($3)
	*((($4 + [528]) + [8])) = *($10)
	*((($4 + [512]) + [8])) = *($9)
	*($4 + [544]) = *($4 + [464])
	*($4 + [528]) = *($4 + [480])
	*($4 + [512]) = *($4 + [496])
	$3 = (($4 + [64]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [512]) + [8]))
	*((($4 + [592]) + [8])) = $11
	$12 = *((($4 + [528]) + [8]))
	*((($4 + [576]) + [8])) = $12
	$13 = *((($4 + [544]) + [8]))
	*((($4 + [560]) + [8])) = $13
	*((($4 + [32]) + [8])) = $11
	*((($4 + [16]) + [8])) = $12
	*(($4 + [8])) = $13
	$11 = *($4 + [512])
	*($4 + [592]) = $11
	$12 = *($4 + [528])
	*($4 + [576]) = $12
	*($4 + [32]) = $11
	*($4 + [16]) = $12
	$11 = *($4 + [544])
	*($4) = $11
	*($4 + [560]) = $11
	CALL void $3((int_32 ($4 + [32])), (int_32 $0), (int_64 ($4 + [16])), (int_32 $4), (int_32 $1), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $48(($4 + [64]))
	$global$0 = ($4 + [608])
	return [1]
}

int_32 .FUNC $150 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [328]) = (int_64)0
	$3 = ($2 + $7)
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$5
	CALL memcpy(($4 + [328]), $2, [8])
	*(($4 + [28])) = ($2 + [8])
	*(($4 + [32])) = $3
	*(($4 + [48])) = $0
	*(($4 + [56])) = (int_64)-1
	*(($4 + [64])) = (int_64)0
	*(($4 + [72])) = [0]
	*(($4 + [88])) = $0
	*(($4 + [96])) = (int_64)-1
	*(($4 + [104])) = (int_64)0
	*(($4 + [112])) = [0]
	*(($4 + [128])) = $0
	*($4 + [16]) = $1
	*($4 + [8]) = $0
	*($4 + [24]) = $2
	*($4 + [40]) = $0
	*($4 + [80]) = $0
	*($4 + [120]) = $0
	*(($4 + [136])) = (int_64)-1
	*(($4 + [144])) = (int_64)0
	*(($4 + [152])) = [0]
	*(($4 + [156])) = [0]
	*(($4 + [168])) = $0
	*(($4 + [176])) = (int_64)-1
	*(($4 + [184])) = (int_64)0
	*(($4 + [192])) = [0]
	*(($4 + [208])) = $0
	*(($4 + [216])) = (int_64)-1
	*(($4 + [224])) = (int_64)0
	*(($4 + [232])) = [0]
	*(($4 + [236])) = [0]
	*(($4 + [248])) = $0
	*(($4 + [256])) = (int_64)-1
	*($4 + [160]) = $0
	*($4 + [200]) = $0
	*($4 + [240]) = $0
	*(($4 + [272])) = [0]
	*(($4 + [264])) = (int_64)0
	*(($4 + [288])) = $0
	*(($4 + [296])) = (int_64)-1
	*(($4 + [304])) = (int_64)0
	*(($4 + [312])) = [0]
	*($4 + [280]) = $0
	*($4 + [320]) = $1
	$3 = (($4 + [8]) + int_32($5 >> [1]))
	$0 = *($4 + [328])
	if ( (($5 & [1]) == 0) ){ goto $label$6 }
	$6 = *((*($3) + $6))
	
.LABEL $label$6
	CALL void $3((int_32 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$7 }
	CALL $2($2)
	
.LABEL $label$7
	CALL $48(($4 + [8]))
	$global$0 = ($4 + [336])
	return [1]
}

int_32 .FUNC $151 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$3 = ($global$0 - [432])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($4 + [376])) = [0]
	*($4 + [360]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [348]) = $2
	*($4 + [344]) = $2
	*($4 + [352]) = ($2 + $7)
	$3 = $2
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$3 = *($4 + [348])
	
.LABEL $label$4
	CALL memcpy(($4 + [360]), $3, [8])
	*($4 + [348]) = ($3 + [8])
	$8 = (($4 + [360]) + [8])
	CALL $160(($4 + [344]), $8)
	*(($3 = (($4 + [8]) + [8]))) = *((($4 + [344]) + [8]))
	*($4 + [8]) = *($4 + [344])
	$3 = *($3)
	*((($4 + [384]) + [8])) = $3
	*(($9 = (($4 + [400]) + [8]))) = $3
	$10 = *($4 + [8])
	*($4 + [400]) = $10
	*($4 + [384]) = $10
	$3 = *($9)
	*((($4 + [416]) + [8])) = $3
	*(($4 + [48])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$10 = *($4 + [400])
	*($4 + [40]) = $10
	*($4 + [416]) = $10
	*(($4 + [64])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*(($4 + [184])) = $0
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = [0]
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [324])) = (int_64)0
	*($4 + [336]) = $1
	$3 = (($4 + [24]) + int_32($5 >> [1]))
	$0 = *($4 + [360])
	$8 = CALL $30(($4 + [400]), $8)
	if ( (($5 & [1]) == 0) ){ goto $label$5 }
	$6 = *((*($3) + $6))
	
.LABEL $label$5
	$5 = CALL $30(($4 + [416]), $8)
	CALL void $3((int_32 $0), (int_64 $5), (int_32 $6))
	if ( (*($4 + [416]) & [1]) ){ goto $label$10 }
	if ( (*($4 + [400]) & [1]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $9(*($5 + [8]))
	if ( ((*($4 + [400]) & [1]) == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $9(*($8 + [8]))
	if ( ((uint_32)$7 >= (uint_32)[513]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( ($7 <= [513]) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $2($2)
	
.LABEL $label$6
	CALL $48(($4 + [24]))
	if ( ((*($4 + [368]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($4 + [376])))
	
.LABEL $label$11
	$global$0 = ($4 + [432])
	return [1]
}

void .FUNC $156 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $0, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $3) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $3, [8])
	*(($5 + [24])) = *($2 + [8])
	*($0) = (*($0) + [8])
	CALL $160(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $157 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [96])
	$global$0 = $2
	*(($3 = (($2 + [32]) + [8]))) = *(($1 + [24]))
	*($2 + [32]) = *($1 + [16])
	$4 = *($1 + [8])
	$5 = *($1)
	$1 = CALL $30(($2 + [16]), ($1 + [32]))
	*((($2 + [48]) + [8])) = *($3)
	*($2 + [48]) = *($2 + [32])
	$0 = *($0 + [4])
	$6 = *($0 + [4])
	$3 = (*($0) + int_32($6 >> [1]))
	$0 = *($0)
	if ( (($6 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($3) + $0))
	
.LABEL $label$1
	*(($7 = (($2 + [80]) + [8]))) = *((($2 + [48]) + [8]))
	*($2 + [80]) = *($2 + [48])
	$6 = CALL $30(($2 + [64]), $1)
	*(($2 + [8])) = *($7)
	*($2) = *($2 + [80])
	CALL void $3((int_32 $5), (int_64 $4), (int_64 $2), (int_32 $6), (int_32 $0))
	if ( (*($2 + [64]) & [1]) ){ goto $label$4 }
	if ( (*($1) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	CALL $9(*($6 + [8]))
	if ( ((*($1) & [1]) == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL $9(*($1 + [8]))
	$global$0 = ($2 + [96])
	return 
	
.LABEL $label$2
	$global$0 = ($2 + [96])
}

int_32 .FUNC $154 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [464])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [400]))) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [408]) = (int_64)0
	*($4 + [356]) = $2
	*($4 + [352]) = $2
	*($4 + [360]) = ($2 + $7)
	*($4 + [448]) = ($4 + [352])
	*($4 + [32]) = ($4 + [368])
	CALL $163(($4 + [32]), ($4 + [448]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [360])
	*($4 + [16]) = *($4 + [352])
	$10 = *($9)
	*(($3 = (($4 + [416]) + [8]))) = $10
	*(($9 = (($4 + [432]) + [8]))) = $10
	$11 = *($4 + [16])
	*($4 + [432]) = $11
	*($4 + [416]) = $11
	$10 = *($9)
	*((($4 + [448]) + [8])) = $10
	*(($4 + [56])) = $10
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$11 = *($4 + [432])
	*($4 + [48]) = $11
	*($4 + [448]) = $11
	*(($4 + [72])) = $0
	*(($4 + [80])) = (int_64)-1
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = [0]
	*(($4 + [112])) = $0
	*(($4 + [120])) = (int_64)-1
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = [0]
	*(($4 + [152])) = $0
	*(($4 + [160])) = (int_64)-1
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = [0]
	*(($4 + [180])) = [0]
	*(($4 + [192])) = $0
	*($4 + [64]) = $0
	*($4 + [104]) = $0
	*($4 + [144]) = $0
	*($4 + [184]) = $0
	*(($4 + [200])) = (int_64)-1
	*(($4 + [208])) = (int_64)0
	*(($4 + [216])) = [0]
	*(($4 + [232])) = $0
	*(($4 + [240])) = (int_64)-1
	*(($4 + [248])) = (int_64)0
	*(($4 + [256])) = [0]
	*(($4 + [260])) = [0]
	*(($4 + [272])) = $0
	*(($4 + [280])) = (int_64)-1
	*(($4 + [288])) = (int_64)0
	*(($4 + [296])) = [0]
	*(($4 + [312])) = $0
	*(($4 + [320])) = (int_64)-1
	*(($4 + [328])) = [0]
	*($4 + [224]) = $0
	*($4 + [264]) = $0
	*($4 + [304]) = $0
	*(($4 + [332])) = (int_64)0
	*($4 + [344]) = $1
	*($3) = *($8)
	*($4 + [416]) = *($4 + [392])
	$0 = *($4 + [384])
	$1 = *($4 + [376])
	$11 = *($4 + [368])
	$12 = *($4 + [408])
	*($9) = *($3)
	*($4 + [432]) = *($4 + [416])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$13 = *((($4 + [432]) + [8]))
	*((($4 + [448]) + [8])) = $13
	*(($4 + [8])) = $13
	$13 = *($4 + [432])
	*($4) = $13
	*($4 + [448]) = $13
	CALL void $3((int_32 $11), (int_64 $1), (int_64 $0), (int_64 $4), (int_32 $12), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $48(($4 + [32]))
	$global$0 = ($4 + [464])
	return [1]
}

int_32 .FUNC $155 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [400])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [344]) = (int_64)0
	*($4 + [336]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$5
	$3 = ($2 + $7)
	CALL memcpy(($4 + [336]), $2, [8])
	*($4 + [16]) = (int_64)0
	$8 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$6
	CALL memcpy(($4 + [16]), $8, [8])
	*(($8 = (($4 + [336]) + [8]))) = *($4 + [16])
	*(($4 + [40])) = $3
	*(($4 + [56])) = $0
	*(($4 + [64])) = (int_64)-1
	*(($4 + [72])) = (int_64)0
	*(($4 + [80])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*($4 + [32]) = $2
	*(($4 + [36])) = ($2 + [16])
	*($4 + [24]) = $1
	*($4 + [16]) = $0
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*(($4 + [176])) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*($4 + [168]) = $0
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*(($4 + [280])) = [0]
	*(($4 + [272])) = (int_64)0
	*(($4 + [296])) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = (int_64)0
	*(($4 + [320])) = [0]
	*($4 + [288]) = $0
	*($4 + [328]) = $1
	*(($3 = (($4 + [352]) + [8]))) = *($8)
	*($4 + [352]) = *($4 + [336])
	*((($4 + [368]) + [8])) = *($3)
	*($4 + [368]) = *($4 + [352])
	$3 = (($4 + [16]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	$0 = *((($4 + [368]) + [8]))
	*((($4 + [384]) + [8])) = $0
	*(($4 + [8])) = $0
	$0 = *($4 + [368])
	*($4) = $0
	*($4 + [384]) = $0
	CALL void $3((int_32 $4), (int_32 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $48(($4 + [16]))
	$global$0 = ($4 + [400])
	return [1]
}

void .FUNC $158 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $0, [8])
	$0 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $0
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $0) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $0, [8])
	*(($5 + [16])) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [24])
	$1 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $1) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$1 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $1, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $159 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	$6 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $6) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$6 = *($5)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $6, [8])
	*($3 + [8]) = *($2 + [8])
	*($5) = (*($5) + [8])
	$4 = *($0)
	$0 = ($4 + [16])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$6 = *(($5 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $6, [8])
	*(($5 = ($5 + [4]))) = (*($5) + [8])
	$0 = ($4 + [24])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$6 = *(($5 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $6, [8])
	$6 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $6) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$6 = *(($5 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $6, [8])
	*(($4 + [32])) = *($2 + [8])
	*(($5 = ($5 + [4]))) = (*($5) + [8])
	$0 = ($4 + [40])
	$6 = *($5 + [4])
	$5 = *($1)
	if ( ((uint_32)(*($5 + [8]) - $6) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$6 = *(($5 + [4]))
	
.LABEL $label$6
	CALL memcpy($0, $6, [8])
	$6 = (*($6) + [8])
	*(($6 = ($5 + [4]))) = $6
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($5 + [8])) - $6) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	$6 = *(($5 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $6, [8])
	*(($4 + [48])) = *($2 + [8])
	*(($5 = ($5 + [4]))) = (*($5) + [8])
	$5 = ($4 + [56])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	$4 = *(($1 + [4]))
	
.LABEL $label$8
	CALL memcpy($5, $4, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

int_32 .FUNC $179 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *($1 + [8])
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [48]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [64]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [80]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [88])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [96]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [104])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$14
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$1 = ($1 + [112])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($4, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $183 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$5 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$7 = ($0 + [4])
	$1 = ($0 + [8])
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$5 }
	$8 = [2]
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$3 
	
.LABEL $label$4
	$8 = [3]
	
.LABEL $label$3
	
.LOOP $label$6:
	goto $label$10 
	
.LABEL $label$12
	$4 = *($7)
	if ( ((int_32)(*($1) - $4) > (int_32)[1]) ){ goto $label$7 }
	$8 = [2]
	goto $label$6 
	
.LABEL $label$11
	CALL eosio_assert([0], [10508])
	$4 = *($7)
	$8 = [0]
	goto $label$6 
	
.LABEL $label$10
	CALL memcpy($4, $6, [2])
	*($7) = (*($7) + [2])
	CALL $181($0, ($6 + [4]))
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	$8 = [3]
	goto $label$6 
	
.LABEL $label$9
	$global$0 = ($2 + [16])
	return $0
	
.LABEL $label$8
	$8 = [1]
	goto $label$6 
	
.LABEL $label$7
	$8 = [0]
	goto $label$6 
	return $8
}

int_32 .FUNC $69 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [4])
	$3 = (*($2) + [4])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [4])
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [2])
	$3 = (*($2) + [2])
	*($2) = $3
	$2 = ($1 + [8])
	if ( ((uint_32)(*($5) - $3) > (uint_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$3 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $3, [4])
	$2 = (*($6) + [4])
	*(($6 = ($0 + [4]))) = $2
	$7 = (int_64)0
	$8 = ($0 + [8])
	$5 = [0]
	
.LOOP $label$4:
	if ( ($2 <= *($8)) ){ goto $label$5 }
	CALL eosio_assert([0], [10753])
	$2 = *($6)
	
.LABEL $label$5
	$3 = *($2)
	$4 = ($2 + [1])
	*($6) = $4
	$2 = ($5 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $2)))
	$5 = ($2 + [7])
	$2 = $4
	if ( ($3 & [128]) ){ goto $label$4 }
	*($1 + [12]) = $7
	$2 = ($1 + [16])
	$6 = ($0 + [8])
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($2, $4, [1])
	$2 = (*($5) + [1])
	*(($5 = ($0 + [4]))) = $2
	$7 = (int_64)0
	$4 = [0]
	
.LOOP $label$7:
	if ( ($2 <= *($6)) ){ goto $label$8 }
	CALL eosio_assert([0], [10753])
	$2 = *($5)
	
.LABEL $label$8
	$3 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$4 = ($4 & [255])
	$7 = ((int_64)$7 | (int_64)(CASTING uint_64)(uint_32 (($3 & [127]) << $4)))
	$4 = ($4 + [7])
	$2 = $2
	if ( ($3 & [128]) ){ goto $label$7 }
	*($1 + [20]) = $7
	return $0
}

void .FUNC $68 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	float_64 $16
	int_64 $17
	$5 = ($global$0 - [432])
	$global$0 = $5
	*(($6 = $5) + [384]) = $1
	if ( ((int_64)$1 == (int_64)6138663591134630912) ){ goto $label$1 }
	if ( ((int_64)$1 == (int_64)6138663590285017088) ){ goto $label$1 }
	$7 = *($0)
	if ( ((int_64)$7 == (int_64)$1) ){ goto $label$1 }
	if ( ((int_64)$7 != (int_64)$2) ){ goto $label$1 }
	$9 = *($4)
	$8 = CALL $15([8682])
	if ( ((int_32)$8 != (int_32)( *($4 + [4]) ? uint_32($9 >> [1]) : ($9 & [1]) )) ){ goto $label$2 }
	if ( (CALL $36($4, [0], [-1], [8682], $8) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$10 = $5
	$9 = CALL transaction_size()
	$5 = ($5 - (($9 + [15]) & [-16]))
	$global$0 = $5
	$8 = CALL read_transaction($5, $9)
	CALL eosio_assert(((int_32)$9 == (int_32)$8), [8734])
	$1 = CALL current_time()
	*(($6 + [348])) = (int_64)0
	*(($6 + [364])) = (int_64)0
	*(($6 + [372])) = (int_64)0
	$9 = [0]
	*($6 + [332]) = [0]
	*($6 + [336]) = [0]
	*($6 + [340 align=4]) = (int_64)0
	*($6 + [356 align=4]) = (int_64)0
	*($6 + [320]) = ((CASTING uint_32)(uint_64 ((uint_64)$1 / (uint_64)(int_64)1000000)) + [60])
	*($6 + [84]) = $5
	*($6 + [80]) = $5
	*($6 + [88]) = ($5 + $8)
	CALL $69(($6 + [80]), ($6 + [320]))
	CALL $71(CALL $70(CALL $70(($6 + [80]), ($6 + [344])), ($6 + [356])), ($6 + [368]))
	$11 = CALL $72(($6 + [280]), *($6 + [356]))
	CALL eosio_assert(((int_32)(*((($6 + [320]) + [40])) - *($6 + [356])) == (int_32)[40]), [8758])
	$1 = *($6 + [384])
	if ( ((int_64)$1 == (int_64)-4155580622883343856) ){ goto $label$3 }
	CALL eosio_assert(((int_64)*((*(($11 + [20])) + [-16])) == (int_64)$1), [8771])
	$1 = *($11 + [8])
	*($6 + [272]) = [8783]
	*($6 + [276]) = CALL $15([8783])
	*($6 + [24]) = *($6 + [272])
	CALL $73(($6 + [80]), ($6 + [24]))
	if ( ((int_64)$1 != (int_64)-3617168760277827584) ){ goto $label$4 }
	$9 = ((int_64)*($11) == (int_64)*($0 + [312]))
	
.LABEL $label$4
	CALL eosio_assert($9, [8792])
	
.LABEL $label$3
	$12 = ($0 + [32])
	$9 = *(($0 + [60]))
	$13 = *(($0 + [56]))
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$6 }
	
.LOOP $label$8:
	$5 = ($9 + [-24])
	$8 = *($5)
	if ( ((int_64)*($8) == (int_64)101) ){ goto $label$7 }
	$9 = $5
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$6 }
	if ( ((int_32)*($8 + [16]) == (int_32)$12) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	goto $label$5 
	
.LABEL $label$6
	$8 = CALL $53($12, CALL $fimport$26(*($12), *(($0 + [40])), (int_64)7235159550150574080, (int_64)101))
	if ( ((int_32)*($8 + [16]) == (int_32)$12) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($8 + [8]) == (int_64)1), [8810])
	$9 = [0]
	if ( ((uint_64)((int_64)*($3) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$9 }
	$1 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$1 = $2
	$9 = [1]
	$8 = $5
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$1 = $2
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $9 ){ goto $label$13 }
	$9 = [1]
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$9 = [0]
	
.LABEL $label$9
	CALL eosio_assert($9, [8717])
	$14 = ($0 + [72])
	$1 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$9 = *(($0 + [100]))
	$8 = *(($0 + [96]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$15 }
	
.LOOP $label$17:
	$5 = ($9 + [-24])
	$13 = *($5)
	if ( ((int_64)(uint_64)*($13 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$16 }
	$9 = $5
	if ( ((int_32)$8 != (int_32)$5) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$15 }
	if ( ((int_32)*($13 + [120]) == (int_32)$14) ){ goto $label$14 }
	CALL eosio_assert([0], [10072])
	goto $label$14 
	
.LABEL $label$15
	$13 = [0]
	$5 = CALL db_find_i64(*($14), *(($0 + [80])), (int_64)-3617352132944662528, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$14 }
	$13 = CALL $56($14, $5)
	if ( ((int_32)*($13 + [120]) == (int_32)$14) ){ goto $label$14 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$14
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [8830])
	CALL $74(($6 + [256]), *($13 + [16]), (int_64)-4155580856058716144, (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8))
	$1 = *($6 + [256])
	if ( ((int_64)*(($13 + [96])) == (int_64)*($6 + [264])) ){ goto $label$18 }
	CALL eosio_assert([0], [10146])
	
.LABEL $label$18
	$7 = (int_64)
	if ( ((int_64)$7($1 - *($13 + [88]))) <= (int_64)-4611686018427387904) ){ goto $label$20 }
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$19 }
	CALL eosio_assert([0], [10216])
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [10194])
	
.LABEL $label$19
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)63)) ^ (int_32)[1]), [8866])
	CALL eosio_assert(((int_64)$7 > (int_64)*($13)), [8895])
	$1 = (uint_64)*(($3 + [8])) >> (uint_64)(int_64)8)
	$9 = *(($0 + [100]))
	$15 = *(($0 + [96]))
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$24 }
	
.LOOP $label$26:
	$5 = ($9 + [-24])
	$8 = *($5)
	if ( ((int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8) == (int_64)$1) ){ goto $label$25 }
	$9 = $5
	if ( ((int_32)$15 != (int_32)$5) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$25
	if ( ((int_32)$15 == (int_32)$9) ){ goto $label$24 }
	if ( ((int_32)*($8 + [120]) == (int_32)$14) ){ goto $label$23 }
	CALL eosio_assert([0], [10072])
	$1 = *($0)
	*($6 + [80]) = $3
	if ( $8 ){ goto $label$21 }
	goto $label$22 
	
.LABEL $label$24
	$8 = [0]
	$5 = CALL db_find_i64(*(($0 + [72])), *(($0 + [80])), (int_64)-3617352132944662528, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$23 }
	$8 = CALL $56($14, $5)
	if ( ((int_32)*($8 + [120]) == (int_32)$14) ){ goto $label$23 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$23
	$1 = *($0)
	*($6 + [80]) = $3
	if ( $8 ){ goto $label$21 }
	
.LABEL $label$22
	CALL eosio_assert([0], [10237])
	
.LABEL $label$21
	CALL $75($14, $8, $1, ($6 + [80]))
	*($6 + [248]) = *($6 + [384])
	CALL $76(($6 + [216]), $0, $4, ($6 + [248]))
	CALL eosio_assert((uint_64)(((int_64)*($6 + [216]) + (int_64)-2) <= (int_64)95), [8935])
	*($6 + [208]) = (int_64)-4155580855754841072
	$1 = *($6 + [224])
	if ( (int_64)($1 == 0) ){ goto $label$27 }
	*($6 + [208]) = $1
	CALL eosio_assert(((int_64)*($6 + [384]) != (int_64)$1), [8967])
	CALL eosio_assert(CALL $fimport$32(*($6 + [208])), [8990])
	
.LABEL $label$27
	$16 = ((float_64)((float_64)(float_64)98 / (float_64)((float_64)(CASTING float_64)(uint_32 *($6 + [216])) + (float_64)(float_64)-1)) * (float_64)(CASTING float_64)(int_64 *($3)))
	if ( ((float_64)(float_64)|$16| < (float_64)(float_64)9223372036854775808) ){ goto $label$29 }
	$17 = (int_64)-9223372036854775808
	goto $label$28 
	
.LABEL $label$29
	$17 = (Rounds 0)($16)
	
.LABEL $label$28
	$1 = *(($3 + [8]))
	if ( (uint_64)(((int_64)$17 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$30 }
	CALL eosio_assert([0], [9827])
	
.LABEL $label$30
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$33:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $1) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$32 }
	$2 = (uint_64)$1 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$1 & (int_64)65280) == (int_64)0) ){ goto $label$34 }
	$1 = $2
	$9 = $5
	$5 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$34
	$1 = $2
	
.LOOP $label$35:
	if ( ((int_64)((int_64)$1 & (int_64)65280) != (int_64)0) ){ goto $label$32 }
	$1 = (uint_64)$1 >> (uint_64)(int_64)8)
	$9 = ((int_32)$5 < (int_32)[6])
	$8 = ($5 + [1])
	$5 = $8
	if ( $9 ){ goto $label$35 }
	$5 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$33 }
	goto $label$31 
	
.LABEL $label$32
	CALL eosio_assert([0], [9876])
	
.LABEL $label$31
	$1 = *($3)
	$2 = *($13 + [104])
	*($6) = (PROMOTE float_64)(float_32 (DEMOTE float_32)(float_64 ((float_64)(CASTING float_64)(int_64 *($13 + [24])) / (float_64)(float_64)1e4)))
	$2 = ((uint_64)$7 / (uint_64)$2)
	*($6 + [8]) = (PROMOTE float_64)(float_32 (DEMOTE float_32)(float_64 ((float_64)(CASTING float_64)(uint_64 ((uint_64)((int_64)$1 * (int_64)$2) / (uint_64)$17)) / (float_64)(float_64)1e4)))
	CALL $26(($6 + [80]), [9014], $6)
	CALL eosio_assert((((uint_64)$2 >= (uint_64)$17) & ((int_64)*($3) >= (int_64)*($13 + [24]))), ($6 + [80]))
	$1 = *($0)
	*($6 + [56]) = $0
	*($6 + [68]) = $3
	*($6 + [60]) = ($6 + [384])
	*($6 + [64]) = ($6 + [208])
	*($6 + [72]) = ($6 + [216])
	*($6 + [424]) = $1
	$9 = ($0 + [152])
	if ( ((int_64)*($0 + [152]) == (int_64)CALL current_receiver()) ){ goto $label$36 }
	CALL eosio_assert([0], [10762])
	
.LABEL $label$36
	*($6 + [408]) = $9
	*($6 + [412]) = ($6 + [56])
	*($6 + [416]) = ($6 + [424])
	*(($5 = CALL $7([88])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = $9
	CALL $77(($6 + [408]), $5)
	*($6 + [48]) = $5
	$1 = *($5)
	*($6 + [408]) = $1
	$8 = *($5 + [76])
	*($6 + [40]) = $8
	$13 = ($0 + [180])
	$9 = *($13)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [184]))) ){ goto $label$39 }
	*($9 + [8]) = $1
	*($9 + [16]) = $8
	*($6 + [48]) = [0]
	*($9) = $5
	*($13) = ($9 + [24])
	$5 = *($6 + [48])
	*($6 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$37 }
	goto $label$38 
	
.LABEL $label$39
	CALL $78(($0 + [176]), ($6 + [48]), ($6 + [408]), ($6 + [40]))
	$5 = *($6 + [48])
	*($6 + [48]) = [0]
	if ( ($5 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$40 }
	CALL $9(*(($5 + [56])))
	
.LABEL $label$40
	CALL $9($5)
	
.LABEL $label$37
	$5 = CALL $15([8690])
	if ( ($5 <= [8]) ){ goto $label$44 }
	CALL eosio_assert([0], [9729])
	goto $label$43 
	
.LABEL $label$44
	if ( ($5 == 0) ){ goto $label$42 }
	
.LABEL $label$43
	$1 = (int_64)0
	
.LOOP $label$45:
	$9 = *(($5 + [8689]))
	if ( ((($9 + [-65]) & [255]) <= [26]) ){ goto $label$46 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$46
	$1 = ((int_64)((int_64)$1 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $9) << (int_64)56) >> (int_64)56))
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$45 }
	$1 = ((int_64)$1 << (int_64)8)
	goto $label$41 
	
.LABEL $label$42
	$1 = (int_64)0
	
.LABEL $label$41
	if ( ((int_64)*(($3 + [8])) != (int_64)((int_64)$1 | (int_64)4)) ){ goto $label$50 }
	*($6 + [48]) = CALL current_time()
	$4 = ($0 + [112])
	$1 = *($6 + [248])
	$9 = *(($0 + [140]))
	$13 = *(($0 + [136]))
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$52 }
	
.LOOP $label$54:
	$5 = ($9 + [-24])
	$8 = *($5)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$53 }
	$9 = $5
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$54 }
	goto $label$52 
	
.LABEL $label$53
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$52 }
	if ( ((int_32)*($8 + [88]) == (int_32)$4) ){ goto $label$51 }
	CALL eosio_assert([0], [10072])
	goto $label$51 
	
.LABEL $label$52
	$8 = [0]
	$5 = CALL db_find_i64(*($4), *(($0 + [120])), (int_64)-6030912129794572288, $1)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$51 }
	$8 = CALL $79($4, $5)
	if ( ((int_32)*($8 + [88]) == (int_32)$4) ){ goto $label$51 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$51
	$9 = *(($0 + [60]))
	$13 = *(($0 + [56]))
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$56 }
	
.LOOP $label$58:
	$5 = ($9 + [-24])
	$15 = *($5)
	if ( ((int_64)*($15) == (int_64)108) ){ goto $label$57 }
	$9 = $5
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$58 }
	goto $label$56 
	
.LABEL $label$57
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$56 }
	if ( ((int_32)*($15 + [16]) == (int_32)$12) ){ goto $label$59 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$59
	*($6 + [44]) = $15
	goto $label$55 
	
.LABEL $label$56
	$5 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7235159550150574080, (int_64)108)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$60 }
	$5 = CALL $53($12, $5)
	if ( ((int_32)*($5 + [16]) == (int_32)$12) ){ goto $label$61 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$61
	*($6 + [44]) = $5
	goto $label$55 
	
.LABEL $label$60
	*($6 + [44]) = [0]
	
.LABEL $label$55
	*($6 + [40]) = $12
	$9 = *(($0 + [60]))
	$13 = *(($0 + [56]))
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$63 }
	
.LOOP $label$65:
	$5 = ($9 + [-24])
	$15 = *($5)
	if ( ((int_64)*($15) == (int_64)109) ){ goto $label$64 }
	$9 = $5
	if ( ((int_32)$13 != (int_32)$5) ){ goto $label$65 }
	goto $label$63 
	
.LABEL $label$64
	if ( ((int_32)$13 == (int_32)$9) ){ goto $label$63 }
	if ( ((int_32)*($15 + [16]) == (int_32)$12) ){ goto $label$66 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$66
	*($6 + [36]) = $15
	*($6 + [32]) = $12
	$1 = *($0)
	if ( $8 ){ goto $label$49 }
	goto $label$62 
	
.LABEL $label$63
	$5 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7235159550150574080, (int_64)109)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$67 }
	$5 = CALL $53($12, $5)
	if ( ((int_32)*($5 + [16]) == (int_32)$12) ){ goto $label$68 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$68
	*($6 + [36]) = $5
	*($6 + [32]) = $12
	$1 = *($0)
	if ( ($8 == 0) ){ goto $label$62 }
	goto $label$49 
	
.LABEL $label$67
	*($6 + [36]) = [0]
	*($6 + [32]) = $12
	$1 = *($0)
	if ( $8 ){ goto $label$49 }
	
.LABEL $label$62
	*($6 + [60]) = $3
	*($6 + [56]) = ($6 + [248])
	*($6 + [64]) = ($6 + [48])
	*($6 + [68]) = ($6 + [40])
	*($6 + [72]) = ($6 + [32])
	*($6 + [424]) = $1
	if ( ((int_64)*($4) == (int_64)CALL current_receiver()) ){ goto $label$69 }
	CALL eosio_assert([0], [10762])
	
.LABEL $label$69
	*($6 + [408]) = $4
	*($6 + [412]) = ($6 + [56])
	*($6 + [416]) = ($6 + [424])
	*(($5 = CALL $7([104])) + [16]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = $4
	CALL $80(($6 + [408]), $5)
	*($6 + [400]) = $5
	$1 = *($5)
	*($6 + [408]) = $1
	$8 = *($5 + [92])
	*($6 + [396]) = $8
	$13 = ($0 + [140])
	$9 = *($13)
	if ( ((uint_32)$9 >= (uint_32)*(($0 + [144]))) ){ goto $label$71 }
	*($9 + [8]) = $1
	*($9 + [16]) = $8
	*($6 + [400]) = [0]
	*($9) = $5
	*($13) = ($9 + [24])
	$5 = *($6 + [400])
	*($6 + [400]) = [0]
	if ( ($5 == 0) ){ goto $label$50 }
	goto $label$70 
	
.LABEL $label$71
	CALL $81(($0 + [136]), ($6 + [400]), ($6 + [408]), ($6 + [396]))
	$5 = *($6 + [400])
	*($6 + [400]) = [0]
	if ( ($5 == 0) ){ goto $label$50 }
	
.LABEL $label$70
	CALL $9($5)
	
.LABEL $label$50
	if ( ((*($6 + [232]) & [1]) == 0) ){ goto $label$47 }
	goto $label$48 
	
.LABEL $label$49
	*($6 + [56]) = $3
	*($6 + [60]) = ($6 + [40])
	*($6 + [64]) = ($6 + [48])
	*($6 + [68]) = ($6 + [32])
	CALL $82($4, $8, $1, ($6 + [56]))
	if ( ((*($6 + [232]) & [1]) == 0) ){ goto $label$47 }
	
.LABEL $label$48
	CALL $9(*(($6 + [240])))
	
.LABEL $label$47
	$5 = *($11 + [28])
	if ( ($5 == 0) ){ goto $label$72 }
	*(($11 + [32])) = $5
	CALL $9($5)
	
.LABEL $label$72
	$5 = *($11 + [16])
	if ( ($5 == 0) ){ goto $label$73 }
	*(($11 + [20])) = $5
	CALL $9($5)
	
.LABEL $label$73
	CALL $83(($6 + [320]))
	$10
	
.LABEL $label$1
	$global$0 = ($6 + [432])
}

void .FUNC $65 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = *($1)
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [16]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10428])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [8]) + (int_64)*($3))
	*($1 + [8]) = $7
	if ( ((int_64)$7 <= (int_64)-4611686018427387904) ){ goto $label$8 }
	if ( ((int_64)$7 >= (int_64)4611686018427387904) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	CALL eosio_assert([0], [10471])
	if ( ((int_64)*(($1 + [8])) < (int_64)4611686018427387904) ){ goto $label$6 }
	
.LABEL $label$7
	CALL eosio_assert([0], [10490])
	if ( ((int_64)$6 != (int_64)*($1)) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$4 }
	
.LABEL $label$5
	CALL eosio_assert([0], [10369])
	
.LABEL $label$4
	$9 = *($1 + [52])
	$8 = *(($1 + [56]))
	$10 = ($8 - $9)
	$7 = (CASTING uint_64)(uint_32 int_32($10 >> [4]))
	$3 = [49]
	
.LOOP $label$9:
	$3 = ($3 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$9 }
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$10 }
	$3 = (($10 & [-16]) + $3)
	
.LABEL $label$10
	if ( ($3 <= [513]) ){ goto $label$12 }
	$4 = CALL $1($3)
	goto $label$11 
	
.LABEL $label$12
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$11
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $190($5, $1)
	CALL db_update_i64(*($1 + [68]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$15 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL $2($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$13 }
	
.LABEL $label$14
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$13
	$global$0 = ($5 + [16])
}

void .FUNC $64 (int_64 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [16]) = [0]
	*($4 + [8]) = (int_64)0
	$5 = [0]
	$6 = [0]
	$7 = [0]
	$8 = (*($2 + [4]) - *($2))
	if ( ($8 == 0) ){ goto $label$2 }
	$5 = int_32($8 >> [4])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$1 }
	$7 = CALL $7($8)
	$5 = ($7 + ($5 << [4]))
	*(($4 + [16])) = $5
	*($4 + [8]) = $7
	*($4 + [12]) = $7
	$6 = *($2)
	$2 = (*(($2 + [4])) - $6)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($7, $6, $2)
	$6 = ($7 + $2)
	*($4 + [12]) = $6
	goto $label$2 
	
.LABEL $label$3
	$6 = $7
	
.LABEL $label$2
	*(($4 + [44])) = $6
	*(($4 + [48])) = $5
	*(($4 + [16])) = [0]
	*((($4 + [24]) + [36])) = [0]
	*($4 + [32]) = $1
	*($4 + [24]) = $0
	*($4 + [40]) = $7
	*($4 + [8]) = (int_64)0
	*($4 + [52 align=4]) = (int_64)0
	$7 = *($3 + [32])
	$2 = ( *(($3 + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($2 + [32])
	$0 = (CASTING uint_64)(uint_32 $2)
	$2 = ($4 + [52])
	
.LOOP $label$4:
	$7 = ($7 + [1])
	$0 = (uint_64)$0 >> (uint_64)(int_64)7
	if ( ((int_64)$0) != (int_64)0) ){ goto $label$4 }
	if ( ($7 == 0) ){ goto $label$6 }
	CALL $88($2, $7)
	$2 = *(($4 + [56]))
	$7 = *(($4 + [52]))
	goto $label$5 
	
.LABEL $label$6
	$2 = [0]
	$7 = [0]
	
.LABEL $label$5
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = $2
	*($4 + [80]) = ($4 + [64])
	*($4 + [88]) = $3
	CALL $204(($4 + [88]), ($4 + [80]))
	CALL $90(($4 + [24]))
	$7 = *($4 + [52])
	if ( ($7 == 0) ){ goto $label$7 }
	*(($4 + [56])) = $7
	CALL $9($7)
	
.LABEL $label$7
	$7 = *($4 + [40])
	if ( ($7 == 0) ){ goto $label$8 }
	*(($4 + [44])) = $7
	CALL $9($7)
	
.LABEL $label$8
	$7 = *($4 + [8])
	if ( ($7 == 0) ){ goto $label$9 }
	*($4 + [12]) = $7
	CALL $9($7)
	
.LABEL $label$9
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$1
	CALL $44(($4 + [8]))
}

void .FUNC $67 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	*($1 + [32]) = *(*($3))
	$7 = *($1 + [52])
	$6 = *(($1 + [56]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	$10 = *($1)
	$3 = [49]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $1($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $190($5, $1)
	CALL db_update_i64(*($1 + [68]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($4)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $66 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	*($2 + [8]) = $1
	CALL require_auth(*($0))
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)111) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$7 = CALL $53($3, CALL $fimport$26(*($3), *(($0 + [40])), (int_64)7235159550150574080, (int_64)111))
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	$3 = ($0 + [232])
	$1 = *($7 + [8])
	$5 = *(($0 + [260]))
	$4 = *(($0 + [256]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$7 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($7 + [64]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	goto $label$5 
	
.LABEL $label$6
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [240])), (int_64)-4812882490098188288, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$7 = CALL $63($3, $6)
	if ( ((int_32)*($7 + [64]) == (int_32)$3) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [8650])
	$1 = *($0)
	*($2) = ($2 + [8])
	if ( $7 ){ goto $label$9 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$9
	CALL $67($3, $7, $1, $2)
	$global$0 = ($2 + [16])
}

void .FUNC $61 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$2 = ($global$0 - [32])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = CALL $15([8690])
	if ( ($3 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9729])
	goto $label$3 
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$4 = (int_64)0
	
.LOOP $label$5:
	$5 = *(($3 + [8689]))
	if ( ((($5 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$6
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56))
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$5 }
	$4 = ((int_64)((int_64)$4 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$4 = (int_64)4
	
.LABEL $label$1
	$6 = *($1 + [8])
	CALL eosio_assert(((int_64)$6 == (int_64)$4), [8694])
	$5 = [0]
	if ( ((uint_64)((int_64)*($1) + (int_64)4611686018427387903) > (uint_64)(int_64)9223372036854775806) ){ goto $label$7 }
	$4 = (uint_64)$6 >> (uint_64)(int_64)8)
	$3 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$6 = (uint_64)$4 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$4 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$4 = $6
	$5 = [1]
	$7 = $3
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$4 = $6
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$4 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8)
	$5 = ((int_32)$3 < (int_32)[6])
	$7 = ($3 + [1])
	$3 = $7
	if ( $5 ){ goto $label$11 }
	$5 = [1]
	$3 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$5 = [0]
	
.LABEL $label$7
	CALL eosio_assert($5, [8717])
	$6 = *(($1 + [8]))
	*((($2 + [16]) + [8])) = $6
	$4 = *($1)
	*(($2 + [8])) = $6
	*($2) = $4
	*($2 + [16]) = $4
	CALL $62($0, $2)
	$global$0 = ($2 + [32])
}

void .FUNC $60 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $63 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10123])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([80])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [52 align=4]) = (int_64)0
	*($5 + [60]) = [0]
	*($5 + [64]) = $0
	CALL $187(($3 + [32]), $5)
	*($5 + [68]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $120(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$4 = *($1 + [52])
	if ( ($4 == 0) ){ goto $label$11 }
	*(($1 + [56])) = $4
	CALL $9($4)
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $62 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [112])
	$global$0 = $2
	if ( ((int_64)*($1) < (int_64)1) ){ goto $label$2 }
	$3 = ($0 + [32])
	$5 = *(($0 + [60]))
	$4 = *(($0 + [56]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	
.LOOP $label$7:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)111) ){ goto $label$6 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$5 }
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [10072])
	$8 = *($7 + [8])
	if ( ((int_64)($8 == 0) == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = CALL $53($3, CALL $fimport$26(*($3), *(($0 + [40])), (int_64)7235159550150574080, (int_64)111))
	if ( ((int_32)*($7 + [16]) == (int_32)$3) ){ goto $label$4 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$4
	$8 = *($7 + [8])
	if ( (int_64)($8 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = ($0 + [232])
	$5 = *(($0 + [260]))
	$4 = *(($0 + [256]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$11:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$8) ){ goto $label$10 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$9 }
	if ( ((int_32)*($7 + [64]) == (int_32)$3) ){ goto $label$8 }
	CALL eosio_assert([0], [10072])
	goto $label$8 
	
.LABEL $label$9
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [240])), (int_64)-4812882490098188288, $8)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$8 }
	$7 = CALL $63($3, $6)
	if ( ((int_32)*($7 + [64]) == (int_32)$3) ){ goto $label$8 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$8
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [8650])
	if ( (*($7 + [48]) == 0) ){ goto $label$1 }
	
.LABEL $label$2
	$global$0 = ($2 + [112])
	return 
	
.LABEL $label$1
	*(($2 + [40])) = [0]
	*(($2 + [24])) = *(($1 + [8]))
	*($2 + [8]) = (int_64)-4155580855816477824
	*($2) = (int_64)-4155580856058716144
	*($2 + [32]) = (int_64)0
	*($2 + [16]) = *($1)
	$5 = ($2 + [32])
	$6 = CALL $15([9185])
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$12 }
	$4 = ($2 + [16])
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$15 }
	*(($2 + [32])) = ($6 << [1])
	$9 = ($5 + [1])
	if ( $6 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$10 = (($6 + [16]) & [-16])
	$9 = CALL $7($10)
	*(($2 + [40])) = $9
	*(($2 + [36])) = $6
	*($2 + [32]) = ($10 | [1])
	
.LABEL $label$14
	CALL memcpy($9, [9185], $6)
	
.LABEL $label$13
	*(($9 + $6)) = [0]
	*(($6 = CALL $7([16]))) = (int_64)-4155580856058716144
	*($6 + [8]) = (int_64)3617214756542218240
	*(($2 + [72])) = *(($4 + [8]))
	*(($9 = (($2 + [48]) + [40]))) = *(($5 + [8]))
	$8 = *($5)
	*(($2 + [32])) = (int_64)0
	*($2 + [96]) = $6
	$6 = ($6 + [16])
	*($2 + [104]) = $6
	*($2 + [100]) = $6
	*($2 + [48]) = *($2)
	*($2 + [56]) = *(($2 + [8]))
	*($2 + [64]) = *($4)
	*($2 + [80]) = $8
	*(($2 + [40])) = [0]
	CALL $64((int_64)6138663591592764928, (int_64)-3617168760277827584, ($2 + [96]), ($2 + [48]))
	if ( ((*($2 + [80]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*($9))
	
.LABEL $label$16
	$6 = *($2 + [96])
	if ( ($6 == 0) ){ goto $label$17 }
	*($2 + [100]) = $6
	CALL $9($6)
	
.LABEL $label$17
	if ( ((*(($2 + [32])) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*(($2 + [40])))
	
.LABEL $label$18
	$8 = *($0)
	*($2 + [48]) = $1
	if ( $7 ){ goto $label$19 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$19
	CALL $65($3, $7, $8, ($2 + [48]))
	$global$0 = ($2 + [112])
	return (unreachable)
	
.LABEL $label$12
	CALL $29($5)
}

int_32 .FUNC $1 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$4 }
	$1 = uint_32($0 >> [16])
	$2 = (*([0] + [8204]) + $1)
	*([0] + [8204]) = $2
	$3 = *([0] + [8196])
	$0 = ((($3 + $0) + [7]) & [-8])
	*([0] + [8196]) = $0
	if ( ((uint_32)($2 << [16]) <= (uint_32)$0) ){ goto $label$3 }
	if ( ((int_32)$1 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	*([0] + [8204]) = ($2 + [1])
	if ( ((int_32)($1 + [1]) != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [8233])
	return $3
	
.LABEL $label$1
	return $3
}

void .FUNC $89 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$5 = ($4 + [24])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$0 = *(($1 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	$0 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $0
	*($2 + [8]) = *(($4 + [32]))
	if ( ((int_32)(*(($1 + [8])) - $0) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, ($2 + [8]), [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $88 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $3) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$5 = ($3 - $4)
	$6 = ($5 + $1)
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$3 }
	$7 = [2147483647]
	$2 = ($2 - $4)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$2 = ($2 << [1])
	$7 = ( $6 ? $2 : ($2 <= $6) )
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $7($7)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($3) = [0]
	$3 = (*($0) + [1])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$7 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	$7 = ($2 + $7)
	$4 = (($3 + $1) - $4)
	$5 = ($2 + $5)
	$3 = $5
	
.LOOP $label$8:
	*($3) = [0]
	$3 = ($3 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$4 = ($2 + $4)
	$1 = *($0)
	$6 = ($0 + [4])
	$3 = (*($6) - $1)
	$2 = ($5 - $3)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($2, $1, $3)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $2
	*($6) = $4
	*(($0 + [8])) = $7
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $9($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

void .FUNC $87 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($0 + [8]) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*(($0 + [24])) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = [0]
	CALL $46($3, $2, [45])
	CALL eosio_assert(((uint_32)((int_32)(*($3 + [4]) - *($3)) / (int_32)[12]) > (uint_32)[1]), [10538])
	*($0) = (CASTING int_64)(int_32 CALL $37(*($3), [0], [10]))
	CALL $31(($0 + [8]), (*($3) + [12]))
	CALL $31(($0 + [20]), (*($3) + [24]))
	$4 = *($3)
	if ( ($4 == 0) ){ goto $label$1 }
	$2 = *($3 + [4])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$3 }
	
.LOOP $label$4:
	$0 = ($2 + [-12])
	if ( ((*($0) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($2 + [-4])))
	
.LABEL $label$5
	$2 = $0
	if ( ((int_32)$4 != (int_32)$0) ){ goto $label$4 }
	$0 = *($3)
	goto $label$2 
	
.LABEL $label$3
	$0 = $4
	
.LABEL $label$2
	*($3 + [4]) = $4
	CALL $9($0)
	
.LABEL $label$1
	$global$0 = ($3 + [16])
}

int_32 .FUNC $86 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10123])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([88])) + [16]) = (int_64)0
	*($5 + [8]) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [48 align=4]) = (int_64)0
	*($5 + [56]) = [0]
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = $0
	CALL $203(($3 + [32]), $5)
	*($5 + [76]) = $1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $78(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [56])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $85 (int_32 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_32 $14
	int_64 $15
	int_64 $16
	float_64 $17
	int_64 $18
	int_64 $19
	int_32 $20
	int_32 $21
	int_32 $22
	$3 = ($global$0 - [368])
	$global$0 = $3
	*($3 + [328]) = [9048]
	*($3 + [332]) = CALL $15([9048])
	*($3 + [40]) = *($3 + [328])
	CALL $73(($3 + [48]), ($3 + [40]))
	CALL require_auth2((int_64)-4155580689349431776, (int_64)5445027871351373824)
	$4 = ($0 + [152])
	$6 = *(($0 + [180]))
	$5 = *(($0 + [176]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [72]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [160])), (int_64)4229865212519383040, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $86($4, $7)
	if ( ((int_32)*($8 + [72]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	$9 = [0]
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9053])
	$10 = ($0 + [72])
	$11 = (uint_64)*(($8 + [32])) >> (uint_64)(int_64)8)
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	
.LOOP $label$8:
	$7 = ($6 + [-24])
	$12 = *($7)
	if ( ((int_64)(uint_64)*($12 + [8]) >> (uint_64)(int_64)8) == (int_64)$11) ){ goto $label$7 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$6 }
	if ( ((int_32)*($12 + [120]) == (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$9
	$9 = $12
	goto $label$5 
	
.LABEL $label$6
	$7 = CALL db_find_i64(*($10), *(($0 + [80])), (int_64)-3617352132944662528, $11)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $56($10, $7)
	if ( ((int_32)*($9 + [120]) == (int_32)$10) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [9076])
	$11 = *($0)
	$13 = *($9 + [16])
	*(($3 + [288])) = [0]
	*($3 + [280]) = (int_64)0
	$7 = CALL $15([9101])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$12 }
	$14 = ($8 + [24])
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$15 }
	*($3 + [280]) = ($7 << [1])
	$6 = (($3 + [280]) | [1])
	if ( $7 ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $7($5)
	*($3 + [280]) = ($5 | [1])
	*($3 + [288]) = $6
	*($3 + [284]) = $7
	
.LABEL $label$14
	CALL memcpy($6, [9101], $7)
	
.LABEL $label$13
	*(($6 + $7)) = [0]
	*(($6 = (($3 + [312]) + [8]))) = *(($14 + [8]))
	*($3 + [312]) = *($14)
	$5 = *($3 + [288])
	*($3 + [288]) = [0]
	$15 = *($3 + [280])
	*($3 + [280]) = (int_64)0
	$16 = *($0)
	*(($7 = CALL $7([16]))) = $11
	*($7 + [8]) = (int_64)3617214756542218240
	*(($12 = ($3 + [88]))) = $5
	*(($3 + [72])) = *($6)
	*($3 + [168]) = $7
	*($3 + [48]) = $16
	*($3 + [56]) = (int_64)-4155580856058716144
	*($3 + [80]) = $15
	$7 = ($7 + [16])
	*($3 + [176]) = $7
	*($3 + [172]) = $7
	*($3 + [64]) = *($3 + [312])
	CALL $64($13, (int_64)-3617168760277827584, ($3 + [168]), ($3 + [48]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*($12))
	
.LABEL $label$16
	$7 = *($3 + [168])
	if ( ($7 == 0) ){ goto $label$17 }
	*($3 + [172]) = $7
	CALL $9($7)
	
.LABEL $label$17
	if ( ((*($3 + [280]) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*(($3 + [288])))
	
.LABEL $label$18
	CALL $87(($3 + [280]), $0, $2)
	$16 = *($3 + [280])
	$11 = *(($8 + [32]))
	*($3 + [272]) = $11
	*($3 + [264]) = (int_64)0
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$21:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$20 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$22 }
	$11 = $13
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$22
	$11 = $13
	
.LOOP $label$23:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$20 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$23 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$21 }
	goto $label$19 
	
.LABEL $label$20
	CALL eosio_assert([0], [9876])
	
.LABEL $label$19
	$2 = ($0 + [32])
	$6 = *(($0 + [60]))
	$12 = *(($0 + [56]))
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$25 }
	
.LOOP $label$27:
	$7 = ($6 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)115) ){ goto $label$26 }
	$6 = $7
	if ( ((int_32)$12 != (int_32)$7) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$25 }
	if ( ((int_32)*($5 + [16]) == (int_32)$2) ){ goto $label$24 }
	CALL eosio_assert([0], [10072])
	goto $label$24 
	
.LABEL $label$25
	$5 = CALL $53($2, CALL $fimport$26(*($2), *(($0 + [40])), (int_64)7235159550150574080, (int_64)115))
	if ( ((int_32)*($5 + [16]) == (int_32)$2) ){ goto $label$24 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$24
	$12 = [0]
	if ( ((int_64)*($5 + [8]) != (int_64)1) ){ goto $label$28 }
	$11 = ((int_64)$16 + (int_64)-66)
	if ( ((uint_64)$11 > (uint_64)(int_64)33) ){ goto $label$28 }
	$12 = (CASTING uint_32)(uint_64 ((int_64)(uint_64)(int_64)8594128897 >> (uint_64)((int_64)$11 & (int_64)17179869183)) & (int_64)1))
	
.LABEL $label$28
	$11 = *($8 + [40])
	if ( ((uint_64)$16 >= (uint_64)$11) ){ goto $label$10 }
	$17 = ((float_64)((float_64)(float_64)98 / (float_64)((float_64)(CASTING float_64)(uint_32 ((CASTING uint_32)(uint_64 $11) & [255])) + (float_64)(float_64)-1)) * (float_64)(CASTING float_64)(int_64 *(($8 + [24]))))
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)9223372036854775808) ){ goto $label$30 }
	$18 = (int_64)-9223372036854775808
	goto $label$29 
	
.LABEL $label$30
	$18 = (Rounds 0)($17)
	
.LABEL $label$29
	$19 = *(($8 + [32]))
	if ( (uint_64)(((int_64)$18 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$31 }
	CALL eosio_assert([0], [9827])
	
.LABEL $label$31
	$7 = [0]
	$13 = (uint_64)$19 >> (uint_64)(int_64)8
	$11 = $13)
	
.LOOP $label$34:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$33 }
	$15 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$35 }
	$11 = $15
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$35
	$11 = $15
	
.LOOP $label$36:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$33 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$36 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	CALL eosio_assert([0], [9876])
	
.LABEL $label$32
	*(($20 = ($3 + [272]))) = $19
	*($3 + [264]) = $18
	if ( ($12 == 0) ){ goto $label$37 }
	$17 = ((float_64)(CASTING float_64)(int_64 $18) * (float_64)(float_64)1.1)
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)9223372036854775808) ){ goto $label$39 }
	$15 = (int_64)-9223372036854775808
	goto $label$38 
	
.LABEL $label$39
	$15 = (Rounds 0)($17)
	
.LABEL $label$38
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$40 }
	CALL eosio_assert([0], [9827])
	
.LABEL $label$40
	$7 = [0]
	
.LOOP $label$43:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $13) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$42 }
	$11 = (uint_64)$13 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$13 & (int_64)65280) == (int_64)0) ){ goto $label$44 }
	$13 = $11
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$44
	$13 = $11
	
.LOOP $label$45:
	if ( ((int_64)((int_64)$13 & (int_64)65280) != (int_64)0) ){ goto $label$42 }
	$13 = (uint_64)$13 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$45 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$43 }
	goto $label$41 
	
.LABEL $label$42
	CALL eosio_assert([0], [9876])
	
.LABEL $label$41
	*(($3 + [272])) = $19
	*($3 + [264]) = $15
	
.LABEL $label$37
	$11 = *($0)
	*(($6 = ($3 + [72]))) = [0]
	$13 = *($8 + [8])
	*((($3 + [168]) + [32])) = *($20)
	*($3 + [176]) = $1
	*($3 + [168]) = $11
	*($3 + [48]) = (int_64)-4155580856058716144
	*($3 + [64]) = (int_64)0
	*($3 + [192]) = *($3 + [264])
	*($3 + [56]) = (int_64)-6215714484557185024
	*($3 + [184]) = $13
	*(($7 = CALL $7([16]))) = $11
	*($7 + [8]) = (int_64)3617214756542218240
	*(($3 + [84])) = [0]
	$5 = ($7 + [16])
	*($6) = $5
	*(($3 + [68])) = $5
	*($3 + [64]) = $7
	*($3 + [76 align=4]) = (int_64)0
	CALL $88(($3 + [76]), [40])
	$5 = (($3 + [48]) + [32])
	$7 = *($5)
	$6 = *($3 + [76])
	*($3 + [156]) = $6
	*($3 + [152]) = $6
	*($3 + [160]) = $7
	*($3 + [144]) = ($3 + [152])
	*($3 + [344]) = ($3 + [168])
	CALL $89(($3 + [344]), ($3 + [144]))
	CALL $90(($3 + [48]))
	$7 = *($3 + [76])
	if ( ($7 == 0) ){ goto $label$46 }
	*($5) = $7
	CALL $9($7)
	
.LABEL $label$46
	$7 = *($3 + [64])
	if ( ($7 == 0) ){ goto $label$47 }
	*(($3 + [68])) = $7
	CALL $9($7)
	
.LABEL $label$47
	$11 = *($0)
	*($3 + [48]) = ($3 + [264])
	if ( $9 ){ goto $label$48 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$48
	CALL $91($10, $9, $11, ($3 + [48]))
	$7 = CALL $15([8690])
	if ( ($7 <= [8]) ){ goto $label$51 }
	CALL eosio_assert([0], [9729])
	goto $label$50 
	
.LABEL $label$51
	if ( ($7 == 0) ){ goto $label$49 }
	
.LABEL $label$50
	$11 = (int_64)0
	
.LOOP $label$52:
	$6 = *(($7 + [8689]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$53 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$53
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$52 }
	$11 = ((int_64)$11 << (int_64)8)
	goto $label$11 
	
.LABEL $label$49
	$11 = (int_64)0
	goto $label$11 
	
.LABEL $label$12
	CALL $29(($3 + [280]))
	
.LABEL $label$11
	if ( ((int_64)*(($8 + [32])) != (int_64)((int_64)$11 | (int_64)4)) ){ goto $label$10 }
	$11 = *(($8 + [8]))
	if ( ((int_64)$11 == (int_64)-4155580622883343856) ){ goto $label$10 }
	$21 = ($0 + [112])
	$6 = *(($0 + [140]))
	$20 = *(($0 + [136]))
	if ( ((int_32)$20 == (int_32)$6) ){ goto $label$55 }
	
.LOOP $label$57:
	$7 = ($6 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)$11) ){ goto $label$56 }
	$6 = $7
	if ( ((int_32)$20 != (int_32)$7) ){ goto $label$57 }
	goto $label$55 
	
.LABEL $label$56
	if ( ((int_32)$20 == (int_32)$6) ){ goto $label$55 }
	if ( ((int_32)*($5 + [88]) == (int_32)$21) ){ goto $label$54 }
	CALL eosio_assert([0], [10072])
	goto $label$54 
	
.LABEL $label$55
	$5 = [0]
	$7 = CALL db_find_i64(*($21), *(($0 + [120])), (int_64)-6030912129794572288, $11)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$54 }
	$5 = CALL $79($21, $7)
	if ( ((int_32)*($5 + [88]) == (int_32)$21) ){ goto $label$54 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$54
	$6 = *(($0 + [60]))
	$20 = *(($0 + [56]))
	if ( ((int_32)$20 == (int_32)$6) ){ goto $label$59 }
	
.LOOP $label$61:
	$7 = ($6 + [-24])
	$22 = *($7)
	if ( ((int_64)*($22) == (int_64)108) ){ goto $label$60 }
	$6 = $7
	if ( ((int_32)$20 != (int_32)$7) ){ goto $label$61 }
	goto $label$59 
	
.LABEL $label$60
	if ( ((int_32)$20 == (int_32)$6) ){ goto $label$59 }
	if ( ((int_32)*($22 + [16]) == (int_32)$2) ){ goto $label$62 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$62
	*($3 + [172]) = $22
	goto $label$58 
	
.LABEL $label$59
	$7 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7235159550150574080, (int_64)108)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$63 }
	$7 = CALL $53($2, $7)
	if ( ((int_32)*($7 + [16]) == (int_32)$2) ){ goto $label$64 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$64
	*($3 + [172]) = $7
	goto $label$58 
	
.LABEL $label$63
	*($3 + [172]) = [0]
	
.LABEL $label$58
	*($3 + [168]) = $2
	$6 = *(($0 + [60]))
	$20 = *(($0 + [56]))
	if ( ((int_32)$20 == (int_32)$6) ){ goto $label$66 }
	
.LOOP $label$68:
	$7 = ($6 + [-24])
	$22 = *($7)
	if ( ((int_64)*($22) == (int_64)109) ){ goto $label$67 }
	$6 = $7
	if ( ((int_32)$20 != (int_32)$7) ){ goto $label$68 }
	goto $label$66 
	
.LABEL $label$67
	if ( ((int_32)$20 == (int_32)$6) ){ goto $label$66 }
	if ( ((int_32)*($22 + [16]) == (int_32)$2) ){ goto $label$69 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$69
	*($3 + [156]) = $22
	goto $label$65 
	
.LABEL $label$66
	$7 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7235159550150574080, (int_64)109)
	if ( ((int_32)$7 <= (int_32)[-1]) ){ goto $label$70 }
	$7 = CALL $53($2, $7)
	if ( ((int_32)*($7 + [16]) == (int_32)$2) ){ goto $label$71 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$71
	*($3 + [156]) = $7
	goto $label$65 
	
.LABEL $label$70
	*($3 + [156]) = [0]
	
.LABEL $label$65
	*($3 + [152]) = $2
	$11 = *($0)
	*($3 + [52]) = ($3 + [168])
	*($3 + [48]) = ($3 + [264])
	*($3 + [56]) = ($3 + [152])
	if ( $5 ){ goto $label$72 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$72
	CALL $92($21, $5, $11, ($3 + [48]))
	
.LABEL $label$10
	CALL $93($0, $14)
	$11 = *($0)
	*($3 + [48]) = $8
	if ( $9 ){ goto $label$73 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$73
	CALL $94($10, $9, $11, ($3 + [48]))
	$17 = ((float_64)(CASTING float_64)(int_64 *(($8 + [24]))) * (float_64)(float_64)0.006)
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)9223372036854775808) ){ goto $label$75 }
	$15 = (int_64)-9223372036854775808
	goto $label$74 
	
.LABEL $label$75
	$15 = (Rounds 0)($17)
	
.LABEL $label$74
	$18 = *(($8 + [32]))
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$76 }
	CALL eosio_assert([0], [9827])
	
.LABEL $label$76
	$11 = (uint_64)$18 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$79:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$78 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$80 }
	$11 = $13
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$79 }
	goto $label$77 
	
.LABEL $label$80
	$11 = $13
	
.LOOP $label$81:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$78 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$81 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$79 }
	goto $label$77 
	
.LABEL $label$78
	CALL eosio_assert([0], [9876])
	
.LABEL $label$77
	$11 = *($0)
	*((($3 + [168]) + [24])) = $18
	*(($6 = (($3 + [48]) + [24]))) = [0]
	*($3 + [176]) = $1
	*($3 + [168]) = $11
	*($3 + [184]) = $15
	*($3 + [48]) = (int_64)-4155580856058716144
	*($3 + [56]) = (int_64)-6215926882680963072
	*($3 + [64]) = (int_64)0
	*(($7 = CALL $7([16]))) = $11
	*($7 + [8]) = (int_64)3617214756542218240
	*(($3 + [84])) = [0]
	$5 = ($7 + [16])
	*($6) = $5
	*(($3 + [68])) = $5
	*($3 + [64]) = $7
	*($3 + [76 align=4]) = (int_64)0
	CALL $88(($3 + [76]), [32])
	$5 = (($3 + [48]) + [32])
	$7 = *($5)
	$6 = *($3 + [76])
	*($3 + [156]) = $6
	*($3 + [152]) = $6
	*($3 + [160]) = $7
	*($3 + [144]) = ($3 + [152])
	*($3 + [344]) = ($3 + [168])
	CALL $95(($3 + [344]), ($3 + [144]))
	CALL $90(($3 + [48]))
	$7 = *($3 + [76])
	if ( ($7 == 0) ){ goto $label$82 }
	*($5) = $7
	CALL $9($7)
	
.LABEL $label$82
	$7 = *($3 + [64])
	if ( ($7 == 0) ){ goto $label$83 }
	*(($3 + [68])) = $7
	CALL $9($7)
	
.LABEL $label$83
	$17 = ((float_64)(CASTING float_64)(int_64 *(($8 + [24]))) * (float_64)(float_64)0.006)
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)9223372036854775808) ){ goto $label$85 }
	$15 = (int_64)-9223372036854775808
	goto $label$84 
	
.LABEL $label$85
	$15 = (Rounds 0)($17)
	
.LABEL $label$84
	$18 = *(($8 + [32]))
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$86 }
	CALL eosio_assert([0], [9827])
	
.LABEL $label$86
	$11 = (uint_64)$18 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$89:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$88 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$90 }
	$11 = $13
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$89 }
	goto $label$87 
	
.LABEL $label$90
	$11 = $13
	
.LOOP $label$91:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$88 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$91 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$89 }
	goto $label$87 
	
.LABEL $label$88
	CALL eosio_assert([0], [9876])
	
.LABEL $label$87
	$11 = *(($9 + [16]))
	*(($3 + [160])) = [0]
	*($3 + [152]) = (int_64)0
	$7 = CALL $15([9119])
	if ( ((uint_32)$7 >= (uint_32)[-16]) ){ goto $label$93 }
	if ( ((uint_32)$7 >= (uint_32)[11]) ){ goto $label$96 }
	*($3 + [152]) = ($7 << [1])
	$6 = (($3 + [152]) | [1])
	if ( $7 ){ goto $label$95 }
	goto $label$94 
	
.LABEL $label$96
	$5 = (($7 + [16]) & [-16])
	$6 = CALL $7($5)
	*($3 + [152]) = ($5 | [1])
	*($3 + [160]) = $6
	*($3 + [156]) = $7
	
.LABEL $label$95
	CALL memcpy($6, [9119], $7)
	
.LABEL $label$94
	*(($6 + $7)) = [0]
	$13 = *($3 + [152])
	*($3 + [152]) = (int_64)0
	$6 = *($3 + [160])
	*($3 + [160]) = [0]
	*(($7 = CALL $7([16]))) = (int_64)-4155580856058716144
	*($7 + [8]) = (int_64)3617214756542218240
	*(($3 + [72])) = $18
	*(($5 = ($3 + [88]))) = $6
	*($3 + [168]) = $7
	*($3 + [48]) = (int_64)-4155580856058716144
	*($3 + [56]) = (int_64)-4155580855950593888
	*($3 + [64]) = $15
	*($3 + [80]) = $13
	$7 = ($7 + [16])
	*($3 + [176]) = $7
	*($3 + [172]) = $7
	CALL $64($11, (int_64)-3617168760277827584, ($3 + [168]), ($3 + [48]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$97 }
	CALL $9(*($5))
	
.LABEL $label$97
	$7 = *($3 + [168])
	if ( ($7 == 0) ){ goto $label$98 }
	*($3 + [172]) = $7
	CALL $9($7)
	
.LABEL $label$98
	if ( ((*($3 + [152]) & [1]) == 0) ){ goto $label$99 }
	CALL $9(*(($3 + [160])))
	
.LABEL $label$99
	$7 = CALL $15([8690])
	if ( ($7 <= [8]) ){ goto $label$102 }
	CALL eosio_assert([0], [9729])
	goto $label$101 
	
.LABEL $label$102
	if ( ($7 == 0) ){ goto $label$100 }
	
.LABEL $label$101
	$11 = (int_64)0
	
.LOOP $label$103:
	$6 = *(($7 + [8689]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$104 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$104
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$103 }
	$11 = ((int_64)$11 << (int_64)8)
	goto $label$92 
	
.LABEL $label$100
	$11 = (int_64)0
	goto $label$92 
	
.LABEL $label$93
	CALL $29(($3 + [152]))
	
.LABEL $label$92
	if ( ((int_64)*(($8 + [32])) != (int_64)((int_64)$11 | (int_64)4)) ){ goto $label$105 }
	$11 = *($14)
	$7 = CALL $15([8690])
	$6 = ($7 <= [8])
	$17 = ((float_64)(CASTING float_64)(int_64 $11) * (float_64)(float_64)0.005)
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)9223372036854775808) ){ goto $label$110 }
	$15 = (int_64)-9223372036854775808
	if ( ($6 == 0) ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$110
	$15 = (Rounds 0)($17)
	if ( $6 ){ goto $label$108 }
	
.LABEL $label$109
	CALL eosio_assert([0], [9729])
	goto $label$107 
	
.LABEL $label$108
	if ( $7 ){ goto $label$107 }
	$11 = (int_64)0
	goto $label$106 
	
.LABEL $label$107
	$11 = (int_64)0
	
.LOOP $label$111:
	$6 = *(($7 + [8689]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$112 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$112
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$111 }
	$11 = ((int_64)$11 << (int_64)8)
	
.LABEL $label$106
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$113 }
	CALL eosio_assert([0], [9827])
	
.LABEL $label$113
	$18 = ((int_64)$11 | (int_64)4)
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$116:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$115 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$117 }
	$11 = $13
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$116 }
	goto $label$114 
	
.LABEL $label$117
	$11 = $13
	
.LOOP $label$118:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$115 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$118 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$116 }
	goto $label$114 
	
.LABEL $label$115
	CALL eosio_assert([0], [9876])
	
.LABEL $label$114
	*(($3 + [32])) = $18
	*($3 + [256]) = $18
	*($3 + [24]) = $15
	*($3 + [248]) = $15
	CALL $62($0, ($3 + [24]))
	
.LABEL $label$105
	$7 = CALL $15([9120])
	if ( ($7 <= [8]) ){ goto $label$122 }
	CALL eosio_assert([0], [9729])
	goto $label$121 
	
.LABEL $label$122
	if ( ($7 == 0) ){ goto $label$120 }
	
.LABEL $label$121
	$11 = (int_64)0
	
.LOOP $label$123:
	$6 = *(($7 + [9119]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$124 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$124
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$123 }
	$13 = ((int_64)$11 << (int_64)8)
	goto $label$119 
	
.LABEL $label$120
	$13 = (int_64)0
	
.LABEL $label$119
	$11 = (uint_64)$13 >> (uint_64)(int_64)8)
	$15 = ((int_64)$13 | (int_64)4)
	$7 = [0]
	
.LOOP $label$127:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$126 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$128 }
	$11 = $13
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$127 }
	goto $label$125 
	
.LABEL $label$128
	$11 = $13
	
.LOOP $label$129:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$126 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$129 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$127 }
	goto $label$125 
	
.LABEL $label$126
	CALL eosio_assert([0], [9876])
	
.LABEL $label$125
	$7 = CALL $15([8690])
	if ( ($7 <= [8]) ){ goto $label$133 }
	CALL eosio_assert([0], [9729])
	goto $label$132 
	
.LABEL $label$133
	if ( ($7 == 0) ){ goto $label$131 }
	
.LABEL $label$132
	$11 = (int_64)0
	
.LOOP $label$134:
	$6 = *(($7 + [8689]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$135 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$135
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$134 }
	$13 = ((int_64)$11 << (int_64)8)
	goto $label$130 
	
.LABEL $label$131
	$13 = (int_64)0
	
.LABEL $label$130
	$11 = (int_64)0
	if ( ((int_64)*(($8 + [32])) != (int_64)((int_64)$13 | (int_64)4)) ){ goto $label$138 }
	$13 = *(($14 + [8]))
	*((($3 + [232]) + [8])) = $13
	$11 = *($14)
	*((($3 + [8]) + [8])) = $13
	*($3 + [232]) = $11
	*($3 + [8]) = $11
	CALL $96(($3 + [48]), $0, ($3 + [8]))
	$15 = *($3 + [56])
	$13 = *($3 + [48])
	if ( ($12 == 0) ){ goto $label$142 }
	$11 = ((int_64)$13 << (int_64)1)
	if ( ((int_64)$13 >= (int_64)2305843009213693952) ){ goto $label$140 }
	if ( ((int_64)$13 > (int_64)-2305843009213693952) ){ goto $label$141 }
	CALL eosio_assert([0], [10614])
	if ( ((int_64)$11 >= (int_64)1) ){ goto $label$139 }
	goto $label$138 
	
.LABEL $label$142
	$11 = $13
	
.LABEL $label$141
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$138 }
	goto $label$139 
	
.LABEL $label$140
	CALL eosio_assert([0], [10590])
	if ( ((int_64)$11 < (int_64)1) ){ goto $label$138 }
	
.LABEL $label$139
	if ( ((int_64)*($8 + [8]) == (int_64)-4155580622883343856) ){ goto $label$138 }
	CALL $40(($3 + [152]), $1)
	$13 = *($3 + [152])
	*($3 + [152]) = (int_64)0
	$6 = *($3 + [160])
	*($3 + [160]) = [0]
	$18 = *(($8 + [8]))
	*(($7 = CALL $7([16]))) = (int_64)-4155580855981124736
	*($7 + [8]) = (int_64)-4992121821055506944
	*(($3 + [72])) = $15
	*(($5 = ($3 + [88]))) = $6
	*($3 + [168]) = $7
	*($3 + [48]) = (int_64)-4155580855981124736
	*($3 + [56]) = $18
	*($3 + [64]) = $11
	*($3 + [80]) = $13
	$7 = ($7 + [16])
	*($3 + [176]) = $7
	*($3 + [172]) = $7
	CALL $64((int_64)-4155580855749438160, (int_64)-3617168760277827584, ($3 + [168]), ($3 + [48]))
	if ( ((*($3 + [80]) & [1]) == 0) ){ goto $label$143 }
	CALL $9(*($5))
	
.LABEL $label$143
	$7 = *($3 + [168])
	if ( ($7 == 0) ){ goto $label$144 }
	*($3 + [172]) = $7
	CALL $9($7)
	
.LABEL $label$144
	if ( ((*($3 + [152]) & [1]) == 0) ){ goto $label$138 }
	CALL $9(*(($3 + [160])))
	$13 = (int_64)-4155580622883343856
	if ( ((int_64)*($8 + [8]) == (int_64)-4155580622883343856) ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$138
	$13 = (int_64)-4155580622883343856
	if ( ((int_64)*($8 + [8]) != (int_64)-4155580622883343856) ){ goto $label$136 }
	
.LABEL $label$137
	$18 = *($0)
	*(($3 + [88])) = $15
	*(($6 = (($3 + [168]) + [24]))) = [0]
	*((($3 + [48]) + [24])) = *(($3 + [272]))
	*($3 + [56]) = $1
	*($3 + [48]) = $18
	*($3 + [80]) = $11
	*($3 + [168]) = $13
	*($3 + [176]) = (int_64)-4994130327835885568
	*($3 + [184]) = (int_64)0
	*($3 + [64]) = *($3 + [264])
	*(($7 = CALL $7([16]))) = $18
	*($7 + [8]) = (int_64)3617214756542218240
	*(($3 + [204])) = [0]
	$5 = ($7 + [16])
	*($6) = $5
	*(($3 + [188])) = $5
	*($3 + [184]) = $7
	*($3 + [196 align=4]) = (int_64)0
	CALL $88(($3 + [196]), [48])
	$5 = ($3 + [200])
	$7 = *($5)
	$6 = *($3 + [196])
	*($3 + [156]) = $6
	*($3 + [152]) = $6
	*($3 + [160]) = $7
	*($3 + [144]) = ($3 + [152])
	*($3 + [344]) = ($3 + [48])
	CALL $97(($3 + [344]), ($3 + [144]))
	CALL $90(($3 + [168]))
	$7 = *($3 + [196])
	if ( ($7 == 0) ){ goto $label$145 }
	*($5) = $7
	CALL $9($7)
	
.LABEL $label$145
	$7 = *($3 + [184])
	if ( ($7 == 0) ){ goto $label$136 }
	*(($3 + [188])) = $7
	CALL $9($7)
	
.LABEL $label$136
	if ( $8 ){ goto $label$146 }
	CALL eosio_assert([0], [10813])
	CALL eosio_assert([0], [10723])
	
.LABEL $label$146
	$7 = CALL db_next_i64(*($8 + [76]), ($3 + [48]))
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$147 }
	CALL $86($4, $7)
	
.LABEL $label$147
	CALL $98($4, $8)
	$11 = CALL current_time()
	*(($3 + [196])) = (int_64)0
	*(($12 = ($3 + [212]))) = (int_64)0
	*(($3 + [220])) = (int_64)0
	*($3 + [180]) = [0]
	*($3 + [184]) = [0]
	*($3 + [188 align=4]) = (int_64)0
	*($3 + [204 align=4]) = (int_64)0
	*($3 + [168]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	$11 = *($8 + [16])
	if ( ((int_64)$11 == (int_64)-4155580855754841072) ){ goto $label$148 }
	if ( (CALL is_account($11) == 0) ){ goto $label$148 }
	$17 = ((float_64)(CASTING float_64)(int_64 *(($8 + [24]))) * (float_64)(float_64)0.001)
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)9223372036854775808) ){ goto $label$150 }
	$15 = (int_64)-9223372036854775808
	goto $label$149 
	
.LABEL $label$150
	$15 = (Rounds 0)($17)
	
.LABEL $label$149
	$18 = *(($8 + [32]))
	if ( (uint_64)(((int_64)$15 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$151 }
	CALL eosio_assert([0], [9827])
	
.LABEL $label$151
	$11 = (uint_64)$18 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$154:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $11) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$153 }
	$13 = (uint_64)$11 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$11 & (int_64)65280) == (int_64)0) ){ goto $label$155 }
	$11 = $13
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$154 }
	goto $label$152 
	
.LABEL $label$155
	$11 = $13
	
.LOOP $label$156:
	if ( ((int_64)((int_64)$11 & (int_64)65280) != (int_64)0) ){ goto $label$153 }
	$11 = (uint_64)$11 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$5 = ($7 + [1])
	$7 = $5
	if ( $6 ){ goto $label$156 }
	$7 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[6]) ){ goto $label$154 }
	goto $label$152 
	
.LABEL $label$153
	CALL eosio_assert([0], [9876])
	
.LABEL $label$152
	*($3 + [160]) = (int_64)3617214756542218240
	$11 = *($0)
	*($3 + [152]) = $11
	*($3 + [144]) = (int_64)-4155580856058716144
	*($3 + [136]) = (int_64)-6215683073095654912
	$13 = *(($8 + [16]))
	*((($3 + [48]) + [32])) = $18
	*($3 + [56]) = $1
	*($3 + [48]) = $11
	*($3 + [72]) = $15
	*($3 + [64]) = $13
	$6 = (($3 + [168]) + [40])
	$7 = *($6)
	if ( ((uint_32)$7 >= (uint_32)*(($3 + [212]))) ){ goto $label$157 }
	*($7 + [8]) = (int_64)-6215683073095654912
	*($7) = (int_64)-4155580856058716144
	*($7 + [16 align=4]) = (int_64)0
	*(($9 = ($7 + [24]))) = [0]
	$5 = CALL $7([16])
	*($7 + [16]) = $5
	$4 = ($5 + [16])
	*($9) = $4
	*(($5 + [8])) = *((($3 + [152]) + [8]))
	*($5) = *($3 + [152])
	*(($7 + [20])) = $4
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	CALL $88(($7 + [28]), [40])
	$5 = *(($7 + [32]))
	$7 = *($7 + [28])
	*($3 + [348]) = $7
	*($3 + [344]) = $7
	*($3 + [352]) = $5
	*($3 + [336]) = ($3 + [344])
	*($3 + [360]) = ($3 + [48])
	CALL $89(($3 + [360]), ($3 + [336]))
	*($6) = (*($6) + [40])
	goto $label$148 
	
.LABEL $label$157
	CALL $99(($3 + [204]), ($3 + [152]), ($3 + [144]), ($3 + [136]), ($3 + [48]))
	
.LABEL $label$148
	*($3 + [160]) = (int_64)3617214756542218240
	*($3 + [152]) = *($0)
	*($3 + [144]) = (int_64)-5003315193367756800
	$11 = *(($8 + [8]))
	$13 = *(($14 + [8]))
	$15 = *($14)
	*((($3 + [48]) + [40])) = *((($3 + [264]) + [8]))
	*((($3 + [48]) + [24])) = $13
	*($3 + [48]) = $1
	*($3 + [56]) = $11
	*($3 + [80]) = *($3 + [264])
	*($3 + [64]) = $15
	$5 = CALL $30(($3 + [96]), (($3 + [280]) + [8]))
	$9 = CALL $30((($3 + [48]) + [60]), (($3 + [280]) + [20]))
	*($3 + [128]) = $16
	*($3 + [120]) = *(($8 + [40]))
	$6 = *((($3 + [168]) + [40]))
	if ( ((uint_32)$6 >= (uint_32)*($12)) ){ goto $label$162 }
	$11 = *($0)
	*($6 + [8]) = (int_64)-5003315193367756800
	*($6) = $11
	*($6 + [16 align=4]) = (int_64)0
	*(($12 = ($6 + [24]))) = [0]
	$7 = CALL $7([16])
	*($6 + [16]) = $7
	$14 = ($7 + [16])
	*($12) = $14
	*(($7 + [8])) = *((($3 + [152]) + [8]))
	*($7) = *($3 + [152])
	*(($6 + [20])) = $14
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = *($5)
	$5 = ( *(($3 + [100])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($5 + [64])
	$11 = (CASTING uint_64)(uint_32 $5)
	$12 = ($6 + [28])
	
.LOOP $label$163:
	$7 = ($7 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$163 }
	$5 = *($9)
	$5 = ( *(($3 + [112])) ? uint_32($5 >> [1]) : ($5 & [1]) )
	$7 = ($5 + $7)
	$11 = (CASTING uint_64)(uint_32 $5)
	
.LOOP $label$164:
	$7 = ($7 + [1])
	$11 = (uint_64)$11 >> (uint_64)(int_64)7
	if ( ((int_64)$11) != (int_64)0) ){ goto $label$164 }
	if ( ($7 == 0) ){ goto $label$161 }
	CALL $88($12, $7)
	$5 = *(($6 + [32]))
	$7 = *(($6 + [28]))
	goto $label$160 
	
.LABEL $label$162
	CALL $100(($3 + [204]), ($3 + [152]), $0, ($3 + [144]), ($3 + [48]))
	$7 = [1]
	if ( (*($3 + [108]) & [1]) ){ goto $label$159 }
	goto $label$158 
	
.LABEL $label$161
	$5 = [0]
	$7 = [0]
	
.LABEL $label$160
	*($3 + [348]) = $7
	*($3 + [344]) = $7
	*($3 + [352]) = $5
	*($3 + [360]) = ($3 + [344])
	*($3 + [136]) = ($3 + [48])
	CALL $101(($3 + [136]), ($3 + [360]))
	*(($7 = (($3 + [168]) + [40]))) = (*($7) + [40])
	$7 = [1]
	if ( ((*($3 + [108]) & [1]) == 0) ){ goto $label$158 }
	
.LABEL $label$159
	CALL $9(*(($3 + [116])))
	
.LABEL $label$158
	if ( ((*($3 + [96]) & $7) == 0) ){ goto $label$165 }
	CALL $9(*(($3 + [104])))
	
.LABEL $label$165
	*((($3 + [168]) + [20])) = [0]
	*($3 + [48]) = $1
	*($3 + [56]) = *(($8 + [8]))
	CALL $102(($3 + [168]), ($3 + [48]), *($0), [0])
	CALL $83(($3 + [168]))
	if ( ((*((($3 + [280]) + [20])) & [1]) == 0) ){ goto $label$166 }
	CALL $9(*(($3 + [308])))
	
.LABEL $label$166
	if ( ((*((($3 + [280]) + [8])) & [1]) == 0) ){ goto $label$167 }
	CALL $9(*(($3 + [296])))
	
.LABEL $label$167
	$global$0 = ($3 + [368])
	(unreachable)
	(unreachable)
}

int_32 .FUNC $84 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [32])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$2 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $2
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10123])
	
.LABEL $label$5
	$2 = CALL $1($4)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $2, $4)
	*(($5 = CALL $7([32])) + [8]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [16]) = $0
	if ( ((uint_32)$4 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [24]) = (int_64)0
	$7 = ($2 + [8])
	if ( ((int_32)($4 & [-8]) != (int_32)[8]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$8
	CALL memcpy(($3 + [24]), $7, [8])
	$8 = *($3 + [24])
	*(($5 + [8])) = $8
	*($5 + [20]) = $1
	*($3 + [16]) = $5
	$8 = (uint_64)$8 >> (uint_64)(int_64)8
	*($3 + [24]) = $8)
	*($3 + [12]) = $1
	$7 = ($0 + [28])
	$4 = *($7)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$11 }
	*($4 + [8]) = $8
	*($4 + [16]) = $1
	*($3 + [16]) = [0]
	*($4) = $5
	*($7) = ($4 + [24])
	if ( $6 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$11
	CALL $178(($0 + [24]), ($3 + [16]), ($3 + [24]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$9 }
	
.LABEL $label$10
	CALL $2($2)
	
.LABEL $label$9
	$1 = *($3 + [16])
	*($3 + [16]) = [0]
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $9($1)
	
.LABEL $label$12
	$global$0 = ($3 + [32])
	return $5
}

int_32 .FUNC $83 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$2 = ($0 + [52])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = ($3 + [-16])
	$5 = *(($3 + [-12]))
	if ( ($5 == 0) ){ goto $label$5 }
	*(($3 + [-8])) = $5
	CALL $9($5)
	
.LABEL $label$5
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$4 }
	$3 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$3 = $1
	
.LABEL $label$2
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [40])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$8 }
	
.LOOP $label$9:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$10 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$10
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$11 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$11
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$9 }
	$3 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$3 = $1
	
.LABEL $label$7
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$2 = ($0 + [28])
	$3 = *($2)
	if ( ((int_32)$3 == (int_32)$1) ){ goto $label$14 }
	
.LOOP $label$15:
	$4 = *(($3 + [-12]))
	if ( ($4 == 0) ){ goto $label$16 }
	*(($3 + [-8])) = $4
	CALL $9($4)
	
.LABEL $label$16
	$4 = ($3 + [-40])
	$5 = *(($3 + [-24]))
	if ( ($5 == 0) ){ goto $label$17 }
	*(($3 + [-20])) = $5
	CALL $9($5)
	
.LABEL $label$17
	$3 = $4
	if ( ((int_32)$1 != (int_32)$4) ){ goto $label$15 }
	$3 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$3 = $1
	
.LABEL $label$13
	*($2) = $1
	CALL $9($3)
	
.LABEL $label$12
	return $0
}

void .FUNC $82 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$4 = ($global$0 - [144])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = ($1 + [16])
	$7 = *($6)
	CALL $202(($5 + [48]), $1)
	*((($5 + [80]) + [24])) = *($5 + [56])
	$8 = *($5 + [48])
	*($1 + [8]) = ((int_64)*($1 + [8]) + (int_64)1)
	CALL __floatditf(($5 + [32]), (int_64))((int_64)0 - $7))
	*($5 + [96]) = $8
	*($5 + [88]) = *(($5 + [40]))
	*($5 + [80]) = *($5 + [32])
	$8 = *($1)
	$9 = *($3)
	if ( ((int_64)*($9 + [8]) == (int_64)*(($1 + [24]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10428])
	
.LABEL $label$3
	$7 = ((int_64)*($6) + (int_64)*($9))
	*($6) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10471])
	$7 = *(($1 + [16]))
	
.LABEL $label$4
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10490])
	
.LABEL $label$5
	$7 = *(*(*($3 + [4]) + [4]) + [8])
	if ( ((uint_64)*($1 + [48]) >= (uint_64)$7) ){ goto $label$6 }
	$10 = *(*($3) + [8])
	$7 = (uint_64)$10 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $11
	$9 = $6
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $11
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$6 < (int_32)[6])
	$12 = ($6 + [1])
	$6 = $12
	if ( $9 ){ goto $label$11 }
	$6 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [9876])
	
.LABEL $label$7
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $10
	$10 = *(*($3) + [8])
	$7 = (uint_64)$10 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$14:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$13 }
	$11 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$15 }
	$7 = $11
	$9 = $6
	$6 = ($9 + [1])
	if ( ((int_32)$9 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$15
	$7 = $11
	
.LOOP $label$16:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$13 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$9 = ((int_32)$6 < (int_32)[6])
	$12 = ($6 + [1])
	$6 = $12
	if ( $9 ){ goto $label$16 }
	$6 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	CALL eosio_assert([0], [9876])
	
.LABEL $label$12
	*($1 + [72]) = (int_64)0
	*(($1 + [80])) = $10
	$7 = *(*(*(($3 + [4])) + [4]) + [8])
	
.LABEL $label$6
	$11 = *(*($3 + [8]))
	*(($1 + [48])) = $11
	if ( (uint_64)($11 <= $7) ){ goto $label$17 }
	if ( ((uint_64)$11 > (uint_64)*(*(*($3 + [12]) + [4]) + [8])) ){ goto $label$17 }
	$6 = *($3)
	if ( ((int_64)*($6 + [8]) == (int_64)*(($1 + [64]))) ){ goto $label$18 }
	CALL eosio_assert([0], [10428])
	
.LABEL $label$18
	$7 = ((int_64)*($1 + [56]) + (int_64)*($6))
	*($1 + [56]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$19 }
	CALL eosio_assert([0], [10471])
	$7 = *(($1 + [56]))
	
.LABEL $label$19
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$17 }
	CALL eosio_assert([0], [10490])
	
.LABEL $label$17
	if ( ((int_64)$8 == (int_64)*($1)) ){ goto $label$20 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$20
	$9 = $4
	$6 = ($9 + [-96])
	$global$0 = $6
	*($5 + [68]) = $6
	*($5 + [64]) = $6
	*($5 + [72]) = ($9 + [-8])
	CALL $201(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $6, [88])
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$21 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$6 = (($5 + [80]) + [16])
	CALL __floatditf(($5 + [16]), (int_64))((int_64)0 - *(($1 + [16]))))
	*($5 + [136]) = *(($5 + [24]))
	*($5 + [128]) = *($5 + [16])
	if ( (CALL $16(($5 + [80]), ($5 + [128]), [16]) == 0) ){ goto $label$22 }
	$12 = ($1 + [96])
	$9 = *($12)
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$23 }
	$9 = CALL db_idx_long_double_find_primary(*($0), *($0 + [8]), (int_64)-6030912129794572288, ($5 + [112]), $8)
	*($12) = $9
	
.LABEL $label$23
	CALL db_idx_long_double_update($9, $2, ($5 + [128]))
	
.LABEL $label$22
	CALL $202($5, $1)
	*($5 + [136]) = *($5 + [8])
	*($5 + [128]) = *($5)
	if ( (CALL $16($6, ($5 + [128]), [16]) == 0) ){ goto $label$24 }
	$9 = ($1 + [100])
	$6 = *($9)
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$25 }
	$6 = CALL db_idx_long_double_find_primary(*($0), *($0 + [8]), (int_64)-6030912129794572287, ($5 + [112]), $8)
	*($9) = $6
	
.LABEL $label$25
	CALL db_idx_long_double_update($6, $2, ($5 + [128]))
	
.LABEL $label$24
	$global$0 = ($5 + [144])
}

void .FUNC $81 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $80 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$2 = ($global$0 - [64])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = (int_64)1
	$5 = *($0)
	$6 = *($4 + [4])
	*(($1 + [24])) = *(($6 + [8]))
	*($1 + [16]) = *($6)
	$7 = *(*($4 + [4]) + [8])
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$4 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	$8 = $9
	
.LOOP $label$5:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$2 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$5 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	CALL eosio_assert([0], [9876])
	
.LABEL $label$1
	*($1 + [32]) = (int_64)0
	*(($1 + [40])) = $7
	$7 = *(*(($4 + [4])) + [8])
	$8 = (uint_64)$7 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$8:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $8) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$7 }
	$9 = (uint_64)$8 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$8 & (int_64)65280) == (int_64)0) ){ goto $label$9 }
	$8 = $9
	$10 = $6
	$6 = ($10 + [1])
	if ( ((int_32)$10 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$9
	$8 = $9
	
.LOOP $label$10:
	if ( ((int_64)((int_64)$8 & (int_64)65280) != (int_64)0) ){ goto $label$7 }
	$8 = (uint_64)$8 >> (uint_64)(int_64)8)
	$10 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $10 ){ goto $label$10 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	CALL eosio_assert([0], [9876])
	
.LABEL $label$6
	*($1 + [72]) = (int_64)0
	*(($1 + [80])) = $7
	$6 = *($4 + [8])
	*($1 + [48]) = *($6)
	$8 = *($6)
	if ( (uint_64)($8 <= *(*(*($4 + [12]) + [4]) + [8])) ){ goto $label$11 }
	if ( ((uint_64)$8 > (uint_64)*(*(*($4 + [16]) + [4]) + [8])) ){ goto $label$11 }
	$6 = *(($4 + [4]))
	*($1 + [56]) = *($6)
	*(($1 + [64])) = *(($6 + [8]))
	
.LABEL $label$11
	$10 = $2
	$6 = ($10 + [-96])
	$global$0 = $6
	*($3 + [36]) = $6
	*($3 + [32]) = $6
	*($3 + [40]) = ($10 + [-8])
	CALL $201(($3 + [32]), $1)
	$8 = *($1)
	*($1 + [92]) = CALL db_store_i64(*($5 + [8]), (int_64)-6030912129794572288, *(*($0 + [8])), $8, $6, [88])
	if ( (uint_64)($8 <= *($5 + [16])) ){ goto $label$12 }
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$12
	$6 = ($5 + [8])
	$8 = *($6)
	$10 = *(($0 + [8]))
	$9 = *($10)
	$7 = *($1)
	CALL __floatditf($3, (int_64))((int_64)0 - *($1 + [16])))
	*($3 + [56]) = *(($3 + [8]))
	*($3 + [48]) = *($3)
	*($1 + [96]) = CALL db_idx_long_double_store($8, (int_64)-6030912129794572288, $9, $7, ($3 + [48]))
	$8 = *($10)
	$9 = *($6)
	$7 = *($1)
	CALL $202(($3 + [16]), $1)
	*($3 + [56]) = *($3 + [24])
	*($3 + [48]) = *($3 + [16])
	*(($1 + [100])) = CALL db_idx_long_double_store($9, (int_64)-6030912129794572287, $8, $7, ($3 + [48]))
	$global$0 = ($3 + [64])
}

int_32 .FUNC $182 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[3]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [4])
	$4 = (*($3) + [4])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [4])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[1]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [2])
	$4 = (*($3) + [2])
	*($3) = $4
	$3 = ($1 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[3]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [4])
	$3 = (*($4) + [4])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [12])
	$8 = ($0 + [8])
	
.LOOP $label$4:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [14]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$3 = *($4)
	
.LABEL $label$5
	CALL memcpy($3, ($2 + [14]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$4 }
	$4 = ($1 + [16])
	$8 = ($0 + [8])
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$3 = *(($0 + [4]))
	
.LABEL $label$6
	CALL memcpy($3, $4, [1])
	$3 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $3
	$7 = *($1 + [20])
	
.LOOP $label$7:
	$5 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$6 = ((int_64)$7) != (int_64)0
	*($2 + [15]) = (($6) << [7]) | ($5 & [127]))
	if ( ((int_32)(*($8) - $3) > (int_32)[0]) ){ goto $label$8 }
	CALL eosio_assert([0], [10508])
	$3 = *($4)
	
.LABEL $label$8
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($4) + [1])
	*($4) = $3
	if ( $6 ){ goto $label$7 }
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $149 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [496])
	$global$0 = $3
	*(($4 = $3) + [440]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [352]) + [24])) = (int_64)0
	*((($4 + [352]) + [40])) = (int_64)0
	*((($4 + [352]) + [56])) = (int_64)0
	*((($4 + [352]) + [64])) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [352]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [384]) = (int_64)0
	*($4 + [400]) = (int_64)0
	*($4 + [424]) = (int_64)0
	*($4 + [432]) = (int_64)0
	*($4 + [340]) = $2
	*($4 + [336]) = $2
	*($4 + [344]) = ($2 + $5)
	*($4 + [480]) = ($4 + [336])
	*($4 + [16]) = ($4 + [352])
	CALL $161(($4 + [16]), ($4 + [480]))
	*(($3 = ($4 + [8]))) = *($4 + [344])
	*($4) = *($4 + [336])
	$3 = *($3)
	*((($4 + [448]) + [8])) = $3
	*(($6 = (($4 + [464]) + [8]))) = $3
	$7 = *($4)
	*($4 + [464]) = $7
	*($4 + [448]) = $7
	$3 = *($6)
	*((($4 + [480]) + [8])) = $3
	*((($4 + [16]) + [24])) = $3
	*($4 + [16]) = $0
	*($4 + [24]) = $1
	$7 = *($4 + [464])
	*($4 + [32]) = $7
	*($4 + [480]) = $7
	*((($4 + [16]) + [40])) = $0
	*(($4 + [64])) = (int_64)-1
	*((($4 + [16]) + [56])) = (int_64)0
	*((($4 + [16]) + [64])) = [0]
	*(($4 + [96])) = $0
	*(($4 + [104])) = (int_64)-1
	*(($4 + [112])) = (int_64)0
	*(($4 + [120])) = [0]
	*(($4 + [136])) = $0
	*(($4 + [144])) = (int_64)-1
	*(($4 + [152])) = (int_64)0
	*(($4 + [160])) = [0]
	*(($4 + [164])) = [0]
	*(($4 + [176])) = $0
	*($4 + [48]) = $0
	*($4 + [88]) = $0
	*($4 + [128]) = $0
	*($4 + [168]) = $0
	*(($4 + [184])) = (int_64)-1
	*(($4 + [192])) = (int_64)0
	*(($4 + [200])) = [0]
	*(($4 + [216])) = $0
	*(($4 + [224])) = (int_64)-1
	*(($4 + [232])) = (int_64)0
	*(($4 + [240])) = [0]
	*(($4 + [244])) = [0]
	*(($4 + [256])) = $0
	*(($4 + [264])) = (int_64)-1
	*(($4 + [272])) = (int_64)0
	*(($4 + [280])) = [0]
	*(($4 + [296])) = $0
	*(($4 + [304])) = (int_64)-1
	*(($4 + [312])) = [0]
	*($4 + [208]) = $0
	*($4 + [248]) = $0
	*($4 + [288]) = $0
	*(($4 + [316])) = (int_64)0
	*($4 + [328]) = $1
	*($4 + [484]) = ($4 + [440])
	*($4 + [480]) = ($4 + [16])
	CALL $162(($4 + [480]), ($4 + [352]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $48(($4 + [16]))
	if ( ((*($4 + [412]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [420])))
	
.LABEL $label$5
	if ( ((*($4 + [400]) & [1]) == 0) ){ goto $label$6 }
	CALL $9(*(($4 + [408])))
	
.LABEL $label$6
	$global$0 = ($4 + [496])
	return [1]
}

int_32 .FUNC $148 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [336])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$4 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$4
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*($4 + [328]) = (int_64)0
	*($4 + [320]) = (int_64)0
	if ( ((uint_32)$7 > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$5
	$3 = ($2 + $7)
	$8 = (($4 + [320]) + [8])
	CALL memcpy(($4 + [320]), $2, [8])
	$9 = ($2 + [8])
	if ( ((int_32)($7 & [-8]) != (int_32)[8]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	
.LABEL $label$6
	CALL memcpy($8, $9, [8])
	*(($4 + [24])) = $3
	*(($4 + [40])) = $0
	*(($4 + [48])) = (int_64)-1
	*(($4 + [56])) = (int_64)0
	*(($4 + [64])) = [0]
	*(($4 + [80])) = $0
	*(($4 + [88])) = (int_64)-1
	*(($4 + [96])) = (int_64)0
	*(($4 + [104])) = [0]
	*(($4 + [120])) = $0
	*($4 + [16]) = $2
	*(($4 + [20])) = ($2 + [16])
	*($4 + [8]) = $1
	*($4) = $0
	*($4 + [32]) = $0
	*($4 + [72]) = $0
	*($4 + [112]) = $0
	*(($4 + [128])) = (int_64)-1
	*(($4 + [136])) = (int_64)0
	*(($4 + [144])) = [0]
	*(($4 + [148])) = [0]
	*(($4 + [160])) = $0
	*(($4 + [168])) = (int_64)-1
	*(($4 + [176])) = (int_64)0
	*(($4 + [184])) = [0]
	*(($4 + [200])) = $0
	*(($4 + [208])) = (int_64)-1
	*(($4 + [216])) = (int_64)0
	*(($4 + [224])) = [0]
	*(($4 + [228])) = [0]
	*(($4 + [240])) = $0
	*(($4 + [248])) = (int_64)-1
	*($4 + [152]) = $0
	*($4 + [192]) = $0
	*($4 + [232]) = $0
	*(($4 + [264])) = [0]
	*(($4 + [256])) = (int_64)0
	*(($4 + [280])) = $0
	*(($4 + [288])) = (int_64)-1
	*(($4 + [296])) = (int_64)0
	*(($4 + [304])) = [0]
	*($4 + [272]) = $0
	*($4 + [312]) = $1
	$3 = ($4 + int_32($5 >> [1]))
	$0 = *((($4 + [320]) + [8]))
	$1 = *($4 + [320])
	if ( (($5 & [1]) == 0) ){ goto $label$7 }
	$6 = *((*($3) + $6))
	
.LABEL $label$7
	CALL void $3((int_32 $1), (int_64 $0), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$8 }
	CALL $2($2)
	
.LABEL $label$8
	CALL $48($4)
	$global$0 = ($4 + [336])
	return [1]
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	$3 = ($global$0 - [304])
	$global$0 = $3
	CALL $0()
	*($3 + [288]) = [9690]
	*($3 + [292]) = CALL $15([9690])
	*($3 + [136]) = *($3 + [288])
	CALL $73(($3 + [296]), ($3 + [136]))
	if ( ((int_64)$1 != (int_64)6138663591592764928) ){ goto $label$17 }
	*($3 + [272]) = [8783]
	*($3 + [276]) = CALL $15([8783])
	*($3 + [112]) = *($3 + [272])
	CALL $73(($3 + [280]), ($3 + [112]))
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$16 }
	*($3 + [268]) = [0]
	*($3 + [264]) = [3]
	*($3 + [104]) = *($3 + [264])
	CALL $146($0, (int_64)6138663591592764928, ($3 + [104]))
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ((int_64)$1 != (int_64)-4155580855763754848) ){ goto $label$16 }
	*($3 + [256]) = [9702]
	*($3 + [260]) = CALL $15([9702])
	*($3 + [128]) = *($3 + [256])
	CALL $73(($3 + [296]), ($3 + [128]))
	if ( ((int_64)$2 != (int_64)-2507752493500334080) ){ goto $label$16 }
	*($3 + [252]) = [0]
	*($3 + [248]) = [4]
	*($3 + [120]) = *($3 + [248])
	CALL $147($0, (int_64)-4155580855763754848, ($3 + [120]))
	
.LABEL $label$16
	if ( ((int_64)$1 != (int_64)$0) ){ goto $label$14 }
	
.LABEL $label$15
	if ( ((int_64)$2 <= (int_64)-4417247484950609921) ){ goto $label$13 }
	if ( ((int_64)$2 <= (int_64)-4417017204164263937) ){ goto $label$12 }
	if ( ((int_64)$2 > (int_64)6112363716718624767) ){ goto $label$10 }
	if ( ((int_64)$2 == (int_64)-4417017204164263936) ){ goto $label$9 }
	if ( ((int_64)$2 != (int_64)5606356246820028416) ){ goto $label$1 }
	*($3 + [172]) = [0]
	*($3 + [168]) = [5]
	*($3 + [72]) = *($3 + [168])
	CALL $148($1, $1, ($3 + [72]))
	
.LABEL $label$14
	CALL eosio_exit([0])
	
.LABEL $label$13
	if ( ((int_64)$2 > (int_64)-5001342335392940033) ){ goto $label$11 }
	if ( ((int_64)$2 == (int_64)-7297667123730448384) ){ goto $label$8 }
	if ( ((int_64)$2 == (int_64)-6215606966287335424) ){ goto $label$7 }
	if ( ((int_64)$2 != (int_64)-5003315193367756800) ){ goto $label$1 }
	*($3 + [180]) = [0]
	*($3 + [176]) = [6]
	*($3 + [64]) = *($3 + [176])
	CALL $149($1, $1, ($3 + [64]))
	CALL eosio_exit([0])
	
.LABEL $label$12
	if ( ((int_64)$2 == (int_64)-4417247484950609920) ){ goto $label$6 }
	if ( ((int_64)$2 == (int_64)-4417057682011717632) ){ goto $label$5 }
	if ( ((int_64)$2 != (int_64)-4417020468658176000) ){ goto $label$1 }
	*($3 + [148]) = [0]
	*($3 + [144]) = [7]
	*($3 + [96]) = *($3 + [144])
	CALL $150($1, $1, ($3 + [96]))
	CALL eosio_exit([0])
	
.LABEL $label$11
	if ( ((int_64)$2 == (int_64)-5001342335392940032) ){ goto $label$4 }
	if ( ((int_64)$2 == (int_64)-4994301922312476992) ){ goto $label$3 }
	if ( ((int_64)$2 != (int_64)-4994130327958978560) ){ goto $label$1 }
	*($3 + [212]) = [0]
	*($3 + [208]) = [8]
	*($3 + [32]) = *($3 + [208])
	CALL $151($1, $1, ($3 + [32]))
	CALL eosio_exit([0])
	
.LABEL $label$10
	if ( ((int_64)$2 == (int_64)6112363716718624768) ){ goto $label$2 }
	if ( ((int_64)$2 != (int_64)8421045207927095296) ){ goto $label$1 }
	*($3 + [236]) = [0]
	*($3 + [232]) = [9]
	*($3 + [8]) = *($3 + [232])
	CALL $152($1, $1, ($3 + [8]))
	CALL eosio_exit([0])
	
.LABEL $label$9
	*($3 + [220]) = [0]
	*($3 + [216]) = [10]
	*($3 + [24]) = *($3 + [216])
	CALL $153($1, $1, ($3 + [24]))
	CALL eosio_exit([0])
	
.LABEL $label$8
	*($3 + [196]) = [0]
	*($3 + [192]) = [11]
	*($3 + [48]) = *($3 + [192])
	CALL $148($1, $1, ($3 + [48]))
	CALL eosio_exit([0])
	
.LABEL $label$7
	*($3 + [164]) = [0]
	*($3 + [160]) = [12]
	*($3 + [80]) = *($3 + [160])
	CALL $154($1, $1, ($3 + [80]))
	CALL eosio_exit([0])
	
.LABEL $label$6
	*($3 + [228]) = [0]
	*($3 + [224]) = [13]
	*($3 + [16]) = *($3 + [224])
	CALL $148($1, $1, ($3 + [16]))
	CALL eosio_exit([0])
	
.LABEL $label$5
	*($3 + [244]) = [0]
	*($3 + [240]) = [14]
	*($3) = *($3 + [240])
	CALL $155($1, $1, $3)
	CALL eosio_exit([0])
	
.LABEL $label$4
	*($3 + [204]) = [0]
	*($3 + [200]) = [15]
	*($3 + [40]) = *($3 + [200])
	CALL $150($1, $1, ($3 + [40]))
	CALL eosio_exit([0])
	
.LABEL $label$3
	*($3 + [156]) = [0]
	*($3 + [152]) = [16]
	*($3 + [88]) = *($3 + [152])
	CALL $150($1, $1, ($3 + [88]))
	CALL eosio_exit([0])
	
.LABEL $label$2
	*($3 + [188]) = [0]
	*($3 + [184]) = [17]
	*($3 + [56]) = *($3 + [184])
	CALL $152($1, $1, ($3 + [56]))
	CALL eosio_exit([0])
	
.LABEL $label$1
	CALL eosio_assert([0], [9712])
	CALL eosio_exit([0])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $144 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = ($1 + [8])
	*($5 + [24]) = (int_64))((int_64)0 - *($6))
	$7 = ($1 + [16])
	$8 = *($1)
	$9 = *(*($3))
	$3 = *($9 + [4])
	if ( ($3 == 0) ){ goto $label$4 }
	
.LOOP $label$5:
	$10 = $3
	$3 = *($10)
	if ( $3 ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$10 = *($9 + [8])
	if ( ((int_32)*($10) == (int_32)$9) ){ goto $label$3 }
	$11 = ($9 + [8])
	
.LOOP $label$6:
	$3 = *($11)
	$11 = ($3 + [8])
	$10 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($10)) ){ goto $label$6 }
	
.LABEL $label$3
	if ( ((int_32)*($7) != (int_32)$9) ){ goto $label$7 }
	*($7) = $10
	
.LABEL $label$7
	*(($3 = ($1 + [24]))) = (*($3) + [-1])
	CALL $216(*(($1 + [20])), $9)
	CALL $9($9)
	if ( ((int_64)$8 == (int_64)*($1)) ){ goto $label$8 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$8
	$12 = *($3)
	$9 = [16]
	
.LOOP $label$9:
	$9 = ($9 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$9 }
	$13 = ($1 + [20])
	$10 = *($1 + [16])
	if ( ((int_32)$10 == (int_32)$13) ){ goto $label$10 }
	
.LOOP $label$11:
	$11 = $10
	$3 = *($11 + [4])
	if ( ($3 == 0) ){ goto $label$13 }
	
.LOOP $label$14:
	$10 = $3
	$3 = *($10)
	if ( $3 ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	$10 = *($11 + [8])
	if ( ((int_32)*($10) == (int_32)$11) ){ goto $label$12 }
	$11 = ($11 + [8])
	
.LOOP $label$15:
	$3 = *($11)
	$11 = ($3 + [8])
	$10 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($10)) ){ goto $label$15 }
	
.LABEL $label$12
	$9 = ($9 + [16])
	if ( ((int_32)$10 != (int_32)$13) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($9 <= [513]) ){ goto $label$17 }
	$3 = CALL $1($9)
	goto $label$16 
	
.LABEL $label$17
	$3 = ($4 - (($9 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$16
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	$11 = ($3 + $9)
	*($5 + [16]) = $11
	$10 = $3
	if ( ((int_32)$9 > (int_32)[7]) ){ goto $label$18 }
	CALL eosio_assert([0], [10508])
	$11 = *(($5 + [16]))
	$10 = *($5 + [12])
	
.LABEL $label$18
	CALL memcpy($10, $1, [8])
	$10 = ($10 + [8])
	*($5 + [12]) = $10
	if ( ((int_32)($11 - $10) > (int_32)[7]) ){ goto $label$19 }
	CALL eosio_assert([0], [10508])
	$10 = *($5 + [12])
	
.LABEL $label$19
	CALL memcpy($10, $6, [8])
	*($5 + [12]) = ($10 + [8])
	CALL $208(($5 + [8]), $7)
	CALL db_update_i64(*($1 + [32]), $2, $3, $9)
	if ( ($9 <= [513]) ){ goto $label$20 }
	CALL $2($3)
	
.LABEL $label$20
	if ( (uint_64)($8 <= *($0 + [16])) ){ goto $label$21 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$8 + (int_64)1) : ((uint_64)$8 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	*($5 + [40]) = (int_64))((int_64)0 - *($6))
	if ( (CALL $16(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$22 }
	$3 = *($1 + [36])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$23 }
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3851373727820283904, ($5 + [32]), $8)
	*(($1 + [36])) = $3
	
.LABEL $label$23
	CALL db_idx64_update($3, $2, ($5 + [40]))
	
.LABEL $label$22
	$global$0 = ($5 + [48])
}

int_32 .FUNC $147 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	$3 = ($global$0 - [448])
	$4 = $3
	$global$0 = $3
	$5 = *($2 + [4])
	$6 = *($2)
	$2 = [0]
	$7 = CALL action_data_size()
	if ( ($7 == 0) ){ goto $label$1 }
	if ( ($7 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($7)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($7 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $7)
	
.LABEL $label$1
	*(($8 = ($4 + [384]))) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [368]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [356]) = $2
	*($4 + [352]) = $2
	*($4 + [360]) = ($2 + $7)
	*($4 + [432]) = ($4 + [352])
	*($4 + [32]) = ($4 + [368])
	CALL $158(($4 + [32]), ($4 + [432]))
	*(($9 = (($4 + [16]) + [8]))) = *($4 + [360])
	*($4 + [16]) = *($4 + [352])
	$10 = *($9)
	*(($3 = (($4 + [400]) + [8]))) = $10
	*(($9 = (($4 + [416]) + [8]))) = $10
	$11 = *($4 + [16])
	*($4 + [416]) = $11
	*($4 + [400]) = $11
	$10 = *($9)
	*((($4 + [432]) + [8])) = $10
	*(($4 + [56])) = $10
	*($4 + [32]) = $0
	*($4 + [40]) = $1
	$11 = *($4 + [416])
	*($4 + [48]) = $11
	*($4 + [432]) = $11
	*(($4 + [72])) = $0
	*(($4 + [80])) = (int_64)-1
	*(($4 + [88])) = (int_64)0
	*(($4 + [96])) = [0]
	*(($4 + [112])) = $0
	*(($4 + [120])) = (int_64)-1
	*(($4 + [128])) = (int_64)0
	*(($4 + [136])) = [0]
	*(($4 + [152])) = $0
	*(($4 + [160])) = (int_64)-1
	*(($4 + [168])) = (int_64)0
	*(($4 + [176])) = [0]
	*(($4 + [180])) = [0]
	*(($4 + [192])) = $0
	*($4 + [64]) = $0
	*($4 + [104]) = $0
	*($4 + [144]) = $0
	*($4 + [184]) = $0
	*(($4 + [200])) = (int_64)-1
	*(($4 + [208])) = (int_64)0
	*(($4 + [216])) = [0]
	*(($4 + [232])) = $0
	*(($4 + [240])) = (int_64)-1
	*(($4 + [248])) = (int_64)0
	*(($4 + [256])) = [0]
	*(($4 + [260])) = [0]
	*(($4 + [272])) = $0
	*(($4 + [280])) = (int_64)-1
	*(($4 + [288])) = (int_64)0
	*(($4 + [296])) = [0]
	*(($4 + [312])) = $0
	*(($4 + [320])) = (int_64)-1
	*(($4 + [328])) = [0]
	*($4 + [224]) = $0
	*($4 + [264]) = $0
	*($4 + [304]) = $0
	*(($4 + [332])) = (int_64)0
	*($4 + [344]) = $1
	*($3) = *($8)
	*($4 + [400]) = *($4 + [376])
	$0 = *($4 + [368])
	$1 = *($4 + [392])
	*($9) = *($3)
	*($4 + [416]) = *($4 + [400])
	$3 = (($4 + [32]) + int_32($5 >> [1]))
	if ( (($5 & [1]) == 0) ){ goto $label$4 }
	$6 = *((*($3) + $6))
	
.LABEL $label$4
	$11 = *((($4 + [416]) + [8]))
	*((($4 + [432]) + [8])) = $11
	*(($4 + [8])) = $11
	$11 = *($4 + [416])
	*($4) = $11
	*($4 + [432]) = $11
	CALL void $3((int_32 $0), (int_64 $4), (int_32 $1), (int_64 $6))
	if ( ($7 <= [513]) ){ goto $label$5 }
	CALL $2($2)
	
.LABEL $label$5
	CALL $48(($4 + [32]))
	$global$0 = ($4 + [448])
	return [1]
}

int_32 .FUNC $146 (int_64 $0, int_64 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	$3 = ($global$0 - [464])
	$global$0 = $3
	*(($4 = $3) + [408]) = *($2)
	$2 = [0]
	$5 = CALL action_data_size()
	if ( ($5 == 0) ){ goto $label$1 }
	if ( ($5 <= [513]) ){ goto $label$3 }
	$2 = CALL $1($5)
	goto $label$2 
	
.LABEL $label$3
	$2 = ($3 - (($5 + [15]) & [-16]))
	$global$0 = $2
	
.LABEL $label$2
	CALL read_action_data($2, $5)
	
.LABEL $label$1
	*((($4 + [360]) + [24])) = (int_64)0
	*((($4 + [360]) + [40])) = [0]
	*($4 + [368]) = (int_64)0
	*($4 + [360]) = (int_64)0
	*($4 + [376]) = (int_64)0
	*($4 + [392]) = (int_64)0
	*($4 + [348]) = $2
	*($4 + [344]) = $2
	*($4 + [352]) = ($2 + $5)
	*($4 + [448]) = ($4 + [344])
	*($4 + [24]) = ($4 + [360])
	CALL $156(($4 + [24]), ($4 + [448]))
	*(($3 = (($4 + [8]) + [8]))) = *($4 + [352])
	*($4 + [8]) = *($4 + [344])
	$3 = *($3)
	*((($4 + [416]) + [8])) = $3
	*(($6 = (($4 + [432]) + [8]))) = $3
	$7 = *($4 + [8])
	*($4 + [432]) = $7
	*($4 + [416]) = $7
	$3 = *($6)
	*((($4 + [448]) + [8])) = $3
	*((($4 + [24]) + [24])) = $3
	*($4 + [24]) = $0
	*($4 + [32]) = $1
	$7 = *($4 + [432])
	*($4 + [40]) = $7
	*($4 + [448]) = $7
	*((($4 + [24]) + [40])) = $0
	*(($4 + [72])) = (int_64)-1
	*(($4 + [80])) = (int_64)0
	*(($4 + [88])) = [0]
	*(($4 + [104])) = $0
	*(($4 + [112])) = (int_64)-1
	*(($4 + [120])) = (int_64)0
	*(($4 + [128])) = [0]
	*(($4 + [144])) = $0
	*(($4 + [152])) = (int_64)-1
	*(($4 + [160])) = (int_64)0
	*(($4 + [168])) = [0]
	*(($4 + [172])) = [0]
	*(($4 + [184])) = $0
	*($4 + [56]) = $0
	*($4 + [96]) = $0
	*($4 + [136]) = $0
	*($4 + [176]) = $0
	*(($4 + [192])) = (int_64)-1
	*(($4 + [200])) = (int_64)0
	*(($4 + [208])) = [0]
	*(($4 + [224])) = $0
	*(($4 + [232])) = (int_64)-1
	*(($4 + [240])) = (int_64)0
	*(($4 + [248])) = [0]
	*(($4 + [252])) = [0]
	*(($4 + [264])) = $0
	*(($4 + [272])) = (int_64)-1
	*(($4 + [280])) = (int_64)0
	*(($4 + [288])) = [0]
	*(($4 + [304])) = $0
	*(($4 + [312])) = (int_64)-1
	*(($4 + [320])) = [0]
	*($4 + [216]) = $0
	*($4 + [256]) = $0
	*($4 + [296]) = $0
	*(($4 + [324])) = (int_64)0
	*($4 + [336]) = $1
	*($4 + [452]) = ($4 + [408])
	*($4 + [448]) = ($4 + [24])
	CALL $157(($4 + [448]), ($4 + [360]))
	if ( ($5 <= [513]) ){ goto $label$4 }
	CALL $2($2)
	
.LABEL $label$4
	CALL $48(($4 + [24]))
	if ( ((*($4 + [392]) & [1]) == 0) ){ goto $label$5 }
	CALL $9(*(($4 + [400])))
	
.LABEL $label$5
	$global$0 = ($4 + [464])
	return [1]
}

void .FUNC $141 (int_32 $0, int_64 $1, int_64 $2, int_64 $3, int_32 $4, int_64 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$6 = ($global$0 - [128])
	$global$0 = $6
	CALL require_auth(*($0))
	$7 = ($0 + [192])
	$9 = *(($0 + [220]))
	$8 = *(($0 + [216]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	
.LOOP $label$4:
	$10 = ($9 + [-24])
	$11 = *($10)
	if ( ((int_64)*($11) == (int_64)$2) ){ goto $label$3 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	if ( ((int_32)*($11 + [28]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$11 = [0]
	$10 = CALL db_find_i64(*($7), *(($0 + [200])), (int_64)-3851373727820283904, $2)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $110($7, $10)
	if ( ((int_32)*($11 + [28]) == (int_32)$7) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$11 != (int_32)[0]), [9571])
	$12 = ($11 + [20])
	$10 = *($12)
	if ( ($10 == 0) ){ goto $label$6 }
	$9 = $12
	
.LOOP $label$7:
	$8 = (uint_64)(*($10 + [16]) <= $3)
	$9 = ( $9 ? $10 : $8 )
	$10 = *(($10 + ($8 << [2])))
	if ( $10 ){ goto $label$7 }
	if ( ((int_32)$9 == (int_32)$12) ){ goto $label$6 }
	if ( ((uint_64)*($9 + [16]) <= (uint_64)$3) ){ goto $label$5 }
	
.LABEL $label$6
	$9 = $12
	
.LABEL $label$5
	*($6 + [56]) = $9
	CALL eosio_assert(((int_32)$9 != (int_32)$12), [9592])
	if ( ((int_64)*($4) <= (int_64)0) ){ goto $label$9 }
	*(($6 + [48])) = [0]
	*(($6 + [32])) = *(($4 + [8]))
	*($6 + [16]) = $3
	*($6 + [8]) = (int_64)-4155580855816477824
	*($6 + [40]) = (int_64)0
	*($6 + [24]) = *($4)
	$9 = ($6 + [40])
	$10 = CALL $15([9614])
	if ( ((uint_32)$10 >= (uint_32)[-16]) ){ goto $label$8 }
	$8 = ($6 + [24])
	if ( ((uint_32)$10 >= (uint_32)[11]) ){ goto $label$12 }
	*(($6 + [40])) = ($10 << [1])
	$12 = ($9 + [1])
	if ( $10 ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$12
	$13 = (($10 + [16]) & [-16])
	$12 = CALL $7($13)
	*(($6 + [48])) = $12
	*(($6 + [44])) = $10
	*($6 + [40]) = ($13 | [1])
	
.LABEL $label$11
	CALL memcpy($12, [9614], $10)
	
.LABEL $label$10
	*(($12 + $10)) = [0]
	*(($10 = CALL $7([16]))) = (int_64)-4155580855816477824
	*($10 + [8]) = (int_64)3617214756542218240
	*(($6 + [88])) = *(($8 + [8]))
	*(($12 = (($6 + [64]) + [40]))) = *(($9 + [8]))
	$2 = *($9)
	*(($6 + [40])) = (int_64)0
	*($6 + [112]) = $10
	$10 = ($10 + [16])
	*($6 + [120]) = $10
	*($6 + [116]) = $10
	*($6 + [64]) = *($6 + [8])
	*($6 + [72]) = *((($6 + [8]) + [8]))
	*($6 + [80]) = *($8)
	*($6 + [96]) = $2
	*((($6 + [8]) + [40])) = [0]
	CALL $64((int_64)6138663591592764928, (int_64)-3617168760277827584, ($6 + [112]), ($6 + [64]))
	if ( ((*($6 + [96]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*($12))
	
.LABEL $label$13
	$10 = *($6 + [112])
	if ( ($10 == 0) ){ goto $label$14 }
	*($6 + [116]) = $10
	CALL $9($10)
	
.LABEL $label$14
	if ( ((*(($6 + [40])) & [1]) == 0) ){ goto $label$9 }
	CALL $9(*(($6 + [48])))
	
.LABEL $label$9
	*(($6 + [80])) = *(($4 + [8]))
	*($6 + [64]) = $3
	*($6 + [88]) = $5
	*($6 + [72]) = *($4)
	$12 = ($0 + [272])
	$9 = *(($0 + [300]))
	$4 = *(($0 + [296]))
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$16 }
	
.LOOP $label$18:
	$10 = ($9 + [-24])
	$8 = *($10)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$17 }
	$9 = $10
	if ( ((int_32)$4 != (int_32)$10) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$4 == (int_32)$9) ){ goto $label$16 }
	if ( ((int_32)*($8 + [32]) == (int_32)$12) ){ goto $label$15 }
	CALL eosio_assert([0], [10072])
	goto $label$15 
	
.LABEL $label$16
	$8 = [0]
	$10 = CALL db_find_i64(*($12), *(($0 + [280])), (int_64)-4812882707900006400, $1)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$15 }
	$8 = CALL $142($12, $10)
	if ( ((int_32)*($8 + [32]) == (int_32)$12) ){ goto $label$15 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$15
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9661])
	$3 = *($0)
	*($6 + [112]) = ($6 + [64])
	if ( $8 ){ goto $label$19 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$19
	CALL $143($12, $8, $3, ($6 + [112]))
	$3 = *($0)
	*($6 + [112]) = ($6 + [56])
	if ( $11 ){ goto $label$20 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$20
	CALL $144($7, $11, $3, ($6 + [112]))
	if ( (*(($11 + [24])) == 0) ){ goto $label$21 }
	$global$0 = ($6 + [128])
	return 
	
.LABEL $label$21
	if ( $11 ){ goto $label$22 }
	CALL eosio_assert([0], [10813])
	CALL eosio_assert([0], [10723])
	
.LABEL $label$22
	$10 = CALL db_next_i64(*($11 + [32]), ($6 + [112]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$23 }
	CALL $110($7, $10)
	
.LABEL $label$23
	CALL $125($7, $11)
	$10 = CALL db_lowerbound_i64(*(($0 + [192])), *(($0 + [200])), (int_64)-3851373727820283904, (int_64)0)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$24 }
	CALL $110($7, $10)
	$global$0 = ($6 + [128])
	return 
	
.LABEL $label$24
	CALL $116($0, (int_64)112, (int_64)1)
	$global$0 = ($6 + [128])
	return (unreachable)
	
.LABEL $label$8
	CALL $29($9)
}

void .FUNC $140 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $7(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $88(($7 + [28]), [48])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $212(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $9($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $143 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [32]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$3 = *($3)
	$6 = *($1)
	$7 = ($1 + [24])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)*(($1 + [28]))) ){ goto $label$5 }
	*($8) = *($3)
	*(($8 + [24])) = *(($3 + [24]))
	*(($8 + [16])) = *(($3 + [16]))
	*(($8 + [8])) = *(($3 + [8]))
	*($7) = (*($7) + [32])
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	CALL $127(($1 + [20]), $3)
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	
.LABEL $label$4
	CALL eosio_assert([0], [10369])
	
.LABEL $label$3
	$7 = *($1 + [8])
	$3 = *(($1 + [12]))
	$9 = ($3 - $7)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [5]))
	$8 = [8]
	
.LOOP $label$6:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$7 }
	$8 = (($9 & [-32]) + $8)
	
.LABEL $label$7
	$7 = *($1 + [20])
	$3 = *(($1 + [24]))
	$9 = ($3 - $7)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [5]))
	
.LOOP $label$8:
	$8 = ($8 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$8 }
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$9 }
	$8 = (($9 & [-32]) + $8)
	
.LABEL $label$9
	if ( ($8 <= [513]) ){ goto $label$11 }
	$11 = CALL $1($8)
	goto $label$10 
	
.LABEL $label$11
	$11 = ($4 - (($8 + [15]) & [-16]))
	$global$0 = $11
	
.LABEL $label$10
	*($5 + [12]) = $11
	*($5 + [8]) = $11
	*($5 + [16]) = ($11 + $8)
	$3 = $11
	if ( ((int_32)$8 > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10508])
	$3 = *($5 + [12])
	
.LABEL $label$12
	CALL memcpy($3, $1, [8])
	$3 = ($3 + [8])
	*($5 + [12]) = $3
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	
.LOOP $label$13:
	$4 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$7 = ((int_64)$10) != (int_64)0
	*($5 + [32]) = (($7) << [7]) | ($4 & [127]))
	if ( ((int_32)(*((($5 + [8]) + [8])) - $3) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [10508])
	$3 = *($5 + [12])
	
.LABEL $label$14
	CALL memcpy($3, ($5 + [32]), [1])
	$3 = ($3 + [1])
	*($5 + [12]) = $3
	if ( $7 ){ goto $label$13 }
	$7 = *(($1 + [12]))
	$4 = *(($1 + [8]))
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$15 }
	
.LOOP $label$16:
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $4
	*((($5 + [32]) + [8])) = ($4 + [24])
	*($5 + [36]) = ($4 + [8])
	CALL $211(($5 + [32]), ($5 + [24]))
	$4 = ($4 + [32])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$16 }
	$3 = *($5 + [12])
	
.LABEL $label$15
	$10 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$9 = (($5 + [8]) + [8])
	
.LOOP $label$17:
	$4 = (CASTING uint_32)(uint_64 $10)
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	$7 = ((int_64)$10) != (int_64)0
	*($5 + [32]) = (($7) << [7]) | ($4 & [127]))
	if ( ((int_32)(*($9) - $3) > (int_32)[0]) ){ goto $label$18 }
	CALL eosio_assert([0], [10508])
	$3 = *($5 + [12])
	
.LABEL $label$18
	CALL memcpy($3, ($5 + [32]), [1])
	$3 = (*($5 + [12]) + [1])
	*($5 + [12]) = $3
	if ( $7 ){ goto $label$17 }
	$4 = *(($1 + [24]))
	$3 = *(($1 + [20]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$19 }
	
.LOOP $label$20:
	*($5 + [24]) = ($5 + [8])
	*($5 + [32]) = $3
	*((($5 + [32]) + [8])) = ($3 + [24])
	*($5 + [36]) = ($3 + [8])
	CALL $211(($5 + [32]), ($5 + [24]))
	$3 = ($3 + [32])
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$20 }
	
.LABEL $label$19
	CALL db_update_i64(*($1 + [36]), $2, $11, $8)
	if ( ((uint_32)$8 >= (uint_32)[513]) ){ goto $label$23 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$22 }
	goto $label$21 
	
.LABEL $label$23
	CALL $2($11)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$21 }
	
.LABEL $label$22
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$21
	$global$0 = ($5 + [48])
}

int_32 .FUNC $142 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$6 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$6 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $4
	$7 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10123])
	
.LABEL $label$5
	$4 = CALL $1($6)
	$7 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $6)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $6)
	*(($5 = CALL $7([48])) + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = $0
	$8 = ($5 + [20])
	$9 = ($5 + [8])
	$2 = $4
	if ( ((uint_32)$6 > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	$2 = *($3 + [36])
	
.LABEL $label$7
	CALL memcpy($5, $2, [8])
	*($3 + [36]) = ($2 + [8])
	CALL $213(CALL $213(($3 + [32]), $9), $8)
	*($5 + [36]) = $1
	*($3 + [24]) = $5
	$10 = *($5)
	*($3 + [16]) = $10
	*($3 + [12]) = $1
	$2 = ($0 + [28])
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [32]))) ){ goto $label$10 }
	*($6 + [8]) = $10
	*($6 + [16]) = $1
	*($3 + [24]) = [0]
	*($6) = $5
	*($2) = ($6 + [24])
	if ( $7 ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $130(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($7 == 0) ){ goto $label$8 }
	
.LABEL $label$9
	CALL $2($4)
	
.LABEL $label$8
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$11 }
	$4 = *($1 + [20])
	if ( ($4 == 0) ){ goto $label$12 }
	*(($1 + [24])) = $4
	CALL $9($4)
	
.LABEL $label$12
	$4 = *($1 + [8])
	if ( ($4 == 0) ){ goto $label$13 }
	*(($1 + [12])) = $4
	CALL $9($4)
	
.LABEL $label$13
	CALL $9($1)
	
.LABEL $label$11
	$global$0 = ($3 + [48])
	return $5
}

int_32 .FUNC $72 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0) = *($1)
	$2 = *(($1 + [8]))
	*(($0 + [20])) = (int_64)0
	*(($0 + [8])) = $2
	*($0 + [16]) = [0]
	$3 = (*(($1 + [20])) - *($1 + [16]))
	if ( ($3 == 0) ){ goto $label$3 }
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$2 }
	$3 = CALL $7($3)
	*(($0 + [16])) = $3
	*(($0 + [24])) = ($3 + ($4 << [4]))
	*(($4 = ($0 + [20]))) = $3
	$5 = *(($1 + [16]))
	$6 = (*(($1 + [20])) - $5)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($3, $5, $6)
	*($4) = (*($4) + $6)
	
.LABEL $label$3
	*($0 + [28 align=4]) = (int_64)0
	*(($0 + [36])) = [0]
	$3 = (*(($1 + [32])) - *($1 + [28]))
	if ( ($3 == 0) ){ goto $label$4 }
	if ( ((int_32)$3 <= (int_32)[-1]) ){ goto $label$1 }
	$4 = CALL $7($3)
	*(($0 + [28])) = $4
	*(($0 + [36])) = ($4 + $3)
	*(($3 = ($0 + [32]))) = $4
	$6 = *(($1 + [28]))
	$1 = (*(($1 + [32])) - $6)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$4 }
	CALL memcpy($4, $6, $1)
	*($3) = (*($3) + $1)
	
.LABEL $label$4
	return $0
	
.LABEL $label$2
	CALL $44(($0 + [16]))
	
.LABEL $label$1
	CALL $44(($0 + [28]))
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $73 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	*($0) = (int_64)0
	$2 = *($1 + [4])
	if ( ($2 <= [14]) ){ goto $label$5 }
	CALL eosio_assert([0], [9896])
	$3 = [12]
	goto $label$4 
	
.LABEL $label$5
	if ( ($2 == 0) ){ goto $label$1 }
	$3 = ( $2 ? [12] : ($2 <= [12]) )
	if ( ($3 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = *($0)
	$5 = *($1)
	$6 = [0]
	
.LOOP $label$6:
	$4 = ((int_64)$4 << (int_64)5)
	*($0) = $4
	$7 = *(($5 + $6))
	if ( ((int_32)$7 != (int_32)[46]) ){ goto $label$8 }
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$9 }
	$7 = ($7 + [-48])
	goto $label$7 
	
.LABEL $label$9
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$7 = ($7 + [-91])
	goto $label$7 
	
.LABEL $label$10
	$7 = [0]
	CALL eosio_assert([0], [10001])
	$4 = *($0)
	
.LABEL $label$7
	$4 = ((int_64)$4 | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) & (int_64)255))
	*($0) = $4
	$6 = ($6 + [1])
	if ( ($6 <= $3) ){ goto $label$6 }
	goto $label$2 
	
.LABEL $label$3
	$4 = *($0)
	$3 = [0]
	
.LABEL $label$2
	*($0) = ((int_64)$4 << (int_64)(CASTING uint_64)(uint_32 (((int_32)([12] - $3) * (int_32)[5]) + [4])))
	if ( ((int_32)$2 != (int_32)[13]) ){ goto $label$1 }
	$4 = (int_64)0
	$6 = *(*($1) + [12])
	if ( ((int_32)$6 == (int_32)[46]) ){ goto $label$11 }
	if ( ((uint_32)(($6 + [-49]) & [255]) > (uint_32)[4]) ){ goto $label$12 }
	$4 = ((int_64)(CASTING uint_64)(uint_32 ($6 + [-48])) & (int_64)255)
	goto $label$11 
	
.LABEL $label$12
	if ( ((uint_32)(($6 + [-97]) & [255]) >= (uint_32)[26]) ){ goto $label$13 }
	$6 = ($6 + [-91])
	$4 = ((int_64)(CASTING uint_64)(uint_32 $6) & (int_64)255)
	if ( (($6 & [255]) <= [16]) ){ goto $label$11 }
	CALL eosio_assert([0], [9934])
	goto $label$11 
	
.LABEL $label$13
	CALL eosio_assert([0], [10001])
	
.LABEL $label$11
	*($0) = ((int_64)*($0) | (int_64)$4)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $70 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10753])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$5 = *($1)
	$7 = *($1 + [4])
	$6 = ((int_32)($7 - $5) / (int_32)[40])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $193($1, ($2 - $6))
	$7 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$5 = ($5 + ((int_32)$2 * (int_32)[40]))
	if ( ((int_32)$5 == (int_32)$7) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = *(($7 + [-12]))
	if ( ($2 == 0) ){ goto $label$9 }
	*(($7 + [-8])) = $2
	CALL $9($2)
	
.LABEL $label$9
	$2 = ($7 + [-40])
	$6 = *(($7 + [-24]))
	if ( ($6 == 0) ){ goto $label$10 }
	*(($7 + [-20])) = $6
	CALL $9($6)
	
.LABEL $label$10
	$7 = $2
	if ( ((int_32)$5 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $5
	$7 = $5
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$11:
	CALL $194($0, $2)
	$2 = ($2 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $71 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10753])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$6 = *($1)
	$5 = *($1 + [4])
	$7 = int_32(($5 - $6) >> [4])
	if ( ((uint_32)$7 >= (uint_32)$2) ){ goto $label$5 }
	CALL $192($1, ($2 - $7))
	$5 = *(($1 + [4]))
	$2 = *($1)
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$7 <= (uint_32)$2) ){ goto $label$6 }
	$6 = ($6 + ($2 << [4]))
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$7 }
	
.LOOP $label$8:
	$2 = ($5 + [-16])
	$7 = *(($5 + [-12]))
	if ( ($7 == 0) ){ goto $label$9 }
	*(($5 + [-8])) = $7
	CALL $9($7)
	
.LABEL $label$9
	$5 = $2
	if ( ((int_32)$6 != (int_32)$2) ){ goto $label$8 }
	
.LABEL $label$7
	*(($1 + [4])) = $6
	$5 = $6
	
.LABEL $label$6
	$2 = *($1)
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$3 }
	
.LABEL $label$4
	$7 = ($0 + [4])
	$4 = ($0 + [8])
	
.LOOP $label$10:
	$6 = *($7)
	if ( ((uint_32)(*($4) - $6) > (uint_32)[1]) ){ goto $label$11 }
	CALL eosio_assert([0], [10757])
	$6 = *($7)
	
.LABEL $label$11
	CALL memcpy($2, $6, [2])
	*($7) = (*($7) + [2])
	CALL $169($0, ($2 + [4]))
	$2 = ($2 + [16])
	if ( ((int_32)$2 != (int_32)$5) ){ goto $label$10 }
	
.LABEL $label$3
	return $0
}

void .FUNC $76 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [96])
	$global$0 = $4
	*(($5 = ($0 + [24]))) = (int_64)0
	*($0) = (int_64)0
	*(($0 + [8])) = (int_64)0
	*(($0 + [16])) = (int_64)0
	*($5) = [0]
	*($4 + [88]) = [0]
	*($4 + [80]) = (int_64)0
	CALL $46(($4 + [80]), $2, [45])
	$6 = (*($4 + [84]) - *($4 + [80]))
	CALL eosio_assert(((uint_32)((int_32)$6 / (int_32)[12]) > (uint_32)[1]), [10514])
	*($0) = (CASTING int_64)(int_32 CALL $37(*($4 + [80]), [0], [10]))
	if ( ((int_64)*($3) != (int_64)-4155580622883343856) ){ goto $label$12 }
	*($4 + [72]) = [0]
	*($4 + [64]) = (int_64)0
	CALL $46(($4 + [64]), (*($4 + [80]) + [12]), [124])
	$2 = *($4 + [64])
	if ( (*($2) & [1]) ){ goto $label$11 }
	$2 = ($2 + [1])
	goto $label$10 
	
.LABEL $label$12
	$3 = *($4 + [80])
	if ( (*($3 + [12]) & [1]) ){ goto $label$9 }
	$3 = (($3 + [12]) + [1])
	goto $label$8 
	
.LABEL $label$11
	$2 = *($2 + [8])
	
.LABEL $label$10
	*($4 + [48]) = $2
	*($4 + [52]) = CALL $15($2)
	*($4 + [8]) = *($4 + [48])
	$2 = CALL $73(($4 + [56]), ($4 + [8]))
	if ( (CALL is_account(*($2)) == 0) ){ goto $label$13 }
	*($3) = *($2)
	
.LABEL $label$13
	$3 = *($4 + [64])
	if ( (*($3 + [12]) & [1]) ){ goto $label$7 }
	$3 = (($3 + [12]) + [1])
	goto $label$6 
	
.LABEL $label$9
	$3 = *(($3 + [20]))
	
.LABEL $label$8
	*($4 + [24]) = $3
	*($4 + [28]) = CALL $15($3)
	*($4 + [16]) = *($4 + [24])
	*(($0 + [8])) = *(CALL $73(($4 + [64]), ($4 + [16])))
	if ( ((int_32)$6 == (int_32)[36]) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$3 = *(($3 + [20]))
	
.LABEL $label$6
	*($4 + [32]) = $3
	*($4 + [36]) = CALL $15($3)
	*($4) = *($4 + [32])
	*(($0 + [8])) = *(CALL $73(($4 + [40]), $4))
	$5 = *($4 + [64])
	if ( ($5 == 0) ){ goto $label$14 }
	$2 = *($4 + [68])
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$3 = ($2 + [-12])
	if ( ((*($3) & [1]) == 0) ){ goto $label$18 }
	CALL $9(*(($2 + [-4])))
	
.LABEL $label$18
	$2 = $3
	if ( ((int_32)$5 != (int_32)$3) ){ goto $label$17 }
	$3 = *($4 + [64])
	goto $label$15 
	
.LABEL $label$16
	$3 = $5
	
.LABEL $label$15
	*($4 + [68]) = $5
	CALL $9($3)
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[36]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $31(($0 + [16]), (*($4 + [80]) + [24]))
	$0 = *($4 + [80])
	if ( ($0 == 0) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$4
	*(($4 + [72])) = [0]
	*($4 + [64]) = (int_64)0
	$3 = CALL $15([9119])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$21 }
	*($4 + [64]) = ($3 << [1])
	$2 = (($4 + [64]) | [1])
	if ( $3 ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	$5 = (($3 + [16]) & [-16])
	$2 = CALL $7($5)
	*($4 + [64]) = ($5 | [1])
	*($4 + [72]) = $2
	*($4 + [68]) = $3
	
.LABEL $label$20
	CALL memcpy($2, [9119], $3)
	
.LABEL $label$19
	*(($2 + $3)) = [0]
	$3 = ($0 + [16])
	if ( (*($0 + [16]) & [1]) ){ goto $label$23 }
	*($3) = [0]
	goto $label$22 
	
.LABEL $label$23
	*(*(($0 + [24]))) = [0]
	*(($0 + [20])) = [0]
	
.LABEL $label$22
	CALL $33($3, [0])
	*(($3 + [8])) = *((($4 + [64]) + [8]))
	*($3) = *($4 + [64])
	$0 = *($4 + [80])
	if ( $0 ){ goto $label$1 }
	
.LABEL $label$3
	$global$0 = ($4 + [96])
	return (unreachable)
	
.LABEL $label$2
	CALL $29(($4 + [64]))
	
.LABEL $label$1
	$2 = *($4 + [84])
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$25 }
	
.LOOP $label$26:
	$3 = ($2 + [-12])
	if ( ((*($3) & [1]) == 0) ){ goto $label$27 }
	CALL $9(*(($2 + [-4])))
	
.LABEL $label$27
	$2 = $3
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$26 }
	$3 = *($4 + [80])
	goto $label$24 
	
.LABEL $label$25
	$3 = $0
	
.LABEL $label$24
	*($4 + [84]) = $0
	CALL $9($3)
	$global$0 = ($4 + [96])
}

void .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	$5 = *($4)
	$6 = ($5 + [32])
	$7 = *($0)
	$9 = *(($5 + [60]))
	$8 = *(($5 + [56]))
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	
.LOOP $label$4:
	$10 = ($9 + [-24])
	$11 = *($10)
	if ( ((int_64)*($11) == (int_64)102) ){ goto $label$3 }
	$9 = $10
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$2 }
	if ( ((int_32)*($11 + [16]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$11 = [0]
	$10 = CALL db_find_i64(*($6), *(($5 + [40])), (int_64)7235159550150574080, (int_64)102)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$11 = CALL $53($6, $10)
	if ( ((int_32)*($11 + [16]) == (int_32)$6) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	*($3 + [8]) = ((int_64)*($11 + [8]) + (int_64)1)
	$12 = *($5)
	*($3 + [24]) = ($3 + [8])
	if ( $11 ){ goto $label$5 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$5
	CALL $197($6, $11, $12, ($3 + [24]))
	*($1) = *($3 + [8])
	*($1 + [8]) = *(*($4 + [4]))
	*($1 + [16]) = *(*($4 + [8]))
	$10 = *($4 + [12])
	*(($1 + [32])) = *(($10 + [8]))
	*($1 + [24]) = *($10)
	$10 = *($4 + [16])
	*($1 + [40]) = *($10)
	CALL $31(($1 + [48]), ($10 + [16]))
	if ( (*([0] + [8232]) == 0) ){ goto $label$7 }
	$12 = *([0] + [8224])
	goto $label$6 
	
.LABEL $label$7
	$12 = CALL current_time()
	*([0] + [8232]) = [1]
	*([0] + [8224]) = $12
	
.LABEL $label$6
	*($1 + [64]) = $12
	$10 = *(($1 + [48]))
	$9 = ( *(($1 + [52])) ? uint_32($10 >> [1]) : ($10 & [1]) )
	$10 = ($9 + [56])
	$12 = (CASTING uint_64)(uint_32 $9)
	
.LOOP $label$8:
	$10 = ($10 + [1])
	$12 = (uint_64)$12 >> (uint_64)(int_64)7
	if ( ((int_64)$12) != (int_64)0) ){ goto $label$8 }
	if ( ($10 <= [513]) ){ goto $label$10 }
	$9 = CALL $1($10)
	goto $label$9 
	
.LABEL $label$10
	$9 = ($2 - (($10 + [15]) & [-16]))
	$global$0 = $9
	
.LABEL $label$9
	*($3 + [12]) = $9
	*($3 + [8]) = $9
	*($3 + [16]) = ($9 + $10)
	CALL $198(($3 + [8]), $1)
	$12 = *($1)
	*($1 + [76]) = CALL db_store_i64(*($7 + [8]), (int_64)4229865212519383040, *(*($0 + [8])), $12, $9, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$13 }
	if ( ((uint_64)$12 >= (uint_64)*($7 + [16])) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	CALL $2($9)
	if ( (uint_64)($12 <= *($7 + [16])) ){ goto $label$11 }
	
.LABEL $label$12
	*(($7 + [16])) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [32])
	return 
	
.LABEL $label$11
	$global$0 = ($3 + [32])
}

void .FUNC $74 (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = ($global$0 - [48])
	$global$0 = $4
	*(($4 + [40])) = [0]
	*($4 + [24]) = (int_64)-1
	*($4 + [32]) = (int_64)0
	*($4 + [16]) = $2
	*($4 + [8]) = $1
	$5 = CALL db_find_i64($1, $2, (int_64)3607749779137757184, $3)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$5 = CALL $84(($4 + [8]), $5)
	if ( ((int_32)*($5 + [16]) == (int_32)($4 + [8])) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	*($0) = *($5)
	*(($0 + [8])) = *(($5 + [8]))
	$6 = *($4 + [32])
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ($4 + [36])
	$0 = *($7)
	if ( ((int_32)$0 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$6:
	$0 = ($0 + [-24])
	$5 = *($0)
	*($0) = [0]
	if ( ($5 == 0) ){ goto $label$7 }
	CALL $9($5)
	
.LABEL $label$7
	if ( ((int_32)$6 != (int_32)$0) ){ goto $label$6 }
	$0 = *(($4 + [32]))
	goto $label$1 
	
.LABEL $label$4
	CALL eosio_assert([0], [10053])
	*(($0 + [8])) = *([0] + [8])
	*($0) = *([0])
	
.LABEL $label$3
	$global$0 = ($4 + [48])
	return 
	
.LABEL $label$2
	$0 = $6
	
.LABEL $label$1
	*($7) = $6
	CALL $9($0)
	$global$0 = ($4 + [48])
}

void .FUNC $75 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [96]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10428])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [88]) + (int_64)*($3))
	*($1 + [88]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10471])
	$7 = *(($1 + [88]))
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10490])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-128])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $179($5, $1)
	CALL db_update_i64(*($1 + [124]), $2, $4, [120])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $78 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	if ( ((*($1 + [48]) & [1]) == 0) ){ goto $label$11 }
	CALL $9(*(($1 + [56])))
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$12 }
	CALL $9($2)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $79 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$5 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$5 }
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	$6 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10123])
	
.LABEL $label$5
	$4 = CALL $1($5)
	$6 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $4, $5)
	*($3 + [36]) = $4
	*($3 + [32]) = $4
	*($3 + [40]) = ($4 + $5)
	*(($5 = CALL $7([104])) + [16]) = (int_64)0
	*($5) = (int_64)0
	*($5 + [24]) = (int_64)0
	*($5 + [32]) = (int_64)0
	*($5 + [40]) = (int_64)0
	*($5 + [56]) = (int_64)0
	*($5 + [64]) = (int_64)0
	*($5 + [72]) = (int_64)0
	*($5 + [80]) = (int_64)0
	*($5 + [88]) = $0
	CALL $200(($3 + [32]), $5)
	*($5 + [92]) = $1
	*($5 + [96 align=4]) = (int_64)-1
	*($3 + [24]) = $5
	$7 = *($5)
	*($3 + [16]) = $7
	*($3 + [12]) = $1
	$8 = ($0 + [28])
	$2 = *($8)
	if ( ((uint_32)$2 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($2 + [8]) = $7
	*($2 + [16]) = $1
	*($3 + [24]) = [0]
	*($2) = $5
	*($8) = ($2 + [24])
	if ( $6 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $81(($0 + [24]), ($3 + [24]), ($3 + [16]), ($3 + [12]))
	if ( ($6 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($4)
	
.LABEL $label$7
	$1 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $9($1)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $5
}

void .FUNC $98 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	if ( ((int_32)*($1 + [72]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10847])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10892])
	
.LABEL $label$2
	$3 = ($0 + [28])
	$4 = *($3)
	$2 = *($0 + [24])
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$8 }
	$5 = $4
	$6 = *($1)
	if ( ((int_64)*(*(($4 + [-24]))) == (int_64)$6) ){ goto $label$9 }
	$7 = ($2 + [24])
	$8 = $4
	
.LOOP $label$10:
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$8 }
	$9 = ($8 + [-48])
	$5 = ($8 + [-24])
	$8 = $5
	if ( ((int_64)*(*($9)) != (int_64)$6) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$7 }
	$9 = [-24]
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$5 = $2
	
.LABEL $label$7
	CALL eosio_assert([0], [10942])
	$9 = [-24]
	$4 = *($3)
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	
.LABEL $label$6
	$7 = ($5 + $9)
	goto $label$4 
	
.LABEL $label$5
	$8 = $5
	
.LOOP $label$11:
	$7 = *($8)
	*($8) = [0]
	$2 = ($8 + $9)
	$5 = *($2)
	*($2) = $7
	if ( ($5 == 0) ){ goto $label$12 }
	if ( ((*($5 + [48]) & [1]) == 0) ){ goto $label$13 }
	CALL $9(*(($5 + [56])))
	
.LABEL $label$13
	CALL $9($5)
	
.LABEL $label$12
	*(($8 + [-8])) = *(($8 + [16]))
	*(($8 + [-16])) = *(($8 + [8]))
	$8 = ($8 + [24])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	$7 = ($8 + [-24])
	$5 = *(($0 + [28]))
	if ( ((int_32)($5 + [24]) == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$14:
	$5 = ($5 + $9)
	$8 = *($5)
	*($5) = [0]
	if ( ($8 == 0) ){ goto $label$15 }
	if ( ((*($8 + [48]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($8 + [56])))
	
.LABEL $label$16
	CALL $9($8)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$14 }
	
.LABEL $label$3
	*(($0 + [28])) = $7
	CALL db_remove_i64(*($1 + [76]))
}

void .FUNC $99 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = *($0)
	$7 = ((int_32)(*($0 + [4]) - $6) / (int_32)[40])
	$8 = ($7 + [1])
	if ( ((uint_32)$8 >= (uint_32)[107374183]) ){ goto $label$2 }
	$9 = [107374182]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[40])
	if ( ((uint_32)$6 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($6 << [1])
	$9 = ( $8 ? $9 : ($9 <= $8) )
	if ( ($9 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $7(((int_32)$9 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$9 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	*(($7 = ($6 + ((int_32)$7 * (int_32)[40])))) = *($2)
	*($7 + [8]) = *($3)
	*($7 + [16 align=4]) = (int_64)0
	*(($3 = ($7 + [24]))) = [0]
	$2 = CALL $7([16])
	*($7 + [16]) = $2
	*($7 + [28 align=4]) = (int_64)0
	*(($7 + [36])) = [0]
	$8 = ($2 + [16])
	*($3) = $8
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($7 + [20])) = $8
	CALL $88(($7 + [28]), [40])
	$2 = *(($7 + [32]))
	$1 = *($7 + [28])
	*($5 + [4]) = $1
	*($5) = $1
	*($5 + [8]) = $2
	*($5 + [16]) = $5
	*($5 + [24]) = $4
	$10 = ($6 + ((int_32)$9 * (int_32)[40]))
	$11 = ($7 + [40])
	CALL $89(($5 + [24]), ($5 + [16]))
	$2 = *($0)
	$8 = *(($0 + [4]))
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	$12 = ($2 - $8)
	$1 = [0]
	
.LOOP $label$7:
	$9 = ($8 + $1)
	*((($2 = ($7 + $1)) + [-32])) = *(($9 + [-32]))
	*(($2 + [-40])) = *(($9 + [-40]))
	*(($6 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($9 + [-24])
	*($6) = *($4)
	$6 = ($9 + [-16])
	*($3) = *($6)
	*($6) = [0]
	*(($6 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($9 + [-12])
	*($6) = *($3)
	*($4) = (int_64)0
	$9 = ($9 + [-4])
	*($2) = *($9)
	*($9) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$12 != (int_32)$1) ){ goto $label$7 }
	$7 = ($7 + $1)
	$2 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $2
	
.LABEL $label$5
	*($0) = $7
	*(($0 + [4])) = $11
	*(($0 + [8])) = $10
	if ( ((int_32)$2 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$9 = *(($2 + [-12]))
	if ( ($9 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $9
	CALL $9($9)
	
.LABEL $label$10
	$9 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $9
	if ( ((int_32)$6 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $9($6)
	
.LABEL $label$12
	$global$0 = ($5 + [32])
	(unreachable)
}

void .FUNC $94 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*(($3 + [32])) == (int_64)*(($1 + [64]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10428])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [56]) + (int_64)*($3 + [24]))
	*($1 + [56]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10471])
	$7 = *(($1 + [56]))
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10490])
	
.LABEL $label$5
	*($1 + [112]) = ((int_64)*($1 + [112]) + (int_64)1)
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-128])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $179($5, $1)
	CALL db_update_i64(*($1 + [124]), $2, $4, [120])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $95 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($5 + [16])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$4 = *(($1 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $0, [8])
	$0 = (*($4) + [8])
	*(($4 = ($1 + [4]))) = $0
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($1 + [8])) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$0 = *($4)
	
.LABEL $label$4
	CALL memcpy($0, ($2 + [8]), [8])
	*($4) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $96 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	float_64 $11
	int_64 $12
	int_64 $13
	$3 = ($global$0 - [48])
	$global$0 = $3
	$4 = ($1 + [32])
	$6 = *(($1 + [60]))
	$5 = *(($1 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)103) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($1 + [40])), (int_64)7235159550150574080, (int_64)103)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $53($4, $7)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	$9 = *($2)
	$10 = *($8 + [8])
	$7 = CALL $15([9120])
	$6 = ($7 <= [8])
	$11 = ((float_64)((float_64)(CASTING float_64)(uint_64 $10) / (float_64)(float_64)1e4) * (float_64)(CASTING float_64)(int_64 $9))
	if ( ((float_64)(float_64)|$11| < (float_64)(float_64)9223372036854775808) ){ goto $label$9 }
	$12 = (int_64)-9223372036854775808
	if ( ($6 == 0) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$12 = (Rounds 0)($11)
	if ( $6 ){ goto $label$7 }
	
.LABEL $label$8
	CALL eosio_assert([0], [9729])
	goto $label$6 
	
.LABEL $label$7
	if ( $7 ){ goto $label$6 }
	$13 = (int_64)4
	goto $label$5 
	
.LABEL $label$6
	$9 = (int_64)0
	
.LOOP $label$10:
	$6 = *(($7 + [9119]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$11 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$11
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$10 }
	$13 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)4)
	
.LABEL $label$5
	*($3 + [40]) = $13
	*($3 + [32]) = $12
	if ( (uint_64)(((int_64)$12 + (int_64)4611686018427387903) <= (int_64)9223372036854775807) ){ goto $label$12 }
	CALL eosio_assert([0], [9827])
	
.LABEL $label$12
	$9 = (uint_64)$13 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$16:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$15 }
	$10 = (uint_64)$9 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$9 & (int_64)65280) == (int_64)0) ){ goto $label$18 }
	$9 = $10
	$6 = $7
	$7 = ($6 + [1])
	if ( ((int_32)$6 < (int_32)[6]) ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$18
	$9 = $10
	
.LOOP $label$19:
	if ( ((int_64)((int_64)$9 & (int_64)65280) != (int_64)0) ){ goto $label$15 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = ((int_32)$7 < (int_32)[6])
	$8 = ($7 + [1])
	$7 = $8
	if ( $6 ){ goto $label$19 }
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$16 }
	
.LABEL $label$17
	if ( ((int_64)$12 <= (int_64)0) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	CALL eosio_assert([0], [9876])
	if ( ((int_64)$12 > (int_64)0) ){ goto $label$13 }
	
.LABEL $label$14
	*($0) = *($3 + [32])
	*(($0 + [8])) = *((($3 + [32]) + [8]))
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$13
	$7 = CALL $15([9120])
	if ( ($7 <= [8]) ){ goto $label$23 }
	CALL eosio_assert([0], [9729])
	goto $label$22 
	
.LABEL $label$23
	if ( ($7 == 0) ){ goto $label$21 }
	
.LABEL $label$22
	$9 = (int_64)0
	
.LOOP $label$24:
	$6 = *(($7 + [9119]))
	if ( ((($6 + [-65]) & [255]) <= [26]) ){ goto $label$25 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$25
	$9 = ((int_64)((int_64)$9 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$24 }
	$9 = ((int_64)$9 & (int_64)72057594037927935)
	goto $label$20 
	
.LABEL $label$21
	$9 = (int_64)0
	
.LABEL $label$20
	CALL $74(($3 + [16]), (int_64)-4155580855749438160, (int_64)-4155580855981124736, $9)
	if ( ((int_64)$13 == (int_64)*($3 + [24])) ){ goto $label$26 }
	CALL eosio_assert([0], [10639])
	
.LABEL $label$26
	$7 = ( ($3 + [16]) ? ($3 + [32]) : ((int_64)*($3 + [16]) < (int_64)$12) )
	$9 = *($7)
	CALL __multi3($3, $9, (int_64)$9 >> (int_64)63), (int_64)10, (int_64)0)
	$12 = *(($7 + [8]))
	*((($3 + [32]) + [8])) = $12
	*($3 + [32]) = $9
	$9 = *(($3 + [8]))
	$10 = *($3)
	if ( (( (uint_64)($10 <= (int_64)4611686018427387904) ? ((int_64)$9 < (int_64)0) : (int_64)($9 == 0) ) == 0) ){ goto $label$28 }
	if ( ( ((uint_64)$10 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$9 > (int_64)-1) : ((int_64)$9 == (int_64)-1) ) ){ goto $label$27 }
	CALL eosio_assert([0], [10614])
	goto $label$27 
	
.LABEL $label$28
	CALL eosio_assert([0], [10590])
	
.LABEL $label$27
	*($0 + [8]) = $12
	*($0) = ((int_64)$10 / (int_64)10)
	$global$0 = ($3 + [48])
}

void .FUNC $97 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$5 = ($4 + [32])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$0 = *(($1 + [4]))
	
.LABEL $label$5
	CALL memcpy($0, $5, [8])
	$5 = (*($0) + [8])
	*(($0 = ($1 + [4]))) = $5
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($1 + [8])) - $5) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$5 = *($0)
	
.LABEL $label$6
	CALL memcpy($5, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $90 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	$1 = ($global$0 - [32])
	$global$0 = $1
	*($1 + [8]) = [0]
	*($1) = (int_64)0
	$3 = *($0 + [16])
	$2 = *(($0 + [20]))
	$4 = ($2 - $3)
	$5 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [16]
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$2) ){ goto $label$2 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$2
	$3 = *($0 + [28])
	$2 = *(($0 + [32]))
	$6 = (($6 + $2) - $3)
	$5 = (CASTING uint_64)(uint_32 ($2 - $3))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$3 }
	if ( ($6 == 0) ){ goto $label$5 }
	CALL $88($1, $6)
	$2 = *($1 + [4])
	$6 = *($1)
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	$6 = [0]
	
.LABEL $label$4
	*($1 + [20]) = $6
	*($1 + [16]) = $6
	*($1 + [24]) = $2
	CALL $103(($1 + [16]), $0)
	$6 = *($1)
	CALL send_inline($6, (*($1 + [4]) - $6))
	$6 = *($1)
	if ( ($6 == 0) ){ goto $label$6 }
	*($1 + [4]) = $6
	CALL $9($6)
	
.LABEL $label$6
	$global$0 = ($1 + [32])
}

void .FUNC $91 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [80]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10428])
	
.LABEL $label$3
	$7 = ((int_64)*($1 + [72]) + (int_64)*($3))
	*($1 + [72]) = $7
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10471])
	$7 = *(($1 + [72]))
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10490])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-128])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $179($5, $1)
	CALL db_update_i64(*($1 + [124]), $2, $4, [120])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $92 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	$4 = ($global$0 - [144])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = *(($1 + [16]))
	CALL $202(($5 + [48]), $1)
	*(($5 + [104])) = *($5 + [56])
	CALL __floatditf(($5 + [32]), (int_64))((int_64)0 - $6))
	*($5 + [96]) = *($5 + [48])
	*($5 + [88]) = *(($5 + [40]))
	*($5 + [80]) = *($5 + [32])
	$6 = *($1)
	$7 = *($3)
	if ( ((int_64)*($7 + [8]) == (int_64)*(($1 + [40]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10428])
	
.LABEL $label$3
	$8 = ((int_64)*($1 + [32]) + (int_64)*($7))
	*($1 + [32]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10471])
	$8 = *(($1 + [32]))
	
.LABEL $label$4
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10490])
	
.LABEL $label$5
	$8 = *($1 + [48])
	if ( (uint_64)($8 <= *(*(*($3 + [4]) + [4]) + [8])) ){ goto $label$6 }
	if ( ((uint_64)$8 > (uint_64)*(*(*($3 + [8]) + [4]) + [8])) ){ goto $label$6 }
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [80]))) ){ goto $label$7 }
	CALL eosio_assert([0], [10428])
	
.LABEL $label$7
	$8 = ((int_64)*($1 + [72]) + (int_64)*($3))
	*($1 + [72]) = $8
	if ( ((int_64)$8 > (int_64)-4611686018427387904) ){ goto $label$8 }
	CALL eosio_assert([0], [10471])
	$8 = *(($1 + [72]))
	
.LABEL $label$8
	if ( ((int_64)$8 < (int_64)4611686018427387904) ){ goto $label$6 }
	CALL eosio_assert([0], [10490])
	
.LABEL $label$6
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$9 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$9
	$4 = $4
	$3 = ($4 + [-96])
	$global$0 = $3
	*($5 + [68]) = $3
	*($5 + [64]) = $3
	*($5 + [72]) = ($4 + [-8])
	CALL $201(($5 + [64]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $3, [88])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$10 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$10
	$3 = (($5 + [80]) + [16])
	CALL __floatditf(($5 + [16]), (int_64))((int_64)0 - *(($1 + [16]))))
	*($5 + [136]) = *(($5 + [24]))
	*($5 + [128]) = *($5 + [16])
	if ( (CALL $16(($5 + [80]), ($5 + [128]), [16]) == 0) ){ goto $label$11 }
	$7 = ($1 + [96])
	$4 = *($7)
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$12 }
	$4 = CALL db_idx_long_double_find_primary(*($0), *($0 + [8]), (int_64)-6030912129794572288, ($5 + [112]), $6)
	*($7) = $4
	
.LABEL $label$12
	CALL db_idx_long_double_update($4, $2, ($5 + [128]))
	
.LABEL $label$11
	CALL $202($5, $1)
	*($5 + [136]) = *($5 + [8])
	*($5 + [128]) = *($5)
	if ( (CALL $16($3, ($5 + [128]), [16]) == 0) ){ goto $label$13 }
	$3 = ($1 + [100])
	$1 = *($3)
	if ( ((int_32)$1 > (int_32)[-1]) ){ goto $label$14 }
	$1 = CALL db_idx_long_double_find_primary(*($0), *($0 + [8]), (int_64)-6030912129794572287, ($5 + [112]), $6)
	*($3) = $1
	
.LABEL $label$14
	CALL db_idx_long_double_update($1, $2, ($5 + [128]))
	
.LABEL $label$13
	$global$0 = ($5 + [144])
}

void .FUNC $93 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ($0 + [72])
	$4 = (uint_64)*($1 + [8]) >> (uint_64)(int_64)8)
	$6 = *(($0 + [100]))
	$5 = *(($0 + [96]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	
.LOOP $label$6:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)(uint_64)*($8 + [8]) >> (uint_64)(int_64)8) == (int_64)$4) ){ goto $label$5 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$6 }
	goto $label$4 
	
.LABEL $label$5
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	if ( ((int_32)*($8 + [120]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [10072])
	$4 = *($0)
	*($2 + [8]) = $1
	if ( $8 ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	$8 = [0]
	$7 = CALL db_find_i64(*($3), *(($0 + [80])), (int_64)-3617352132944662528, $4)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$3 }
	$8 = CALL $56($3, $7)
	if ( ((int_32)*($8 + [120]) == (int_32)$3) ){ goto $label$3 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$3
	$4 = *($0)
	*($2 + [8]) = $1
	if ( $8 ){ goto $label$1 }
	
.LABEL $label$2
	CALL eosio_assert([0], [10237])
	
.LABEL $label$1
	CALL $104($3, $8, $4, ($2 + [8]))
	CALL eosio_assert(((int_32)(CASTING uint_32)(uint_64 (uint_64)*($8 + [88]) >> (uint_64)(int_64)63)) ^ (int_32)[1]), [10566])
	$global$0 = ($2 + [16])
}

void .FUNC $138 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_64 $11
	int_32 $12
	$3 = ($global$0 - [144])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [88]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$5 = *(($1 + [16]))
	CALL $202(($4 + [48]), $1)
	*(($4 + [104])) = *($4 + [56])
	CALL __floatditf(($4 + [32]), (int_64))((int_64)0 - $5))
	*($4 + [96]) = *($4 + [48])
	*($4 + [88]) = *((($4 + [32]) + [8]))
	*($4 + [80]) = *($4 + [32])
	$6 = *($1)
	$7 = CALL $15([8690])
	if ( ($7 <= [8]) ){ goto $label$6 }
	CALL eosio_assert([0], [9729])
	goto $label$5 
	
.LABEL $label$6
	if ( ($7 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	$5 = (int_64)0
	
.LOOP $label$7:
	$8 = *(($7 + [8689]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$8 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$8
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$7 }
	$9 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	goto $label$3 
	
.LABEL $label$4
	$9 = (int_64)4
	
.LABEL $label$3
	$10 = (($4 + [80]) + [16])
	$5 = (uint_64)$9 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$11:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$12 }
	$5 = $11
	$8 = $7
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$12
	$5 = $11
	
.LOOP $label$13:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$10 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$12 = ($7 + [1])
	$7 = $12
	if ( $8 ){ goto $label$13 }
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	CALL eosio_assert([0], [9876])
	
.LABEL $label$9
	*($1 + [56]) = (int_64)0
	*(($1 + [64])) = $9
	$7 = CALL $15([8690])
	if ( ($7 <= [8]) ){ goto $label$17 }
	CALL eosio_assert([0], [9729])
	goto $label$16 
	
.LABEL $label$17
	if ( ($7 == 0) ){ goto $label$15 }
	
.LABEL $label$16
	$5 = (int_64)0
	
.LOOP $label$18:
	$8 = *(($7 + [8689]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$19 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$19
	$5 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$7 = ($7 + [-1])
	if ( $7 ){ goto $label$18 }
	$9 = ((int_64)((int_64)$5 << (int_64)8) | (int_64)4)
	goto $label$14 
	
.LABEL $label$15
	$9 = (int_64)4
	
.LABEL $label$14
	$5 = (uint_64)$9 >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$22:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$21 }
	$11 = (uint_64)$5 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$5 & (int_64)65280) == (int_64)0) ){ goto $label$23 }
	$5 = $11
	$8 = $7
	$7 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$23
	$5 = $11
	
.LOOP $label$24:
	if ( ((int_64)((int_64)$5 & (int_64)65280) != (int_64)0) ){ goto $label$21 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8)
	$8 = ((int_32)$7 < (int_32)[6])
	$12 = ($7 + [1])
	$7 = $12
	if ( $8 ){ goto $label$24 }
	$7 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[6]) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	CALL eosio_assert([0], [9876])
	
.LABEL $label$20
	*($1 + [72]) = (int_64)0
	*(($1 + [80])) = $9
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$25 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$25
	$8 = $3
	$7 = ($8 + [-96])
	$global$0 = $7
	*($4 + [68]) = $7
	*($4 + [64]) = $7
	*($4 + [72]) = ($8 + [-8])
	CALL $201(($4 + [64]), $1)
	CALL db_update_i64(*($1 + [92]), $2, $7, [88])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$26 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$26
	CALL __floatditf(($4 + [16]), (int_64))((int_64)0 - *(($1 + [16]))))
	*($4 + [136]) = *(($4 + [24]))
	*($4 + [128]) = *($4 + [16])
	if ( (CALL $16(($4 + [80]), ($4 + [128]), [16]) == 0) ){ goto $label$27 }
	$8 = ($1 + [96])
	$7 = *($8)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$28 }
	$7 = CALL db_idx_long_double_find_primary(*($0), *($0 + [8]), (int_64)-6030912129794572288, ($4 + [112]), $6)
	*($8) = $7
	
.LABEL $label$28
	CALL db_idx_long_double_update($7, $2, ($4 + [128]))
	
.LABEL $label$27
	CALL $202($4, $1)
	*($4 + [136]) = *($4 + [8])
	*($4 + [128]) = *($4)
	if ( (CALL $16($10, ($4 + [128]), [16]) == 0) ){ goto $label$29 }
	$8 = ($1 + [100])
	$7 = *($8)
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$30 }
	$7 = CALL db_idx_long_double_find_primary(*($0), *($0 + [8]), (int_64)-6030912129794572287, ($4 + [112]), $6)
	*($8) = $7
	
.LABEL $label$30
	CALL db_idx_long_double_update($7, $2, ($4 + [128]))
	
.LABEL $label$29
	$global$0 = ($4 + [144])
}

void .FUNC $139 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_64 $18
	int_64 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_64 $24
	int_64 $25
	$3 = ($global$0 - [192])
	$global$0 = $3
	*($3 + [184]) = [9048]
	*($3 + [188]) = CALL $15([9048])
	*($3 + [24]) = *($3 + [184])
	CALL $73(($3 + [104]), ($3 + [24]))
	CALL require_auth2((int_64)-4155580689349431776, (int_64)5445027871351373824)
	$4 = ($0 + [232])
	$6 = *(($0 + [260]))
	$5 = *(($0 + [256]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [64]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [240])), (int_64)-4812882490098188288, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $63($4, $7)
	if ( ((int_32)*($8 + [64]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [8650])
	*($3 + [176]) = ($0 + [192])
	*($3 + [104]) = (int_64)0
	CALL $123(($3 + [32]), ($3 + [176]), ($3 + [104]))
	if ( (*($3 + [36]) == 0) ){ goto $label$5 }
	*($3 + [104]) = (int_64)0
	CALL $123(($3 + [168]), ($3 + [176]), ($3 + [104]))
	$7 = *($3 + [172])
	if ( ($7 == 0) ){ goto $label$6 }
	$5 = ($3 + [140])
	$9 = ($8 + [52])
	$4 = (($3 + [8]) + [8])
	$10 = ($3 + [116])
	$11 = ($3 + [132])
	$12 = ($3 + [148])
	$13 = ($3 + [56])
	$14 = ($3 + [64])
	$15 = ($3 + [72])
	$16 = (int_64)0
	
.LOOP $label$7:
	$17 = *($7 + [8])
	if ( (int_64)($17 == 0) ){ goto $label$8 }
	if ( (int_64)($2 == 0) ){ goto $label$8 }
	$8 = *($7 + [16])
	if ( ((int_32)$8 == (int_32)($7 + [20])) ){ goto $label$8 }
	$6 = (*($9) + ((CASTING uint_32)(uint_64 $16) << [4]))
	$18 = *($6 + [8])
	$19 = *($7)
	$20 = ((int_64)$16 * (int_64)$2)
	$21 = *($6)
	$22 = (int_64)0
	
.LOOP $label$9:
	$23 = *($8 + [24])
	CALL __multi3(($3 + [8]), $23, (int_64)$23 >> (int_64)63), $21, (int_64)$21 >> (int_64)63))
	$24 = *($8 + [16])
	$25 = *($4)
	$23 = *($3 + [8])
	if ( (( (uint_64)($23 <= (int_64)4611686018427387904) ? ((int_64)$25 < (int_64)0) : (int_64)($25 == 0) ) == 0) ){ goto $label$13 }
	if ( ( ((uint_64)$23 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$25 > (int_64)-1) : ((int_64)$25 == (int_64)-1) ) ){ goto $label$12 }
	CALL eosio_assert([0], [10614])
	if ( ((int_64)$17 == (int_64)-1) ){ goto $label$11 }
	goto $label$10 
	
.LABEL $label$13
	CALL eosio_assert([0], [10590])
	
.LABEL $label$12
	if ( ((int_64)$17 != (int_64)-1) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_64)$23 != (int_64)-9223372036854775808) ){ goto $label$10 }
	CALL eosio_assert([0], [10698])
	
.LABEL $label$10
	$25 = CALL current_time()
	*($10) = [0]
	*((($3 + [104]) + [16])) = [0]
	*(($7 = (($3 + [104]) + [20]))) = (int_64)0
	*($11) = (int_64)0
	*($5) = (int_64)0
	*($12) = (int_64)0
	*((($3 + [104]) + [52])) = (int_64)0
	*($3 + [104]) = ((CASTING uint_32)(uint_64 ((uint_64)$25 / (uint_64)(int_64)1000000)) + [60])
	*((($3 + [88]) + [8])) = (int_64)3617214756542218240
	*($3 + [88]) = *($0)
	*($3 + [80]) = (int_64)-6215606966287335424
	*((($3 + [32]) + [8])) = $19
	*((($3 + [32]) + [16])) = $24
	*($13) = ((int_64)$23 / (int_64)$17)
	*($14) = $18
	$23 = ((int_64)$22 + (int_64)$20)
	*($15) = $23
	*($3 + [32]) = $1
	CALL $140($5, ($3 + [88]), $0, ($3 + [80]), ($3 + [32]))
	$25 = *($0)
	*($7) = [0]
	*($3 + [40]) = $24
	*($3 + [32]) = $23
	CALL $102(($3 + [104]), ($3 + [32]), $25, [0])
	CALL $83(($3 + [104]))
	$7 = *($8 + [4])
	if ( ($7 == 0) ){ goto $label$15 }
	
.LOOP $label$16:
	$6 = $7
	$7 = *($6)
	if ( $7 ){ goto $label$16 }
	goto $label$14 
	
.LABEL $label$15
	$6 = *($8 + [8])
	if ( ((int_32)*($6) == (int_32)$8) ){ goto $label$14 }
	$8 = ($8 + [8])
	
.LOOP $label$17:
	$7 = *($8)
	$8 = ($7 + [8])
	$6 = *($7 + [8])
	if ( ((int_32)$7 != (int_32)*($6)) ){ goto $label$17 }
	
.LABEL $label$14
	$22 = ((int_64)$22 + (int_64)1)
	if ( ((uint_64)$22 >= (uint_64)$2) ){ goto $label$8 }
	$8 = $6
	if ( ((int_32)$6 != (int_32)(*($3 + [172]) + [20])) ){ goto $label$9 }
	
.LABEL $label$8
	CALL $124(($3 + [168]))
	$16 = ((int_64)$16 + (int_64)1)
	if ( ((uint_64)$16 > (uint_64)(int_64)2) ){ goto $label$6 }
	$7 = *($3 + [172])
	if ( $7 ){ goto $label$7 }
	
.LABEL $label$6
	$global$0 = ($3 + [192])
	return 
	
.LABEL $label$5
	CALL $116($0, (int_64)112, (int_64)1)
	$global$0 = ($3 + [192])
}

void .FUNC $130 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [20])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [24])) = $2
	CALL $9($2)
	
.LABEL $label$11
	$2 = *($1 + [8])
	if ( ($2 == 0) ){ goto $label$12 }
	*(($1 + [12])) = $2
	CALL $9($2)
	
.LABEL $label$12
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $131 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = ($global$0 - [16])
	$4 = $3
	$global$0 = $3
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	*($1 + [48]) = [1]
	$6 = *($1 + [52])
	$5 = *(($1 + [56]))
	$7 = ($5 - $6)
	$8 = (CASTING uint_64)(uint_32 int_32($7 >> [4]))
	$9 = *($1)
	$10 = [49]
	
.LOOP $label$3:
	$10 = ($10 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$4 }
	$10 = (($7 & [-16]) + $10)
	
.LABEL $label$4
	if ( ($10 <= [513]) ){ goto $label$6 }
	$3 = CALL $1($10)
	goto $label$5 
	
.LABEL $label$6
	$3 = ($3 - (($10 + [15]) & [-16]))
	$global$0 = $3
	
.LABEL $label$5
	*($4 + [4]) = $3
	*($4) = $3
	*($4 + [8]) = ($3 + $10)
	CALL $190($4, $1)
	CALL db_update_i64(*($1 + [68]), $2, $3, $10)
	if ( ((uint_32)$10 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$9 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($3)
	if ( (uint_64)($9 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($4 + [16])
	return 
	
.LABEL $label$7
	$global$0 = ($4 + [16])
}

void .FUNC $132 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $7([16])
	*($6 + [16]) = $2
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $88(($6 + [28]), [16])
	$2 = *($6 + [28])
	$1 = (*(($6 + [32])) - $2)
	if ( ((int_32)$1 > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	
.LABEL $label$5
	$8 = ((int_32)$8 * (int_32)[40])
	CALL memcpy($2, $4, [8])
	$4 = ($4 + [8])
	$2 = ($2 + [8])
	if ( ((int_32)($1 + [-8]) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	
.LABEL $label$6
	$9 = ($5 + $8)
	CALL memcpy($2, $4, [8])
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$9:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($4 = ($2 + [-24]))) = (int_64)0
	*(($5 = ($2 + [-16]))) = [0]
	$3 = ($8 + [-24])
	*($4) = *($3)
	$4 = ($8 + [-16])
	*($5) = *($4)
	*($4) = [0]
	*(($4 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$5 = ($8 + [-12])
	*($4) = *($5)
	*($3) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($5) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$9 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$7 
	
.LABEL $label$8
	$4 = $2
	
.LABEL $label$7
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$12 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$12
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$13 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$13
	$2 = $8
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($4 == 0) ){ goto $label$14 }
	CALL $9($4)
	
.LABEL $label$14
	(unreachable)
}

void .FUNC $133 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $7([16])
	*($6 + [16]) = $2
	*($6 + [28 align=4]) = (int_64)0
	*(($6 + [36])) = [0]
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $88(($6 + [28]), [8])
	$2 = ((int_32)$8 * (int_32)[40])
	$8 = *($6 + [28])
	if ( ((int_32)(*(($6 + [32])) - $8) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	
.LABEL $label$5
	$9 = ($5 + $2)
	CALL memcpy($8, $4, [8])
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$7 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$8:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$8 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$6 
	
.LABEL $label$7
	$5 = $2
	
.LABEL $label$6
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$9 }
	
.LOOP $label$10:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$11 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$11
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$12 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$12
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ($5 == 0) ){ goto $label$13 }
	CALL $9($5)
	
.LABEL $label$13
	(unreachable)
}

void .FUNC $134 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	$2 = ($global$0 - [64])
	$global$0 = $2
	*($2 + [40]) = [9048]
	*($2 + [44]) = CALL $15([9048])
	*($2) = *($2 + [40])
	CALL $73(($2 + [48]), $2)
	CALL require_auth2((int_64)-4155580689349431776, (int_64)5445027871351373824)
	*($2 + [32]) = [0]
	*($2 + [24]) = (int_64)0
	$3 = ($0 + [112])
	*($2 + [16]) = $3
	*($2 + [56]) = (int_64)-281474976710656
	*($2 + [48]) = (int_64)0
	CALL $135(($2 + [8]), ($2 + [16]), ($2 + [48]))
	if ( (int_64)($1 == 0) ){ goto $label$3 }
	$4 = *($2 + [12])
	if ( ($4 == 0) ){ goto $label$2 }
	$5 = (($2 + [24]) + [8])
	$6 = (int_64)1
	$7 = [0]
	if ( ((int_32)[0] != (int_32)[0]) ){ goto $label$4 }
	$8 = [20]
	goto $label$1 
	
.LABEL $label$4
	$8 = [0]
	goto $label$1 
	
.LABEL $label$3
	$8 = [15]
	goto $label$1 
	
.LABEL $label$2
	$8 = [15]
	
.LABEL $label$1
	
.LOOP $label$5:
	goto $label$41 
	
.LABEL $label$42
	$6 = ((int_64)$6 + (int_64)1)
	$7 = *($2 + [28])
	if ( ((int_32)$7 == (int_32)*($5)) ){ goto $label$21 }
	$8 = [0]
	goto $label$5 
	
.LABEL $label$41
	*($7) = *($4)
	*($2 + [28]) = ($7 + [8])
	goto $label$20 
	
.LABEL $label$40
	CALL $136(($2 + [24]), $4)
	$8 = [1]
	goto $label$5 
	
.LABEL $label$39
	CALL $137(($2 + [8]))
	if ( ((uint_64)$6 >= (uint_64)$1) ){ goto $label$19 }
	$8 = [18]
	goto $label$5 
	
.LABEL $label$38
	$4 = *($2 + [12])
	if ( $4 ){ goto $label$18 }
	$8 = [2]
	goto $label$5 
	
.LABEL $label$37
	$10 = *($2 + [28])
	$9 = *($2 + [24])
	if ( ((int_32)$9 == (int_32)$10) ){ goto $label$17 }
	$8 = [3]
	goto $label$5 
	
.LABEL $label$36
	$11 = ($0 + [140])
	$12 = ($0 + [136])
	$13 = ($0 + [120])
	$14 = ($0 + [112])
	$8 = [4]
	goto $label$5 
	
.LABEL $label$35
	$6 = *($9)
	$4 = *($11)
	$15 = *($12)
	if ( ((int_32)$15 == (int_32)$4) ){ goto $label$13 }
	$8 = [5]
	goto $label$5 
	
.LABEL $label$34
	$7 = ($4 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)$6) ){ goto $label$12 }
	$8 = [6]
	goto $label$5 
	
.LABEL $label$33
	$4 = $7
	if ( ((int_32)$15 != (int_32)$7) ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$32
	if ( ((int_32)$15 == (int_32)$4) ){ goto $label$11 }
	$8 = [17]
	goto $label$5 
	
.LABEL $label$31
	if ( ((int_32)*($5 + [88]) != (int_32)$3) ){ goto $label$7 }
	goto $label$8 
	
.LABEL $label$30
	$7 = CALL db_find_i64(*($14), *($13), (int_64)-6030912129794572288, $6)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$10 }
	$8 = [8]
	goto $label$5 
	
.LABEL $label$29
	$5 = CALL $79($3, $7)
	if ( ((int_32)*($5 + [88]) == (int_32)$3) ){ goto $label$9 }
	$8 = [9]
	goto $label$5 
	
.LABEL $label$28
	CALL eosio_assert([0], [10072])
	$8 = [10]
	goto $label$5 
	
.LABEL $label$27
	CALL $138($3, $5, *($0))
	$8 = [11]
	goto $label$5 
	
.LABEL $label$26
	$9 = ($9 + [8])
	if ( ((int_32)$9 != (int_32)$10) ){ goto $label$16 }
	$8 = [12]
	goto $label$5 
	
.LABEL $label$25
	$10 = *($2 + [24])
	$8 = [13]
	goto $label$5 
	
.LABEL $label$24
	if ( ($10 == 0) ){ goto $label$6 }
	$8 = [14]
	goto $label$5 
	
.LABEL $label$23
	*($2 + [28]) = $10
	CALL $9($10)
	$8 = [15]
	goto $label$5 
	
.LABEL $label$22
	$global$0 = ($2 + [64])
	return 
	
.LABEL $label$21
	$8 = [20]
	goto $label$5 
	
.LABEL $label$20
	$8 = [1]
	goto $label$5 
	
.LABEL $label$19
	$8 = [2]
	goto $label$5 
	
.LABEL $label$18
	$8 = [19]
	goto $label$5 
	
.LABEL $label$17
	$8 = [13]
	goto $label$5 
	
.LABEL $label$16
	$8 = [4]
	goto $label$5 
	
.LABEL $label$15
	$8 = [7]
	goto $label$5 
	
.LABEL $label$14
	$8 = [5]
	goto $label$5 
	
.LABEL $label$13
	$8 = [7]
	goto $label$5 
	
.LABEL $label$12
	$8 = [16]
	goto $label$5 
	
.LABEL $label$11
	$8 = [7]
	goto $label$5 
	
.LABEL $label$10
	$8 = [11]
	goto $label$5 
	
.LABEL $label$9
	$8 = [10]
	goto $label$5 
	
.LABEL $label$8
	$8 = [10]
	goto $label$5 
	
.LABEL $label$7
	$8 = [9]
	goto $label$5 
	
.LABEL $label$6
	$8 = [15]
	goto $label$5 
	$8
}

void .FUNC $135 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [32])
	$global$0 = $3
	*($3 + [24]) = (int_64)0
	*($3 + [8]) = *(($2 + [8]))
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx_long_double_lowerbound(*($2), *($2 + [8]), (int_64)-6030912129794572287, $3, ($3 + [24]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [24])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10072])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $79($7, CALL $fimport$26(*($7), *($7 + [8]), (int_64)-6030912129794572288, $6))
	if ( ((int_32)*($4 + [88]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$2
	*(($4 + [100])) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [32])
}

void .FUNC $136 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [3])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[536870912]) ){ goto $label$3 }
	$6 = [536870911]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [3]) > (uint_32)[268435454]) ){ goto $label$5 }
	$6 = int_32($7 >> [2])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[536870912]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $7(($6 << [3]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [3])))) = *($1)
	$2 = ($2 - $3)
	$1 = ($4 - $2)
	$6 = ($5 + ($6 << [3]))
	$5 = ($4 + [8])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($1, $3, $2)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $9($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

int_32 .FUNC $137 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( $2 ){ goto $label$1 }
	CALL eosio_assert([0], [10723])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	$3 = *(($2 + [100]))
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$2 }
	$3 = *(*($0))
	$3 = CALL db_idx_long_double_find_primary(*($3), *($3 + [8]), (int_64)-6030912129794572287, $1, *($2))
	*((*(($0 + [4])) + [100])) = $3
	
.LABEL $label$2
	*($1) = (int_64)0
	$4 = CALL db_idx_long_double_next($3, $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$5 = *($1)
	$3 = *(($6 + [28]))
	$6 = *(*($0))
	$7 = *($6 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	
.LOOP $label$7:
	$2 = ($3 + [-24])
	$8 = *($2)
	if ( ((int_64)*($8) == (int_64)$5) ){ goto $label$5 }
	$3 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	*(($0 + [4])) = [0]
	$global$0 = ($1 + [16])
	return $0
	
.LABEL $label$5
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$4 }
	if ( ((int_32)*($8 + [88]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10072])
	goto $label$3 
	
.LABEL $label$4
	$8 = CALL $79($6, CALL $fimport$26(*($6), *($6 + [8]), (int_64)-6030912129794572288, $5))
	if ( ((int_32)*($8 + [88]) == (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$3
	*(($0 + [4])) = $8
	*(($8 + [100])) = $4
	$global$0 = ($1 + [16])
	return $0
}

int_32 .FUNC $213 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [32])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = (int_64)0
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($3 <= *($5)) ){ goto $label$2 }
	CALL eosio_assert([0], [10753])
	$3 = *($6)
	
.LABEL $label$2
	$8 = *($3)
	$3 = ($3 + [1])
	*($6) = $3
	$7 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $7)))
	$7 = ($7 + [7])
	$3 = $3
	if ( ($8 & [128]) ){ goto $label$1 }
	$7 = (CASTING uint_32)(uint_64 $4)
	$3 = *($1)
	$8 = *($1 + [4])
	$6 = int_32(($8 - $3) >> [5])
	if ( ((uint_32)$6 >= (uint_32)$7) ){ goto $label$5 }
	CALL $214($1, ($7 - $6))
	$8 = *(($1 + [4]))
	$3 = *($1)
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$7) ){ goto $label$6 }
	$8 = ($3 + ($7 << [5]))
	*(($1 + [4])) = $8
	
.LABEL $label$6
	if ( ((int_32)$3 == (int_32)$8) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$7:
	*($2 + [8]) = $0
	*($2 + [16]) = $3
	*((($2 + [16]) + [8])) = ($3 + [24])
	*($2 + [20]) = ($3 + [8])
	CALL $215(($2 + [16]), ($2 + [8]))
	$3 = ($3 + [32])
	if ( ((int_32)$3 != (int_32)$8) ){ goto $label$7 }
	
.LABEL $label$3
	$global$0 = ($2 + [32])
	return $0
}

int_32 .FUNC $208 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	$4 = *($1 + [8])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$9 = ($1 + [4])
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$9) ){ goto $label$3 }
	$1 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $7
	$6 = ($8 + [16])
	if ( ((int_32)(*($1) - $3) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$3 = *($5)
	
.LABEL $label$5
	CALL memcpy($3, $6, [8])
	$6 = (*($5) + [8])
	*($5) = $6
	$7 = ($8 + [24])
	if ( ((int_32)(*($1) - $6) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$6 = *($5)
	
.LABEL $label$6
	CALL memcpy($6, $7, [8])
	$3 = (*($5) + [8])
	*($5) = $3
	$6 = *($8 + [4])
	if ( ($6 == 0) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = $6
	$6 = *($7)
	if ( $6 ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$7 = *($8 + [8])
	if ( ((int_32)*($7) == (int_32)$8) ){ goto $label$7 }
	$8 = ($8 + [8])
	
.LOOP $label$10:
	$6 = *($8)
	$8 = ($6 + [8])
	$7 = *($6 + [8])
	if ( ((int_32)$6 != (int_32)*($7)) ){ goto $label$10 }
	
.LABEL $label$7
	if ( ((int_32)$7 != (int_32)$9) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $209 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [4])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [4])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $9($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[268435456]) ){ goto $label$1 }
	$6 = [268435455]
	if ( ((uint_32)int_32($5 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [3])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[268435456]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [4])
	$6 = CALL $7($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [4])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [4]) << [4]))
	return (unreachable)
	
.LABEL $label$1
	CALL $44($0)
}

void .FUNC $202 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	$2 = ($global$0 - [64])
	$global$0 = $2
	$3 = [0]
	*(($2 + [56])) = [0]
	*($2 + [32]) = (int_64)-4155580856021150704
	*($2 + [24]) = (int_64)-4155580856021150704
	*($2 + [40]) = (int_64)-1
	*($2 + [48]) = (int_64)0
	$4 = CALL db_find_i64((int_64)-4155580856021150704, (int_64)-4155580856021150704, (int_64)7235159550150574080, (int_64)108)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$1 }
	$3 = CALL $53(($2 + [24]), $4)
	if ( ((int_32)*($3 + [16]) == (int_32)($2 + [24])) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	$6 = *(($2 + [52]))
	$5 = *(($2 + [48]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$9:
	$4 = ($6 + [-24])
	$7 = *($4)
	if ( ((int_64)*($7) == (int_64)109) ){ goto $label$8 }
	$6 = $4
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$7 }
	if ( ((int_32)*($7 + [16]) == (int_32)($2 + [24])) ){ goto $label$6 }
	CALL eosio_assert([0], [10072])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$4 = CALL db_find_i64(*($2 + [24]), *(($2 + [32])), (int_64)7235159550150574080, (int_64)109)
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$4 }
	$7 = CALL $53(($2 + [24]), $4)
	if ( ((int_32)*($7 + [16]) == (int_32)($2 + [24])) ){ goto $label$6 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$4 }
	
.LABEL $label$5
	if ( ($7 == 0) ){ goto $label$4 }
	$8 = *($1 + [48])
	if ( (uint_64)($8 <= *($3 + [8])) ){ goto $label$10 }
	if ( ((uint_64)$8 <= (uint_64)*($7 + [8])) ){ goto $label$3 }
	
.LABEL $label$10
	$8 = *($1 + [56])
	goto $label$2 
	
.LABEL $label$4
	$8 = (int_64))((int_64)0 - *($1 + [56]))
	goto $label$2 
	
.LABEL $label$3
	$8 = (int_64))((int_64)0 - *($1 + [56]))
	
.LABEL $label$2
	CALL __floatditf(($2 + [8]), $8)
	$8 = *(($2 + [16]))
	$9 = *($2 + [8])
	$7 = *($2 + [48])
	if ( ($7 == 0) ){ goto $label$11 }
	$5 = ($2 + [52])
	$4 = *($5)
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$13 }
	
.LOOP $label$14:
	$4 = ($4 + [-24])
	$6 = *($4)
	*($4) = [0]
	if ( ($6 == 0) ){ goto $label$15 }
	CALL $9($6)
	
.LABEL $label$15
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$14 }
	$4 = *(($2 + [48]))
	goto $label$12 
	
.LABEL $label$13
	$4 = $7
	
.LABEL $label$12
	*($5) = $7
	CALL $9($4)
	
.LABEL $label$11
	*($0) = $9
	*($0 + [8]) = $8
	$global$0 = ($2 + [64])
}

int_32 .FUNC $203 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	if ( ((uint_32)(*(($0 + [8])) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	*($3) = (*($3) + [8])
	$3 = ($1 + [64])
	$1 = *($0 + [4])
	$0 = CALL $160($0, ($1 + [48]))
	if ( ((uint_32)(*($0 + [8]) - $1) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $1, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $200 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [24])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [40])) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [64])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [80])) = *($2 + [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $201 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [24]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = *(($1 + [40]))
	$5 = ($0 + [8])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [48])
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [64]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [80]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy($4, ($2 + [8]), [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $206 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $199(*($1), (*($0) + [48]))
	$2 = *($0)
	CALL $199(*($1), ($2 + [60]))
	$3 = ($2 + [72])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $4) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($4, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($2 + [80])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $2, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $207 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_32 $11
	if ( (*($0 + [8]) == 0) ){ goto $label$3 }
	$3 = *($0)
	$4 = ($0 + [4])
	*($0) = $4
	$5 = *($0 + [4])
	*($0 + [4]) = [0]
	*(($6 = ($0 + [8]))) = [0]
	*($5 + [8]) = [0]
	$5 = *($3 + [4])
	$3 = ( $5 ? $3 : $5 )
	if ( ($3 == 0) ){ goto $label$3 }
	$7 = ($0 + [4])
	
.LOOP $label$4:
	$8 = $3
	$9 = $1
	if ( ((int_32)$9 == (int_32)$2) ){ goto $label$2 }
	$10 = *($9 + [16])
	*($8 + [16]) = $10
	*(($8 + [24])) = *($9 + [24])
	$3 = *($8 + [8])
	if ( ($3 == 0) ){ goto $label$10 }
	$1 = *($3)
	if ( ((int_32)$1 == (int_32)$8) ){ goto $label$9 }
	*($3 + [4]) = [0]
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$11:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$11 }
	$1 = *($3 + [4])
	if ( $1 ){ goto $label$11 }
	goto $label$8 
	
.LABEL $label$10
	$3 = [0]
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$9
	*($3) = [0]
	
.LOOP $label$12:
	$1 = *($3 + [4])
	if ( ($1 == 0) ){ goto $label$8 }
	
.LOOP $label$13:
	$3 = $1
	$1 = *($3)
	if ( $1 ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$8
	$1 = *($4)
	if ( $1 ){ goto $label$6 }
	
.LABEL $label$7
	$1 = $4
	$5 = $4
	goto $label$5 
	
.LABEL $label$6
	
.LOOP $label$16:
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$18 }
	$5 = *($1)
	if ( $5 ){ goto $label$17 }
	goto $label$14 
	
.LABEL $label$18
	$5 = *($1 + [4])
	if ( ($5 == 0) ){ goto $label$15 }
	
.LABEL $label$17
	$1 = $5
	goto $label$16 
	
.LABEL $label$15
	$5 = ($1 + [4])
	goto $label$5 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$5
	*($8) = (int_64)0
	*(($8 + [8])) = $1
	*($5) = $8
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$19 }
	*($0) = $1
	$8 = *($5)
	
.LABEL $label$19
	CALL $112(*($7), $8)
	*($6) = (*($6) + [1])
	$5 = *($9 + [4])
	if ( ($5 == 0) ){ goto $label$21 }
	
.LOOP $label$22:
	$1 = $5
	$5 = *($1)
	if ( $5 ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	$1 = *($9 + [8])
	if ( ((int_32)*($1) == (int_32)$9) ){ goto $label$20 }
	$8 = ($9 + [8])
	
.LOOP $label$23:
	$5 = *($8)
	$8 = ($5 + [8])
	$1 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($1)) ){ goto $label$23 }
	
.LABEL $label$20
	if ( $3 ){ goto $label$4 }
	
.LABEL $label$3
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$1 }
	$6 = ($0 + [4])
	$9 = ($0 + [8])
	
.LOOP $label$24:
	$8 = $1
	*((($5 = CALL $7([32])) + [24])) = *(($8 + [24]))
	*($5 + [16]) = *($8 + [16])
	$1 = *($6)
	if ( ($1 == 0) ){ goto $label$29 }
	$10 = *(($5 + [16]))
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$27 }
	goto $label$28 
	
.LABEL $label$29
	$1 = $6
	$3 = $6
	goto $label$26 
	
.LABEL $label$28
	$11 = [2]
	goto $label$25 
	
.LABEL $label$27
	$11 = [0]
	goto $label$25 
	
.LABEL $label$26
	$11 = [4]
	
.LABEL $label$25
	
.LOOP $label$30:
	goto $label$52 
	
.LABEL $label$54
	$1 = $3
	if ( ((uint_64)$10 >= (uint_64)*($1 + [16])) ){ goto $label$41 }
	$11 = [2]
	goto $label$30 
	
.LABEL $label$53
	$3 = *($1)
	if ( $3 ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$52
	$3 = *($1 + [4])
	if ( $3 ){ goto $label$40 }
	$11 = [12]
	goto $label$30 
	
.LABEL $label$51
	$3 = ($1 + [4])
	goto $label$37 
	
.LABEL $label$50
	$3 = $1
	$11 = [4]
	goto $label$30 
	
.LABEL $label$49
	*($5 + [8]) = $1
	*($5) = (int_64)0
	*($3) = $5
	$1 = *(*($0))
	if ( ($1 == 0) ){ goto $label$36 }
	$11 = [5]
	goto $label$30 
	
.LABEL $label$48
	*($0) = $1
	$5 = *($3)
	$11 = [6]
	goto $label$30 
	
.LABEL $label$47
	CALL $112(*(($0 + [4])), $5)
	*($9) = (*($9) + [1])
	$3 = *($8 + [4])
	if ( ($3 == 0) ){ goto $label$33 }
	$11 = [7]
	goto $label$30 
	
.LABEL $label$46
	$1 = $3
	$3 = *($1)
	if ( $3 ){ goto $label$34 }
	goto $label$35 
	
.LABEL $label$45
	$1 = *($8 + [8])
	if ( ((int_32)*($1) == (int_32)$8) ){ goto $label$32 }
	$11 = [10]
	goto $label$30 
	
.LABEL $label$44
	$5 = ($8 + [8])
	$11 = [11]
	goto $label$30 
	
.LABEL $label$43
	$3 = *($5)
	$5 = ($3 + [8])
	$1 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($1)) ){ goto $label$31 }
	$11 = [8]
	goto $label$30 
	
.LABEL $label$42
	if ( ((int_32)$1 != (int_32)$2) ){ goto $label$24 }
	goto $label$1 
	
.LABEL $label$41
	$11 = [0]
	goto $label$30 
	
.LABEL $label$40
	$11 = [1]
	goto $label$30 
	
.LABEL $label$39
	$11 = [3]
	goto $label$30 
	
.LABEL $label$38
	$11 = [1]
	goto $label$30 
	
.LABEL $label$37
	$11 = [4]
	goto $label$30 
	
.LABEL $label$36
	$11 = [6]
	goto $label$30 
	
.LABEL $label$35
	$11 = [8]
	goto $label$30 
	
.LABEL $label$34
	$11 = [7]
	goto $label$30 
	
.LABEL $label$33
	$11 = [9]
	goto $label$30 
	
.LABEL $label$32
	$11 = [8]
	goto $label$30 
	
.LABEL $label$31
	$11 = [11]
	goto $label$30 
	
.LABEL $label$2
	
.LOOP $label$56:
	$1 = *($8 + [8])
	if ( ($1 == 0) ){ goto $label$55 }
	$8 = $1
	goto $label$56 
	
.LABEL $label$55
	CALL $49($0, $8)
	return 
	
.LABEL $label$1
	$11
}

void .FUNC $204 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0)
	$3 = ($5 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$0 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($0, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($5 + [16])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$0 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($0, $3, [8])
	$3 = (*($0) + [8])
	*(($0 = ($4 + [4]))) = $3
	*($2 + [8]) = *(($5 + [24]))
	if ( ((int_32)(*(($4 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$3 = *($0)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($0) = (*($0) + [8])
	CALL $199(*($1), ($5 + [32]))
	$global$0 = ($2 + [16])
}

void .FUNC $205 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	$2 = ($global$0 - [32])
	$global$0 = $2
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = *($1 + [48])
	$4 = ( *(($1 + [52])) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$3 = ([-64] - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$1:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$1 }
	$4 = *($1 + [60])
	$4 = ( *(($1 + [64])) ? uint_32($4 >> [1]) : ($4 & [1]) )
	$3 = ($3 - $4)
	$5 = (CASTING uint_64)(uint_32 $4)
	
.LOOP $label$2:
	$3 = ($3 + [-1])
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	if ( ((int_64)$5) != (int_64)0) ){ goto $label$2 }
	$4 = [0]
	if ( ($3 == 0) ){ goto $label$4 }
	CALL $88($0, ([0] - $3))
	$4 = *(($0 + [4]))
	$3 = *($0)
	goto $label$3 
	
.LABEL $label$4
	$3 = [0]
	
.LABEL $label$3
	*($2 + [4]) = $3
	*($2) = $3
	*($2 + [8]) = $4
	*($2 + [16]) = $2
	*($2 + [24]) = $1
	CALL $101(($2 + [24]), ($2 + [16]))
	$global$0 = ($2 + [32])
}

int_32 .FUNC $181 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *($1)
	$6 = (*(($1 + [4])) - $7)
	if ( ((int_32)(*(($0 + [8])) - $4) >= (int_32)$6) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $7, $6)
	*(($4 = ($0 + [4]))) = (*($4) + $6)
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $129 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	$2 = ($global$0 - [48])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = [8]
	$6 = *($0)
	$4 = *(($4 + [4]))
	$7 = ($1 + [8])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	CALL $210($7, *($4), *($4 + [4]))
	
.LABEL $label$1
	$7 = *($1 + [8])
	$4 = *(($1 + [12]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [5]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	$5 = (($8 & [-32]) + $5)
	
.LABEL $label$3
	$7 = *($1 + [20])
	$4 = *(($1 + [24]))
	$8 = ($4 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [5]))
	
.LOOP $label$4:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$5 = (($8 & [-32]) + $5)
	
.LABEL $label$5
	if ( ($5 <= [513]) ){ goto $label$7 }
	$10 = CALL $1($5)
	goto $label$6 
	
.LABEL $label$7
	$10 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $10
	
.LABEL $label$6
	*($3 + [12]) = $10
	*($3 + [8]) = $10
	*($3 + [16]) = ($10 + $5)
	$2 = $10
	if ( ((int_32)$5 > (int_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10508])
	$2 = *($3 + [12])
	
.LABEL $label$8
	CALL memcpy($2, $1, [8])
	$2 = ($2 + [8])
	*($3 + [12]) = $2
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [12])) - *(($1 + [8]))) >> [5]))
	
.LOOP $label$9:
	$4 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$7 = ((int_64)$9) != (int_64)0
	*($3 + [32]) = (($7) << [7]) | ($4 & [127]))
	if ( ((int_32)(*((($3 + [8]) + [8])) - $2) > (int_32)[0]) ){ goto $label$10 }
	CALL eosio_assert([0], [10508])
	$2 = *($3 + [12])
	
.LABEL $label$10
	CALL memcpy($2, ($3 + [32]), [1])
	$2 = ($2 + [1])
	*($3 + [12]) = $2
	if ( $7 ){ goto $label$9 }
	$7 = *(($1 + [12]))
	$4 = *(($1 + [8]))
	if ( ((int_32)$4 == (int_32)$7) ){ goto $label$11 }
	
.LOOP $label$12:
	*($3 + [24]) = ($3 + [8])
	*($3 + [32]) = $4
	*((($3 + [32]) + [8])) = ($4 + [24])
	*($3 + [36]) = ($4 + [8])
	CALL $211(($3 + [32]), ($3 + [24]))
	$4 = ($4 + [32])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$12 }
	$2 = *($3 + [12])
	
.LABEL $label$11
	$9 = (CASTING uint_64)(uint_32 int_32((*(($1 + [24])) - *(($1 + [20]))) >> [5]))
	$8 = (($3 + [8]) + [8])
	
.LOOP $label$13:
	$4 = (CASTING uint_32)(uint_64 $9)
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	$7 = ((int_64)$9) != (int_64)0
	*($3 + [32]) = (($7) << [7]) | ($4 & [127]))
	if ( ((int_32)(*($8) - $2) > (int_32)[0]) ){ goto $label$14 }
	CALL eosio_assert([0], [10508])
	$2 = *($3 + [12])
	
.LABEL $label$14
	CALL memcpy($2, ($3 + [32]), [1])
	$2 = (*($3 + [12]) + [1])
	*($3 + [12]) = $2
	if ( $7 ){ goto $label$13 }
	$4 = *(($1 + [24]))
	$2 = *(($1 + [20]))
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$15 }
	
.LOOP $label$16:
	*($3 + [24]) = ($3 + [8])
	*($3 + [32]) = $2
	*((($3 + [32]) + [8])) = ($2 + [24])
	*($3 + [36]) = ($2 + [8])
	CALL $211(($3 + [32]), ($3 + [24]))
	$2 = ($2 + [32])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$16 }
	
.LABEL $label$15
	$9 = *($1)
	*($1 + [36]) = CALL db_store_i64(*($6 + [8]), (int_64)-4812882707900006400, *(*($0 + [8])), $9, $10, $5)
	if ( ((uint_32)$5 >= (uint_32)[513]) ){ goto $label$19 }
	if ( ((uint_64)$9 >= (uint_64)*($6 + [16])) ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$19
	CALL $2($10)
	if ( (uint_64)($9 <= *($6 + [16])) ){ goto $label$17 }
	
.LABEL $label$18
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [48])
	return 
	
.LABEL $label$17
	$global$0 = ($3 + [48])
}

void .FUNC $128 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	*($1 + [48]) = [1]
	$6 = *($1)
	$3 = *($3)
	$7 = ($1 + [52])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$3 }
	CALL $209($7, *($3), *($3 + [4]))
	if ( ((int_64)$6 == (int_64)*($1)) ){ goto $label$3 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$3
	$8 = *($1 + [52])
	$7 = *(($1 + [56]))
	$9 = ($7 - $8)
	$10 = (CASTING uint_64)(uint_32 int_32($9 >> [4]))
	$3 = [49]
	
.LOOP $label$4:
	$3 = ($3 + [1])
	$10 = (uint_64)$10 >> (uint_64)(int_64)7
	if ( ((int_64)$10) != (int_64)0) ){ goto $label$4 }
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$5 }
	$3 = (($9 & [-16]) + $3)
	
.LABEL $label$5
	if ( ($3 <= [513]) ){ goto $label$7 }
	$4 = CALL $1($3)
	goto $label$6 
	
.LABEL $label$7
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$6
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $190($5, $1)
	CALL db_update_i64(*($1 + [68]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$10 }
	if ( ((uint_64)$6 >= (uint_64)*($0 + [16])) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	CALL $2($4)
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$8 }
	
.LABEL $label$9
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$8
	$global$0 = ($5 + [16])
}

int_32 .FUNC $8 (int_32 $0)
{
	return CALL $7($0)
}

void .FUNC $9 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

void .FUNC $123 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = (int_64)0
	*($3) = *($2)
	$4 = [0]
	$2 = *($1)
	$5 = CALL db_idx64_lowerbound(*($2), *($2 + [8]), (int_64)-3851373727820283904, $3, ($3 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = *($3 + [8])
	$9 = *(($7 + [28]))
	$7 = *($1)
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = ($9 + [-24])
	$4 = *($2)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$4 }
	$9 = $2
	if ( ((int_32)$8 != (int_32)$2) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$3 }
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10072])
	goto $label$2 
	
.LABEL $label$3
	$4 = CALL $110($7, CALL $fimport$26(*($7), *($7 + [8]), (int_64)-3851373727820283904, $6))
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$2 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$2
	*($4 + [36]) = $5
	
.LABEL $label$1
	*($0 + [4]) = $4
	*($0) = $1
	$global$0 = ($3 + [16])
}

void .FUNC $122 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_64 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	$1 = ($global$0 - [320])
	$global$0 = $1
	*($1 + [312]) = [9048]
	*($1 + [316]) = CALL $15([9048])
	*($1 + [24]) = *($1 + [312])
	CALL $73(($1 + [144]), ($1 + [24]))
	CALL require_auth2((int_64)-4155580689349431776, (int_64)5445027871351373824)
	$2 = ($0 + [32])
	$4 = *(($0 + [60]))
	$3 = *(($0 + [56]))
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	
.LOOP $label$4:
	$5 = ($4 + [-24])
	$6 = *($5)
	if ( ((int_64)*($6) == (int_64)111) ){ goto $label$3 }
	$4 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$3 == (int_32)$4) ){ goto $label$2 }
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	$5 = CALL db_find_i64(*($2), *(($0 + [40])), (int_64)7235159550150574080, (int_64)111)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$1 }
	$6 = CALL $53($2, $5)
	if ( ((int_32)*($6 + [16]) == (int_32)$2) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	$7 = *($6 + [8])
	*($1 + [304]) = $7
	$8 = ($0 + [232])
	$4 = *(($0 + [260]))
	$6 = *(($0 + [256]))
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$6 }
	
.LOOP $label$8:
	$5 = ($4 + [-24])
	$9 = *($5)
	if ( ((int_64)*($9) == (int_64)$7) ){ goto $label$7 }
	$4 = $5
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$6 == (int_32)$4) ){ goto $label$6 }
	if ( ((int_32)*($9 + [64]) == (int_32)$8) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	goto $label$5 
	
.LABEL $label$6
	$9 = [0]
	$5 = CALL db_find_i64(*($8), *(($0 + [240])), (int_64)-4812882490098188288, $7)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$5 }
	$9 = CALL $63($8, $5)
	if ( ((int_32)*($9 + [64]) == (int_32)$8) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [8650])
	CALL eosio_assert(((int_32)*($9 + [48]) ^ (int_32)[1]), [9503])
	$10 = *(($9 + [16]))
	$11 = *($9 + [8])
	$6 = ($0 + [192])
	*($1 + [296]) = $6
	*($1 + [144]) = (int_64)0
	CALL $123(($1 + [64]), ($1 + [296]), ($1 + [144]))
	if ( (*($1 + [68]) == 0) ){ goto $label$11 }
	$5 = CALL db_lowerbound_i64(*($6), *(($0 + [200])), (int_64)-3851373727820283904, (int_64)0)
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$12 }
	$4 = CALL db_next_i64(*(CALL $110($6, $5) + [32]), ($1 + [144]))
	if ( ((int_32)$4 < (int_32)[0]) ){ goto $label$12 }
	$5 = [-1]
	
.LOOP $label$13:
	$5 = ($5 + [1])
	$4 = CALL db_next_i64(*(CALL $110($6, $4) + [32]), ($1 + [144]))
	if ( ((int_32)$4 > (int_32)[-1]) ){ goto $label$13 }
	if ( ($5 <= [2]) ){ goto $label$12 }
	*($1 + [144]) = (int_64)0
	CALL $123(($1 + [288]), ($1 + [296]), ($1 + [144]))
	*($1 + [144]) = *($1 + [288])
	CALL $124(($1 + [144]))
	CALL $124(($1 + [144]))
	CALL $124(($1 + [144]))
	$5 = *($1 + [148])
	if ( ($5 == 0) ){ goto $label$12 }
	$4 = *($1 + [144])
	
.LOOP $label$14:
	*($1 + [144]) = ((int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 $4))
	CALL $124(($1 + [144]))
	CALL $125(*($1 + [296]), $5)
	$7 = *($1 + [144])
	$4 = (CASTING uint_32)(uint_64 $7)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32)
	if ( $5) ){ goto $label$14 }
	
.LABEL $label$12
	*($1 + [280]) = [0]
	*($1 + [272]) = (int_64)0
	*($1 + [264]) = [0]
	*($1 + [256]) = (int_64)0
	*($1 + [144]) = (int_64)0
	CALL $123(($1 + [48]), ($1 + [296]), ($1 + [144]))
	$5 = *($1 + [52])
	if ( ($5 == 0) ){ goto $label$16 }
	$12 = (($1 + [144]) + [32])
	$13 = (($1 + [208]) + [16])
	$3 = (($1 + [144]) + [16])
	$14 = ($1 + [241])
	$4 = (($1 + [208]) + [32])
	$6 = [9519]
	$15 = (int_64)$11 >> (int_64)63)
	$16 = (($1 + [8]) + [8])
	$17 = (($1 + [208]) + [24])
	$18 = (($1 + [208]) + [40])
	$19 = ($1 + [244])
	$20 = (int_64)0
	
.LOOP $label$17:
	CALL __multi3(($1 + [8]), *($6), (int_64)0, $11, $15)
	$21 = *($5)
	$22 = *($16)
	$7 = *($1 + [8])
	if ( (( (uint_64)($7 <= (int_64)4611686018427387904) ? ((int_64)$22 < (int_64)0) : (int_64)($22 == 0) ) == 0) ){ goto $label$21 }
	if ( ( ((uint_64)$7 > (uint_64)(int_64)-4611686018427387904) ? ((int_64)$22 > (int_64)-1) : ((int_64)$22 == (int_64)-1) ) ){ goto $label$22 }
	CALL eosio_assert([0], [10614])
	
.LABEL $label$22
	$23 = ((int_64)$7 / (int_64)100)
	$22 = ((int_64)$23 * (int_64)10)
	if ( ((int_64)$22 >= (int_64)4611686018427387904) ){ goto $label$20 }
	goto $label$19 
	
.LABEL $label$21
	CALL eosio_assert([0], [10590])
	$23 = ((int_64)$7 / (int_64)100)
	$22 = ((int_64)$23 * (int_64)10)
	if ( ((int_64)$22 < (int_64)4611686018427387904) ){ goto $label$19 }
	
.LABEL $label$20
	CALL eosio_assert([0], [10590])
	goto $label$18 
	
.LABEL $label$19
	if ( ((int_64)$22 > (int_64)-4611686018427387904) ){ goto $label$18 }
	CALL eosio_assert([0], [10614])
	
.LABEL $label$18
	*(($2 = (($1 + [64]) + [8]))) = $10
	$22 = ((int_64)$7 / (int_64)1000)
	$23 = (int_64)
	*($1 + [64]) = $23($23 - $22))
	if ( ((int_64)$23 <= (int_64)-4611686018427387904) ){ goto $label$24 }
	if ( ((int_64)$23 < (int_64)4611686018427387904) ){ goto $label$23 }
	CALL eosio_assert([0], [10216])
	goto $label$23 
	
.LABEL $label$24
	CALL eosio_assert([0], [10194])
	
.LABEL $label$23
	$5 = *($1 + [276])
	if ( ((int_32)$5 == (int_32)*((($1 + [272]) + [8]))) ){ goto $label$27 }
	*($5) = *($1 + [64])
	*(($5 + [8])) = *($2)
	*($1 + [276]) = ($5 + [16])
	if ( ((int_64)$7 >= (int_64)1000) ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$27
	CALL $126(($1 + [272]), ($1 + [64]))
	if ( ((int_64)$7 < (int_64)1000) ){ goto $label$25 }
	
.LABEL $label$26
	*($4) = (int_64)0
	*(($24 = (($1 + [208]) + [8]))) = $21
	*($13) = $22
	*($17) = $10
	*(($25 = ($4 + [8]))) = [0]
	*($1 + [208]) = (int_64)-4155580855816477824
	$5 = CALL $15([9522])
	if ( ((uint_32)$5 >= (uint_32)[-16]) ){ goto $label$15 }
	if ( ((uint_32)$5 >= (uint_32)[11]) ){ goto $label$30 }
	*($4) = ($5 << [1])
	$2 = $14
	if ( $5 ){ goto $label$29 }
	goto $label$28 
	
.LABEL $label$30
	$26 = (($5 + [16]) & [-16])
	$2 = CALL $7($26)
	*($4) = ($26 | [1])
	*($18) = $2
	*($19) = $5
	
.LABEL $label$29
	CALL memcpy($2, [9522], $5)
	
.LABEL $label$28
	*(($2 + $5)) = [0]
	*(($5 = CALL $7([16]))) = (int_64)-4155580855816477824
	*($5 + [8]) = (int_64)3617214756542218240
	$2 = ($5 + [16])
	*((($1 + [128]) + [8])) = $2
	*((($1 + [144]) + [8])) = *($24)
	*($3) = *($13)
	*(($3 + [8])) = *(($13 + [8]))
	*(($12 + [8])) = *($25)
	*($12) = *($4)
	*($4) = (int_64)0
	*($1 + [128]) = $5
	*($1 + [132]) = $2
	*($1 + [144]) = *($1 + [208])
	*($18) = [0]
	CALL $64((int_64)6138663591592764928, (int_64)-3617168760277827584, ($1 + [128]), ($1 + [144]))
	if ( ((*($12) & [1]) == 0) ){ goto $label$31 }
	CALL $9(*((($1 + [144]) + [40])))
	
.LABEL $label$31
	$5 = *($1 + [128])
	if ( ($5 == 0) ){ goto $label$32 }
	*($1 + [132]) = $5
	CALL $9($5)
	
.LABEL $label$32
	if ( ((*($4) & [1]) == 0) ){ goto $label$25 }
	CALL $9(*($18))
	
.LABEL $label$25
	*(($2 = (($1 + [144]) + [8]))) = $22
	*($3) = $10
	*(($24 = (($1 + [144]) + [24]))) = $20
	*($1 + [144]) = $21
	$5 = *($1 + [260])
	if ( ((int_32)$5 == (int_32)*((($1 + [256]) + [8]))) ){ goto $label$34 }
	*($5) = *($1 + [144])
	*(($5 + [24])) = *($24)
	*(($5 + [16])) = *($3)
	*(($5 + [8])) = *($2)
	*($1 + [260]) = ($5 + [32])
	goto $label$33 
	
.LABEL $label$34
	CALL $127(($1 + [256]), ($1 + [144]))
	
.LABEL $label$33
	CALL $124(($1 + [48]))
	$20 = ((int_64)$20 + (int_64)1)
	if ( ((uint_64)$20 > (uint_64)(int_64)2) ){ goto $label$16 }
	$6 = ($6 + [1])
	$5 = *($1 + [52])
	if ( $5 ){ goto $label$17 }
	
.LABEL $label$16
	$7 = *($0)
	*($1 + [144]) = ($1 + [272])
	if ( $9 ){ goto $label$35 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$35
	CALL $128($8, $9, $7, ($1 + [144]))
	$7 = *($0)
	*($1 + [132]) = ($1 + [256])
	*($1 + [128]) = ($1 + [304])
	*($1 + [64]) = $7
	$4 = ($0 + [272])
	if ( ((int_64)*($0 + [272]) == (int_64)CALL current_receiver()) ){ goto $label$36 }
	CALL eosio_assert([0], [10762])
	
.LABEL $label$36
	*($1 + [144]) = $4
	*($1 + [148]) = ($1 + [128])
	*($1 + [152]) = ($1 + [64])
	*(($5 = CALL $7([48])) + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($5 + [24 align=4]) = (int_64)0
	*($5 + [32]) = $4
	CALL $129(($1 + [144]), $5)
	*($1 + [48]) = $5
	$7 = *($5)
	*($1 + [144]) = $7
	$6 = *($5 + [36])
	*($1 + [40]) = $6
	$3 = ($0 + [300])
	$4 = *($3)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [304]))) ){ goto $label$37 }
	*($4 + [8]) = $7
	*($4 + [16]) = $6
	*($1 + [48]) = [0]
	*($4) = $5
	*($3) = ($4 + [24])
	$4 = *($1 + [48])
	$5 = [0]
	*($1 + [48]) = [0]
	if ( ($4 == 0) ){ goto $label$9 }
	goto $label$10 
	
.LABEL $label$37
	CALL $130(($0 + [296]), ($1 + [48]), ($1 + [144]), ($1 + [40]))
	$4 = *($1 + [48])
	$5 = [0]
	*($1 + [48]) = [0]
	if ( $4 ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$15
	CALL $29($4)
	
.LABEL $label$11
	$7 = *($0)
	if ( $9 ){ goto $label$38 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$38
	CALL $131($8, $9, $7)
	$global$0 = ($1 + [320])
	return 
	
.LABEL $label$10
	$6 = *($4 + [20])
	if ( ($6 == 0) ){ goto $label$39 }
	*(($4 + [24])) = $6
	CALL $9($6)
	
.LABEL $label$39
	$6 = *($4 + [8])
	if ( ($6 == 0) ){ goto $label$40 }
	*(($4 + [12])) = $6
	CALL $9($6)
	
.LABEL $label$40
	CALL $9($4)
	
.LABEL $label$9
	CALL $116($0, (int_64)112, (int_64)0)
	$7 = CALL current_time()
	*((($1 + [144]) + [28])) = (int_64)0
	*((($1 + [144]) + [44])) = (int_64)0
	*((($1 + [144]) + [52])) = (int_64)0
	*($1 + [156]) = $5
	*($1 + [160]) = $5
	*($1 + [164 align=4]) = (int_64)0
	*($1 + [180 align=4]) = (int_64)0
	*($1 + [144]) = ((CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)) + [60])
	*($1 + [72]) = (int_64)5445027871351373824
	*($1 + [64]) = (int_64)-4155580689349431776
	*($1 + [48]) = (int_64)5606356246820028416
	*($1 + [136]) = (int_64)100
	*($1 + [128]) = *($1 + [304])
	CALL $132((($1 + [144]) + [36]), ($1 + [64]), $0, ($1 + [48]), ($1 + [128]))
	$7 = *($0)
	$20 = *($1 + [304])
	*($1 + [164]) = [1]
	*($1 + [136]) = $7
	*($1 + [128]) = $20
	CALL $102(($1 + [144]), ($1 + [128]), $7, $5)
	$7 = CALL current_time()
	*((($1 + [64]) + [28])) = (int_64)0
	*((($1 + [64]) + [44])) = (int_64)0
	*((($1 + [64]) + [52])) = (int_64)0
	*($1 + [76]) = $5
	*($1 + [80]) = $5
	*($1 + [84 align=4]) = (int_64)0
	*($1 + [100 align=4]) = (int_64)0
	*($1 + [64]) = ((CASTING uint_32)(uint_64 ((uint_64)$7 / (uint_64)(int_64)1000000)) + [60])
	*($1 + [56]) = (int_64)5445027871351373824
	*($1 + [48]) = (int_64)-4155580689349431776
	*($1 + [40]) = (int_64)-4994301922312476992
	*($1 + [32]) = (int_64)500
	CALL $133((($1 + [64]) + [36]), ($1 + [48]), $0, ($1 + [40]), ($1 + [32]))
	$7 = *($0)
	*($1 + [84]) = [3]
	*($1 + [56]) = (int_64)0
	*($1 + [48]) = (int_64)-4155580855754841072
	CALL $102(($1 + [64]), ($1 + [48]), $7, $5)
	CALL $83(($1 + [64]))
	CALL $83(($1 + [144]))
	$5 = *($1 + [256])
	if ( ($5 == 0) ){ goto $label$41 }
	*($1 + [260]) = $5
	CALL $9($5)
	
.LABEL $label$41
	$5 = *($1 + [272])
	if ( ($5 == 0) ){ goto $label$42 }
	*($1 + [276]) = $5
	CALL $9($5)
	
.LABEL $label$42
	$global$0 = ($1 + [320])
	(unreachable)
}

void .FUNC $121 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	$2 = *($1 + [52])
	if ( ($2 == 0) ){ goto $label$11 }
	*(($1 + [56])) = $2
	CALL $9($2)
	
.LABEL $label$11
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$12 }
	CALL $9($4)
	
.LABEL $label$12
	(unreachable)
}

void .FUNC $2 (int_32 $0)
{
}

void .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0)
	$2 = *($0 + [4])
	$4 = int_32(($2 - $3) >> [4])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$7 = (*($0 + [8]) - $3)
	if ( ((uint_32)int_32($7 >> [4]) > (uint_32)[134217726]) ){ goto $label$5 }
	$6 = int_32($7 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$5
	$5 = CALL $7(($6 << [4]))
	$2 = *(($0 + [4]))
	$3 = *($0)
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	*(($4 = ($5 + ($4 << [4])))) = *($1)
	*(($4 + [8])) = *(($1 + [8]))
	$1 = ($2 - $3)
	$2 = ($4 - $1)
	$6 = ($5 + ($6 << [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$6 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$6
	*($0) = $2
	*(($0 + [4])) = $4
	*(($0 + [8])) = $6
	if ( ($3 == 0) ){ goto $label$7 }
	CALL $9($3)
	
.LABEL $label$7
	(unreachable)
	(unreachable)
}

void .FUNC $125 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = ($global$0 - [16])
	$global$0 = $2
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10847])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10892])
	
.LABEL $label$2
	$4 = ($0 + [28])
	$5 = *($4)
	$3 = *($0 + [24])
	if ( ((int_32)$3 == (int_32)$5) ){ goto $label$8 }
	$6 = $5
	$7 = *($1)
	if ( ((int_64)*(*(($5 + [-24]))) == (int_64)$7) ){ goto $label$9 }
	$8 = ($3 + [24])
	$9 = $5
	
.LOOP $label$10:
	if ( ((int_32)$8 == (int_32)$9) ){ goto $label$8 }
	$10 = ($9 + [-48])
	$6 = ($9 + [-24])
	$9 = $6
	if ( ((int_64)*(*($10)) != (int_64)$7) ){ goto $label$10 }
	
.LABEL $label$9
	if ( ((int_32)$3 == (int_32)$6) ){ goto $label$7 }
	$10 = [-24]
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$6 = $3
	
.LABEL $label$7
	CALL eosio_assert([0], [10942])
	$10 = [-24]
	$5 = *($4)
	if ( ((int_32)$6 != (int_32)$5) ){ goto $label$5 }
	
.LABEL $label$6
	$8 = ($6 + $10)
	goto $label$4 
	
.LABEL $label$5
	$9 = $6
	
.LOOP $label$11:
	$8 = *($9)
	*($9) = [0]
	$3 = ($9 + $10)
	$6 = *($3)
	*($3) = $8
	if ( ($6 == 0) ){ goto $label$12 }
	CALL $49(($6 + [16]), *(($6 + [20])))
	CALL $9($6)
	
.LABEL $label$12
	*(($9 + [-8])) = *(($9 + [16]))
	*(($9 + [-16])) = *(($9 + [8]))
	$9 = ($9 + [24])
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$11 }
	$8 = ($9 + [-24])
	$6 = *(($0 + [28]))
	if ( ((int_32)($6 + [24]) == (int_32)$9) ){ goto $label$3 }
	
.LABEL $label$4
	
.LOOP $label$13:
	$6 = ($6 + $10)
	$9 = *($6)
	*($6) = [0]
	if ( ($9 == 0) ){ goto $label$14 }
	CALL $49(($9 + [16]), *(($9 + [20])))
	CALL $9($9)
	
.LABEL $label$14
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$13 }
	
.LABEL $label$3
	*(($0 + [28])) = $8
	CALL db_remove_i64(*($1 + [32]))
	$9 = *($1 + [36])
	if ( ((int_32)$9 > (int_32)[-1]) ){ goto $label$16 }
	$9 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3851373727820283904, ($2 + [8]), *($1))
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$16
	CALL db_idx64_remove($9)
	
.LABEL $label$15
	$global$0 = ($2 + [16])
}

int_32 .FUNC $124 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = *($0 + [4])
	if ( ($2 == 0) ){ goto $label$3 }
	$3 = *($2 + [36])
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL eosio_assert([0], [10723])
	$2 = *(($0 + [4]))
	$3 = *($2 + [36])
	if ( ((int_32)$3 != (int_32)[-1]) ){ goto $label$1 }
	
.LABEL $label$2
	$3 = *(*($0))
	$3 = CALL db_idx64_find_primary(*($3), *($3 + [8]), (int_64)-3851373727820283904, ($1 + [8]), *($2))
	*(*(($0 + [4])) + [36]) = $3
	
.LABEL $label$1
	*($1 + [8]) = (int_64)0
	$4 = [0]
	$5 = CALL db_idx64_next($3, ($1 + [8]))
	if ( ((int_32)$5 < (int_32)[0]) ){ goto $label$4 }
	$6 = *($1 + [8])
	$2 = *(($7 + [28]))
	$7 = *(*($0))
	$8 = *($7 + [24])
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	
.LOOP $label$8:
	$3 = ($2 + [-24])
	$4 = *($3)
	if ( ((int_64)*($4) == (int_64)$6) ){ goto $label$7 }
	$2 = $3
	if ( ((int_32)$8 != (int_32)$3) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$8 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	goto $label$5 
	
.LABEL $label$6
	$4 = CALL $110($7, CALL $fimport$26(*($7), *($7 + [8]), (int_64)-3851373727820283904, $6))
	if ( ((int_32)*($4 + [28]) == (int_32)$7) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	*($4 + [36]) = $5
	
.LABEL $label$4
	*(($0 + [4])) = $4
	$global$0 = ($1 + [16])
	return $0
}

void .FUNC $14 (int_32 $0, int_32 $1)
{
	CALL $13($0, $1)
}

int_32 .FUNC $15 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$1 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	if ( (*($0) == 0) ){ goto $label$2 }
	$1 = ($0 + [1])
	
.LOOP $label$4:
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	$2 = *($1)
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$4 }
	return (($3 + [-1]) - $0)
	
.LABEL $label$3
	$1 = ($1 + [-4])
	
.LOOP $label$5:
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	if ( (($2 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$6:
	$2 = *($1 + [1])
	$3 = ($1 + [1])
	$1 = $3
	if ( $2 ){ goto $label$6 }
	return ($3 - $0)
	
.LABEL $label$2
	return ($0 - $0)
	
.LABEL $label$1
	return ($1 - $0)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$1 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	return ($3 - $4)
}

int_32 .FUNC $17 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [-1]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

void .FUNC $10 (int_32 $0)
{
	CALL $9($0)
}

int_32 .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = ( $0 ? [1] : $0 )
	$1 = ( $1 ? [4] : ((uint_32)$1 > (uint_32)[4]) )
	if ( (CALL $6(($2 + [12]), $1, $3) == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$0 = *([0] + [8216])
	if ( ($0 == 0) ){ goto $label$2 }
	CALL void $0()
	if ( CALL $6(($2 + [12]), $1, $3) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	*($2 + [12]) = [0]
	
.LABEL $label$1
	$0 = *($2 + [12])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	return CALL $11($0, $1)
}

void .FUNC $13 (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $2($0)
	
.LABEL $label$1
}

int_32 .FUNC $185 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $49($1, *($1 + [4]))
	$3 = ($1 + [4])
	*($1) = $3
	$4 = (int_64)0
	*($1 + [4 align=4]) = (int_64)0
	$5 = *($0 + [4])
	$6 = ($0 + [8])
	$7 = [0]
	
.LOOP $label$1:
	if ( ($5 <= *($6)) ){ goto $label$2 }
	CALL eosio_assert([0], [10753])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	$8 = *($5)
	$9 = ($5 + [1])
	*(($0 + [4])) = $9
	$5 = ($7 & [255])
	$4 = ((int_64)$4 | (int_64)(CASTING uint_64)(uint_32 (($8 & [127]) << $5)))
	$7 = ($5 + [7])
	$5 = $9
	if ( ($8 & [128]) ){ goto $label$1 }
	$10 = (CASTING uint_32)(uint_64 $4)
	if ( ($10 == 0) ){ goto $label$3 }
	$11 = ($1 + [4])
	$6 = ($0 + [8])
	$12 = [0]
	
.LOOP $label$4:
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $9) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$9 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $9, [8])
	$5 = (*($7) + [8])
	*(($7 = ($0 + [4]))) = $5
	if ( ((uint_32)(*($6) - $5) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$5 = *($7)
	
.LABEL $label$6
	CALL memcpy($2, $5, [8])
	*($7) = (*($7) + [8])
	$5 = *($3)
	if ( ($5 == 0) ){ goto $label$10 }
	$9 = $11
	$13 = *($5 + [16])
	$4 = *($2 + [8])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$10
	$5 = $3
	$9 = $3
	$14 = [3]
	goto $label$7 
	
.LABEL $label$9
	$14 = [10]
	goto $label$7 
	
.LABEL $label$8
	$14 = [2]
	
.LABEL $label$7
	
.LOOP $label$12:
	goto $label$30 
	
.LABEL $label$34
	$9 = $5
	$5 = $8
	$13 = *($5 + [16])
	if ( ((uint_64)$4 >= (uint_64)$13) ){ goto $label$23 }
	$14 = [10]
	goto $label$12 
	
.LABEL $label$33
	$8 = *($5)
	if ( $8 ){ goto $label$19 }
	goto $label$20 
	
.LABEL $label$32
	if ( ((uint_64)$13 >= (uint_64)$4) ){ goto $label$18 }
	$14 = [9]
	goto $label$12 
	
.LABEL $label$31
	$9 = ($5 + [4])
	$8 = *($5 + [4])
	if ( ($8 == 0) ){ goto $label$21 }
	$14 = [0]
	goto $label$12 
	
.LABEL $label$30
	$5 = $9
	goto $label$22 
	
.LABEL $label$29
	if ( (*($9) == 0) ){ goto $label$17 }
	$14 = [4]
	goto $label$12 
	
.LABEL $label$28
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$15 }
	goto $label$3 
	
.LABEL $label$27
	$9 = $5
	if ( *($9) ){ goto $label$16 }
	$14 = [6]
	goto $label$12 
	
.LABEL $label$26
	*(($8 = CALL $7([32]))) = (int_64)0
	*($8 + [8]) = $5
	*($9) = $8
	*($8 + [16]) = *($2 + [8])
	*($8 + [24]) = *($2)
	$5 = *(*($1))
	if ( ($5 == 0) ){ goto $label$13 }
	$14 = [7]
	goto $label$12 
	
.LABEL $label$25
	*($1) = $5
	$8 = *($9)
	$14 = [8]
	goto $label$12 
	
.LABEL $label$24
	CALL $112(*(($1 + [4])), $8)
	*(($5 = ($1 + [8]))) = (*($5) + [1])
	$12 = ($12 + [1])
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$14 }
	goto $label$3 
	
.LABEL $label$23
	$14 = [2]
	goto $label$12 
	
.LABEL $label$22
	$14 = [1]
	goto $label$12 
	
.LABEL $label$21
	$14 = [3]
	goto $label$12 
	
.LABEL $label$20
	$14 = [11]
	goto $label$12 
	
.LABEL $label$19
	$14 = [1]
	goto $label$12 
	
.LABEL $label$18
	$14 = [3]
	goto $label$12 
	
.LABEL $label$17
	$14 = [6]
	goto $label$12 
	
.LABEL $label$16
	$14 = [4]
	goto $label$12 
	
.LABEL $label$15
	$14 = [5]
	goto $label$12 
	
.LABEL $label$14
	$14 = [5]
	goto $label$12 
	
.LABEL $label$13
	$14 = [8]
	goto $label$12 
	
.LABEL $label$11
	$9 = *($7)
	goto $label$4 
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	$14
	return $0
}

int_32 .FUNC $18 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($global$0 - [16])
	$global$0 = $1
	$2 = [-1]
	if ( CALL $17($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($1 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$2 = *($1 + [15])
	
.LABEL $label$1
	$global$0 = ($1 + [16])
	return $2
}

void .FUNC $19 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($2 - $3))
	*($0 + [120]) = $4
	if ( (int_64)($1 == 0) ){ goto $label$1 }
	if ( ((int_64)$4 <= (int_64)$1) ){ goto $label$1 }
	*($0 + [104]) = ($3 + (CASTING uint_32)(uint_64 $1))
	return 
	
.LABEL $label$1
	*($0 + [104]) = $2
}

int_32 .FUNC $184 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	*(($3 = ($0 + [20]))) = (int_64)0
	*($0 + [16]) = $3
	*($0) = (int_64)0
	*($0 + [28]) = $1
	$3 = *($1 + [4])
	$1 = *($2 + [4])
	if ( ((uint_32)(*($1 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$3 = *(($1 + [4]))
	
.LABEL $label$1
	CALL memcpy($0, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($1 + [4]))) = $4
	$5 = ($0 + [8])
	if ( ((uint_32)(*(($1 + [8])) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	*($3) = (*($3) + [8])
	CALL $185($1, ($0 + [16]))
	*($0 + [32]) = *(*($2 + [8]))
	*($0 + [36]) = [-1]
	return $0
}

int_32 .FUNC $187 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($2, $4, [8])
	*(($1 + [16])) = *($2)
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	if ( ((int_32)*($6) != (int_32)$4) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [15]), $4, [1])
	*(($3 = ($0 + [4]))) = (*($3) + [1])
	*(($1 + [48])) = ((int_32)*($2 + [15]) != (int_32)[0])
	$0 = CALL $188($0, ($1 + [52]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $186 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $3) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	*($2 + [8]) = (int_64)0
	$5 = ($0 + [8])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy(($2 + [8]), $4, [8])
	*($1 + [8]) = *($2 + [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((uint_32)(*($5) - $4) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($3, $4, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [32])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [48])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [56])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$8
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$9
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [64])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [72])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$10 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$10
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$11
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [80])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [88])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$12
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$13 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$13
	CALL memcpy(($2 + [8]), $4, [8])
	*(($1 + [96])) = *($2 + [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [104])
	$6 = ($0 + [8])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$14 }
	CALL eosio_assert([0], [10757])
	$4 = *($3)
	
.LABEL $label$14
	CALL memcpy($5, $4, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$1 = ($1 + [112])
	if ( ((uint_32)(*($6) - $4) > (uint_32)[7]) ){ goto $label$15 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$15
	CALL memcpy($1, $4, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $180 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($7 + [8]), [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $116 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [8]) = $2
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)$1) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)7235159550150574080, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $53($4, $7)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	$1 = *($0)
	*($3) = ($3 + [8])
	if ( $8 ){ goto $label$5 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$5
	CALL $117($4, $8, $1, $3)
	$global$0 = ($3 + [16])
}

void .FUNC $117 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $4) / (int_32)[24])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$4 = ((int_32)(*($0 + [8]) - $4) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($4 << [1])
	$7 = ( $6 ? $7 : ($7 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$4 = CALL $7(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$6 = *($1)
	*($1) = [0]
	*(($1 = ($4 + ($8 = ((int_32)$5 * (int_32)[24]))))) = $6
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$5 = ($4 + ((int_32)$7 * (int_32)[24]))
	$6 = ($1 + [24])
	$7 = *($0)
	$2 = *(($0 + [4]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$6 }
	$1 = (($4 + $8) + [-24])
	
.LOOP $label$7:
	$4 = ($2 + [-24])
	$3 = *($4)
	*($4) = [0]
	*($1) = $3
	*(($1 + [16])) = *(($2 + [-8]))
	*(($1 + [8])) = *(($2 + [-16]))
	$1 = ($1 + [-24])
	$2 = $4
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	$1 = ($1 + [24])
	$7 = *(($0 + [4]))
	$2 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$2 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $49(($1 + [16]), *(($1 + [20])))
	CALL $9($1)
	
.LABEL $label$10
	if ( ((int_32)$2 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($2 == 0) ){ goto $label$11 }
	CALL $9($2)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $115 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [64]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	*($1 + [24]) = ((int_64)*($1 + [24]) + (int_64)*(*($3)))
	$7 = *($1 + [52])
	$6 = *(($1 + [56]))
	$8 = ($6 - $7)
	$9 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	$10 = *($1)
	$3 = [49]
	
.LOOP $label$3:
	$3 = ($3 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$3 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$4 }
	$3 = (($8 & [-16]) + $3)
	
.LABEL $label$4
	if ( ($3 <= [513]) ){ goto $label$6 }
	$4 = CALL $1($3)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($4 - (($3 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$5
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($4 + $3)
	CALL $190($5, $1)
	CALL db_update_i64(*($1 + [68]), $2, $4, $3)
	if ( ((uint_32)$3 >= (uint_32)[513]) ){ goto $label$9 }
	if ( ((uint_64)$10 >= (uint_64)*($0 + [16])) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $2($4)
	if ( (uint_64)($10 <= *($0 + [16])) ){ goto $label$7 }
	
.LABEL $label$8
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$10 + (int_64)1) : ((uint_64)$10 > (uint_64)(int_64)-3) )
	$global$0 = ($5 + [16])
	return 
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $112 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $2
	if ( $2 ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($1 + [8])
	if ( *($3 + [12]) ){ goto $label$3 }
	$4 = ($3 + [12])
	$2 = *($3 + [8])
	$5 = *($2)
	if ( ((int_32)$5 == (int_32)$3) ){ goto $label$6 }
	if ( ($5 == 0) ){ goto $label$2 }
	if ( *($5 + [12]) ){ goto $label$2 }
	$3 = ($5 + [12])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($2 + [4])
	if ( ($5 == 0) ){ goto $label$1 }
	if ( *($5 + [12]) ){ goto $label$1 }
	$3 = ($5 + [12])
	
.LABEL $label$5
	*($4) = [1]
	*($2 + [12]) = ((int_32)$2 == (int_32)$0)
	*($3) = [1]
	$1 = $2
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$4 }
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	if ( ((int_32)*($3) != (int_32)$1) ){ goto $label$7 }
	$5 = *($1 + [4])
	*($3) = $5
	if ( ($5 == 0) ){ goto $label$8 }
	*($5 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$8
	*(($5 = ($1 + [8]))) = $2
	*((($0 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$3) ))) = $1
	*($2) = $1
	*(($1 + [4])) = $3
	$4 = ($1 + [12])
	$2 = *($5)
	
.LABEL $label$7
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2 + [4])
	$5 = *($3)
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$9 }
	*($5 + [8]) = $2
	
.LABEL $label$9
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*($3) = $2
	return 
	
.LABEL $label$1
	if ( ((int_32)*($3) == (int_32)$1) ){ goto $label$10 }
	$5 = *($3 + [4])
	$1 = *($5)
	*($3 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $3
	$2 = *(($3 + [8]))
	
.LABEL $label$11
	*($5 + [8]) = $2
	*((($1 = *(($2 = ($3 + [8])))) + ( [0] ? [4] : ((int_32)*($1) == (int_32)$3) ))) = $5
	*($2) = $5
	*($5) = $3
	$4 = ($5 + [12])
	$2 = *($5 + [8])
	
.LABEL $label$10
	*($4) = [1]
	*($2 + [12]) = [0]
	$3 = *($2)
	$5 = *($3 + [4])
	*($2) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*($3 + [8]) = *($2 + [8])
	*((($5 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($5) == (int_32)$2) ))) = $3
	*($2 + [8]) = $3
	*(($3 + [4])) = $2
}

void .FUNC $113 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	$2 = ($global$0 - [32])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	*($1 + [8]) = *(*($4 + [4]))
	$5 = [16]
	$6 = *($0)
	$4 = *($4 + [8])
	$7 = ($1 + [16])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	CALL $207($7, *($4), ($4 + [4]))
	
.LABEL $label$1
	$8 = ($1 + [8])
	$9 = *(($1 + [24]))
	
.LOOP $label$2:
	$5 = ($5 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$2 }
	$11 = ($1 + [20])
	$10 = *($1 + [16])
	if ( ((int_32)$10 == (int_32)$11) ){ goto $label$3 }
	
.LOOP $label$4:
	$12 = $10
	$4 = *($12 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	
.LOOP $label$7:
	$10 = $4
	$4 = *($10)
	if ( $4 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$10 = *($12 + [8])
	if ( ((int_32)*($10) == (int_32)$12) ){ goto $label$5 }
	$12 = ($12 + [8])
	
.LOOP $label$8:
	$4 = *($12)
	$12 = ($4 + [8])
	$10 = *($4 + [8])
	if ( ((int_32)$4 != (int_32)*($10)) ){ goto $label$8 }
	
.LABEL $label$5
	$5 = ($5 + [16])
	if ( ((int_32)$10 != (int_32)$11) ){ goto $label$4 }
	
.LABEL $label$3
	if ( ($5 <= [513]) ){ goto $label$10 }
	$4 = CALL $1($5)
	goto $label$9 
	
.LABEL $label$10
	$4 = ($2 - (($5 + [15]) & [-16]))
	$global$0 = $4
	
.LABEL $label$9
	*($3 + [12]) = $4
	*($3 + [8]) = $4
	$12 = ($4 + $5)
	*($3 + [16]) = $12
	$10 = $4
	if ( ((int_32)$5 > (int_32)[7]) ){ goto $label$11 }
	CALL eosio_assert([0], [10508])
	$12 = *(($3 + [16]))
	$10 = *($3 + [12])
	
.LABEL $label$11
	CALL memcpy($10, $1, [8])
	$10 = ($10 + [8])
	*($3 + [12]) = $10
	if ( ((int_32)($12 - $10) > (int_32)[7]) ){ goto $label$12 }
	CALL eosio_assert([0], [10508])
	$10 = *($3 + [12])
	
.LABEL $label$12
	CALL memcpy($10, $8, [8])
	*($3 + [12]) = ($10 + [8])
	CALL $208(($3 + [8]), $7)
	$9 = *($1)
	*($1 + [32]) = CALL db_store_i64(*($6 + [8]), (int_64)-3851373727820283904, *(*($0 + [8])), $9, $4, $5)
	if ( ($5 <= [513]) ){ goto $label$13 }
	CALL $2($4)
	
.LABEL $label$13
	if ( (uint_64)($9 <= *($6 + [16])) ){ goto $label$14 }
	*(($6 + [16])) = ( (int_64)-2 ? ((int_64)$9 + (int_64)1) : ((uint_64)$9 > (uint_64)(int_64)-3) )
	
.LABEL $label$14
	$9 = *(($6 + [8]))
	$13 = *(*(($0 + [8])))
	$14 = *($1)
	*($3 + [24]) = (int_64))((int_64)0 - *(($1 + [8])))
	*($1 + [36]) = CALL db_idx64_store($9, (int_64)-3851373727820283904, $13, $14, ($3 + [24]))
	$global$0 = ($3 + [32])
}

int_32 .FUNC $110 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	$2 = ($global$0 - [48])
	$global$0 = $2
	*(($3 = $2) + [44]) = $1
	$5 = *(($0 + [28]))
	$4 = *($0 + [24])
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	
.LOOP $label$3:
	if ( ((int_32)*(($5 + [-8])) == (int_32)$1) ){ goto $label$2 }
	$5 = ($5 + [-24])
	if ( ((int_32)$4 != (int_32)$5) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$1 }
	$5 = *(($5 + [-24]))
	$global$0 = ($3 + [48])
	return $5
	
.LABEL $label$1
	$4 = CALL db_get_i64($1, [0], [0])
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	if ( ((uint_32)$4 >= (uint_32)[513]) ){ goto $label$5 }
	$5 = ($2 - (($4 + [15]) & [-16]))
	$global$0 = $5
	$2 = [0]
	goto $label$4 
	
.LABEL $label$6
	CALL eosio_assert([0], [10123])
	
.LABEL $label$5
	$5 = CALL $1($4)
	$2 = [1]
	
.LABEL $label$4
	CALL db_get_i64($1, $5, $4)
	*($3 + [36]) = $5
	*($3 + [32]) = $5
	*($3 + [40]) = ($5 + $4)
	*($3 + [12]) = ($3 + [32])
	*($3 + [16]) = ($3 + [44])
	*($3 + [8]) = $0
	$1 = CALL $7([40])
	$6 = CALL $184($1, $0, ($3 + [8]))
	*($3 + [24]) = $1
	$7 = *($1)
	*($3 + [8]) = $7
	$8 = *($1 + [32])
	*($3 + [4]) = $8
	$9 = ($0 + [28])
	$4 = *($9)
	if ( ((uint_32)$4 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($4 + [8]) = $7
	*($4 + [16]) = $8
	*($3 + [24]) = [0]
	*($4) = $1
	*($9) = ($4 + [24])
	if ( $2 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	CALL $114(($0 + [24]), ($3 + [24]), ($3 + [8]), ($3 + [4]))
	if ( ($2 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	CALL $2($5)
	
.LABEL $label$7
	$5 = *($3 + [24])
	*($3 + [24]) = [0]
	if ( ($5 == 0) ){ goto $label$10 }
	CALL $49(($5 + [16]), *(($5 + [20])))
	CALL $9($5)
	
.LABEL $label$10
	$global$0 = ($3 + [48])
	return $6
}

void .FUNC $111 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_64 $16
	int_64 $17
	int_32 $18
	$4 = ($global$0 - [48])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [28]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = ($1 + [8])
	$7 = *($6)
	*($5 + [24]) = (int_64))((int_64)0 - $7)
	$8 = *($3)
	*($6) = ((int_64)$7 + (int_64)*($8))
	$9 = ($1 + [16])
	$10 = *(($3 + [4]))
	$7 = *($10)
	$11 = *($1)
	$12 = ($1 + [20])
	$13 = *($12)
	if ( ($13 == 0) ){ goto $label$7 }
	$14 = $12
	$3 = $13
	
.LOOP $label$8:
	$15 = (uint_64)(*($3 + [16]) <= $7)
	$14 = ( $14 ? $3 : $15 )
	$3 = *(($3 + ($15 << [2])))
	if ( $3 ){ goto $label$8 }
	if ( ((int_32)$14 == (int_32)$12) ){ goto $label$9 }
	if ( ((uint_64)$7 >= (uint_64)*($14 + [16])) ){ goto $label$6 }
	
.LABEL $label$9
	$3 = ($1 + [20])
	$16 = *($8)
	$17 = *($13 + [16])
	if ( ((uint_64)$7 >= (uint_64)$17) ){ goto $label$4 }
	goto $label$5 
	
.LABEL $label$7
	$16 = *($8)
	$13 = $12
	$3 = $12
	$18 = [39]
	goto $label$3 
	
.LABEL $label$6
	$14 = ($1 + [20])
	$16 = *($8)
	$17 = *($13 + [16])
	if ( ((uint_64)$7 >= (uint_64)$17) ){ goto $label$10 }
	$18 = [35]
	goto $label$3 
	
.LABEL $label$10
	$18 = [2]
	goto $label$3 
	
.LABEL $label$5
	$18 = [45]
	goto $label$3 
	
.LABEL $label$4
	$18 = [38]
	
.LABEL $label$3
	
.LOOP $label$11:
	goto $label$58 
	
.LABEL $label$95
	$3 = $13
	$13 = $14
	$17 = *($13 + [16])
	if ( ((uint_64)$7 >= (uint_64)$17) ){ goto $label$48 }
	$18 = [45]
	goto $label$11 
	
.LABEL $label$94
	$14 = *($13)
	if ( $14 ){ goto $label$16 }
	goto $label$17 
	
.LABEL $label$93
	if ( ((uint_64)$17 >= (uint_64)$7) ){ goto $label$15 }
	$18 = [44]
	goto $label$11 
	
.LABEL $label$92
	$3 = ($13 + [4])
	$14 = *($13 + [4])
	if ( ($14 == 0) ){ goto $label$18 }
	$18 = [36]
	goto $label$11 
	
.LABEL $label$91
	$13 = $3
	goto $label$47 
	
.LABEL $label$90
	if ( (*($3) == 0) ){ goto $label$14 }
	$18 = [40]
	goto $label$11 
	
.LABEL $label$89
	if ( ((int_64)$11 == (int_64)*($1)) ){ goto $label$40 }
	$18 = [5]
	goto $label$11 
	
.LABEL $label$88
	CALL eosio_assert([0], [10369])
	$18 = [6]
	goto $label$11 
	
.LABEL $label$87
	$7 = *(($1 + [24]))
	$15 = [16]
	$18 = [7]
	goto $label$11 
	
.LABEL $label$86
	$15 = ($15 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$35 }
	$18 = [8]
	goto $label$11 
	
.LABEL $label$85
	$13 = *($1 + [16])
	if ( ((int_32)$13 == (int_32)$12) ){ goto $label$34 }
	$18 = [9]
	goto $label$11 
	
.LABEL $label$84
	$18 = [10]
	goto $label$11 
	
.LABEL $label$83
	$14 = $13
	$3 = *($14 + [4])
	if ( ($3 == 0) ){ goto $label$30 }
	$18 = [11]
	goto $label$11 
	
.LABEL $label$82
	$13 = $3
	$3 = *($13)
	if ( $3 ){ goto $label$31 }
	goto $label$32 
	
.LABEL $label$81
	$13 = *($14 + [8])
	if ( ((int_32)*($13) == (int_32)$14) ){ goto $label$29 }
	$18 = [30]
	goto $label$11 
	
.LABEL $label$80
	$14 = ($14 + [8])
	$18 = [31]
	goto $label$11 
	
.LABEL $label$79
	$3 = *($14)
	$14 = ($3 + [8])
	$13 = *($3 + [8])
	if ( ((int_32)$3 != (int_32)*($13)) ){ goto $label$28 }
	$18 = [12]
	goto $label$11 
	
.LABEL $label$78
	$15 = ($15 + [16])
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$33 }
	$18 = [13]
	goto $label$11 
	
.LABEL $label$77
	if ( ($15 <= [513]) ){ goto $label$27 }
	$18 = [28]
	goto $label$11 
	
.LABEL $label$76
	$3 = CALL $1($15)
	goto $label$26 
	
.LABEL $label$75
	$3 = ($4 - (($15 + [15]) & [-16]))
	$global$0 = $3
	$18 = [15]
	goto $label$11 
	
.LABEL $label$74
	*($5 + [12]) = $3
	*($5 + [8]) = $3
	$14 = ($3 + $15)
	*($5 + [16]) = $14
	$13 = $3
	if ( ((int_32)$15 > (int_32)[7]) ){ goto $label$25 }
	$18 = [27]
	goto $label$11 
	
.LABEL $label$73
	CALL eosio_assert([0], [10508])
	$14 = *(($5 + [16]))
	$13 = *($5 + [12])
	$18 = [16]
	goto $label$11 
	
.LABEL $label$72
	CALL memcpy($13, $1, [8])
	$13 = ($13 + [8])
	*($5 + [12]) = $13
	if ( ((int_32)($14 - $13) > (int_32)[7]) ){ goto $label$24 }
	$18 = [26]
	goto $label$11 
	
.LABEL $label$71
	CALL eosio_assert([0], [10508])
	$13 = *($5 + [12])
	$18 = [17]
	goto $label$11 
	
.LABEL $label$70
	CALL memcpy($13, $6, [8])
	*($5 + [12]) = ($13 + [8])
	CALL $208(($5 + [8]), $9)
	CALL db_update_i64(*($1 + [32]), $2, $3, $15)
	if ( ($15 <= [513]) ){ goto $label$23 }
	$18 = [25]
	goto $label$11 
	
.LABEL $label$69
	CALL $2($3)
	$18 = [18]
	goto $label$11 
	
.LABEL $label$68
	if ( (uint_64)($11 <= *($0 + [16])) ){ goto $label$22 }
	$18 = [19]
	goto $label$11 
	
.LABEL $label$67
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$11 + (int_64)1) : ((uint_64)$11 > (uint_64)(int_64)-3) )
	$18 = [20]
	goto $label$11 
	
.LABEL $label$66
	*($5 + [40]) = (int_64))((int_64)0 - *($6))
	if ( (CALL $16(($5 + [24]), ($5 + [40]), [8]) == 0) ){ goto $label$21 }
	$18 = [21]
	goto $label$11 
	
.LABEL $label$65
	$3 = *($1 + [36])
	if ( ((int_32)$3 > (int_32)[-1]) ){ goto $label$20 }
	$18 = [24]
	goto $label$11 
	
.LABEL $label$64
	$3 = CALL db_idx64_find_primary(*($0), *($0 + [8]), (int_64)-3851373727820283904, ($5 + [32]), $11)
	*(($1 + [36])) = $3
	$18 = [22]
	goto $label$11 
	
.LABEL $label$63
	CALL db_idx64_update($3, $2, ($5 + [40]))
	$18 = [23]
	goto $label$11 
	
.LABEL $label$62
	$global$0 = ($5 + [48])
	return 
	
.LABEL $label$61
	$13 = $3
	$17 = *($13 + [16])
	if ( ((uint_64)$7 >= (uint_64)$17) ){ goto $label$46 }
	$18 = [35]
	goto $label$11 
	
.LABEL $label$60
	$14 = $13
	$3 = *($13)
	if ( $3 ){ goto $label$42 }
	goto $label$43 
	
.LABEL $label$59
	if ( ((uint_64)$17 >= (uint_64)$7) ){ goto $label$44 }
	$18 = [0]
	goto $label$11 
	
.LABEL $label$58
	$14 = ($13 + [4])
	$3 = *($13 + [4])
	if ( $3 ){ goto $label$45 }
	$18 = [3]
	goto $label$11 
	
.LABEL $label$57
	$3 = *($14)
	if ( $3 ){ goto $label$41 }
	$18 = [32]
	goto $label$11 
	
.LABEL $label$56
	*(($3 = CALL $7([32]))) = (int_64)0
	*($3 + [8]) = $13
	*($14) = $3
	$7 = *($10)
	*($3 + [24]) = (int_64)0
	*($3 + [16]) = $7
	$13 = $3
	$15 = *(*($9))
	if ( ($15 == 0) ){ goto $label$19 }
	$18 = [33]
	goto $label$11 
	
.LABEL $label$55
	*($9) = $15
	$13 = *($14)
	$18 = [34]
	goto $label$11 
	
.LABEL $label$54
	CALL $112(*(($1 + [20])), $13)
	*(($13 = ($1 + [24]))) = (*($13) + [1])
	$18 = [4]
	goto $label$11 
	
.LABEL $label$53
	*(($3 = ($3 + [24]))) = ((int_64)*($3) + (int_64)$16)
	if ( ((int_64)$11 != (int_64)*($1)) ){ goto $label$38 }
	goto $label$39 
	
.LABEL $label$52
	$3 = $13
	if ( *($3) ){ goto $label$13 }
	$18 = [41]
	goto $label$11 
	
.LABEL $label$51
	*(($14 = CALL $7([32]))) = (int_64)0
	*($14 + [8]) = $13
	*($3) = $14
	*($14 + [24]) = $16
	*($14 + [16]) = $7
	$13 = *(*($9))
	if ( ($13 == 0) ){ goto $label$12 }
	$18 = [42]
	goto $label$11 
	
.LABEL $label$50
	*($9) = $13
	$14 = *($3)
	$18 = [43]
	goto $label$11 
	
.LABEL $label$49
	CALL $112(*(($1 + [20])), $14)
	*(($3 = ($1 + [24]))) = (*($3) + [1])
	if ( ((int_64)$11 != (int_64)*($1)) ){ goto $label$36 }
	goto $label$37 
	
.LABEL $label$48
	$18 = [38]
	goto $label$11 
	
.LABEL $label$47
	$18 = [37]
	goto $label$11 
	
.LABEL $label$46
	$18 = [2]
	goto $label$11 
	
.LABEL $label$45
	$18 = [1]
	goto $label$11 
	
.LABEL $label$44
	$18 = [3]
	goto $label$11 
	
.LABEL $label$43
	$18 = [3]
	goto $label$11 
	
.LABEL $label$42
	$18 = [1]
	goto $label$11 
	
.LABEL $label$41
	$18 = [4]
	goto $label$11 
	
.LABEL $label$40
	$18 = [6]
	goto $label$11 
	
.LABEL $label$39
	$18 = [6]
	goto $label$11 
	
.LABEL $label$38
	$18 = [5]
	goto $label$11 
	
.LABEL $label$37
	$18 = [6]
	goto $label$11 
	
.LABEL $label$36
	$18 = [5]
	goto $label$11 
	
.LABEL $label$35
	$18 = [7]
	goto $label$11 
	
.LABEL $label$34
	$18 = [13]
	goto $label$11 
	
.LABEL $label$33
	$18 = [10]
	goto $label$11 
	
.LABEL $label$32
	$18 = [12]
	goto $label$11 
	
.LABEL $label$31
	$18 = [11]
	goto $label$11 
	
.LABEL $label$30
	$18 = [29]
	goto $label$11 
	
.LABEL $label$29
	$18 = [12]
	goto $label$11 
	
.LABEL $label$28
	$18 = [31]
	goto $label$11 
	
.LABEL $label$27
	$18 = [14]
	goto $label$11 
	
.LABEL $label$26
	$18 = [15]
	goto $label$11 
	
.LABEL $label$25
	$18 = [16]
	goto $label$11 
	
.LABEL $label$24
	$18 = [17]
	goto $label$11 
	
.LABEL $label$23
	$18 = [18]
	goto $label$11 
	
.LABEL $label$22
	$18 = [20]
	goto $label$11 
	
.LABEL $label$21
	$18 = [23]
	goto $label$11 
	
.LABEL $label$20
	$18 = [22]
	goto $label$11 
	
.LABEL $label$19
	$18 = [34]
	goto $label$11 
	
.LABEL $label$18
	$18 = [39]
	goto $label$11 
	
.LABEL $label$17
	$18 = [46]
	goto $label$11 
	
.LABEL $label$16
	$18 = [37]
	goto $label$11 
	
.LABEL $label$15
	$18 = [39]
	goto $label$11 
	
.LABEL $label$14
	$18 = [41]
	goto $label$11 
	
.LABEL $label$13
	$18 = [40]
	goto $label$11 
	
.LABEL $label$12
	$18 = [43]
	goto $label$11 
	$18
}

void .FUNC $118 (int_32 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$3 = ($global$0 - [96])
	$global$0 = $3
	*($3 + [40]) = $2
	*($3 + [48]) = $1
	*($3 + [32]) = [9048]
	*($3 + [36]) = CALL $15([9048])
	*($3) = *($3 + [32])
	CALL $73(($3 + [64]), $3)
	CALL require_auth2((int_64)-4155580689349431776, (int_64)5445027871351373824)
	$4 = ($0 + [32])
	$6 = *(($0 + [60]))
	$5 = *(($0 + [56]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	
.LOOP $label$4:
	$7 = ($6 + [-24])
	$8 = *($7)
	if ( ((int_64)*($8) == (int_64)111) ){ goto $label$3 }
	$6 = $7
	if ( ((int_32)$5 != (int_32)$7) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$2 }
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$8 = [0]
	$7 = CALL db_find_i64(*($4), *(($0 + [40])), (int_64)7235159550150574080, (int_64)111)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$1 }
	$8 = CALL $53($4, $7)
	if ( ((int_32)*($8 + [16]) == (int_32)$4) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	$9 = ($0 + [232])
	$1 = *($8 + [8])
	$6 = *(($0 + [260]))
	$10 = *(($0 + [256]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$9:
	$7 = ($6 + [-24])
	$5 = *($7)
	if ( ((int_64)*($5) == (int_64)$1) ){ goto $label$8 }
	$6 = $7
	if ( ((int_32)$10 != (int_32)$7) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$7 }
	if ( ((int_32)*($5 + [64]) == (int_32)$9) ){ goto $label$6 }
	CALL eosio_assert([0], [10072])
	goto $label$6 
	
.LABEL $label$7
	$7 = CALL db_find_i64(*($9), *(($0 + [240])), (int_64)-4812882490098188288, $1)
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$5 = CALL $63($9, $7)
	if ( ((int_32)*($5 + [64]) == (int_32)$9) ){ goto $label$6 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$6
	CALL eosio_assert(*($5 + [48]), [9474])
	
.LABEL $label$5
	*($3 + [24]) = ((int_64)$1 + (int_64)1)
	CALL $116($0, (int_64)108, *($3 + [48]))
	CALL $116($0, (int_64)109, *($3 + [40]))
	$1 = *($0)
	*($3 + [12]) = ($3 + [48])
	*($3 + [8]) = ($3 + [24])
	*($3 + [16]) = ($3 + [40])
	*($3 + [88]) = $1
	if ( ((int_64)*(($0 + [232])) == (int_64)CALL current_receiver()) ){ goto $label$10 }
	CALL eosio_assert([0], [10762])
	
.LABEL $label$10
	*($3 + [64]) = $9
	*($3 + [68]) = ($3 + [8])
	*($3 + [72]) = ($3 + [88])
	*(($7 = CALL $7([80])) + [16]) = (int_64)0
	*($7 + [8]) = (int_64)0
	*($7 + [52 align=4]) = (int_64)0
	*($7 + [60]) = [0]
	*($7 + [64]) = $9
	CALL $119(($3 + [64]), $7)
	*($3 + [80]) = $7
	$1 = *($7)
	*($3 + [64]) = $1
	$5 = *($7 + [68])
	*($3 + [60]) = $5
	$10 = ($0 + [260])
	$6 = *($10)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [264]))) ){ goto $label$13 }
	*($6 + [8]) = $1
	*($6 + [16]) = $5
	*($3 + [80]) = [0]
	*($6) = $7
	*($10) = ($6 + [24])
	$7 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	goto $label$12 
	
.LABEL $label$13
	CALL $120(($0 + [256]), ($3 + [80]), ($3 + [64]), ($3 + [60]))
	$7 = *($3 + [80])
	*($3 + [80]) = [0]
	if ( ($7 == 0) ){ goto $label$11 }
	
.LABEL $label$12
	$6 = *($7 + [52])
	if ( ($6 == 0) ){ goto $label$14 }
	*(($7 + [56])) = $6
	CALL $9($6)
	
.LABEL $label$14
	CALL $9($7)
	
.LABEL $label$11
	$1 = *($0)
	*($3 + [64]) = ($3 + [24])
	if ( $8 ){ goto $label$15 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$15
	CALL $121($4, $8, $1, ($3 + [64]))
	$global$0 = ($3 + [96])
}

void .FUNC $119 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_32 $11
	$2 = ($global$0 - [16])
	$3 = $2
	$global$0 = $2
	$4 = *($0 + [4])
	*($1) = *(*($4))
	$5 = *($0)
	$6 = CALL $15([8690])
	if ( ($6 <= [8]) ){ goto $label$4 }
	CALL eosio_assert([0], [9729])
	goto $label$3 
	
.LABEL $label$4
	if ( ($6 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$7 = (int_64)0
	
.LOOP $label$5:
	$8 = *(($6 + [8689]))
	if ( ((($8 + [-65]) & [255]) <= [26]) ){ goto $label$6 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$6
	$7 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)56) >> (int_64)56))
	$6 = ($6 + [-1])
	if ( $6 ){ goto $label$5 }
	$9 = ((int_64)((int_64)$7 << (int_64)8) | (int_64)4)
	goto $label$1 
	
.LABEL $label$2
	$9 = (int_64)4
	
.LABEL $label$1
	$7 = (uint_64)$9 >> (uint_64)(int_64)8)
	$6 = [0]
	
.LOOP $label$9:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $7) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$10 = (uint_64)$7 >> (uint_64)(int_64)8)
	if ( ((int_64)((int_64)$7 & (int_64)65280) == (int_64)0) ){ goto $label$10 }
	$7 = $10
	$8 = $6
	$6 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$10
	$7 = $10
	
.LOOP $label$11:
	if ( ((int_64)((int_64)$7 & (int_64)65280) != (int_64)0) ){ goto $label$8 }
	$7 = (uint_64)$7 >> (uint_64)(int_64)8)
	$8 = ((int_32)$6 < (int_32)[6])
	$11 = ($6 + [1])
	$6 = $11
	if ( $8 ){ goto $label$11 }
	$6 = ($11 + [1])
	if ( ((int_32)$11 < (int_32)[6]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	CALL eosio_assert([0], [9876])
	
.LABEL $label$7
	*($1 + [8]) = (int_64)0
	*(($1 + [16])) = $9
	*($1 + [24]) = (int_64)0
	*($1 + [32]) = *(*($4 + [4]))
	*($1 + [48]) = [0]
	*($1 + [40]) = *(*($4 + [8]))
	$11 = *($1 + [52])
	$8 = *(($1 + [56]))
	$4 = ($8 - $11)
	$7 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	$6 = [49]
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	if ( ((int_64)$7) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$11 == (int_32)$8) ){ goto $label$13 }
	$6 = (($4 & [-16]) + $6)
	
.LABEL $label$13
	if ( ($6 <= [513]) ){ goto $label$15 }
	$8 = CALL $1($6)
	goto $label$14 
	
.LABEL $label$15
	$8 = ($2 - (($6 + [15]) & [-16]))
	$global$0 = $8
	
.LABEL $label$14
	*($3 + [4]) = $8
	*($3) = $8
	*($3 + [8]) = ($8 + $6)
	CALL $190($3, $1)
	$7 = *($1)
	*($1 + [68]) = CALL db_store_i64(*($5 + [8]), (int_64)-4812882490098188288, *(*($0 + [8])), $7, $8, $6)
	if ( ((uint_32)$6 >= (uint_32)[513]) ){ goto $label$18 }
	if ( ((uint_64)$7 >= (uint_64)*($5 + [16])) ){ goto $label$17 }
	goto $label$16 
	
.LABEL $label$18
	CALL $2($8)
	if ( (uint_64)($7 <= *($5 + [16])) ){ goto $label$16 }
	
.LABEL $label$17
	*(($5 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	$global$0 = ($3 + [16])
	return 
	
.LABEL $label$16
	$global$0 = ($3 + [16])
}

void .FUNC $29 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $28 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = ($global$0 - [16])
	$global$0 = $4
	*($4 + [12]) = $3
	$3 = CALL $23([2], $0, $1, $2, $3)
	$global$0 = ($4 + [16])
	return $3
}

int_64 .FUNC $21 (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$17 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$17 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$18:
	$6 = *($5)
	if ( ($6 <= *($4)) ){ goto $label$20 }
	$6 = CALL $20($0)
	if ( ((uint_32)($6 + [-9]) >= (uint_32)[5]) ){ goto $label$19 }
	goto $label$18 
	
.LABEL $label$20
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( (($6 + [-9]) <= [5]) ){ goto $label$18 }
	
.LABEL $label$19
	if ( ((int_32)$6 == (int_32)[32]) ){ goto $label$18 }
	$5 = ((int_32)$6 == (int_32)[45])
	if ( $5 ){ goto $label$21 }
	if ( ((int_32)$6 != (int_32)[43]) ){ goto $label$16 }
	
.LABEL $label$21
	$7 = ( [-1] ? [0] : $5 )
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$15 }
	*($5) = ($6 + [1])
	$6 = *($6)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	goto $label$14 
	
.LABEL $label$17
	*(CALL $4()) = [22]
	return (int_64)0
	
.LABEL $label$16
	$7 = [0]
	if ( ((int_32)($1 | [16]) == (int_32)[16]) ){ goto $label$14 }
	goto $label$13 
	
.LABEL $label$15
	$6 = CALL $20($0)
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$13 }
	
.LABEL $label$14
	if ( ((int_32)$6 != (int_32)[48]) ){ goto $label$13 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$12 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$11 
	
.LABEL $label$13
	$1 = ( $1 ? [10] : $1 )
	if ( ((uint_32)$1 > (uint_32)*(($6 + [8273]))) ){ goto $label$10 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$22 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$22
	CALL $19($0, (int_64)0)
	*(CALL $4()) = [22]
	return (int_64)0
	
.LABEL $label$12
	$6 = CALL $20($0)
	
.LABEL $label$11
	if ( ((int_32)($6 | [32]) != (int_32)[120]) ){ goto $label$23 }
	$5 = ($0 + [4])
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*(($0 + [104]))) ){ goto $label$9 }
	*($5) = ($6 + [1])
	$6 = *($6)
	goto $label$8 
	
.LABEL $label$23
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$10
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$6 }
	$8 = (int_64)0
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$5 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$25:
	$6 = ((int_32)$5 * (int_32)[10])
	$1 = *($2)
	if ( ((uint_32)$1 >= (uint_32)*($9)) ){ goto $label$27 }
	*($2) = ($1 + [1])
	$5 = ($6 + $4)
	$6 = *($1)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 <= (uint_32)[9]) ){ goto $label$26 }
	goto $label$24 
	
.LABEL $label$27
	$5 = ($6 + $4)
	$6 = CALL $20($0)
	$4 = ($6 + [-48])
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$24 }
	
.LABEL $label$26
	if ( ($5 <= [429496729]) ){ goto $label$25 }
	
.LABEL $label$24
	$8 = (CASTING uint_64)(uint_32 $5)
	if ( ((uint_32)$4 > (uint_32)[9]) ){ goto $label$2 }
	$1 = [10]
	$11 = (CASTING int_64)(int_32 $4)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$28:
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$30 }
	*($4) = ($6 + [1])
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = *($6)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 <= (uint_32)[9]) ){ goto $label$29 }
	goto $label$4 
	
.LABEL $label$30
	$8 = ((int_64)$10 + (int_64)$11)
	$6 = CALL $20($0)
	$5 = ($6 + [-48])
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$4 }
	
.LABEL $label$29
	if ( ((uint_64)$8 >= (uint_64)(int_64)1844674407370955162) ){ goto $label$4 }
	$11 = (CASTING int_64)(int_32 $5)
	$10 = ((int_64)$8 * (int_64)10)
	if ( ((uint_64)$10 <= (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$28 }
	goto $label$3 
	
.LABEL $label$9
	$6 = CALL $20($0)
	
.LABEL $label$8
	$1 = [16]
	if ( (*(($6 + [8273])) <= [16]) ){ goto $label$6 }
	$6 = *(($0 + [104]))
	if ( ($6 == 0) ){ goto $label$31 }
	*(($5 = ($0 + [4]))) = (*($5) + [-1])
	
.LABEL $label$31
	if ( ($2 == 0) ){ goto $label$5 }
	$8 = (int_64)0
	if ( ($6 == 0) ){ goto $label$1 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	return (int_64)0
	
.LABEL $label$7
	$1 = [8]
	
.LABEL $label$6
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$32 }
	$8 = (int_64)0
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$33 }
	$4 = [0]
	$9 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$35:
	$4 = ($5 + ((int_32)$4 * (int_32)$1))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($9)) ){ goto $label$37 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$4 <= (uint_32)[119304646]) ){ goto $label$36 }
	goto $label$34 
	
.LABEL $label$37
	$6 = CALL $20($0)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$4 > (uint_32)[119304646]) ){ goto $label$34 }
	
.LABEL $label$36
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$35 }
	
.LABEL $label$34
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$33
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$12 = (CASTING uint_64)(uint_32 $1)
	$13 = ((uint_64)(int_64)-1 / (uint_64)$12)
	if ( ((uint_64)$8 > (uint_64)$13) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$38:
	$11 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$10 = ((int_64)$8 * (int_64)$12)
	if ( ((uint_64)$10 > (uint_64)((int_64)$11 ^ (int_64)-1)) ){ goto $label$3 }
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$40 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$39 
	
.LABEL $label$40
	$6 = CALL $20($0)
	
.LABEL $label$39
	$8 = ((int_64)$10 + (int_64)$11)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$13) ){ goto $label$38 }
	goto $label$3 
	
.LABEL $label$32
	$9 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [8258]))
	$8 = (int_64)0
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$41 }
	$4 = [0]
	$14 = ($0 + [104])
	$2 = ($0 + [4])
	
.LOOP $label$43:
	$4 = ($5 | ($4 << $9))
	$6 = *($2)
	if ( ((uint_32)$6 >= (uint_32)*($14)) ){ goto $label$45 }
	*($2) = ($6 + [1])
	$6 = *($6)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$4 <= (uint_32)[134217727]) ){ goto $label$44 }
	goto $label$42 
	
.LABEL $label$45
	$6 = CALL $20($0)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$4 > (uint_32)[134217727]) ){ goto $label$42 }
	
.LABEL $label$44
	if ( ((uint_32)$1 > (uint_32)$5) ){ goto $label$43 }
	
.LABEL $label$42
	$8 = (CASTING uint_64)(uint_32 $4)
	
.LABEL $label$41
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	$11 = (CASTING uint_64)(uint_32 $9)
	$12 = (uint_64)(int_64)-1 >> (uint_64)$11
	if ( (uint_64)($12) <= $8) ){ goto $label$3 }
	$2 = ($0 + [104])
	$4 = ($0 + [4])
	
.LOOP $label$46:
	$8 = ((int_64)$8 << (int_64)$11)
	$10 = ((int_64)(CASTING uint_64)(uint_32 $5) & (int_64)255)
	$6 = *($4)
	if ( ((uint_32)$6 >= (uint_32)*($2)) ){ goto $label$48 }
	*($4) = ($6 + [1])
	$6 = *($6)
	goto $label$47 
	
.LABEL $label$48
	$6 = CALL $20($0)
	
.LABEL $label$47
	$8 = ((int_64)$8 | (int_64)$10)
	$5 = *(($6 + [8273]))
	if ( ((uint_32)$1 <= (uint_32)$5) ){ goto $label$3 }
	if ( ((uint_64)$8 <= (uint_64)$12) ){ goto $label$46 }
	goto $label$3 
	
.LABEL $label$5
	CALL $19($0, (int_64)0)
	return (int_64)0
	
.LABEL $label$4
	if ( ((uint_32)$5 > (uint_32)[9]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( ((uint_32)$1 <= (uint_32)*(($6 + [8273]))) ){ goto $label$2 }
	$4 = ($0 + [104])
	$5 = ($0 + [4])
	
.LOOP $label$50:
	$6 = *($5)
	if ( ((uint_32)$6 >= (uint_32)*($4)) ){ goto $label$51 }
	*($5) = ($6 + [1])
	if ( ((uint_32)$1 > (uint_32)*((*($6) + [8273]))) ){ goto $label$50 }
	goto $label$49 
	
.LABEL $label$51
	if ( ((uint_32)$1 > (uint_32)*((CALL $20($0) + [8273]))) ){ goto $label$50 }
	
.LABEL $label$49
	*(CALL $4()) = [34]
	$7 = ( $7 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$8 = $3
	
.LABEL $label$2
	if ( (*(($0 + [104])) == 0) ){ goto $label$52 }
	*(($6 = ($0 + [4]))) = (*($6) + [-1])
	
.LABEL $label$52
	if ( (uint_64)($8 <= $3) ){ goto $label$53 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$54 }
	if ( $7 ){ goto $label$54 }
	*(CALL $4()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$54
	if ( ((uint_64)$8 <= (uint_64)$3) ){ goto $label$53 }
	*(CALL $4()) = [34]
	return $3
	
.LABEL $label$53
	$10 = (CASTING int_64)(int_32 $7)
	$8 = (int_64))(((int_64)$8 ^ (int_64)$10) - $10)
	
.LABEL $label$1
	return $8
}

int_32 .FUNC $20 (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$6 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$5 }
	
.LABEL $label$6
	$2 = CALL $18($0)
	if ( ((int_32)$2 <= (int_32)[-1]) ){ goto $label$5 }
	$3 = *($0 + [8])
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$7 }
	$4 = *($0 + [4])
	$1 = (int_64)
	if ( ((int_64)$1($1 - *($0 + [120]))) <= (int_64)(CASTING int_64)(int_32 ($3 - $4))) ){ goto $label$4 }
	
.LABEL $label$7
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$4
	*($0 + [104]) = (($4 + (CASTING uint_32)(uint_64 $1)) + [-1])
	if ( $3 ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)*($0 + [120]) + (int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)$2 == (int_32)*($0)) ){ goto $label$8 }
	*($0) = $2
	
.LABEL $label$8
	return $2
}

int_32 .FUNC $23 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	float_64 $17
	int_32 $18
	int_32 $19
	int_64 $20
	int_64 $21
	int_64 $22
	int_64 $23
	float_64 $24
	float_64 $25
	float_64 $26
	int_32 $27
	$5 = ($global$0 - [32])
	$global$0 = $5
	$6 = ( $0 ? [1] : $1 )
	$7 = [0]
	
.LOOP $label$1:
	$9 = $7
	$10 = ([0] - $9)
	$0 = ($3 + [2])
	$11 = [0]
	$7 = *(($3 + [0]))
	if ( ($7 == 0) ){ goto $label$5 }
	
.LOOP $label$7:
	$12 = ($9 + $11)
	if ( ((int_32)$7 == (int_32)[37]) ){ goto $label$6 }
	CALL void int_32(($7 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$10 = ($10 + [-1])
	$0 = ($0 + [1])
	$11 = ($11 + [1])
	$7 = *(($3 + $11))
	if ( $7 ){ goto $label$7 }
	goto $label$5 
	
.LABEL $label$6
	$13 = [0]
	
.LOOP $label$9:
	$8 = ($0 + [-1])
	$7 = *($8)
	$14 = ($7 + [-32])
	if ( ((uint_32)$14 > (uint_32)[16]) ){ goto $label$8 }
	$3 = [1]
	goto $label$14 
	
.LABEL $label$14
	$3 = [8]
	goto $label$10 
	
.LABEL $label$13
	$3 = [16]
	goto $label$10 
	
.LABEL $label$12
	$3 = [4]
	goto $label$10 
	
.LABEL $label$11
	$3 = [2]
	
.LABEL $label$10
	$0 = ($0 + [1])
	$13 = ($13 | $3)
	goto $label$9 
	
.LABEL $label$8
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$15 }
	$3 = [0]
	
.LOOP $label$16:
	$3 = ((((int_32)$3 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$16 }
	$14 = [0]
	if ( ((int_32)($7 & [255]) != (int_32)[46]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$15
	$3 = [0]
	if ( ((int_32)$7 != (int_32)[42]) ){ goto $label$17 }
	$7 = *($4)
	$13 = ( ($13 | [2]) ? $13 : ((int_32)$7 < (int_32)[0]) )
	$3 = int_32($7 >> [31])
	$3 = ((int_32)($7 + $3) ^ (int_32)$3)
	$4 = ($4 + [4])
	$14 = [0]
	$7 = *($0)
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$17
	$0 = $8
	$14 = [0]
	if ( ((int_32)($7 & [255]) == (int_32)[46]) ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$0 = ($9 + $11)
	CALL void [0]((int_32 $1), (int_32 ( $0 ? ($2 + [-1]) : ($0 <= $2) )), (int_32 $2), (int_32 $6))
	$global$0 = ($5 + [32])
	return $0
	
.LABEL $label$4
	$8 = $0
	goto $label$2 
	
.LABEL $label$3
	$8 = ($0 + [1])
	$13 = ($13 | [1024])
	$7 = *($0 + [1])
	if ( ((uint_32)(($7 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$18 }
	$14 = [0]
	
.LOOP $label$19:
	$14 = ((((int_32)$14 * (int_32)[10]) + int_32(($7 << [24]) >> [24])) + [-48])
	$7 = *($8 + [1])
	$0 = ($8 + [1])
	$8 = $0
	if ( ((($7 + [-48]) & [255]) <= [10]) ){ goto $label$19 }
	$8 = $0
	goto $label$2 
	
.LABEL $label$18
	if ( ((int_32)($7 & [255]) != (int_32)[42]) ){ goto $label$2 }
	$7 = *($4)
	$14 = ( $7 ? [0] : ((int_32)$7 > (int_32)[0]) )
	$8 = ($0 + [2])
	$4 = ($4 + [4])
	$7 = *($0 + [2])
	
.LABEL $label$2
	$0 = (rotl((int_32) (int_32(($7 << [24]) >> [24]) + [-104])))
	if ( ((uint_32)$0 > (uint_32)[31]) ){ goto $label$23 }
	goto $label$26 
	
.LABEL $label$27
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	goto $label$23 
	
.LABEL $label$26
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[104]) ){ goto $label$22 }
	$8 = ($8 + [2])
	$13 = ($13 | [192])
	goto $label$23 
	
.LABEL $label$25
	$8 = ($8 + [1])
	$13 = ($13 | [512])
	goto $label$23 
	
.LABEL $label$24
	$0 = *($8 + [1])
	if ( ((int_32)$0 != (int_32)[108]) ){ goto $label$21 }
	$8 = ($8 + [2])
	$13 = ($13 | [768])
	
.LABEL $label$23
	$0 = *($8)
	goto $label$20 
	
.LABEL $label$22
	$8 = ($8 + [1])
	$13 = ($13 | [128])
	goto $label$20 
	
.LABEL $label$21
	$8 = ($8 + [1])
	$13 = ($13 | [256])
	
.LABEL $label$20
	$15 = int_32(($0 << [24]) >> [24])
	$7 = ($15 + [-37])
	if ( ((uint_32)$7 > (uint_32)[83]) ){ goto $label$51 }
	goto $label$55 
	
.LABEL $label$62
	$11 = ($0 & [255])
	$7 = ($11 + [-88])
	if ( ((uint_32)$7 > (uint_32)[32]) ){ goto $label$60 }
	$0 = [8]
	$10 = [16]
	goto $label$59 
	
.LABEL $label$63
	$0 = [2]
	goto $label$58 
	
.LABEL $label$61
	$18 = ((float_64)$17 < (float_64)(float_64)0)
	$16 = (($4 + [7]) & [-8])
	$17 = *($16)
	$17 = ( (float_64))((float_64)0 - $17) ? $17 : $18 )
	$0 = ( $14 ? [6] : ($13 & [1024]) )
	if ( ($0 <= [10]) ){ goto $label$48 }
	$14 = [1]
	
.LOOP $label$65:
	*((($5 + ($7 = $14)) + [-1])) = [48]
	$14 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$64 }
	if ( ((uint_32)$0 > (uint_32)[9]) ){ goto $label$65 }
	
.LABEL $label$64
	$19 = ($7 <= [32])
	$14 = ($14 + [-1])
	goto $label$47 
	
.LABEL $label$60
	$13 = ($13 & [-17])
	$10 = [10]
	
.LABEL $label$59
	$13 = ( ($13 | [32]) ? $13 : ((int_32)$11 == (int_32)[88]) )
	if ( ((int_32)$11 == (int_32)[100]) ){ goto $label$57 }
	$0 = $10
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$56 }
	
.LABEL $label$58
	$13 = ($13 & [-13])
	goto $label$56 
	
.LABEL $label$57
	$0 = $10
	
.LABEL $label$56
	$7 = ( ($13 & [-2]) ? $13 : ($13 & [1024]) )
	if ( ((int_32)$11 == (int_32)[105]) ){ goto $label$70 }
	if ( ((int_32)$11 != (int_32)[100]) ){ goto $label$69 }
	
.LABEL $label$70
	if ( ($7 & [512]) ){ goto $label$68 }
	if ( ($7 & [256]) ){ goto $label$67 }
	if ( ($7 & [64]) ){ goto $label$46 }
	$11 = *($4)
	$15 = ( int_32(($11 << [16]) >> [16]) ? $11 : ($7 & [128]) )
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$69
	if ( ($7 & [512]) ){ goto $label$66 }
	if ( ($7 & [256]) ){ goto $label$45 }
	if ( ($7 & [64]) ){ goto $label$44 }
	$11 = *($4)
	$11 = ( ($11 & [65535]) ? $11 : ($7 & [128]) )
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( ($11 == 0) ){ goto $label$43 }
	goto $label$42 
	
.LABEL $label$68
	$9 = (($4 + [7]) & [-8])
	$20 = *($9)
	$11 = ((int_64)$20 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$72 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$71 }
	
.LABEL $label$72
	$21 = (CASTING uint_64)(uint_32 $0)
	$22 = (int_64)$20 >> (int_64)63
	$22 = ((int_64)((int_64)$20 + (int_64)$22)) ^ (int_64)$22)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$73:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$71 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$73 }
	
.LABEL $label$71
	$4 = ($9 + [8])
	$7 = CALL $25($6, $1, $12, $2, $5, $11, (CASTING uint_32)(uint_64 (uint_64)$20 >> (uint_64)(int_64)63)), $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$67
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( $15 ){ goto $label$75 }
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$74 }
	
.LABEL $label$75
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$76:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$74 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$76 }
	
.LABEL $label$74
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$66
	$9 = (($4 + [7]) & [-8])
	$22 = *($9)
	$11 = ((int_64)$22 != (int_64)0)
	$13 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$78 }
	$11 = [0]
	if ( ($13 & [1024]) ){ goto $label$77 }
	
.LABEL $label$78
	$21 = (CASTING uint_64)(uint_32 $0)
	$10 = (((int_32)($13 & [32]) ^ (int_32)[97]) + [246])
	$11 = [0]
	
.LOOP $label$79:
	$23 = ((uint_64)$22 / (uint_64)$21)
	$7 = (CASTING uint_32)(uint_64 (int_64))($22 - ((int_64)$23 * (int_64)$21))
	*(($5 + $11)) = (( [48] ? $10 : ((int_32)($7) << [24]) < (int_32)[167772160]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$77 }
	$7 = ((uint_64)$22 >= (uint_64)$21)
	$22 = $23
	if ( $7 ){ goto $label$79 }
	
.LABEL $label$77
	$4 = ($9 + [8])
	$7 = CALL $25($6, $1, $12, $2, $5, $11, [0], $0, $14, $3, $13)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$55
	CALL void [37]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	goto $label$50 
	
.LABEL $label$54
	$10 = [1]
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$80 }
	$10 = [2]
	if ( ($3 <= [2]) ){ goto $label$80 }
	$0 = ($3 + [-1])
	$10 = ($3 + [1])
	
.LOOP $label$81:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$81 }
	$12 = ((($3 + $9) + $11) + [-1])
	
.LABEL $label$80
	CALL void *($4)((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$7 = ($12 + [1])
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$49 }
	if ( ((uint_32)$10 >= (uint_32)$3) ){ goto $label$49 }
	$0 = ($3 - $10)
	$11 = ($7 + $3)
	
.LOOP $label$82:
	CALL void [32]((int_32 $1), (int_32 $7), (int_32 $2), (int_32 $6))
	$7 = ($7 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$82 }
	$7 = ($11 - $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$53
	$0 = *($4)
	$0 = ($13 | [33])
	$10 = ( $0 ? ($0 & [-17]) : $0 )
	if ( $0 ){ goto $label$84 }
	$11 = [0]
	if ( ($10 & [1024]) ){ goto $label$83 }
	
.LABEL $label$84
	$11 = [0]
	
.LOOP $label$85:
	$7 = ($0 & [15])
	*(($5 + $11)) = (( [48] ? [55] : ($7 <= [10]) ) + $7)
	$11 = ($11 + [1])
	if ( ((uint_32)$11 > (uint_32)[31]) ){ goto $label$83 }
	$7 = ((uint_32)$0 > (uint_32)[15])
	$0 = uint_32($0 >> [4])
	if ( $7 ){ goto $label$85 }
	
.LABEL $label$83
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $11, [0], [16], $14, [8], $10)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$52
	$10 = *($4)
	$0 = ($10 + [-1])
	
.LOOP $label$86:
	$0 = ($0 + [1])
	if ( *($0) ){ goto $label$86 }
	$15 = ($13 & [1024])
	$0 = ($0 - $10)
	$7 = ( ( $0 ? $14 : ($0 <= $14) ) ? $0 : uint_32($15 >> [10]) )
	$13 = ($13 & [2])
	if ( $13 ){ goto $label$39 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$40 }
	$0 = (($9 + ($3 - $7)) + $11)
	
.LOOP $label$87:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$7 = ($7 + [1])
	if ( ($7 <= $3) ){ goto $label$87 }
	$7 = ($3 + [1])
	$12 = $0
	$0 = *($10)
	if ( $0 ){ goto $label$38 }
	goto $label$37 
	
.LABEL $label$51
	CALL void $15((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	
.LABEL $label$50
	$7 = ($12 + [1])
	
.LABEL $label$49
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$48
	$19 = [1]
	$14 = [0]
	
.LABEL $label$47
	$24 = *((($0 << [3]) + [8544]))
	$25 = ((float_64)(float_64))($17 - (Rounds 0)($17)) * (float_64)$24
	$26 = (float_64)
	$7 = ((float_64)$26($25) - (Rounds 0)($25))) > (float_64)(float_64)0.5)
	if ( (((float_64)$25 < (float_64)(float_64)4294967296) & ((float_64)$25 >= (float_64)(float_64)0)) ){ goto $label$89 }
	$4 = [0]
	goto $label$88 
	
.LABEL $label$89
	$4 = (CASTING uint_32)(float_64 $25)
	
.LABEL $label$88
	$7 = ((int_32)$7 ^ (int_32)[1])
	if ( ((float_64)(float_64)|$17| < (float_64)(float_64)2147483648) ){ goto $label$91 }
	$15 = [-2147483648]
	if ( ($7 == 0) ){ goto $label$90 }
	goto $label$36 
	
.LABEL $label$91
	$15 = (CASTING int_32)(float_64 $17)
	if ( $7 ){ goto $label$36 }
	
.LABEL $label$90
	$4 = ($4 + [1])
	if ( ((int_32)((float_64)$24 <= (float_64)(CASTING float_64)(uint_32 $4)) ^ (int_32)[1]) ){ goto $label$35 }
	$15 = ($15 + [1])
	$4 = [0]
	goto $label$35 
	
.LABEL $label$46
	$15 = *($4)
	$19 = ( $7 ? ($7 & [-17]) : $15 )
	if ( ($15 == 0) ){ goto $label$30 }
	goto $label$29 
	
.LABEL $label$45
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$93 }
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$92 }
	
.LABEL $label$93
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$94:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$92 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$94 }
	
.LABEL $label$92
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$44
	$11 = *($4)
	$15 = ( $7 ? ($7 & [-17]) : $11 )
	if ( $11 ){ goto $label$42 }
	
.LABEL $label$43
	$7 = [0]
	if ( ($15 & [1024]) ){ goto $label$41 }
	
.LABEL $label$42
	$9 = (((int_32)($15 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$95:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$41 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$95 }
	
.LABEL $label$41
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $7, [0], $0, $14, $3, $15)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$40
	$7 = ($7 + [1])
	
.LABEL $label$39
	$0 = *($10)
	if ( ($0 == 0) ){ goto $label$37 }
	
.LABEL $label$38
	if ( ($15 == 0) ){ goto $label$96 }
	$11 = ($10 + [1])
	
.LOOP $label$97:
	if ( ($14 == 0) ){ goto $label$37 }
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$14 = ($14 + [-1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$97 }
	goto $label$37 
	
.LABEL $label$96
	$11 = ($10 + [1])
	
.LOOP $label$98:
	CALL void int_32(($0 << [24]) >> [24])((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = *($11)
	$11 = ($11 + [1])
	if ( $0 ){ goto $label$98 }
	
.LABEL $label$37
	$4 = ($4 + [4])
	if ( ($13 == 0) ){ goto $label$100 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$99 }
	$0 = ($3 - $7)
	$11 = ($12 + $3)
	
.LOOP $label$101:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$101 }
	$7 = ($11 - $7)
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$100
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$99
	$7 = $12
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$36
	if ( ((float_64)$26 != (float_64)(float_64)0.5) ){ goto $label$35 }
	$4 = ((($4 & [1]) | ($4 == 0)) + $4)
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	goto $label$34 
	
.LABEL $label$35
	$7 = [0]
	if ( ((float_64)$17 > (float_64)(float_64)2147483647) ){ goto $label$33 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$105 }
	$7 = [32]
	if ( ($19 == 0) ){ goto $label$102 }
	
.LOOP $label$107:
	$7 = ((uint_32)$4 / (uint_32)[10])
	*(($5 + $14)) = (($4 - ((int_32)$7 * (int_32)[10])) | [48])
	$0 = ($0 + [-1])
	$14 = ($14 + [1])
	if ( ($4 <= [10]) ){ goto $label$106 }
	$4 = $7
	if ( ($14 <= [32]) ){ goto $label$107 }
	
.LABEL $label$106
	$4 = ($14 <= [32])
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$108 }
	if ( ($0 == 0) ){ goto $label$108 }
	$19 = ($0 + [-1])
	$27 = ($5 + $14)
	$0 = [0]
	
.LOOP $label$110:
	*(($27 + $0)) = [48]
	$7 = ($0 + [1])
	$4 = (($14 + $0) + [1])
	if ( ((int_32)$19 == (int_32)$0) ){ goto $label$109 }
	$0 = $7
	if ( ($4 <= [32]) ){ goto $label$110 }
	
.LABEL $label$109
	$4 = ($4 <= [32])
	$14 = ($14 + $7)
	
.LABEL $label$108
	if ( ($4 == 0) ){ goto $label$103 }
	*(($5 + $14)) = [46]
	$7 = [32]
	$14 = ($14 + [1])
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$105
	$17 = (float_64)
	if ( ((int_32)((float_64)$17($17 - (CASTING float_64)(int_32 $15))) > (float_64)(float_64)0.5) ^ (int_32)[1]) ){ goto $label$111 }
	$15 = ($15 + [1])
	$7 = [32]
	if ( ((uint_32)$14 <= (uint_32)[31]) ){ goto $label$104 }
	goto $label$102 
	
.LABEL $label$111
	$15 = ($15 + ($15 & ((float_64)$17 == (float_64)(float_64)0.5)))
	$7 = [32]
	if ( ((uint_32)$14 > (uint_32)[31]) ){ goto $label$102 }
	
.LABEL $label$104
	$7 = $14
	
.LOOP $label$112:
	$0 = ((int_32)$15 / (int_32)[10])
	*(($5 + $7)) = (($15 - ((int_32)$0 * (int_32)[10])) + [48])
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$102 }
	$14 = ($15 + [9])
	$15 = $0
	if ( ((uint_32)$14 > (uint_32)[18]) ){ goto $label$112 }
	goto $label$102 
	
.LABEL $label$103
	$7 = $14
	
.LABEL $label$102
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ((int_32)($13 & [3]) != (int_32)[1]) ){ goto $label$113 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$113 }
	
.LOOP $label$114:
	*(($5 + $7)) = [48]
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$113 }
	if ( ($7 <= $3) ){ goto $label$114 }
	
.LABEL $label$113
	if ( ((int_32)$7 != (int_32)$3) ){ goto $label$115 }
	$7 = ($3 - (((int_32)($13 & [12]) != (int_32)[0]) | $18))
	
.LABEL $label$115
	$0 = ($13 & [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$116 }
	if ( ((int_32)$18 ^ (int_32)[1]) ){ goto $label$118 }
	*(($5 + $7)) = [45]
	goto $label$117 
	
.LABEL $label$118
	if ( ($13 & [4]) ){ goto $label$119 }
	if ( (($13 & [8]) == 0) ){ goto $label$116 }
	*(($5 + $7)) = [32]
	goto $label$117 
	
.LABEL $label$119
	*(($5 + $7)) = [43]
	
.LABEL $label$117
	$7 = ($7 + [1])
	
.LABEL $label$116
	$14 = ($13 & [2])
	if ( $0 ){ goto $label$120 }
	if ( $14 ){ goto $label$120 }
	if ( ((uint_32)$7 >= (uint_32)$3) ){ goto $label$120 }
	$0 = ($3 - $7)
	
.LOOP $label$121:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [-1])
	if ( $0 ){ goto $label$121 }
	$12 = (($9 + ($3 - $7)) + $11)
	
.LABEL $label$120
	if ( ($7 == 0) ){ goto $label$122 }
	$0 = ($7 + [-1])
	$13 = $12
	
.LOOP $label$123:
	CALL void *(($5 + $0))((int_32 $1), (int_32 $13), (int_32 $2), (int_32 $6))
	$13 = ($13 + [1])
	$0 = ($0 + [-1])
	if ( ((int_32)$0 != (int_32)[-1]) ){ goto $label$123 }
	$12 = ($12 + $7)
	
.LABEL $label$122
	if ( ($14 == 0) ){ goto $label$31 }
	if ( ((uint_32)(($12 - $9) - $11) >= (uint_32)$3) ){ goto $label$32 }
	$0 = ($12 + $10)
	
.LOOP $label$124:
	CALL void [32]((int_32 $1), (int_32 $12), (int_32 $2), (int_32 $6))
	$12 = ($12 + [1])
	$0 = ($0 + [1])
	if ( ($0 <= $3) ){ goto $label$124 }
	$7 = (($3 + $9) + $11)
	
.LABEL $label$33
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$32
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$31
	$7 = $12
	$4 = ($16 + [8])
	$3 = ($8 + [1])
	goto $label$1 
	
.LABEL $label$30
	$7 = [0]
	if ( ($19 & [1024]) ){ goto $label$28 }
	
.LABEL $label$29
	$11 = int_32($15 >> [31])
	$11 = ((int_32)($15 + $11) ^ (int_32)$11)
	$9 = (((int_32)($19 & [32]) ^ (int_32)[97]) + [246])
	$7 = [0]
	
.LOOP $label$125:
	$13 = ((uint_32)$11 / (uint_32)$0)
	$10 = ($11 - ((int_32)$13 * (int_32)$0))
	*(($5 + $7)) = (( [48] ? $9 : ((int_32)($10 << [24]) < (int_32)[167772160]) ) + $10)
	$7 = ($7 + [1])
	if ( ((uint_32)$7 > (uint_32)[31]) ){ goto $label$28 }
	$10 = ((uint_32)$11 >= (uint_32)$0)
	$11 = $13
	if ( $10 ){ goto $label$125 }
	
.LABEL $label$28
	$4 = ($4 + [4])
	$7 = CALL $25($6, $1, $12, $2, $5, $7, uint_32($15 >> [31]), $0, $14, $3, $19)
	$3 = ($8 + [1])
	goto $label$1 
	$14
	[9]
	$0
	$7
	return $7
}

int_32 .FUNC $22 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_64 $4
	$3 = ($global$0 - [144])
	$global$0 = $3
	*($3 + [4]) = $0
	*($3 + [44]) = $0
	*($3) = [0]
	*($3 + [76]) = [-1]
	*($3 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL $19($3, (int_64)0)
	$4 = CALL $21($3, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + ((*($3 + [4]) + *($3 + [120])) - *(($3 + [8]))))
	
.LABEL $label$1
	$global$0 = ($3 + [144])
	return (CASTING uint_32)(uint_64 $4)
}

int_32 .FUNC $25 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7, int_32 $8, int_32 $9, int_32 $10)
{
	int_32 $11
	$11 = ($10 & [2])
	if ( $11 ){ goto $label$1 }
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$1 }
	
.LOOP $label$2:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$8) ){ goto $label$1 }
	if ( ($5 <= [32]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)($10 & [3]) != (int_32)[1]) ){ goto $label$3 }
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$3 }
	
.LOOP $label$4:
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$3 }
	if ( ($5 <= [32]) ){ goto $label$4 }
	
.LABEL $label$3
	if ( (($10 & [16]) == 0) ){ goto $label$5 }
	if ( ($10 & [1024]) ){ goto $label$11 }
	if ( ($5 == 0) ){ goto $label$11 }
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$10 }
	if ( ((int_32)$5 == (int_32)$9) ){ goto $label$10 }
	
.LABEL $label$11
	if ( ((int_32)$7 != (int_32)[16]) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	$5 = ($5 + [-1])
	$5 = ( ( ($5 + [-2]) ? $5 : $5 ) ? $5 : ((int_32)$7 == (int_32)[16]) )
	if ( ((int_32)$7 == (int_32)[16]) ){ goto $label$8 }
	
.LABEL $label$9
	if ( ((int_32)$7 != (int_32)[2]) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [98]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$8
	$8 = ($10 & [32])
	if ( $8 ){ goto $label$12 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$12 }
	*(($4 + $5)) = [120]
	$5 = ($5 + [1])
	if ( ((uint_32)$5 <= (uint_32)[31]) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$12
	if ( ($8 == 0) ){ goto $label$7 }
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$7 }
	*(($4 + $5)) = [88]
	$5 = ($5 + [1])
	
.LABEL $label$7
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$5 }
	
.LABEL $label$6
	*(($4 + $5)) = [48]
	$5 = ($5 + [1])
	
.LABEL $label$5
	if ( ($5 == 0) ){ goto $label$13 }
	if ( ((int_32)$5 != (int_32)$9) ){ goto $label$13 }
	$5 = ($9 - (((int_32)($10 & [12]) != (int_32)[0]) | $6))
	
.LABEL $label$13
	$8 = ($10 & [1])
	if ( ((uint_32)$5 > (uint_32)[31]) ){ goto $label$16 }
	if ( ($6 == 0) ){ goto $label$17 }
	*(($4 + $5)) = [45]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$17
	if ( ($10 & [4]) ){ goto $label$18 }
	if ( (($10 & [8]) == 0) ){ goto $label$16 }
	*(($4 + $5)) = [32]
	$5 = ($5 + [1])
	$6 = $2
	if ( ($8 == 0) ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$18
	*(($4 + $5)) = [43]
	$5 = ($5 + [1])
	
.LABEL $label$16
	$6 = $2
	if ( $8 ){ goto $label$14 }
	
.LABEL $label$15
	$6 = $2
	if ( $11 ){ goto $label$14 }
	$6 = $2
	if ( ((uint_32)$5 >= (uint_32)$9) ){ goto $label$14 }
	$10 = ($9 - $5)
	$6 = ($9 + $2)
	$8 = $2
	
.LOOP $label$19:
	CALL void [32]((int_32 $1), (int_32 $8), (int_32 $3), (int_32 $0))
	$8 = ($8 + [1])
	$10 = ($10 + [-1])
	if ( $10 ){ goto $label$19 }
	$6 = ($6 - $5)
	
.LABEL $label$14
	if ( ($5 == 0) ){ goto $label$20 }
	$8 = ($5 + [-1])
	$10 = $6
	
.LOOP $label$21:
	CALL void *(($4 + $8))((int_32 $1), (int_32 $10), (int_32 $3), (int_32 $0))
	$10 = ($10 + [1])
	$8 = ($8 + [-1])
	if ( ((int_32)$8 != (int_32)[-1]) ){ goto $label$21 }
	$6 = ($5 + $6)
	
.LABEL $label$20
	if ( ($11 == 0) ){ goto $label$22 }
	if ( ((uint_32)($6 - $2) >= (uint_32)$9) ){ goto $label$22 }
	$5 = ([0] - $2)
	
.LOOP $label$23:
	CALL void [32]((int_32 $1), (int_32 $6), (int_32 $3), (int_32 $0))
	$6 = ($6 + [1])
	if ( (($5 + $6) <= $9) ){ goto $label$23 }
	$6 = ($9 + $2)
	
.LABEL $label$22
	return $6
}

void .FUNC $24 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
}

void .FUNC $27 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	if ( ((uint_32)$2 >= (uint_32)$3) ){ goto $label$1 }
	*(($1 + $2)) = $0
	
.LABEL $label$1
}

int_32 .FUNC $26 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = ($global$0 - [16])
	$global$0 = $3
	*($3 + [12]) = $2
	$2 = CALL $23([2], $0, [-1], $1, $2)
	$global$0 = ($3 + [16])
	return $2
}

void .FUNC $101 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$4 = *($0)
	$3 = ($4 + [8])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$5 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$3 = ($4 + [16])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$5 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [24]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$3 = *($5)
	
.LABEL $label$4
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	$3 = ($4 + [32])
	$5 = *($0 + [4])
	$0 = *($1)
	if ( ((int_32)(*($0 + [8]) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$5 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, $3, [8])
	$3 = (*($5) + [8])
	*(($5 = ($0 + [4]))) = $3
	*($2 + [8]) = *(($4 + [40]))
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$3 = *($5)
	
.LABEL $label$6
	CALL memcpy($3, ($2 + [8]), [8])
	*($5) = (*($5) + [8])
	*($2 + [8]) = $4
	CALL $206(($2 + [8]), $1)
	$global$0 = ($2 + [16])
}

void .FUNC $100 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = *($0)
	$6 = ((int_32)(*($0 + [4]) - $5) / (int_32)[40])
	$7 = ($6 + [1])
	if ( ((uint_32)$7 >= (uint_32)[107374183]) ){ goto $label$2 }
	$8 = [107374182]
	$5 = ((int_32)(*($0 + [8]) - $5) / (int_32)[40])
	if ( ((uint_32)$5 > (uint_32)[53687090]) ){ goto $label$4 }
	$8 = ($5 << [1])
	$8 = ( $7 ? $8 : ($8 <= $7) )
	if ( ($8 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$5 = CALL $7(((int_32)$8 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$8 = [0]
	$5 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	*(($6 = ($5 + ((int_32)$6 * (int_32)[40])))) = *($2)
	*($6 + [8]) = *($3)
	*($6 + [16 align=4]) = (int_64)0
	*(($3 = ($6 + [24]))) = [0]
	$2 = CALL $7([16])
	*($6 + [16]) = $2
	$7 = ($2 + [16])
	*($3) = $7
	*($2) = *($1)
	*(($2 + [8])) = *(($1 + [8]))
	*(($6 + [20])) = $7
	CALL $205(($6 + [28]), $4)
	$9 = ($5 + ((int_32)$8 * (int_32)[40]))
	$10 = ($6 + [40])
	$2 = *($0)
	$7 = *(($0 + [4]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$6 }
	$11 = ($2 - $7)
	$1 = [0]
	
.LOOP $label$7:
	$8 = ($7 + $1)
	*((($2 = ($6 + $1)) + [-32])) = *(($8 + [-32]))
	*(($2 + [-40])) = *(($8 + [-40]))
	*(($5 = ($2 + [-24]))) = (int_64)0
	*(($3 = ($2 + [-16]))) = [0]
	$4 = ($8 + [-24])
	*($5) = *($4)
	$5 = ($8 + [-16])
	*($3) = *($5)
	*($5) = [0]
	*(($5 = ($2 + [-12]))) = (int_64)0
	*(($2 = ($2 + [-4]))) = [0]
	$3 = ($8 + [-12])
	*($5) = *($3)
	*($4) = (int_64)0
	$8 = ($8 + [-4])
	*($2) = *($8)
	*($8) = [0]
	*($3) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$7 }
	$6 = ($6 + $1)
	$2 = *(($0 + [4]))
	$5 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$5 = $2
	
.LABEL $label$5
	*($0) = $6
	*(($0 + [4])) = $10
	*(($0 + [8])) = $9
	if ( ((int_32)$2 == (int_32)$5) ){ goto $label$8 }
	
.LOOP $label$9:
	$8 = *(($2 + [-12]))
	if ( ($8 == 0) ){ goto $label$10 }
	*(($2 + [-8])) = $8
	CALL $9($8)
	
.LABEL $label$10
	$8 = ($2 + [-40])
	$1 = *(($2 + [-24]))
	if ( ($1 == 0) ){ goto $label$11 }
	*(($2 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$11
	$2 = $8
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($5 == 0) ){ goto $label$12 }
	CALL $9($5)
	
.LABEL $label$12
	(unreachable)
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $181(CALL $180($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $2) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($2, $1, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((int_32)(*(($0 + [8])) - $3) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($3, $4, [8])
	return *($2) = (*($2) + [8])
}

void .FUNC $102 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = ($global$0 - [32])
	$global$0 = $4
	$5 = [0]
	*($4 + [8]) = [0]
	*($4) = (int_64)0
	*($4 + [16]) = [0]
	CALL $105(($4 + [16]), $0)
	$6 = *($4 + [16])
	if ( ($6 == 0) ){ goto $label$2 }
	CALL $88($4, $6)
	$5 = *($4 + [4])
	$6 = *($4)
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	*($4 + [20]) = $6
	*($4 + [16]) = $6
	*($4 + [24]) = $5
	CALL $106(($4 + [16]), $0)
	$0 = *($4)
	CALL send_deferred($1, $2, $0, (*($4 + [4]) - $0), $3)
	$0 = *($4)
	if ( ($0 == 0) ){ goto $label$3 }
	*($4 + [4]) = $0
	CALL $9($0)
	
.LABEL $label$3
	$global$0 = ($4 + [32])
}

int_32 .FUNC $105 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = *($0)
	*($0) = ($2 + [10])
	$2 = ($2 + [11])
	$3 = *($1 + [12])
	
.LOOP $label$1:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$1 }
	*($0) = $2
	$3 = *($1 + [20])
	
.LOOP $label$2:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$2 }
	*($0) = $2
	$5 = *($1 + [24])
	$4 = *(($1 + [28]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$3:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$3 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$4 }
	
.LOOP $label$5:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$6:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$7 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$7
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$8:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$8 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$5 }
	*($0) = $2
	
.LABEL $label$4
	$5 = *($1 + [36])
	$4 = *(($1 + [40]))
	$3 = (CASTING uint_64)(uint_32 ((int_32)($4 - $5) / (int_32)[40]))
	
.LOOP $label$9:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$9 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	
.LOOP $label$11:
	$2 = ($2 + [16])
	$7 = *($5 + [16])
	$6 = *(($5 + [20]))
	$8 = ($6 - $7)
	$3 = (CASTING uint_64)(uint_32 int_32($8 >> [4]))
	
.LOOP $label$12:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$13 }
	$2 = (($8 & [-16]) + $2)
	
.LABEL $label$13
	$7 = *($5 + [28])
	$6 = *(($5 + [32]))
	$2 = (($2 + $6) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$14:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$14 }
	$5 = ($5 + [40])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$11 }
	*($0) = $2
	
.LABEL $label$10
	$5 = *($1 + [48])
	$8 = *(($1 + [52]))
	$3 = (CASTING uint_64)(uint_32 int_32(($8 - $5) >> [4]))
	
.LOOP $label$15:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$15 }
	*($0) = $2
	if ( ((int_32)$5 == (int_32)$8) ){ goto $label$16 }
	
.LOOP $label$17:
	$7 = *($5 + [4])
	$6 = *(($5 + [8]))
	$2 = ((($2 + $6) + [2]) - $7)
	$3 = (CASTING uint_64)(uint_32 ($6 - $7))
	
.LOOP $label$18:
	$2 = ($2 + [1])
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	if ( ((int_64)$3) != (int_64)0) ){ goto $label$18 }
	$5 = ($5 + [16])
	if ( ((int_32)$5 != (int_32)$8) ){ goto $label$17 }
	*($0) = $2
	
.LABEL $label$16
	return $0
}

void .FUNC $104 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	$4 = ($global$0 - [16])
	$5 = $4
	$global$0 = $4
	if ( ((int_32)*($1 + [120]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	$6 = *($1 + [8])
	$3 = *($3)
	if ( ((int_64)*($3 + [8]) == (int_64)*(($1 + [96]))) ){ goto $label$3 }
	CALL eosio_assert([0], [10146])
	
.LABEL $label$3
	$7 = (int_64)
	*($1 + [88]) = $7(*($1 + [88]) - *($3)))
	if ( ((int_64)$7 > (int_64)-4611686018427387904) ){ goto $label$4 }
	CALL eosio_assert([0], [10194])
	$7 = *(($1 + [88]))
	
.LABEL $label$4
	$6 = (uint_64)$6 >> (uint_64)(int_64)8)
	if ( ((int_64)$7 < (int_64)4611686018427387904) ){ goto $label$5 }
	CALL eosio_assert([0], [10216])
	
.LABEL $label$5
	if ( ((int_64)$6 == (int_64)(uint_64)*(($1 + [8])) >> (uint_64)(int_64)8)) ){ goto $label$6 }
	CALL eosio_assert([0], [10369])
	
.LABEL $label$6
	$3 = $4
	$4 = ($3 + [-128])
	$global$0 = $4
	*($5 + [4]) = $4
	*($5) = $4
	*($5 + [8]) = ($3 + [-8])
	CALL $179($5, $1)
	CALL db_update_i64(*($1 + [124]), $2, $4, [120])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$7 }
	*(($0 + [16])) = ((int_64)$6 + (int_64)1)
	
.LABEL $label$7
	$global$0 = ($5 + [16])
}

void .FUNC $107 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_64 $7, int_64 $8)
{
	CALL require_auth(*($0))
	CALL require_recipient($2)
}

int_32 .FUNC $106 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	CALL $182($0, $1)
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [28])) - *($1 + [24])) / (int_32)[40]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [14]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *($6)
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [14]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$1 }
	$7 = *(($1 + [28]))
	$6 = *(($1 + [24]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$3 }
	
.LOOP $label$4:
	CALL $103($0, $6)
	$6 = ($6 + [40])
	if ( ((int_32)$7 != (int_32)$6) ){ goto $label$4 }
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	$3 = (CASTING uint_64)(uint_32 ((int_32)(*(($1 + [40])) - *($1 + [36])) / (int_32)[40]))
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$5:
	$7 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$8 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($6) + [1])
	*($6) = $4
	if ( $8 ){ goto $label$5 }
	$6 = *(($1 + [40]))
	$4 = *(($1 + [36]))
	if ( ((int_32)$4 == (int_32)$6) ){ goto $label$7 }
	
.LOOP $label$8:
	CALL $103($0, $4)
	$4 = ($4 + [40])
	if ( ((int_32)$6 != (int_32)$4) ){ goto $label$8 }
	
.LABEL $label$7
	$4 = CALL $183($0, ($1 + [48]))
	$global$0 = ($2 + [16])
	return $4
}

void .FUNC $109 (int_32 $0, int_64 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$4 = ($global$0 - [96])
	$global$0 = $4
	*($4 + [40]) = $3
	*($4 + [48]) = $1
	CALL require_auth($1)
	CALL eosio_assert(((int_64)$3 != (int_64)-4155580622883343856), [9203])
	$5 = ($0 + [32])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	
.LOOP $label$4:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)112) ){ goto $label$3 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$2 }
	if ( ((int_32)*($9 + [16]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$9 = CALL $53($5, CALL $fimport$26(*($5), *(($0 + [40])), (int_64)7235159550150574080, (int_64)112))
	if ( ((int_32)*($9 + [16]) == (int_32)$5) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	CALL eosio_assert(((int_64)*($9 + [8]) == (int_64)1), [9222])
	$10 = *($2)
	CALL eosio_assert(((int_64)$10 > (int_64)9999), [9240])
	$8 = CALL $15([9120])
	if ( ($8 <= [8]) ){ goto $label$8 }
	CALL eosio_assert([0], [9729])
	goto $label$7 
	
.LABEL $label$8
	if ( ($8 == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$11 = (int_64)0
	
.LOOP $label$9:
	$7 = *(($8 + [9119]))
	if ( ((($7 + [-65]) & [255]) <= [26]) ){ goto $label$10 }
	CALL eosio_assert([0], [9774])
	
.LABEL $label$10
	$11 = ((int_64)((int_64)$11 << (int_64)8) | (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56))
	$8 = ($8 + [-1])
	if ( $8 ){ goto $label$9 }
	$11 = ((int_64)$11 << (int_64)8)
	goto $label$5 
	
.LABEL $label$6
	$11 = (int_64)0
	
.LABEL $label$5
	CALL eosio_assert(((int_64)*($2 + [8]) == (int_64)((int_64)$11 | (int_64)4)), [9301])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$12 }
	
.LOOP $label$14:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)111) ){ goto $label$13 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$14 }
	goto $label$12 
	
.LABEL $label$13
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$12 }
	if ( ((int_32)*($9 + [16]) == (int_32)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [10072])
	goto $label$11 
	
.LABEL $label$12
	$9 = CALL $53($5, CALL $fimport$26(*(($0 + [32])), *(($0 + [40])), (int_64)7235159550150574080, (int_64)111))
	if ( ((int_32)*($9 + [16]) == (int_32)$5) ){ goto $label$11 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$11
	$12 = ($0 + [232])
	$11 = *($9 + [8])
	$7 = *(($0 + [260]))
	$6 = *(($0 + [256]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$16 }
	
.LOOP $label$18:
	$8 = ($7 + [-24])
	$9 = *($8)
	if ( ((int_64)*($9) == (int_64)$11) ){ goto $label$17 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$18 }
	goto $label$16 
	
.LABEL $label$17
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$16 }
	if ( ((int_32)*($9 + [64]) == (int_32)$12) ){ goto $label$15 }
	CALL eosio_assert([0], [10072])
	goto $label$15 
	
.LABEL $label$16
	$9 = [0]
	$8 = CALL db_find_i64(*($12), *(($0 + [240])), (int_64)-4812882490098188288, $11)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$15 }
	$9 = CALL $63($12, $8)
	if ( ((int_32)*($9 + [64]) == (int_32)$12) ){ goto $label$15 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$15
	$13 = [0]
	CALL eosio_assert(((int_32)$9 != (int_32)[0]), [8650])
	CALL eosio_assert((uint_64)(CALL $fimport$24() <= *($9 + [40])), [9327])
	$14 = ($0 + [112])
	$7 = *(($0 + [140]))
	$6 = *(($0 + [136]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$20 }
	
.LOOP $label$22:
	$8 = ($7 + [-24])
	$2 = *($8)
	if ( ((int_64)*($2) == (int_64)$3) ){ goto $label$21 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$22 }
	goto $label$20 
	
.LABEL $label$21
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$20 }
	if ( ((int_32)*($2 + [88]) == (int_32)$14) ){ goto $label$23 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$23
	$13 = $2
	goto $label$19 
	
.LABEL $label$20
	$8 = CALL db_find_i64(*($14), *(($0 + [120])), (int_64)-6030912129794572288, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$19 }
	$13 = CALL $79($14, $8)
	if ( ((int_32)*($13 + [88]) == (int_32)$14) ){ goto $label$19 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$19
	CALL eosio_assert(((int_32)$13 != (int_32)[0]), [9344])
	CALL eosio_assert(((uint_64)*($13 + [48]) > (uint_64)*($9 + [32])), [9372])
	$7 = *(($0 + [60]))
	$6 = *(($0 + [56]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$25 }
	
.LOOP $label$27:
	$8 = ($7 + [-24])
	$2 = *($8)
	if ( ((int_64)*($2) == (int_64)113) ){ goto $label$26 }
	$7 = $8
	if ( ((int_32)$6 != (int_32)$8) ){ goto $label$27 }
	goto $label$25 
	
.LABEL $label$26
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$25 }
	if ( ((int_32)*($2 + [16]) == (int_32)$5) ){ goto $label$24 }
	CALL eosio_assert([0], [10072])
	goto $label$24 
	
.LABEL $label$25
	$8 = CALL db_find_i64(*(($0 + [32])), *(($0 + [40])), (int_64)7235159550150574080, (int_64)113)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$24 }
	if ( ((int_32)*(CALL $53($5, $8) + [16]) == (int_32)$5) ){ goto $label$24 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$24
	$11 = ((int_64)$10 / (int_64)10000)
	*($4 + [32]) = $11
	if ( (uint_64)(((int_64)$10 + (int_64)9999) <= (int_64)19999) ){ goto $label$28 }
	$5 = ($0 + [192])
	$7 = *(($0 + [220]))
	$2 = *(($0 + [216]))
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$30 }
	
.LOOP $label$32:
	$8 = ($7 + [-24])
	$6 = *($8)
	if ( ((int_64)*($6) == (int_64)$3) ){ goto $label$31 }
	$7 = $8
	if ( ((int_32)$2 != (int_32)$8) ){ goto $label$32 }
	goto $label$30 
	
.LABEL $label$31
	if ( ((int_32)$2 == (int_32)$7) ){ goto $label$30 }
	if ( ((int_32)*($6 + [28]) == (int_32)$5) ){ goto $label$29 }
	CALL eosio_assert([0], [10072])
	goto $label$29 
	
.LABEL $label$30
	$6 = [0]
	$8 = CALL db_find_i64(*($5), *(($0 + [200])), (int_64)-3851373727820283904, $3)
	if ( ((int_32)$8 < (int_32)[0]) ){ goto $label$29 }
	$6 = CALL $110($5, $8)
	if ( ((int_32)*($6 + [28]) == (int_32)$5) ){ goto $label$29 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$29
	CALL eosio_assert(((*(($6 + [24])) + [1]) <= [100]), [9425])
	if ( ($6 == 0) ){ goto $label$34 }
	$11 = *($0)
	*($4 + [68]) = ($4 + [48])
	*($4 + [64]) = ($4 + [32])
	CALL $111($5, $6, $11, ($4 + [64]))
	goto $label$33 
	
.LABEL $label$34
	*($4 + [20 align=4]) = (int_64)0
	$7 = (($4 + [16]) | [4])
	*($4 + [16]) = $7
	if ( [0] ){ goto $label$35 }
	*(($8 = CALL $7([32]))) = (int_64)0
	*($8 + [24]) = $11
	*($8 + [16]) = $1
	*($8 + [8]) = $7
	*($4 + [20]) = $8
	$7 = *(*($4 + [16]))
	if ( ($7 == 0) ){ goto $label$36 }
	*($4 + [16]) = $7
	
.LABEL $label$36
	CALL $112(*($4 + [20]), $8)
	*(($8 = ($4 + [24]))) = (*($8) + [1])
	
.LABEL $label$35
	$11 = *($0)
	*($4 + [4]) = ($4 + [32])
	*($4) = ($4 + [40])
	*($4 + [8]) = ($4 + [16])
	*($4 + [88]) = $11
	if ( ((int_64)*(($0 + [192])) == (int_64)CALL current_receiver()) ){ goto $label$37 }
	CALL eosio_assert([0], [10762])
	
.LABEL $label$37
	*($4 + [64]) = $5
	*($4 + [68]) = $4
	*($4 + [72]) = ($4 + [88])
	*(($8 = CALL $7([40]))) = (int_64)0
	*($8 + [20 align=4]) = (int_64)0
	*($8 + [28]) = $5
	*($8 + [16]) = ($8 + [20])
	CALL $113(($4 + [64]), $8)
	*($4 + [80]) = $8
	$11 = *($8)
	*($4 + [64]) = $11
	$6 = *($8 + [32])
	*($4 + [60]) = $6
	$2 = ($0 + [220])
	$7 = *($2)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [224]))) ){ goto $label$40 }
	*($7 + [8]) = $11
	*($7 + [16]) = $6
	*($4 + [80]) = [0]
	*($7) = $8
	*($2) = ($7 + [24])
	$8 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( $8 ){ goto $label$39 }
	goto $label$38 
	
.LABEL $label$40
	CALL $114(($0 + [216]), ($4 + [80]), ($4 + [64]), ($4 + [60]))
	$8 = *($4 + [80])
	*($4 + [80]) = [0]
	if ( ($8 == 0) ){ goto $label$38 }
	
.LABEL $label$39
	CALL $49(($8 + [16]), *(($8 + [20])))
	CALL $9($8)
	
.LABEL $label$38
	CALL $49(($4 + [16]), *($4 + [20]))
	
.LABEL $label$33
	$11 = *($0)
	*($4 + [64]) = ($4 + [32])
	if ( $9 ){ goto $label$41 }
	CALL eosio_assert([0], [10237])
	
.LABEL $label$41
	CALL $115($12, $9, $11, ($4 + [64]))
	
.LABEL $label$28
	$global$0 = ($4 + [96])
}

void .FUNC $108 (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	$2 = ($global$0 - [240])
	$global$0 = $2
	CALL require_auth(*($0))
	$3 = ($0 + [152])
	$5 = *(($0 + [180]))
	$4 = *(($0 + [176]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	
.LOOP $label$4:
	$6 = ($5 + [-24])
	$7 = *($6)
	if ( ((int_64)*($7) == (int_64)$1) ){ goto $label$3 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$2 }
	if ( ((int_32)*($7 + [72]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	$6 = CALL db_find_i64(*($3), *(($0 + [160])), (int_64)4229865212519383040, $1)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$1 }
	$7 = CALL $86($3, $6)
	if ( ((int_32)*($7 + [72]) == (int_32)$3) ){ goto $label$1 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$1
	$8 = [0]
	CALL eosio_assert(((int_32)$7 != (int_32)[0]), [9126])
	$9 = ($7 + [24])
	$10 = ($0 + [72])
	$11 = (uint_64)*(($7 + [32])) >> (uint_64)(int_64)8)
	$5 = *(($0 + [100]))
	$4 = *(($0 + [96]))
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	
.LOOP $label$8:
	$6 = ($5 + [-24])
	$12 = *($6)
	if ( ((int_64)(uint_64)*($12 + [8]) >> (uint_64)(int_64)8) == (int_64)$11) ){ goto $label$7 }
	$5 = $6
	if ( ((int_32)$4 != (int_32)$6) ){ goto $label$8 }
	goto $label$6 
	
.LABEL $label$7
	if ( ((int_32)$4 == (int_32)$5) ){ goto $label$6 }
	if ( ((int_32)*($12 + [120]) == (int_32)$10) ){ goto $label$9 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$9
	$8 = $12
	goto $label$5 
	
.LABEL $label$6
	$6 = CALL db_find_i64(*($10), *(($0 + [80])), (int_64)-3617352132944662528, $11)
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$5 }
	$8 = CALL $56($10, $6)
	if ( ((int_32)*($8 + [120]) == (int_32)$10) ){ goto $label$5 }
	CALL eosio_assert([0], [10072])
	
.LABEL $label$5
	CALL eosio_assert(((int_32)$8 != (int_32)[0]), [9076])
	CALL $93($0, $9)
	*($2) = $1
	CALL $26(($2 + [48]), [9150], $2)
	$1 = *($0)
	$11 = *($8 + [16])
	*(($2 + [24])) = [0]
	*($2 + [16]) = (int_64)0
	$6 = CALL $15(($2 + [48]))
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$10 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$13 }
	*($2 + [16]) = ($6 << [1])
	$5 = (($2 + [16]) | [1])
	if ( $6 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$13
	$4 = (($6 + [16]) & [-16])
	$5 = CALL $7($4)
	*($2 + [16]) = ($4 | [1])
	*($2 + [24]) = $5
	*($2 + [20]) = $6
	
.LABEL $label$12
	CALL memcpy($5, ($2 + [48]), $6)
	
.LABEL $label$11
	*(($5 + $6)) = [0]
	$13 = *($7 + [8])
	*(($5 = (($2 + [32]) + [8]))) = *(($9 + [8]))
	*($2 + [32]) = *($9)
	$4 = *($2 + [24])
	*($2 + [24]) = [0]
	$14 = *($2 + [16])
	*($2 + [16]) = (int_64)0
	$15 = *($0)
	*(($6 = CALL $7([16]))) = $1
	*($6 + [8]) = (int_64)3617214756542218240
	*(($0 = ($2 + [216]))) = $4
	*(($2 + [200])) = *($5)
	*($2 + [224]) = $6
	*($2 + [176]) = $15
	*($2 + [184]) = $13
	*($2 + [208]) = $14
	$6 = ($6 + [16])
	*($2 + [232]) = $6
	*($2 + [228]) = $6
	*($2 + [192]) = *($2 + [32])
	CALL $64($11, (int_64)-3617168760277827584, ($2 + [224]), ($2 + [176]))
	if ( ((*($2 + [208]) & [1]) == 0) ){ goto $label$14 }
	CALL $9(*($0))
	
.LABEL $label$14
	$6 = *($2 + [224])
	if ( ($6 == 0) ){ goto $label$15 }
	*($2 + [228]) = $6
	CALL $9($6)
	
.LABEL $label$15
	if ( ((*($2 + [16]) & [1]) == 0) ){ goto $label$16 }
	CALL $9(*(($2 + [24])))
	
.LABEL $label$16
	if ( $7 ){ goto $label$17 }
	CALL eosio_assert([0], [10813])
	CALL eosio_assert([0], [10723])
	
.LABEL $label$17
	$6 = CALL db_next_i64(*($7 + [76]), ($2 + [176]))
	if ( ((int_32)$6 < (int_32)[0]) ){ goto $label$18 }
	CALL $86($3, $6)
	
.LABEL $label$18
	CALL $98($3, $7)
	$global$0 = ($2 + [240])
	return (unreachable)
	
.LABEL $label$10
	CALL $29(($2 + [16]))
}

void .FUNC $212 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = *($0)
	$3 = ($0 + [8])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [16])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = ($0 + [24])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *(($0 + [32]))
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$5
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$0 = ($0 + [40])
	$4 = *($1 + [4])
	$1 = *($1)
	if ( ((int_32)(*($1 + [8]) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$4 = *(($1 + [4]))
	
.LABEL $label$6
	CALL memcpy($4, $0, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $38 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $41($1, $0, [8667])
	CALL $42()
	(unreachable)
}

void .FUNC $39 (int_32 $0)
{
	int_32 $1
	$1 = ($global$0 - [16])
	$global$0 = $1
	CALL $41($1, $0, [8634])
	CALL $43()
	(unreachable)
}

int_32 .FUNC $36 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$5 }
	$5 = uint_32($5 >> [1])
	if ( ((int_32)$4 != (int_32)[-1]) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	
.LABEL $label$4
	if ( ($5 <= $1) ){ goto $label$3 }
	$5 = ($5 - $1)
	$2 = ( $5 ? $2 : ($5 <= $2) )
	if ( $6 ){ goto $label$6 }
	$0 = ($0 + [1])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( ($5 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$6
	$0 = *($0 + [8])
	$6 = ((uint_32)$2 > (uint_32)$4)
	$5 = ( $4 ? $2 : $6 )
	if ( $5 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$1 = CALL $16(($0 + $1), $3, $5)
	if ( ($1 == 0) ){ goto $label$1 }
	return $1
	
.LABEL $label$1
	(unreachable)
	return ( [-1] ? $6 : ($2 <= $4) )
}

int_32 .FUNC $37 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = ($global$0 - [16])
	$global$0 = $3
	*(($3 + [8])) = [0]
	*($3) = (int_64)0
	$4 = CALL $15([8624])
	if ( ((uint_32)$4 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$4 >= (uint_32)[11]) ){ goto $label$6 }
	*($3) = ($4 << [1])
	$5 = ($3 | [1])
	if ( $4 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$6 = (($4 + [16]) & [-16])
	$5 = CALL $7($6)
	*($3) = ($6 | [1])
	*($3 + [8]) = $5
	*($3 + [4]) = $4
	
.LABEL $label$5
	CALL memcpy($5, [8624], $4)
	
.LABEL $label$4
	*(($5 + $4)) = [0]
	*($3 + [12]) = [0]
	$4 = *($0 + [8])
	$5 = *($0)
	$6 = *(CALL $4())
	*(CALL $4()) = [0]
	$4 = ( $4 ? ($0 + [1]) : ($5 & [1]) )
	$0 = CALL $22($4, ($3 + [12]), $2)
	$5 = CALL $4()
	$2 = *($5)
	*($5) = $6
	if ( ((int_32)$2 == (int_32)[34]) ){ goto $label$2 }
	$5 = *($3 + [12])
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($5 - $4)
	
.LABEL $label$7
	if ( ((*($3) & [1]) == 0) ){ goto $label$8 }
	CALL $9(*($3 + [8]))
	
.LABEL $label$8
	$global$0 = ($3 + [16])
	return $0
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $38($3)
	
.LABEL $label$1
	CALL $39($3)
	(unreachable)
	(unreachable)
	return (unreachable)
}

void .FUNC $34 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$3 = *($0)
	$4 = ($3 & [1])
	if ( $4 ){ goto $label$5 }
	$5 = uint_32($3 >> [1])
	if ( ($5 <= $1) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$5 = *($0 + [4])
	if ( ((uint_32)$5 >= (uint_32)$1) ){ goto $label$3 }
	
.LABEL $label$4
	$1 = ($1 - $5)
	if ( ($1 == 0) ){ goto $label$2 }
	if ( $4 ){ goto $label$8 }
	$5 = [10]
	$4 = uint_32($3 >> [1])
	if ( (([10] - $4) <= $1) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$4 = *($0 + [4])
	$3 = *($0)
	$5 = (($3 & [-2]) + [-1])
	if ( ((uint_32)($5 - $4) >= (uint_32)$1) ){ goto $label$6 }
	
.LABEL $label$7
	CALL $35($0, $5, (($4 + $1) - $5), $4, $4, [0], [0])
	$3 = *($0)
	
.LABEL $label$6
	if ( ($3 & [1]) ){ goto $label$10 }
	$3 = ($0 + [1])
	goto $label$9 
	
.LABEL $label$10
	$3 = *($0 + [8])
	
.LABEL $label$9
	CALL memset(($3 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$11 }
	*($0) = ($1 << [1])
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$11
	*($0 + [4]) = $1
	*(($3 + $1)) = [0]
	return 
	
.LABEL $label$3
	if ( $4 ){ goto $label$1 }
	*((($0 + $1) + [1])) = [0]
	*($0) = ($1 << [1])
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*((*($0 + [8]) + $1)) = [0]
	*($0 + [4]) = $1
}

void .FUNC $35 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$7 = ($0 + [1])
	$8 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = *($0 + [8])
	$8 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$8 = [11]
	$2 = ($2 + $1)
	$9 = ($1 << [1])
	$2 = ( $9 ? $2 : ($2 <= $9) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$8 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($8)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $7, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($7 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $9($7)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($8 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $32 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$4 }
	$8 = ($0 + [1])
	$9 = [-17]
	if ( ((uint_32)$1 <= (uint_32)[2147483622]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$8 = *($0 + [8])
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$2 }
	
.LABEL $label$3
	$9 = [11]
	$2 = ($2 + $1)
	$10 = ($1 << [1])
	$2 = ( $10 ? $2 : ($2 <= $10) )
	if ( ($2 <= [11]) ){ goto $label$2 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$2
	$2 = CALL $7($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $9($8)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$6 }
	$3 = uint_32($2 >> [1])
	$4 = [10]
	goto $label$5 
	
.LABEL $label$6
	$2 = *($0)
	$4 = (($2 & [-2]) + [-1])
	$3 = *($0 + [4])
	
.LABEL $label$5
	$5 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$7 }
	$5 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$7
	if ( ((int_32)$5 == (int_32)$4) ){ goto $label$10 }
	if ( ((int_32)$5 != (int_32)[10]) ){ goto $label$11 }
	$6 = [1]
	$1 = ($0 + [1])
	$4 = *($0 + [8])
	$7 = [0]
	$8 = [1]
	if ( ($2 & [1]) ){ goto $label$8 }
	goto $label$3 
	
.LABEL $label$11
	$1 = CALL $7(($5 + [1]))
	if ( ((uint_32)$5 > (uint_32)$4) ){ goto $label$9 }
	if ( $1 ){ goto $label$9 }
	
.LABEL $label$10
	return (unreachable)
	
.LABEL $label$9
	$2 = *($0)
	if ( ($2 & [1]) ){ goto $label$12 }
	$7 = [1]
	$4 = ($0 + [1])
	$6 = [0]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	goto $label$8 
	
.LABEL $label$12
	$4 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	$8 = [1]
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	
.LABEL $label$8
	$2 = (*($0 + [4]) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	goto $label$2 
	
.LABEL $label$4
	CALL abort()
	
.LABEL $label$3
	$2 = (uint_32(($2 & [254]) >> $8) + [1])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memcpy($1, $4, $2)
	
.LABEL $label$1
	if ( ($6 == 0) ){ goto $label$13 }
	CALL $9($4)
	
.LABEL $label$13
	if ( ($7 == 0) ){ goto $label$14 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($5 + [1]) | [1])
	return 
	
.LABEL $label$14
	*($0) = ($3 << [1])
}

int_32 .FUNC $30 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($2 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($2) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$2 = *($1 + [4])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	$3 = *($1 + [8])
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($2 << [1])
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$3 }
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$4
	$4 = (($2 + [16]) & [-16])
	$1 = CALL $7($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($1, $3, $2)
	*(($1 + $2)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $31 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((int_32)$0 == (int_32)$1) ){ goto $label$4 }
	$3 = ($2 & [1])
	$2 = *($1)
	$2 = ( *($1 + [4]) ? uint_32($2 >> [1]) : $3 )
	$4 = ($1 + [1])
	$5 = *($1 + [8])
	$1 = [10]
	$6 = *($0)
	$7 = ($6 & [1])
	if ( ($7 == 0) ){ goto $label$5 }
	$1 = ((*($0) & [-2]) + [-1])
	
.LABEL $label$5
	$3 = ( $5 ? $4 : $3 )
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$8 }
	if ( $7 ){ goto $label$7 }
	$4 = uint_32($6 >> [1])
	goto $label$6 
	
.LABEL $label$8
	if ( $7 ){ goto $label$3 }
	$1 = ($0 + [1])
	if ( $2 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$7
	$4 = *($0 + [4])
	
.LABEL $label$6
	CALL $32($0, $1, ($2 - $1), $4, [0], $4, $2, $3)
	
.LABEL $label$4
	return $0
	
.LABEL $label$3
	$1 = *($0 + [8])
	if ( ($2 == 0) ){ goto $label$1 }
	
.LABEL $label$2
	CALL memmove($1, $3, $2)
	
.LABEL $label$1
	*(($1 + $2)) = [0]
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	return $0
	
.LABEL $label$9
	*($0 + [4]) = $2
	return $0
}

void .FUNC $215 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($3, $5, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = (int_64)0
	if ( ((uint_32)(*(($4 + [8])) - $5) > (uint_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10757])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy(($2 + [8]), $5, [8])
	*($3 + [8]) = *($2 + [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((uint_32)(*($4 + [8]) - $0) > (uint_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10757])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($5, $0, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $214 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [5]) >= (uint_32)$1) ){ goto $label$6 }
	$4 = *($0)
	$5 = int_32(($3 - $4) >> [5])
	$6 = ($5 + $1)
	if ( ((uint_32)$6 >= (uint_32)[134217728]) ){ goto $label$4 }
	$3 = [134217727]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [5]) > (uint_32)[67108862]) ){ goto $label$7 }
	$3 = int_32($2 >> [4])
	$3 = ( $6 ? $3 : ($3 <= $6) )
	if ( ($3 == 0) ){ goto $label$5 }
	if ( ((uint_32)$3 >= (uint_32)[134217728]) ){ goto $label$3 }
	
.LABEL $label$7
	$2 = CALL $7(($3 << [5]))
	goto $label$2 
	
.LABEL $label$6
	$0 = ($0 + [4])
	
.LOOP $label$8:
	*($3 + [24]) = (int_64)0
	*($3) = (int_64)0
	*($3 + [8]) = (int_64)0
	*(($3 + [16])) = (int_64)0
	$3 = (*($0) + [32])
	*($0) = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	goto $label$1 
	
.LABEL $label$5
	$3 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$4
	CALL $44($0)
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	$4 = ($2 + ($3 << [5]))
	$5 = ($2 + ($5 << [5]))
	$3 = ($5 + [16])
	
.LOOP $label$9:
	*($3) = (int_64)0
	*(($3 + [-16])) = (int_64)0
	*(($3 + [8])) = (int_64)0
	*(($3 + [-8])) = (int_64)0
	$3 = ($3 + [32])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$9 }
	$6 = ($2 + ($6 << [5]))
	$3 = *($0)
	$7 = ($0 + [4])
	$1 = (*($7) - $3)
	$2 = ($5 - $1)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$10 }
	CALL memcpy($2, $3, $1)
	$3 = *($0)
	
.LABEL $label$10
	*($0) = $2
	*($7) = $6
	*(($0 + [8])) = $4
	if ( ($3 == 0) ){ goto $label$1 }
	CALL $9($3)
	return 
	
.LABEL $label$1
	(unreachable)
	(unreachable)
}

void .FUNC $217 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $160(*($1), (*($0) + [48]))
	$2 = *($0)
	CALL $160(*($1), ($2 + [60]))
	$3 = ($2 + [72])
	$4 = *($0 + [4])
	$0 = *($1)
	if ( ((uint_32)(*($0 + [8]) - $4) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$4 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $4, [8])
	*(($0 = ($0 + [4]))) = (*($0) + [8])
	$2 = ($2 + [80])
	$0 = *($1 + [4])
	$1 = *($1)
	if ( ((uint_32)(*($1 + [8]) - $0) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$0 = *(($1 + [4]))
	
.LABEL $label$2
	CALL memcpy($2, $0, [8])
	*(($1 = ($1 + [4]))) = (*($1) + [8])
}

void .FUNC $216 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = $1
	$3 = *($1)
	if ( ($3 == 0) ){ goto $label$4 }
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$3 }
	
.LOOP $label$5:
	$2 = $4
	$4 = *($2)
	if ( $4 ){ goto $label$5 }
	
.LABEL $label$4
	$3 = *($2 + [4])
	if ( $3 ){ goto $label$2 }
	$5 = ($2 + [8])
	$6 = [0]
	$3 = [0]
	goto $label$1 
	
.LABEL $label$3
	$2 = $1
	
.LABEL $label$2
	*($3 + [8]) = *($2 + [8])
	$5 = ($2 + [8])
	$6 = [1]
	
.LABEL $label$1
	$7 = *(($2 + [8]))
	$4 = *($7)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	*($7 + [4]) = $3
	$7 = *($2 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$10
	*($7) = $3
	if ( ((int_32)$2 == (int_32)$0) ){ goto $label$11 }
	$4 = *($7 + [4])
	$7 = *($2 + [12])
	if ( ((int_32)$2 != (int_32)$1) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$4 = [0]
	$0 = $3
	$7 = *($2 + [12])
	if ( ((int_32)$2 == (int_32)$1) ){ goto $label$8 }
	
.LABEL $label$9
	$8 = *($1 + [8])
	*($5) = $8
	*(($8 + ( [0] ? [4] : ((int_32)*(*($1 + [8])) == (int_32)$1) ))) = $2
	*(($5 = *($1)) + [8]) = $2
	*($2) = $5
	$5 = *($1 + [4])
	*($2 + [4]) = $5
	if ( ($5 == 0) ){ goto $label$12 }
	*($5 + [8]) = $2
	
.LABEL $label$12
	*(($2 + [12])) = *($1 + [12])
	$0 = ( $2 ? $0 : ((int_32)$0 == (int_32)$1) )
	if ( ($7 & [255]) ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	if ( (($7 & [255]) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	if ( ($0 == 0) ){ goto $label$6 }
	if ( ($6 == 0) ){ goto $label$13 }
	*($3 + [12]) = [1]
	return 
	
.LABEL $label$13
	
.LOOP $label$21:
	$1 = *($4 + [12])
	$2 = *($4 + [8])
	if ( ((int_32)*($2) == (int_32)$4) ){ goto $label$33 }
	if ( (($1 & [255]) == 0) ){ goto $label$32 }
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$23 }
	goto $label$24 
	
.LABEL $label$33
	if ( (($1 & [255]) == 0) ){ goto $label$31 }
	$1 = $4
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$32
	*(($4 + [12])) = [1]
	*($2 + [12]) = [0]
	$1 = *($2 + [4])
	$3 = *($1)
	*($2 + [4]) = $3
	if ( ($3 == 0) ){ goto $label$34 }
	*($3 + [8]) = $2
	
.LABEL $label$34
	*($1 + [8]) = *($2 + [8])
	*((($3 = *($2 + [8])) + ( [0] ? [4] : ((int_32)*($3) == (int_32)$2) ))) = $1
	*($1) = $2
	*($2 + [8]) = $1
	$2 = *($4)
	$0 = ( $4 ? $0 : ((int_32)$0 == (int_32)$2) )
	$4 = *($2 + [4])
	$2 = *($4)
	if ( $2 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$31
	*(($4 + [12])) = [1]
	$1 = *($4 + [4])
	*($2) = $1
	*($2 + [12]) = [0]
	if ( ($1 == 0) ){ goto $label$35 }
	*($1 + [8]) = $2
	
.LABEL $label$35
	*(($4 + [8])) = *($2 + [8])
	$3 = *($2 + [8])
	if ( ((int_32)*($3) == (int_32)$2) ){ goto $label$37 }
	*($3 + [4]) = $4
	goto $label$36 
	
.LABEL $label$37
	*($3) = $4
	$1 = *($2)
	
.LABEL $label$36
	*(($2 + [8])) = $4
	*(($4 + [4])) = $2
	$0 = ( $4 ? $0 : ((int_32)$0 == (int_32)$2) )
	$2 = *($1)
	if ( ($2 == 0) ){ goto $label$29 }
	
.LABEL $label$30
	if ( (*($2 + [12]) == 0) ){ goto $label$28 }
	
.LABEL $label$29
	$4 = *($1 + [4])
	if ( ($4 == 0) ){ goto $label$38 }
	if ( (*($4 + [12]) == 0) ){ goto $label$27 }
	
.LABEL $label$38
	*($1 + [12]) = [0]
	$4 = *($1 + [8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$39 }
	if ( (*($4 + [12]) & [255]) ){ goto $label$22 }
	
.LABEL $label$39
	*($4 + [12]) = [1]
	return 
	
.LABEL $label$28
	$3 = ($2 + [12])
	goto $label$26 
	
.LABEL $label$27
	if ( ($2 == 0) ){ goto $label$41 }
	if ( (*($2 + [12]) == 0) ){ goto $label$40 }
	$4 = *($1 + [4])
	
.LABEL $label$41
	*($4 + [12]) = [1]
	*($1 + [12]) = [0]
	$2 = *($4)
	*(($1 + [4])) = $2
	if ( ($2 == 0) ){ goto $label$42 }
	*($2 + [8]) = $1
	
.LABEL $label$42
	$3 = ($1 + [12])
	$2 = ($4 + [12])
	*($4 + [8]) = *($1 + [8])
	*((($0 = *($1 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$1) ))) = $4
	*($1 + [8]) = $4
	*($4) = $1
	$4 = ($4 + [8])
	goto $label$25 
	
.LABEL $label$40
	$3 = ($2 + [12])
	
.LABEL $label$26
	$2 = ($1 + [12])
	$4 = ($1 + [8])
	
.LABEL $label$25
	$4 = *($4)
	*($2) = *($4 + [12])
	*($4 + [12]) = [1]
	$2 = *($4)
	$0 = *($2 + [4])
	*($4) = $0
	*($3) = [1]
	if ( ($0 == 0) ){ goto $label$43 }
	*($0 + [8]) = $4
	
.LABEL $label$43
	*($2 + [8]) = *($4 + [8])
	*((($0 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*(($2 + [4])) = $4
	return 
	
.LABEL $label$24
	if ( (*($2 + [12]) == 0) ){ goto $label$18 }
	
.LABEL $label$23
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$44 }
	if ( (*($1 + [12]) == 0) ){ goto $label$17 }
	
.LABEL $label$44
	*($4 + [12]) = [0]
	$4 = *($4 + [8])
	if ( ((int_32)$4 == (int_32)$0) ){ goto $label$20 }
	if ( (*($4 + [12]) == 0) ){ goto $label$19 }
	
.LABEL $label$22
	$2 = *($4 + [8])
	$4 = *(($2 + (((int_32)*($2) == (int_32)$4) << [2])))
	goto $label$21 
	
.LABEL $label$20
	$4 = $0
	
.LABEL $label$19
	*($4 + [12]) = [1]
	return 
	
.LABEL $label$18
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$16 }
	
.LABEL $label$17
	if ( (*($1 + [12]) == 0) ){ goto $label$15 }
	
.LABEL $label$16
	*($2 + [12]) = [1]
	*($4 + [12]) = [0]
	$0 = *($2 + [4])
	*($4) = $0
	if ( ($0 == 0) ){ goto $label$45 }
	*($0 + [8]) = $4
	
.LABEL $label$45
	$1 = ($4 + [12])
	$0 = ($2 + [12])
	*($2 + [8]) = *($4 + [8])
	*((($3 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($3) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*(($2 + [4])) = $4
	$4 = ($2 + [8])
	goto $label$14 
	
.LABEL $label$15
	$1 = ($1 + [12])
	$0 = ($4 + [12])
	$4 = ($4 + [8])
	
.LABEL $label$14
	$4 = *($4)
	*($0) = *($4 + [12])
	*($4 + [12]) = [1]
	$2 = *($4 + [4])
	$0 = *($2)
	*($4 + [4]) = $0
	*($1) = [1]
	if ( ($0 == 0) ){ goto $label$46 }
	*($0 + [8]) = $4
	
.LABEL $label$46
	*($2 + [8]) = *($4 + [8])
	*((($0 = *($4 + [8])) + ( [0] ? [4] : ((int_32)*($0) == (int_32)$4) ))) = $2
	*($4 + [8]) = $2
	*($2) = $4
	return 
	
.LABEL $label$6
}

void .FUNC $211 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0)
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$1
	CALL memcpy($5, $3, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$3 = *($0 + [4])
	$5 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $5) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$2
	CALL memcpy($5, $3, [8])
	$5 = (*($5) + [8])
	*(($5 = ($4 + [4]))) = $5
	*($2 + [8]) = *($3 + [8])
	if ( ((int_32)(*(($4 + [8])) - $5) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$5 = *(($4 + [4]))
	
.LABEL $label$3
	CALL memcpy($5, ($2 + [8]), [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$5 = *($0 + [8])
	$0 = *($4 + [4])
	$4 = *($1)
	if ( ((int_32)(*($4 + [8]) - $0) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$0 = *(($4 + [4]))
	
.LABEL $label$4
	CALL memcpy($0, $5, [8])
	*(($4 = ($4 + [4]))) = (*($4) + [8])
	$global$0 = ($2 + [16])
}

void .FUNC $210 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$5 = *($0 + [8])
	$3 = ($2 - $1)
	$4 = int_32($3 >> [5])
	if ( ((uint_32)$4 <= (uint_32)int_32(($5 - $6) >> [5])) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$5 }
	*($0 + [4]) = $6
	CALL $9($6)
	$5 = [0]
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	
.LABEL $label$5
	if ( ((uint_32)$4 >= (uint_32)[134217728]) ){ goto $label$1 }
	$6 = [134217727]
	if ( ((uint_32)int_32($5 >> [5]) > (uint_32)[67108862]) ){ goto $label$6 }
	$6 = $4
	$2 = int_32($5 >> [4])
	if ( ($2 <= $4) ){ goto $label$6 }
	$6 = $2
	if ( ((uint_32)$2 >= (uint_32)[134217728]) ){ goto $label$1 }
	
.LABEL $label$6
	$4 = ($6 << [5])
	$6 = CALL $7($4)
	*($0) = $6
	*($0 + [4]) = $6
	*(($0 + [8])) = ($6 + $4)
	if ( ((int_32)$3 < (int_32)[1]) ){ goto $label$3 }
	CALL memcpy($6, $1, $3)
	*(($0 = ($0 + [4]))) = (*($0) + $3)
	goto $label$3 
	
.LABEL $label$4
	$5 = int_32($3 >> [5])
	$3 = (*($0 + [4]) - $6)
	$7 = ( ($1 + $3) ? $2 : ((uint_32)$4 > (uint_32)$5) )
	$3 = ($7 - $1)
	if ( ($3 == 0) ){ goto $label$7 }
	CALL memmove($6, $1, $3)
	
.LABEL $label$7
	if ( ((uint_32)$4 <= (uint_32)$5) ){ goto $label$2 }
	$1 = ($2 - $7)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$3 }
	$0 = ($0 + [4])
	CALL memcpy(*($0), $7, $1)
	*($0) = (*($0) + $1)
	return 
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	*(($0 + [4])) = ($6 + (int_32($3 >> [5]) << [5]))
	return (unreachable)
	
.LABEL $label$1
	CALL $44($0)
}

int_32 .FUNC $198 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [16])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [8]) = *(($1 + [32]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, ($2 + [8]), [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	if ( ((int_32)(*(($0 + [8])) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	*($3) = (*($3) + [8])
	$3 = ($1 + [64])
	$1 = *($0 + [4])
	$0 = CALL $199($0, ($1 + [48]))
	if ( ((int_32)(*($0 + [8]) - $1) > (int_32)[7]) ){ goto $label$7 }
	CALL eosio_assert([0], [10508])
	$1 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($1, $3, [8])
	*(($1 = ($0 + [4]))) = (*($1) + [8])
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $199 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($1)
	$4 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) ))
	$3 = *($0 + [4])
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$8 = ((int_64)$4) != (int_64)0
	*($2 + [15]) = (($8) << [7]) | ($7 & [127]))
	if ( ((int_32)(*($5) - $3) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$3 = *($6)
	
.LABEL $label$2
	CALL memcpy($3, ($2 + [15]), [1])
	$3 = (*($6) + [1])
	*($6) = $3
	if ( $8 ){ goto $label$1 }
	$7 = ($6 & [1])
	$6 = *($1)
	$6 = ( *(($1 + [4])) ? uint_32($6 >> [1]) : $7 )
	if ( ($6 == 0) ){ goto $label$3 }
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( ((int_32)(*(($0 + [8])) - $3) >= (int_32)$6) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$3 = *(($0 + [4]))
	
.LABEL $label$4
	CALL memcpy($3, $7, $6)
	*(($3 = ($0 + [4]))) = (*($3) + $6)
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}

void .FUNC $196 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$2 = CALL $7(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$4 = ($2 + ($6 << [4]))
	$3 = ($2 + ($3 << [4]))
	$6 = $3
	$2 = $1
	
.LOOP $label$8:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$5 = ($3 + ($1 << [4]))
	$6 = *($0)
	$7 = ($0 + [4])
	$2 = (*($7) - $6)
	$1 = ($3 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($1, $6, $2)
	$6 = *($0)
	
.LABEL $label$9
	*($0) = $1
	*($7) = $5
	*(($0 + [8])) = $4
	if ( ($6 == 0) ){ goto $label$10 }
	CALL $9($6)
	
.LABEL $label$10
	(unreachable)
}

void .FUNC $197 (int_32 $0, int_32 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_64 $6
	$4 = $global$0
	$5 = $4
	if ( ((int_32)*($1 + [16]) == (int_32)$0) ){ goto $label$1 }
	CALL eosio_assert([0], [10272])
	
.LABEL $label$1
	if ( ((int_64)*($0) == (int_64)CALL current_receiver()) ){ goto $label$2 }
	CALL eosio_assert([0], [10318])
	
.LABEL $label$2
	*($1 + [8]) = *(*($3))
	$6 = *($1)
	$4 = $4
	$3 = ($4 + [-16])
	$global$0 = $3
	CALL memcpy($3, $1, [8])
	CALL memcpy(($4 + [-8]), ($1 + [8]), [8])
	CALL db_update_i64(*($1 + [20]), $2, $3, [16])
	if ( (uint_64)($6 <= *($0 + [16])) ){ goto $label$3 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$6 + (int_64)1) : ((uint_64)$6 > (uint_64)(int_64)-3) )
	
.LABEL $label$3
	$global$0 = $5
}

int_32 .FUNC $194 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	CALL $169(CALL $195($0, ($1 + [16])), ($1 + [28]))
	$2 = *($0 + [4])
	if ( ((uint_32)(*($0 + [8]) - $2) > (uint_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10757])
	$2 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($1, $2, [8])
	$3 = (*($2) + [8])
	*(($2 = ($0 + [4]))) = $3
	$4 = ($1 + [8])
	if ( ((uint_32)(*(($0 + [8])) - $3) > (uint_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10757])
	$3 = *($2)
	
.LABEL $label$2
	CALL memcpy($4, $3, [8])
	return *($2) = (*($2) + [8])
}

int_32 .FUNC $195 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = *($0 + [4])
	$3 = (int_64)0
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	$6 = [0]
	
.LOOP $label$1:
	if ( ($2 <= *($4)) ){ goto $label$2 }
	CALL eosio_assert([0], [10753])
	$2 = *($5)
	
.LABEL $label$2
	$7 = *($2)
	$2 = ($2 + [1])
	*($5) = $2
	$6 = ($6 & [255])
	$3 = ((int_64)$3 | (int_64)(CASTING uint_64)(uint_32 (($7 & [127]) << $6)))
	$6 = ($6 + [7])
	$2 = $2
	if ( ($7 & [128]) ){ goto $label$1 }
	$2 = (CASTING uint_32)(uint_64 $3)
	$7 = *($1)
	$4 = *($1 + [4])
	$6 = int_32(($4 - $7) >> [4])
	if ( ((uint_32)$6 >= (uint_32)$2) ){ goto $label$5 }
	CALL $196($1, ($2 - $6))
	$4 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	if ( ((uint_32)$6 <= (uint_32)$2) ){ goto $label$6 }
	$4 = ($7 + ($2 << [4]))
	*(($1 + [4])) = $4
	
.LABEL $label$6
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$3 }
	
.LABEL $label$4
	$2 = ($0 + [4])
	$6 = *($2)
	$5 = ($0 + [8])
	
.LOOP $label$7:
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$8 }
	CALL eosio_assert([0], [10757])
	$6 = *($2)
	
.LABEL $label$8
	CALL memcpy($7, $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	if ( ((uint_32)(*($5) - $6) > (uint_32)[7]) ){ goto $label$9 }
	CALL eosio_assert([0], [10757])
	$6 = *($2)
	
.LABEL $label$9
	CALL memcpy(($7 + [8]), $6, [8])
	$6 = (*($2) + [8])
	*($2) = $6
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$4) ){ goto $label$7 }
	
.LABEL $label$3
	return $0
}

void .FUNC $192 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)int_32(($2 - $3) >> [4]) >= (uint_32)$1) ){ goto $label$5 }
	$4 = *($0)
	$3 = int_32(($3 - $4) >> [4])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[268435456]) ){ goto $label$3 }
	$6 = [268435455]
	$2 = ($2 - $4)
	if ( ((uint_32)int_32($2 >> [4]) > (uint_32)[134217726]) ){ goto $label$6 }
	$6 = int_32($2 >> [3])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$4 }
	if ( ((uint_32)$6 >= (uint_32)[268435456]) ){ goto $label$2 }
	
.LABEL $label$6
	$7 = CALL $7(($6 << [4]))
	goto $label$1 
	
.LABEL $label$5
	$6 = $3
	$2 = $1
	
.LOOP $label$7:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	*(($0 + [4])) = ($3 + ($1 << [4]))
	return (unreachable)
	
.LABEL $label$4
	$6 = [0]
	$7 = [0]
	goto $label$1 
	
.LABEL $label$3
	CALL $44($0)
	
.LABEL $label$2
	CALL abort()
	
.LABEL $label$1
	$8 = ($7 + ($6 << [4]))
	$9 = ($7 + ($3 << [4]))
	$6 = $9
	$2 = $1
	
.LOOP $label$8:
	*($6) = [0]
	*(($6 + [4])) = (int_64)0
	*(($6 + [12])) = [0]
	$6 = ($6 + [16])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$8 }
	$10 = ($9 + ($1 << [4]))
	$6 = *($0)
	$11 = ($0 + [4])
	$12 = *($11)
	if ( ((int_32)$12 == (int_32)$6) ){ goto $label$10 }
	$13 = (($3 + [-1]) - uint_32((($12 + [-16]) - $6) >> [4]))
	$14 = ($6 - $12)
	$6 = [0]
	
.LOOP $label$11:
	*(($3 = (($2 = ($9 + $6)) + [-12]))) = (int_64)0
	*(($4 = ($2 + [-4]))) = [0]
	$1 = ($12 + $6)
	$5 = ($1 + [-12])
	*($3) = *($5)
	$3 = ($1 + [-4])
	*($4) = *($3)
	*(($2 + [-16])) = *(($1 + [-16]))
	*($3) = [0]
	*($5) = (int_64)0
	$6 = ($6 + [-16])
	if ( ((int_32)$14 != (int_32)$6) ){ goto $label$11 }
	$9 = ($7 + ($13 << [4]))
	$6 = *(($0 + [4]))
	$3 = *($0)
	goto $label$9 
	
.LABEL $label$10
	$3 = $6
	
.LABEL $label$9
	*($0) = $9
	*($11) = $10
	*(($0 + [8])) = $8
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$12 }
	
.LOOP $label$13:
	$2 = ($6 + [-16])
	$1 = *(($6 + [-12]))
	if ( ($1 == 0) ){ goto $label$14 }
	*(($6 + [-8])) = $1
	CALL $9($1)
	
.LABEL $label$14
	$6 = $2
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$13 }
	
.LABEL $label$12
	if ( ($3 == 0) ){ goto $label$15 }
	CALL $9($3)
	
.LABEL $label$15
	(unreachable)
}

void .FUNC $193 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$3 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)((int_32)($2 - $3) / (int_32)[40]) >= (uint_32)$1) ){ goto $label$4 }
	$4 = *($0)
	$3 = ((int_32)($3 - $4) / (int_32)[40])
	$5 = ($3 + $1)
	if ( ((uint_32)$5 >= (uint_32)[107374183]) ){ goto $label$2 }
	$6 = [107374182]
	$2 = ((int_32)($2 - $4) / (int_32)[40])
	if ( ((uint_32)$2 > (uint_32)[53687090]) ){ goto $label$5 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$3 }
	
.LABEL $label$5
	$2 = CALL $7(((int_32)$6 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$4
	$6 = $3
	$2 = $1
	
.LOOP $label$6:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [24])) = (int_64)0
	*(($6 + [32])) = (int_64)0
	$6 = ($6 + [40])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$6 }
	*(($0 + [4])) = ($3 + ((int_32)$1 * (int_32)[40]))
	return (unreachable)
	
.LABEL $label$3
	$6 = [0]
	$2 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $44($0)
	
.LABEL $label$1
	$7 = ($2 + ((int_32)$6 * (int_32)[40]))
	$8 = ($2 + ((int_32)$3 * (int_32)[40]))
	$6 = $8
	$2 = $1
	
.LOOP $label$7:
	*($6) = (int_64)0
	*(($6 + [8])) = (int_64)0
	*(($6 + [16])) = (int_64)0
	*(($6 + [24])) = (int_64)0
	*(($6 + [32])) = (int_64)0
	$6 = ($6 + [40])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$7 }
	$9 = ($8 + ((int_32)$1 * (int_32)[40]))
	$6 = *($0)
	$10 = *(($0 + [4]))
	if ( ((int_32)$10 == (int_32)$6) ){ goto $label$9 }
	$11 = ($6 - $10)
	$1 = [0]
	
.LOOP $label$10:
	$2 = ($10 + $1)
	*((($6 = ($8 + $1)) + [-32])) = *(($2 + [-32]))
	*(($6 + [-40])) = *(($2 + [-40]))
	*(($3 = ($6 + [-24]))) = (int_64)0
	*(($4 = ($6 + [-16]))) = [0]
	$5 = ($2 + [-24])
	*($3) = *($5)
	$3 = ($2 + [-16])
	*($4) = *($3)
	*($3) = [0]
	*(($3 = ($6 + [-12]))) = (int_64)0
	*(($6 = ($6 + [-4]))) = [0]
	$4 = ($2 + [-12])
	*($3) = *($4)
	*($5) = (int_64)0
	$2 = ($2 + [-4])
	*($6) = *($2)
	*($2) = [0]
	*($4) = (int_64)0
	$1 = ($1 + [-40])
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$10 }
	$8 = ($8 + $1)
	$6 = *(($0 + [4]))
	$3 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$3 = $6
	
.LABEL $label$8
	*($0) = $8
	*(($0 + [4])) = $9
	*(($0 + [8])) = $7
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$11 }
	
.LOOP $label$12:
	$2 = *(($6 + [-12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($6 + [-8])) = $2
	CALL $9($2)
	
.LABEL $label$13
	$2 = ($6 + [-40])
	$1 = *(($6 + [-24]))
	if ( ($1 == 0) ){ goto $label$14 }
	*(($6 + [-20])) = $1
	CALL $9($1)
	
.LABEL $label$14
	$6 = $2
	if ( ((int_32)$3 != (int_32)$2) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($3 == 0) ){ goto $label$15 }
	CALL $9($3)
	
.LABEL $label$15
}

int_32 .FUNC $190 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = *($0 + [4])
	if ( ((int_32)(*($0 + [8]) - $3) > (int_32)[7]) ){ goto $label$1 }
	CALL eosio_assert([0], [10508])
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	CALL memcpy($3, $1, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [8])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$2
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2) = *(($1 + [16]))
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$3 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$3
	CALL memcpy($4, $2, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [24])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$4 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$4
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	$3 = ($1 + [32])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$5
	CALL memcpy($4, $3, [8])
	$4 = (*($3) + [8])
	*(($3 = ($0 + [4]))) = $4
	$5 = ($1 + [40])
	$6 = ($0 + [8])
	if ( ((int_32)(*($6) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$4 = *($3)
	
.LABEL $label$6
	CALL memcpy($4, $5, [8])
	$4 = (*($3) + [8])
	*($3) = $4
	*($2 + [15]) = *($1 + [48])
	if ( ((int_32)(*($6) - $4) > (int_32)[0]) ){ goto $label$7 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$7
	CALL memcpy($4, ($2 + [15]), [1])
	*(($3 = ($0 + [4]))) = (*($3) + [1])
	$0 = CALL $191($0, ($1 + [52]))
	$global$0 = ($2 + [16])
	return $0
}

int_32 .FUNC $191 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$2 = ($global$0 - [16])
	$global$0 = $2
	$3 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$4 = *($0 + [4])
	$5 = ($0 + [8])
	
.LOOP $label$1:
	$6 = (CASTING uint_32)(uint_64 $3)
	$3 = (uint_64)$3 >> (uint_64)(int_64)7
	$7 = ((int_64)$3) != (int_64)0
	*($2 + [15]) = (($7) << [7]) | ($6 & [127]))
	if ( ((int_32)(*($5) - $4) > (int_32)[0]) ){ goto $label$2 }
	CALL eosio_assert([0], [10508])
	$4 = *(($0 + [4]))
	
.LABEL $label$2
	CALL memcpy($4, ($2 + [15]), [1])
	$4 = (*($4) + [1])
	*(($4 = ($0 + [4]))) = $4
	if ( $7 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$1) ){ goto $label$3 }
	$5 = ($0 + [8])
	$6 = ($0 + [4])
	
.LOOP $label$4:
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$5 }
	CALL eosio_assert([0], [10508])
	$4 = *($6)
	
.LABEL $label$5
	CALL memcpy($4, $7, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	*($2) = *(($7 + [8]))
	if ( ((int_32)(*($5) - $4) > (int_32)[7]) ){ goto $label$6 }
	CALL eosio_assert([0], [10508])
	$4 = *($6)
	
.LABEL $label$6
	CALL memcpy($4, $2, [8])
	$4 = (*($6) + [8])
	*($6) = $4
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$4 }
	
.LABEL $label$3
	$global$0 = ($2 + [16])
	return $0
}