(data (i32.const 4) "0~\00\00")
(data (i32.const 12) "\00\00\00\00\00\00\00\00\07\00\00\00\08\00\00\00\t\00\00\00")
(data (i32.const 32) "\n--log--\00")
(data (i32.const 48) "commit and exit ret code: \00")
(data (i32.const 80) "\n------------------------------\n\00")
(data (i32.const 144) "\e6\97\a0\e5\a4\87\e6\b3\a8\e6\94\b6\e6\ac\be\00")
(data (i32.const 160) "eosio.token\00")
(data (i32.const 176) "\n===assert=====================\n\00")
(data (i32.const 224) "\e6\8b\92\e6\94\b6\e9\9d\9e\e7\b3\bb\e7\bb\9fEOS\e8\b4\a7\e5\b8\81\00")
(data (i32.const 256) "\n==============================\n\n\n\n\n\00")
(data (i32.const 304) "\e5\b0\8f\e4\ba\8e\e6\9c\80\e4\bd\8e\e6\8a\bc\e6\b3\a8\e9\87\91\e9\a2\9d0.0100 EOS\00")
(data (i32.const 352) "fastwincrash\00")
(data (i32.const 368) "Key does not exist\00")
(data (i32.const 400) "\e7\8e\b0\e5\9c\a8\e6\b2\a1\e6\9c\89\e5\bc\80\e7\9b\98\00")
(data (i32.const 432) "\n---params---------------------\n\00")
(data (i32.const 480) "  \00")
(data (i32.const 496) ":\t\00")
(data (i32.const 512) "\n\00")
(data (i32.const 528) "\e5\8f\82\e6\95\b0\e4\b8\a5\e6\a0\bc\e6\a3\80\e6\9f\a5\e5\a4\b1\e8\b4\a5\00")
(data (i32.const 560) "fastwinadmin\00")
(data (i32.const 576) "invalid symbol name\00")
(data (i32.const 608) "\e6\8c\96\e7\9f\bf:\00")
(data (i32.const 624) "@\00")
(data (i32.const 640) "FAST:mining from crash\00")
(data (i32.const 672) "happyness123\00")
(data (i32.const 688) "\e9\bb\98\e8\ae\a4\e6\8e\a8\e8\8d\90\e4\ba\ba\00")
(data (i32.const 704) "\e6\8e\a8\e8\8d\90\e4\ba\ba:\00")
(data (i32.const 720) "\e6\8e\a8\e8\8d\90\e4\ba\ba\e4\b8\8d\e8\83\bd\e6\98\af\e8\87\aa\e5\b7\b1\00")
(data (i32.const 752) "\e6\8e\a8\e8\8d\90\e4\ba\ba\e4\b8\8d\e8\83\bd\e6\98\af\e5\90\88\e7\ba\a6\00")
(data (i32.const 784) "betcrash\00")
(data (i32.const 800) "table:\00")
(data (i32.const 816) "object passed to iterator_to is not in multi_index\00")
(data (i32.const 880) "cannot create objects in table of another contract\00")
(data (i32.const 944) "write\00")
(data (i32.const 960) "cannot pass end iterator to modify\00")
(data (i32.const 1008) "object passed to modify is not in multi_index\00")
(data (i32.const 1056) "cannot modify objects in table of another contract\00")
(data (i32.const 1120) "updater cannot change primary key when modifying an object\00")
(data (i32.const 1184) "\e6\8a\bc\e6\b3\a8\00")
(data (i32.const 1200) "\e7\a6\81\e6\ad\a2\e5\8a\a0\e6\b3\a8\00")
(data (i32.const 1216) "\e8\b6\85\e5\87\ba\e6\8a\bc\e6\b3\a8\e9\99\90\e9\a2\9d\00")
(data (i32.const 1248) "\e9\94\99\e8\af\af\e7\b1\bb\e5\9e\8b\00")
(data (i32.const 1264) "magnitude of asset amount must be less than 2^62\00")
(data (i32.const 1328) "error reading iterator\00")
(data (i32.const 1360) "read\00")
(data (i32.const 1368) "`\05\00\00")
(data (i32.const 1376) ".12345abcdefghijklmnopqrstuvwxyz\00")
(data (i32.const 1424) "\n--Transfer\00")
(data (i32.const 1440) "----\00")
(data (i32.const 1456) "---\n\00")
(data (i32.const 1472) " ==> \00")
(data (i32.const 1488) "  [pending]\00")
(data (i32.const 1504) "active\00")
(data (i32.const 1520) "transfer\00")
(data (i32.const 1536) ".\00")
(data (i32.const 1552) " \00")
(data (i32.const 1568) ",\00")
(data (i32.const 1584) "null\00")
(data (i32.const 1600) "{\n\00")
(data (i32.const 1616) "}\00")
(data (i32.const 1632) ",\n\00")
(data (i32.const 1648) "\"\00")
(data (i32.const 1664) "\" : \00")
(data (i32.const 1680) "[\00")
(data (i32.const 1696) "]\00")
(data (i32.const 1712) ", \00")
(data (i32.const 1728) "true\00")
(data (i32.const 1744) "false\00")
(data (i32.const 1760) "\\\"\00")
(data (i32.const 1776) "\\\\\00")
(data (i32.const 1792) "\\b\00")
(data (i32.const 1808) "\\f\00")
(data (i32.const 1824) "\\n\00")
(data (i32.const 1840) "\\r\00")
(data (i32.const 1856) "\\t\00")
(data (i32.const 1872) "ERROR: Array: Expected \',\' or \']\', found \'\00")
(data (i32.const 1920) "\'\00")
(data (i32.const 1936) "Error: Object: Expected colon, found \'\00")
(data (i32.const 1984) "ERROR: Object: Expected comma, found \'\00")
(data (i32.const 2032) "\\u\00")
(data (i32.const 2048) "ERROR: String: Expected hex character in unicode escape, found \'\00")
(data (i32.const 2128) "ERROR: Bool: Expected \'true\' or \'false\', found \'\00")
(data (i32.const 2192) "ERROR: Null: Expected \'null\', found \'\00")
(data (i32.const 2240) "ERROR: Number: Expected a number for exponent, found \'\00")
(data (i32.const 2304) "ERROR: Number: unexpected character \'\00")
(data (i32.const 2352) "ERROR: Parse: Unknown starting character \'\00")
(data (i32.const 2400) "checkInt failed\00")
(data (i32.const 2416) "%05lld\00")
(data (i32.const 2432) "_amount_ \e8\bd\ac\e6\8d\a2\e5\bc\82\e5\b8\b8\00")
(data (i32.const 2464) "amount \e8\bd\ac\e6\8d\a2\e5\bc\82\e5\b8\b8\00")
(data (i32.const 2496) "%lld.\00")
(data (i32.const 2504) "\00\00\00\00\00\00\00\00\n\00\00\00\0b\00\00\00\0c\00\00\00")
(data (i32.const 2528) "\e9\bb\98\e8\ae\a4\e7\a6\81\e6\ad\a2\e8\bd\ac\e8\b4\a6,\e8\af\b7\e9\87\8d\e8\bd\bd\e5\b9\b6\e5\ae\9e\e7\8e\b0virtual onTransferOther()\00")
(data (i32.const 2592) "\e9\bb\98\e8\ae\a4\e7\a6\81\e6\ad\a2\e8\bd\ac\e8\b4\a6,\e8\af\b7\e9\87\8d\e8\bd\bd\e5\b9\b6\e5\ae\9e\e7\8e\b0virtual onTransferFromMe()\00")
(data (i32.const 2656) "\e9\bb\98\e8\ae\a4\e7\a6\81\e6\ad\a2\e8\bd\ac\e8\b4\a6,\e8\af\b7\e9\87\8d\e8\bd\bd\e5\b9\b6\e5\ae\9e\e7\8e\b0virtual onTransferToMe()\00")
(data (i32.const 2720) "read_transaction failed\00")
(data (i32.const 2752) "\n\n\00")
(data (i32.const 2768) "\n===json======================\n\00")
(data (i32.const 2800) "  receiver:\t\00")
(data (i32.const 2816) "\n  code:\t\t\00")
(data (i32.const 2832) "\n  action:\t\00")
(data (i32.const 2848) "\n==============================\n\00")
(data (i32.const 2896) "params\n\00")
(data (i32.const 2912) "onerror\00")
(data (i32.const 2928) "onerror action\'s are unsafe\00")
(data (i32.const 2960) "must from != to\00")
(data (i32.const 2976) "get\00")
(data (i32.const 2992) "open\00")
(data (i32.const 3008) "close\00")
(data (i32.const 3024) "check\00")
(data (i32.const 3040) "\e7\bb\93\e7\ae\97\e5\bf\85\e9\a1\bb\e5\85\88\e5\b0\81\e7\9b\98\00")
(data (i32.const 3072) "\e8\a7\a3\e6\9e\90\e5\a4\b1\e8\b4\a5\00")
(data (i32.const 3088) "\e6\8a\bc\e6\b3\a8:\00")
(data (i32.const 3104) "fee:crash\00")
(data (i32.const 3120) "\e6\8e\a8\e8\8d\90:\00")
(data (i32.const 3136) "crash referral reward\00")
(data (i32.const 3168) "\e5\a5\96\e9\87\91:\00")
(data (i32.const 3184) "crash\e5\a5\96\e5\8a\b1\00")
(data (i32.const 3200) "crash\e6\9c\80\e7\bb\88\e5\a5\96\e5\8a\b1\00")
(data (i32.const 3232) "%s,%s\00")
(data (i32.const 3248) "wohaohao1234\00")
(data (i32.const 3264) "max_pay:\00")
(data (i32.const 3280) "\e6\94\b6\e8\b4\b9:\00")
(data (i32.const 3296) "cannot pass end iterator to erase\00")
(data (i32.const 3344) "cannot increment end iterator\00")
(data (i32.const 3376) "object passed to erase is not in multi_index\00")
(data (i32.const 3424) "cannot erase objects in table of another contract\00")
(data (i32.const 3488) "attempt to remove object that was not in multi_index\00")
(data (i32.const 3552) "\e5\bf\85\e9\a1\bb\e5\bc\80\e7\9b\98\e5\90\8e\e6\89\8d\e5\8f\af\e4\bb\a5\e5\b0\81\e7\9b\98\00")
(data (i32.const 3584) "\e7\8e\b0\e5\b7\b2\e5\b0\81\e7\9b\98\00")
(data (i32.const 3600) "\e5\bf\85\e9\a1\bb\e7\bb\93\e7\ae\97\e5\ae\8c\e6\af\95\e6\89\8d\e5\8f\af\e4\bb\a5\e5\bc\80\e7\9b\98\00")
(data (i32.const 3648) "\e7\8e\b0\e5\b7\b2\e5\bc\80\e7\9b\98\00")
(data (i32.const 12064) "malloc_from_freed was designed to only be called after _heap was completely allocated\00")
(data (i32.const 12164) "\00\00\00\00")
(data (i32.const 12176) "stol\00")
(data (i32.const 12192) ": no conversion\00")
(data (i32.const 12208) ": out of range\00")
(data (i32.const 12224) "%ld\00")
(data (i32.const 12240) "%f\00")
(data (i32.const 12256) "uncaught_exceptions not yet implemented\n\00")
(data (i32.const 12300) "\100\00\00")
(data (i32.const 12304) "\05\00\00\00\00\00\00\00\00\00\00\00\0d\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\0f\00\00\00\a80\00\00\00\00\00\00\00\00\00\00\00\00\00\00\02\00\00\00\00\00\00\00\00\00\00\00\00\00\00\ff\ff\ff\ff\ff\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00")
(data (i32.const 12464) "\00\00\00\00\00\00\f0?\00\00\00\00\00\00\f8?")
(data (i32.const 12480) "\00\00\00\00\00\00\00\00\06\d0\cfC\eb\fdL>")
(data (i32.const 12496) "\00\00\00\00\00\00\00\00\00\00\00@\03\b8\e2?")
(data (i32.const 12512) "\19\00\n\00\19\19\19\00\00\00\00\05\00\00\00\00\00\00\t\00\00\00\00\0b\00\00\00\00\00\00\00\00\19\00\11\n\19\19\19\03\n\07\00\01\1b\t\0b\18\00\00\t\06\0b\00\00\0b\00\06\19\00\00\00\19\19\19\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0e\00\00\00\00\00\00\00\00\19\00\n\0d\19\19\19\00\0d\00\00\02\00\t\0e\00\00\00\t\00\0e\00\00\0e\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\13\00\00\00\00\13\00\00\00\00\t\0c\00\00\00\00\00\0c\00\00\0c\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\10\00\00\00\00\00\00\00\00\00\00\00\0f\00\00\00\04\0f\00\00\00\00\t\10\00\00\00\00\00\10\00\00\10\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\12\00\00\00\00\00\00\00\00\00\00\00\11\00\00\00\00\11\00\00\00\00\t\12\00\00\00\00\00\12\00\00\12\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\1a\00\00\00\1a\1a\1a\00\00\00\00\00\00\t\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\14\00\00\00\00\00\00\00\00\00\00\00\17\00\00\00\00\17\00\00\00\00\t\14\00\00\00\00\00\14\00\00\14\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\16\00\00\00\00\00\00\00\00\00\00\00\15\00\00\00\00\15\00\00\00\00\t\16\00\00\00\00\00\16\00\00\16\00\00")
(data (i32.const 12976) "0123456789ABCDEF")
(data (i32.const 12992) "-+   0X0x\00")
(data (i32.const 13008) "(null)\00")
(data (i32.const 13024) "-0X+0X 0X-0x+0x 0x\00")
(data (i32.const 13056) "inf\00")
(data (i32.const 13072) "INF\00")
(data (i32.const 13088) "nan\00")
(data (i32.const 13104) "NAN\00")
(data (i32.const 13120) ".\00")
(data (i32.const 13136) "T!\"\19\0d\01\02\03\11K\1c\0c\10\04\0b\1d\12\1e\'hnopqb \05\06\0f\13\14\15\1a\08\16\07($\17\18\t\n\0e\1b\1f%#\83\82}&*+<=>?CGJMXYZ[\\]^_`acdefgijklrstyz{|\00")
(data (i32.const 13232) "Illegal byte sequence\00Domain error\00Result not representable\00Not a tty\00Permission denied\00Operation not permitted\00No such file or directory\00No such process\00File exists\00Value too large for data type\00No space left on device\00Out of memory\00Resource busy\00Interrupted system call\00Resource temporarily unavailable\00Invalid seek\00Cross-device link\00Read-only file system\00Directory not empty\00Connection reset by peer\00Operation timed out\00Connection refused\00Host is down\00Host is unreachable\00Address in use\00Broken pipe\00I/O error\00No such device or address\00Block device required\00No such device\00Not a directory\00Is a directory\00Text file busy\00Exec format error\00Invalid argument\00Argument list too long\00Symbolic link loop\00Filename too long\00Too many open files in system\00No file descriptors available\00Bad file descriptor\00No child process\00Bad address\00File too large\00Too many links\00No locks available\00Resource deadlock would occur\00State not recoverable\00Previous owner died\00Operation canceled\00Function not implemented\00No message of desired type\00Identifier removed\00Device not a stream\00No data available\00Device timeout\00Out of streams resources\00Link has been severed\00Protocol error\00Bad message\00File descriptor in bad state\00Not a socket\00Destination address required\00Message too large\00Protocol wrong type for socket\00Protocol not available\00Protocol not supported\00Socket type not supported\00Not supported\00Protocol family not supported\00Address family not supported by protocol\00Address not available\00Network is down\00Network unreachable\00Connection reset by network\00Connection aborted\00No buffer space available\00Socket is connected\00Socket not connected\00Cannot send after socket shutdown\00Operation already in progress\00Operation in progress\00Stale file handle\00Remote I/O error\00Quota exceeded\00No medium found\00Wrong medium type\00No error information\00\00")
(data (i32.const 15040) "\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\00\01\02\03\04\05\06\07\08\t\ff\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\n\0b\0c\0d\0e\0f\10\11\12\13\14\15\16\17\18\19\1a\1b\1c\1d\1e\1f !\"#\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff\ff")
(data (i32.const 15312) "\00\01\02\04\07\03\06\05\00")
(data (i32.const 15392) "%.3s %.3s%3d %.2d:%.2d:%.2d %d\n\00")
(data (i32.const 15424) "ASCII\00")
(data (i32.const 15440) "UTF-8\00")
(data (i32.const 15456) "^[yY]\00^[nN]\00yes\00no\00")
(data (i32.const 15488) "Sun\00Mon\00Tue\00Wed\00Thu\00Fri\00Sat\00Sunday\00Monday\00Tuesday\00Wednesday\00Thursday\00Friday\00Saturday\00Jan\00Feb\00Mar\00Apr\00May\00Jun\00Jul\00Aug\00Sep\00Oct\00Nov\00Dec\00January\00February\00March\00April\00May\00June\00July\00August\00September\00October\00November\00December\00AM\00PM\00%a %b %e %T %Y\00%m/%d/%y\00%H:%M:%S\00%I:%M:%S %p\00\00\00%m/%d/%y\000123456789\00%a %b %e %T %Y\00%H:%M:%S\00")
(data (i32.const 15808) ".\00\00")
(data (i32.const 15840) "C\00")
(data (i32.const 15888) "UTC\00")
(data (i32.const 15904) "\1f\1e\1f\1e\1f\1f\1e\1f\1e\1f\1f\1d")
(import "env" "__addtf3" (func $fimport$0 (param i32 i64 i64 i64 i64)))
(import "env" "__eqtf2" (func $fimport$1 (param i64 i64 i64 i64) (result i32)))
(import "env" "__extenddftf2" (func $fimport$2 (param i32 f64)))
(import "env" "__fixtfsi" (func $fimport$3 (param i64 i64) (result i32)))
(import "env" "__fixunstfsi" (func $fimport$4 (param i64 i64) (result i32)))
(import "env" "__floatsitf" (func $fimport$5 (param i32 i32)))
(import "env" "__floatunsitf" (func $fimport$6 (param i32 i32)))
(import "env" "__multf3" (func $fimport$7 (param i32 i64 i64 i64 i64)))
(import "env" "__netf2" (func $fimport$8 (param i64 i64 i64 i64) (result i32)))
(import "env" "__subtf3" (func $fimport$9 (param i32 i64 i64 i64 i64)))
(import "env" "__unordtf2" (func $fimport$10 (param i64 i64 i64 i64) (result i32)))
(import "env" "abort" (func $fimport$11))
(import "env" "action_data_size" (func $fimport$12 (result i32)))
(import "env" "current_receiver" (func $fimport$13 (result i64)))
(import "env" "current_time" (func $fimport$14 (result i64)))
(import "env" "db_find_i64" (func $fimport$15 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_get_i64" (func $fimport$16 (param i32 i32 i32) (result i32)))
(import "env" "db_lowerbound_i64" (func $fimport$17 (param i64 i64 i64 i64) (result i32)))
(import "env" "db_next_i64" (func $fimport$18 (param i32 i32) (result i32)))
(import "env" "db_remove_i64" (func $fimport$19 (param i32)))
(import "env" "db_store_i64" (func $fimport$20 (param i64 i64 i64 i64 i32 i32) (result i32)))
(import "env" "db_update_i64" (func $fimport$21 (param i32 i64 i32 i32)))
(import "env" "eosio_assert" (func $fimport$22 (param i32 i32)))
(import "env" "eosio_exit" (func $fimport$23 (param i32)))
(import "env" "is_account" (func $fimport$24 (param i64) (result i32)))
(import "env" "memcpy" (func $fimport$25 (param i32 i32 i32) (result i32)))
(import "env" "memmove" (func $fimport$26 (param i32 i32 i32) (result i32)))
(import "env" "memset" (func $fimport$27 (param i32 i32 i32) (result i32)))
(import "env" "printhex" (func $fimport$28 (param i32 i32)))
(import "env" "printi" (func $fimport$29 (param i64)))
(import "env" "printn" (func $fimport$30 (param i64)))
(import "env" "prints" (func $fimport$31 (param i32)))
(import "env" "prints_l" (func $fimport$32 (param i32 i32)))
(import "env" "printui" (func $fimport$33 (param i64)))
(import "env" "read_action_data" (func $fimport$34 (param i32 i32) (result i32)))
(import "env" "read_transaction" (func $fimport$35 (param i32 i32) (result i32)))
(import "env" "require_auth" (func $fimport$36 (param i64)))
(import "env" "require_auth2" (func $fimport$37 (param i64 i64)))
(import "env" "send_deferred" (func $fimport$38 (param i32 i64 i32 i32 i32)))
(import "env" "send_inline" (func $fimport$39 (param i32 i32)))
(import "env" "sha256" (func $fimport$40 (param i32 i32 i32)))
(import "env" "transaction_size" (func $fimport$41 (result i32)))
(export "memory" (memory $0))
(export "_ZN8eoscrash14onTransferToMeE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $0))
(export "_ZN8eoscrash16onTransferFromMeE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $1))
(export "_ZN8eoscrash15onTransferOtherE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $2))
(export "_ZN10msContract13commitAndExitEy" (func $3))
(export "_ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $10))
(export "_ZeqRK11checksum256S1_" (func $23))
(export "_ZeqRK11checksum160S1_" (func $24))
(export "_ZneRK11checksum160S1_" (func $25))
(export "now" (func $26))
(export "_ZN5eosio12require_authERKNS_16permission_levelE" (func $27))
(export "_ZN5eosio14string_to_nameENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $28))
(export "_ZN4json5ArrayEv" (func $29))
(export "_ZN4json6ObjectEv" (func $34))
(export "_ZN4jsonlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_4JSONE" (func $35))
(export "_ZN4json4JSON4LoadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE" (func $41))
(export "_ZN4json6getIntERNS_4JSONEii" (func $58))
(export "_ZN9msAccountC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $59))
(export "_ZN9msAccountC2Ey" (func $60))
(export "_ZN9msAccount15CheckPermissionEv" (func $61))
(export "_ZN9msAccount15CheckPermissionEy" (func $62))
(export "_ZN9msAccount10GetEosNameEv" (func $63))
(export "_ZN9msAccount8ToStringEv" (func $64))
(export "_ZN9msAccount10GetBalanceES_yPKc" (func $65))
(export "_ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE" (func $66))
(export "_ZN9msAccount13delayTransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy" (func $70))
(export "_ZN9msAccount12CheckBalanceE7msAsset" (func $79))
(export "_ZN7msAssetC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEhS6_" (func $80))
(export "_ZN7msAssetC2EyN5eosio11symbol_typeEy" (func $81))
(export "_ZN7msAssetC2EyN5eosio5assetE" (func $82))
(export "_ZN7msAsset16isSystemEOSTokenEv" (func $83))
(export "_ZN7msAsset14SymbolToStringEv" (func $84))
(export "_ZN7msAsset10_AmountN2SEhy" (func $85))
(export "_ZN7msAsset9AmountN2SEhy" (func $86))
(export "_ZN7msAsset10_AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh" (func $87))
(export "_ZN7msAsset9AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh" (func $88))
(export "_ZN7msAsset18GetContractEosNameEv" (func $89))
(export "_ZN7msAsset8ToStringEv" (func $90))
(export "_ZN7msAsset8ValidateENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_yN5eosio11symbol_typeE" (func $91))
(export "_ZN7msAsset14GetAmountByIntEv" (func $92))
(export "_ZN10msContractC2Eyyy" (func $93))
(export "_ZN10msContract18getCurrentReceiverEv" (func $97))
(export "_ZN10msContract17getActionContractEv" (func $98))
(export "_ZN10msContract15getSelfContractEv" (func $99))
(export "_ZN10msContract21getCurrentTransactionEv" (func $100))
(export "_ZN10msContract9loadParamERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE" (func $101))
(export "_ZN10msContract6onCallEv" (func $102))
(export "_ZN10msContract10onTransferE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE" (func $104))
(export "apply" (func $105))
(export "_ZN10msContract25createNewContractInstanceEyyy" (func $106))
(export "_ZN8eoscrash4openEv" (func $110))
(export "_ZN8eoscrash5closeEv" (func $111))
(export "_ZN8eoscrash5checkEv" (func $112))
(export "_Z16ClearAllBetTabley" (func $125))
(export "malloc" (func $127))
(export "free" (func $130))
(export "_ZNSt3__18ios_base5clearEj" (func $131))
(export "_ZNKSt3__18ios_base6getlocEv" (func $132))
(export "_ZNSt3__16localeC2ERKS0_" (func $133))
(export "_ZNKSt3__16locale9use_facetERNS0_2idE" (func $134))
(export "_ZNSt3__16locale2id6__initEv" (func $135))
(export "_ZNSt3__111__call_onceERVmPvPFvS2_E" (func $137))
(export "_ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji" (func $153))
(export "_ZNSt3__19to_stringEl" (func $156))
(export "_ZNSt3__19to_stringEd" (func $158))
(export "_ZSt18uncaught_exceptionv" (func $162))
(export "_ZSt19uncaught_exceptionsv" (func $163))
(export "_ZNSt3__16localeD2Ev" (func $165))
(export "__stdio_close" (func $168))
(export "__stdio_write" (func $169))
(export "__stdio_seek" (func $170))
(export "isspace" (func $171))
(export "__errno_location" (func $172))
(export "pow" (func $173))
(export "sqrt" (func $174))
(export "fabs" (func $175))
(export "scalbn" (func $176))
(export "fprintf" (func $177))
(export "vfprintf" (func $178))
(export "__lockfile" (func $180))
(export "__unlockfile" (func $181))
(export "__fwritex" (func $182))
(export "strerror" (func $184))
(export "strnlen" (func $185))
(export "wctomb" (func $186))
(export "__signbitl" (func $187))
(export "__fpclassifyl" (func $188))
(export "frexpl" (func $189))
(export "wcrtomb" (func $190))
(export "memchr" (func $191))
(export "__lctrans" (func $192))
(export "__lctrans_impl" (func $193))
(export "__mo_lookup" (func $194))
(export "strcmp" (func $195))
(export "__towrite" (func $196))
(export "snprintf" (func $197))
(export "vsnprintf" (func $198))
(export "sprintf" (func $200))
(export "vsprintf" (func $201))
(export "atoi" (func $202))
(export "atoll" (func $203))
(export "strtol" (func $204))
(export "__shlim" (func $205))
(export "__intscan" (func $206))
(export "__shgetc" (func $207))
(export "__uflow" (func $208))
(export "__toread" (func $209))
(export "memcmp" (func $210))
(export "strchr" (func $211))
(export "__strchrnul" (func $212))
(export "strlen" (func $213))
(export "strcpy" (func $214))
(export "__stpcpy" (func $215))
(export "strncmp" (func $216))
(export "strncpy" (func $217))
(export "__stpncpy" (func $218))
(export "asctime" (func $219))
(export "__asctime" (func $220))
(export "__nl_langinfo_l" (func $221))
(export "gmtime" (func $222))
(export "__gmtime_r" (func $223))
(export "__secs_to_tm" (func $224))
(table $0 16 16 anyfunc)
(elem (i32.const 0) $225 $110 $111 $112 $135 $136 $199 $0 $1 $2 $94 $95 $96 $168 $169 $170)



int_32 .FUNC __asctime (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	$2 = CALL __nl_langinfo_l((*($0 + [24]) + [131072]), [15356])
	$3 = CALL __nl_langinfo_l((*($0 + [16]) + [131086]), [15356])
	$4 = *($0 + [12])
	$5 = *($0 + [8])
	$6 = *($0 + [20])
	$7 = *($0 + [4])
	*(($8 + [20])) = *($0)
	*(($8 + [16])) = $7
	*(($8 + [24])) = ($6 + [1900])
	*($8 + [12]) = $5
	*($8 + [8]) = $4
	*($8 + [4]) = $3
	*($8) = $2
	if ( ((int_32)CALL snprintf($1, [26], [15392], $8) < (int_32)[26]) ){ goto $label$1 }
	*([0]) = [0]
	
.LABEL $label$1
	*([0] + [4]) = ($8 + [32])
	return $1
}

int_64 .FUNC sqrt (float_64 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$1 = (CASTING int_64)(float_64 $0)
	$7 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)32)
	if ( ((int_32)($7) & [2146435072]) != (int_32)[2146435072]) ){ goto $label$1 }
	return ((float_64)((float_64)$0 * (float_64)$0) + (float_64)$0)
	
.LABEL $label$1
	$2 = (CASTING uint_32)(uint_64 $1)
	if ( ((int_32)$7 <= (int_32)[0]) ){ goto $label$6 }
	$8 = (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)52)
	if ( $8) ){ goto $label$4 }
	$8 = [1]
	$9 = $2
	goto $label$5 
	
.LABEL $label$6
	if ( ((($7 & [2147483647]) | $2) == 0) ){ goto $label$3 }
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$2 }
	$8 = [1]
	
.LOOP $label$7:
	$8 = ($8 + [-21])
	$7 = uint_32($2 >> [11])
	$9 = ($2 << [21])
	$2 = $9
	if ( ($7 == 0) ){ goto $label$7 }
	
.LABEL $label$5
	$5 = [0]
	if ( ($7 & [1048576]) ){ goto $label$8 }
	$5 = [0]
	
.LOOP $label$9:
	$5 = ($5 + [1])
	$7 = ($7 << [1])
	if ( (($7 & [1048576]) == 0) ){ goto $label$9 }
	
.LABEL $label$8
	$2 = ($9 << $5)
	$8 = ($8 - $5)
	$7 = (uint_32($9 >> ([32] - $5)) | $7)
	
.LABEL $label$4
	$7 = (($7 & [1048575]) | [1048576])
	$10 = ($8 + [-1023])
	if ( (($10 & [1]) == 0) ){ goto $label$10 }
	$7 = (($7 << [1]) | uint_32($2 >> [31]))
	$2 = ($2 << [1])
	
.LABEL $label$10
	$7 = (uint_32($2 >> [31]) | ($7 << [1]))
	$5 = ($2 << [1])
	$4 = [0]
	$9 = [2097152]
	$8 = [0]
	
.LOOP $label$11:
	$6 = $5
	$5 = ($9 + $8)
	if ( ((int_32)$7 < (int_32)$5) ){ goto $label$12 }
	$4 = ($9 + $4)
	$7 = ($7 - $5)
	$8 = ($5 + $9)
	
.LABEL $label$12
	$7 = (($7 << [1]) | (uint_32($2 >> [30]) & [1]))
	$5 = ($6 << [1])
	$2 = $6
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$11 }
	$3 = uint_32($10 >> [1])
	$9 = [-2147483648]
	$10 = [0]
	$2 = [0]
	
.LOOP $label$13:
	$6 = ($2 + $9)
	if ( ((int_32)$7 > (int_32)$8) ){ goto $label$15 }
	if ( ((int_32)$7 != (int_32)$8) ){ goto $label$14 }
	if ( ($5 <= $6) ){ goto $label$14 }
	
.LABEL $label$15
	$7 = (($7 - $8) + ( [-1] ? [0] : ($5 <= $6) ))
	$2 = ($6 + $9)
	$8 = ((((int_32)$6 < (int_32)[0]) & ((int_32)$2 > (int_32)[-1])) + $8)
	$10 = ($10 + $9)
	$5 = ($5 - $6)
	
.LABEL $label$14
	$7 = (uint_32($5 >> [31]) | ($7 << [1]))
	$5 = ($5 << [1])
	$9 = uint_32($9 >> [1])
	if ( $9 ){ goto $label$13 }
	if ( (($5 | $7) == 0) ){ goto $label$16 }
	if ( ((int_32)$10 == (int_32)[-1]) ){ goto $label$17 }
	$10 = (($10 & [1]) + $10)
	goto $label$16 
	
.LABEL $label$17
	$4 = ($4 + [1])
	$10 = [0]
	
.LABEL $label$16
	$0 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 ((($3 << [20]) + int_32($4 >> [1])) + [1071644672])) << (int_64)32) | (int_64)(CASTING uint_64)(uint_32 (uint_32($10 >> [1]) | ($4 << [31])))))
	
.LABEL $label$3
	return $0
	
.LABEL $label$2
	$0 = (float_64)
	return ((float_64)$0($0 - $0)) / (float_64)$0)
}

void .FUNC $6 (int_32 $0, int_32 $1)
{
	CALL prints($0)
	CALL $9($1)
	CALL prints([624])
	CALL printn(*($1 + [16]))
}

int_64 .FUNC scalbn (float_64 $0, int_32 $1)
{
	int_32 $2
	if ( ((int_32)$1 < (int_32)[1024]) ){ goto $label$4 }
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	$2 = ($1 + [-1023])
	if ( ((int_32)$2 < (int_32)[1024]) ){ goto $label$3 }
	$1 = ($1 + [-2046])
	$1 = ( $1 ? [1023] : ((int_32)$1 < (int_32)[1023]) )
	$0 = ((float_64)$0 * (float_64)(float_64)8988465674311579538646525e283)
	goto $label$1 
	
.LABEL $label$4
	if ( ((int_32)$1 > (int_32)[-1023]) ){ goto $label$1 }
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	$2 = ($1 + [969])
	if ( ((int_32)$2 > (int_32)[-1023]) ){ goto $label$2 }
	$1 = ($1 + [1938])
	$1 = ( $1 ? [-1022] : ((int_32)$1 > (int_32)[-1022]) )
	$0 = ((float_64)$0 * (float_64)(float_64)2.004168360008973e-292)
	goto $label$1 
	
.LABEL $label$3
	$1 = $2
	goto $label$1 
	
.LABEL $label$2
	$1 = $2
	
.LABEL $label$1
	return ((float_64)$0 * (float_64)(CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($1 + [1023])) << (int_64)52)))
}

int_32 .FUNC fprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [12]) = $2
	$2 = CALL vfprintf($0, $1, $2)
	*([0] + [4]) = ($3 + [16])
	return $2
}

int_64 .FUNC __stdio_seek (int_32 $0, int_64 $1, int_32 $2)
{
	return (int_64)-1
}

int_32 .FUNC isspace (int_32 $0)
{
	return (((int_32)$0 == (int_32)[32]) | (($0 + [-9]) <= [5]))
}

int_32 .FUNC __errno_location ()
{
	return [12456]
}

void .FUNC $7 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$1), [816])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $22($1, $5)
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$1), [816])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC vfprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [288])
	*([0] + [4]) = $7
	*($7 + [284]) = $2
	$6 = [0]
	CALL memset(($7 + [240]), [0], [40])
	*($7 + [280]) = *($7 + [284])
	$2 = [-1]
	if ( ((int_32)CALL $179([0], $1, ($7 + [280]), ($7 + [80]), ($7 + [240])) <= (int_32)[-1]) ){ goto $label$1 }
	if ( ((int_32)*($0 + [76]) < (int_32)[0]) ){ goto $label$2 }
	$6 = CALL __lockfile($0)
	
.LABEL $label$2
	$2 = *($0)
	if ( ((int_32)*($0 + [74]) > (int_32)[0]) ){ goto $label$3 }
	*($0) = ($2 & [-33])
	
.LABEL $label$3
	$3 = ($2 & [32])
	if ( (*($0 + [48]) == 0) ){ goto $label$5 }
	$2 = CALL $179($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	goto $label$4 
	
.LABEL $label$5
	*(($5 = ($0 + [48]))) = [80]
	*($0 + [16]) = ($7 + [80])
	*($0 + [28]) = $7
	*($0 + [20]) = $7
	$4 = *($0 + [44])
	*($0 + [44]) = $7
	$2 = CALL $179($0, $1, ($7 + [280]), ($7 + [80]), ($7 + [240]))
	if ( ($4 == 0) ){ goto $label$4 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	*(($0 + [44])) = $4
	*($5) = [0]
	*(($0 + [16])) = [0]
	*(($0 + [28])) = [0]
	$1 = ($0 + [20])
	$4 = *($1)
	*($1) = [0]
	$2 = ( $2 ? [-1] : $4 )
	
.LABEL $label$4
	$1 = *($0)
	*($0) = ($1 | $3)
	$1 = ($1 & [32])
	if ( ($6 == 0) ){ goto $label$6 }
	CALL __unlockfile($0)
	
.LABEL $label$6
	$2 = ( [-1] ? $2 : $1 )
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [288])
	return $2
}

void .FUNC $4 (int_32 $0, int_32 $1)
{
	CALL prints($0)
	CALL prints(*($1))
}

int_32 .FUNC __nl_langinfo_l (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ((int_32)$0 != (int_32)[14]) ){ goto $label$1 }
	return ( [15440] ? [15424] : *([0]) )
	
.LABEL $label$1
	$2 = int_32($0 >> [16])
	$3 = ($0 & [65535])
	if ( ((int_32)$3 != (int_32)[65535]) ){ goto $label$9 }
	if ( ((int_32)$2 > (int_32)[5]) ){ goto $label$9 }
	$0 = ($1 + ($2 << [2]))
	if ( (*($0) == 0) ){ goto $label$8 }
	return (*($0) + [8])
	
.LABEL $label$9
	$5 = [15824]
	$0 = ($2 + [-1])
	if ( ((uint_32)$0 > (uint_32)[4]) ){ goto $label$2 }
	goto $label$10 
	
.LABEL $label$10
	$0 = [15808]
	if ( ((uint_32)$3 <= (uint_32)[1]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$8
	return [15840]
	
.LABEL $label$7
	$0 = [15488]
	if ( ((uint_32)$3 <= (uint_32)[49]) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$6
	$5 = [15824]
	if ( $3 ){ goto $label$2 }
	goto $label$3 
	
.LABEL $label$5
	$0 = [15456]
	if ( ((uint_32)$3 > (uint_32)[3]) ){ goto $label$2 }
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$12 }
	
.LOOP $label$13:
	$4 = *($0)
	$5 = ($0 + [1])
	$0 = $5
	if ( $4 ){ goto $label$13 }
	$0 = $5
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$13 }
	goto $label$11 
	
.LABEL $label$12
	$5 = $0
	
.LABEL $label$11
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$2 }
	
.LABEL $label$3
	if ( (*($5) == 0) ){ goto $label$2 }
	$5 = CALL __lctrans($5, *(($1 + ($2 << [2]))))
	
.LABEL $label$2
	$0
	return $5
}

void .FUNC $5 (int_32 $0, int_32 $1)
{
	CALL prints($0)
	CALL printui(*($1))
}

int_32 .FUNC malloc (int_32 $0)
{
	return CALL $128([3664], $0)
}

void .FUNC _ZN10msContract13commitAndExitEy (int_32 $0, int_64 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	*($2 + [24]) = $1
	*($2 + [16]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($2 + [12]) = CALL asctime(CALL $222(($2 + [16])))
	CALL $4([32], ($2 + [12]))
	CALL $5([48], ($2 + [24]))
	CALL prints([80])
	CALL eosio_exit([0])
	(unreachable)
}

void .FUNC frexpl (int_32 $0, int_64 $1, int_64 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [32])
	*([0] + [4]) = $6
	$4 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	$5 = ($4) & [32767]
	if ( ((int_32)$5) == (int_32)[32767]) ){ goto $label$1 }
	if ( $5 ){ goto $label$4 }
	if ( (CALL __eqtf2($1, $2, (int_64)0, (int_64)0) == 0) ){ goto $label$3 }
	CALL __multf3($6, $1, $2, (int_64)0, (int_64)4645181540655955968)
	CALL frexpl(($6 + [16]), *($6), *(($6 + [8])), $3)
	$4 = (*($3) + [-120])
	$2 = *($6 + [24])
	$1 = *($6 + [16])
	goto $label$2 
	
.LABEL $label$4
	*($3) = (($4 & [32767]) + [-16382])
	$2 = ((int_64)((int_64)(CASTING uint_64)(uint_32 (($4 & [32768]) | [16382])) << (int_64)48) | (int_64)((int_64)$2 & (int_64)281474976710655))
	goto $label$1 
	
.LABEL $label$3
	$4 = [0]
	
.LABEL $label$2
	*($3) = $4
	
.LABEL $label$1
	*($0) = $1
	*(($0 + [8])) = $2
	*([0] + [4]) = ($6 + [32])
}

int_32 .FUNC __fpclassifyl (int_64 $0, int_64 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	$2 = ((int_64)$1 & (int_64)281474976710655)
	$3 = ((CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)48)) & [32767]
	if ( ((int_32)$3) == (int_32)[32767]) ){ goto $label$2 }
	$4 = [4]
	if ( $3 ){ goto $label$1 }
	return ( [3] ? [2] : ((int_64)((int_64)$2 | (int_64)$0) != (int_64)0) )
	
.LABEL $label$2
	$4 = (int_64)(((int_64)$2 | (int_64)$0) == 0)
	
.LABEL $label$1
	return $4
}

void .FUNC $49 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	$7 = *($1)
	$9 = (CASTING uint_32)(uint_64 $7)
	$11 = [0]
	$12 = (CASTING uint_32)(uint_64 (uint_64)$7 >> (uint_64)(int_64)32)
	$8 = *($2)
	$10 = (CASTING uint_32)(uint_64 (uint_64)$8 >> (uint_64)(int_64)32)
	if ( ((int_32)$10) == (int_32)$12)) ){ goto $label$1 }
	$11 = (CASTING uint_32)(uint_64 $8)
	$11 = ((int_32(($10 - *($11)) >> [4]) + (($11 - $9) << [6])) - int_32(($12 - *($9)) >> [4]))
	
.LABEL $label$1
	$6 = *($0 + [16])
	$5 = *($0 + [20])
	$10 = *($0 + [4])
	$12 = *($0 + [8])
	$5 = ($12 - $10)
	$4 = (( (($5 << [6]) + [-1]) ? [0] : $5 ) - ($5 + $6))
	if ( ((uint_32)$11 <= (uint_32)$4) ){ goto $label$2 }
	CALL $50($0, ($11 - $4))
	$12 = *(($0 + [8]))
	$10 = *(($0 + [4]))
	$6 = *(($0 + [16]))
	$5 = *(($0 + [20]))
	
.LABEL $label$2
	$5 = ($6 + $5)
	$11 = ($10 + (uint_32($5 >> [6]) & [67108860]))
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$4 }
	$12 = (*($11) + (($5 & [255]) << [4]))
	goto $label$3 
	
.LABEL $label$4
	$12 = [0]
	
.LABEL $label$3
	$5 = *($2 + [4])
	$10 = *($1 + [4])
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$5 }
	$0 = ($0 + [20])
	
.LOOP $label$6:
	$12 = (CALL $51($12, $10) + [16])
	if ( ((int_32)($12 - *($11)) != (int_32)[4096]) ){ goto $label$7 }
	$12 = *($11 + [4])
	$11 = ($11 + [4])
	
.LABEL $label$7
	$10 = ($10 + [16])
	*(($2 = ($1 + [4]))) = $10
	if ( ((int_32)($10 - *($9)) != (int_32)[4096]) ){ goto $label$8 }
	$6 = ($9 + [4])
	*($1) = $6
	$10 = *($9 + [4])
	*($2) = $10
	$9 = $6
	
.LABEL $label$8
	*($0) = (*($0) + [1])
	if ( ((int_32)$10 != (int_32)$5) ){ goto $label$6 }
	
.LABEL $label$5
}

int_32 .FUNC $48 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	$2 = CALL $56($0, $1, ($5 + [12]), ($5 + [8]), $2)
	$1 = *($2)
	if ( $1 ){ goto $label$1 }
	$1 = CALL $138([48])
	CALL $166(($1 + [16]), $3)
	CALL $51(($1 + [32]), ($3 + [16]))
	*($1) = (int_64)0
	*($1 + [8]) = *($5 + [12])
	*($2) = $1
	$3 = $1
	$4 = *(*($0))
	if ( ($4 == 0) ){ goto $label$2 }
	*($0) = $4
	$3 = *($2)
	
.LABEL $label$2
	CALL $46(*($0 + [4]), $3)
	*($0 + [8]) = (*($0 + [8]) + [1])
	
.LABEL $label$1
	*([0] + [4]) = ($5 + [16])
	return $1
}

void .FUNC memory (int_32 memory, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_64 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_64 $14
	int_64 $15
	int_64 $16
	int_64 $17
	int_32 $18
	int_32 $19
	int_32 $20
	$20 = (*([0] + [4]) - [224])
	*([0] + [4]) = $20
	$12 = *($4)
	$18 = CALL strlen([128])
	if ( ((int_32)$18 != (int_32)( *($4 + [4]) ? uint_32($12 >> [1]) : ($12 & [1]) )) ){ goto $label$7 }
	if ( (CALL $151($4, [0], [-1], [128], $18) == 0) ){ goto $label$6 }
	
.LABEL $label$7
	$16 = *($3 + [16])
	$14 = (int_64)0
	$13 = (int_64)59
	$12 = [160]
	$17 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$14 > (uint_64)(int_64)10) ){ goto $label$13 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$18 = ($18 + [165])
	goto $label$11 
	
.LABEL $label$13
	$15 = (int_64)0
	if ( ((int_64)$14 == (int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $18) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$9
	$12 = ($12 + [1])
	$13 = ((int_64)$13 + (int_64)-5)
	$17 = ((int_64)$15 | (int_64)$17)
	$14 = ((int_64)$14 + (int_64)1)
	if ( ((int_64)$14 != (int_64)13) ){ goto $label$8 }
	if ( ((int_64)$16 != (int_64)$17) ){ goto $label$15 }
	if ( ((int_64)*($3 + [8]) == (int_64)1397703940) ){ goto $label$14 }
	
.LABEL $label$15
	CALL prints([176])
	CALL prints([224])
	CALL prints([256])
	CALL eosio_assert([0], [224])
	
.LABEL $label$14
	if ( ((int_64)*($3) > (int_64)999) ){ goto $label$16 }
	CALL prints([176])
	CALL prints([304])
	CALL prints([256])
	CALL eosio_assert([0], [304])
	
.LABEL $label$16
	$14 = (int_64)0
	$15 = (int_64)59
	$12 = [352]
	$17 = (int_64)0
	
.LOOP $label$17:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$18 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$18 = ($18 + [165])
	goto $label$19 
	
.LABEL $label$20
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$18
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$17 }
	$14 = (int_64)0
	$15 = (int_64)59
	$12 = [352]
	$16 = (int_64)0
	
.LOOP $label$21:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$22 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$24 }
	$18 = ($18 + [165])
	goto $label$23 
	
.LABEL $label$24
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$23
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$22
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$16 = ((int_64)$13 | (int_64)$16)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$21 }
	*(($19 = CALL $138([40])) + [8]) = $16
	*($19) = $17
	*($19 + [16]) = (int_64)-1
	$14 = (int_64)0
	*($19 + [24 align=4]) = (int_64)0
	*($19 + [32]) = [0]
	$15 = (int_64)59
	$12 = [352]
	$17 = (int_64)0
	
.LOOP $label$25:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$26 }
	$18 = *($12)
	if ( ((uint_32)(($18 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$28 }
	$18 = ($18 + [165])
	goto $label$27 
	
.LABEL $label$28
	$18 = ( ($18 + [208]) ? [0] : ((($18 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$27
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($18 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$26
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$25 }
	CALL $7(($20 + [192]), $19, $17)
	if ( (*($20 + [196]) == 0) ){ goto $label$30 }
	CALL $7(($20 + [192]), $19, $17)
	$12 = *($20 + [196])
	if ( $12 ){ goto $label$31 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$31
	if ( ((int_64)*($12) == (int_64)2) ){ goto $label$29 }
	
.LABEL $label$30
	CALL prints([176])
	CALL prints([400])
	CALL prints([256])
	CALL eosio_assert([0], [400])
	
.LABEL $label$29
	*($20 + [176]) = (int_64)0
	*($20 + [184]) = [0]
	$18 = CALL $150($4, [44], [0])
	if ( ((int_32)$18 == (int_32)[-1]) ){ goto $label$33 }
	$19 = (($20 + [176]) + [8])
	$12 = [0]
	
.LOOP $label$34:
	CALL $167(($20 + [192]), $4, $12, ($18 - $12), $4)
	$12 = *($20 + [180])
	if ( ((uint_32)$12 >= (uint_32)*($19)) ){ goto $label$36 }
	*($12) = *($20 + [192])
	$12 = (($20 + [192]) + [8])
	*(($12 + [8])) = *($12)
	*($12) = [0]
	*($20 + [192]) = [0]
	*($20 + [196]) = [0]
	*($20 + [180]) = (*($20 + [180]) + [12])
	goto $label$35 
	
.LABEL $label$36
	CALL $8(($20 + [176]), ($20 + [192]))
	if ( ((*($20 + [192]) & [1]) == 0) ){ goto $label$35 }
	CALL $139(*((($20 + [192]) + [8])))
	
.LABEL $label$35
	$12 = ($18 + [1])
	$18 = CALL $150($4, [44], $12)
	if ( ((int_32)$18 != (int_32)[-1]) ){ goto $label$34 }
	goto $label$32 
	
.LABEL $label$33
	$12 = [0]
	
.LABEL $label$32
	CALL $167(($20 + [192]), $4, $12, [-1], $4)
	$12 = *($20 + [180])
	if ( ((uint_32)$12 >= (uint_32)*((($20 + [176]) + [8]))) ){ goto $label$38 }
	*($12) = *($20 + [192])
	$12 = (($20 + [192]) + [8])
	*(($12 + [8])) = *($12)
	*($12) = [0]
	*($20 + [192]) = [0]
	*($20 + [196]) = [0]
	*($20 + [180]) = (*($20 + [180]) + [12])
	goto $label$37 
	
.LABEL $label$38
	CALL $8(($20 + [176]), ($20 + [192]))
	if ( ((*($20 + [192]) & [1]) == 0) ){ goto $label$37 }
	CALL $139(*($20 + [200]))
	
.LABEL $label$37
	CALL prints([432])
	$12 = *($20 + [176])
	if ( ((int_32)*($20 + [180]) == (int_32)$12) ){ goto $label$39 }
	$14 = (int_64)0
	$19 = [0]
	$18 = [4]
	
.LOOP $label$40:
	CALL prints([480])
	CALL printi($14)
	CALL prints([496])
	$9 = *(($12 + [-4]))
	$10 = ($9 & [1])
	$12 = ($12 + $18)
	CALL prints_l(( *(($12 + [4])) ? ($12 + [-3]) : $10 ), ( *($12) ? uint_32($9 >> [1]) : $10 ))
	CALL prints([512])
	$18 = ($18 + [12])
	$14 = ((int_64)$14 + (int_64)1)
	$12 = *($20 + [176])
	$19 = ($19 + [1])
	if ( ($19 <= ((int_32)(*($20 + [180]) - $12) / (int_32)[12])) ){ goto $label$40 }
	
.LABEL $label$39
	CALL prints([80])
	*(($20 + [168])) = [0]
	*($20 + [160]) = (int_64)0
	$12 = CALL strlen([128])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$42 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$45 }
	*($20 + [160]) = ($12 << [1])
	$18 = (($20 + [160]) | [1])
	if ( $12 ){ goto $label$44 }
	goto $label$43 
	
.LABEL $label$45
	$19 = (($12 + [16]) & [-16])
	$18 = CALL $138($19)
	*($20 + [160]) = ($19 | [1])
	*($20 + [168]) = $18
	*($20 + [164]) = $12
	
.LABEL $label$44
	CALL memcpy($18, [128], $12)
	
.LABEL $label$43
	*(($18 + $12)) = [0]
	if ( ((int_32)*($20 + [180]) == (int_32)*($20 + [176])) ){ goto $label$47 }
	$5 = (($20 + [144]) | [1])
	$11 = (($20 + [144]) + [8])
	$19 = [0]
	$18 = [0]
	
.LOOP $label$48:
	if ( ((int_32)$18 <= (int_32)[0]) ){ goto $label$50 }
	CALL $145(($20 + [160]), [44])
	CALL $166(($20 + [144]), ($20 + [160]))
	if ( ((*($20 + [144]) & [1]) == 0) ){ goto $label$49 }
	CALL $139(*($11))
	goto $label$49 
	
.LABEL $label$50
	*($11) = [0]
	*($20 + [144]) = (int_64)0
	$12 = CALL strlen([0])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$46 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$53 }
	*($20 + [144]) = ($12 << [1])
	$9 = $5
	if ( $12 ){ goto $label$52 }
	goto $label$51 
	
.LABEL $label$53
	$10 = (($12 + [16]) & [-16])
	$9 = CALL $138($10)
	*($11) = $9
	*($20 + [144]) = ($10 | [1])
	*($20 + [148]) = $12
	
.LABEL $label$52
	CALL memcpy($9, [0], $12)
	
.LABEL $label$51
	*(($9 + $12)) = [0]
	if ( ((*($20 + [144]) & [1]) == 0) ){ goto $label$49 }
	CALL $139(*($11))
	
.LABEL $label$49
	$9 = *($12)
	$10 = ($9 & [1])
	$12 = (*($20 + [176]) + $19)
	CALL $142(($20 + [160]), ( *(($12 + [8])) ? ($12 + [1]) : $10 ), ( *(($12 + [4])) ? uint_32($9 >> [1]) : $10 ))
	$19 = ($19 + [12])
	$18 = ($18 + [1])
	if ( ($18 <= ((int_32)(*($20 + [180]) - *($20 + [176])) / (int_32)[12])) ){ goto $label$48 }
	
.LABEL $label$47
	*($20 + [192]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = CALL asctime(CALL $222(($20 + [192])))
	CALL prints([32])
	CALL prints($12)
	$19 = (($20 + [160]) | [1])
	CALL prints(( *($20 + [168]) ? $19 : (*($20 + [160]) & [1]) ))
	CALL prints([80])
	*($20 + [192]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = CALL asctime(CALL $222(($20 + [192])))
	CALL prints([32])
	CALL prints($12)
	if ( (*($4) & [1]) ){ goto $label$55 }
	$12 = ($4 + [1])
	goto $label$54 
	
.LABEL $label$55
	$12 = *($4 + [8])
	
.LABEL $label$54
	CALL prints($12)
	CALL prints([80])
	$12 = ($12 & [1])
	$12 = *($4)
	$10 = ($4 + [4])
	$18 = ($12 & [1])
	$12 = *($20 + [160])
	$11 = uint_32($12 >> [1])
	$9 = ( *($20 + [164]) ? $11 : $18 )
	if ( ((int_32)$9 != (int_32)( *($10) ? uint_32($12 >> [1]) : $12 )) ){ goto $label$57 }
	$12 = ( *($4 + [8]) ? ($4 + [1]) : $12 )
	if ( $18 ){ goto $label$58 }
	if ( ($9 == 0) ){ goto $label$56 }
	$9 = ([0] - $11)
	$18 = $19
	
.LOOP $label$59:
	if ( ((int_32)*($18) != (int_32)*($12)) ){ goto $label$57 }
	$12 = ($12 + [1])
	$18 = ($18 + [1])
	$9 = ($9 + [1])
	if ( $9 ){ goto $label$59 }
	goto $label$56 
	
.LABEL $label$58
	if ( ($9 == 0) ){ goto $label$56 }
	if ( (CALL memcmp(( *(($20 + [168])) ? $19 : $18 ), $12, $9) == 0) ){ goto $label$56 }
	
.LABEL $label$57
	CALL prints([176])
	CALL prints([528])
	CALL prints([256])
	$18 = [0]
	$12 = ($12 & [1])
	$12 = *($4)
	$9 = ($12 & [1])
	$12 = *($20 + [160])
	$5 = uint_32($12 >> [1])
	$11 = ( *($20 + [164]) ? $5 : $9 )
	if ( ((int_32)$11 != (int_32)( *($10) ? uint_32($12 >> [1]) : $12 )) ){ goto $label$60 }
	$18 = [1]
	$12 = ( *($4 + [8]) ? ($4 + [1]) : $12 )
	if ( $9 ){ goto $label$62 }
	if ( ($11 == 0) ){ goto $label$60 }
	$4 = ([0] - $5)
	
.LOOP $label$63:
	if ( ((int_32)*($19) != (int_32)*($12)) ){ goto $label$61 }
	$18 = [1]
	$12 = ($12 + [1])
	$19 = ($19 + [1])
	$4 = ($4 + [1])
	if ( $4 ){ goto $label$63 }
	goto $label$60 
	
.LABEL $label$62
	if ( ($11 == 0) ){ goto $label$60 }
	$18 = (CALL memcmp(( *(($20 + [168])) ? $19 : $9 ), $12, $11) == 0)
	goto $label$60 
	
.LABEL $label$61
	$18 = [0]
	
.LABEL $label$60
	CALL eosio_assert($18, [528])
	
.LABEL $label$56
	$14 = (int_64)0
	$15 = (int_64)59
	$12 = [560]
	$17 = (int_64)0
	
.LOOP $label$64:
	$13 = (int_64)0
	if ( ((uint_64)$14 > (uint_64)(int_64)11) ){ goto $label$65 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$67 }
	$4 = ($4 + [165])
	goto $label$66 
	
.LABEL $label$67
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$66
	$13 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$65
	$12 = ($12 + [1])
	$14 = ((int_64)$14 + (int_64)1)
	$17 = ((int_64)$13 | (int_64)$17)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$64 }
	*($20 + [120]) = (int_64)0
	*($20 + [128]) = (int_64)1398362884
	$15 = *($3)
	CALL eosio_assert([1], [1264])
	$14 = (uint_64)*($20 + [128]) >> (uint_64)(int_64)8)
	$15 = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 $15)) * (float_64)(float_64)50.625))
	$12 = [0]
	
.LOOP $label$70:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $14) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$69 }
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$71 }
	
.LOOP $label$72:
	$14 = (uint_64)$14 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$14) & (int_64)255) != (int_64)0) ){ goto $label$69 }
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$72 }
	
.LABEL $label$71
	$4 = [1]
	$12 = ($12 + [1])
	if ( ((int_32)$12 < (int_32)[7]) ){ goto $label$70 }
	goto $label$68 
	
.LABEL $label$69
	$4 = [0]
	
.LABEL $label$68
	CALL eosio_assert($4, [576])
	*(($12 = (($20 + [120]) + [8]))) = (int_64)362174039556
	*($20 + [120]) = $15
	*($20 + [136]) = $17
	*($20 + [192]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$4 = CALL asctime(CALL $222(($20 + [192])))
	CALL prints([32])
	CALL prints($4)
	CALL prints([608])
	CALL $9(($20 + [120]))
	CALL prints([624])
	CALL printn(*($20 + [136]))
	CALL prints([80])
	*((($20 + [96]) + [8])) = *($12)
	*((($20 + [96]) + [16])) = *($20 + [136])
	*((($20 + [80]) + [8])) = [0]
	*($20 + [96]) = *($20 + [120])
	*($20 + [80]) = (int_64)0
	$12 = CALL strlen([640])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$41 }
	$10 = ($0 + [16])
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$75 }
	*($20 + [80]) = ($12 << [1])
	$4 = (($20 + [80]) | [1])
	if ( $12 ){ goto $label$74 }
	goto $label$73 
	
.LABEL $label$75
	$18 = (($12 + [16]) & [-16])
	$4 = CALL $138($18)
	*($20 + [80]) = ($18 | [1])
	*($20 + [88]) = $4
	*($20 + [84]) = $12
	
.LABEL $label$74
	CALL memcpy($4, [640], $12)
	
.LABEL $label$73
	*(($4 + $12)) = [0]
	*((($20 + [8]) + [16])) = *((($20 + [96]) + [16]))
	*((($20 + [8]) + [8])) = *((($20 + [96]) + [8]))
	*($20 + [8]) = *($20 + [96])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($10, $1, ($20 + [8]), ($20 + [80]))
	if ( ((*($20 + [80]) & [1]) == 0) ){ goto $label$76 }
	CALL $139(*($20 + [88]))
	
.LABEL $label$76
	$9 = *($20 + [176])
	if ( (((int_32)(*($20 + [180]) - $9) / (int_32)[12]) <= [2]) ){ goto $label$79 }
	$15 = (int_64)0
	$13 = (int_64)59
	$12 = [672]
	$14 = (int_64)0
	
.LOOP $label$80:
	$17 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$81 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$83 }
	$4 = ($4 + [165])
	goto $label$82 
	
.LABEL $label$83
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$82
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$81
	$12 = ($12 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$14 = ((int_64)$17 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$80 }
	if ( (*($9 + [12]) & [1]) ){ goto $label$78 }
	$12 = (($9 + [12]) + [1])
	goto $label$77 
	
.LABEL $label$79
	CALL prints([176])
	CALL prints([1248])
	CALL prints([256])
	CALL eosio_assert([0], [1248])
	goto $label$1 
	
.LABEL $label$78
	$12 = *(($9 + [20]))
	
.LABEL $label$77
	$11 = CALL atoi($12)
	*($20 + [192]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = CALL asctime(CALL $222(($20 + [192])))
	CALL prints([32])
	CALL prints($12)
	CALL printui((CASTING uint_64)(uint_32 ((int_32)(*($20 + [180]) - *($20 + [176])) / (int_32)[12])))
	CALL prints([80])
	$12 = *($20 + [176])
	if ( (((int_32)(*($20 + [180]) - $12) / (int_32)[12]) <= [3]) ){ goto $label$84 }
	CALL $166(($20 + [64]), ($12 + [24]))
	$5 = (*($20 + [64]) & [1])
	$7 = *($20 + [72])
	$12 = ( $7 ? (($20 + [64]) | [1]) : $5 )
	$4 = [-1]
	
.LOOP $label$85:
	$18 = ($12 + $4)
	$19 = ($4 + [1])
	$4 = $19
	if ( *(($18 + [1])) ){ goto $label$85 }
	$16 = (CASTING uint_64)(uint_32 $19)
	$15 = (int_64)0
	$13 = (int_64)59
	$14 = (int_64)0
	
.LOOP $label$86:
	$17 = (int_64)0
	if ( ((uint_64)$15 >= (uint_64)$16) ){ goto $label$87 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$89 }
	$4 = ($4 + [165])
	goto $label$88 
	
.LABEL $label$89
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$88
	$17 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$87
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$91 }
	$17 = ((int_64)((int_64)$17 & (int_64)31) << (int_64)((int_64)$13 & (int_64)4294967295))
	goto $label$90 
	
.LABEL $label$91
	$17 = ((int_64)$17 & (int_64)15)
	
.LABEL $label$90
	$12 = ($12 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$14 = ((int_64)$17 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$86 }
	if ( ($5 == 0) ){ goto $label$92 }
	CALL $139($7)
	
.LABEL $label$92
	if ( CALL is_account($14) ){ goto $label$93 }
	*($20 + [192]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = CALL asctime(CALL $222(($20 + [192])))
	CALL prints([32])
	CALL prints($12)
	CALL prints([688])
	CALL prints([80])
	$15 = (int_64)0
	$13 = (int_64)59
	$12 = [672]
	$14 = (int_64)0
	
.LOOP $label$94:
	$17 = (int_64)0
	if ( ((uint_64)$15 > (uint_64)(int_64)11) ){ goto $label$95 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$97 }
	$4 = ($4 + [165])
	goto $label$96 
	
.LABEL $label$97
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$96
	$17 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$13 & (int_64)4294967295))
	
.LABEL $label$95
	$12 = ($12 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$14 = ((int_64)$17 | (int_64)$14)
	$13 = ((int_64)$13 + (int_64)-5)
	if ( ((int_64)$13 != (int_64)-6) ){ goto $label$94 }
	
.LABEL $label$93
	*($20 + [56]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = CALL asctime(CALL $222(($20 + [56])))
	CALL prints([32])
	CALL prints($12)
	*($20 + [32]) = $14
	CALL $11(($20 + [192]), ($20 + [32]))
	$12 = *($20 + [200])
	$4 = *($20 + [192])
	CALL prints([704])
	CALL prints(( $12 ? (($20 + [192]) | [1]) : ($4 & [1]) ))
	if ( ((*($20 + [192]) & [1]) == 0) ){ goto $label$98 }
	CALL $139(*(($20 + [200])))
	
.LABEL $label$98
	CALL prints([80])
	
.LABEL $label$84
	if ( ((int_64)$14 != (int_64)$1) ){ goto $label$99 }
	CALL prints([176])
	CALL prints([720])
	CALL prints([256])
	CALL eosio_assert([0], [720])
	
.LABEL $label$99
	if ( ((int_64)$14 != (int_64)*($10)) ){ goto $label$100 }
	CALL prints([176])
	CALL prints([752])
	CALL prints([256])
	CALL eosio_assert(((int_64)$14 != (int_64)*($10)), [752])
	
.LABEL $label$100
	if ( (*($9) & [1]) ){ goto $label$102 }
	$12 = ($9 + [1])
	goto $label$101 
	
.LABEL $label$102
	$12 = *($9 + [8])
	
.LABEL $label$101
	if ( CALL strncmp($12, [784], CALL $213([784])) ){ goto $label$1 }
	*($20 + [32]) = $14
	CALL $11(($20 + [192]), ($20 + [32]))
	$12 = *($20 + [200])
	$4 = *($20 + [192])
	CALL prints([704])
	CALL prints(( $12 ? (($20 + [192]) | [1]) : ($4 & [1]) ))
	if ( ((*($20 + [192]) & [1]) == 0) ){ goto $label$103 }
	CALL $139(*(($20 + [200])))
	
.LABEL $label$103
	$6 = (CASTING int_64)(int_32 $11)
	$8 = *($0 + [16])
	$15 = (int_64)0
	$17 = (int_64)59
	$12 = [784]
	$16 = (int_64)0
	
.LOOP $label$104:
	if ( ((uint_64)$15 > (uint_64)(int_64)7) ){ goto $label$109 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$108 }
	$4 = ($4 + [165])
	goto $label$107 
	
.LABEL $label$109
	$13 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$106 }
	goto $label$105 
	
.LABEL $label$108
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$107
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$106
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$105
	$12 = ($12 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$13 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$104 }
	*($20 + [40]) = $16
	*($20 + [32]) = $8
	*(($18 = CALL $138([40])) + [8]) = $16
	*($18) = $8
	*($18 + [16]) = (int_64)-1
	$15 = (int_64)0
	*($18 + [24 align=4]) = (int_64)0
	*($18 + [32]) = [0]
	*($20 + [48]) = $18
	*($20 + [192]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = CALL asctime(CALL $222(($20 + [192])))
	CALL prints([32])
	CALL prints($12)
	$17 = (int_64)59
	$12 = [784]
	$16 = (int_64)0
	
.LOOP $label$110:
	if ( ((uint_64)$15 > (uint_64)(int_64)7) ){ goto $label$115 }
	$4 = *($12)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$114 }
	$4 = ($4 + [165])
	goto $label$113 
	
.LABEL $label$115
	$13 = (int_64)0
	if ( ((uint_64)$15 <= (uint_64)(int_64)11) ){ goto $label$112 }
	goto $label$111 
	
.LABEL $label$114
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$113
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$112
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$17 & (int_64)4294967295))
	
.LABEL $label$111
	$12 = ($12 + [1])
	$15 = ((int_64)$15 + (int_64)1)
	$16 = ((int_64)$13 | (int_64)$16)
	$17 = ((int_64)$17 + (int_64)-5)
	if ( ((int_64)$17 != (int_64)-6) ){ goto $label$110 }
	CALL prints([800])
	CALL printui($16)
	CALL prints([80])
	$10 = *(($18 + [24]))
	$19 = *(($18 + [28]))
	if ( ((int_32)$19 == (int_32)$10) ){ goto $label$116 }
	$12 = ($19 + [-24])
	$9 = ([0] - $10)
	
.LOOP $label$117:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$116 }
	$19 = $12
	$4 = ($12 + [-24])
	$12 = $4
	if ( ((int_32)($4 + $9) != (int_32)[-24]) ){ goto $label$117 }
	
.LABEL $label$116
	if ( ((int_32)$19 == (int_32)$10) ){ goto $label$120 }
	$12 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$18), [816])
	if ( $12 ){ goto $label$119 }
	goto $label$118 
	
.LABEL $label$120
	$12 = CALL db_find_i64(*($18), *($18 + [8]), (int_64)4229596498108612608, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$118 }
	CALL eosio_assert(((int_32)*(CALL $12($18, $12) + [32]) == (int_32)$18), [816])
	
.LABEL $label$119
	CALL prints([176])
	CALL prints([1200])
	CALL prints([256])
	CALL eosio_assert([0], [1200])
	goto $label$2 
	
.LABEL $label$118
	$15 = *($3)
	$10 = *(($18 + [24]))
	$19 = *(($18 + [28]))
	if ( ((int_32)$19 == (int_32)$10) ){ goto $label$121 }
	$12 = ($19 + [-24])
	$9 = ([0] - $10)
	
.LOOP $label$122:
	if ( ((int_64)*(*($12)) == (int_64)$1) ){ goto $label$121 }
	$19 = $12
	$4 = ($12 + [-24])
	$12 = $4
	if ( ((int_32)($4 + $9) != (int_32)[-24]) ){ goto $label$122 }
	
.LABEL $label$121
	if ( ((int_32)$19 == (int_32)$10) ){ goto $label$125 }
	$12 = *(($19 + [-24]))
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$18), [816])
	if ( $12 ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$125
	$12 = CALL db_find_i64(*($18), *($18 + [8]), (int_64)4229596498108612608, $1)
	if ( ((int_32)$12 < (int_32)[0]) ){ goto $label$123 }
	$12 = CALL $12($18, $12)
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$18), [816])
	
.LABEL $label$124
	CALL eosio_assert([1], [960])
	CALL eosio_assert(((int_32)*($12 + [32]) == (int_32)$18), [1008])
	CALL eosio_assert(((int_64)*($18) == (int_64)CALL $fimport$13()), [1056])
	*($12 + [8]) = $15
	*($12 + [16]) = $6
	*($12 + [24]) = $14
	$14 = *($12)
	*($12) = $1
	CALL eosio_assert(((int_64)$14 == (int_64)$1), [1120])
	CALL eosio_assert([1], [944])
	CALL memcpy(($20 + [192]), $12, [8])
	CALL eosio_assert([1], [944])
	CALL memcpy((($20 + [192]) | [8]), ($12 + [8]), [8])
	CALL eosio_assert([1], [944])
	CALL memcpy((($20 + [192]) + [16]), ($12 + [16]), [8])
	CALL eosio_assert([1], [944])
	CALL memcpy((($20 + [192]) + [24]), ($12 + [24]), [8])
	CALL db_update_i64(*($12 + [36]), (int_64)0, ($20 + [192]), [32])
	if ( (uint_64)($14 <= *($18 + [16])) ){ goto $label$3 }
	*(($18 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	goto $label$3 
	
.LABEL $label$123
	CALL eosio_assert(((int_64)*($18) == (int_64)CALL $fimport$13()), [880])
	*(($19 = CALL $138([48])) + [32]) = $18
	*($19 + [8]) = $15
	*($19) = $1
	*($19 + [16]) = $6
	*($19 + [24]) = $14
	CALL eosio_assert([1], [944])
	CALL memcpy(($20 + [192]), $19, [8])
	CALL eosio_assert([1], [944])
	CALL memcpy((($20 + [192]) | [8]), ($19 + [8]), [8])
	CALL eosio_assert([1], [944])
	CALL memcpy((($20 + [192]) + [16]), ($19 + [16]), [8])
	CALL eosio_assert([1], [944])
	CALL memcpy((($20 + [192]) + [24]), ($19 + [24]), [8])
	$14 = *($19)
	$9 = CALL db_store_i64(*(($18 + [8])), (int_64)4229596498108612608, $8, $14, ($20 + [192]), [32])
	*($19 + [36]) = $9
	if ( (uint_64)($14 <= *($18 + [16])) ){ goto $label$126 }
	*(($18 + [16])) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$126
	$14 = *($19)
	$5 = *($18 + [32])
	$4 = ($18 + [28])
	$12 = *($4)
	if ( ((uint_32)$12 >= (uint_32)$5) ){ goto $label$127 }
	*($12 + [8]) = $14
	*($12) = $19
	*($12 + [16]) = $9
	*($4) = ($12 + [24])
	goto $label$3 
	
.LABEL $label$127
	$11 = ($18 + [24])
	$10 = *($11)
	$4 = ((int_32)($12 - $10) / (int_32)[24])
	$0 = ($4 + [1])
	if ( ((uint_32)$0 >= (uint_32)[178956971]) ){ goto $label$5 }
	$11 = [178956970]
	$5 = ((int_32)($5 - $10) / (int_32)[24])
	if ( ((uint_32)$5 > (uint_32)[89478484]) ){ goto $label$129 }
	$11 = ($5 << [1])
	$11 = ( $0 ? $11 : ($11 <= $0) )
	if ( ($11 == 0) ){ goto $label$128 }
	
.LABEL $label$129
	$5 = CALL $138(((int_32)$11 * (int_32)[24]))
	$12 = *(($18 + [28]))
	$10 = *(($18 + [24]))
	goto $label$4 
	
.LABEL $label$128
	$11 = [0]
	$5 = [0]
	goto $label$4 
	
.LABEL $label$46
	CALL $140(($20 + [144]))
	
.LABEL $label$42
	CALL $140(($20 + [160]))
	
.LABEL $label$41
	CALL $140(($20 + [80]))
	
.LABEL $label$6
	*($20 + [192]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	*($20 + [120]) = CALL asctime(CALL $222(($20 + [192])))
	CALL $4([32], ($20 + [120]))
	CALL $6([144], $3)
	CALL prints([80])
	CALL _ZN10msContract13commitAndExitEy($20, (int_64)1)
	
.LABEL $label$5
	CALL $159($11)
	
.LABEL $label$4
	*(($4 = ($5 + ((int_32)$4 * (int_32)[24]))) + [8]) = $14
	*($4) = $19
	*($4 + [16]) = $9
	$11 = ($5 + ((int_32)$11 * (int_32)[24]))
	$5 = ($4 + [24])
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$131 }
	
.LOOP $label$132:
	$19 = ($12 + [-24])
	$9 = *($19)
	*($19) = [0]
	*(($4 + [-24])) = $9
	*(($4 + [-8])) = *(($12 + [-8]))
	*(($4 + [-12])) = *(($12 + [-12]))
	*(($4 + [-16])) = *(($12 + [-16]))
	$4 = ($4 + [-24])
	$12 = $19
	if ( ((int_32)$10 != (int_32)$19) ){ goto $label$132 }
	$12 = *(($18 + [28]))
	$19 = *(($18 + [24]))
	goto $label$130 
	
.LABEL $label$131
	$19 = $12
	
.LABEL $label$130
	*(($18 + [28])) = $5
	*(($18 + [24])) = $4
	*(($18 + [32])) = $11
	if ( ((int_32)$12 == (int_32)$19) ){ goto $label$133 }
	
.LOOP $label$134:
	$12 = ($12 + [-24])
	$4 = *($12)
	*($12) = [0]
	if ( ($4 == 0) ){ goto $label$135 }
	CALL $139($4)
	
.LABEL $label$135
	if ( ((int_32)$19 != (int_32)$12) ){ goto $label$134 }
	
.LABEL $label$133
	if ( ($19 == 0) ){ goto $label$3 }
	CALL $139($19)
	
.LABEL $label$3
	*($20 + [192]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$12 = CALL asctime(CALL $222(($20 + [192])))
	CALL prints([32])
	CALL prints($12)
	CALL prints([1184])
	CALL printi(*($3))
	CALL prints([80])
	
.LABEL $label$2
	CALL $13(($20 + [192]), ($20 + [32]), $1)
	if ( ((int_64)*($20 + [200]) < (int_64)50001) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([1216])
	CALL prints([256])
	CALL $13(($20 + [192]), ($20 + [32]), $1)
	CALL eosio_assert(((int_64)*($20 + [200]) < (int_64)50001), [1216])
	
.LABEL $label$1
	if ( ((*($20 + [160]) & [1]) == 0) ){ goto $label$136 }
	CALL $139(*(($20 + [168])))
	
.LABEL $label$136
	$18 = *($20 + [176])
	if ( ($18 == 0) ){ goto $label$137 }
	$12 = *($20 + [180])
	if ( ((int_32)$12 == (int_32)$18) ){ goto $label$139 }
	$4 = ([0] - $18)
	$12 = ($12 + [-12])
	
.LOOP $label$140:
	if ( ((*($12) & [1]) == 0) ){ goto $label$141 }
	CALL $139(*(($12 + [8])))
	
.LABEL $label$141
	$12 = ($12 + [-12])
	if ( ((int_32)($12 + $4) != (int_32)[-12]) ){ goto $label$140 }
	$12 = *($20 + [176])
	goto $label$138 
	
.LABEL $label$139
	$12 = $18
	
.LABEL $label$138
	*($20 + [180]) = $18
	CALL $139($12)
	
.LABEL $label$137
	*([0] + [4]) = ($20 + [224])
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $43 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$2 = *($0 + [20])
	if ( ((uint_32)$2 >= (uint_32)$1) ){ goto $label$2 }
	$9 = [0]
	$7 = $2
	$8 = *($0 + [16])
	$6 = *($0 + [4])
	$5 = *($0 + [8])
	$8 = ($5 - $6)
	$4 = (( (($8 << [6]) + [-1]) ? [0] : $8 ) - ($2 + $8))
	$3 = ($1 - $2)
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$3 }
	CALL $50($0, ($3 - $4))
	$5 = *(($0 + [8]))
	$6 = *(($0 + [4]))
	$8 = *(($0 + [16]))
	$7 = *(($0 + [20]))
	
.LABEL $label$3
	$4 = ($7 + $8)
	$8 = ($6 + (uint_32($4 >> [6]) & [67108860]))
	if ( ((int_32)$5 == (int_32)$6) ){ goto $label$4 }
	$9 = (*($8) + (($4 & [255]) << [4]))
	
.LABEL $label$4
	if ( ($3 == 0) ){ goto $label$1 }
	$1 = ($2 - $1)
	
.LOOP $label$5:
	*($9 + [8]) = [0]
	*($9) = [0]
	$9 = ($9 + [16])
	if ( ((int_32)($9 - *($8)) != (int_32)[4096]) ){ goto $label$6 }
	$9 = *($8 + [4])
	$8 = ($8 + [4])
	
.LABEL $label$6
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$5 }
	*(($0 + [20])) = ($7 + $3)
	goto $label$1 
	
.LABEL $label$2
	if ( ((uint_32)$2 <= (uint_32)$1) ){ goto $label$1 }
	$2 = *($0 + [16])
	$8 = *($0 + [4])
	$9 = ($8 + (uint_32($2 >> [6]) & [67108860]))
	if ( ((int_32)*($0 + [8]) == (int_32)$8) ){ goto $label$9 }
	$8 = (*($9) + (($2 & [255]) << [4]))
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$8 = [0]
	if ( ($1 == 0) ){ goto $label$7 }
	
.LABEL $label$8
	$8 = (int_32(($8 - *($9)) >> [4]) + $1)
	if ( ((int_32)$8 < (int_32)[1]) ){ goto $label$10 }
	$9 = ($9 + (uint_32($8 >> [6]) & [67108860]))
	$8 = (*($9) + (($8 & [255]) << [4]))
	goto $label$7 
	
.LABEL $label$10
	$8 = ([255] - $8)
	$9 = ($9 + (((int_32)$8 / (int_32)[-256]) << [2]))
	$8 = (*($9) + (([255] - ((int_32)$8 % (int_32)[256])) << [4]))
	
.LABEL $label$7
	*($10 + [12]) = $8
	*($10 + [8]) = $9
	*($10) = *($10 + [8])
	CALL $57($0, $10)
	
.LABEL $label$1
	*([0] + [4]) = ($10 + [16])
}

void .FUNC $42 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_64 $13
	int_32 $14
	float_64 $15
	int_32 $16
	$16 = (*([0] + [4]) - [96])
	*([0] + [4]) = $16
	$3 = ($1 + [1])
	if ( (CALL isspace(*((( *($1 + [8]) ? $3 : (*($1) & [1]) ) + *($2)))) == 0) ){ goto $label$1 }
	$9 = ($1 + [8])
	
.LOOP $label$2:
	$8 = (*($2) + [1])
	*($2) = $8
	if ( CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $8))) ){ goto $label$2 }
	
.LABEL $label$1
	$8 = *($2)
	$14 = *((( *(($1 + [8])) ? $3 : (*($1) & [1]) ) + $8))
	$9 = ($14 + [-91])
	if ( ((uint_32)$9 > (uint_32)[32]) ){ goto $label$39 }
	goto $label$37 
	
.LABEL $label$40
	$9 = [0]
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	CALL $167(($16 + [64]), $1, $8, [4], $1)
	$3 = *($16 + [64])
	$8 = CALL strlen([1728])
	if ( ((int_32)$8 != (int_32)( *($16 + [68]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$41 }
	$9 = (CALL $151(($16 + [64]), [0], [-1], [1728], $8) == 0)
	$3 = *($16 + [64])
	
.LABEL $label$41
	if ( (($3 & [1]) == 0) ){ goto $label$42 }
	CALL $139(*($16 + [72]))
	
.LABEL $label$42
	if ( ($9 == 0) ){ goto $label$34 }
	$1 = [1]
	$3 = ($16 + [88])
	if ( ((int_32)*($3) == (int_32)[6]) ){ goto $label$33 }
	CALL $30(($16 + [80]))
	*($3) = [6]
	*($16 + [80]) = [0]
	goto $label$33 
	
.LABEL $label$39
	if ( ((int_32)$14 != (int_32)[34]) ){ goto $label$38 }
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	*($16 + [56]) = [0]
	*($16 + [48]) = (int_64)0
	$14 = ($1 + [8])
	
.LOOP $label$43:
	$9 = ($8 + [1])
	*($2) = $9
	$9 = *((( *($14) ? $3 : (*($1) & [1]) ) + $9))
	if ( ((int_32)$9 == (int_32)[92]) ){ goto $label$45 }
	if ( ((int_32)$9 == (int_32)[34]) ){ goto $label$32 }
	CALL $145(($16 + [48]), int_32(($9 << [24]) >> [24]))
	goto $label$44 
	
.LABEL $label$45
	$8 = ($8 + [2])
	*($2) = $8
	$8 = (*((( *($14) ? $3 : (*($1) & [1]) ) + $8)) + [-34])
	if ( ((uint_32)$8 > (uint_32)[83]) ){ goto $label$49 }
	goto $label$55 
	
.LABEL $label$55
	CALL $145(($16 + [48]), [34])
	goto $label$44 
	
.LABEL $label$54
	CALL $145(($16 + [48]), [47])
	goto $label$44 
	
.LABEL $label$53
	CALL $145(($16 + [48]), [92])
	goto $label$44 
	
.LABEL $label$52
	CALL $145(($16 + [48]), [10])
	goto $label$44 
	
.LABEL $label$51
	CALL $145(($16 + [48]), [13])
	goto $label$44 
	
.LABEL $label$50
	CALL $145(($16 + [48]), [9])
	goto $label$44 
	
.LABEL $label$49
	CALL $145(($16 + [48]), [92])
	goto $label$44 
	
.LABEL $label$48
	CALL $145(($16 + [48]), [8])
	goto $label$44 
	
.LABEL $label$47
	CALL $145(($16 + [48]), [12])
	goto $label$44 
	
.LABEL $label$46
	CALL $144(($16 + [48]), [2032])
	$8 = *(((( *($14) ? $3 : (*($1) & [1]) ) + *($2)) + [1]))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$56 }
	if ( (($8 + [-97]) <= [6]) ){ goto $label$56 }
	if ( ((uint_32)($8 + [-65]) > (uint_32)[5]) ){ goto $label$28 }
	
.LABEL $label$56
	CALL $145(($16 + [48]), int_32(($8 << [24]) >> [24]))
	$8 = *(((( *($14) ? $3 : (*($1) & [1]) ) + *($2)) + [2]))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$57 }
	if ( (($8 + [-97]) <= [6]) ){ goto $label$57 }
	if ( ((uint_32)($8 + [-65]) > (uint_32)[5]) ){ goto $label$28 }
	
.LABEL $label$57
	CALL $145(($16 + [48]), int_32(($8 << [24]) >> [24]))
	$8 = *(((( *($14) ? $3 : (*($1) & [1]) ) + *($2)) + [3]))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$58 }
	if ( (($8 + [-97]) <= [6]) ){ goto $label$58 }
	if ( ((uint_32)($8 + [-65]) > (uint_32)[5]) ){ goto $label$28 }
	
.LABEL $label$58
	CALL $145(($16 + [48]), int_32(($8 << [24]) >> [24]))
	$8 = *(((( *($14) ? $3 : (*($1) & [1]) ) + *($2)) + [4]))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$59 }
	if ( (($8 + [-97]) <= [6]) ){ goto $label$59 }
	if ( ((uint_32)($8 + [-65]) > (uint_32)[5]) ){ goto $label$28 }
	
.LABEL $label$59
	CALL $145(($16 + [48]), int_32(($8 << [24]) >> [24]))
	*($2) = (*($2) + [4])
	
.LABEL $label$44
	$8 = *($2)
	goto $label$43 
	
.LABEL $label$38
	if ( ((int_32)$14 == (int_32)[45]) ){ goto $label$31 }
	if ( ((uint_32)(($14 + [-48]) & [255]) <= (uint_32)[9]) ){ goto $label$31 }
	*(($16 + [88])) = [0]
	*($16 + [80]) = (int_64)0
	$2 = CALL strlen([2352])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$29 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$24 }
	*($16 + [80]) = ($2 << [1])
	$3 = (($16 + [80]) | [1])
	$1 = $3
	if ( $2 ){ goto $label$23 }
	goto $label$22 
	
.LABEL $label$37
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	CALL $30(($16 + [80]))
	*(($8 = CALL $138([24]))) = (int_64)0
	*($8 + [8 align=4]) = (int_64)0
	*($8 + [16 align=4]) = (int_64)0
	$14 = (*($2) + [1])
	*($2) = $14
	*($16 + [80]) = $8
	*($16 + [88]) = [2]
	$9 = ($1 + [8])
	if ( (CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $14))) == 0) ){ goto $label$60 }
	
.LOOP $label$61:
	$8 = (*($2) + [1])
	*($2) = $8
	if ( CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $8))) ){ goto $label$61 }
	
.LABEL $label$60
	$8 = *($2)
	if ( ((int_32)*((( *($9) ? $3 : (*($1) & [1]) ) + $8)) != (int_32)[93]) ){ goto $label$9 }
	*($2) = ($8 + [1])
	$1 = ($16 + [88])
	$2 = *($1)
	*($16 + [40]) = $2
	*($1) = [0]
	$13 = *($16 + [80])
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	goto $label$8 
	
.LABEL $label$36
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	CALL $167(($16 + [64]), $1, $8, [4], $1)
	$8 = [1]
	$3 = *($16 + [64])
	$9 = CALL strlen([1584])
	if ( ((int_32)$9 != (int_32)( *($16 + [68]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$62 }
	$8 = ((int_32)CALL $151(($16 + [64]), [0], [-1], [1584], $9) != (int_32)[0])
	$3 = *($16 + [64])
	
.LABEL $label$62
	if ( (($3 & [1]) == 0) ){ goto $label$63 }
	CALL $139(*($16 + [72]))
	
.LABEL $label$63
	if ( ($8 == 0) ){ goto $label$11 }
	*(($16 + [56])) = [0]
	*($16 + [48]) = (int_64)0
	$3 = CALL strlen([2192])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$30 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$27 }
	*($16 + [48]) = ($3 << [1])
	$8 = (($16 + [48]) | [1])
	if ( $3 ){ goto $label$26 }
	goto $label$25 
	
.LABEL $label$35
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	CALL $30(($16 + [80]))
	*(($8 = CALL $138([12])) + [8]) = [0]
	*($8 + [4]) = [0]
	*($8) = ($8 + [4])
	*($16 + [88]) = [1]
	$14 = (*($2) + [1])
	*($2) = $14
	*($16 + [80]) = $8
	$9 = ($1 + [8])
	if ( (CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $14))) == 0) ){ goto $label$64 }
	
.LOOP $label$65:
	$8 = (*($2) + [1])
	*($2) = $8
	if ( CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $8))) ){ goto $label$65 }
	
.LABEL $label$64
	$8 = *($2)
	if ( ((int_32)*((( *($9) ? $3 : (*($1) & [1]) ) + $8)) != (int_32)[125]) ){ goto $label$15 }
	*($2) = ($8 + [1])
	goto $label$14 
	
.LABEL $label$34
	CALL $167(($16 + [64]), $1, *($2), [5], $1)
	$8 = [0]
	$3 = *($16 + [64])
	$9 = CALL strlen([1744])
	if ( ((int_32)$9 != (int_32)( *($16 + [68]) ? uint_32($3 >> [1]) : ($3 & [1]) )) ){ goto $label$66 }
	$8 = (CALL $151(($16 + [64]), [0], [-1], [1744], $9) == 0)
	$3 = *($16 + [64])
	
.LABEL $label$66
	if ( (($3 & [1]) == 0) ){ goto $label$67 }
	CALL $139(*($16 + [72]))
	
.LABEL $label$67
	if ( ($8 == 0) ){ goto $label$18 }
	$1 = [0]
	$3 = ($16 + [88])
	if ( ((int_32)*($3) == (int_32)[6]) ){ goto $label$33 }
	CALL $30(($16 + [80]))
	*($3) = [6]
	$1 = [0]
	*($16 + [80]) = [0]
	
.LABEL $label$33
	$3 = [6]
	*($16 + [40]) = [6]
	*(($16 + [88])) = [0]
	*($16 + [80]) = $1
	*($2) = (( [4] ? [5] : $1 ) + *($2))
	$13 = *($16 + [80])
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	goto $label$17 
	
.LABEL $label$32
	*($2) = ($8 + [2])
	CALL $166(($16 + [16]), ($16 + [48]))
	$2 = ($16 + [88])
	if ( ((int_32)*($2) == (int_32)[3]) ){ goto $label$68 }
	CALL $30(($16 + [80]))
	*(($1 = CALL $138([12])) + [8]) = [0]
	*($1) = (int_64)0
	*($2) = [3]
	*($16 + [80]) = $1
	
.LABEL $label$68
	CALL $166(($16 + [64]), ($16 + [16]))
	$2 = *($16 + [80])
	if ( (*($2) & [1]) ){ goto $label$21 }
	*($2) = [0]
	goto $label$20 
	
.LABEL $label$31
	$5 = [0]
	*($16 + [88]) = [0]
	*($16 + [80]) = [0]
	*($16 + [56]) = [0]
	*($16 + [48]) = (int_64)0
	*($16 + [24]) = [0]
	*($16 + [16]) = (int_64)0
	$11 = ($1 + [8])
	
.LOOP $label$70:
	$14 = ($8 + [1])
	*($2) = $14
	$8 = *((( *($11) ? $3 : (*($1) & [1]) ) + $8))
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$72 }
	if ( ((uint_32)(($8 + [-48]) & [255]) <= (uint_32)[9]) ){ goto $label$72 }
	$9 = int_32(($8 << [24]) >> [24])
	if ( ((int_32)$8 == (int_32)[46]) ){ goto $label$71 }
	goto $label$69 
	
.LABEL $label$72
	
.LOOP $label$73:
	CALL $145(($16 + [48]), int_32(($8 << [24]) >> [24]))
	$8 = *($2)
	$14 = ($8 + [1])
	*($2) = $14
	$8 = *(($8 + ( *($11) ? $3 : (*($1) & [1]) )))
	$9 = ($8 + [-48])
	if ( ((int_32)$8 == (int_32)[45]) ){ goto $label$73 }
	if ( (($9 & [255]) <= [10]) ){ goto $label$73 }
	$9 = int_32(($8 << [24]) >> [24])
	if ( ((int_32)$8 != (int_32)[46]) ){ goto $label$69 }
	
.LABEL $label$71
	CALL $145(($16 + [48]), [46])
	$8 = *($2)
	$5 = [1]
	goto $label$70 
	
.LABEL $label$69
	if ( ((int_32)$8 == (int_32)[69]) ){ goto $label$84 }
	if ( ((int_32)$8 != (int_32)[101]) ){ goto $label$83 }
	
.LABEL $label$84
	$8 = ($14 + [1])
	*($2) = $8
	$9 = ($1 + [8])
	if ( ((int_32)*((( *($9) ? $3 : (*($1) & [1]) ) + $14)) != (int_32)[45]) ){ goto $label$85 }
	*($2) = ($14 + [2])
	CALL $145(($16 + [16]), [45])
	$8 = *($2)
	
.LABEL $label$85
	*($2) = ($8 + [1])
	$8 = *((( *($9) ? $3 : (*($1) & [1]) ) + $8))
	if ( ((uint_32)(($8 + [-48]) & [255]) > (uint_32)[9]) ){ goto $label$86 }
	$9 = ($1 + [8])
	
.LOOP $label$87:
	CALL $145(($16 + [16]), int_32(($8 << [24]) >> [24]))
	$8 = *($2)
	*($2) = ($8 + [1])
	$8 = *(($8 + ( *($9) ? $3 : (*($1) & [1]) )))
	if ( ((($8 + [-48]) & [255]) <= [10]) ){ goto $label$87 }
	
.LABEL $label$86
	if ( (CALL isspace(int_32(($8 << [24]) >> [24])) == 0) ){ goto $label$82 }
	goto $label$6 
	
.LABEL $label$83
	$15 = (float_64)0
	if ( (CALL isspace($9) == 0) ){ goto $label$81 }
	goto $label$5 
	
.LABEL $label$82
	$1 = ($8 & [255])
	if ( ((int_32)$1 == (int_32)[44]) ){ goto $label$6 }
	if ( ((int_32)$1 == (int_32)[93]) ){ goto $label$6 }
	if ( ((int_32)$1 == (int_32)[125]) ){ goto $label$6 }
	*(($16 + [8])) = [0]
	*($16) = (int_64)0
	$2 = CALL strlen([2240])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$74 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$80 }
	*($16) = ($2 << [1])
	$3 = ($16 | [1])
	$1 = $3
	if ( $2 ){ goto $label$79 }
	goto $label$78 
	
.LABEL $label$81
	if ( ((int_32)$8 == (int_32)[44]) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)[93]) ){ goto $label$5 }
	if ( ((int_32)$8 == (int_32)[125]) ){ goto $label$5 }
	*(($16 + [8])) = [0]
	*($16) = (int_64)0
	$2 = CALL strlen([2304])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$74 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$77 }
	*($16) = ($2 << [1])
	$3 = ($16 | [1])
	$1 = $3
	if ( $2 ){ goto $label$76 }
	goto $label$75 
	
.LABEL $label$80
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $138($3)
	*($16) = ($3 | [1])
	*($16 + [8]) = $1
	*($16 + [4]) = $2
	$3 = ($16 | [1])
	
.LABEL $label$79
	CALL memcpy($1, [2240], $2)
	
.LABEL $label$78
	*(($1 + $2)) = [0]
	CALL $145($16, int_32(($8 << [24]) >> [24]))
	CALL $144($16, [1920])
	CALL prints([176])
	CALL prints(( *($16 + [8]) ? $3 : (*($16) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [8]) ? $3 : (*($16) & [1]) ))
	*($16 + [64]) = [0]
	*($16 + [40]) = [0]
	*($16 + [32]) = *($16 + [64])
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $31(($16 + [64]))
	if ( ((*($16) & [1]) == 0) ){ goto $label$4 }
	CALL $139(*(($16 + [8])))
	goto $label$4 
	
.LABEL $label$77
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $138($3)
	*($16) = ($3 | [1])
	*($16 + [8]) = $1
	*($16 + [4]) = $2
	$3 = ($16 | [1])
	
.LABEL $label$76
	CALL memcpy($1, [2304], $2)
	
.LABEL $label$75
	*(($1 + $2)) = [0]
	CALL $145($16, int_32(($8 << [24]) >> [24]))
	CALL $144($16, [1920])
	CALL prints([176])
	CALL prints(( *($16 + [8]) ? $3 : (*($16) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [8]) ? $3 : (*($16) & [1]) ))
	*($16 + [64]) = [0]
	*($16 + [40]) = [0]
	*($16 + [32]) = *($16 + [64])
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $31(($16 + [64]))
	if ( ((*($16) & [1]) == 0) ){ goto $label$4 }
	CALL $139(*(($16 + [8])))
	goto $label$4 
	
.LABEL $label$74
	CALL $140($16)
	
.LABEL $label$30
	CALL $140(($16 + [48]))
	
.LABEL $label$29
	CALL $140(($16 + [80]))
	
.LABEL $label$28
	*(($16 + [24])) = [0]
	*($16 + [16]) = (int_64)0
	$2 = CALL strlen([2048])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$88 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$91 }
	*($16 + [16]) = ($2 << [1])
	$3 = (($16 + [16]) | [1])
	$1 = $3
	if ( $2 ){ goto $label$90 }
	goto $label$89 
	
.LABEL $label$91
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $138($3)
	*($16 + [16]) = ($3 | [1])
	*($16 + [24]) = $1
	*($16 + [20]) = $2
	$3 = (($16 + [16]) | [1])
	
.LABEL $label$90
	CALL memcpy($1, [2048], $2)
	
.LABEL $label$89
	*(($1 + $2)) = [0]
	CALL $145(($16 + [16]), int_32(($8 << [24]) >> [24]))
	CALL $144(($16 + [16]), [1920])
	CALL prints([176])
	CALL prints(( *($16 + [24]) ? $3 : (*($16 + [16]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [24]) ? $3 : (*($16 + [16]) & [1]) ))
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $30(($16 + [64]))
	*(($2 = CALL $138([12])) + [8]) = [0]
	*($2) = (int_64)0
	*($16 + [64]) = $2
	*($16 + [32]) = *($16 + [64])
	*($16 + [40]) = [3]
	*($16 + [64]) = [0]
	*($16 + [72]) = [0]
	CALL $31(($16 + [64]))
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$19 }
	CALL $139(*(($16 + [24])))
	goto $label$19 
	
.LABEL $label$88
	CALL $140(($16 + [16]))
	
.LABEL $label$27
	$9 = (($3 + [16]) & [-16])
	$8 = CALL $138($9)
	*($16 + [48]) = ($9 | [1])
	*($16 + [56]) = $8
	*($16 + [52]) = $3
	
.LABEL $label$26
	CALL memcpy($8, [2192], $3)
	
.LABEL $label$25
	*(($8 + $3)) = [0]
	CALL $167(($16 + [64]), $1, *($2), [4], $1)
	$2 = *($16 + [64])
	$1 = ($2 & [1])
	CALL $142(($16 + [48]), ( *($16 + [72]) ? (($16 + [64]) | [1]) : $1 ), ( *($16 + [68]) ? uint_32($2 >> [1]) : $1 ))
	if ( ((*($16 + [64]) & [1]) == 0) ){ goto $label$92 }
	CALL $139(*(($16 + [72])))
	
.LABEL $label$92
	CALL $144(($16 + [48]), [1920])
	CALL prints([176])
	$2 = (($16 + [48]) | [1])
	CALL prints(( *($16 + [56]) ? $2 : (*($16 + [48]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [56]) ? $2 : (*($16 + [48]) & [1]) ))
	*($16 + [64]) = [0]
	*($16 + [40]) = [0]
	*($16 + [32]) = *($16 + [64])
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $31(($16 + [64]))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$93 }
	CALL $139(*(($16 + [56])))
	
.LABEL $label$93
	$2 = *(($16 + [40]))
	$13 = *($16 + [32])
	goto $label$10 
	
.LABEL $label$24
	$3 = (($2 + [16]) & [-16])
	$1 = CALL $138($3)
	*($16 + [80]) = ($3 | [1])
	*($16 + [88]) = $1
	*($16 + [84]) = $2
	$3 = (($16 + [80]) | [1])
	
.LABEL $label$23
	CALL memcpy($1, [2352], $2)
	
.LABEL $label$22
	*(($1 + $2)) = [0]
	CALL $145(($16 + [80]), $14)
	CALL $144(($16 + [80]), [1920])
	CALL prints([176])
	CALL prints(( *($16 + [88]) ? $3 : (*($16 + [80]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [88]) ? $3 : (*($16 + [80]) & [1]) ))
	*($0 + [8]) = [0]
	*($0) = [0]
	if ( ((*($16 + [80]) & [1]) == 0) ){ goto $label$3 }
	CALL $139(*(($16 + [88])))
	goto $label$3 
	
.LABEL $label$21
	*(*($2 + [8])) = [0]
	*($2 + [4]) = [0]
	
.LABEL $label$20
	CALL $141($2, [0])
	*(($2 + [8])) = *((($16 + [64]) + [8]))
	*($2) = *($16 + [64])
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$94 }
	CALL $139(*($16 + [24]))
	
.LABEL $label$94
	$2 = (($16 + [80]) + [8])
	*($16 + [40]) = *($2)
	*($2) = [0]
	*($16 + [32]) = *($16 + [80])
	*($16 + [80]) = [0]
	
.LABEL $label$19
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$95 }
	CALL $139(*(($16 + [56])))
	
.LABEL $label$95
	CALL $31(($16 + [80]))
	*($0) = *($16 + [32])
	*($0 + [8]) = *($16 + [40])
	*($16 + [40]) = [0]
	*($16 + [32]) = [0]
	CALL $31(($16 + [32]))
	goto $label$3 
	
.LABEL $label$18
	*(($16 + [56])) = [0]
	*($16 + [48]) = (int_64)0
	$3 = CALL strlen([2128])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$16 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$98 }
	*($16 + [48]) = ($3 << [1])
	$8 = (($16 + [48]) | [1])
	if ( $3 ){ goto $label$97 }
	goto $label$96 
	
.LABEL $label$98
	$9 = (($3 + [16]) & [-16])
	$8 = CALL $138($9)
	*($16 + [48]) = ($9 | [1])
	*($16 + [56]) = $8
	*($16 + [52]) = $3
	
.LABEL $label$97
	CALL memcpy($8, [2128], $3)
	
.LABEL $label$96
	*(($8 + $3)) = [0]
	CALL $167(($16 + [64]), $1, *($2), [5], $1)
	$2 = *($16 + [64])
	$1 = ($2 & [1])
	CALL $142(($16 + [48]), ( *($16 + [72]) ? (($16 + [64]) | [1]) : $1 ), ( *($16 + [68]) ? uint_32($2 >> [1]) : $1 ))
	if ( ((*($16 + [64]) & [1]) == 0) ){ goto $label$99 }
	CALL $139(*(($16 + [72])))
	
.LABEL $label$99
	CALL $144(($16 + [48]), [1920])
	CALL prints([176])
	$2 = (($16 + [48]) | [1])
	CALL prints(( *($16 + [56]) ? $2 : (*($16 + [48]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [56]) ? $2 : (*($16 + [48]) & [1]) ))
	*($16 + [64]) = [0]
	*($16 + [40]) = [0]
	*($16 + [32]) = *($16 + [64])
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $31(($16 + [64]))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$100 }
	CALL $139(*(($16 + [56])))
	
.LABEL $label$100
	$3 = *(($16 + [40]))
	$13 = *($16 + [32])
	
.LABEL $label$17
	CALL $31(($16 + [80]))
	*($0 + [8]) = $3
	*($0) = $13
	*(($16 + [40])) = [0]
	*($16 + [32]) = [0]
	CALL $31(($16 + [32]))
	goto $label$3 
	
.LABEL $label$16
	CALL $140(($16 + [48]))
	
.LABEL $label$15
	$5 = (($16 + [32]) | [1])
	$4 = (($16 + [48]) | [1])
	$8 = ($1 + [8])
	
.LOOP $label$101:
	CALL $42(($16 + [64]), $1, $2)
	if ( (CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + *($2)))) == 0) ){ goto $label$102 }
	
.LOOP $label$103:
	$9 = (*($2) + [1])
	*($2) = $9
	if ( CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + $9))) ){ goto $label$103 }
	
.LABEL $label$102
	$9 = *($2)
	if ( ((int_32)*((( *($8) ? $3 : (*($1) & [1]) ) + $9)) != (int_32)[58]) ){ goto $label$114 }
	$9 = ($9 + [1])
	*($2) = $9
	if ( (CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + $9))) == 0) ){ goto $label$115 }
	
.LOOP $label$116:
	$9 = (*($2) + [1])
	*($2) = $9
	if ( CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + $9))) ){ goto $label$116 }
	
.LABEL $label$115
	CALL $42(($16 + [32]), $1, $2)
	CALL $44(($16 + [48]), ($16 + [64]), $16)
	$11 = (($16 + [48]) + [8])
	*(($10 = (($16 + [16]) + [8]))) = *($11)
	*($16 + [16]) = *($16 + [48])
	$14 = (($16 + [80]) + [8])
	if ( ((int_32)*($14) != (int_32)[1]) ){ goto $label$113 }
	$9 = *($16 + [80])
	goto $label$112 
	
.LABEL $label$114
	*(($14 = (($16 + [32]) + [8]))) = [0]
	*($16 + [32]) = (int_64)0
	$9 = CALL strlen([1936])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$13 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$111 }
	*($16 + [32]) = ($9 << [1])
	$11 = $5
	if ( $9 ){ goto $label$110 }
	goto $label$109 
	
.LABEL $label$113
	CALL $30(($16 + [80]))
	*(($9 = CALL $138([12])) + [8]) = [0]
	*($9 + [4]) = [0]
	*($14) = [1]
	*($9) = ($9 + [4])
	*($16 + [80]) = $9
	
.LABEL $label$112
	$6 = CALL $45($9, ($16 + [48]), ($16 + [16]))
	$14 = *($6)
	if ( $14 ){ goto $label$117 }
	$14 = CALL $138([48])
	CALL $166(($14 + [16]), ($16 + [16]))
	*($14) = (int_64)0
	*($14 + [8]) = *($16 + [48])
	*($6) = $14
	*($14 + [40]) = [0]
	*($14 + [32]) = [0]
	$12 = $14
	$7 = *(*($9))
	if ( ($7 == 0) ){ goto $label$118 }
	*($9) = $7
	$12 = *($6)
	
.LABEL $label$118
	CALL $46(*($9 + [4]), $12)
	*($9 + [8]) = (*($9 + [8]) + [1])
	
.LABEL $label$117
	CALL $47(($14 + [32]), ($16 + [32]))
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$119 }
	CALL $139(*($10))
	
.LABEL $label$119
	if ( (CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + *($2)))) == 0) ){ goto $label$120 }
	
.LOOP $label$121:
	$9 = (*($2) + [1])
	*($2) = $9
	if ( CALL isspace(*((( *($8) ? $3 : (*($1) & [1]) ) + $9))) ){ goto $label$121 }
	
.LABEL $label$120
	$9 = *($2)
	$14 = *((( *($8) ? $3 : (*($1) & [1]) ) + $9))
	if ( ((int_32)$14 == (int_32)[125]) ){ goto $label$108 }
	if ( ((int_32)$14 != (int_32)[44]) ){ goto $label$107 }
	*($2) = ($9 + [1])
	$9 = [2]
	goto $label$105 
	
.LABEL $label$111
	$6 = (($9 + [16]) & [-16])
	$11 = CALL $138($6)
	*($14) = $11
	*($16 + [32]) = ($6 | [1])
	*($16 + [36]) = $9
	
.LABEL $label$110
	CALL memcpy($11, [1936], $9)
	
.LABEL $label$109
	*(($11 + $9)) = [0]
	CALL $145(($16 + [32]), *((( *($8) ? $3 : (*($1) & [1]) ) + *($2))))
	CALL $144(($16 + [32]), [1920])
	CALL prints([176])
	CALL prints(( *($14) ? $5 : (*($16 + [32]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($14) ? $5 : (*($16 + [32]) & [1]) ))
	if ( ((*($16 + [32]) & [1]) == 0) ){ goto $label$122 }
	CALL $139(*($14))
	
.LABEL $label$122
	$9 = [3]
	goto $label$104 
	
.LABEL $label$108
	*($2) = ($9 + [1])
	goto $label$106 
	
.LABEL $label$107
	*($11) = [0]
	*($16 + [48]) = (int_64)0
	$9 = CALL strlen([1984])
	if ( ((uint_32)$9 >= (uint_32)[-16]) ){ goto $label$12 }
	if ( ((uint_32)$9 >= (uint_32)[11]) ){ goto $label$125 }
	*($16 + [48]) = ($9 << [1])
	$14 = $4
	if ( $9 ){ goto $label$124 }
	goto $label$123 
	
.LABEL $label$125
	$6 = (($9 + [16]) & [-16])
	$14 = CALL $138($6)
	*($11) = $14
	*($16 + [48]) = ($6 | [1])
	*($16 + [52]) = $9
	
.LABEL $label$124
	CALL memcpy($14, [1984], $9)
	
.LABEL $label$123
	*(($14 + $9)) = [0]
	CALL $145(($16 + [48]), *((( *($8) ? $3 : (*($1) & [1]) ) + *($2))))
	CALL $144(($16 + [48]), [1920])
	CALL prints([176])
	CALL prints(( *($11) ? $4 : (*($16 + [48]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($11) ? $4 : (*($16 + [48]) & [1]) ))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$106 }
	CALL $139(*($11))
	
.LABEL $label$106
	$9 = [3]
	
.LABEL $label$105
	CALL $31(($16 + [32]))
	
.LABEL $label$104
	CALL $31(($16 + [64]))
	if ( ((int_32)$9 != (int_32)[3]) ){ goto $label$101 }
	
.LABEL $label$14
	$2 = ($16 + [88])
	$1 = *($2)
	*($2) = [0]
	$13 = *($16 + [80])
	*($16 + [64]) = $13
	*($16 + [80]) = [0]
	CALL $31(($16 + [80]))
	*($0 + [8]) = $1
	*($0) = $13
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $31(($16 + [64]))
	goto $label$3 
	
.LABEL $label$13
	CALL $140(($16 + [32]))
	
.LABEL $label$12
	CALL $140(($16 + [48]))
	
.LABEL $label$11
	*($2) = (*($2) + [4])
	$1 = ($16 + [88])
	$2 = *($1)
	*($16 + [40]) = $2
	*($1) = [0]
	$13 = *($16 + [80])
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	
.LABEL $label$10
	CALL $31(($16 + [80]))
	*($0 + [8]) = $2
	*($0) = $13
	*(($16 + [40])) = [0]
	*($16 + [32]) = [0]
	CALL $31(($16 + [32]))
	goto $label$3 
	
.LABEL $label$9
	$11 = (($16 + [80]) + [8])
	$14 = [0]
	
.LOOP $label$126:
	CALL $42(($16 + [64]), $1, $2)
	if ( ((int_32)*($11) != (int_32)[2]) ){ goto $label$128 }
	$8 = *($16 + [80])
	goto $label$127 
	
.LABEL $label$128
	CALL $30(($16 + [80]))
	*(($8 = CALL $138([24]))) = (int_64)0
	*($8 + [8 align=4]) = (int_64)0
	*($8 + [16 align=4]) = (int_64)0
	*($11) = [2]
	*($16 + [80]) = $8
	
.LABEL $label$127
	if ( ((uint_32)*($8 + [20]) > (uint_32)$14) ){ goto $label$129 }
	CALL $43($8, ($14 + [1]))
	$8 = *($16 + [80])
	
.LABEL $label$129
	$8 = (*($8 + [16]) + $14)
	$8 = (*((*($8 + [4]) + (uint_32($8 >> [6]) & [67108860]))) + (($8 & [255]) << [4]))
	CALL $30($8)
	*($8) = *($16 + [64])
	$9 = (($16 + [64]) + [8])
	*($8 + [8]) = *($9)
	*($9) = [0]
	*($16 + [64]) = [0]
	CALL $31(($16 + [64]))
	$9 = ($1 + [8])
	if ( (CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + *($2)))) == 0) ){ goto $label$130 }
	
.LOOP $label$131:
	$8 = (*($2) + [1])
	*($2) = $8
	if ( CALL isspace(*((( *($9) ? $3 : (*($1) & [1]) ) + $8))) ){ goto $label$131 }
	
.LABEL $label$130
	$8 = *($2)
	$9 = *((( *($9) ? $3 : (*($1) & [1]) ) + $8))
	if ( ((int_32)$9 != (int_32)[44]) ){ goto $label$132 }
	*($2) = ($8 + [1])
	$14 = ($14 + [1])
	goto $label$126 
	
.LABEL $label$132
	if ( ((int_32)$9 != (int_32)[93]) ){ goto $label$133 }
	*($2) = ($8 + [1])
	$1 = ($16 + [88])
	$2 = *($1)
	*($16 + [40]) = $2
	*($1) = [0]
	$13 = *($16 + [80])
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	goto $label$8 
	
.LABEL $label$133
	*(($16 + [56])) = [0]
	*($16 + [48]) = (int_64)0
	$8 = CALL strlen([1872])
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$7 }
	if ( ((uint_32)$8 >= (uint_32)[11]) ){ goto $label$136 }
	*($16 + [48]) = ($8 << [1])
	$14 = (($16 + [48]) | [1])
	$9 = $14
	if ( $8 ){ goto $label$135 }
	goto $label$134 
	
.LABEL $label$136
	$14 = (($8 + [16]) & [-16])
	$9 = CALL $138($14)
	*($16 + [48]) = ($14 | [1])
	*($16 + [56]) = $9
	*($16 + [52]) = $8
	$14 = (($16 + [48]) | [1])
	
.LABEL $label$135
	CALL memcpy($9, [1872], $8)
	
.LABEL $label$134
	*(($9 + $8)) = [0]
	CALL $145(($16 + [48]), *((( *(($1 + [8])) ? $3 : (*($1) & [1]) ) + *($2))))
	CALL $144(($16 + [48]), [1920])
	CALL prints([176])
	CALL prints(( *($16 + [56]) ? $14 : (*($16 + [48]) & [1]) ))
	CALL prints([256])
	CALL eosio_assert([0], ( *($16 + [56]) ? $14 : (*($16 + [48]) & [1]) ))
	*($16 + [72]) = [0]
	*($16 + [64]) = [0]
	CALL $30(($16 + [64]))
	*(($2 = CALL $138([24]))) = (int_64)0
	*($2 + [8 align=4]) = (int_64)0
	*($2 + [16 align=4]) = (int_64)0
	*($16 + [64]) = $2
	*($16 + [32]) = *($16 + [64])
	*($16 + [40]) = [2]
	*($16 + [64]) = [0]
	*($16 + [72]) = [0]
	CALL $31(($16 + [64]))
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$137 }
	CALL $139(*((($16 + [48]) + [8])))
	
.LABEL $label$137
	$2 = *((($16 + [32]) + [8]))
	$13 = *($16 + [32])
	
.LABEL $label$8
	CALL $31(($16 + [80]))
	*($0 + [8]) = $2
	*($0) = $13
	*(($16 + [40])) = [0]
	*($16 + [32]) = [0]
	CALL $31(($16 + [32]))
	goto $label$3 
	
.LABEL $label$7
	CALL $140(($16 + [48]))
	
.LABEL $label$6
	$15 = (CASTING float_64)(int_32 CALL _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($16 + [16]), [0], [10]))
	
.LABEL $label$5
	*($2) = (*($2) + [-1])
	if ( (($5 & [1]) == 0) ){ goto $label$139 }
	$2 = [4]
	$1 = ($16 + [88])
	if ( ((int_32)*($1) == (int_32)[4]) ){ goto $label$140 }
	CALL $30(($16 + [80]))
	*($1) = [4]
	*($16 + [80]) = (int_64)0
	
.LABEL $label$140
	$13 = (int_64)0
	*($16 + [80]) = (int_64)0
	goto $label$138 
	
.LABEL $label$139
	$2 = *($16 + [16])
	$1 = *($16 + [20])
	$3 = CALL _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji(($16 + [48]), [0], [10])
	if ( (( $1 ? uint_32($2 >> [1]) : ($2 & [1]) ) == 0) ){ goto $label$141 }
	$15 = ((float_64)(CASTING float_64)(int_32 $3) * (float_64)CALL pow((float_64)10, $15))
	$2 = [4]
	$1 = ($16 + [88])
	if ( ((int_32)*($1) == (int_32)[4]) ){ goto $label$142 }
	CALL $30(($16 + [80]))
	*($1) = [4]
	*($16 + [80]) = (int_64)0
	
.LABEL $label$142
	*($16 + [80]) = $15
	$13 = (CASTING int_64)(float_64 $15)
	goto $label$138 
	
.LABEL $label$141
	$2 = [5]
	$1 = ($16 + [88])
	if ( ((int_32)*($1) == (int_32)[5]) ){ goto $label$143 }
	CALL $30(($16 + [80]))
	*($1) = [5]
	*($16 + [80]) = [0]
	
.LABEL $label$143
	*($16 + [80]) = $3
	$13 = *($16 + [80])
	
.LABEL $label$138
	*($16 + [40]) = $2
	*(($16 + [88])) = [0]
	*($16 + [32]) = $13
	*($16 + [80]) = [0]
	
.LABEL $label$4
	if ( ((*($16 + [16]) & [1]) == 0) ){ goto $label$144 }
	CALL $139(*(($16 + [24])))
	
.LABEL $label$144
	if ( ((*($16 + [48]) & [1]) == 0) ){ goto $label$145 }
	CALL $139(*(($16 + [56])))
	
.LABEL $label$145
	CALL $31(($16 + [80]))
	*($0) = *($16 + [32])
	*($0 + [8]) = *($16 + [40])
	*($16 + [40]) = [0]
	*($16 + [32]) = [0]
	CALL $31(($16 + [32]))
	
.LABEL $label$3
	*([0] + [4]) = ($16 + [96])
	$9
	$8
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC _ZN4json4JSON4LoadERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	*($2 + [28]) = [0]
	CALL $42(($2 + [8]), $1, ($2 + [28]))
	*($0) = *($2 + [8])
	*($0 + [8]) = *($2 + [16])
	*($2 + [16]) = [0]
	*($2 + [8]) = [0]
	CALL $31(($2 + [8]))
	*([0] + [4]) = ($2 + [32])
}

void .FUNC $40 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = [0]
	*($8 + [8]) = [0]
	*($8) = (int_64)0
	$6 = *($1)
	if ( (( *($1 + [4]) ? uint_32($6 >> [1]) : ($6 & [1]) ) == 0) ){ goto $label$1 }
	$2 = ($1 + [1])
	$4 = ($1 + [8])
	$5 = ($1 + [4])
	
.LOOP $label$2:
	$3 = *((( *($4) ? $2 : ($6 & [1]) ) + $7))
	$6 = ($3 + [-8])
	if ( ((uint_32)$6 > (uint_32)[26]) ){ goto $label$10 }
	goto $label$11 
	
.LABEL $label$11
	CALL $144($8, [1792])
	goto $label$3 
	
.LABEL $label$10
	if ( ((int_32)$3 != (int_32)[92]) ){ goto $label$9 }
	CALL $144($8, [1776])
	goto $label$3 
	
.LABEL $label$9
	CALL $145($8, $3)
	goto $label$3 
	
.LABEL $label$8
	CALL $144($8, [1856])
	goto $label$3 
	
.LABEL $label$7
	CALL $144($8, [1824])
	goto $label$3 
	
.LABEL $label$6
	CALL $144($8, [1808])
	goto $label$3 
	
.LABEL $label$5
	CALL $144($8, [1840])
	goto $label$3 
	
.LABEL $label$4
	CALL $144($8, [1760])
	
.LABEL $label$3
	$6 = *($1)
	$7 = ($7 + [1])
	if ( ($7 <= ( *($5) ? uint_32($6 >> [1]) : ($6 & [1]) )) ){ goto $label$2 }
	
.LABEL $label$1
	*($0) = *($8)
	*(($0 + [8])) = *(($8 + [8]))
	*([0] + [4]) = ($8 + [16])
	$6
}

int_32 .FUNC $47 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	CALL $30($0)
	$5 = *($1 + [8])
	if ( ((int_32)$5 == (int_32)[3]) ){ goto $label$6 }
	if ( ((int_32)$5 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$4 }
	*(($2 = CALL $138([12])) + [8]) = [0]
	$5 = *($1)
	$6 = *($5)
	*($2 + [4]) = [0]
	$4 = ($2 + [4])
	*($2) = $4
	$3 = ($5 + [4])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = $6
	$5 = ($7 + [16])
	CALL $48($2, $4, $5, $5)
	$5 = *($7 + [4])
	if ( ($5 == 0) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = $5
	$5 = *($6)
	if ( $5 ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$9 }
	$7 = ($7 + [8])
	
.LOOP $label$12:
	$5 = *($7)
	$7 = ($5 + [8])
	$6 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($6)) ){ goto $label$12 }
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	*($0) = $2
	goto $label$1 
	
.LABEL $label$6
	$5 = CALL $138([12])
	CALL $166($5, *($1))
	*($0) = $5
	goto $label$1 
	
.LABEL $label$5
	$5 = CALL $138([24])
	$2 = *($6 + [16])
	$6 = *($1)
	$7 = *($6 + [4])
	$4 = ($7 + (uint_32($2 >> [6]) & [67108860]))
	if ( ((int_32)*($6 + [8]) == (int_32)$7) ){ goto $label$3 }
	$3 = ($2 + *($6 + [20]))
	$6 = ($7 + (uint_32($3 >> [6]) & [67108860]))
	$7 = (*($6) + (($3 & [255]) << [4]))
	$2 = (*($4) + (($2 & [255]) << [4]))
	goto $label$2 
	
.LABEL $label$4
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$6 = ($7 + (uint_32(($2 + *($6 + [20])) >> [6]) & [67108860]))
	$2 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($8 + [24]) = $4
	*($8 + [28]) = $2
	*($8 + [20]) = $7
	*($8 + [16]) = $6
	*($8 + [8 align=4]) = *($8 + [24])
	*(($8 + [4])) = *($8 + [20])
	*($8) = *($8 + [16])
	CALL $49($5, ($8 + [8]), $8, [0])
	*($0) = $5
	
.LABEL $label$1
	*($0 + [8]) = *(($1 + [8]))
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $46 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$3 = ((int_32)$1 == (int_32)$0)
	*($1 + [12]) = $3
	if ( $3 ){ goto $label$3 }
	
.LOOP $label$7:
	$2 = *($1 + [8])
	if ( *($2 + [12]) ){ goto $label$3 }
	$3 = *($2 + [8])
	$4 = *($3)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$10 }
	if ( ($4 == 0) ){ goto $label$8 }
	if ( *($4 + [12]) ){ goto $label$8 }
	$4 = ($4 + [12])
	goto $label$9 
	
.LABEL $label$10
	$4 = *($3 + [4])
	if ( ($4 == 0) ){ goto $label$6 }
	if ( *($4 + [12]) ){ goto $label$6 }
	$4 = ($4 + [12])
	
.LABEL $label$9
	*(($2 + [12])) = [1]
	$2 = ((int_32)$3 == (int_32)$0)
	*($3 + [12]) = $2
	*($4) = [1]
	$1 = $3
	if ( ($2 == 0) ){ goto $label$7 }
	goto $label$3 
	
.LABEL $label$8
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$5 }
	$4 = $2
	goto $label$4 
	
.LABEL $label$6
	if ( ((int_32)*($2) == (int_32)$1) ){ goto $label$2 }
	$4 = *($2 + [4])
	$1 = *($4)
	*($2 + [4]) = $1
	if ( ($1 == 0) ){ goto $label$11 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$11
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*($4) = $2
	$3 = *($4 + [8])
	goto $label$1 
	
.LABEL $label$5
	$4 = *($2)
	$1 = *($4 + [4])
	*($2) = $1
	if ( ($1 == 0) ){ goto $label$12 }
	*($1 + [8]) = $2
	$3 = *(($2 + [8]))
	
.LABEL $label$12
	*($4 + [8]) = $3
	*(( ($3 = *(($1 = ($2 + [8])))) ? ($3 + [4]) : ((int_32)*($3) == (int_32)$2) )) = $4
	*($1) = $4
	*(($4 + [4])) = $2
	$3 = *($4 + [8])
	
.LABEL $label$4
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3 + [4])
	$4 = *($2)
	*($3 + [4]) = $4
	if ( ($4 == 0) ){ goto $label$13 }
	*($4 + [8]) = $3
	
.LABEL $label$13
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*($2) = $3
	
.LABEL $label$3
	return 
	
.LABEL $label$2
	$4 = $2
	
.LABEL $label$1
	*($4 + [12]) = [1]
	*($3 + [12]) = [0]
	$2 = *($3)
	$4 = *($2 + [4])
	*($3) = $4
	if ( ($4 == 0) ){ goto $label$14 }
	*($4 + [8]) = $3
	
.LABEL $label$14
	*($2 + [8]) = *($3 + [8])
	*(( ($4 = *($3 + [8])) ? ($4 + [4]) : ((int_32)*($4) == (int_32)$3) )) = $2
	*($3 + [8]) = $2
	*(($2 + [4])) = $3
}

int_32 .FUNC $45 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = ($0 + [4])
	$0 = *($0 + [4])
	if ( ($0 == 0) ){ goto $label$2 }
	$3 = ($2 + [1])
	$12 = ($2 + [8])
	
.LOOP $label$4:
	$4 = ($0 + [16])
	$7 = ($8 & [1])
	$8 = *($2)
	$10 = ($2 + [4])
	$8 = ( *($10) ? uint_32($8 >> [1]) : $7 )
	$5 = ($6 & [1])
	$6 = *($0 + [16])
	$11 = ($0 + [20])
	$6 = ( *($11) ? uint_32($6 >> [1]) : $5 )
	$9 = ( $6 ? $8 : ($6 <= $8) )
	if ( ($9 == 0) ){ goto $label$8 }
	$5 = CALL memcmp(( *($12) ? $3 : $7 ), ( *(($0 + [24])) ? ($4 + [1]) : $5 ), $9)
	if ( ($5 == 0) ){ goto $label$8 }
	if ( ((int_32)$5 > (int_32)[-1]) ){ goto $label$6 }
	goto $label$7 
	
.LABEL $label$8
	if ( ((uint_32)$8 >= (uint_32)$6) ){ goto $label$6 }
	
.LABEL $label$7
	$6 = *($0)
	if ( $6 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	$7 = ($8 & [1])
	$8 = *($4)
	$8 = ( *($11) ? uint_32($8 >> [1]) : $7 )
	$5 = ($6 & [1])
	$6 = *($2)
	$6 = ( *($10) ? uint_32($6 >> [1]) : $5 )
	$9 = ( $6 ? $8 : ($6 <= $8) )
	if ( ($9 == 0) ){ goto $label$10 }
	$4 = CALL memcmp(( *(($0 + [24])) ? ($4 + [1]) : $7 ), ( *($12) ? $3 : $5 ), $9)
	if ( ($4 == 0) ){ goto $label$10 }
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$9 }
	goto $label$3 
	
.LABEL $label$10
	if ( ((uint_32)$8 >= (uint_32)$6) ){ goto $label$3 }
	
.LABEL $label$9
	$13 = ($0 + [4])
	$6 = *($0 + [4])
	if ( ($6 == 0) ){ goto $label$3 }
	$0 = $13
	
.LABEL $label$5
	$13 = $0
	$0 = $6
	goto $label$4 
	
.LABEL $label$3
	*($1) = $0
	return $13
	
.LABEL $label$2
	*($1) = $13
	return $13
	
.LABEL $label$1
	*($1) = $0
	return $0
}

void .FUNC $44 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = *($1 + [8])
	*($2) = ((int_32)$3 == (int_32)[3])
	if ( ((int_32)$3 != (int_32)[3]) ){ goto $label$3 }
	CALL $40($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$2 
	
.LABEL $label$3
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL strlen([128])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$6 }
	*($0) = ($1 << [1])
	$2 = ($0 + [1])
	if ( $1 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = (($1 + [16]) & [-16])
	$2 = CALL $138($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $2
	*($0 + [4]) = $1
	
.LABEL $label$5
	CALL memcpy($2, [128], $1)
	
.LABEL $label$4
	*(($2 + $1)) = [0]
	
.LABEL $label$2
	*([0] + [4]) = ($4 + [16])
	return (unreachable)
	
.LABEL $label$1
	CALL $140($0)
}

int_32 .FUNC gmtime (int_32 $0)
{
	return CALL __gmtime_r($0, [15844])
}

int_32 .FUNC $167 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$5 = ($8 & [1])
	$8 = *($1)
	$8 = ( *($1 + [4]) ? uint_32($8 >> [1]) : $5 )
	if ( ($8 <= $2) ){ goto $label$1 }
	$8 = ($8 - $2)
	$3 = ( $8 ? $3 : ($8 <= $3) )
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$1 }
	$6 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($3 + [16]) & [-16])
	$8 = CALL $138($7)
	*($0) = ($7 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $3
	
.LABEL $label$3
	CALL memcpy($8, (( $6 ? ($1 + [1]) : $5 ) + $2), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $166 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	*($0) = (int_64)0
	*(($3 = ($0 + [8]))) = [0]
	if ( (*($1) & [1]) ){ goto $label$1 }
	*($0) = *($1)
	*($3) = *(($1 + [8]))
	return $0
	
.LABEL $label$1
	$3 = *($1 + [4])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	$2 = *($1 + [8])
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$1 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($3 + [16]) & [-16])
	$1 = CALL $138($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $1
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($1, $2, $3)
	
.LABEL $label$3
	*(($1 + $3)) = [0]
	return $0
	
.LABEL $label$2
	CALL abort()
	return (unreachable)
}

int_32 .FUNC _ZNSt3__16localeD2Ev (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *($1 + [4])
	*(($1 = *($0)) + [4]) = ($2 + [-1])
	if ( $2 ){ goto $label$1 }
	CALL void $1((int_32 *(*($1) + [8])))
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $164 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [4])
	$1 = ($1 + *((*($1) + [-12])))
	if ( (*($1 + [24]) == 0) ){ goto $label$1 }
	if ( *($1 + [16]) ){ goto $label$1 }
	if ( ((*(($1 + [5])) & [32]) == 0) ){ goto $label$1 }
	if ( CALL _ZSt18uncaught_exceptionv() ){ goto $label$1 }
	$2 = ($0 + [4])
	$1 = *($2)
	$1 = *(($1 + *((*($1) + [-12]))) + [24])
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [24]))) != (int_32)[-1]) ){ goto $label$1 }
	*(($1 = (($1 = *($2)) + *((*($1) + [-12])))) + [16]) = (*($1 + [16]) | [1])
	
.LABEL $label$1
	return $0
}

int_32 .FUNC _ZSt19uncaught_exceptionsv ()
{
	CALL fprintf(*([0] + [12300]), [12256], [0])
	CALL abort()
	return (unreachable)
}

int_32 .FUNC _ZSt18uncaught_exceptionv ()
{
	CALL _ZSt19uncaught_exceptionsv()
	return (unreachable)
}

int_32 .FUNC $161 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ($0 + *((*($0) + [-12])))
	$2 = *($1 + [24])
	if ( ($2 == 0) ){ goto $label$1 }
	if ( *($1 + [16]) ){ goto $label$2 }
	$1 = *($1 + [72])
	if ( ($1 == 0) ){ goto $label$3 }
	CALL $161($1)
	$2 = *(($0 + *((*($0) + [-12]))) + [24])
	
.LABEL $label$3
	if ( ((int_32)CALL int_32 $2((int_32 *(*($2) + [24]))) != (int_32)[-1]) ){ goto $label$2 }
	*(($1 = ($0 + *((*($0) + [-12])))) + [16]) = (*($1 + [16]) | [1])
	
.LABEL $label$2
	$1 = ($0 + *((*($0) + [-12])))
	if ( (*($1 + [24]) == 0) ){ goto $label$1 }
	if ( *($1 + [16]) ){ goto $label$1 }
	if ( ((*(($1 + [5])) & [32]) == 0) ){ goto $label$1 }
	if ( CALL _ZSt18uncaught_exceptionv() ){ goto $label$1 }
	$1 = *(($0 + *((*($0) + [-12]))) + [24])
	if ( ((int_32)CALL int_32 $1((int_32 *(*($1) + [24]))) != (int_32)[-1]) ){ goto $label$1 }
	*(($1 = ($0 + *((*($0) + [-12])))) + [16]) = (*($1 + [16]) | [1])
	
.LABEL $label$1
	return $0
}

int_32 .FUNC $160 (int_32 $0, int_32 $1)
{
	*($0 + [4]) = $1
	*($0) = [0]
	$1 = ($1 + *((*($1) + [-12])))
	if ( *($1 + [16]) ){ goto $label$1 }
	$1 = *($1 + [72])
	if ( ($1 == 0) ){ goto $label$2 }
	CALL $161($1)
	
.LABEL $label$2
	*($0) = [1]
	
.LABEL $label$1
	return $0
}

int_32 .FUNC __stdio_write (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = *($0 + [28])
	CALL prints_l($3, (*($0 + [20]) - $3))
	CALL prints_l($1, $2)
	return ((*($0 + [20]) + $2) - *($0 + [28]))
}

int_32 .FUNC __stdio_close (int_32 $0)
{
	return [0]
}

int_64 .FUNC fabs (float_64 $0)
{
	return (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $0) & (int_64)9223372036854775807))
}

int_32 .FUNC _ZN4json6getIntERNS_4JSONEii (int_32 $0, int_32 $1, int_32 $2)
{
	if ( ((int_32)*($0 + [8]) != (int_32)[5]) ){ goto $label$1 }
	return *($0)
	
.LABEL $label$1
	CALL prints([176])
	CALL prints([2400])
	CALL prints([256])
	CALL eosio_assert([0], [2400])
	return [0]
}

int_32 .FUNC _ZN9msAccountC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	if ( (*($1) & [1]) ){ goto $label$2 }
	$1 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$1 = *($1 + [8])
	
.LABEL $label$1
	$5 = [-1]
	
.LOOP $label$3:
	$4 = ($1 + $5)
	$2 = ($5 + [1])
	$5 = $2
	if ( *(($4 + [1])) ){ goto $label$3 }
	$3 = (CASTING uint_64)(uint_32 $2)
	$7 = (int_64)0
	$6 = (int_64)59
	$8 = (int_64)0
	
.LOOP $label$4:
	$9 = (int_64)0
	if ( ((uint_64)$7 >= (uint_64)$3) ){ goto $label$5 }
	$5 = *($1)
	if ( ((uint_32)(($5 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$5 = ($5 + [165])
	goto $label$6 
	
.LABEL $label$7
	$5 = ( ($5 + [208]) ? [0] : ((($5 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$9 = (int_64)((int_64)(CASTING uint_64)(uint_32 $5) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$9 }
	$9 = ((int_64)((int_64)$9 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$9 = ((int_64)$9 & (int_64)15)
	
.LABEL $label$8
	$1 = ($1 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$4 }
	*($0) = $8
	return $0
}

void .FUNC $50 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [32])
	*([0] + [4]) = $13
	$2 = *($0 + [16])
	$8 = uint_32($2 >> [8])
	$1 = ( $10 ? $8 : ($10 <= $8) )
	$3 = uint_32($1 >> [8])
	$11 = *($0 + [4])
	$12 = *($0 + [8])
	$1 = (((int_32)$12 == (int_32)$11) + $1)
	$9 = ((int_32)($1 & [255]) != (int_32)[0])
	$10 = ($9 + $3)
	$5 = ($10 - $1)
	if ( ($5 == 0) ){ goto $label$8 }
	$11 = int_32(($12 - $11) >> [2])
	$2 = *($0 + [12])
	$6 = ($2 - *($0))
	if ( ((uint_32)$5 <= (uint_32)(int_32($6 >> [2]) - $11)) ){ goto $label$7 }
	*(($13 + [24])) = ($0 + [12])
	$12 = [0]
	*($13 + [20]) = [0]
	$2 = int_32($6 >> [1])
	$5 = ($11 + $5)
	$5 = ( $5 ? $2 : ($2 <= $5) )
	if ( ($5 == 0) ){ goto $label$9 }
	if ( ((uint_32)$5 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$12 = CALL $138(($5 << [2]))
	
.LABEL $label$9
	$7 = ($1 << [8])
	*($13 + [8]) = $12
	*((($13 + [8]) + [12])) = ($12 + ($5 << [2]))
	$12 = ($12 + (($11 - $1) << [2]))
	*($13 + [16]) = $12
	*($13 + [12]) = $12
	$11 = ((int_32)$10 ^ (int_32)[-1])
	$12 = ((int_32)$8 ^ (int_32)[-1])
	$12 = ((((int_32)( $12 ? $11 : ((uint_32)$12 > (uint_32)$11) ) ^ (int_32)[-1]) - $3) - $9)
	
.LOOP $label$10:
	*($13 + [4]) = CALL $138([4096])
	CALL $54(($13 + [8]), ($13 + [4]))
	$12 = ($12 + [1])
	if ( $12 ){ goto $label$10 }
	if ( ($1 == 0) ){ goto $label$6 }
	$2 = ($0 + [4])
	$10 = *($2)
	$8 = ($13 + [16])
	$12 = *($8)
	$9 = ($13 + [20])
	
.LOOP $label$11:
	$5 = *($9)
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$12 }
	$3 = *($13 + [8])
	$11 = *($13 + [12])
	if ( ((uint_32)$11 <= (uint_32)$3) ){ goto $label$13 }
	$3 = (((int_32)(int_32(($11 - $3) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$5 = ($11 + $3)
	$6 = ($12 - $11)
	$12 = int_32($6 >> [2])
	if ( ($12 == 0) ){ goto $label$14 }
	CALL memmove($5, $11, $6)
	$11 = *($13 + [12])
	
.LABEL $label$14
	$12 = ($5 + ($12 << [2]))
	*($8) = $12
	*($13 + [12]) = ($11 + $3)
	goto $label$12 
	
.LABEL $label$13
	$12 = int_32(($5 - $3) >> [1])
	$12 = ( $12 ? [1] : $12 )
	if ( ((uint_32)$12 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$11 = ($12 << [2])
	$3 = CALL $138($11)
	$4 = ($3 + $11)
	$6 = ($3 + ($12 & [-4]))
	$12 = $6
	$5 = *($8)
	$11 = *($13 + [12])
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$15 }
	$12 = $6
	
.LOOP $label$16:
	*($12) = *($11)
	$12 = ($12 + [4])
	$11 = ($11 + [4])
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$16 }
	
.LABEL $label$15
	*($8) = $12
	*($9) = $4
	*($13 + [12]) = $6
	$11 = *($13 + [8])
	*($13 + [8]) = $3
	if ( ($11 == 0) ){ goto $label$12 }
	CALL $139($11)
	$12 = *($8)
	
.LABEL $label$12
	*($12) = *($10)
	$12 = (*($8) + [4])
	*($8) = $12
	$10 = (*($2) + [4])
	*($2) = $10
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$11 }
	goto $label$5 
	
.LABEL $label$8
	*(($0 + [16])) = ($2 - ($1 << [8]))
	if ( ($1 == 0) ){ goto $label$2 }
	$9 = ($0 + [12])
	$10 = ($0 + [8])
	
.LOOP $label$17:
	$2 = *($11)
	$11 = ($11 + [4])
	*(($8 = ($0 + [4]))) = $11
	$5 = *($9)
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$18 }
	$3 = *($0)
	if ( ((uint_32)$11 <= (uint_32)$3) ){ goto $label$19 }
	$3 = (((int_32)(int_32(($11 - $3) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$5 = ($11 + $3)
	$6 = ($12 - $11)
	$12 = int_32($6 >> [2])
	if ( ($12 == 0) ){ goto $label$20 }
	CALL memmove($5, $11, $6)
	$11 = *($8)
	
.LABEL $label$20
	*($8) = ($11 + $3)
	$12 = ($5 + ($12 << [2]))
	*($10) = $12
	goto $label$18 
	
.LABEL $label$19
	$12 = int_32(($5 - $3) >> [1])
	$12 = ( $12 ? [1] : $12 )
	if ( ((uint_32)$12 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$11 = ($12 << [2])
	$3 = CALL $138($11)
	$4 = ($3 + $11)
	$6 = ($3 + ($12 & [-4]))
	$12 = $6
	$5 = *($10)
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$21 }
	$12 = $6
	
.LOOP $label$22:
	*($12) = *($11)
	$12 = ($12 + [4])
	$11 = ($11 + [4])
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$22 }
	
.LABEL $label$21
	*($8) = $6
	$11 = *($0)
	*($0) = $3
	*($10) = $12
	*($9) = $4
	if ( ($11 == 0) ){ goto $label$18 }
	CALL $139($11)
	$12 = *($10)
	
.LABEL $label$18
	*($12) = $2
	$12 = (*($10) + [4])
	*($10) = $12
	$1 = ($1 + [-1])
	if ( ($1 == 0) ){ goto $label$2 }
	$11 = *($8)
	goto $label$17 
	
.LABEL $label$7
	if ( ((int_32)$2 == (int_32)$12) ){ goto $label$23 }
	$12 = ($0 + [8])
	$11 = ($0 + [12])
	
.LOOP $label$24:
	*($13 + [8]) = CALL $138([4096])
	CALL $52($0, ($13 + [8]))
	if ( ((int_32)$5 == (int_32)[1]) ){ goto $label$4 }
	$5 = ($5 + [-1])
	if ( ((int_32)*($11) != (int_32)*($12)) ){ goto $label$24 }
	
.LABEL $label$23
	$8 = ((int_32)( $8 ? $10 : ((uint_32)$10 > (uint_32)$8) ) ^ (int_32)[-1])
	$1 = ($0 + [8])
	$12 = ($0 + [16])
	$11 = $5
	
.LOOP $label$25:
	*($13 + [8]) = CALL $138([4096])
	CALL $53($0, ($13 + [8]))
	$10 = ((*($12) + ( [-1] ? [0] : ((int_32)(*($1) - *(($0 + [4]))) == (int_32)[4]) )) + [256])
	*($12) = $10
	$11 = ($11 + [-1])
	if ( $11 ){ goto $label$25 }
	$1 = (($5 + [-1]) - $8)
	goto $label$3 
	
.LABEL $label$6
	$10 = *(($0 + [4]))
	
.LABEL $label$5
	$1 = ($0 + [8])
	$12 = *($1)
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$26 }
	$11 = ($0 + [4])
	
.LOOP $label$27:
	$12 = ($12 + [-4])
	CALL $55(($13 + [8]), $12)
	$10 = *($11)
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$27 }
	$12 = *(($0 + [8]))
	
.LABEL $label$26
	$11 = *($0)
	*($0) = *($13 + [8])
	*(($0 + [4])) = *($13 + [12])
	*($13 + [8]) = $11
	*($13 + [12]) = $10
	$5 = (($13 + [8]) + [8])
	$8 = *($5)
	*($5) = $12
	*($1) = $8
	$1 = ($0 + [12])
	$5 = *($1)
	$8 = (($13 + [8]) + [12])
	*($1) = *($8)
	*($8) = $5
	*(($0 = ($0 + [16]))) = (*($0) - $7)
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$28 }
	*(($13 + [16])) = ($12 + (((int_32)(($12 + [-4]) - $10) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$28
	if ( ($11 == 0) ){ goto $label$2 }
	CALL $139($11)
	goto $label$2 
	
.LABEL $label$4
	$10 = *(($0 + [16]))
	
.LABEL $label$3
	*(($0 + [16])) = ($10 - ($1 << [8]))
	if ( ($1 == 0) ){ goto $label$2 }
	$10 = ($0 + [8])
	$12 = *($10)
	$9 = ($0 + [12])
	
.LOOP $label$29:
	$8 = ($0 + [4])
	$11 = *($8)
	$2 = *($11)
	$11 = ($11 + [4])
	*($8) = $11
	$5 = *($9)
	if ( ((int_32)$12 != (int_32)$5) ){ goto $label$30 }
	$3 = *($0)
	if ( ((uint_32)$11 <= (uint_32)$3) ){ goto $label$31 }
	$3 = (((int_32)(int_32(($11 - $3) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$5 = ($11 + $3)
	$6 = ($12 - $11)
	$12 = int_32($6 >> [2])
	if ( ($12 == 0) ){ goto $label$32 }
	CALL memmove($5, $11, $6)
	$11 = *($8)
	
.LABEL $label$32
	*($8) = ($11 + $3)
	$12 = ($5 + ($12 << [2]))
	*($10) = $12
	goto $label$30 
	
.LABEL $label$31
	$12 = int_32(($5 - $3) >> [1])
	$12 = ( $12 ? [1] : $12 )
	if ( ((uint_32)$12 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$11 = ($12 << [2])
	$3 = CALL $138($11)
	$4 = ($3 + $11)
	$6 = ($3 + ($12 & [-4]))
	$12 = $6
	$5 = *($10)
	$11 = *($8)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$33 }
	$12 = $6
	
.LOOP $label$34:
	*($12) = *($11)
	$12 = ($12 + [4])
	$11 = ($11 + [4])
	if ( ((int_32)$5 != (int_32)$11) ){ goto $label$34 }
	
.LABEL $label$33
	*($8) = $6
	$11 = *($0)
	*($0) = $3
	*($10) = $12
	*($9) = $4
	if ( ($11 == 0) ){ goto $label$30 }
	CALL $139($11)
	$12 = *($10)
	
.LABEL $label$30
	*($12) = $2
	$12 = (*($10) + [4])
	*($10) = $12
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$29 }
	
.LABEL $label$2
	*([0] + [4]) = ($13 + [32])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $51 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [32])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = [0]
	$5 = *($1 + [8])
	if ( ((int_32)$5 == (int_32)[3]) ){ goto $label$6 }
	if ( ((int_32)$5 == (int_32)[2]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1]) ){ goto $label$4 }
	*(($2 = CALL $138([12])) + [8]) = [0]
	$5 = *($1)
	$6 = *($5)
	*($2 + [4]) = [0]
	$4 = ($2 + [4])
	*($2) = $4
	$3 = ($5 + [4])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$7 }
	
.LOOP $label$8:
	$7 = $6
	$5 = ($7 + [16])
	CALL $48($2, $4, $5, $5)
	$5 = *($7 + [4])
	if ( ($5 == 0) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = $5
	$5 = *($6)
	if ( $5 ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$6 = *($7 + [8])
	if ( ((int_32)*($6) == (int_32)$7) ){ goto $label$9 }
	$7 = ($7 + [8])
	
.LOOP $label$12:
	$5 = *($7)
	$7 = ($5 + [8])
	$6 = *($5 + [8])
	if ( ((int_32)$5 != (int_32)*($6)) ){ goto $label$12 }
	
.LABEL $label$9
	if ( ((int_32)$6 != (int_32)$3) ){ goto $label$8 }
	
.LABEL $label$7
	*($0) = $2
	goto $label$1 
	
.LABEL $label$6
	$5 = CALL $138([12])
	CALL $166($5, *($1))
	*($0) = $5
	goto $label$1 
	
.LABEL $label$5
	$5 = CALL $138([24])
	$2 = *($6 + [16])
	$6 = *($1)
	$7 = *($6 + [4])
	$4 = ($7 + (uint_32($2 >> [6]) & [67108860]))
	if ( ((int_32)*($6 + [8]) == (int_32)$7) ){ goto $label$3 }
	$3 = ($2 + *($6 + [20]))
	$6 = ($7 + (uint_32($3 >> [6]) & [67108860]))
	$7 = (*($6) + (($3 & [255]) << [4]))
	$2 = (*($4) + (($2 & [255]) << [4]))
	goto $label$2 
	
.LABEL $label$4
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$6 = ($7 + (uint_32(($2 + *($6 + [20])) >> [6]) & [67108860]))
	$2 = [0]
	$7 = [0]
	
.LABEL $label$2
	*($5) = (int_64)0
	*($5 + [8 align=4]) = (int_64)0
	*($5 + [16 align=4]) = (int_64)0
	*($8 + [24]) = $4
	*($8 + [28]) = $2
	*($8 + [20]) = $7
	*($8 + [16]) = $6
	*($8 + [8 align=4]) = *($8 + [24])
	*(($8 + [4])) = *($8 + [20])
	*($8) = *($8 + [16])
	CALL $49($5, ($8 + [8]), $8, [0])
	*($0) = $5
	
.LABEL $label$1
	*(($0 + [8])) = *(($1 + [8]))
	*([0] + [4]) = ($8 + [32])
	return $0
}

void .FUNC $52 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0 + [12])
	$9 = *($0 + [8])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$2 }
	$2 = *($0)
	$8 = *($0 + [4])
	if ( ((uint_32)$8 <= (uint_32)$2) ){ goto $label$3 }
	$2 = (((int_32)(int_32(($8 - $2) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$4 = ($8 + $2)
	$5 = ($9 - $8)
	$9 = int_32($5 >> [2])
	if ( ($9 == 0) ){ goto $label$4 }
	CALL memmove($4, $8, $5)
	$8 = *(($0 + [4]))
	
.LABEL $label$4
	*(($0 + [4])) = ($8 + $2)
	$9 = ($4 + ($9 << [2]))
	*(($0 + [8])) = $9
	goto $label$2 
	
.LABEL $label$3
	$9 = int_32(($4 - $2) >> [1])
	$9 = ( $9 ? [1] : $9 )
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$8 = ($9 << [2])
	$2 = CALL $138($8)
	$3 = ($2 + $8)
	$5 = ($2 + ($9 & [-4]))
	$9 = $5
	$6 = ($0 + [8])
	$4 = *($6)
	$7 = ($0 + [4])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$5 }
	$9 = $5
	
.LOOP $label$6:
	*($9) = *($8)
	$9 = ($9 + [4])
	$8 = ($8 + [4])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$6 }
	
.LABEL $label$5
	*($7) = $5
	$8 = *($0)
	*($0) = $2
	*($6) = $9
	*(($0 + [12])) = $3
	if ( ($8 == 0) ){ goto $label$2 }
	CALL $139($8)
	$9 = *(($0 + [8]))
	
.LABEL $label$2
	*($9) = *($1)
	*(($9 = ($0 + [8]))) = (*($9) + [4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $53 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$8 = *($0 + [4])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$9 = $8
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [12])
	$7 = *($0 + [8])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$4 }
	$4 = (((int_32)(int_32(($9 - $7) >> [2]) + [1]) / (int_32)[2]) << [2])
	$9 = ($7 + $4)
	$2 = ($7 - $8)
	$3 = int_32($2 >> [2])
	if ( ($3 == 0) ){ goto $label$5 }
	$9 = ($9 - ($3 << [2]))
	CALL memmove($9, $8, $2)
	$7 = *(($0 + [8]))
	
.LABEL $label$5
	*(($0 + [4])) = $9
	*(($0 + [8])) = ($7 + $4)
	goto $label$2 
	
.LABEL $label$4
	$8 = int_32(($9 - $4) >> [1])
	$8 = ( $8 ? [1] : $8 )
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = ($8 << [2])
	$2 = CALL $138($7)
	$3 = ($2 + $7)
	$9 = ($2 + (($8 + [3]) & [-4]))
	$8 = $9
	$5 = ($0 + [8])
	$4 = *($5)
	$6 = ($0 + [4])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$8 = $9
	
.LOOP $label$7:
	*($8) = *($7)
	$8 = ($8 + [4])
	$7 = ($7 + [4])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$6
	*($6) = $9
	$7 = *($0)
	*($0) = $2
	*($5) = $8
	*(($0 + [12])) = $3
	if ( ($7 == 0) ){ goto $label$2 }
	CALL $139($7)
	$9 = *(($0 + [4]))
	
.LABEL $label$2
	*(($9 + [-4])) = *($1)
	*(($8 = ($0 + [4]))) = (*($8) + [-4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $54 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0 + [12])
	$9 = *($0 + [8])
	if ( ((int_32)$9 != (int_32)$4) ){ goto $label$2 }
	$2 = *($0)
	$8 = *($0 + [4])
	if ( ((uint_32)$8 <= (uint_32)$2) ){ goto $label$3 }
	$2 = (((int_32)(int_32(($8 - $2) >> [2]) + [1]) / (int_32)[-2]) << [2])
	$4 = ($8 + $2)
	$5 = ($9 - $8)
	$9 = int_32($5 >> [2])
	if ( ($9 == 0) ){ goto $label$4 }
	CALL memmove($4, $8, $5)
	$8 = *(($0 + [4]))
	
.LABEL $label$4
	*(($0 + [4])) = ($8 + $2)
	$9 = ($4 + ($9 << [2]))
	*(($0 + [8])) = $9
	goto $label$2 
	
.LABEL $label$3
	$9 = int_32(($4 - $2) >> [1])
	$9 = ( $9 ? [1] : $9 )
	if ( ((uint_32)$9 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$8 = ($9 << [2])
	$2 = CALL $138($8)
	$3 = ($2 + $8)
	$5 = ($2 + ($9 & [-4]))
	$9 = $5
	$6 = ($0 + [8])
	$4 = *($6)
	$7 = ($0 + [4])
	$8 = *($7)
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$5 }
	$9 = $5
	
.LOOP $label$6:
	*($9) = *($8)
	$9 = ($9 + [4])
	$8 = ($8 + [4])
	if ( ((int_32)$4 != (int_32)$8) ){ goto $label$6 }
	
.LABEL $label$5
	*($7) = $5
	$8 = *($0)
	*($0) = $2
	*($6) = $9
	*(($0 + [12])) = $3
	if ( ($8 == 0) ){ goto $label$2 }
	CALL $139($8)
	$9 = *(($0 + [8]))
	
.LABEL $label$2
	*($9) = *($1)
	*(($9 = ($0 + [8]))) = (*($9) + [4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $55 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$4 = *($0)
	$8 = *($0 + [4])
	if ( ((int_32)$8 == (int_32)$4) ){ goto $label$3 }
	$9 = $8
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [12])
	$7 = *($0 + [8])
	if ( ((uint_32)$7 >= (uint_32)$9) ){ goto $label$4 }
	$4 = (((int_32)(int_32(($9 - $7) >> [2]) + [1]) / (int_32)[2]) << [2])
	$9 = ($7 + $4)
	$2 = ($7 - $8)
	$3 = int_32($2 >> [2])
	if ( ($3 == 0) ){ goto $label$5 }
	$9 = ($9 - ($3 << [2]))
	CALL memmove($9, $8, $2)
	$7 = *(($0 + [8]))
	
.LABEL $label$5
	*(($0 + [4])) = $9
	*(($0 + [8])) = ($7 + $4)
	goto $label$2 
	
.LABEL $label$4
	$8 = int_32(($9 - $4) >> [1])
	$8 = ( $8 ? [1] : $8 )
	if ( ((uint_32)$8 >= (uint_32)[1073741824]) ){ goto $label$1 }
	$7 = ($8 << [2])
	$2 = CALL $138($7)
	$3 = ($2 + $7)
	$9 = ($2 + (($8 + [3]) & [-4]))
	$8 = $9
	$5 = ($0 + [8])
	$4 = *($5)
	$6 = ($0 + [4])
	$7 = *($6)
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$8 = $9
	
.LOOP $label$7:
	*($8) = *($7)
	$8 = ($8 + [4])
	$7 = ($7 + [4])
	if ( ((int_32)$4 != (int_32)$7) ){ goto $label$7 }
	
.LABEL $label$6
	*($6) = $9
	$7 = *($0)
	*($0) = $2
	*($5) = $8
	*(($0 + [12])) = $3
	if ( ($7 == 0) ){ goto $label$2 }
	CALL $139($7)
	$9 = *(($0 + [4]))
	
.LABEL $label$2
	*(($9 + [-4])) = *($1)
	*(($8 = ($0 + [4]))) = (*($8) + [-4])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $56 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$5 = ($0 + [4])
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$13 }
	$6 = ($1 + [16])
	$8 = ($10 & [1])
	$10 = *($4)
	$10 = ( *($4 + [4]) ? uint_32($10 >> [1]) : $8 )
	$7 = ($11 & [1])
	$11 = *($1 + [16])
	$11 = ( *($1 + [20]) ? uint_32($11 >> [1]) : $7 )
	$9 = ( $11 ? $10 : ($11 <= $10) )
	if ( ($9 == 0) ){ goto $label$14 }
	$7 = CALL memcmp(( *($4 + [8]) ? ($4 + [1]) : $8 ), ( *($1 + [24]) ? ($6 + [1]) : $7 ), $9)
	if ( ($7 == 0) ){ goto $label$14 }
	if ( ((int_32)$7 > (int_32)[-1]) ){ goto $label$12 }
	goto $label$13 
	
.LABEL $label$14
	if ( ((uint_32)$10 >= (uint_32)$11) ){ goto $label$12 }
	
.LABEL $label$13
	if ( ((int_32)*($0) == (int_32)$1) ){ goto $label$11 }
	$10 = *($1)
	if ( ($10 == 0) ){ goto $label$7 }
	
.LOOP $label$15:
	$11 = $10
	$10 = *($11 + [4])
	if ( $10 ){ goto $label$15 }
	goto $label$6 
	
.LABEL $label$12
	$8 = ($10 & [1])
	$10 = *(($1 + [16]))
	$10 = ( *(($1 + [20])) ? uint_32($10 >> [1]) : $8 )
	$7 = ($11 & [1])
	$11 = *($4)
	$11 = ( *(($4 + [4])) ? uint_32($11 >> [1]) : $7 )
	$9 = ( $11 ? $10 : ($11 <= $10) )
	if ( ($9 == 0) ){ goto $label$10 }
	$6 = CALL memcmp(( *($1 + [24]) ? ($6 + [1]) : $8 ), ( *($4 + [8]) ? ($4 + [1]) : $7 ), $9)
	if ( ($6 == 0) ){ goto $label$10 }
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$8 }
	goto $label$9 
	
.LABEL $label$11
	$11 = $1
	if ( *($1) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$10
	if ( ((uint_32)$10 >= (uint_32)$11) ){ goto $label$8 }
	
.LABEL $label$9
	$11 = *($1 + [4])
	if ( ($11 == 0) ){ goto $label$2 }
	
.LOOP $label$16:
	$10 = $11
	$11 = *($10)
	if ( $11 ){ goto $label$16 }
	goto $label$1 
	
.LABEL $label$8
	*($2) = $1
	*($3) = $1
	return $3
	
.LABEL $label$7
	$10 = $1
	
.LOOP $label$17:
	$11 = *($10 + [8])
	$3 = ((int_32)*($11) == (int_32)$10)
	$10 = $11
	if ( $3 ){ goto $label$17 }
	
.LABEL $label$6
	$5 = ($3 & [1])
	$3 = *($11 + [16])
	$3 = ( *(($11 + [20])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($10 & [1])
	$10 = *($4)
	$10 = ( *($4 + [4]) ? uint_32($10 >> [1]) : $6 )
	$7 = ( $10 ? $3 : ($10 <= $3) )
	if ( ($7 == 0) ){ goto $label$19 }
	$6 = CALL memcmp(( *(($11 + [24])) ? (($11 + [16]) + [1]) : $5 ), ( *($4 + [8]) ? ($4 + [1]) : $6 ), $7)
	if ( ($6 == 0) ){ goto $label$19 }
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$4 }
	goto $label$18 
	
.LABEL $label$19
	if ( ((uint_32)$3 >= (uint_32)$10) ){ goto $label$4 }
	
.LABEL $label$18
	if ( (*($1) == 0) ){ goto $label$3 }
	
.LABEL $label$5
	*($2) = $11
	return ($11 + [4])
	
.LABEL $label$4
	return CALL $45($0, $2, $4)
	
.LABEL $label$3
	*($2) = $1
	return $1
	
.LABEL $label$2
	$10 = *($1 + [8])
	if ( ((int_32)*($10) == (int_32)$1) ){ goto $label$1 }
	$3 = ($1 + [8])
	
.LOOP $label$20:
	$11 = *($3)
	$3 = ($11 + [8])
	$10 = *($11 + [8])
	if ( ((int_32)$11 != (int_32)*($10)) ){ goto $label$20 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$5) ){ goto $label$23 }
	$5 = ($3 & [1])
	$3 = *($4)
	$3 = ( *(($4 + [4])) ? uint_32($3 >> [1]) : $5 )
	$6 = ($11 & [1])
	$11 = *($10 + [16])
	$11 = ( *($10 + [20]) ? uint_32($11 >> [1]) : $6 )
	$7 = ( $11 ? $3 : ($11 <= $3) )
	if ( ($7 == 0) ){ goto $label$24 }
	$6 = CALL memcmp(( *($4 + [8]) ? ($4 + [1]) : $5 ), ( *($10 + [24]) ? (($10 + [16]) + [1]) : $6 ), $7)
	if ( ($6 == 0) ){ goto $label$24 }
	if ( ((int_32)$6 > (int_32)[-1]) ){ goto $label$22 }
	goto $label$23 
	
.LABEL $label$24
	if ( ((uint_32)$3 >= (uint_32)$11) ){ goto $label$22 }
	
.LABEL $label$23
	$11 = ($1 + [4])
	if ( (*($11) == 0) ){ goto $label$21 }
	*($2) = $10
	return $10
	
.LABEL $label$22
	return CALL $45($0, $2, $4)
	
.LABEL $label$21
	*($2) = $1
	return $11
}

void .FUNC $57 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	$2 = *($0 + [16])
	$9 = ($2 + *($0 + [20]))
	$7 = *($0 + [4])
	$10 = ($7 + (uint_32($9 >> [6]) & [67108860]))
	$6 = ((int_32)*($0 + [8]) == (int_32)$7)
	if ( $6 ){ goto $label$2 }
	$9 = (*($10) + (($9 & [255]) << [4]))
	goto $label$1 
	
.LABEL $label$2
	$9 = [0]
	
.LABEL $label$1
	$8 = *($1 + [4])
	if ( ((int_32)$9 == (int_32)$8) ){ goto $label$3 }
	$4 = int_32(($8 - *($3)) >> [4])
	$3 = *($1)
	$5 = ((int_32(($9 - *($10)) >> [4]) + (($10 - $3) << [6])) - $4)
	if ( ((int_32)$5 < (int_32)[1]) ){ goto $label$3 }
	$1 = ($7 + (uint_32($2 >> [6]) & [67108860]))
	if ( $6 ){ goto $label$6 }
	$10 = (*($1) + (($2 & [255]) << [4]))
	if ( ((int_32)$8 != (int_32)$10) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$10 = [0]
	if ( ((int_32)$8 == (int_32)[0]) ){ goto $label$4 }
	
.LABEL $label$5
	$7 = (($4 + (($3 - $1) << [6])) - int_32(($10 - *($1)) >> [4]))
	if ( ($7 == 0) ){ goto $label$4 }
	$10 = (int_32(($10 - *($1)) >> [4]) + $7)
	if ( ((int_32)$10 < (int_32)[1]) ){ goto $label$7 }
	$1 = ($1 + (uint_32($10 >> [6]) & [67108860]))
	$10 = (*($1) + (($10 & [255]) << [4]))
	goto $label$4 
	
.LABEL $label$7
	$10 = ([255] - $10)
	$1 = ($1 + (((int_32)$10 / (int_32)[-256]) << [2]))
	$10 = (*($1) + (([255] - ((int_32)$10 % (int_32)[256])) << [4]))
	
.LABEL $label$4
	if ( ((int_32)$10 == (int_32)$9) ){ goto $label$8 }
	
.LOOP $label$9:
	$10 = (CALL $31($10) + [16])
	if ( ((int_32)($10 - *($1)) != (int_32)[4096]) ){ goto $label$10 }
	$10 = *($1 + [4])
	$1 = ($1 + [4])
	
.LABEL $label$10
	if ( ((int_32)$10 != (int_32)$9) ){ goto $label$9 }
	
.LABEL $label$8
	$1 = (*($7) - $5)
	*(($7 = ($0 + [20]))) = $1
	$0 = ($0 + [16])
	$8 = ($0 + [4])
	$9 = ($0 + [8])
	$10 = *($9)
	$2 = ($10 - *($8))
	if ( ((( (($2 << [6]) + [-1]) ? [0] : $2 ) - ($1 + *($0))) <= [512]) ){ goto $label$3 }
	
.LOOP $label$11:
	CALL $139(*(($10 + [-4])))
	$10 = (*($9) + [-4])
	*($9) = $10
	$1 = ($10 - *($8))
	if ( ((uint_32)(( (($1 << [6]) + [-1]) ? [0] : $1 ) - (*($7) + *($0))) > (uint_32)[511]) ){ goto $label$11 }
	
.LABEL $label$3
}

int_64 .FUNC pow (float_64 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	float_64 $10
	int_64 $11
	float_64 $12
	float_64 $13
	float_64 $14
	float_64 $15
	float_64 $16
	float_64 $17
	float_64 $18
	int_32 $19
	float_64 $20
	float_64 $21
	$21 = (float_64)1
	$6 = (CASTING uint_32)(uint_64 $4)
	$4 = (CASTING int_64)(float_64 $1)
	$5 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	$8 = ($5) & [2147483647]
	if ( (($8) | $6) == 0) ){ goto $label$1 }
	$11 = (CASTING int_64)(float_64 $0)
	$2 = (CASTING uint_32)(uint_64 (uint_64)$11 >> (uint_64)(int_64)32))
	$3 = (CASTING uint_32)(uint_64 $11)
	if ( $3 ){ goto $label$2 }
	if ( ((int_32)$2 == (int_32)[1072693248]) ){ goto $label$1 }
	
.LABEL $label$2
	$7 = ($2 & [2147483647])
	if ( ((uint_32)$7 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( (((int_32)$3 != (int_32)[0]) & ((int_32)$7 == (int_32)[2146435072])) ){ goto $label$4 }
	if ( ((uint_32)$8 > (uint_32)[2146435072]) ){ goto $label$4 }
	if ( ($6 == 0) ){ goto $label$3 }
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$3 }
	
.LABEL $label$4
	return ((float_64)$0 + (float_64)$1)
	
.LABEL $label$3
	$19 = [0]
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$8 }
	$19 = [2]
	if ( ((uint_32)$8 > (uint_32)[1128267775]) ){ goto $label$8 }
	$19 = [0]
	if ( ($8 <= [1072693248]) ){ goto $label$8 }
	$9 = uint_32($8 >> [20])
	if ( ((int_32)($9 + [-1023]) < (int_32)[21]) ){ goto $label$7 }
	$19 = ([1075] - $9)
	$9 = uint_32($6 >> $19)
	$19 = ( ([2] - ($9 & [1])) ? [0] : ((int_32)($9 << $19) == (int_32)$6) )
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$19 = [0]
	if ( $6 ){ goto $label$5 }
	$6 = ([1043] - $9)
	$19 = uint_32($8 >> $6)
	$19 = ( ([2] - ($19 & [1])) ? [0] : ((int_32)($19 << $6) == (int_32)$8) )
	
.LABEL $label$6
	if ( ((int_32)$8 != (int_32)[2146435072]) ){ goto $label$12 }
	if ( ((($7 + [-1072693248]) | $3) == 0) ){ goto $label$1 }
	if ( ($7 <= [1072693248]) ){ goto $label$11 }
	return ( $1 ? (float_64)0 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$12
	if ( ((int_32)$8 != (int_32)[1072693248]) ){ goto $label$13 }
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$9 }
	return $0
	
.LABEL $label$13
	if ( ((int_32)$5 != (int_32)[1073741824]) ){ goto $label$10 }
	return ((float_64)$0 * (float_64)$0)
	
.LABEL $label$11
	return ( (float_64)0 ? !(float_64)$1 : ((int_32)$5 > (int_32)[-1]) )
	
.LABEL $label$10
	if ( ((int_32)$2 < (int_32)[0]) ){ goto $label$5 }
	if ( ((int_32)$5 != (int_32)[1071644672]) ){ goto $label$5 }
	return CALL sqrt($0)
	
.LABEL $label$9
	return ((float_64)(float_64)1 / (float_64)$0)
	
.LABEL $label$5
	$21 = CALL fabs($0)
	if ( $3 ){ goto $label$18 }
	if ( ($7 == 0) ){ goto $label$17 }
	if ( ((int_32)($7 | [1073741824]) == (int_32)[2146435072]) ){ goto $label$17 }
	
.LABEL $label$18
	$10 = (float_64)1
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$14 }
	if ( ((int_32)$19 == (int_32)[1]) ){ goto $label$16 }
	if ( $19 ){ goto $label$14 }
	$1 = (float_64)
	return ((float_64)$1($0 - $0)) / (float_64)$1)
	
.LABEL $label$17
	$21 = ( ((float_64)(float_64)1 / (float_64)$21) ? $21 : ((int_32)$5 < (int_32)[0]) )
	if ( ((int_32)$2 > (int_32)[-1]) ){ goto $label$1 }
	if ( (($19 | ($7 + [-1072693248])) == 0) ){ goto $label$15 }
	return ( !(float_64)$21 ? $21 : ((int_32)$19 == (int_32)[1]) )
	
.LABEL $label$16
	$10 = (float_64)-1
	goto $label$14 
	
.LABEL $label$15
	$1 = (float_64)
	return ((float_64)$1($21 - $21)) / (float_64)$1)
	
.LABEL $label$14
	if ( ($8 <= [1105199105]) ){ goto $label$28 }
	if ( ($8 <= [1139802113]) ){ goto $label$27 }
	if ( ((uint_32)$7 > (uint_32)[1072693247]) ){ goto $label$24 }
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 < (int_32)[0]) )
	
.LABEL $label$28
	$8 = [0]
	if ( ((uint_32)$7 > (uint_32)[1048575]) ){ goto $label$26 }
	$21 = ((float_64)$21 * (float_64)(float_64)9007199254740992)
	$7 = (CASTING uint_32)(uint_64 (uint_64)(CASTING int_64)(float_64 $21) >> (uint_64)(int_64)32))
	$5 = [-53]
	goto $label$25 
	
.LABEL $label$27
	if ( ((uint_32)$7 > (uint_32)[1072693246]) ){ goto $label$23 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 < (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$26
	$5 = [0]
	
.LABEL $label$25
	$6 = ($7 & [1048575])
	$2 = ($6 | [1072693248])
	$5 = ((int_32($7 >> [20]) + $5) + [-1023])
	if ( ($6 <= [235663]) ){ goto $label$21 }
	if ( ((uint_32)$6 >= (uint_32)[767610]) ){ goto $label$22 }
	$8 = [1]
	goto $label$21 
	
.LABEL $label$24
	return ( (float_64)inf ? (float_64)0 : ((int_32)$5 > (int_32)[0]) )
	
.LABEL $label$23
	if ( ($7 <= [1072693249]) ){ goto $label$20 }
	$1 = ( (float_64)1.e+300 ? (float_64)1e-300 : ((int_32)$5 > (int_32)[0]) )
	return ((float_64)$1 * (float_64)((float_64)$1 * (float_64)$10))
	
.LABEL $label$22
	$2 = ($2 + [-1048576])
	$5 = ($5 + [1])
	
.LABEL $label$21
	$13 = ((float_64)*(($6 + [12480])) + (float_64)((float_64)((float_64)(float_64))($21 - (float_64))($0 - $14)) * (float_64)(float_64)0.9617966939259756) + (float_64)((float_64)$0 * (float_64)(float_64)-7.028461650952758e-09)
	$21 = ((float_64)((float_64)$12 * (float_64)$0) + (float_64)((float_64)$21 * (float_64)(float_64))($13 - (float_64))(((float_64)$0 + (float_64)(float_64)-3) - $17))
	$0 = ((float_64)$21 * (float_64)$21)
	$16 = (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 (((int_32($2 >> [1]) | [536870912]) + ($8 << [18])) + [524288])) << (int_64)32))
	$12 = ((float_64)$15 * (float_64)(float_64))((float_64))($14 - ((float_64)$0 * (float_64)$16)) - ((float_64)$0 * (float_64)(float_64))($12 - (float_64))($16 - $13)
	$13 = ((float_64)((float_64)((float_64)$21 + (float_64)$0) * (float_64)$12))
	$17 = ((float_64)$0 * (float_64)$0)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)((float_64)$17 + (float_64)(float_64)3) + (float_64)$13)) + (float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)0.20697501780033842) + (float_64)(float_64)0.23066074577556175)) + (float_64)(float_64)0.272728123808534)) + (float_64)(float_64)0.33333332981837743)) + (float_64)(float_64)0.4285714285785502)) + (float_64)(float_64)0.5999999999999946))))
	$15 = ((float_64)(float_64)1 / (float_64)((float_64)$13 + (float_64)$12))
	$13 = *(($6 + [12464]))
	$12 = (CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)32) | (int_64)((int_64)(CASTING int_64)(float_64 $21) & (int_64)4294967295)))
	$14 = (float_64)
	$21 = ((float_64)$14($12 - $13)) * (float_64)$15
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 $21)) & (int_64)-4294967296)
	$14 = ((float_64)$0) * (float_64)$0
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$14 & (int_64)-4294967296))))
	$12 = ((float_64)$0 + (float_64)$21)
	$6 = ($8 << [3])
	$18 = *(($6 + [12496]))
	$20 = (CASTING float_64)(int_32 $5)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$20 + (float_64)((float_64)$18 + (float_64)((float_64)$12)) & (int_64)-4294967296))) * (float_64)(float_64)0.9617967009544373)
	$20 = (float_64))((float_64))((float_64))($0 + (float_64)$13)))))) & (int_64)-4294967296))) - $20) - $18) - $12)
	goto $label$19 
	
.LABEL $label$20
	$13 = ((float_64)((float_64)$0 * (float_64)(float_64)1.9259629911266175e-08) + (float_64)((float_64)((float_64)((float_64)$0 * (float_64)$0) * (float_64)(float_64))((float_64)0.5 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)-0.25) + (float_64)(float_64)0.3333333333333333)))) * (float_64)(float_64)-1.4426950408889634)
	$0 = ((float_64)$21 + (float_64)(float_64)-1)
	$21 = ((float_64)$0 * (float_64)(float_64)1.4426950216293335)
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$21 + (float_64)$13))) & (int_64)-4294967296)
	$20 = (float_64))($0) - $21)
	
.LABEL $label$19
	$1 = ((float_64)((float_64)(float_64))($1 - $12) * (float_64)$0) + (float_64)((float_64)(float_64))($13 - $20) * (float_64)$1
	$12 = (CASTING float_64)(int_64 ((int_64)$4 & (int_64)-4294967296))
	$21 = ((float_64)$12 * (float_64)$0)
	$0 = ((float_64)$21 + (float_64)$1)
	$4 = (CASTING int_64)(float_64 $0)
	$8 = (CASTING uint_32)(uint_64 $4)))
	$2 = (CASTING uint_32)(uint_64 (uint_64)$4 >> (uint_64)(int_64)32)
	if ( ((int_32)$2) < (int_32)[1083179008]) ){ goto $label$33 }
	if ( ((($2 + [-1083179008]) | $8) == 0) ){ goto $label$32 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$33
	if ( (($2 & [2147482624]) <= [1083231232]) ){ goto $label$30 }
	if ( ((($2 + [1064252416]) | $8) == 0) ){ goto $label$31 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$32
	$0 = (float_64)
	$12 = ((float_64)$1 + (float_64)(float_64)8.008566259537294e-17)
	if ( (((float_64)$12 <= (float_64)$0($0 - $21))) | (((float_64)$12 != (float_64)$12) | ((float_64)$0 != (float_64)$0))) ){ goto $label$30 }
	return ((float_64)((float_64)$10 * (float_64)(float_64)1.e+300) * (float_64)(float_64)1.e+300)
	
.LABEL $label$31
	$0 = (float_64)
	if ( ((((float_64)$1 > (float_64)$0($0 - $21))) | (((float_64)$1 != (float_64)$1) | ((float_64)$0 != (float_64)$0))) == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$8 = ($2 & [2147483647])
	if ( ($8 <= [1071644673]) ){ goto $label$35 }
	$6 = (uint_32($8 >> [20]) & [2047])
	$8 = (uint_32([1048576] >> (uint_32($8 >> [20]) + [-1022])) + $2)
	$5 = uint_32((($8 & [1048575]) | [1048576]) >> ([1043] - $6))
	$2 = ( ([0] - $5) ? $5 : ((int_32)$2 < (int_32)[0]) )
	$21 = (float_64))($21 - (CASTING float_64)(int_64 ((int_64)(CASTING uint_64)(uint_32 ($8 & ((int_32)uint_32([1048575] >> ($6 + [-1023])) ^ (int_32)[-1]))) << (int_64)32)))
	goto $label$34 
	
.LABEL $label$35
	$2 = [0]
	
.LABEL $label$34
	$0 = (float_64)
	$0 = ((float_64)$1 * (float_64)$1)
	$21 = ((float_64)((float_64)(float_64))($1 - (float_64))($0 - $21)) * (float_64)(float_64)0.6931471805599453
	$0 = (CASTING float_64)(int_64 ((int_64)(CASTING int_64)(float_64 ((float_64)$1 + (float_64)$21)) & (int_64)-4294967296))
	$12 = ((float_64)$0 * (float_64)(float_64)0.6931471824645996)
	$1 = ((float_64)$12 + (float_64)$21 + (float_64)((float_64)$0 * (float_64)(float_64)-1.904654299957768e-09))
	$1 = (float_64)
	$4 = (CASTING int_64)(float_64 $1((float_64)1 - (float_64))((float_64))(((float_64)((float_64)$1)) * (float_64)$0($1 - ((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)((float_64)((float_64)$0 * (float_64)(float_64)4.1381367970572385e-08) + (float_64)(float_64)-1.6533902205465252e-06)) + (float_64)(float_64)6.613756321437934e-05)) + (float_64)(float_64)-2.7777777777015593e-03)) + (float_64)(float_64)0.16666666666666602))))) / (float_64)((float_64)$0 + (float_64)(float_64)-2)
	$8 = ((CASTING uint_32)(uint_64 (uint_64)$4 - ((float_64)$0($21 - (float_64))($1 - $12))) + (float_64)((float_64)$1 * (float_64)$0))
	if ( ((int_32)int_32($8 - $1))))) >> (uint_64)(int_64)32)) + ($2 << [20]))) >> [20]) <= (int_32)[0]) ){ goto $label$36 }
	return ((float_64)$10 * (float_64)(CASTING float_64)(int_64 ((int_64)((int_64)(CASTING uint_64)(uint_32 $8) << (int_64)32) | (int_64)((int_64)$4 & (int_64)4294967295))))
	
.LABEL $label$36
	return ((float_64)$10 * (float_64)CALL scalbn($1, $2))
	
.LABEL $label$29
	return ((float_64)((float_64)$10 * (float_64)(float_64)1e-300) * (float_64)(float_64)1e-300)
	
.LABEL $label$1
	return $21
}

void .FUNC $152 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen($1)
	$3 = *($2)
	$4 = ( *($2 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$6 = ($4 + $3)
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$6 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$6 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$5 = (($6 + [16]) & [-16])
	$6 = CALL $138($5)
	*($0) = ($5 | [1])
	*(($0 + [8])) = $6
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($6, $1, $3)
	
.LABEL $label$2
	*(($6 + $3)) = [0]
	CALL $142($0, ( *($2 + [8]) ? ($2 + [1]) : (*($2) & [1]) ), $4)
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC _ZNSt3__14stolERKNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEPji (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [16])
	*([0] + [4]) = $6
	*(($6 + [8])) = [0]
	*($6) = (int_64)0
	$3 = CALL strlen([12176])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$3 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$6 }
	*($6) = ($3 << [1])
	$5 = ($6 | [1])
	if ( $3 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$4 = (($3 + [16]) & [-16])
	$5 = CALL $138($4)
	*($6) = ($4 | [1])
	*($6 + [8]) = $5
	*($6 + [4]) = $3
	
.LABEL $label$5
	CALL memcpy($5, [12176], $3)
	
.LABEL $label$4
	*(($5 + $3)) = [0]
	*($6 + [12]) = [0]
	$3 = *($0 + [8])
	$5 = *($0)
	$4 = *(CALL __errno_location())
	*(CALL __errno_location()) = [0]
	$3 = ( $3 ? ($0 + [1]) : ($5 & [1]) )
	$2 = CALL strtol($3, ($6 + [12]), $2)
	$0 = CALL __errno_location()
	$5 = *($0)
	*($0) = $4
	if ( ((int_32)$5 == (int_32)[34]) ){ goto $label$2 }
	$0 = *($6 + [12])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$1 }
	if ( ($1 == 0) ){ goto $label$7 }
	*($1) = ($0 - $3)
	
.LABEL $label$7
	if ( ((*($6) & [1]) == 0) ){ goto $label$8 }
	CALL $139(*($6 + [8]))
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
	return $2
	
.LABEL $label$3
	CALL abort()
	
.LABEL $label$2
	CALL $154($6)
	
.LABEL $label$1
	CALL $155($6)
	(unreachable)
	(unreachable)
	return (unreachable)
}

int_32 .FUNC $150 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	$4 = *($0)
	if ( ($4 & [1]) ){ goto $label$2 }
	$4 = uint_32($4 >> [1])
	$3 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$4 = *($0 + [4])
	$3 = *($0 + [8])
	
.LABEL $label$1
	$0 = [-1]
	if ( ((uint_32)$4 <= (uint_32)$2) ){ goto $label$3 }
	$0 = ($4 - $2)
	if ( ($0 == 0) ){ goto $label$5 }
	$0 = CALL memchr(($3 + $2), ($1 & [255]), $0)
	goto $label$4 
	
.LABEL $label$5
	$0 = [0]
	
.LABEL $label$4
	$0 = ( ($0 - $3) ? [-1] : $0 )
	
.LABEL $label$3
	return $0
}

int_32 .FUNC $151 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	$6 = *($0)
	$5 = ($6 & [1])
	if ( $5 ){ goto $label$2 }
	$6 = uint_32($6 >> [1])
	goto $label$1 
	
.LABEL $label$2
	$6 = *($0 + [4])
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)[-1]) ){ goto $label$3 }
	if ( ($6 <= $1) ){ goto $label$3 }
	$6 = ($6 - $1)
	$6 = ( $6 ? $2 : ($6 <= $2) )
	if ( $5 ){ goto $label$5 }
	$0 = ($0 + [1])
	goto $label$4 
	
.LABEL $label$5
	$0 = *($0 + [8])
	
.LABEL $label$4
	$5 = ((uint_32)$6 > (uint_32)$4)
	$2 = ( $4 ? $6 : $5 )
	if ( ($2 == 0) ){ goto $label$6 }
	$1 = CALL memcmp(($0 + $1), $3, $2)
	if ( ($1 == 0) ){ goto $label$6 }
	return $1
	
.LABEL $label$6
	return ( [-1] ? $5 : ($6 <= $4) )
	
.LABEL $label$3
	CALL abort()
	return (unreachable)
}

void .FUNC _ZNSt3__19to_stringEl (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [12224], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $157(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $157(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

int_32 .FUNC $157 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($1 == 0) ){ goto $label$1 }
	$3 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$3 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$4 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$4 = *($0 + [4])
	
.LABEL $label$3
	if ( ((uint_32)($3 - $4) >= (uint_32)$1) ){ goto $label$5 }
	CALL $146($0, $3, (($1 - $3) + $4), $4, $4, [0], [0])
	$5 = *($0)
	
.LABEL $label$5
	if ( ($5 & [1]) ){ goto $label$7 }
	$5 = ($0 + [1])
	goto $label$6 
	
.LABEL $label$7
	$5 = *($0 + [8])
	
.LABEL $label$6
	CALL memset(($5 + $4), ($2 & [255]), $1)
	$1 = ($4 + $1)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $1
	
.LABEL $label$8
	*(($5 + $1)) = [0]
	
.LABEL $label$1
	return $0
}

void .FUNC $154 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $39($1, $0, [12208])
	CALL abort()
	(unreachable)
}

void .FUNC $155 (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [4]) - [16])
	*([0] + [4]) = $1
	CALL $39($1, $0, [12192])
	CALL abort()
	(unreachable)
}

void .FUNC _ZNSt3__19to_stringEd (int_32 $0, float_64 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	$6 = [10]
	$2 = (($7 + [16]) | [1])
	CALL memset($2, [0], [10])
	$3 = *($7 + [16])
	if ( ($3 & [1]) ){ goto $label$2 }
	$3 = [20]
	*($7 + [16]) = [20]
	$6 = *($7 + [20])
	goto $label$1 
	
.LABEL $label$2
	*($7 + [20]) = [10]
	
.LABEL $label$1
	*(($7 + [27])) = [0]
	$6 = ( $6 ? uint_32($3 >> [1]) : ($3 & [1]) )
	$5 = ($7 + [24])
	
.LOOP $label$4:
	*($7) = $1
	$3 = CALL snprintf(( *($5) ? $2 : ($3 & [1]) ), ($6 + [1]), [12240], $7)
	if ( ((int_32)$3 < (int_32)[0]) ){ goto $label$6 }
	if ( ((uint_32)$3 <= (uint_32)$6) ){ goto $label$3 }
	$6 = $3
	goto $label$5 
	
.LABEL $label$6
	$6 = (($6 << [1]) | [1])
	
.LABEL $label$5
	$4 = ($3 & [1])
	$3 = *($7 + [16])
	$3 = ( *($7 + [20]) ? uint_32($3 >> [1]) : $4 )
	if ( ((uint_32)$6 <= (uint_32)$3) ){ goto $label$7 }
	CALL $157(($7 + [16]), ($6 - $3), [0])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$7
	if ( $4 ){ goto $label$8 }
	*(((($7 + [16]) + $6) + [1])) = [0]
	*($7 + [16]) = ($6 << [1])
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$8
	*((*($5) + $6)) = [0]
	*($7 + [20]) = $6
	$3 = *($7 + [16])
	goto $label$4 
	
.LABEL $label$3
	$6 = ($6 & [1])
	$6 = *($7 + [16])
	$4 = ( *($7 + [20]) ? uint_32($6 >> [1]) : $6 )
	if ( ((uint_32)$3 <= (uint_32)$4) ){ goto $label$10 }
	CALL $157(($7 + [16]), ($3 - $4), [0])
	goto $label$9 
	
.LABEL $label$10
	if ( $6 ){ goto $label$11 }
	*(((($7 + [16]) + $3) + [1])) = [0]
	*($7 + [16]) = ($3 << [1])
	goto $label$9 
	
.LABEL $label$11
	*((*(($7 + [24])) + $3)) = [0]
	*($7 + [20]) = $3
	
.LABEL $label$9
	*($0) = *($7 + [16])
	*(($0 + [8])) = *((($7 + [16]) + [8]))
	*([0] + [4]) = ($7 + [32])
}

void .FUNC $159 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

int_32 .FUNC $179 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	int_32 $15
	int_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_64 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_32 $28
	int_32 $29
	int_32 $30
	int_32 $31
	int_32 $32
	int_64 $33
	int_64 $34
	int_64 $35
	int_32 $36
	int_32 $37
	int_32 $38
	int_32 $39
	$39 = (*([0] + [4]) - [8128])
	*([0] + [4]) = $39
	$12 = (($39 + [692]) + [11])
	$11 = (($39 + [704]) | [8])
	$10 = (($39 + [704]) | [9])
	$9 = ($39 + [7664])
	$8 = ([-2] - ($39 + [704]))
	$7 = (($39 + [692]) + [12])
	$6 = (($39 + [352]) + [54])
	$5 = (($39 + [352]) + [55])
	$30 = [0]
	$38 = [0]
	$32 = [0]
	
.LOOP $label$17:
	$38 = ($30 + $38)
	$37 = $1
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$16 }
	$1 = $37
	$30 = ($30 & [255])
	if ( ($30 == 0) ){ goto $label$20 }
	
.LOOP $label$21:
	if ( ((int_32)$30 == (int_32)[37]) ){ goto $label$19 }
	$1 = ($1 + [1])
	$30 = (*($1) & [255])
	if ( $30 ){ goto $label$21 }
	
.LABEL $label$20
	$30 = $1
	goto $label$18 
	
.LABEL $label$19
	$30 = $1
	
.LOOP $label$22:
	if ( ((int_32)*(($1 + [1])) != (int_32)[37]) ){ goto $label$18 }
	$30 = ($30 + [1])
	$1 = ($1 + [2])
	if ( ((int_32)*($1) == (int_32)[37]) ){ goto $label$22 }
	
.LABEL $label$18
	$13 = ([2147483647] - $38)
	$30 = ($30 - $37)
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	if ( ($0 == 0) ){ goto $label$23 }
	if ( (*($0) & [32]) ){ goto $label$23 }
	CALL __fwritex($37, $30, $0)
	
.LABEL $label$23
	if ( $30 ){ goto $label$24 }
	$36 = ($1 + [1])
	$27 = [-1]
	$30 = *($1 + [1])
	$17 = ($30 + [-48])
	if ( ((uint_32)$17 > (uint_32)[9]) ){ goto $label$25 }
	$1 = ((int_32)*($1 + [2]) == (int_32)[36])
	$36 = ( ($1 + [3]) ? $36 : $1 )
	$30 = *($36)
	$27 = ( $17 ? [-1] : $1 )
	$32 = ( [1] ? $32 : $1 )
	
.LABEL $label$25
	$14 = [0]
	$1 = (int_32(($30 << [24]) >> [24]) + [-32])
	if ( ((uint_32)$1 > (uint_32)[31]) ){ goto $label$26 }
	$14 = [0]
	
.LOOP $label$27:
	if ( ((([1] << $1) & [75913]) == 0) ){ goto $label$26 }
	$14 = (([1] << (int_32(($30 << [24]) >> [24]) + [-32])) | $14)
	$36 = ($36 + [1])
	$30 = *($36)
	$1 = ($30 + [-32])
	if ( ($1 <= [32]) ){ goto $label$27 }
	
.LABEL $label$26
	if ( ((int_32)($30 & [255]) != (int_32)[42]) ){ goto $label$33 }
	$1 = (*($36 + [1]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$32 }
	if ( ((int_32)*($36 + [2]) != (int_32)[36]) ){ goto $label$32 }
	*(($4 + ($1 << [2]))) = [10]
	$17 = ($36 + [3])
	$32 = [1]
	$15 = *((($3 + (*(($36 + [1])) << [4])) + [-768]))
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	goto $label$31 
	
.LABEL $label$33
	$15 = [0]
	$30 = (int_32(($30 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$30 > (uint_32)[9]) ){ goto $label$30 }
	$1 = [0]
	$17 = $36
	
.LOOP $label$34:
	$15 = [-1]
	if ( ((uint_32)$1 > (uint_32)[214748364]) ){ goto $label$35 }
	$1 = ((int_32)$1 * (int_32)[10])
	$15 = ( [-1] ? ($1 + $30) : ((int_32)$30 > (int_32)([2147483647] - $1)) )
	
.LABEL $label$35
	$1 = $15
	$17 = ($17 + [1])
	$30 = (*($17) + [-48])
	if ( ($30 <= [10]) ){ goto $label$34 }
	if ( ((int_32)$15 >= (int_32)[0]) ){ goto $label$28 }
	goto $label$15 
	
.LABEL $label$32
	if ( $32 ){ goto $label$3 }
	$17 = ($36 + [1])
	if ( ($0 == 0) ){ goto $label$29 }
	$1 = *($2)
	*($2) = ($1 + [4])
	$32 = [0]
	$15 = *($1)
	if ( ((int_32)$15 > (int_32)[-1]) ){ goto $label$28 }
	
.LABEL $label$31
	$15 = ([0] - $15)
	$14 = ($14 | [8192])
	goto $label$28 
	
.LABEL $label$30
	$17 = $36
	goto $label$28 
	
.LABEL $label$29
	$32 = [0]
	$15 = [0]
	
.LABEL $label$28
	$30 = [0]
	$36 = [-1]
	if ( ((int_32)*($17) != (int_32)[46]) ){ goto $label$42 }
	$36 = *($17 + [1])
	if ( ((int_32)$36 != (int_32)[42]) ){ goto $label$41 }
	$1 = (*($17 + [2]) + [-48])
	if ( ((uint_32)$1 > (uint_32)[9]) ){ goto $label$40 }
	if ( ((int_32)*($17 + [3]) != (int_32)[36]) ){ goto $label$40 }
	*(($4 + ($1 << [2]))) = [10]
	$1 = ($17 + [4])
	$36 = *((($3 + (*(($17 + [2])) << [4])) + [-768]))
	goto $label$37 
	
.LABEL $label$42
	$1 = $17
	$16 = [0]
	goto $label$36 
	
.LABEL $label$41
	$1 = ($17 + [1])
	$31 = ($36 + [-48])
	if ( ((uint_32)$31 > (uint_32)[9]) ){ goto $label$39 }
	$17 = [0]
	
.LOOP $label$43:
	$36 = [-1]
	if ( ((uint_32)$17 > (uint_32)[214748364]) ){ goto $label$44 }
	$17 = ((int_32)$17 * (int_32)[10])
	$36 = ( [-1] ? ($17 + $31) : ((int_32)$31 > (int_32)([2147483647] - $17)) )
	
.LABEL $label$44
	$16 = [1]
	$17 = $36
	$1 = ($1 + [1])
	$31 = (*($1) + [-48])
	if ( ($31 <= [10]) ){ goto $label$43 }
	goto $label$36 
	
.LABEL $label$40
	if ( $32 ){ goto $label$3 }
	$1 = ($17 + [2])
	if ( ($0 == 0) ){ goto $label$38 }
	$17 = *($2)
	*($2) = ($17 + [4])
	$36 = *($17)
	goto $label$37 
	
.LABEL $label$39
	$16 = [1]
	$36 = [0]
	goto $label$36 
	
.LABEL $label$38
	$36 = [0]
	
.LABEL $label$37
	$16 = ((int_32)uint_32($36 >> [31]) ^ (int_32)[1])
	
.LABEL $label$36
	
.LOOP $label$45:
	$17 = $30
	$30 = (*($1) + [-65])
	if ( ((uint_32)$30 > (uint_32)[57]) ){ goto $label$3 }
	$1 = ($1 + [1])
	$30 = *(((((int_32)$17 * (int_32)[58]) + $30) + [12512]))
	if ( (($30 + [-1]) <= [8]) ){ goto $label$45 }
	if ( ($30 == 0) ){ goto $label$3 }
	if ( ((int_32)$30 != (int_32)[27]) ){ goto $label$49 }
	if ( ((int_32)$27 <= (int_32)[-1]) ){ goto $label$48 }
	goto $label$3 
	
.LABEL $label$49
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$47 }
	*(($4 + ($27 << [2]))) = $30
	$30 = ($3 + ($27 << [4]))
	*($39 + [428]) = *(($30 + [12]))
	*($39 + [424]) = *(($30 + [8]))
	*($39 + [420]) = *(($30 + [4]))
	*($39 + [416]) = *($30)
	
.LABEL $label$48
	if ( $0 ){ goto $label$46 }
	$30 = [0]
	goto $label$24 
	
.LABEL $label$47
	if ( ($0 == 0) ){ goto $label$11 }
	CALL $183(($39 + [416]), $30, $2)
	
.LABEL $label$46
	$31 = ($14 & [-65537])
	$18 = ( $31 ? $14 : ($14 & [8192]) )
	$26 = [0]
	$24 = [12992]
	$30 = *(($1 + [-1]))
	$29 = ( ( ($30 & [-33]) ? $30 : ((int_32)($30 & [15]) == (int_32)[3]) ) ? $30 : $17 )
	$30 = ($29 + [-65])
	if ( ((uint_32)$30 > (uint_32)[55]) ){ goto $label$80 }
	$14 = $5
	goto $label$111 
	
.LABEL $label$111
	if ( ((int_32)$36 > (int_32)[-1]) ){ goto $label$112 }
	if ( $16 ){ goto $label$15 }
	
.LABEL $label$112
	$35 = *($39 + [424])
	$23 = *($39 + [416])
	*($39 + [748]) = [0]
	if ( (CALL __signbitl($23, $35) == 0) ){ goto $label$113 }
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	$20 = [1]
	$19 = [13024]
	goto $label$108 
	
.LABEL $label$113
	if ( ($18 & [2048]) ){ goto $label$109 }
	$20 = ($18 & [1])
	$19 = ( [13030] ? [13025] : $20 )
	goto $label$108 
	
.LABEL $label$110
	$35 = *($39 + [416])
	if ( ((int_64)$35 <= (int_64)-1) ){ goto $label$92 }
	if ( ($18 & [2048]) ){ goto $label$88 }
	$26 = ($18 & [1])
	$24 = ( [12994] ? [12992] : $26 )
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$109
	$20 = [1]
	$19 = [13027]
	
.LABEL $label$108
	if ( ((int_32)CALL __fpclassifyl($23, $35) <= (int_32)[1]) ){ goto $label$115 }
	CALL frexpl(($39 + [320]), $23, $35, ($39 + [748]))
	$23 = *($39 + [328])
	$35 = *($39 + [320])
	CALL __addtf3(($39 + [304]), $35, $23, $35, $23)
	$23 = *((($39 + [304]) + [8]))
	$35 = *($39 + [304])
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$116 }
	*($39 + [748]) = (*($39 + [748]) + [-1])
	
.LABEL $label$116
	$21 = ($29 | [32])
	if ( ((int_32)$21 != (int_32)[97]) ){ goto $label$114 }
	$37 = ($29 & [32])
	$24 = ( ($19 + [9]) ? $19 : $37 )
	if ( ((uint_32)$36 > (uint_32)[26]) ){ goto $label$77 }
	if ( (([27] - $36) == 0) ){ goto $label$77 }
	$30 = ($36 + [-27])
	$34 = (int_64)4612248968380809216
	$33 = (int_64)0
	
.LOOP $label$117:
	CALL __multf3(($39 + [208]), $33, $34, (int_64)0, (int_64)4612530443357519872)
	$34 = *((($39 + [208]) + [8]))
	$33 = *($39 + [208])
	$30 = ($30 + [1])
	if ( $30 ){ goto $label$117 }
	if ( ((int_32)*($24) != (int_32)[45]) ){ goto $label$78 }
	CALL __subtf3(($39 + [160]), $35, ((int_64)$23 ^ (int_64)-9223372036854775808), $33, $34)
	CALL __addtf3(($39 + [144]), $33, $34, *($39 + [160]), *((($39 + [160]) + [8])))
	$23 = ((int_64)*((($39 + [144]) + [8])) ^ (int_64)-9223372036854775808)
	$35 = *($39 + [144])
	goto $label$77 
	
.LABEL $label$115
	$16 = CALL __unordtf2($23, $35, $23, $35)
	$37 = ($20 + [3])
	if ( ($18 & [8192]) ){ goto $label$93 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$93 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$95 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$118:
	if ( (($30 & [1]) == 0) ){ goto $label$119 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$119
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$118 }
	if ( $14 ){ goto $label$93 }
	$31 = ($31 & [255])
	goto $label$94 
	
.LABEL $label$114
	$30 = ((int_32)$36 < (int_32)[0])
	if ( (CALL __netf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$90 }
	CALL __multf3(($39 + [288]), $35, $23, (int_64)0, (int_64)4619285842798575616)
	$31 = (*($39 + [748]) + [-28])
	*($39 + [748]) = $31
	$23 = *((($39 + [288]) + [8]))
	$35 = *($39 + [288])
	goto $label$89 
	
.LABEL $label$107
	$35 = *($39 + [416])
	*((($39 + [344]) + [4])) = [0]
	*($39 + [344]) = $35
	*($39 + [416]) = ($39 + [344])
	$36 = [-1]
	$37 = ($39 + [344])
	goto $label$105 
	
.LABEL $label$106
	$37 = *($39 + [416])
	if ( ($36 == 0) ){ goto $label$74 }
	
.LABEL $label$105
	$30 = [0]
	$14 = $37
	$17 = [0]
	
.LOOP $label$121:
	$31 = *($14)
	if ( ($31 == 0) ){ goto $label$120 }
	$17 = CALL wctomb(($39 + [340]), $31)
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$120 }
	if ( ((uint_32)$17 > (uint_32)($36 - $30)) ){ goto $label$120 }
	$14 = ($14 + [4])
	$30 = ($17 + $30)
	if ( ((uint_32)$36 > (uint_32)$30) ){ goto $label$121 }
	
.LABEL $label$120
	if ( ((int_32)$17 < (int_32)[0]) ){ goto $label$2 }
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	goto $label$73 
	
.LABEL $label$104
	*((($39 + [352]) + [54])) = *($39 + [416])
	$36 = [1]
	$37 = $6
	$14 = $5
	$18 = $31
	goto $label$79 
	
.LABEL $label$103
	$37 = CALL strerror(*(CALL $172()))
	goto $label$97 
	
.LABEL $label$102
	$30 = ($17 & [255])
	if ( ((uint_32)$30 > (uint_32)[7]) ){ goto $label$56 }
	goto $label$122 
	
.LABEL $label$122
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$101
	$37 = $5
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$123 }
	$37 = $5
	
.LOOP $label$124:
	*(($37 = ($37 + [-1]))) = ((int_64)((int_64)$35 & (int_64)7) | (int_64)48)
	$35 = (uint_64)$35 >> (uint_64)(int_64)3
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$124 }
	
.LABEL $label$123
	if ( ($18 & [8]) ){ goto $label$84 }
	$26 = [0]
	$24 = [12992]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$100
	$36 = ( $36 ? [8] : ((uint_32)$36 > (uint_32)[8]) )
	$18 = ($18 | [8])
	$29 = [120]
	
.LABEL $label$99
	$26 = [0]
	$24 = [12992]
	$35 = *($39 + [416])
	if ( (int_64)($35 == 0) ){ goto $label$125 }
	$30 = ($29 & [32])
	$37 = $5
	
.LOOP $label$126:
	*(($37 = ($37 + [-1]))) = (*((((CASTING uint_32)(uint_64 $35) & [15]) + [12976])) | $30)
	$35 = (uint_64)$35 >> (uint_64)(int_64)4
	if ( ((int_64)$35) != (int_64)0) ){ goto $label$126 }
	if ( (($18 & [8]) == 0) ){ goto $label$83 }
	if ( (int_64)(*($39 + [416]) == 0) ){ goto $label$83 }
	$24 = (int_32($29 >> [4]) + [12992])
	$26 = [2]
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$125
	$37 = $5
	if ( $16 ){ goto $label$82 }
	goto $label$81 
	
.LABEL $label$98
	$30 = *($39 + [416])
	$37 = ( $30 ? [13008] : $30 )
	
.LABEL $label$97
	$26 = [0]
	$30 = CALL strnlen($37, ( [2147483647] ? $36 : ((int_32)$36 < (int_32)[0]) ))
	$14 = ($37 + $30)
	if ( ((int_32)$36 <= (int_32)[-1]) ){ goto $label$91 }
	$18 = $31
	$36 = $30
	goto $label$79 
	
.LABEL $label$96
	$26 = [0]
	$24 = [12992]
	$35 = *($39 + [416])
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$95
	if ( $17 ){ goto $label$93 }
	
.LABEL $label$94
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$93
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$127 }
	CALL __fwritex($19, $20, $0)
	$30 = *($0)
	
.LABEL $label$127
	if ( ($30 & [32]) ){ goto $label$128 }
	$30 = uint_32(($29 & [32]) >> [5])
	CALL __fwritex(( ( [13088] ? [13104] : $30 ) ? ( [13056] ? [13072] : $30 ) : $16 ), [3], $0)
	
.LABEL $label$128
	if ( ((int_32)($18 & [73728]) != (int_32)[8192]) ){ goto $label$129 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$129 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$131 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$132:
	if ( (($30 & [1]) == 0) ){ goto $label$133 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$133
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$132 }
	if ( $14 ){ goto $label$129 }
	$31 = ($31 & [255])
	goto $label$130 
	
.LABEL $label$131
	if ( $17 ){ goto $label$129 }
	
.LABEL $label$130
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$129
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$92
	$35 = (int_64)
	*($39 + [416]) = $35((int_64)0 - $35))
	$26 = [1]
	$24 = [12992]
	if ( ((uint_64)$35 >= (uint_64)(int_64)4294967296) ){ goto $label$87 }
	goto $label$86 
	
.LABEL $label$91
	$18 = $31
	$36 = $30
	if ( (*($14) == 0) ){ goto $label$79 }
	goto $label$15 
	
.LABEL $label$90
	$31 = *($39 + [748])
	
.LABEL $label$89
	$28 = ( [6] ? $36 : $30 )
	$22 = ( ($39 + [752]) ? $9 : ((int_32)$31 < (int_32)[0]) )
	$36 = $22
	
.LOOP $label$134:
	$30 = CALL __fixunstfsi($35, $23)
	CALL __floatunsitf(($39 + [272]), $30)
	CALL __subtf3(($39 + [256]), $35, $23, *($39 + [272]), *((($39 + [272]) + [8])))
	CALL __multf3(($39 + [240]), *($39 + [256]), *((($39 + [256]) + [8])), (int_64)0, (int_64)4619810130798575616)
	*($36) = $30
	$36 = ($36 + [4])
	$23 = *((($39 + [240]) + [8]))
	$35 = *($39 + [240])
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$134 }
	if ( ((int_32)$31 < (int_32)[1]) ){ goto $label$137 }
	$17 = $22
	
.LOOP $label$138:
	$14 = ( $31 ? [29] : ((int_32)$31 < (int_32)[29]) )
	$30 = ($36 + [-4])
	if ( ($30 <= $17) ){ goto $label$139 }
	$23 = (CASTING uint_64)(uint_32 $14)
	$35 = (int_64)0
	
.LOOP $label$140:
	$35 = ((int_64)((int_64)*($30) << (int_64)$23) + (int_64)((int_64)$35 & (int_64)4294967295))
	*($30) = ((uint_64)$35 % (uint_64)(int_64)1000000000)
	$35 = ((uint_64)$35 / (uint_64)(int_64)1000000000)
	$30 = ($30 + [-4])
	if ( ((uint_32)$30 >= (uint_32)$17) ){ goto $label$140 }
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( ($30 == 0) ){ goto $label$139 }
	*(($17 = ($17 + [-4]))) = $30
	
.LABEL $label$139
	
.LOOP $label$142:
	$30 = $36
	if ( ((uint_32)$30 <= (uint_32)$17) ){ goto $label$141 }
	$36 = ($30 + [-4])
	if ( (*($36) == 0) ){ goto $label$142 }
	
.LABEL $label$141
	$36 = $30
	$31 = ($31 - $14)
	if ( ((int_32)$31 > (int_32)[0]) ){ goto $label$138 }
	*($39 + [748]) = $31
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	goto $label$136 
	
.LABEL $label$137
	$30 = $36
	$17 = $22
	if ( ((int_32)$31 > (int_32)[-1]) ){ goto $label$135 }
	
.LABEL $label$136
	$24 = (((uint_32)($28 + [45]) / (uint_32)[9]) + [1])
	if ( ((int_32)$21 != (int_32)[102]) ){ goto $label$144 }
	$25 = ($22 + ($24 << [2]))
	
.LOOP $label$145:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$147 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$148:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$148 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$146 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$146 
	
.LABEL $label$147
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$146
	$30 = ( $25 ? $30 : ((int_32)int_32(($30 - $22) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$145 }
	goto $label$143 
	
.LABEL $label$144
	
.LOOP $label$149:
	$36 = ([0] - $31)
	$16 = ( $36 ? [9] : ((int_32)$36 < (int_32)[9]) )
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$151 }
	$27 = uint_32([1000000000] >> $16)
	$26 = (([1] << $16) + [-1])
	$14 = [0]
	$36 = $17
	
.LOOP $label$152:
	$37 = *($36)
	*($36) = (uint_32($37 >> $16) + $14)
	$14 = ((int_32)($37 & $26) * (int_32)$27)
	$36 = ($36 + [4])
	if ( ($36 <= $30) ){ goto $label$152 }
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	if ( ($14 == 0) ){ goto $label$150 }
	*($30) = $14
	$30 = ($30 + [4])
	goto $label$150 
	
.LABEL $label$151
	$17 = ( $17 ? ($17 + [4]) : *($17) )
	
.LABEL $label$150
	$30 = ( ($17 + ($24 << [2])) ? $30 : ((int_32)int_32(($30 - $17) >> [2]) > (int_32)$24) )
	$31 = ($16 + $31)
	if ( ((int_32)$31 < (int_32)[0]) ){ goto $label$149 }
	
.LABEL $label$143
	*($39 + [748]) = $31
	
.LABEL $label$135
	$36 = [0]
	if ( ((uint_32)$17 >= (uint_32)$30) ){ goto $label$153 }
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$153 }
	$14 = [10]
	
.LOOP $label$154:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$154 }
	
.LABEL $label$153
	$16 = ((int_32)$21 == (int_32)[103])
	$14 = (($28 - ( $36 ? [0] : ((int_32)$21 != (int_32)[102]) )) - (((int_32)$28 != (int_32)[0]) & $16))
	if ( ((int_32)$14 >= (int_32)(((int_32)int_32(($30 - $22) >> [2]) * (int_32)[9]) + [-9])) ){ goto $label$155 }
	$37 = ($14 + [147456])
	$24 = ($22 + (((int_32)$37 / (int_32)[9]) << [2]))
	$31 = ($24 + [-65532])
	$14 = [10]
	$37 = ((int_32)$37 % (int_32)[9])
	if ( ((int_32)($37 + [1]) > (int_32)[8]) ){ goto $label$156 }
	$37 = ([8] - $37)
	$14 = [10]
	
.LOOP $label$157:
	$14 = ((int_32)$14 * (int_32)[10])
	$37 = ($37 + [-1])
	if ( $37 ){ goto $label$157 }
	
.LABEL $label$156
	$27 = *($31)
	$37 = ((uint_32)$27 % (uint_32)$14)
	$26 = ($31 + [4])
	if ( ((int_32)$26 != (int_32)$30) ){ goto $label$159 }
	if ( ($37 == 0) ){ goto $label$158 }
	
.LABEL $label$159
	if ( (((uint_32)$27 / (uint_32)$14) & [1]) ){ goto $label$161 }
	$35 = (int_64)4643211215818981376
	$23 = (int_64)0
	if ( ((uint_32)$31 <= (uint_32)$17) ){ goto $label$160 }
	if ( ((int_32)$14 != (int_32)[1000000000]) ){ goto $label$160 }
	if ( ((*(($31 + [-4])) & [1]) == 0) ){ goto $label$160 }
	
.LABEL $label$161
	$35 = (int_64)4643211215818981376
	$23 = (int_64)1
	
.LABEL $label$160
	$34 = (int_64)4611123068473966592
	$25 = ((int_32)$14 / (int_32)[2])
	if ( ($37 <= $25) ){ goto $label$162 }
	$34 = ( ( (int_64)4611404543450677248 ? (int_64)4611545280939032576 : ((int_32)$37 == (int_32)$25) ) ? (int_64)4611545280939032576 : ((int_32)$26 == (int_32)$30) )
	
.LABEL $label$162
	if ( ($20 == 0) ){ goto $label$163 }
	if ( ((int_32)*($19) != (int_32)[45]) ){ goto $label$163 }
	$34 = ((int_64)$34 ^ (int_64)-9223372036854775808)
	$35 = ((int_64)$35 ^ (int_64)-9223372036854775808)
	
.LABEL $label$163
	CALL __addtf3(($39 + [224]), $23, $35, (int_64)0, $34)
	$37 = ($27 - $37)
	*($31) = $37
	if ( (CALL __eqtf2(*($39 + [224]), *((($39 + [224]) + [8])), $23, $35) == 0) ){ goto $label$158 }
	$36 = ($37 + $14)
	*($31) = $36
	if ( ($36 <= [1000000000]) ){ goto $label$164 }
	$36 = ($24 + [-65536])
	
.LOOP $label$165:
	*(($36 + [4])) = [0]
	if ( ((uint_32)$36 >= (uint_32)$17) ){ goto $label$166 }
	*(($17 = ($17 + [-4]))) = [0]
	
.LABEL $label$166
	$14 = (*($36) + [1])
	*($36) = $14
	$36 = ($36 + [-4])
	if ( ((uint_32)$14 > (uint_32)[999999999]) ){ goto $label$165 }
	$31 = ($36 + [4])
	
.LABEL $label$164
	$36 = ((int_32)int_32(($22 - $17) >> [2]) * (int_32)[9])
	$37 = *($17)
	if ( ($37 <= [10]) ){ goto $label$158 }
	$14 = [10]
	
.LOOP $label$167:
	$36 = ($36 + [1])
	$14 = ((int_32)$14 * (int_32)[10])
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$167 }
	
.LABEL $label$158
	$14 = ($31 + [4])
	$30 = ( $14 ? $30 : ((uint_32)$30 > (uint_32)$14) )
	
.LABEL $label$155
	$31 = ([0] - $36)
	
.LOOP $label$171:
	$14 = $30
	if ( ((uint_32)$14 <= (uint_32)$17) ){ goto $label$170 }
	$30 = ($14 + [-4])
	if ( (*($30) == 0) ){ goto $label$171 }
	$27 = [1]
	if ( $16 ){ goto $label$169 }
	goto $label$168 
	
.LABEL $label$170
	$27 = [0]
	if ( ($16 == 0) ){ goto $label$168 }
	
.LABEL $label$169
	$30 = (($28 == 0) + $28)
	if ( ((int_32)$30 <= (int_32)$36) ){ goto $label$76 }
	if ( ((int_32)$36 < (int_32)[-4]) ){ goto $label$76 }
	$29 = ($29 + [-1])
	$28 = (($30 + [-1]) - $36)
	$16 = ($18 & [8])
	if ( ($16 == 0) ){ goto $label$75 }
	goto $label$68 
	
.LABEL $label$168
	$16 = ($18 & [8])
	goto $label$68 
	
.LABEL $label$88
	$26 = [1]
	$24 = [12993]
	if ( (uint_64)($35 <= (int_64)4294967296) ){ goto $label$86 }
	
.LABEL $label$87
	$37 = $5
	
.LOOP $label$172:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$172 }
	goto $label$85 
	
.LABEL $label$86
	$23 = $35
	$37 = $5
	
.LABEL $label$85
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$83 }
	
.LOOP $label$173:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $17 ){ goto $label$173 }
	goto $label$83 
	
.LABEL $label$84
	$30 = ($5 - $37)
	$24 = ( [12992] ? [12997] : ((int_32)$36 > (int_32)$30) )
	$26 = ((int_32)$36 <= (int_32)$30)
	
.LABEL $label$83
	if ( ($16 == 0) ){ goto $label$81 }
	
.LABEL $label$82
	if ( ((int_32)$36 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$81
	$18 = ( ($18 & [-65537]) ? $18 : ((int_32)$36 > (int_32)[-1]) )
	$35 = *($39 + [416])
	if ( $36 ){ goto $label$174 }
	if ( ((int_64)($35 == 0) == 0) ){ goto $label$174 }
	$37 = $5
	$14 = $5
	$36 = [0]
	goto $label$79 
	
.LABEL $label$174
	$30 = ((int_64)($35 == 0) + ($5 - $37))
	$36 = ( $36 ? $30 : ((int_32)$36 > (int_32)$30) )
	
.LABEL $label$80
	$14 = $5
	
.LABEL $label$79
	$29 = ($14 - $37)
	$28 = ( $29 ? $36 : ((int_32)$36 < (int_32)$29) )
	if ( ((int_32)$28 > (int_32)([2147483647] - $26)) ){ goto $label$15 }
	$27 = ($26 + $28)
	$30 = ( $27 ? $15 : ((int_32)$15 < (int_32)$27) )
	if ( ((int_32)$30 > (int_32)$13) ){ goto $label$15 }
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$175 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$175 }
	$17 = ($22 <= [256])
	$22 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $22 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$177 }
	$17 = ($14 == 0)
	$14 = $22
	
.LOOP $label$178:
	if ( (($17 & [1]) == 0) ){ goto $label$179 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$179
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$178 }
	if ( $16 ){ goto $label$175 }
	$22 = ($22 & [255])
	goto $label$176 
	
.LABEL $label$177
	if ( $14 ){ goto $label$175 }
	
.LABEL $label$176
	CALL __fwritex(($39 + [432]), $22, $0)
	
.LABEL $label$175
	if ( (*($0) & [32]) ){ goto $label$180 }
	CALL __fwritex($24, $26, $0)
	
.LABEL $label$180
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$181 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$181 }
	$17 = ($26 <= [256])
	$26 = ($30 - $27)
	CALL memset(($39 + [432]), [48], ( $26 ? [256] : $17 ))
	$31 = *($0)
	$14 = ($31 & [32])
	if ( $17 ){ goto $label$183 }
	$17 = ($14 == 0)
	$14 = $26
	
.LOOP $label$184:
	if ( (($17 & [1]) == 0) ){ goto $label$185 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$31 = *($0)
	
.LABEL $label$185
	$16 = ($31 & [32])
	$17 = ($16 == 0)
	$14 = ($14 + [-256])
	if ( ((uint_32)$14 > (uint_32)[255]) ){ goto $label$184 }
	if ( $16 ){ goto $label$181 }
	$26 = ($26 & [255])
	goto $label$182 
	
.LABEL $label$183
	if ( $14 ){ goto $label$181 }
	
.LABEL $label$182
	CALL __fwritex(($39 + [432]), $26, $0)
	
.LABEL $label$181
	if ( ((int_32)$29 >= (int_32)$36) ){ goto $label$186 }
	$17 = ($16 <= [256])
	$16 = ($28 - $29)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$188 }
	$17 = ($36 == 0)
	$36 = $16
	
.LOOP $label$189:
	if ( (($17 & [1]) == 0) ){ goto $label$190 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$190
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$189 }
	if ( $31 ){ goto $label$186 }
	$16 = ($16 & [255])
	goto $label$187 
	
.LABEL $label$188
	if ( $36 ){ goto $label$186 }
	
.LABEL $label$187
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$186
	if ( (*($0) & [32]) ){ goto $label$191 }
	CALL __fwritex($37, $29, $0)
	
.LABEL $label$191
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$24 }
	if ( ((int_32)$27 >= (int_32)$15) ){ goto $label$24 }
	$17 = ($37 <= [256])
	$37 = ($30 - $27)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $17 ))
	$36 = *($0)
	$15 = ($36 & [32])
	if ( $17 ){ goto $label$193 }
	$17 = ($15 == 0)
	$15 = $37
	
.LOOP $label$194:
	if ( (($17 & [1]) == 0) ){ goto $label$195 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$195
	$14 = ($36 & [32])
	$17 = ($14 == 0)
	$15 = ($15 + [-256])
	if ( ((uint_32)$15 > (uint_32)[255]) ){ goto $label$194 }
	if ( $14 ){ goto $label$24 }
	$37 = ($37 & [255])
	goto $label$192 
	
.LABEL $label$193
	if ( $15 ){ goto $label$24 }
	
.LABEL $label$192
	CALL __fwritex(($39 + [432]), $37, $0)
	goto $label$24 
	
.LABEL $label$78
	CALL __addtf3(($39 + [192]), $35, $23, $33, $34)
	CALL __subtf3(($39 + [176]), *($39 + [192]), *((($39 + [192]) + [8])), $33, $34)
	$23 = *((($39 + [176]) + [8]))
	$35 = *($39 + [176])
	
.LABEL $label$77
	$30 = int_32($31 >> [31])
	$31 = *($39 + [748])
	$17 = ((int_32)($31 + $30) ^ (int_32)$30)
	$34 = (CASTING int_64)(int_32 $17)
	$30 = [0]
	if ( ((int_32)$17 <= (int_32)[-1]) ){ goto $label$198 }
	$17 = (CASTING uint_32)(uint_64 $34)
	if ( $17 ){ goto $label$197 }
	goto $label$196 
	
.LABEL $label$198
	$30 = [0]
	
.LOOP $label$199:
	*(($12 + $30)) = ((int_64)((uint_64)$34 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ($30 + [-1])
	$17 = ((uint_64)$34 > (uint_64)(int_64)42949672959)
	$33 = ((uint_64)$34 / (uint_64)(int_64)10)
	$34 = $33
	if ( $17 ){ goto $label$199 }
	$17 = (CASTING uint_32)(uint_64 $33)
	if ( ($17 == 0) ){ goto $label$196 }
	
.LABEL $label$197
	
.LOOP $label$200:
	*(((($39 + [692]) + $30) + [11])) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$30 = ($30 + [-1])
	$14 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $14 ){ goto $label$200 }
	
.LABEL $label$196
	$17 = ($7 + $30)
	if ( $30 ){ goto $label$201 }
	*(($17 = ($17 + [-1]))) = [48]
	
.LABEL $label$201
	$16 = ($20 | [2])
	*(($27 = ($17 + [-2]))) = ($29 + [15])
	*(($17 + [-1])) = ((uint_32($31 >> [30]) & [2]) + [43])
	if ( ($18 & [8]) ){ goto $label$202 }
	if ( ((int_32)$36 < (int_32)[1]) ){ goto $label$71 }
	$30 = ($39 + [704])
	
.LOOP $label$203:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [80]), $17)
	CALL __subtf3(($39 + [64]), $35, $23, *($39 + [80]), *((($39 + [80]) + [8])))
	CALL __multf3(($39 + [48]), *($39 + [64]), *((($39 + [64]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [12976])) | $37)
	$23 = *((($39 + [48]) + [8]))
	$35 = *($39 + [48])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$204 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$204
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$203 }
	goto $label$70 
	
.LABEL $label$202
	$30 = ($39 + [704])
	
.LOOP $label$205:
	$17 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [128]), $17)
	CALL __subtf3(($39 + [112]), $35, $23, *($39 + [128]), *((($39 + [128]) + [8])))
	CALL __multf3(($39 + [96]), *($39 + [112]), *((($39 + [112]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*($30) = (*(($17 + [12976])) | $37)
	$23 = *((($39 + [96]) + [8]))
	$35 = *($39 + [96])
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$206 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$206
	$30 = $17
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$205 }
	goto $label$70 
	
.LABEL $label$76
	$28 = ($30 + [-1])
	$29 = ($29 + [-2])
	$16 = ($18 & [8])
	if ( $16 ){ goto $label$68 }
	
.LABEL $label$75
	$30 = [9]
	if ( ($27 == 0) ){ goto $label$207 }
	$16 = *(($14 + [-4]))
	if ( ($16 == 0) ){ goto $label$207 }
	$30 = [0]
	if ( ((uint_32)$16 % (uint_32)[10]) ){ goto $label$207 }
	$37 = [10]
	$30 = [0]
	
.LOOP $label$208:
	$30 = ($30 + [1])
	$37 = ((int_32)$37 * (int_32)[10])
	if ( (((uint_32)$16 % (uint_32)$37) == 0) ){ goto $label$208 }
	
.LABEL $label$207
	$37 = (((int_32)int_32(($14 - $22) >> [2]) * (int_32)[9]) + [-9])
	if ( ((int_32)($29 | [32]) != (int_32)[102]) ){ goto $label$69 }
	$16 = [0]
	$30 = ($37 - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	goto $label$68 
	
.LABEL $label$74
	$30 = [0]
	$16 = ($18 & [73728])
	if ( $16 ){ goto $label$72 }
	
.LABEL $label$73
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$72 }
	$17 = ($27 <= [256])
	$27 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $27 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$210 }
	$17 = ($36 == 0)
	$36 = $27
	
.LOOP $label$211:
	if ( (($17 & [1]) == 0) ){ goto $label$212 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$212
	$31 = ($14 & [32])
	$17 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$211 }
	if ( $31 ){ goto $label$72 }
	$27 = ($27 & [255])
	goto $label$209 
	
.LABEL $label$210
	if ( $36 ){ goto $label$72 }
	
.LABEL $label$209
	CALL __fwritex(($39 + [432]), $27, $0)
	
.LABEL $label$72
	if ( ($30 == 0) ){ goto $label$213 }
	$17 = [0]
	
.LOOP $label$214:
	$36 = *($37)
	if ( ($36 == 0) ){ goto $label$213 }
	$36 = CALL wctomb(($39 + [340]), $36)
	$17 = ($36 + $17)
	if ( ((uint_32)$17 > (uint_32)$30) ){ goto $label$213 }
	if ( (*($0) & [32]) ){ goto $label$215 }
	CALL __fwritex(($39 + [340]), $36, $0)
	
.LABEL $label$215
	$37 = ($37 + [4])
	if ( ($17 <= $30) ){ goto $label$214 }
	
.LABEL $label$213
	if ( ((int_32)$16 != (int_32)[8192]) ){ goto $label$216 }
	if ( ((int_32)$15 <= (int_32)$30) ){ goto $label$216 }
	$17 = ($31 <= [256])
	$31 = ($15 - $30)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$218 }
	$17 = ($36 == 0)
	$36 = $31
	
.LOOP $label$219:
	if ( (($17 & [1]) == 0) ){ goto $label$220 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$220
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$219 }
	if ( $37 ){ goto $label$216 }
	$31 = ($31 & [255])
	goto $label$217 
	
.LABEL $label$218
	if ( $36 ){ goto $label$216 }
	
.LABEL $label$217
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$216
	$30 = ( $15 ? $30 : ((int_32)$15 > (int_32)$30) )
	goto $label$24 
	
.LABEL $label$71
	$17 = ($39 + [704])
	
.LOOP $label$221:
	$14 = CALL __fixtfsi($35, $23)
	CALL __floatsitf(($39 + [32]), $14)
	CALL __subtf3(($39 + [16]), $35, $23, *($39 + [32]), *((($39 + [32]) + [8])))
	CALL __multf3($39, *($39 + [16]), *((($39 + [16]) + [8])), (int_64)0, (int_64)4612530443357519872)
	*(($30 = $17)) = (*(($14 + [12976])) | $37)
	$23 = *(($39 + [8]))
	$35 = *($39)
	$17 = ($30 + [1])
	if ( ((int_32)($17 - ($39 + [704])) != (int_32)[1]) ){ goto $label$222 }
	if ( (CALL __eqtf2($35, $23, (int_64)0, (int_64)0) == 0) ){ goto $label$222 }
	*(($30 + [1])) = [46]
	$17 = ($30 + [2])
	
.LABEL $label$222
	if ( CALL __netf2($35, $23, (int_64)0, (int_64)0) ){ goto $label$221 }
	
.LABEL $label$70
	$30 = [-1]
	$31 = ($7 - $27)
	if ( ((int_32)(([2147483645] - $16) - $31) < (int_32)$36) ){ goto $label$50 }
	$26 = ($17 - ($39 + [704]))
	$29 = ( ( ($36 + [2]) ? $26 : ((int_32)($8 + $17) < (int_32)$36) ) ? $26 : $36 )
	$37 = (($31 + $16) + $29)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$65 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$65 }
	$30 = ($28 <= [256])
	$28 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$67 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$223:
	if ( (($30 & [1]) == 0) ){ goto $label$224 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$224
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$223 }
	if ( $14 ){ goto $label$65 }
	$28 = ($28 & [255])
	goto $label$66 
	
.LABEL $label$69
	$16 = [0]
	$30 = (($37 + $36) - $30)
	$30 = ( $30 ? [0] : ((int_32)$30 > (int_32)[0]) )
	$28 = ( $28 ? $30 : ((int_32)$28 < (int_32)$30) )
	
.LABEL $label$68
	$30 = [-1]
	$24 = ($28 | $16)
	$37 = ((int_32)$24 != (int_32)[0])
	if ( ((int_32)$28 > (int_32)([2147483646] - $37)) ){ goto $label$50 }
	$26 = (($28 + $37) + [1])
	$21 = ((int_32)($29 | [32]) != (int_32)[102])
	if ( $21 ){ goto $label$225 }
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	$36 = ( $36 ? [0] : ((int_32)$36 > (int_32)[0]) )
	goto $label$61 
	
.LABEL $label$225
	$30 = ( $31 ? $36 : ((int_32)$36 < (int_32)[0]) )
	$35 = (CASTING int_64)(int_32 $30)
	if ( ((int_32)$30 <= (int_32)[-1]) ){ goto $label$64 }
	$37 = $7
	$30 = (CASTING uint_32)(uint_64 $35)
	if ( $30 ){ goto $label$63 }
	goto $label$62 
	
.LABEL $label$67
	if ( $17 ){ goto $label$65 }
	
.LABEL $label$66
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$65
	if ( (*($0) & [32]) ){ goto $label$226 }
	CALL __fwritex($24, $16, $0)
	
.LABEL $label$226
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$227 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$227 }
	$30 = ($16 <= [256])
	$16 = ($15 - $37)
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$229 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$230:
	if ( (($30 & [1]) == 0) ){ goto $label$231 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$231
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$230 }
	if ( $14 ){ goto $label$227 }
	$16 = ($16 & [255])
	goto $label$228 
	
.LABEL $label$229
	if ( $17 ){ goto $label$227 }
	
.LABEL $label$228
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$227
	if ( (*($0) & [32]) ){ goto $label$232 }
	CALL __fwritex(($39 + [704]), $26, $0)
	
.LABEL $label$232
	$16 = ($29 - $26)
	if ( ((int_32)$16 < (int_32)[1]) ){ goto $label$233 }
	$30 = ($16 <= [256])
	CALL memset(($39 + [432]), [48], ( $16 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$235 }
	$30 = ($17 == 0)
	$17 = $16
	
.LOOP $label$236:
	if ( (($30 & [1]) == 0) ){ goto $label$237 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$237
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$236 }
	if ( $14 ){ goto $label$233 }
	$16 = ($16 & [255])
	goto $label$234 
	
.LABEL $label$235
	if ( $17 ){ goto $label$233 }
	
.LABEL $label$234
	CALL __fwritex(($39 + [432]), $16, $0)
	
.LABEL $label$233
	if ( (*($0) & [32]) ){ goto $label$238 }
	CALL __fwritex($27, $31, $0)
	
.LABEL $label$238
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$239 }
	if ( ((int_32)$15 <= (int_32)$37) ){ goto $label$239 }
	$30 = ($31 <= [256])
	$31 = ($15 - $37)
	CALL memset(($39 + [432]), [32], ( $31 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$241 }
	$30 = ($17 == 0)
	$17 = $31
	
.LOOP $label$242:
	if ( (($30 & [1]) == 0) ){ goto $label$243 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$243
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$242 }
	if ( $14 ){ goto $label$239 }
	$31 = ($31 & [255])
	goto $label$240 
	
.LABEL $label$241
	if ( $17 ){ goto $label$239 }
	
.LABEL $label$240
	CALL __fwritex(($39 + [432]), $31, $0)
	
.LABEL $label$239
	$30 = ( $15 ? $37 : ((int_32)$15 > (int_32)$37) )
	goto $label$50 
	
.LABEL $label$64
	$37 = $7
	
.LOOP $label$244:
	*(($37 = ($37 + [-1]))) = ((int_64)((uint_64)$35 % (uint_64)(int_64)10) | (int_64)48)
	$30 = ((uint_64)$35 > (uint_64)(int_64)42949672959)
	$23 = ((uint_64)$35 / (uint_64)(int_64)10)
	$35 = $23
	if ( $30 ){ goto $label$244 }
	$30 = (CASTING uint_32)(uint_64 $23)
	if ( ($30 == 0) ){ goto $label$62 }
	
.LABEL $label$63
	
.LOOP $label$245:
	*(($37 = ($37 + [-1]))) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$31 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $31 ){ goto $label$245 }
	
.LABEL $label$62
	if ( ((int_32)($7 - $37) > (int_32)[1]) ){ goto $label$246 }
	$30 = ($37 + [-1])
	
.LOOP $label$247:
	*($30) = [48]
	$37 = ($7 - $30)
	$31 = ($30 + [-1])
	$30 = $31
	if ( ((int_32)$37 < (int_32)[2]) ){ goto $label$247 }
	$37 = ($31 + [1])
	
.LABEL $label$246
	*(($25 = ($37 + [-2]))) = $29
	$30 = [-1]
	*(($37 + [-1])) = ((uint_32($36 >> [30]) & [2]) + [43])
	$36 = ($7 - $25)
	if ( ((int_32)$36 > (int_32)([2147483647] - $26)) ){ goto $label$50 }
	
.LABEL $label$61
	$30 = [-1]
	$36 = ($36 + $26)
	if ( ((int_32)$36 > (int_32)((int_32)$20 ^ (int_32)[2147483647])) ){ goto $label$50 }
	$26 = ($36 + $20)
	$18 = ($18 & [73728])
	if ( $18 ){ goto $label$51 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$51 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$53 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$248:
	if ( (($30 & [1]) == 0) ){ goto $label$249 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$249
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$248 }
	if ( $31 ){ goto $label$51 }
	$29 = ($29 & [255])
	goto $label$52 
	
.LABEL $label$60
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$59
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$58
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$57
	*(*($39 + [416])) = $38
	
.LABEL $label$56
	$30 = [0]
	goto $label$24 
	
.LABEL $label$55
	*(*($39 + [416])) = $38
	$30 = [0]
	goto $label$24 
	
.LABEL $label$54
	*(*($39 + [416])) = (CASTING int_64)(int_32 $38)
	$30 = [0]
	goto $label$24 
	
.LABEL $label$53
	if ( $36 ){ goto $label$51 }
	
.LABEL $label$52
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$51
	if ( (*($0) & [32]) ){ goto $label$250 }
	CALL __fwritex($19, $20, $0)
	
.LABEL $label$250
	if ( ((int_32)$18 != (int_32)[65536]) ){ goto $label$251 }
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$251 }
	$30 = ($29 <= [256])
	$29 = ($15 - $26)
	CALL memset(($39 + [432]), [48], ( $29 ? [256] : $30 ))
	$37 = *($0)
	$36 = ($37 & [32])
	if ( $30 ){ goto $label$253 }
	$30 = ($36 == 0)
	$36 = $29
	
.LOOP $label$254:
	if ( (($30 & [1]) == 0) ){ goto $label$255 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$37 = *($0)
	
.LABEL $label$255
	$31 = ($37 & [32])
	$30 = ($31 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$254 }
	if ( $31 ){ goto $label$251 }
	$29 = ($29 & [255])
	goto $label$252 
	
.LABEL $label$253
	if ( $36 ){ goto $label$251 }
	
.LABEL $label$252
	CALL __fwritex(($39 + [432]), $29, $0)
	
.LABEL $label$251
	if ( $21 ){ goto $label$266 }
	$31 = ( $22 ? $17 : ((uint_32)$17 > (uint_32)$22) )
	$37 = $31
	
.LOOP $label$267:
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$269 }
	$17 = [0]
	
.LOOP $label$270:
	*(($11 + $17)) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$17 = ($17 + [-1])
	$36 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $36 ){ goto $label$270 }
	goto $label$268 
	
.LABEL $label$269
	$17 = [0]
	
.LABEL $label$268
	$30 = ($10 + $17)
	if ( ((int_32)$37 == (int_32)$31) ){ goto $label$272 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$271 }
	
.LOOP $label$273:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$273 }
	$30 = ($39 + [704])
	goto $label$271 
	
.LABEL $label$272
	if ( $17 ){ goto $label$271 }
	*(($30 = ($30 + [-1]))) = [48]
	
.LABEL $label$271
	if ( (*($0) & [32]) ){ goto $label$274 }
	CALL __fwritex($30, ($10 - $30), $0)
	
.LABEL $label$274
	$37 = ($37 + [4])
	if ( ((uint_32)$37 <= (uint_32)$22) ){ goto $label$267 }
	if ( ($24 == 0) ){ goto $label$275 }
	if ( (*($0) & [32]) ){ goto $label$275 }
	CALL __fwritex([13120], [1], $0)
	
.LABEL $label$275
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$265 }
	if ( ((uint_32)$37 >= (uint_32)$14) ){ goto $label$264 }
	
.LOOP $label$276:
	$30 = $10
	$17 = *($37)
	if ( ($17 == 0) ){ goto $label$278 }
	$30 = $10
	
.LOOP $label$279:
	*(($30 = ($30 + [-1]))) = (((uint_32)$17 % (uint_32)[10]) | [48])
	$36 = ((uint_32)$17 > (uint_32)[9])
	$17 = ((uint_32)$17 / (uint_32)[10])
	if ( $36 ){ goto $label$279 }
	if ( ((uint_32)$30 <= (uint_32)($39 + [704])) ){ goto $label$277 }
	
.LABEL $label$278
	
.LOOP $label$280:
	*(($30 = ($30 + [-1]))) = [48]
	if ( ((uint_32)$30 > (uint_32)($39 + [704])) ){ goto $label$280 }
	
.LABEL $label$277
	if ( (*($0) & [32]) ){ goto $label$281 }
	CALL __fwritex($30, ( $28 ? [9] : ((int_32)$28 < (int_32)[9]) ), $0)
	
.LABEL $label$281
	$30 = ($28 + [-9])
	if ( ((int_32)$28 < (int_32)[10]) ){ goto $label$263 }
	$28 = $30
	$37 = ($37 + [4])
	if ( ($37 <= $14) ){ goto $label$276 }
	goto $label$263 
	
.LABEL $label$266
	if ( ((int_32)$28 <= (int_32)[-1]) ){ goto $label$259 }
	$31 = ( $14 ? ($17 + [4]) : $27 )
	if ( ($16 == 0) ){ goto $label$261 }
	$37 = $17
	
.LOOP $label$282:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$284 }
	$36 = [0]
	
.LOOP $label$285:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$285 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$283 }
	
.LABEL $label$284
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$283
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$287 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$286 }
	
.LOOP $label$288:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$288 }
	goto $label$286 
	
.LABEL $label$287
	$30 = *($0)
	if ( ($30 & [32]) ){ goto $label$289 }
	CALL __fwritex($14, [1], $0)
	$30 = *($0)
	
.LABEL $label$289
	$14 = ($14 + [1])
	if ( ($30 & [32]) ){ goto $label$286 }
	CALL __fwritex([13120], [1], $0)
	
.LABEL $label$286
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$290 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$290
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$282 }
	goto $label$260 
	
.LABEL $label$265
	$30 = $28
	if ( ((int_32)$30 >= (int_32)[1]) ){ goto $label$262 }
	goto $label$258 
	
.LABEL $label$264
	$30 = $28
	
.LABEL $label$263
	if ( ((int_32)$30 < (int_32)[1]) ){ goto $label$258 }
	
.LABEL $label$262
	$17 = ($30 <= [256])
	CALL memset(($39 + [432]), [48], ( $30 ? [256] : $17 ))
	$14 = *($0)
	$36 = ($14 & [32])
	if ( $17 ){ goto $label$292 }
	$17 = ($36 == 0)
	$36 = $30
	
.LOOP $label$293:
	if ( (($17 & [1]) == 0) ){ goto $label$294 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$14 = *($0)
	
.LABEL $label$294
	$37 = ($14 & [32])
	$17 = ($37 == 0)
	$36 = ($36 + [-256])
	if ( ((uint_32)$36 > (uint_32)[255]) ){ goto $label$293 }
	if ( $37 ){ goto $label$258 }
	$30 = ($30 & [255])
	goto $label$291 
	
.LABEL $label$292
	if ( $36 ){ goto $label$258 }
	
.LABEL $label$291
	CALL __fwritex(($39 + [432]), $30, $0)
	if ( ((int_32)$18 == (int_32)[8192]) ){ goto $label$257 }
	goto $label$256 
	
.LABEL $label$261
	$37 = $17
	
.LOOP $label$295:
	$14 = $10
	$30 = *($37)
	if ( ($30 == 0) ){ goto $label$297 }
	$36 = [0]
	
.LOOP $label$298:
	*(((($39 + [704]) + $36) + [8])) = (((uint_32)$30 % (uint_32)[10]) | [48])
	$36 = ($36 + [-1])
	$14 = ((uint_32)$30 > (uint_32)[9])
	$30 = ((uint_32)$30 / (uint_32)[10])
	if ( $14 ){ goto $label$298 }
	$14 = ((($39 + [704]) + $36) + [9])
	if ( $36 ){ goto $label$296 }
	
.LABEL $label$297
	*(($14 = ($14 + [-1]))) = [48]
	
.LABEL $label$296
	if ( ((int_32)$37 == (int_32)$17) ){ goto $label$300 }
	if ( ((uint_32)$14 <= (uint_32)($39 + [704])) ){ goto $label$299 }
	
.LOOP $label$301:
	*(($14 = ($14 + [-1]))) = [48]
	if ( ((uint_32)$14 > (uint_32)($39 + [704])) ){ goto $label$301 }
	goto $label$299 
	
.LABEL $label$300
	if ( (*($0) & [32]) ){ goto $label$302 }
	CALL __fwritex($14, [1], $0)
	
.LABEL $label$302
	$14 = ($14 + [1])
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$299 }
	if ( (*($0) & [32]) ){ goto $label$299 }
	CALL __fwritex([13120], [1], $0)
	
.LABEL $label$299
	$30 = ($10 - $14)
	if ( (*($0) & [32]) ){ goto $label$303 }
	CALL __fwritex($14, ( $30 ? $28 : ((int_32)$28 > (int_32)$30) ), $0)
	
.LABEL $label$303
	$28 = ($28 - $30)
	$37 = ($37 + [4])
	if ( ((uint_32)$37 >= (uint_32)$31) ){ goto $label$260 }
	if ( ((int_32)$28 > (int_32)[-1]) ){ goto $label$295 }
	
.LABEL $label$260
	if ( ((int_32)$28 < (int_32)[1]) ){ goto $label$259 }
	$30 = ($28 <= [256])
	CALL memset(($39 + [432]), [48], ( $28 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$305 }
	$30 = ($17 == 0)
	$17 = $28
	
.LOOP $label$306:
	if ( (($30 & [1]) == 0) ){ goto $label$307 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$307
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$306 }
	if ( $14 ){ goto $label$259 }
	$28 = ($28 & [255])
	goto $label$304 
	
.LABEL $label$305
	if ( $17 ){ goto $label$259 }
	
.LABEL $label$304
	CALL __fwritex(($39 + [432]), $28, $0)
	
.LABEL $label$259
	if ( (*($0) & [32]) ){ goto $label$258 }
	CALL __fwritex($25, ($7 - $25), $0)
	
.LABEL $label$258
	if ( ((int_32)$18 != (int_32)[8192]) ){ goto $label$256 }
	
.LABEL $label$257
	if ( ((int_32)$15 <= (int_32)$26) ){ goto $label$256 }
	$30 = ($37 <= [256])
	$37 = ($15 - $26)
	CALL memset(($39 + [432]), [32], ( $37 ? [256] : $30 ))
	$36 = *($0)
	$17 = ($36 & [32])
	if ( $30 ){ goto $label$309 }
	$30 = ($17 == 0)
	$17 = $37
	
.LOOP $label$310:
	if ( (($30 & [1]) == 0) ){ goto $label$311 }
	CALL __fwritex(($39 + [432]), [256], $0)
	$36 = *($0)
	
.LABEL $label$311
	$14 = ($36 & [32])
	$30 = ($14 == 0)
	$17 = ($17 + [-256])
	if ( ((uint_32)$17 > (uint_32)[255]) ){ goto $label$310 }
	if ( $14 ){ goto $label$256 }
	$37 = ($37 & [255])
	goto $label$308 
	
.LABEL $label$309
	if ( $17 ){ goto $label$256 }
	
.LABEL $label$308
	CALL __fwritex(($39 + [432]), $37, $0)
	
.LABEL $label$256
	$30 = ( $15 ? $26 : ((int_32)$15 > (int_32)$26) )
	
.LABEL $label$50
	if ( ((int_32)$30 < (int_32)[0]) ){ goto $label$15 }
	
.LABEL $label$24
	if ( ((int_32)$30 <= (int_32)$13) ){ goto $label$17 }
	goto $label$15 
	
.LABEL $label$16
	if ( $0 ){ goto $label$1 }
	if ( ($32 == 0) ){ goto $label$14 }
	$30 = [1]
	$1 = *($4 + [4])
	if ( ($1 == 0) ){ goto $label$4 }
	CALL $183(($3 + [16]), $1, $2)
	$1 = *($4 + [8])
	if ( ($1 == 0) ){ goto $label$13 }
	CALL $183(($3 + [32]), $1, $2)
	$1 = *($4 + [12])
	if ( ($1 == 0) ){ goto $label$12 }
	CALL $183(($3 + [48]), $1, $2)
	$1 = *($4 + [16])
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $183(($3 + [64]), $1, $2)
	$1 = *($4 + [20])
	if ( ($1 == 0) ){ goto $label$9 }
	CALL $183(($3 + [80]), $1, $2)
	$1 = *($4 + [24])
	if ( ($1 == 0) ){ goto $label$8 }
	CALL $183(($3 + [96]), $1, $2)
	$1 = *($4 + [28])
	if ( ($1 == 0) ){ goto $label$7 }
	CALL $183(($3 + [112]), $1, $2)
	$1 = *($4 + [32])
	if ( ($1 == 0) ){ goto $label$6 }
	CALL $183(($3 + [128]), $1, $2)
	$1 = *($4 + [36])
	if ( ($1 == 0) ){ goto $label$5 }
	CALL $183(($3 + [144]), $1, $2)
	$38 = [1]
	goto $label$1 
	
.LABEL $label$15
	*(CALL __errno_location()) = [75]
	goto $label$2 
	
.LABEL $label$14
	$38 = [0]
	goto $label$1 
	
.LABEL $label$13
	$30 = [2]
	goto $label$4 
	
.LABEL $label$12
	$30 = [3]
	goto $label$4 
	
.LABEL $label$11
	$38 = [0]
	goto $label$1 
	
.LABEL $label$10
	$30 = [4]
	goto $label$4 
	
.LABEL $label$9
	$30 = [5]
	goto $label$4 
	
.LABEL $label$8
	$30 = [6]
	goto $label$4 
	
.LABEL $label$7
	$30 = [7]
	goto $label$4 
	
.LABEL $label$6
	$30 = [8]
	goto $label$4 
	
.LABEL $label$5
	$30 = [9]
	
.LABEL $label$4
	$1 = ($4 + ($30 << [2]))
	
.LOOP $label$312:
	if ( *($1) ){ goto $label$3 }
	$1 = ($1 + [4])
	$38 = [1]
	$30 = ($30 + [1])
	if ( ((uint_32)$30 <= (uint_32)[9]) ){ goto $label$312 }
	goto $label$1 
	
.LABEL $label$3
	*(CALL __errno_location()) = [22]
	
.LABEL $label$2
	$38 = [-1]
	
.LABEL $label$1
	*([0] + [4]) = ($39 + [8128])
	$30
	$30
	return $38
}

int_32 .FUNC __secs_to_tm (int_64 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = [-1]
	if ( ((uint_64)((int_64)$0 + (int_64)67908586910515200) > (uint_64)(int_64)135817173789408000) ){ goto $label$1 }
	$0 = ((int_64)$0 + (int_64)-951868800)
	$4 = (CASTING uint_32)(uint_64 ((int_64)$0 % (int_64)86400))
	$0 = ((int_64)(CASTING int_64)(int_32 int_32($4 >> [31])) + (int_64)((int_64)$0 / (int_64)86400))
	$10 = (CASTING uint_32)(uint_64 ((int_64)$0 % (int_64)146097))
	$9 = ( ($10 + [146097]) ? $10 : ((int_32)$10 < (int_32)[0]) )
	$6 = (((int_32)$9 / (int_32)[36524]) - (($9 + [-146096]) <= [36524]))
	$9 = (((int_32)$6 * (int_32)[-36524]) + $9)
	$2 = (((int_32)$9 / (int_32)[1461]) - (($9 + [-36525]) <= [1461]))
	$9 = (((int_32)$2 * (int_32)[-1461]) + $9)
	$8 = (((int_32)$9 / (int_32)[365]) - (($9 + [-1460]) <= [365]))
	$3 = (((int_32)$8 * (int_32)[-365]) + $9)
	$5 = ((int_64)((int_64)$0 + (int_64)3) % (int_64)7)
	$0 = ((int_64)(CASTING uint_64)(uint_32 int_32($10 >> [31])) + (int_64)((int_64)$0 / (int_64)146097))
	$7 = [0]
	if ( $8 ){ goto $label$2 }
	$7 = (($6 == 0) | ((int_32)$2 != (int_32)[0]))
	
.LABEL $label$2
	$0 = ((int_64)(CASTING int_64)(int_32 ((($2 << [2]) + ((int_32)$6 * (int_32)[100])) + $8)) + (int_64)((int_64)((int_64)$0 << (int_64)32) >> (int_64)32) * (int_64)400))
	$9 = $3
	$10 = [0]
	if ( ((int_32)$3 < (int_32)[31]) ){ goto $label$3 }
	$10 = [0]
	$8 = [31]
	$9 = $3
	
.LOOP $label$4:
	$6 = ($10 + [15905])
	$10 = ($10 + [1])
	$8 = *($6)
	$9 = ($9 - $8)
	if ( ((int_32)$9 >= (int_32)$8) ){ goto $label$4 }
	
.LABEL $label$3
	$8 = ((int_32)$10 > (int_32)[9])
	$0 = ((int_64)$0 + (int_64)(CASTING uint_64)(uint_32 $8))
	if ( ((uint_64)((int_64)$0 + (int_64)2147483748) > (uint_64)(int_64)4294967295) ){ goto $label$1 }
	$6 = (CASTING uint_32)(uint_64 $5)
	*($1 + [24]) = ( ($6 + [7]) ? $6 : ((int_32)$6 < (int_32)[0]) )
	$11 = ( [366] ? [365] : $7 )
	$6 = (($3 + $7) + [59])
	*($1 + [28]) = ($6 - ( [0] ? $11 : ((int_32)$6 < (int_32)$11) ))
	*($1 + [20]) = ((int_64)$0 + (int_64)100)
	*($1 + [12]) = ($9 + [1])
	$9 = ( ($4 + [86400]) ? $4 : ((int_32)$4 < (int_32)[0]) )
	*($1 + [8]) = ((int_32)$9 / (int_32)[3600])
	*($1 + [4]) = ((int_32)((int_32)$9 / (int_32)[60]) % (int_32)[60])
	*($1 + [16]) = (( ($10 + [-12]) ? $10 : $8 ) + [2])
	*($1) = ((int_32)$9 % (int_32)[60])
	$11 = [0]
	
.LABEL $label$1
	return $11
}

void .FUNC $183 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$1 = ($1 + [-9])
	if ( ((uint_32)$1 > (uint_32)[17]) ){ goto $label$1 }
	goto $label$19 
	
.LABEL $label$19
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$18
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$17
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$16
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$15
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$14
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$13
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$12
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$11
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$10
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$9
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$8
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$7
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$6
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$5
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$4
	$1 = *($2)
	*($2) = ($1 + [4])
	*($0) = *($1)
	goto $label$1 
	
.LABEL $label$3
	$1 = ((*($2) + [7]) & [-8])
	*($2) = ($1 + [8])
	CALL __extenddftf2($4, *($1))
	*(($0 + [8])) = *(($4 + [8]))
	*($0) = *($4)
	goto $label$1 
	
.LABEL $label$2
	$1 = ((*($2) + [15]) & [-16])
	*($2) = ($1 + [16])
	$3 = *($1)
	*(($0 + [8])) = *($1 + [8])
	*($0) = $3
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [16])
	$1
}

void .FUNC $69 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$6 = *($0)
	$4 = ((int_32)(*($0 + [4]) - $6) / (int_32)[24])
	$5 = ($4 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$2 }
	$7 = [178956970]
	$6 = ((int_32)(*($0 + [8]) - $6) / (int_32)[24])
	if ( ((uint_32)$6 > (uint_32)[89478484]) ){ goto $label$4 }
	$7 = ($6 << [1])
	$7 = ( $5 ? $7 : ($7 <= $5) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $138(((int_32)$7 * (int_32)[24]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$5 = *($1)
	*($1) = [0]
	*(($1 = ($6 + ((int_32)$4 * (int_32)[24])))) = $5
	*($1 + [8]) = *($2)
	*($1 + [16]) = *($3)
	$4 = ($6 + ((int_32)$7 * (int_32)[24]))
	$5 = ($1 + [24])
	$7 = *($0)
	$6 = *(($0 + [4]))
	if ( ((int_32)$6 == (int_32)$7) ){ goto $label$6 }
	
.LOOP $label$7:
	$2 = ($6 + [-24])
	$3 = *($2)
	*($2) = [0]
	*(($1 + [-24])) = $3
	*(($1 + [-8])) = *(($6 + [-8]))
	*(($1 + [-12])) = *(($6 + [-12]))
	*(($1 + [-16])) = *(($6 + [-16]))
	$1 = ($1 + [-24])
	$6 = $2
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$6 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$6 = $7
	
.LABEL $label$5
	*($0) = $1
	*(($0 + [4])) = $5
	*(($0 + [8])) = $4
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$8 }
	
.LOOP $label$9:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$10 }
	CALL $139($1)
	
.LABEL $label$10
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($6 == 0) ){ goto $label$11 }
	CALL $139($6)
	
.LABEL $label$11
	(unreachable)
}

int_32 .FUNC $68 (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1264])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [576])
	*($0 + [16]) = $1
	$4 = *($2 + [4])
	CALL eosio_assert(((uint_32)(*($4 + [8]) - *($4 + [4])) > (uint_32)[7]), [1360])
	CALL memcpy($0, *($4 + [4]), [8])
	$5 = (*($4 + [4]) + [8])
	*($4 + [4]) = $5
	CALL eosio_assert(((uint_32)(*($4 + [8]) - $5) > (uint_32)[7]), [1360])
	CALL memcpy(($0 + [8]), *($4 + [4]), [8])
	*($4 + [4]) = (*($4 + [4]) + [8])
	*($0 + [20]) = *(*($2 + [8]))
	return $0
}

void .FUNC $225 ()
{
	(unreachable)
}

void .FUNC _ZN9msAccount10GetBalanceES_yPKc (int_32 $0, int_32 $1, int_64 $2, int_64 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	$7 = [-1]
	
.LOOP $label$1:
	$6 = ($4 + $7)
	$5 = ($7 + [1])
	$7 = $5
	if ( *(($6 + [1])) ){ goto $label$1 }
	if ( ($5 == 0) ){ goto $label$3 }
	$8 = (CASTING uint_64)(uint_32 $5)
	$9 = (int_64)8
	$10 = (int_64)0
	
.LOOP $label$4:
	$7 = *($4)
	if ( ((uint_32)(($7 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$10 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$9 & (int_64)4294967288)) | (int_64)$10)
	
.LABEL $label$5
	$4 = ($4 + [1])
	$9 = ((int_64)$9 + (int_64)8)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$4 }
	goto $label$2 
	
.LABEL $label$3
	$10 = (int_64)0
	
.LABEL $label$2
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE($0, $1, $2, ((int_64)$10 | (int_64)((int_64)$3 & (int_64)255)))
}

void .FUNC _ZN9msAccount8ToStringEv (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [8]) = *($1)
	CALL $11($0, ($2 + [8]))
	*([0] + [4]) = ($2 + [16])
}

int_32 .FUNC $67 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	*(($8 = $9) + [44]) = $1
	$2 = *($0 + [24])
	$7 = *(($0 + [28]))
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$1 }
	$3 = ([0] - $2)
	$6 = ($7 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$7 = $6
	$4 = ($6 + [-24])
	$6 = $4
	if ( ((int_32)($4 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	$6 = *(($7 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1328])
	if ( ($6 <= [513]) ){ goto $label$6 }
	$4 = CALL malloc($6)
	goto $label$5 
	
.LABEL $label$6
	$4 = ($9 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $4
	
.LABEL $label$5
	CALL db_get_i64($1, $4, $6)
	*($8 + [36]) = $4
	*($8 + [32]) = $4
	*($8 + [40]) = ($4 + $6)
	if ( ($6 <= [513]) ){ goto $label$7 }
	CALL free($4)
	
.LABEL $label$7
	*($8 + [12]) = ($8 + [32])
	*($8 + [16]) = ($8 + [44])
	*($8 + [8]) = $0
	$4 = CALL $138([32])
	$6 = CALL $68($4, $0, ($8 + [8]))
	*($8 + [24]) = $4
	$5 = (uint_64)*($4 + [8]) >> (uint_64)(int_64)8
	*($8 + [8]) = $5)
	$1 = *($4 + [20])
	*($8 + [4]) = $1
	$3 = ($0 + [28])
	$7 = *($3)
	if ( ((uint_32)$7 >= (uint_32)*(($0 + [32]))) ){ goto $label$9 }
	*($7 + [8]) = $5
	*($7 + [16]) = $1
	*($8 + [24]) = [0]
	*($7) = $4
	*($3) = ($7 + [24])
	goto $label$8 
	
.LABEL $label$9
	CALL $69(($0 + [24]), ($8 + [24]), ($8 + [8]), ($8 + [4]))
	
.LABEL $label$8
	$4 = *($8 + [24])
	*($8 + [24]) = [0]
	if ( ($4 == 0) ){ goto $label$3 }
	CALL $139($4)
	
.LABEL $label$3
	*([0] + [4]) = ($8 + [48])
	return $6
}

void .FUNC _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE (int_32 $0, int_32 $1, int_64 $2, int_64 $3)
{
	int_64 $4
	int_64 $5
	int_64 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [48])
	*([0] + [4]) = $9
	CALL eosio_assert([1], [1264])
	$5 = (int_64)5462355
	$8 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$7 = [0]
	
.LABEL $label$1
	CALL eosio_assert($7, [576])
	$7 = [0]
	*(($9 + [40])) = [0]
	*($9 + [24]) = (int_64)-1
	*($9 + [32]) = (int_64)0
	$4 = *($1)
	*($9 + [16]) = $4
	*($9 + [8]) = $2
	$6 = (int_64)0
	$5 = (uint_64)$3 >> (uint_64)(int_64)8
	$8 = CALL db_find_i64($2, $4, (int_64)3607749779137757184, $5)
	if ( ((int_32)$8) < (int_32)[0]) ){ goto $label$6 }
	$8 = CALL $67(($9 + [8]), $8)
	CALL eosio_assert(((int_32)*($8 + [16]) == (int_32)($9 + [8])), [816])
	$6 = *($8)
	
.LABEL $label$6
	CALL eosio_assert((uint_64)(((int_64)$6 + (int_64)4611686018427387903) <= (int_64)9223372036854775807), [1264])
	
.LOOP $label$9:
	$8 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$8 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	
.LOOP $label$11:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$11 }
	
.LABEL $label$10
	$1 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$9 }
	goto $label$7 
	
.LABEL $label$8
	$1 = [0]
	
.LABEL $label$7
	CALL eosio_assert($1, [576])
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1264])
	$5 = (int_64)5462355
	
.LOOP $label$13:
	$7 = [0]
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $5) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$12 }
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$14 }
	
.LOOP $label$15:
	$5 = (uint_64)$5 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$5) & (int_64)255) != (int_64)0) ){ goto $label$12 }
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$15 }
	
.LABEL $label$14
	$7 = [1]
	$8 = ($8 + [1])
	if ( ((int_32)$8 < (int_32)[7]) ){ goto $label$13 }
	
.LABEL $label$12
	CALL eosio_assert($7, [576])
	*(($0 + [8])) = $3
	*($0) = $6
	*($0 + [16]) = $2
	$0 = *($9 + [32])
	if ( ($0 == 0) ){ goto $label$16 }
	$1 = ($9 + [36])
	$8 = *($1)
	if ( ((int_32)$8 == (int_32)$0) ){ goto $label$18 }
	
.LOOP $label$19:
	$8 = ($8 + [-24])
	$7 = *($8)
	*($8) = [0]
	if ( ($7 == 0) ){ goto $label$20 }
	CALL $139($7)
	
.LABEL $label$20
	if ( ((int_32)$0 != (int_32)$8) ){ goto $label$19 }
	$8 = *(($9 + [32]))
	goto $label$17 
	
.LABEL $label$18
	$8 = $0
	
.LABEL $label$17
	*($1) = $0
	CALL $139($8)
	
.LABEL $label$16
	*([0] + [4]) = ($9 + [48])
}

void .FUNC _ZN9msAccount15CheckPermissionEv (int_32 $0)
{
	CALL require_auth(*($0))
}

int_32 .FUNC _ZN9msAccountC2Ey (int_32 $0, int_64 $1)
{
	*($0) = $1
	return $0
}

int_64 .FUNC _ZN9msAccount10GetEosNameEv (int_32 $0)
{
	return *($0)
}

void .FUNC _ZN9msAccount15CheckPermissionEy (int_32 $0, int_64 $1)
{
	CALL require_auth2(*($0), $1)
}

void .FUNC _ZN8eoscrash16onTransferFromMeE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 _ZN8eoscrash16onTransferFromMeE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, int_64 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	CALL _ZN10msContract13commitAndExitEy($5, (int_64)1)
	(unreachable)
}

int_64 .FUNC _ZN7msAsset18GetContractEosNameEv (int_32 $0)
{
	return *($0 + [16])
}

int_64 .FUNC _ZN7msAsset9AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = (*([0] + [4]) - [32])
	*([0] + [4]) = $11
	CALL $166(($11 + [16]), $1)
	$3 = CALL _ZN7msAsset10_AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh($11, ($11 + [16]), $2)
	if ( ((*($11 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $139(*($11 + [24]))
	
.LABEL $label$1
	CALL _ZN7msAsset10_AmountN2SEhy($11, $11, *($2), $3)
	$10 = [0]
	$7 = ($8 & [1])
	$8 = *($1)
	$6 = ($9 & [1])
	$9 = *($11)
	$4 = uint_32($9 >> [1])
	$5 = ( *($11 + [4]) ? $4 : $6 )
	if ( ((int_32)$5 != (int_32)( *($1 + [4]) ? uint_32($8 >> [1]) : $7 )) ){ goto $label$2 }
	$10 = [1]
	$8 = ($11 | [1])
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( $6 ){ goto $label$3 }
	if ( ($5 == 0) ){ goto $label$2 }
	$10 = [0]
	$6 = ([0] - $4)
	
.LOOP $label$4:
	if ( ((int_32)*($8) != (int_32)*($7)) ){ goto $label$2 }
	$7 = ($7 + [1])
	$8 = ($8 + [1])
	$6 = ($6 + [1])
	if ( $6 ){ goto $label$4 }
	$10 = [1]
	goto $label$2 
	
.LABEL $label$3
	if ( ($5 == 0) ){ goto $label$2 }
	$10 = (CALL memcmp(( *($11 + [8]) ? $8 : $6 ), $7, $5) == 0)
	$9 = *($11)
	
.LABEL $label$2
	if ( (($9 & [1]) == 0) ){ goto $label$5 }
	CALL $139(*($11 + [8]))
	
.LABEL $label$5
	if ( $10 ){ goto $label$6 }
	CALL prints([176])
	CALL prints([2464])
	CALL prints([256])
	CALL _ZN7msAsset10_AmountN2SEhy($11, $11, *($2), $3)
	$6 = [0]
	$7 = ($8 & [1])
	$8 = *($1)
	$2 = ($8 & [1])
	$8 = *($11)
	$10 = uint_32($8 >> [1])
	$9 = ( *($11 + [4]) ? $10 : $2 )
	if ( ((int_32)$9 != (int_32)( *(($1 + [4])) ? uint_32($8 >> [1]) : $7 )) ){ goto $label$7 }
	$8 = ($11 | [1])
	$7 = ( *($1 + [8]) ? ($1 + [1]) : $7 )
	if ( $2 ){ goto $label$10 }
	if ( ($9 == 0) ){ goto $label$9 }
	$1 = ([0] - $10)
	
.LOOP $label$11:
	if ( ((int_32)*($8) != (int_32)*($7)) ){ goto $label$8 }
	$6 = [1]
	$7 = ($7 + [1])
	$8 = ($8 + [1])
	$1 = ($1 + [1])
	if ( $1 ){ goto $label$11 }
	goto $label$7 
	
.LABEL $label$10
	if ( ($9 == 0) ){ goto $label$9 }
	$6 = (CALL memcmp(( *($11 + [8]) ? $8 : $2 ), $7, $9) == 0)
	goto $label$7 
	
.LABEL $label$9
	$6 = [1]
	goto $label$7 
	
.LABEL $label$8
	$6 = [0]
	
.LABEL $label$7
	CALL eosio_assert($6, [2464])
	if ( ((*($11) & [1]) == 0) ){ goto $label$6 }
	CALL $139(*($11 + [8]))
	
.LABEL $label$6
	*([0] + [4]) = ($11 + [32])
	return $3
}

int_64 .FUNC _ZN7msAsset10_AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [112])
	*([0] + [4]) = $7
	CALL memset($7, [0], [100])
	*($2) = [0]
	if ( (*($1) & [1]) ){ goto $label$2 }
	$3 = ($1 + [1])
	goto $label$1 
	
.LABEL $label$2
	$3 = *($1 + [8])
	
.LABEL $label$1
	$3 = CALL strchr($3, [46])
	if ( ($3 == 0) ){ goto $label$6 }
	$4 = *($1)
	if ( ($4 & [1]) ){ goto $label$5 }
	$5 = ($1 + [1])
	$4 = uint_32($4 >> [1])
	goto $label$4 
	
.LABEL $label$6
	goto $label$3 
	
.LABEL $label$5
	$5 = *($1 + [8])
	$4 = *($1 + [4])
	
.LABEL $label$4
	*($2) = ((int_64))((CASTING uint_64)(uint_32 ($4 + [255])) - (CASTING uint_64)(uint_32 $3)) + (int_64)(CASTING uint_64)(uint_32 $5))
	CALL memset($7, [0], [100])
	$5 = *($1)
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = uint_32($5 >> [1])
	$4 = ($1 + [1])
	goto $label$7 
	
.LABEL $label$8
	$5 = *($1 + [4])
	$4 = *($1 + [8])
	
.LABEL $label$7
	CALL memcpy($7, $4, (($5 + [-1]) - *($2)))
	$5 = *($1)
	if ( ($5 & [1]) ){ goto $label$10 }
	$1 = uint_32($5 >> [1])
	goto $label$9 
	
.LABEL $label$10
	$1 = *($1 + [4])
	
.LABEL $label$9
	$1 = *($2)
	CALL memcpy(((($7 + $1) - $1) + [-1]), ($3 + [1]), $1)
	$6 = CALL atoll($7)
	
.LABEL $label$3
	*([0] + [4]) = ($7 + [112])
	return $6
}

void .FUNC _ZN7msAsset9AmountN2SEhy (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*($5 + [31]) = $2
	CALL _ZN7msAsset10_AmountN2SEhy($0, $5, $2, $3)
	CALL $166(($5 + [16]), $0)
	$4 = CALL _ZN7msAsset10_AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh($5, ($5 + [16]), ($5 + [31]))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$1 }
	CALL $139(*($5 + [24]))
	
.LABEL $label$1
	if ( ((int_64)$4 == (int_64)$3) ){ goto $label$2 }
	CALL prints([176])
	CALL prints([2464])
	CALL prints([256])
	CALL $166($5, $0)
	CALL eosio_assert(((int_64)CALL $87($5, $5, ($5 + [31])) == (int_64)$3), [2464])
	if ( ((*($5) & [1]) == 0) ){ goto $label$2 }
	CALL $139(*($5 + [8]))
	
.LABEL $label$2
	*([0] + [4]) = ($5 + [32])
}

void .FUNC _ZN7msAsset10_AmountN2SEhy (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = (*([0] + [4]) - [144])
	*([0] + [4]) = $6
	CALL memset(($6 + [32]), [0], [100])
	CALL memset(($6 + [22]), [0], [10])
	$5 = CALL strcpy(($6 + [22]), [2416])
	*($6 + [24]) = ($2 + [49])
	*($6) = $3
	CALL sprintf(($6 + [32]), $5, $6)
	$5 = CALL strlen(($6 + [32]))
	if ( ((int_32)$5 >= (int_32)$2) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([2432])
	CALL prints([256])
	CALL eosio_assert([0], [2432])
	
.LABEL $label$1
	$5 = (($6 + [32]) + ($5 - $2))
	CALL memmove(($5 + [1]), $5, $2)
	*(($0 + [4])) = (int_64)0
	*($0) = [0]
	*($5) = [46]
	$2 = CALL strlen(($6 + [32]))
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($2 << [1])
	$5 = ($0 + [1])
	if ( $2 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$4 = (($2 + [16]) & [-16])
	$5 = CALL $138($4)
	*($0) = ($4 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $2
	
.LABEL $label$4
	CALL memcpy($5, ($6 + [32]), $2)
	
.LABEL $label$3
	*(($5 + $2)) = [0]
	*([0] + [4]) = ($6 + [144])
	return (unreachable)
	
.LABEL $label$2
	CALL $140($0)
}

void .FUNC _ZN7msAsset14SymbolToStringEv (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [16])
	*([0] + [4]) = $5
	CALL memset(($5 + [6]), [0], [10])
	$2 = *($1 + [8])
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [6]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [7]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [8]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [9]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [10]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	if ( (($1) & [255]) == 0) ){ goto $label$6 }
	*($5 + [11]) = $1
	$1 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	if ( ($1) == 0) ){ goto $label$6 }
	*($0) = [0]
	*(($0 + [4])) = (int_64)0
	*($5 + [12]) = $1
	$1 = CALL strlen(($5 + [6]))
	if ( ((uint_32)$1 > (uint_32)[-17]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($1 << [1])
	$4 = ($0 + [1])
	if ( $1 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$6
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$1 = CALL strlen(($5 + [6]))
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$9 }
	*($0) = ($1 << [1])
	$4 = ($0 + [1])
	if ( $1 ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$9
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $138($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $1
	
.LABEL $label$8
	CALL memcpy($4, ($5 + [6]), $1)
	
.LABEL $label$7
	$1 = ($4 + $1)
	goto $label$1 
	
.LABEL $label$5
	$3 = (($1 + [16]) & [-16])
	$4 = CALL $138($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $4
	*($0 + [4]) = $1
	
.LABEL $label$4
	CALL memcpy($4, ($5 + [6]), $1)
	
.LABEL $label$3
	$1 = ($4 + $1)
	goto $label$1 
	
.LABEL $label$2
	CALL $140($0)
	
.LABEL $label$1
	*($1) = [0]
	*([0] + [4]) = ($5 + [16])
	(unreachable)
}

int_32 .FUNC _ZN7msAsset16isSystemEOSTokenEv (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_64 $5
	int_64 $6
	int_64 $7
	$1 = *($0 + [16])
	$5 = (int_64)0
	$4 = (int_64)59
	$3 = [160]
	$6 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$5 > (uint_64)(int_64)10) ){ goto $label$6 }
	$2 = *($3)
	if ( ((uint_32)(($2 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$2 = ($2 + [165])
	goto $label$4 
	
.LABEL $label$6
	$7 = (int_64)0
	if ( ((int_64)$5 == (int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$2 = ( ($2 + [208]) ? [0] : ((($2 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$7 = (int_64)((int_64)(CASTING uint_64)(uint_32 $2) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$7 = ((int_64)((int_64)$7 & (int_64)31) << (int_64)((int_64)$4 & (int_64)4294967295))
	
.LABEL $label$2
	$3 = ($3 + [1])
	$4 = ((int_64)$4 + (int_64)-5)
	$6 = ((int_64)$7 | (int_64)$6)
	$5 = ((int_64)$5 + (int_64)1)
	if ( ((int_64)$5 != (int_64)13) ){ goto $label$1 }
	$3 = [0]
	if ( ((int_64)$1 != (int_64)$6) ){ goto $label$7 }
	$3 = ((int_64)*($0 + [8]) == (int_64)1397703940)
	
.LABEL $label$7
	return $3
}

int_32 .FUNC _ZN7msAssetC2EyN5eosio5assetE (int_32 $0, int_64 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	int_32 $5
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1264])
	$3 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$4 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = [0]
	
.LABEL $label$1
	CALL eosio_assert($5, [576])
	*($0 + [16]) = $1
	*($0) = *($2)
	*(($0 + [8])) = *($2 + [8])
	return $0
}

int_32 .FUNC _ZN7msAssetC2EyN5eosio11symbol_typeEy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1264])
	$4 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$5 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $4) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$4 = (uint_64)$4 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$4) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [576])
	*(($0 + [8])) = $2
	*($0) = $3
	*($0 + [16]) = $1
	return $0
}

int_32 .FUNC _ZN7msAssetC2ENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEhS6_ (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [16])
	*([0] + [4]) = $12
	*($0 + [8]) = (int_64)1398362884
	*($0) = (int_64)0
	CALL eosio_assert([1], [1264])
	$9 = (uint_64)*($0 + [8]) >> (uint_64)(int_64)8)
	$7 = [0]
	
.LOOP $label$3:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $9) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$2 }
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	
.LOOP $label$5:
	$9 = (uint_64)$9 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$9) & (int_64)255) != (int_64)0) ){ goto $label$2 }
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$5 }
	
.LABEL $label$4
	$6 = [1]
	$7 = ($7 + [1])
	if ( ((int_32)$7 < (int_32)[7]) ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$6 = [0]
	
.LABEL $label$1
	CALL eosio_assert($6, [576])
	*($0) = (int_64)0
	if ( (*($3) & [1]) ){ goto $label$7 }
	$6 = ($3 + [1])
	goto $label$6 
	
.LABEL $label$7
	$6 = *($3 + [8])
	
.LABEL $label$6
	$7 = [-1]
	
.LOOP $label$8:
	$3 = ($6 + $7)
	$4 = ($7 + [1])
	$7 = $4
	if ( *(($3 + [1])) ){ goto $label$8 }
	if ( ($4 == 0) ){ goto $label$10 }
	$8 = (CASTING uint_64)(uint_32 $4)
	$9 = (int_64)8
	$11 = (int_64)0
	
.LOOP $label$11:
	$7 = *($6)
	if ( ((uint_32)(($7 + [-65]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$11 = ((int_64)((int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56) << (int_64)((int_64)$9 & (int_64)4294967288)) | (int_64)$11)
	
.LABEL $label$12
	$6 = ($6 + [1])
	$9 = ((int_64)$9 + (int_64)8)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 != (int_64)0) ){ goto $label$11 }
	goto $label$9 
	
.LABEL $label$10
	$11 = (int_64)0
	
.LABEL $label$9
	*(($0 + [8])) = ((int_64)$11 | (int_64)(CASTING uint_64)(uint_32 $2))
	CALL $166($12, $1)
	$1 = (*($12) & [1])
	$2 = *($12 + [8])
	$7 = ( $2 ? ($12 | [1]) : $1 )
	$6 = [-1]
	
.LOOP $label$13:
	$3 = ($7 + $6)
	$4 = ($6 + [1])
	$6 = $4
	if ( *(($3 + [1])) ){ goto $label$13 }
	$5 = (CASTING uint_64)(uint_32 $4)
	$9 = (int_64)0
	$8 = (int_64)59
	$10 = (int_64)0
	
.LOOP $label$14:
	$11 = (int_64)0
	if ( ((uint_64)$9 >= (uint_64)$5) ){ goto $label$15 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$17 }
	$6 = ($6 + [165])
	goto $label$16 
	
.LABEL $label$17
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$16
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$15
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$19 }
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	goto $label$18 
	
.LABEL $label$19
	$11 = ((int_64)$11 & (int_64)15)
	
.LABEL $label$18
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$14 }
	*($0 + [16]) = $10
	if ( ($1 == 0) ){ goto $label$20 }
	CALL $139($2)
	
.LABEL $label$20
	*([0] + [4]) = ($12 + [16])
	return $0
}

int_32 .FUNC __fwritex (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$6 = *($2 + [16])
	if ( $6 ){ goto $label$2 }
	$6 = [0]
	if ( CALL __towrite($2) ){ goto $label$1 }
	$6 = *(($2 + [16]))
	
.LABEL $label$2
	$7 = *($2 + [20])
	if ( ((uint_32)($6 - $7) >= (uint_32)$1) ){ goto $label$3 }
	return CALL int_32 $2((int_32 $0), (int_32 $1), (int_32 *($2 + [36])))
	
.LABEL $label$3
	$8 = [0]
	if ( ((int_32)*($2 + [75]) < (int_32)[0]) ){ goto $label$4 }
	$3 = ($0 + $1)
	$8 = [0]
	$6 = [0]
	
.LOOP $label$5:
	if ( (($1 + $6) == 0) ){ goto $label$4 }
	$5 = ($3 + $6)
	$4 = ($6 + [-1])
	$6 = $4
	if ( ((int_32)*(($5 + [-1])) != (int_32)[10]) ){ goto $label$5 }
	$8 = (($1 + $4) + [1])
	$6 = CALL int_32 $2((int_32 $0), (int_32 $8), (int_32 *($2 + [36])))
	if ( ($6 <= $8) ){ goto $label$1 }
	$1 = ((int_32)$4 ^ (int_32)[-1])
	$0 = (($3 + $4) + [1])
	$7 = *(($2 + [20]))
	
.LABEL $label$4
	CALL memcpy($7, $0, $1)
	*(($6 = ($2 + [20]))) = (*($6) + $1)
	return ($8 + $1)
	
.LABEL $label$1
	return $6
}

int_32 .FUNC $149 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0)
	$3 = ($6 & [1])
	if ( $3 ){ goto $label$3 }
	$4 = uint_32($6 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ($2 == 0) ){ goto $label$4 }
	if ( $3 ){ goto $label$6 }
	$5 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$6
	$5 = *($0 + [8])
	
.LABEL $label$5
	$2 = ( $3 ? $2 : ($3 <= $2) )
	$3 = ($4 - $1)
	$3 = ($3 - $2)
	if ( ($3 == 0) ){ goto $label$7 }
	$1 = ($5 + $1)
	CALL memmove($1, ($1 + $2), $3)
	$6 = *($0)
	
.LABEL $label$7
	$2 = ($4 - $2)
	if ( ($6 & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($5 + $2)) = [0]
	
.LABEL $label$4
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

int_32 .FUNC $148 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	$5 = *($0)
	$6 = ($5 & [1])
	if ( $6 ){ goto $label$3 }
	$4 = uint_32($5 >> [1])
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$4 = *($0 + [4])
	if ( ($4 <= $1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( $6 ){ goto $label$5 }
	$6 = [10]
	goto $label$4 
	
.LABEL $label$5
	$5 = *($0)
	$6 = (($5 & [-2]) + [-1])
	
.LABEL $label$4
	if ( ((uint_32)($6 - $4) >= (uint_32)$3) ){ goto $label$6 }
	CALL $143($0, $6, (($4 + $3) - $6), $4, $1, [0], $3, $2)
	return $0
	
.LABEL $label$6
	if ( ($3 == 0) ){ goto $label$9 }
	if ( ($5 & [1]) ){ goto $label$8 }
	$5 = ($0 + [1])
	goto $label$7 
	
.LABEL $label$9
	return $0
	
.LABEL $label$8
	$5 = *($0 + [8])
	
.LABEL $label$7
	$6 = ($5 + $1)
	$1 = ($4 - $1)
	if ( ($1 == 0) ){ goto $label$10 }
	CALL memmove(($6 + $3), $6, $1)
	$2 = ( ( ($2 + $3) ? $2 : ((uint_32)($5 + $4) > (uint_32)$2) ) ? $2 : ((uint_32)$6 <= (uint_32)$2) )
	
.LABEL $label$10
	CALL memmove($6, $2, $3)
	$3 = ($4 + $3)
	if ( (*($0) & [1]) ){ goto $label$12 }
	*($0) = ($3 << [1])
	goto $label$11 
	
.LABEL $label$12
	*($0 + [4]) = $3
	
.LABEL $label$11
	*(($5 + $3)) = [0]
	return $0
	
.LABEL $label$1
	CALL abort()
	return (unreachable)
}

void .FUNC $145 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0)
	$2 = ($4 & [1])
	if ( ($2 == 0) ){ goto $label$6 }
	$3 = ((*($0) & [-2]) + [-1])
	$4 = *($0 + [4])
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$3 = [10]
	$4 = uint_32($4 >> [1])
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$4 }
	
.LABEL $label$5
	CALL $146($0, $3, [1], $3, $3, [0], [0])
	if ( (*($0) & [1]) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($0 + [4]) = ($4 + [1])
	$0 = *($0 + [8])
	goto $label$1 
	
.LABEL $label$2
	*($0) = (($4 << [1]) + [2])
	$0 = ($0 + [1])
	
.LABEL $label$1
	*(($0 = ($0 + $4)) + [1]) = [0]
	*($0) = $1
}

int_32 .FUNC $144 (int_32 $0, int_32 $1)
{
	return CALL $142($0, $1, CALL $213($1))
}

int_32 .FUNC $147 (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL $148($0, $1, $2, CALL $213($2))
}

void .FUNC $146 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6)
{
	int_32 $7
	int_32 $8
	int_32 $9
	if ( (([-17] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$8 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$8 = *($0 + [8])
	
.LABEL $label$2
	$9 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$9 = [11]
	$2 = ($2 + $1)
	$7 = ($1 << [1])
	$2 = ( $7 ? $2 : ($2 <= $7) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$9 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $138($9)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $8, $4)
	
.LABEL $label$5
	$3 = (($3 - $5) - $4)
	if ( ($3 == 0) ){ goto $label$6 }
	CALL memcpy((($2 + $4) + $6), (($8 + $4) + $5), $3)
	
.LABEL $label$6
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$7 }
	CALL $139($8)
	
.LABEL $label$7
	*($0 + [8]) = $2
	*($0) = ($9 | [1])
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $141 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$1 }
	$2 = [10]
	$5 = *($0)
	if ( (($5 & [1]) == 0) ){ goto $label$2 }
	$5 = *($0)
	$2 = (($5 & [-2]) + [-1])
	
.LABEL $label$2
	if ( ($5 & [1]) ){ goto $label$4 }
	$3 = uint_32(($5 & [254]) >> [1])
	goto $label$3 
	
.LABEL $label$4
	$3 = *($0 + [4])
	
.LABEL $label$3
	$4 = [10]
	$1 = ( $3 ? $1 : ((uint_32)$3 > (uint_32)$1) )
	if ( ($1 <= [11]) ){ goto $label$5 }
	$4 = ((($1 + [16]) & [-16]) + [-1])
	
.LABEL $label$5
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$6 }
	if ( ((int_32)$4 != (int_32)[10]) ){ goto $label$8 }
	$6 = [1]
	$1 = ($0 + [1])
	$2 = *($0 + [8])
	$7 = [0]
	goto $label$7 
	
.LABEL $label$8
	$1 = CALL $138(($4 + [1]))
	if ( ((uint_32)$4 > (uint_32)$2) ){ goto $label$9 }
	if ( ($1 == 0) ){ goto $label$6 }
	
.LABEL $label$9
	$5 = *($0)
	if ( ($5 & [1]) ){ goto $label$10 }
	$7 = [1]
	$2 = ($0 + [1])
	$6 = [0]
	goto $label$7 
	
.LABEL $label$10
	$2 = *($0 + [8])
	$6 = [1]
	$7 = [1]
	
.LABEL $label$7
	if ( ($5 & [1]) ){ goto $label$12 }
	$5 = uint_32(($5 & [254]) >> [1])
	goto $label$11 
	
.LABEL $label$12
	$5 = *($0 + [4])
	
.LABEL $label$11
	$5 = ($5 + [1])
	if ( ($5 == 0) ){ goto $label$13 }
	CALL memcpy($1, $2, $5)
	
.LABEL $label$13
	if ( ($6 == 0) ){ goto $label$14 }
	CALL $139($2)
	
.LABEL $label$14
	if ( ($7 == 0) ){ goto $label$15 }
	*($0 + [4]) = $3
	*($0 + [8]) = $1
	*($0) = (($4 + [1]) | [1])
	return 
	
.LABEL $label$15
	*($0) = ($3 << [1])
	
.LABEL $label$6
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

void .FUNC $140 (int_32 $0)
{
	CALL abort()
	(unreachable)
}

void .FUNC $143 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5, int_32 $6, int_32 $7)
{
	int_32 $8
	int_32 $9
	int_32 $10
	if ( (([-18] - $1) <= $2) ){ goto $label$1 }
	if ( (*($0) & [1]) ){ goto $label$3 }
	$9 = ($0 + [1])
	goto $label$2 
	
.LABEL $label$3
	$9 = *($0 + [8])
	
.LABEL $label$2
	$10 = [-17]
	if ( ((uint_32)$1 > (uint_32)[2147483622]) ){ goto $label$4 }
	$10 = [11]
	$2 = ($2 + $1)
	$8 = ($1 << [1])
	$2 = ( $8 ? $2 : ($2 <= $8) )
	if ( ($2 <= [11]) ){ goto $label$4 }
	$10 = (($2 + [16]) & [-16])
	
.LABEL $label$4
	$2 = CALL $138($10)
	if ( ($4 == 0) ){ goto $label$5 }
	CALL memcpy($2, $9, $4)
	
.LABEL $label$5
	if ( ($6 == 0) ){ goto $label$6 }
	CALL memcpy(($2 + $4), $7, $6)
	
.LABEL $label$6
	$3 = ($3 - $5)
	$7 = ($3 - $4)
	if ( ($7 == 0) ){ goto $label$7 }
	CALL memcpy((($2 + $4) + $6), (($9 + $4) + $5), $7)
	
.LABEL $label$7
	if ( ((int_32)$1 == (int_32)[10]) ){ goto $label$8 }
	CALL $139($9)
	
.LABEL $label$8
	*($0 + [8]) = $2
	*($0) = ($10 | [1])
	$4 = ($3 + $6)
	*($0 + [4]) = $4
	*(($2 + $4)) = [0]
	return (unreachable)
	
.LABEL $label$1
	CALL abort()
}

int_32 .FUNC $142 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$4 = [10]
	$3 = *($0)
	if ( (($3 & [1]) == 0) ){ goto $label$1 }
	$3 = *($0)
	$4 = (($3 & [-2]) + [-1])
	
.LABEL $label$1
	if ( ($3 & [1]) ){ goto $label$3 }
	$5 = uint_32(($3 & [254]) >> [1])
	goto $label$2 
	
.LABEL $label$3
	$5 = *($0 + [4])
	
.LABEL $label$2
	if ( ((uint_32)($4 - $5) >= (uint_32)$2) ){ goto $label$4 }
	CALL $143($0, $4, (($2 - $4) + $5), $5, $5, [0], $2, $1)
	return $0
	
.LABEL $label$4
	if ( ($2 == 0) ){ goto $label$7 }
	if ( ($3 & [1]) ){ goto $label$6 }
	$4 = ($0 + [1])
	goto $label$5 
	
.LABEL $label$7
	return $0
	
.LABEL $label$6
	$4 = *($0 + [8])
	
.LABEL $label$5
	CALL memcpy(($4 + $5), $1, $2)
	$2 = ($5 + $2)
	if ( (*($0) & [1]) ){ goto $label$9 }
	*($0) = ($2 << [1])
	goto $label$8 
	
.LABEL $label$9
	*($0 + [4]) = $2
	
.LABEL $label$8
	*(($4 + $2)) = [0]
	return $0
}

void .FUNC $72 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	$3 = [0]
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($4) = [0]
	CALL $74($4, $1)
	$2 = *($4)
	if ( ($2 == 0) ){ goto $label$2 }
	CALL $15($0, $2)
	$3 = *(($0 + [4]))
	$0 = *($0)
	goto $label$1 
	
.LABEL $label$2
	$0 = [0]
	
.LABEL $label$1
	*($4 + [4]) = $0
	*($4) = $0
	*($4 + [8]) = $3
	CALL $75($4, $1)
	CALL $77(CALL $76(CALL $76($4, ($1 + [24])), ($1 + [36])), ($1 + [48]))
	*([0] + [4]) = ($4 + [16])
}

int_32 .FUNC $73 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$1 = *($0 + [48])
	if ( ($1 == 0) ){ goto $label$1 }
	$4 = ($0 + [52])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$3 }
	$2 = ([0] - $1)
	$5 = ($5 + [-12])
	
.LOOP $label$4:
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$5 }
	*(($5 + [4])) = $3
	CALL $139($3)
	
.LABEL $label$5
	$5 = ($5 + [-16])
	if ( ((int_32)($5 + $2) != (int_32)[-12]) ){ goto $label$4 }
	$5 = *(($0 + [48]))
	goto $label$2 
	
.LABEL $label$3
	$5 = $1
	
.LABEL $label$2
	*($4) = $1
	CALL $139($5)
	
.LABEL $label$1
	$1 = *($0 + [36])
	if ( ($1 == 0) ){ goto $label$6 }
	$4 = ($0 + [40])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$8 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$9:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$10 }
	*(($5 + [16])) = $3
	CALL $139($3)
	
.LABEL $label$10
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$11 }
	*(($5 + [4])) = $3
	CALL $139($3)
	
.LABEL $label$11
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$9 }
	$5 = *(($0 + [36]))
	goto $label$7 
	
.LABEL $label$8
	$5 = $1
	
.LABEL $label$7
	*($4) = $1
	CALL $139($5)
	
.LABEL $label$6
	$1 = *($0 + [24])
	if ( ($1 == 0) ){ goto $label$12 }
	$4 = ($0 + [28])
	$5 = *($4)
	if ( ((int_32)$5 == (int_32)$1) ){ goto $label$14 }
	$2 = ([0] - $1)
	$5 = ($5 + [-24])
	
.LOOP $label$15:
	$3 = *(($5 + [12]))
	if ( ($3 == 0) ){ goto $label$16 }
	*(($5 + [16])) = $3
	CALL $139($3)
	
.LABEL $label$16
	$3 = *($5)
	if ( ($3 == 0) ){ goto $label$17 }
	*(($5 + [4])) = $3
	CALL $139($3)
	
.LABEL $label$17
	$5 = ($5 + [-40])
	if ( ((int_32)($5 + $2) != (int_32)[-24]) ){ goto $label$15 }
	$5 = *(($0 + [24]))
	goto $label$13 
	
.LABEL $label$14
	$5 = $1
	
.LABEL $label$13
	*($4) = $1
	CALL $139($5)
	
.LABEL $label$12
	return $0
}

void .FUNC _ZN9msAccount13delayTransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEy (int_32 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_64 $13
	int_32 $14
	$14 = (*([0] + [4]) - [176])
	*([0] + [4]) = $14
	$11 = CALL current_time()
	*(($14 + [140])) = [0]
	*(($14 + [144])) = [0]
	*($14 + [124]) = [0]
	*($14 + [128]) = [0]
	*($14 + [132]) = [0]
	*($14 + [136]) = [0]
	*($14 + [112]) = ((CASTING uint_32)(uint_64 ((uint_64)$11 / (uint_64)(int_64)1000000)) + [60])
	*($14 + [148]) = [0]
	*(($14 + [152])) = [0]
	*(($14 + [156])) = [0]
	*($14 + [160]) = [0]
	*(($14 + [164])) = [0]
	*(($14 + [168])) = [0]
	$6 = ($14 + [148])
	$5 = *($0)
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1504]
	$12 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$11 > (uint_64)(int_64)5) ){ goto $label$6 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$7 = ($7 + [165])
	goto $label$4 
	
.LABEL $label$6
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$2
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$1 }
	*($14 + [104]) = $12
	*($14 + [96]) = $5
	$8 = ($2 + [16])
	$11 = (int_64)0
	$10 = (int_64)59
	$9 = [1520]
	$12 = (int_64)0
	
.LOOP $label$7:
	if ( ((uint_64)$11 > (uint_64)(int_64)7) ){ goto $label$12 }
	$7 = *($9)
	if ( ((uint_32)(($7 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$11 }
	$7 = ($7 + [165])
	goto $label$10 
	
.LABEL $label$12
	$13 = (int_64)0
	if ( ((uint_64)$11 <= (uint_64)(int_64)11) ){ goto $label$9 }
	goto $label$8 
	
.LABEL $label$11
	$7 = ( ($7 + [208]) ? [0] : ((($7 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$10
	$13 = (int_64)((int_64)(CASTING uint_64)(uint_32 $7) << (int_64)56) >> (int_64)56)
	
.LABEL $label$9
	$13 = ((int_64)((int_64)$13 & (int_64)31) << (int_64)((int_64)$10 & (int_64)4294967295))
	
.LABEL $label$8
	$9 = ($9 + [1])
	$11 = ((int_64)$11 + (int_64)1)
	$12 = ((int_64)$13 | (int_64)$12)
	$10 = ((int_64)$10 + (int_64)-5)
	if ( ((int_64)$10 != (int_64)-6) ){ goto $label$7 }
	*($14 + [88]) = $12
	*(($9 = (($14 + [8]) + [16]))) = *(($2 + [16]))
	*(($7 = (($14 + [8]) + [8]))) = *(($2 + [8]))
	*($14 + [8]) = *($2)
	*($14 + [32]) = $5
	*($14 + [40]) = $1
	*(($14 + [64])) = *($9)
	*(($14 + [56])) = *($7)
	*($14 + [48]) = *($14 + [8])
	CALL $166(($14 + [72]), $3)
	CALL $71($6, ($14 + [96]), $8, ($14 + [88]), ($14 + [32]))
	if ( ((*($14 + [72]) & [1]) == 0) ){ goto $label$13 }
	CALL $139(*(($14 + [80])))
	
.LABEL $label$13
	*(($14 + [132])) = $4
	*($14 + [40]) = (int_64)0
	*($14 + [32]) = $1
	$11 = *($0)
	CALL $72(($14 + [8]), ($14 + [112]))
	$9 = *($14 + [8])
	CALL send_deferred(($14 + [32]), $11, $9, (*($14 + [12]) - $9), [0])
	$9 = *($14 + [8])
	if ( ($9 == 0) ){ goto $label$14 }
	*($14 + [12]) = $9
	CALL $139($9)
	
.LABEL $label$14
	CALL $73(($14 + [112]))
	*([0] + [4]) = ($14 + [176])
}

void .FUNC $71 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	$10 = (*([0] + [4]) - [32])
	*([0] + [4]) = $10
	$9 = *($0)
	$5 = ((int_32)(*($0 + [4]) - $9) / (int_32)[40])
	$6 = ($5 + [1])
	if ( ((uint_32)$6 >= (uint_32)[107374183]) ){ goto $label$2 }
	$7 = [107374182]
	$9 = ((int_32)(*($0 + [8]) - $9) / (int_32)[40])
	if ( ((uint_32)$9 > (uint_32)[53687090]) ){ goto $label$4 }
	$9 = ($9 << [1])
	$7 = ( $6 ? $9 : ($9 <= $6) )
	if ( ($7 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $138(((int_32)$7 * (int_32)[40]))
	goto $label$1 
	
.LABEL $label$3
	$7 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	*(($9 = ($6 + ((int_32)$5 * (int_32)[40])))) = *($2)
	*($9 + [8]) = *($3)
	*($9 + [16 align=4]) = (int_64)0
	*(($3 = ($9 + [24]))) = [0]
	$2 = CALL $138([16])
	*($9 + [16]) = $2
	$5 = ($2 + [16])
	*($3) = $5
	*(($2 + [12])) = *(($1 + [12]))
	*(($2 + [8])) = *(($1 + [8]))
	*(($2 + [4])) = *(($1 + [4]))
	*($2) = *($1)
	*(($9 + [20])) = $5
	*($9 + [28]) = [0]
	*(($5 = ($9 + [32]))) = [0]
	*(($9 + [36])) = [0]
	$2 = *($4 + [40])
	$1 = ( *(($4 + [44])) ? uint_32($2 >> [1]) : ($2 & [1]) )
	$2 = ($1 + [40])
	$8 = (CASTING uint_64)(uint_32 $1)
	$3 = ($6 + ((int_32)$7 * (int_32)[40]))
	$1 = ($9 + [28])
	
.LOOP $label$5:
	$2 = ($2 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$5 }
	if ( ($2 == 0) ){ goto $label$7 }
	CALL $15($1, $2)
	$7 = *($5)
	$2 = *($1)
	goto $label$6 
	
.LABEL $label$7
	$7 = [0]
	$2 = [0]
	
.LABEL $label$6
	*($10 + [4]) = $2
	*($10) = $2
	*($10 + [8]) = $7
	*($10 + [16]) = $10
	*($10 + [24]) = $4
	$5 = ($9 + [40])
	CALL $78(($10 + [24]), ($10 + [16]))
	$2 = *($0)
	$1 = *(($0 + [4]))
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$9 }
	$6 = ([0] - $2)
	$2 = ($1 + [-20])
	
.LOOP $label$10:
	*(($9 + [-32])) = *(($2 + [-12]))
	*(($9 + [-40])) = *(($2 + [-20]))
	*(($1 = ($9 + [-24]))) = (int_64)0
	*(($4 = ($9 + [-16]))) = [0]
	$7 = ($2 + [-4])
	*($1) = *($7)
	*(($9 + [-20])) = *($2)
	$1 = ($2 + [4])
	*($4) = *($1)
	*($1) = [0]
	*(($1 = ($9 + [-12]))) = (int_64)0
	*($7) = (int_64)0
	*(($4 = ($9 + [-4]))) = [0]
	$7 = ($2 + [8])
	*($1) = *($7)
	*(($9 + [-8])) = *(($2 + [12]))
	$1 = ($2 + [16])
	*($4) = *($1)
	*($1) = [0]
	*($7) = (int_64)0
	$9 = ($9 + [-40])
	$2 = ($2 + [-40])
	if ( ((int_32)($2 + $6) != (int_32)[-20]) ){ goto $label$10 }
	$2 = *(($0 + [4]))
	$4 = *($0)
	goto $label$8 
	
.LABEL $label$9
	$4 = $2
	
.LABEL $label$8
	*($0) = $9
	*(($0 + [4])) = $5
	*(($0 + [8])) = $3
	if ( ((int_32)$2 == (int_32)$4) ){ goto $label$11 }
	$1 = ([0] - $4)
	$9 = ($2 + [-24])
	
.LOOP $label$12:
	$2 = *(($9 + [12]))
	if ( ($2 == 0) ){ goto $label$13 }
	*(($9 + [16])) = $2
	CALL $139($2)
	
.LABEL $label$13
	$2 = *($9)
	if ( ($2 == 0) ){ goto $label$14 }
	*(($9 + [4])) = $2
	CALL $139($2)
	
.LABEL $label$14
	$9 = ($9 + [-40])
	if ( ((int_32)($9 + $1) != (int_32)[-24]) ){ goto $label$12 }
	
.LABEL $label$11
	if ( ($4 == 0) ){ goto $label$15 }
	CALL $139($4)
	
.LABEL $label$15
	*([0] + [4]) = ($10 + [32])
	(unreachable)
}

int_32 .FUNC $76 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = (CASTING uint_64)(uint_32 ((int_32)(*($1 + [4]) - *($1)) / (int_32)[40]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	$4 = ($0 + [4])
	
.LOOP $label$1:
	$7 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($8 + [15]) = (($2) << [7]) | ($7 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [944])
	CALL memcpy(*($4), ($8 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$3 = *(($1 + [4]))
	$7 = *($1)
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$4 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [944])
	CALL memcpy(*($4), $7, [8])
	$6 = (*($4) + [8])
	*($4) = $6
	CALL eosio_assert(((int_32)(*($2) - $6) > (int_32)[7]), [944])
	CALL memcpy(*($4), ($7 + [8]), [8])
	*($4) = (*($4) + [8])
	CALL $19(CALL $18($0, ($7 + [16])), ($7 + [28]))
	$7 = ($7 + [40])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$2 }
	$6 = *($4)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC $77 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$5 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$6 = *($0 + [4])
	$3 = ($0 + [8])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $5)
	$5 = (uint_64)$5 >> (uint_64)(int_64)7
	$2 = ((int_64)$5) != (int_64)0
	*($7 + [15]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[0]), [944])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$6 = (*($4) + [1])
	*($4) = $6
	if ( $2 ){ goto $label$1 }
	$2 = *(($1 + [4]))
	$4 = *($1)
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$3 = ($0 + [8])
	
.LOOP $label$3:
	CALL eosio_assert(((int_32)(*($3) - $6) > (int_32)[1]), [944])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $4, [2])
	*($6) = (*($6) + [2])
	CALL $19($0, ($4 + [4]))
	$4 = ($4 + [16])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$2 }
	$6 = *($6)
	goto $label$3 
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $74 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	$6 = *($0)
	*($0) = ($6 + [10])
	$6 = ($6 + [11])
	$8 = *($1 + [12])
	
.LOOP $label$1:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$1 }
	*($0) = $6
	$8 = *($1 + [20])
	
.LOOP $label$2:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$2 }
	*($0) = $6
	$7 = *($1 + [24])
	$2 = *(($1 + [28]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$3:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$3 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$6:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$6 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$7 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$7
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$8:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$8 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$5 }
	*($0) = $6
	
.LABEL $label$4
	$7 = *($1 + [36])
	$2 = *(($1 + [40]))
	$8 = (CASTING uint_64)(uint_32 ((int_32)($2 - $7) / (int_32)[40]))
	
.LOOP $label$9:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$9 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$2) ){ goto $label$10 }
	
.LOOP $label$11:
	$6 = ($6 + [16])
	$4 = *($7 + [16])
	$3 = *(($7 + [20]))
	$5 = ($3 - $4)
	$8 = (CASTING uint_64)(uint_32 int_32($5 >> [4]))
	
.LOOP $label$12:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$12 }
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$13 }
	$6 = (($5 & [-16]) + $6)
	
.LABEL $label$13
	$4 = *($7 + [28])
	$3 = *(($7 + [32]))
	$6 = (($6 + $3) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$14:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$14 }
	$7 = ($7 + [40])
	if ( ((int_32)$7 != (int_32)$2) ){ goto $label$11 }
	*($0) = $6
	
.LABEL $label$10
	$7 = *($1 + [48])
	$5 = *(($1 + [52]))
	$8 = (CASTING uint_64)(uint_32 int_32(($5 - $7) >> [4]))
	
.LOOP $label$15:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$15 }
	*($0) = $6
	if ( ((int_32)$7 == (int_32)$5) ){ goto $label$16 }
	
.LOOP $label$17:
	$4 = *($7 + [4])
	$3 = *(($7 + [8]))
	$6 = ((($6 + $3) + [2]) - $4)
	$8 = (CASTING uint_64)(uint_32 ($3 - $4))
	
.LOOP $label$18:
	$6 = ($6 + [1])
	$8 = (uint_64)$8 >> (uint_64)(int_64)7
	if ( ((int_64)$8) != (int_64)0) ){ goto $label$18 }
	$7 = ($7 + [16])
	if ( ((int_32)$7 != (int_32)$5) ){ goto $label$17 }
	*($0) = $6
	
.LABEL $label$16
	return $0
}

int_32 .FUNC $75 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[3]), [944])
	CALL memcpy(*($0 + [4]), $1, [4])
	$4 = (*($0 + [4]) + [4])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[1]), [944])
	CALL memcpy(*($0 + [4]), ($1 + [4]), [2])
	$4 = (*($0 + [4]) + [2])
	*($0 + [4]) = $4
	CALL eosio_assert(((int_32)(*($0 + [8]) - $4) > (int_32)[3]), [944])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [4])
	$5 = (*($0 + [4]) + [4])
	*($0 + [4]) = $5
	$6 = *($1 + [12])
	
.LOOP $label$1:
	$4 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$2 = ((int_64)$6) != (int_64)0
	*($7 + [14]) = (($2) << [7]) | ($4 & [127]))
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $5) > (int_32)[0]), [944])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($7 + [14]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $2 ){ goto $label$1 }
	$3 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [944])
	$4 = ($0 + [4])
	CALL memcpy(*($4), ($1 + [16]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	$6 = *($1 + [20])
	
.LOOP $label$2:
	$2 = (CASTING uint_32)(uint_64 $6)
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	$1 = ((int_64)$6) != (int_64)0
	*($7 + [15]) = (($1) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($3) - $5) > (int_32)[0]), [944])
	CALL memcpy(*($4), ($7 + [15]), [1])
	$5 = (*($4) + [1])
	*($4) = $5
	if ( $1 ){ goto $label$2 }
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC $78 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$2 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [944])
	CALL memcpy(*($3 + [4]), $2, [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$0 = *($0)
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [944])
	CALL memcpy(*($3 + [4]), ($0 + [8]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	$3 = *($1)
	CALL eosio_assert(((int_32)(*($3 + [8]) - *($3 + [4])) > (int_32)[7]), [944])
	CALL memcpy(*($3 + [4]), ($0 + [16]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [944])
	CALL memcpy(*($3 + [4]), ($0 + [24]), [8])
	$2 = (*($3 + [4]) + [8])
	*($3 + [4]) = $2
	CALL eosio_assert(((int_32)(*($3 + [8]) - $2) > (int_32)[7]), [944])
	CALL memcpy(*($3 + [4]), ($0 + [32]), [8])
	*($3 + [4]) = (*($3 + [4]) + [8])
	CALL $20(*($1), ($0 + [40]))
}

int_32 .FUNC _ZN9msAccount12CheckBalanceE7msAsset (int_32 $0, int_32 $1)
{
	int_64 $2
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [32])
	*([0] + [4]) = $4
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($4 + [8]), $0, *($1 + [16]), *($1 + [8]))
	$2 = *($1)
	$3 = *($4 + [8])
	*([0] + [4]) = ($4 + [32])
	return ((int_64)$3 >= (int_64)$2)
}

int_32 .FUNC __gmtime_r (int_32 $0, int_32 $1)
{
	if ( ((int_32)CALL __secs_to_tm(*($0), $1) <= (int_32)[-1]) ){ goto $label$1 }
	*($1 + [40]) = [15888]
	*($1 + [32 align=4]) = (int_64)0
	return $1
	
.LABEL $label$1
	*(CALL __errno_location()) = [75]
	return [0]
}

int_64 .FUNC _ZN10msContract17getActionContractEv (int_32 $0)
{
	return *($0 + [32])
}

int_64 .FUNC _ZN10msContract15getSelfContractEv (int_32 $0)
{
	return *($0 + [16])
}

void .FUNC $94 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	CALL prints([176])
	CALL prints([2656])
	CALL prints([256])
	CALL eosio_assert([0], [2656])
}

void .FUNC $95 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	CALL prints([176])
	CALL prints([2592])
	CALL prints([256])
	CALL eosio_assert([0], [2592])
}

void .FUNC $96 (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	CALL prints([176])
	CALL prints([2528])
	CALL prints([256])
	CALL eosio_assert([0], [2528])
}

int_64 .FUNC _ZN10msContract18getCurrentReceiverEv (int_32 $0)
{
	return *($0 + [24])
}

void .FUNC _ZN7msAsset8ToStringEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$6 = (*([0] + [4]) - [144])
	$9 = $6
	*([0] + [4]) = $6
	$5 = (int_64)1
	$7 = *($1 + [8])
	$4 = (int_64)($7 == 0)
	if ( $4 ){ goto $label$1 }
	$8 = ((int_64)$7 + (int_64)1)
	$5 = (int_64)1
	
.LOOP $label$2:
	$5 = ((int_64)$5 * (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$2 = ($6 - (((CASTING uint_32)(uint_64 ((int_64)$7 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $7))))) = [0]
	if ( $4 ){ goto $label$3 }
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)*($1) % (int_64)$5)
	$6 = ($6 + [-1])
	
.LOOP $label$4:
	*($6) = ((int_64)((int_64)$8 % (int_64)10) + (int_64)48)
	$6 = ($6 + [-1])
	$8 = ((int_64)$8 / (int_64)10)
	$7 = ((int_64)$7 + (int_64)-1)
	if ( ((int_64)$7 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL memset(($9 + [32]), [0], [100])
	*($9) = ((int_64)*($1) / (int_64)$5)
	CALL sprintf(($9 + [32]), [2496], $9)
	CALL strncpy((($9 + [32]) + CALL $213(($9 + [32]))), $2, $3)
	*(($9 + [24])) = [0]
	*($9 + [16]) = (int_64)0
	$6 = CALL strlen(($9 + [32]))
	if ( ((uint_32)$6 >= (uint_32)[-16]) ){ goto $label$5 }
	if ( ((uint_32)$6 >= (uint_32)[11]) ){ goto $label$8 }
	*($9 + [16]) = ($6 << [1])
	$1 = (($9 + [16]) | [1])
	if ( $6 ){ goto $label$7 }
	goto $label$6 
	
.LABEL $label$8
	$2 = (($6 + [16]) & [-16])
	$1 = CALL $138($2)
	*($9 + [16]) = ($2 | [1])
	*($9 + [24]) = $1
	*($9 + [20]) = $6
	
.LABEL $label$7
	CALL memcpy($1, ($9 + [32]), $6)
	
.LABEL $label$6
	*(($1 + $6)) = [0]
	$6 = CALL $144(($9 + [16]), [1552])
	$8 = *($6)
	*($6) = (int_64)0
	*($0) = $8
	$6 = ($6 + [8])
	*(($0 + [8])) = *($6)
	*($6) = [0]
	if ( ((*($9 + [16]) & [1]) == 0) ){ goto $label$9 }
	CALL $139(*($9 + [24]))
	
.LABEL $label$9
	*([0] + [4]) = ($9 + [144])
	return (unreachable)
	
.LABEL $label$5
	CALL $140(($9 + [16]))
}

int_32 .FUNC _ZN7msAsset8ValidateENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEES6_yN5eosio11symbol_typeE (int_32 $0, int_32 $1, int_32 $2, int_64 $3, int_64 $4)
{
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	$6 = [0]
	if ( ((int_64)*($0 + [16]) != (int_64)$3) ){ goto $label$1 }
	if ( ((int_64)*($0 + [8]) != (int_64)$4) ){ goto $label$1 }
	*($7 + [31]) = [0]
	$3 = *($0)
	CALL $166(($7 + [16]), $1)
	if ( ((uint_64)$3 >= (uint_64)CALL _ZN7msAsset9AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh($7, ($7 + [16]), ($7 + [31]))) ){ goto $label$3 }
	$1 = *(($0 + [8]))
	$5 = *($7 + [31])
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$4 }
	CALL $139(*($7 + [24]))
	
.LABEL $label$4
	$6 = [0]
	if ( ((int_32)($5 & [255]) != (int_32)($1 & [255])) ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	if ( ((*($7 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $139(*($7 + [24]))
	
.LABEL $label$2
	$3 = *($0)
	CALL $166($7, $2)
	if ( ((uint_64)$3 <= (uint_64)CALL _ZN7msAsset9AmountS2NENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERh($7, $7, ($7 + [31]))) ){ goto $label$6 }
	$0 = *(($0 + [8]))
	$1 = *($7 + [31])
	if ( ((*($7) & [1]) == 0) ){ goto $label$7 }
	CALL $139(*($7 + [8]))
	
.LABEL $label$7
	$6 = [0]
	if ( ((int_32)($1 & [255]) != (int_32)($0 & [255])) ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	if ( ((*($7) & [1]) == 0) ){ goto $label$5 }
	CALL $139(*($7 + [8]))
	
.LABEL $label$5
	$6 = [1]
	
.LABEL $label$1
	*([0] + [4]) = ($7 + [32])
	return $6
}

int_64 .FUNC _ZN7msAsset14GetAmountByIntEv (int_32 $0)
{
	return *($0)
}

int_32 .FUNC _ZN10msContractC2Eyyy (int_32 $0, int_64 $1, int_64 $2, int_64 $3)
{
	int_32 $4
	*($0) = [2512]
	*($0 + [8]) = $1
	*($0 + [16]) = $1
	*($0 + [24]) = $1
	*($0 + [32]) = $2
	*($0 + [40]) = $3
	*(($4 = ($0 + [52]))) = [0]
	*(($0 + [56])) = [0]
	*($0 + [48]) = $4
	return $0
}

int_32 .FUNC $138 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = ( $0 ? [1] : $0 )
	$0 = CALL malloc($1)
	if ( $0 ){ goto $label$1 }
	
.LOOP $label$2:
	$0 = [0]
	$2 = *([0] + [12168])
	if ( ($2 == 0) ){ goto $label$1 }
	CALL void $2()
	$0 = CALL malloc($1)
	if ( ($0 == 0) ){ goto $label$2 }
	
.LABEL $label$1
	return $0
}

void .FUNC $139 (int_32 $0)
{
	if ( ($0 == 0) ){ goto $label$1 }
	CALL free($0)
	
.LABEL $label$1
}

void .FUNC free (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	if ( ($0 == 0) ){ goto $label$2 }
	$2 = *([0] + [12048])
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$2 }
	$3 = [11856]
	$1 = (((int_32)$2 * (int_32)[12]) + [11856])
	
.LOOP $label$3:
	$2 = *(($3 + [4]))
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ((uint_32)($2 + [4]) > (uint_32)$0) ){ goto $label$4 }
	if ( ((uint_32)($2 + *($3)) > (uint_32)$0) ){ goto $label$1 }
	
.LABEL $label$4
	$3 = ($3 + [12])
	if ( ($3 <= $1) ){ goto $label$3 }
	
.LABEL $label$2
	return 
	
.LABEL $label$1
	*(($3 = ($0 + [-4]))) = (*($3) & [2147483647])
}

void .FUNC _ZNSt3__18ios_base5clearEj (int_32 $0, int_32 $1)
{
	*($0 + [16]) = ((*($0 + [24]) == 0) | $1)
}

void .FUNC _ZNKSt3__18ios_base6getlocEv (int_32 $0, int_32 $1)
{
	CALL _ZNSt3__16localeC2ERKS0_($0, ($1 + [28]))
}

int_32 .FUNC _ZNSt3__16localeC2ERKS0_ (int_32 $0, int_32 $1)
{
	$1 = *($1)
	*($0) = $1
	*($1 + [4]) = (*($1 + [4]) + [1])
	return $0
}

int_32 .FUNC _ZNKSt3__16locale9use_facetERNS0_2idE (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = (*([0] + [4]) - [32])
	*([0] + [4]) = $2
	$0 = *($0)
	*($2 + [4 align=4]) = (CASTING uint_64)(uint_32 [4])
	*($2) = $1
	if ( ((int_32)*($1) == (int_32)[-1]) ){ goto $label$1 }
	*($2 + [24]) = $2
	*($2 + [16]) = ($2 + [24])
	CALL _ZNSt3__111__call_onceERVmPvPFvS2_E($1, ($2 + [16]), [5])
	
.LABEL $label$1
	$1 = *(((*($0 + [16]) + (*($1 + [4]) << [2])) + [-4]))
	*([0] + [4]) = ($2 + [32])
	return $1
}

void .FUNC _ZNSt3__16locale2id6__initEv (int_32 $0)
{
	int_32 $1
	$1 = (*([0] + [12164]) + [1])
	*($0 + [4]) = $1
	*([0] + [12164]) = $1
}

void .FUNC $136 (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = *(($0 + [8]))
	$0 = *(*($0))
	$1 = (*($0) + int_32($2 >> [1]))
	$0 = *($0 + [4])
	if ( (($2 & [1]) == 0) ){ goto $label$1 }
	$0 = *((*($1) + $0))
	
.LABEL $label$1
	CALL void $1((int_32 $0))
}

void .FUNC _ZNSt3__111__call_onceERVmPvPFvS2_E (int_32 $0, int_32 $1, int_32 $2)
{
	if ( *($0) ){ goto $label$1 }
	*($0) = [1]
	CALL void $1((int_32 $2))
	*($0) = [-1]
	
.LABEL $label$1
}

int_32 .FUNC strlen (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = $0
	if ( (($0 & [3]) == 0) ){ goto $label$2 }
	$2 = $0
	
.LOOP $label$3:
	if ( (*($2) == 0) ){ goto $label$1 }
	$2 = ($2 + [1])
	if ( ($2 & [3]) ){ goto $label$3 }
	
.LABEL $label$2
	$2 = ($2 + [-4])
	
.LOOP $label$4:
	$2 = ($2 + [4])
	$1 = *($2)
	if ( (((((int_32)$1 ^ (int_32)[-1]) & ($1 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$4 }
	if ( (($1 & [255]) == 0) ){ goto $label$1 }
	
.LOOP $label$5:
	$2 = ($2 + [1])
	if ( *($2) ){ goto $label$5 }
	
.LABEL $label$1
	return ($2 - $0)
}

int_32 .FUNC __uflow (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	$1 = [-1]
	if ( CALL __toread($0) ){ goto $label$1 }
	if ( ((int_32)CALL int_32 $0((int_32 ($2 + [15])), (int_32 [1]), (int_32 *($0 + [32]))) != (int_32)[1]) ){ goto $label$1 }
	$1 = *($2 + [15])
	
.LABEL $label$1
	*([0] + [4]) = ($2 + [16])
	return $1
}

int_32 .FUNC __toread (int_32 $0)
{
	int_32 $1
	int_32 $2
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	if ( ((uint_32)*($0 + [20]) <= (uint_32)*($0 + [28])) ){ goto $label$1 }
	CALL int_32 $0((int_32 [0]), (int_32 [0]), (int_32 *($0 + [36])))
	
.LABEL $label$1
	*($0 + [16]) = (int_64)0
	*(($0 + [28])) = [0]
	$1 = *($0)
	if ( ($1 & [4]) ){ goto $label$2 }
	$2 = (*($0 + [44]) + *($0 + [48]))
	*($0 + [8]) = $2
	*($0 + [4]) = $2
	return int_32(($1 << [27]) >> [31])
	
.LABEL $label$2
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC atoi (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$1 = [1]
	goto $label$4 
	
.LABEL $label$5
	$1 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$1 = [0]
	
.LABEL $label$2
	$2 = [0]
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$2 = [0]
	
.LOOP $label$7:
	$2 = (((int_32)$2 * (int_32)[10]) - $3)
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $2 ? ([0] - $2) : $1 )
}

int_64 .FUNC atoll (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	
.LOOP $label$1:
	$3 = *($0)
	$1 = int_32(($3 << [24]) >> [24])
	$2 = ($1 + [-9])
	$4 = ($0 + [1])
	$0 = $4
	if ( ((int_32)$3 == (int_32)[32]) ){ goto $label$1 }
	$0 = $4
	if ( ($2 <= [5]) ){ goto $label$1 }
	if ( ((int_32)$1 == (int_32)[43]) ){ goto $label$5 }
	if ( ((int_32)$1 != (int_32)[45]) ){ goto $label$3 }
	$2 = [1]
	goto $label$4 
	
.LABEL $label$5
	$2 = [0]
	
.LABEL $label$4
	$3 = *($4)
	goto $label$2 
	
.LABEL $label$3
	$4 = ($4 + [-1])
	$2 = [0]
	
.LABEL $label$2
	$5 = (int_64)0
	$3 = (int_32(($3 << [24]) >> [24]) + [-48])
	if ( ((uint_32)$3 > (uint_32)[9]) ){ goto $label$6 }
	$0 = ($4 + [1])
	$5 = (int_64)0
	
.LOOP $label$7:
	$5 = (int_64))(((int_64)$5 * (int_64)10) - (CASTING int_64)(int_32 $3))
	$3 = *($0)
	$0 = ($0 + [1])
	$3 = ($3 + [-48])
	if ( ($3 <= [10]) ){ goto $label$7 }
	
.LABEL $label$6
	return ( $5 ? (int_64))((int_64)0 - $5) : $2 )
}

int_32 .FUNC sprintf (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	*($3 + [12]) = $2
	$2 = CALL vsprintf($0, $1, $2)
	*([0] + [4]) = ($3 + [16])
	return $2
}

int_32 .FUNC vsprintf (int_32 $0, int_32 $1, int_32 $2)
{
	return CALL vsnprintf($0, [2147483647], $1, $2)
}

int_64 .FUNC __intscan (int_32 $0, int_32 $1, int_32 $2, int_64 $3)
{
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_64 $12
	int_32 $13
	int_64 $14
	if ( ((uint_32)$1 > (uint_32)[36]) ){ goto $label$4 }
	if ( ((int_32)$1 == (int_32)[1]) ){ goto $label$4 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$5:
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$7 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$6 
	
.LABEL $label$7
	$13 = CALL __shgetc($0)
	
.LABEL $label$6
	$10 = ($13 + [-9])
	if ( ((uint_32)$10 > (uint_32)[36]) ){ goto $label$3 }
	goto $label$5 
	
.LABEL $label$8
	$4 = ( [-1] ? [0] : ((int_32)$13 == (int_32)[45]) )
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$2 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$1 
	
.LABEL $label$4
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$3
	$4 = [0]
	goto $label$1 
	
.LABEL $label$2
	$13 = CALL __shgetc($0)
	
.LABEL $label$1
	if ( ((int_32)($1 | [16]) != (int_32)[16]) ){ goto $label$20 }
	if ( ((int_32)$13 != (int_32)[48]) ){ goto $label$20 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$19 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$18 
	
.LABEL $label$20
	$1 = ( $1 ? [10] : $1 )
	if ( (*(($13 + [15041])) <= $1) ){ goto $label$17 }
	if ( (*(($0 + [104])) == 0) ){ goto $label$21 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$21
	CALL __shlim($0, (int_64)0)
	*(CALL __errno_location()) = [22]
	return (int_64)0
	
.LABEL $label$19
	$13 = CALL __shgetc($0)
	
.LABEL $label$18
	if ( ((int_32)($13 | [32]) != (int_32)[120]) ){ goto $label$22 }
	$10 = ($0 + [4])
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*(($0 + [104]))) ){ goto $label$16 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$15 
	
.LABEL $label$22
	if ( ($1 == 0) ){ goto $label$14 }
	
.LABEL $label$17
	if ( ((int_32)$1 != (int_32)[10]) ){ goto $label$13 }
	$14 = (int_64)0
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$23 }
	$10 = [0]
	$8 = ($0 + [104])
	$1 = ($0 + [4])
	
.LOOP $label$24:
	$10 = ((int_32)$10 * (int_32)[10])
	$13 = *($1)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$26 }
	*($1) = ($13 + [1])
	$13 = *($13)
	goto $label$25 
	
.LABEL $label$26
	$13 = CALL __shgetc($0)
	
.LABEL $label$25
	$10 = ($10 + $9)
	$9 = ($13 + [-48])
	if ( ((uint_32)$9 > (uint_32)[9]) ){ goto $label$27 }
	if ( ($10 <= [429496729]) ){ goto $label$24 }
	
.LABEL $label$27
	$14 = (CASTING uint_64)(uint_32 $10)
	
.LABEL $label$23
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$11 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$28:
	$1 = [10]
	$5 = (CASTING int_64)(int_32 $10)
	$12 = ((int_64)$14 * (int_64)10)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$30 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$29 
	
.LABEL $label$30
	$13 = CALL __shgetc($0)
	
.LABEL $label$29
	$14 = ((int_64)$12 + (int_64)$5)
	$10 = ($13 + [-48])
	if ( ((uint_32)$10 > (uint_32)[9]) ){ goto $label$31 }
	if ( (uint_64)($14 <= (int_64)1844674407370955162) ){ goto $label$28 }
	
.LABEL $label$31
	if ( ((uint_32)$10 <= (uint_32)[9]) ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$16
	$13 = CALL __shgetc($0)
	
.LABEL $label$15
	$1 = [16]
	if ( (*(($13 + [15041])) <= [16]) ){ goto $label$13 }
	$13 = *(($0 + [104]))
	if ( ($13 == 0) ){ goto $label$32 }
	*(($10 = ($0 + [4]))) = (*($10) + [-1])
	
.LABEL $label$32
	if ( ($2 == 0) ){ goto $label$9 }
	$14 = (int_64)0
	if ( ($13 == 0) ){ goto $label$10 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	return (int_64)0
	
.LABEL $label$14
	$1 = [8]
	
.LABEL $label$13
	if ( ((($1 + [-1]) & $1) == 0) ){ goto $label$37 }
	$10 = *(($13 + [15041]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$36 }
	$9 = [0]
	$2 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$38:
	$9 = ($10 + ((int_32)$9 * (int_32)$1))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($2)) ){ goto $label$40 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$39 
	
.LABEL $label$40
	$13 = CALL __shgetc($0)
	
.LABEL $label$39
	$10 = *(($13 + [15041]))
	if ( ((uint_32)$9 > (uint_32)[119304646]) ){ goto $label$41 }
	if ( ($10 <= $1) ){ goto $label$38 }
	
.LABEL $label$41
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$35 }
	goto $label$12 
	
.LABEL $label$37
	$2 = *(((uint_32(((int_32)$1 * (int_32)[23]) >> [5]) & [7]) + [15312]))
	$10 = *(($13 + [15041]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$34 }
	$9 = [0]
	$11 = ($0 + [104])
	$8 = ($0 + [4])
	
.LOOP $label$42:
	$9 = ($10 | ($9 << $2))
	$13 = *($8)
	if ( ((uint_32)$13 >= (uint_32)*($11)) ){ goto $label$44 }
	*($8) = ($13 + [1])
	$13 = *($13)
	goto $label$43 
	
.LABEL $label$44
	$13 = CALL __shgetc($0)
	
.LABEL $label$43
	$10 = *(($13 + [15041]))
	if ( ((uint_32)$9 > (uint_32)[134217727]) ){ goto $label$45 }
	if ( ($10 <= $1) ){ goto $label$42 }
	
.LABEL $label$45
	$14 = (CASTING uint_64)(uint_32 $9)
	if ( ($10 <= $1) ){ goto $label$33 }
	goto $label$12 
	
.LABEL $label$36
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$35
	$7 = (CASTING uint_64)(uint_32 $1)
	$6 = ((uint_64)(int_64)-1 / (uint_64)$7)
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$46:
	if ( ((uint_64)$14 > (uint_64)$6) ){ goto $label$12 }
	$5 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$12 = ((int_64)$14 * (int_64)$7)
	if ( ((uint_64)$12 > (uint_64)((int_64)$5 ^ (int_64)-1)) ){ goto $label$12 }
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$48 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$47 
	
.LABEL $label$48
	$13 = CALL __shgetc($0)
	
.LABEL $label$47
	$14 = ((int_64)$5 + (int_64)$12)
	$10 = *(($13 + [15041]))
	if ( ($10 <= $1) ){ goto $label$46 }
	goto $label$12 
	
.LABEL $label$34
	$14 = (int_64)0
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	
.LABEL $label$33
	$5 = (CASTING uint_64)(uint_32 $2)
	$6 = (uint_64)(int_64)-1 >> (uint_64)$5
	if ( ((uint_64)$14 > (uint_64)$6)) ){ goto $label$12 }
	$8 = ($0 + [104])
	$9 = ($0 + [4])
	
.LOOP $label$49:
	$14 = ((int_64)$14 << (int_64)$5)
	$12 = (CASTING uint_64)(uint_32 ($10 & [255]))
	$13 = *($9)
	if ( ((uint_32)$13 >= (uint_32)*($8)) ){ goto $label$51 }
	*($9) = ($13 + [1])
	$13 = *($13)
	goto $label$50 
	
.LABEL $label$51
	$13 = CALL __shgetc($0)
	
.LABEL $label$50
	$14 = ((int_64)$12 | (int_64)$14)
	$10 = *(($13 + [15041]))
	if ( ((uint_32)$10 >= (uint_32)$1) ){ goto $label$12 }
	if ( ((uint_64)$14 <= (uint_64)$6) ){ goto $label$49 }
	
.LABEL $label$12
	if ( ((uint_32)*(($13 + [15041])) >= (uint_32)$1) ){ goto $label$11 }
	$9 = ($0 + [104])
	$10 = ($0 + [4])
	
.LOOP $label$52:
	$13 = *($10)
	if ( ((uint_32)$13 >= (uint_32)*($9)) ){ goto $label$54 }
	*($10) = ($13 + [1])
	$13 = *($13)
	goto $label$53 
	
.LABEL $label$54
	$13 = CALL __shgetc($0)
	
.LABEL $label$53
	if ( (*(($13 + [15041])) <= $1) ){ goto $label$52 }
	*(CALL __errno_location()) = [34]
	$4 = ( $4 ? [0] : (int_64)(((int_64)$3 & (int_64)1) == 0) )
	$14 = $3
	
.LABEL $label$11
	if ( (*(($0 + [104])) == 0) ){ goto $label$55 }
	*(($13 = ($0 + [4]))) = (*($13) + [-1])
	
.LABEL $label$55
	if ( (uint_64)($14 <= $3) ){ goto $label$56 }
	if ( (CASTING uint_32)(uint_64 ((int_64)$3 & (int_64)1)) ){ goto $label$57 }
	if ( $4 ){ goto $label$57 }
	*(CALL __errno_location()) = [34]
	return ((int_64)$3 + (int_64)-1)
	
.LABEL $label$57
	if ( ((uint_64)$14 <= (uint_64)$3) ){ goto $label$56 }
	*(CALL __errno_location()) = [34]
	return $3
	
.LABEL $label$56
	$12 = (CASTING int_64)(int_32 $4)
	$14 = (int_64))(((int_64)$14 ^ (int_64)$12) - $12)
	
.LABEL $label$10
	return $14
	
.LABEL $label$9
	CALL __shlim($0, (int_64)0)
	$10
	return (int_64)0
}

int_32 .FUNC __shgetc (int_32 $0)
{
	int_64 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [112])
	if ( (int_64)($1 == 0) ){ goto $label$7 }
	if ( ((int_64)*($0 + [120]) >= (int_64)$1) ){ goto $label$6 }
	
.LABEL $label$7
	$4 = CALL __uflow($0)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$6 }
	$1 = *(($0 + [112]))
	if ( ((int_64)$1 == (int_64)0) ){ goto $label$5 }
	$1 = (int_64)
	$2 = *($0 + [4])
	$3 = *(($0 + [8]))
	if ( ((int_64)(CASTING int_64)(int_32 ($3 - $2)) < (int_64)$1($1 - *($0 + [120])))) ){ goto $label$4 }
	*($0 + [104]) = ($2 + (CASTING uint_32)(uint_64 ((int_64)$1 + (int_64)4294967295)))
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	*($0 + [104]) = [0]
	return [-1]
	
.LABEL $label$5
	$3 = *(($0 + [8]))
	
.LABEL $label$4
	*($0 + [104]) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$3 = *(($0 + [4]))
	*($0 + [120]) = ((int_64)(CASTING int_64)(int_32 (($3 + [1]) - $3)) + (int_64)*($0 + [120]))
	goto $label$1 
	
.LABEL $label$2
	$3 = *(($0 + [4]))
	
.LABEL $label$1
	$0 = ($3 + [-1])
	if ( ((int_32)*($0) == (int_32)$4) ){ goto $label$8 }
	*($0) = $4
	
.LABEL $label$8
	return $4
}

int_32 .FUNC strtol (int_32 $0, int_32 $1, int_32 $2)
{
	int_64 $3
	int_32 $4
	$4 = (*([0] + [4]) - [144])
	*([0] + [4]) = $4
	*($4 + [4]) = $0
	*($4 + [44]) = $0
	*($4) = [0]
	*($4 + [76]) = [-1]
	*($4 + [8]) = ( [-1] ? ($0 + [2147483647]) : ((int_32)$0 < (int_32)[0]) )
	CALL __shlim($4, (int_64)0)
	$3 = CALL __intscan($4, $2, [1], (int_64)2147483648)
	if ( ($1 == 0) ){ goto $label$1 }
	*($1) = ($0 + (CASTING uint_32)(uint_64 ((int_64)(CASTING uint_64)(uint_32 (*($4 + [4]) - *(($4 + [8])))) + (int_64)*($4 + [120]))))
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [144])
	return (CASTING uint_32)(uint_64 $3)
}

void .FUNC __shlim (int_32 $0, int_64 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	*($0 + [112]) = $1
	$2 = *($0 + [4])
	$3 = *($0 + [8])
	$4 = (CASTING int_64)(int_32 ($3 - $2))
	*($0 + [120]) = $4
	*($0 + [104]) = ( ( ($2 + (CASTING uint_32)(uint_64 $1)) ? $3 : ((int_64)$4 > (int_64)$1) ) ? $3 : ((int_64)$1 != (int_64)0) )
}

void .FUNC __unlockfile (int_32 $0)
{
}

int_32 .FUNC $129 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$1 = *($0 + [8388])
	if ( (*([0] + [12150]) == 0) ){ goto $label$2 }
	$7 = *([0] + [12152])
	goto $label$1 
	
.LABEL $label$2
	$7 = (current_memory)
	*([0] + [12150]) = [1]
	$7 = ($7 << [16])
	*([0] + [12152]) = $7
	
.LABEL $label$1
	$3 = $7
	$8 = (current_memory)
	$2 = uint_32(($7 + [65535]) >> [16])
	if ( ((uint_32)$2 <= (uint_32)$8) ){ goto $label$6 }
	($2 - $8)
	$8 = [0]
	if ( ((int_32)$2 != (int_32)(current_memory)) ){ goto $label$5 }
	$3 = *([0] + [12152])
	
.LABEL $label$6
	$8 = [0]
	*([0] + [12152]) = $3
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$5 }
	$2 = ($0 + ((int_32)$1 * (int_32)[12]))
	$8 = ($7 & [65535])
	$6 = ($8 <= [64513])
	$7 = ((($7 + ( [65536] ? [131072] : $6 )) - ( $8 ? ($7 & [131071]) : $6 )) - $7)
	if ( *([0] + [12150]) ){ goto $label$7 }
	$3 = (current_memory)
	*([0] + [12150]) = [1]
	$3 = ($3 << [16])
	*([0] + [12152]) = $3
	
.LABEL $label$7
	$2 = ($2 + [8192])
	if ( ((int_32)$7 < (int_32)[0]) ){ goto $label$4 }
	$6 = $3
	$4 = (current_memory)
	$5 = (($7 + [7]) & [-8])
	$8 = uint_32((($5 + $3) + [65535]) >> [16])
	if ( ((uint_32)$8 <= (uint_32)$4) ){ goto $label$8 }
	($8 - $4)
	if ( ((int_32)$8 != (int_32)(current_memory)) ){ goto $label$4 }
	$6 = *([0] + [12152])
	
.LABEL $label$8
	*([0] + [12152]) = ($6 + $5)
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	$8 = *($2)
	$1 = ($0 + ((int_32)$1 * (int_32)[12]))
	$6 = *(($1 + [8196]))
	if ( ((int_32)($6 + $8) == (int_32)$3) ){ goto $label$3 }
	$5 = ($1 + [8200])
	$1 = *($5)
	if ( ((int_32)$8 == (int_32)$1) ){ goto $label$9 }
	*(($6 = ($6 + $1))) = ((*($6) & [-2147483648]) | (([-4] - $1) + $8))
	*($5) = *($2)
	*($6) = (*($6) & [2147483647])
	
.LABEL $label$9
	$2 = (*($2) + [1])
	*(($2 = ($0 + [8388]))) = $2
	*((($0 = ($0 + ((int_32)$2 * (int_32)[12]))) + [8196])) = $3
	*(($8 = ($0 + [8192]))) = $7
	
.LABEL $label$5
	return $8
	
.LABEL $label$4
	$3 = ($0 + ((int_32)$1 * (int_32)[12]))
	$1 = ($3 + [8200])
	$7 = *($1)
	$8 = *($2)
	if ( ((int_32)$8 == (int_32)$7) ){ goto $label$10 }
	*(($3 = (*(($3 + [8196])) + $7))) = ((*($3) & [-2147483648]) | (([-4] - $7) + $8))
	*($1) = *($2)
	*($3) = (*($3) & [2147483647])
	
.LABEL $label$10
	$7 = ($0 + [8388])
	$3 = (*($7) + [1])
	*($0 + [8384]) = $3
	*($7) = $3
	return [0]
	
.LABEL $label$3
	*($2) = ($8 + $7)
	return $2
}

int_32 .FUNC $128 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	if ( ($1 == 0) ){ goto $label$1 }
	$13 = *($0 + [8384])
	if ( $13 ){ goto $label$2 }
	$13 = [16]
	*(($0 + [8384])) = [16]
	
.LABEL $label$2
	$2 = (($1 + [4]) & [7])
	$2 = ( (($1 + [8]) - $2) ? $1 : $2 )
	$10 = *($0 + [8388])
	if ( ((uint_32)$10 >= (uint_32)$13) ){ goto $label$5 }
	$1 = (($0 + ((int_32)$10 * (int_32)[12])) + [8192])
	if ( $10 ){ goto $label$6 }
	$13 = ($0 + [8196])
	if ( *($13) ){ goto $label$6 }
	*($1) = [8192]
	*($13) = $0
	
.LABEL $label$6
	$10 = ($2 + [4])
	
.LOOP $label$7:
	$13 = *($1 + [8])
	if ( ((uint_32)($13 + $10) > (uint_32)*($1)) ){ goto $label$8 }
	*(($13 = (*($1 + [4]) + $13))) = ((*($13) & [-2147483648]) | $2)
	*(($1 = ($1 + [8]))) = (*($1) + $10)
	*($13) = (*($13) | [-2147483648])
	$1 = ($13 + [4])
	if ( $1 ){ goto $label$4 }
	
.LABEL $label$8
	$1 = CALL $129($0)
	if ( $1 ){ goto $label$7 }
	
.LABEL $label$5
	$4 = ([2147483644] - $2)
	$11 = ($0 + [8392])
	$12 = ($0 + [8384])
	$3 = *($0 + [8392])
	$13 = $3
	
.LOOP $label$9:
	$5 = ($1 + [8192])
	$1 = ($0 + ((int_32)$13 * (int_32)[12]))
	CALL eosio_assert(((int_32)*(($1 + [8200])) == (int_32)*($5)), [12064])
	$6 = *(($1 + [8196]))
	$13 = ($6 + [4])
	
.LOOP $label$10:
	$7 = ($6 + *($5))
	$8 = ($13 + [-4])
	$9 = *($8)
	$1 = ($9 & [2147483647])
	if ( ((int_32)$9 < (int_32)[0]) ){ goto $label$11 }
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$12 }
	
.LOOP $label$13:
	$10 = ($13 + $1)
	if ( ((uint_32)$10 >= (uint_32)$7) ){ goto $label$12 }
	$10 = *($10)
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$12 }
	$1 = (($1 + ($10 & [2147483647])) + [4])
	if ( ($1 <= $2) ){ goto $label$13 }
	
.LABEL $label$12
	*($8) = (( $1 ? $2 : ($1 <= $2) ) | ($9 & [-2147483648]))
	if ( ((uint_32)$1 <= (uint_32)$2) ){ goto $label$14 }
	*(($13 + $2)) = (($4 + $1) & [2147483647])
	
.LABEL $label$14
	if ( ((uint_32)$1 >= (uint_32)$2) ){ goto $label$3 }
	
.LABEL $label$11
	$13 = (($13 + $1) + [4])
	if ( ($13 <= $7) ){ goto $label$10 }
	$1 = [0]
	$13 = (*($11) + [1])
	$13 = ( [0] ? $13 : ((int_32)$13 == (int_32)*($12)) )
	*($11) = $13
	if ( ((int_32)$13 != (int_32)$3) ){ goto $label$9 }
	
.LABEL $label$4
	return $1
	
.LABEL $label$3
	*($8) = (*($8) | [-2147483648])
	return $13
	
.LABEL $label$1
	return [0]
}

void .FUNC $8 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$4 = *($0)
	$7 = *($0 + [4])
	$8 = ((int_32)($7 - $4) / (int_32)[12])
	$6 = ($8 + [1])
	if ( ((uint_32)$6 >= (uint_32)[357913942]) ){ goto $label$2 }
	$5 = [357913941]
	$3 = ((int_32)(*($0 + [8]) - $4) / (int_32)[12])
	if ( ((uint_32)$3 > (uint_32)[178956969]) ){ goto $label$4 }
	$5 = ($3 << [1])
	$5 = ( $6 ? $5 : ($5 <= $6) )
	if ( ($5 == 0) ){ goto $label$3 }
	
.LABEL $label$4
	$6 = CALL $138(((int_32)$5 * (int_32)[12]))
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$5 = [0]
	$6 = [0]
	goto $label$1 
	
.LABEL $label$2
	CALL $159($0)
	
.LABEL $label$1
	$2 = *($1)
	*($1) = (int_64)0
	*(($8 = ($6 + ((int_32)$8 * (int_32)[12])))) = $2
	$1 = ($1 + [8])
	$3 = *($1)
	*($1) = [0]
	*(($8 + [8])) = $3
	$5 = ($6 + ((int_32)$5 * (int_32)[12]))
	$6 = ($8 + [12])
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$6 }
	$1 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$7:
	*(($8 + [-12])) = *($7)
	$4 = ($7 + [8])
	*(($8 + [-4])) = *($4)
	*($7) = [0]
	*(($7 + [4])) = [0]
	*($4) = [0]
	$8 = ($8 + [-12])
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $1) != (int_32)[-12]) ){ goto $label$7 }
	$7 = *(($0 + [4]))
	$4 = *($0)
	goto $label$5 
	
.LABEL $label$6
	$4 = $7
	
.LABEL $label$5
	*($0) = $8
	*(($0 + [4])) = $6
	*(($0 + [8])) = $5
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$8 }
	$8 = ([0] - $4)
	$7 = ($7 + [-12])
	
.LOOP $label$9:
	if ( ((*($7) & [1]) == 0) ){ goto $label$10 }
	CALL $139(*(($7 + [8])))
	
.LABEL $label$10
	$7 = ($7 + [-12])
	if ( ((int_32)($7 + $8) != (int_32)[-12]) ){ goto $label$9 }
	
.LABEL $label$8
	if ( ($4 == 0) ){ goto $label$11 }
	CALL $139($4)
	
.LABEL $label$11
	(unreachable)
}

void .FUNC $9 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$2 = *([0] + [4])
	$10 = $2
	$7 = (int_64)1
	$8 = *($0 + [8])
	$5 = (int_64)($8 == 0)
	if ( $5 ){ goto $label$1 }
	$9 = ((int_64)$8 + (int_64)1)
	$7 = (int_64)1
	
.LOOP $label$2:
	$7 = ((int_64)$7 * (int_64)10)
	$9 = ((int_64)$9 + (int_64)-1)
	if ( ((int_64)$9 > (int_64)1) ){ goto $label$2 }
	
.LABEL $label$1
	$1 = ($0 + [8])
	$2 = ($2 - (((CASTING uint_32)(uint_64 ((int_64)$8 + (int_64)1)) + [15]) & [1008]))
	*([0] + [4]) = $2
	*(($6 = ($2 + ($3 = (CASTING uint_32)(uint_64 $8))))) = [0]
	$4 = *($0)
	if ( $5 ){ goto $label$3 }
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$4 % (int_64)$7)
	$0 = ($6 + [-1])
	
.LOOP $label$4:
	*($0) = ((int_64)((int_64)$9 % (int_64)10) + (int_64)48)
	$0 = ($0 + [-1])
	$9 = ((int_64)$9 / (int_64)10)
	$8 = ((int_64)$8 + (int_64)-1)
	if ( ((int_64)$8 > (int_64)1) ){ goto $label$4 }
	
.LABEL $label$3
	CALL printi(((int_64)$4 / (int_64)$7))
	CALL prints([1536])
	CALL prints_l($2, $3)
	CALL prints([1552])
	CALL $21($1, [0])
	*([0] + [4]) = $10
}

void .FUNC $123 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1008])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1056])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	*($1) = *(*($2))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [1120])
	$4 = ($11 + [-16])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [944])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), (int_64)0, $4, [8])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = $10
}

void .FUNC $122 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$1), [816])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $124($1, $5)
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$1), [816])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

int_32 .FUNC $121 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = *([0] + [4])
	$13 = $14
	$2 = ($0 + [24])
	$12 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$1 }
	$3 = ([0] - $12)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$11 = ($6 + [-24])
	$6 = $11
	if ( ((int_32)($11 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$4 }
	$12 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1328])
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$6 }
	$11 = CALL malloc($6)
	CALL db_get_i64($1, $11, $6)
	CALL free($11)
	goto $label$5 
	
.LABEL $label$6
	$11 = ($14 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $11
	CALL db_get_i64($1, $11, $6)
	
.LABEL $label$5
	*(($12 = CALL $138([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$6 > (uint_32)[7]), [1360])
	CALL memcpy($12, $11, [8])
	*($12 + [12]) = $1
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$7:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$8 }
	$11 = *($6)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$11 = ($11 + [165])
	goto $label$9 
	
.LABEL $label$10
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($11 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	$14 = *(($0 + [32]))
	$11 = ($0 + [28])
	$6 = *($11)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6) = $12
	*($6 + [16]) = $1
	*($11) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$11
	$3 = *($2)
	$11 = ((int_32)($6 - $3) / (int_32)[24])
	$4 = ($11 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$13 }
	$5 = [178956970]
	$2 = ((int_32)($14 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$15 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$2 = CALL $138(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$14
	$5 = [0]
	$2 = [0]
	goto $label$12 
	
.LABEL $label$13
	CALL $159($2)
	
.LABEL $label$12
	*(($11 = ($2 + ((int_32)$11 * (int_32)[24]))) + [8]) = $9
	*($11) = $12
	*($11 + [16]) = $1
	$2 = ($2 + ((int_32)$5 * (int_32)[24]))
	$14 = ($11 + [24])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$17 }
	
.LOOP $label$18:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($11 + [-24])) = $1
	*(($11 + [-8])) = *(($6 + [-8]))
	*(($11 + [-12])) = *(($6 + [-12]))
	*(($11 + [-16])) = *(($6 + [-16]))
	$11 = ($11 + [-24])
	$6 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$18 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$16 
	
.LABEL $label$17
	$5 = $6
	
.LABEL $label$16
	*(($0 + [28])) = $14
	*(($0 + [24])) = $11
	*(($0 + [32])) = $2
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = ($6 + [-24])
	$11 = *($6)
	*($6) = [0]
	if ( ($11 == 0) ){ goto $label$21 }
	CALL $139($11)
	
.LABEL $label$21
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $139($5)
	
.LABEL $label$3
	*([0] + [4]) = $13
	(unreachable)
	return $12
}

void .FUNC $120 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1008])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1056])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	*($1) = *(*($2))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [1120])
	$4 = ($11 + [-16])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [944])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), (int_64)0, $4, [8])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = $10
}

void .FUNC _ZN8eoscrash15onTransferOtherE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 _ZN8eoscrash15onTransferOtherE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE, int_32 $3, int_32 $4)
{
	int_32 $5
	CALL _ZN10msContract13commitAndExitEy($5, (int_64)1)
	(unreachable)
}

int_32 .FUNC $126 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$9 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$1 }
	$3 = ([0] - $9)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$8 = ($7 + [-24])
	$7 = $8
	if ( ((int_32)($8 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$9) ){ goto $label$4 }
	$9 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [1328])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$8 = CALL malloc($7)
	CALL db_get_i64($1, $8, $7)
	CALL free($8)
	goto $label$5 
	
.LABEL $label$6
	$8 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $8
	CALL db_get_i64($1, $8, $7)
	
.LABEL $label$5
	*(($9 = CALL $138([40])) + [24]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [1360])
	CALL memcpy($9, $8, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1360])
	CALL memcpy(($9 + [8]), ($8 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1360])
	CALL memcpy(($9 + [16]), ($8 + [16]), [8])
	*($9 + [28]) = $1
	$4 = *($9)
	$11 = *(($0 + [32]))
	$8 = ($0 + [28])
	$7 = *($8)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $9
	*($7 + [16]) = $1
	*($8) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$3 = *($2)
	$8 = ((int_32)($7 - $3) / (int_32)[24])
	$5 = ($8 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $138(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $159($2)
	
.LABEL $label$8
	*(($8 = ($2 + ((int_32)$8 * (int_32)[24]))) + [8]) = $4
	*($8) = $9
	*($8 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($8 + [24])
	if ( ((int_32)$7 == (int_32)$3) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($8 + [-24])) = $1
	*(($8 + [-8])) = *(($7 + [-8]))
	*(($8 + [-12])) = *(($7 + [-12]))
	*(($8 + [-16])) = *(($7 + [-16]))
	$8 = ($8 + [-24])
	$7 = $6
	if ( ((int_32)$3 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $8
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$8 = *($7)
	*($7) = [0]
	if ( ($8 == 0) ){ goto $label$17 }
	CALL $139($8)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $139($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $9
}

void .FUNC _Z16ClearAllBetTabley (int_64 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_32 $15
	$15 = (*([0] + [4]) - [16])
	*([0] + [4]) = $15
	$2 = (int_64)0
	$7 = (int_64)59
	$11 = [784]
	$14 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$2 > (uint_64)(int_64)7) ){ goto $label$6 }
	$13 = *($11)
	if ( ((uint_32)(($13 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$13 = ($13 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$2 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$13 = ( ($13 + [208]) ? [0] : ((($13 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $13) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$2
	$11 = ($11 + [1])
	$2 = ((int_64)$2 + (int_64)1)
	$14 = ((int_64)$8 | (int_64)$14)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$1 }
	*(($1 = CALL $138([40])) + [8]) = $14
	*($1) = $0
	*($1 + [16]) = (int_64)-1
	*($1 + [24 align=4]) = (int_64)0
	*($1 + [32]) = [0]
	$11 = CALL db_lowerbound_i64($0, $14, (int_64)4229596498108612608, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$7 }
	$9 = CALL $126($1, $11)
	$5 = ($1 + [28])
	
.LOOP $label$8:
	CALL eosio_assert([1], [3296])
	CALL eosio_assert([1], [3344])
	$10 = [0]
	$11 = CALL db_next_i64(*($9 + [28]), ($15 + [8]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$9 }
	$10 = CALL $126($1, $11)
	
.LABEL $label$9
	CALL eosio_assert(((int_32)*(($9 + [24])) == (int_32)$1), [3376])
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$13()), [3424])
	$4 = ($1 + [24])
	$3 = *($4)
	$12 = *($5)
	if ( ((int_32)$12 == (int_32)$3) ){ goto $label$10 }
	$2 = *($9)
	$11 = ($12 + [-24])
	$6 = ([0] - $3)
	
.LOOP $label$11:
	if ( ((int_64)*(*($11)) == (int_64)$2) ){ goto $label$10 }
	$12 = $11
	$13 = ($11 + [-24])
	$11 = $13
	if ( ((int_32)($13 + $6) != (int_32)[-24]) ){ goto $label$11 }
	
.LABEL $label$10
	CALL eosio_assert(((int_32)$12 != (int_32)$3), [3488])
	$13 = *($5)
	$11 = *($4)
	$11 = ($11 + ((int_32)((int_32)(($12 + [-24]) - $11) / (int_32)[24]) * (int_32)[24]))
	$12 = ($11 + [24])
	if ( ((int_32)$12 == (int_32)$13) ){ goto $label$14 }
	$3 = ($13 + [-24])
	
.LOOP $label$15:
	$13 = ($11 + [24])
	$6 = *($13)
	*($13) = [0]
	$12 = *($11)
	*($11) = $6
	if ( ($12 == 0) ){ goto $label$16 }
	CALL $139($12)
	
.LABEL $label$16
	*(($11 + [16])) = *(($11 + [40]))
	*(($11 + [8])) = *(($11 + [32]))
	$11 = $13
	if ( ((int_32)$3 != (int_32)$13) ){ goto $label$15 }
	$12 = *($5)
	if ( ((int_32)$12 != (int_32)$13) ){ goto $label$13 }
	goto $label$12 
	
.LABEL $label$14
	$13 = $11
	
.LABEL $label$13
	
.LOOP $label$17:
	$12 = ($12 + [-24])
	$11 = *($12)
	*($12) = [0]
	if ( ($11 == 0) ){ goto $label$18 }
	CALL $139($11)
	
.LABEL $label$18
	if ( ((int_32)$13 != (int_32)$12) ){ goto $label$17 }
	
.LABEL $label$12
	*($5) = $13
	CALL db_remove_i64(*(($9 + [28])))
	$9 = $10
	if ( $10 ){ goto $label$8 }
	$14 = *(($1 + [8]))
	$0 = *($1)
	
.LABEL $label$7
	$11 = CALL db_lowerbound_i64($0, $14, (int_64)4229596498108612608, (int_64)0)
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$19 }
	$11 = CALL $126($1, $11)
	CALL eosio_assert([1], [3344])
	$11 = CALL db_next_i64(*($11 + [28]), ($15 + [8]))
	if ( ((int_32)$11 < (int_32)[0]) ){ goto $label$19 }
	
.LOOP $label$20:
	$11 = CALL $126($1, $11)
	CALL eosio_assert([1], [3344])
	$11 = CALL db_next_i64(*($11 + [28]), ($15 + [8]))
	if ( ((int_32)$11 >= (int_32)[0]) ){ goto $label$20 }
	
.LABEL $label$19
	*([0] + [4]) = ($15 + [16])
}

int_32 .FUNC $124 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = *([0] + [4])
	$13 = $14
	$2 = ($0 + [24])
	$12 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$1 }
	$3 = ([0] - $12)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$11 = ($6 + [-24])
	$6 = $11
	if ( ((int_32)($11 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$4 }
	$12 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1328])
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$6 }
	$11 = CALL malloc($6)
	CALL db_get_i64($1, $11, $6)
	CALL free($11)
	goto $label$5 
	
.LABEL $label$6
	$11 = ($14 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $11
	CALL db_get_i64($1, $11, $6)
	
.LABEL $label$5
	*(($12 = CALL $138([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$6 > (uint_32)[7]), [1360])
	CALL memcpy($12, $11, [8])
	*($12 + [12]) = $1
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$7:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$8 }
	$11 = *($6)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$11 = ($11 + [165])
	goto $label$9 
	
.LABEL $label$10
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($11 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	$14 = *(($0 + [32]))
	$11 = ($0 + [28])
	$6 = *($11)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6) = $12
	*($6 + [16]) = $1
	*($11) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$11
	$3 = *($2)
	$11 = ((int_32)($6 - $3) / (int_32)[24])
	$4 = ($11 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$13 }
	$5 = [178956970]
	$2 = ((int_32)($14 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$15 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$2 = CALL $138(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$14
	$5 = [0]
	$2 = [0]
	goto $label$12 
	
.LABEL $label$13
	CALL $159($2)
	
.LABEL $label$12
	*(($11 = ($2 + ((int_32)$11 * (int_32)[24]))) + [8]) = $9
	*($11) = $12
	*($11 + [16]) = $1
	$2 = ($2 + ((int_32)$5 * (int_32)[24]))
	$14 = ($11 + [24])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$17 }
	
.LOOP $label$18:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($11 + [-24])) = $1
	*(($11 + [-8])) = *(($6 + [-8]))
	*(($11 + [-12])) = *(($6 + [-12]))
	*(($11 + [-16])) = *(($6 + [-16]))
	$11 = ($11 + [-24])
	$6 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$18 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$16 
	
.LABEL $label$17
	$5 = $6
	
.LABEL $label$16
	*(($0 + [28])) = $14
	*(($0 + [24])) = $11
	*(($0 + [32])) = $2
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = ($6 + [-24])
	$11 = *($6)
	*($6) = [0]
	if ( ($11 == 0) ){ goto $label$21 }
	CALL $139($11)
	
.LABEL $label$21
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $139($5)
	
.LABEL $label$3
	*([0] + [4]) = $13
	(unreachable)
	return $12
}

void .FUNC $14 (int_64 $0, int_64 $1, int_32 $2, int_32 $3, int_64 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_32 $12
	$12 = (*([0] + [4]) - [112])
	*([0] + [4]) = $12
	$5 = *($2 + [16])
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [1520]
	$10 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$9 > (uint_64)(int_64)7) ){ goto $label$6 }
	$6 = *($7)
	if ( ((uint_32)(($6 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$6 = ($6 + [165])
	goto $label$4 
	
.LABEL $label$6
	$11 = (int_64)0
	if ( ((uint_64)$9 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$6 = ( ($6 + [208]) ? [0] : ((($6 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$11 = (int_64)((int_64)(CASTING uint_64)(uint_32 $6) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$11 = ((int_64)((int_64)$11 & (int_64)31) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	*((($12 + [8]) + [28])) = *(($2 + [12]))
	*((($12 + [8]) + [24])) = *(($2 + [8]))
	*((($12 + [8]) + [20])) = *(($2 + [4]))
	*($12 + [16]) = $1
	*($12 + [8]) = $0
	*($12 + [24]) = *($2)
	CALL $166((($12 + [8]) + [32]), $3)
	*($12 + [64]) = $10
	*($12 + [56]) = $5
	*(($7 = CALL $138([16]))) = $0
	*($7 + [8]) = $4
	*((($12 + [56]) + [32])) = [0]
	$6 = ($7 + [16])
	*((($12 + [56]) + [24])) = $6
	*((($12 + [56]) + [20])) = $6
	*($12 + [72]) = $7
	*($12 + [84]) = [0]
	*((($12 + [56]) + [36])) = [0]
	$7 = *($12 + [40])
	$6 = ( *((($12 + [8]) + [36])) ? uint_32($7 >> [1]) : ($7 & [1]) )
	$7 = ($6 + [32])
	$9 = (CASTING uint_64)(uint_32 $6)
	$6 = (($12 + [56]) + [28])
	
.LOOP $label$7:
	$7 = ($7 + [1])
	$9 = (uint_64)$9 >> (uint_64)(int_64)7
	if ( ((int_64)$9) != (int_64)0) ){ goto $label$7 }
	if ( ($7 == 0) ){ goto $label$9 }
	CALL $15($6, $7)
	$6 = *(($12 + [88]))
	$7 = *(($12 + [84]))
	goto $label$8 
	
.LABEL $label$9
	$6 = [0]
	$7 = [0]
	
.LABEL $label$8
	*($12 + [100]) = $7
	*($12 + [96]) = $7
	*($12 + [104]) = $6
	CALL $16(($12 + [96]), ($12 + [8]))
	if ( ((*(($12 + [40])) & [1]) == 0) ){ goto $label$10 }
	CALL $139(*(($12 + [48])))
	
.LABEL $label$10
	CALL $17(($12 + [8]), ($12 + [56]))
	$7 = *($12 + [8])
	CALL send_inline($7, (*($12 + [12]) - $7))
	$7 = *($12 + [8])
	if ( ($7 == 0) ){ goto $label$11 }
	*($12 + [12]) = $7
	CALL $139($7)
	
.LABEL $label$11
	$7 = *($12 + [84])
	if ( ($7 == 0) ){ goto $label$12 }
	*(($12 + [88])) = $7
	CALL $139($7)
	
.LABEL $label$12
	$7 = *($12 + [72])
	if ( ($7 == 0) ){ goto $label$13 }
	*(($12 + [76])) = $7
	CALL $139($7)
	
.LABEL $label$13
	*([0] + [4]) = ($12 + [112])
}

void .FUNC $15 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = *($0 + [4])
	$2 = *($0 + [8])
	if ( ((uint_32)($2 - $6) >= (uint_32)$1) ){ goto $label$5 }
	$5 = *($0)
	$3 = ($6 - $5)
	$4 = ($3 + $1)
	if ( ((int_32)$4 <= (int_32)[-1]) ){ goto $label$3 }
	$6 = [2147483647]
	$2 = ($2 - $5)
	if ( ((uint_32)$2 > (uint_32)[1073741822]) ){ goto $label$6 }
	$6 = ($2 << [1])
	$6 = ( $4 ? $6 : ($6 <= $4) )
	if ( ($6 == 0) ){ goto $label$4 }
	
.LABEL $label$6
	$2 = CALL $138($6)
	goto $label$2 
	
.LABEL $label$5
	$0 = ($0 + [4])
	
.LOOP $label$7:
	*($6) = [0]
	$6 = (*($0) + [1])
	*($0) = $6
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$7 }
	goto $label$1 
	
.LABEL $label$4
	$6 = [0]
	$2 = [0]
	goto $label$2 
	
.LABEL $label$3
	CALL $159($0)
	
.LABEL $label$2
	$4 = ($2 + $6)
	$5 = ($2 + $3)
	$6 = $5
	
.LOOP $label$8:
	*($6) = [0]
	$6 = ($6 + [1])
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$8 }
	$1 = *($0)
	$3 = ($0 + [4])
	$2 = (*($3) - $1)
	$5 = ($5 - $2)
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$9 }
	CALL memcpy($5, $1, $2)
	$1 = *($0)
	
.LABEL $label$9
	*($0) = $5
	*($3) = $6
	*(($0 + [8])) = $4
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $139($1)
	return 
	
.LABEL $label$1
	(unreachable)
}

int_32 .FUNC $16 (int_32 $0, int_32 $1)
{
	int_32 $2
	CALL $20($0, ($1 + [32]))
	CALL eosio_assert(((int_32)(*($0 + [8]) - *($0 + [4])) > (int_32)[7]), [944])
	CALL memcpy(*($0 + [4]), $1, [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [944])
	CALL memcpy(*($0 + [4]), ($1 + [8]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [944])
	CALL memcpy(*($0 + [4]), ($1 + [16]), [8])
	$2 = (*($0 + [4]) + [8])
	*($0 + [4]) = $2
	CALL eosio_assert(((int_32)(*($0 + [8]) - $2) > (int_32)[7]), [944])
	CALL memcpy(*($0 + [4]), ($1 + [24]), [8])
	return *($0 + [4]) = (*($0 + [4]) + [8])
}

void .FUNC $17 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$5 = [16]
	$2 = ($1 + [16])
	$3 = *($1 + [16])
	$7 = *(($1 + [20]))
	$4 = ($7 - $3)
	$6 = (CASTING uint_64)(uint_32 int_32($4 >> [4]))
	
.LOOP $label$1:
	$5 = ($5 + [1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$1 }
	if ( ((int_32)$3 == (int_32)$7) ){ goto $label$2 }
	$5 = (($4 & [-16]) + $5)
	
.LABEL $label$2
	$3 = *(($1 + [32]))
	$7 = *($1 + [28])
	$5 = (($7 - $5) - $3)
	$4 = ($1 + [28])
	$6 = (CASTING uint_64)(uint_32 ($3 - $7))
	
.LOOP $label$3:
	$5 = ($5 + [-1])
	$6 = (uint_64)$6 >> (uint_64)(int_64)7
	if ( ((int_64)$6) != (int_64)0) ){ goto $label$3 }
	$7 = [0]
	if ( ($5 == 0) ){ goto $label$5 }
	CALL $15($0, ([0] - $5))
	$7 = *(($0 + [4]))
	$5 = *($0)
	goto $label$4 
	
.LABEL $label$5
	$5 = [0]
	
.LABEL $label$4
	*($8) = $5
	*($8 + [8]) = $7
	CALL eosio_assert(((int_32)($7 - $5) > (int_32)[7]), [944])
	CALL memcpy($5, $1, [8])
	$0 = ($5 + [8])
	CALL eosio_assert(((int_32)($7 - $0) > (int_32)[7]), [944])
	CALL memcpy($0, ($1 + [8]), [8])
	*($8 + [4]) = ($5 + [16])
	CALL $19(CALL $18($8, $2), $4)
	*([0] + [4]) = ($8 + [16])
}

void .FUNC _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE (int_32 $0, int_64 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	$13 = (*([0] + [4]) - [112])
	*([0] + [4]) = $13
	if ( (CALL is_account($1) == 0) ){ goto $label$1 }
	$10 = CALL current_time()
	CALL prints([1424])
	CALL prints([1440])
	CALL printui($10)
	CALL prints([1456])
	*($13 + [72]) = *($0)
	CALL $11(($13 + [88]), ($13 + [72]))
	$5 = *($13 + [96])
	$6 = *($13 + [88])
	*($13 + [104]) = $1
	CALL $11(($13 + [72]), ($13 + [104]))
	$7 = *($13 + [80])
	$8 = *($13 + [72])
	CALL prints(( $5 ? (($13 + [88]) | [1]) : ($6 & [1]) ))
	CALL prints([1472])
	CALL prints(( $7 ? (($13 + [72]) | [1]) : ($8 & [1]) ))
	CALL $9($2)
	CALL prints([624])
	CALL printn(*($2 + [16]))
	CALL prints([1488])
	if ( ((*($13 + [72]) & [1]) == 0) ){ goto $label$2 }
	CALL $139(*(($13 + [80])))
	
.LABEL $label$2
	if ( ((*($13 + [88]) & [1]) == 0) ){ goto $label$3 }
	CALL $139(*(($13 + [96])))
	
.LABEL $label$3
	CALL prints([80])
	if ( ((int_64)*($2) < (int_64)1) ){ goto $label$1 }
	$10 = CALL current_time()
	CALL prints([1424])
	CALL prints([1440])
	CALL printui($10)
	CALL prints([1456])
	*($13 + [72]) = *($0)
	CALL $11(($13 + [88]), ($13 + [72]))
	$5 = *($13 + [96])
	$6 = *($13 + [88])
	*($13 + [104]) = $1
	CALL $11(($13 + [72]), ($13 + [104]))
	$7 = *($13 + [80])
	$8 = *($13 + [72])
	CALL prints(( $5 ? (($13 + [88]) | [1]) : ($6 & [1]) ))
	CALL prints([1472])
	CALL prints(( $7 ? (($13 + [72]) | [1]) : ($8 & [1]) ))
	CALL $9($2)
	CALL prints([624])
	CALL printn(*(($2 + [16])))
	CALL prints([1488])
	if ( ((*($13 + [72]) & [1]) == 0) ){ goto $label$4 }
	CALL $139(*(($13 + [80])))
	
.LABEL $label$4
	if ( ((*($13 + [88]) & [1]) == 0) ){ goto $label$5 }
	CALL $139(*(($13 + [96])))
	
.LABEL $label$5
	CALL prints([80])
	*((($13 + [48]) + [20])) = *(($2 + [20]))
	*((($13 + [48]) + [16])) = *(($2 + [16]))
	*((($13 + [48]) + [12])) = *(($2 + [12]))
	*((($13 + [48]) + [8])) = *(($2 + [8]))
	*($13 + [52]) = *(($2 + [4]))
	*($13 + [48]) = *($2)
	$4 = *($0)
	CALL $166(($13 + [32]), $3)
	$10 = (int_64)0
	$9 = (int_64)59
	$2 = [1504]
	$11 = (int_64)0
	
.LOOP $label$6:
	if ( ((uint_64)$10 > (uint_64)(int_64)5) ){ goto $label$11 }
	$0 = *($2)
	if ( ((uint_32)(($0 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$0 = ($0 + [165])
	goto $label$9 
	
.LABEL $label$11
	$12 = (int_64)0
	if ( ((uint_64)$10 <= (uint_64)(int_64)11) ){ goto $label$8 }
	goto $label$7 
	
.LABEL $label$10
	$0 = ( ($0 + [208]) ? [0] : ((($0 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$12 = (int_64)((int_64)(CASTING uint_64)(uint_32 $0) << (int_64)56) >> (int_64)56)
	
.LABEL $label$8
	$12 = ((int_64)((int_64)$12 & (int_64)31) << (int_64)((int_64)$9 & (int_64)4294967295))
	
.LABEL $label$7
	$2 = ($2 + [1])
	$10 = ((int_64)$10 + (int_64)1)
	$11 = ((int_64)$12 | (int_64)$11)
	$9 = ((int_64)$9 + (int_64)-5)
	if ( ((int_64)$9 != (int_64)-6) ){ goto $label$6 }
	*((($13 + [8]) + [16])) = *((($13 + [48]) + [16]))
	*((($13 + [8]) + [8])) = *((($13 + [48]) + [8]))
	*($13 + [8]) = *($13 + [48])
	CALL $14($4, $1, ($13 + [8]), ($13 + [32]), $11)
	if ( ((*($13 + [32]) & [1]) == 0) ){ goto $label$1 }
	CALL $139(*($13 + [40]))
	
.LABEL $label$1
	*([0] + [4]) = ($13 + [112])
}

void .FUNC $11 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	$6 = CALL $138([16])
	*($0 + [8]) = $6
	*($0) = (int_64)55834574865
	CALL memset($6, [46], [13])
	*($6 + [13]) = [0]
	$2 = ($0 + [1])
	$8 = *($1)
	$7 = [17]
	$5 = ($0 + [8])
	$6 = [12]
	
.LOOP $label$1:
	$4 = ((int_32)$6 == (int_32)[12])
	$3 = *((*([0] + [1368]) + (CASTING uint_32)(uint_64 ((int_64)( (int_64)15 ? (int_64)31 : $4 ) & (int_64)$8))))
	$1 = $2
	if ( (($7 & [1]) == 0) ){ goto $label$2 }
	$1 = *($5)
	
.LABEL $label$2
	*(($1 + $6)) = $3
	if ( ($6 == 0) ){ goto $label$3 }
	$6 = ($6 + [-1])
	$8 = (uint_64)$8 >> (uint_64)( (int_64)4 ? (int_64)5 : $4 ))
	$7 = *($0)
	goto $label$1 
	
.LABEL $label$3
	$1 = ($6 & [1])
	$6 = *($0)
	$6 = ( *(($0 + [4])) ? uint_32($6 >> [1]) : $1 )
	$7 = ( *(($0 + [8])) ? $2 : $1 )
	
.LOOP $label$5:
	if ( ($6 == 0) ){ goto $label$4 }
	$1 = ($7 + $6)
	$3 = ($6 + [-1])
	$6 = $3
	if ( ((int_32)*(($1 + [-1])) == (int_32)[46]) ){ goto $label$5 }
	if ( ((int_32)$3 == (int_32)[-1]) ){ goto $label$4 }
	CALL $167($9, $0, [0], ($3 + [1]), $0)
	if ( (*($0) & [1]) ){ goto $label$7 }
	*($0) = [0]
	goto $label$6 
	
.LABEL $label$7
	*(*(($0 + [8]))) = [0]
	*(($0 + [4])) = [0]
	
.LABEL $label$6
	CALL $141($0, [0])
	*(($0 + [8])) = *(($9 + [8]))
	*($0) = *($9)
	
.LABEL $label$4
	*([0] + [4]) = ($9 + [16])
}

int_32 .FUNC $12 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [1328])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$9 = CALL malloc($7)
	CALL db_get_i64($1, $9, $7)
	CALL free($9)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	CALL db_get_i64($1, $9, $7)
	
.LABEL $label$5
	*(($3 = CALL $138([48])) + [32]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [1360])
	CALL memcpy($3, $9, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1360])
	CALL memcpy(($3 + [8]), ($9 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1360])
	CALL memcpy(($3 + [16]), ($9 + [16]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[24]), [1360])
	CALL memcpy(($3 + [24]), ($9 + [24]), [8])
	*($3 + [36]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $138(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $159($2)
	
.LABEL $label$8
	*(($9 = ($2 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $9
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$17 }
	CALL $139($9)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $139($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $3
}

void .FUNC $13 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$4 = *(($3 + [24]))
	$3 = *($1 + [16])
	$7 = *(($3 + [28]))
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$1 }
	$1 = ($7 + [-24])
	$5 = ([0] - $4)
	
.LOOP $label$2:
	if ( ((int_64)*(*($1)) == (int_64)$2) ){ goto $label$1 }
	$7 = $1
	$6 = ($1 + [-24])
	$1 = $6
	if ( ((int_32)($6 + $5) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$7 == (int_32)$4) ){ goto $label$5 }
	$1 = *(($7 + [-24]))
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$3), [816])
	if ( $1 ){ goto $label$3 }
	goto $label$4 
	
.LABEL $label$5
	$1 = CALL db_find_i64(*($3), *($3 + [8]), (int_64)4229596498108612608, $2)
	if ( ((int_32)$1 < (int_32)[0]) ){ goto $label$4 }
	$1 = CALL $12($3, $1)
	CALL eosio_assert(((int_32)*($1 + [32]) == (int_32)$3), [816])
	goto $label$3 
	
.LABEL $label$4
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	$1 = [0]
	CALL eosio_assert([0], [368])
	
.LABEL $label$3
	*($0) = *($1)
	*(($0 + [24])) = *(($1 + [24]))
	*(($0 + [16])) = *(($1 + [16]))
	*(($0 + [8])) = *(($1 + [8]))
}

int_32 .FUNC strnlen (int_32 $0, int_32 $1)
{
	int_32 $2
	$2 = CALL memchr($0, [0], $1)
	return ( ($2 - $0) ? $1 : $2 )
}

int_32 .FUNC $18 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	$4 = (CASTING uint_64)(uint_32 int_32((*($1 + [4]) - *($1)) >> [4]))
	$5 = *($0 + [4])
	$2 = ($0 + [8])
	
.LOOP $label$1:
	$3 = (CASTING uint_32)(uint_64 $4)
	$4 = (uint_64)$4 >> (uint_64)(int_64)7
	$6 = ((int_64)$4) != (int_64)0
	*($7 + [15]) = (($6) << [7]) | ($3 & [127]))
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[0]), [944])
	$3 = ($0 + [4])
	CALL memcpy(*($3), ($7 + [15]), [1])
	$5 = (*($3) + [1])
	*($3) = $5
	if ( $6 ){ goto $label$1 }
	$1 = *(($1 + [4]))
	$6 = *($1)
	if ( ((int_32)$6 == (int_32)$1) ){ goto $label$2 }
	$3 = ($0 + [4])
	
.LOOP $label$3:
	$2 = ($0 + [8])
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [944])
	CALL memcpy(*($3), $6, [8])
	$5 = (*($3) + [8])
	*($3) = $5
	CALL eosio_assert(((int_32)(*($2) - $5) > (int_32)[7]), [944])
	CALL memcpy(*($3), ($6 + [8]), [8])
	$5 = (*($3) + [8])
	*($3) = $5
	$6 = ($6 + [16])
	if ( ((int_32)$6 != (int_32)$1) ){ goto $label$3 }
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [16])
	return $0
}

int_32 .FUNC $19 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$7 = (CASTING uint_64)(uint_32 (*($1 + [4]) - *($1)))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [944])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = *($1)
	$5 = (*(($1 + [4])) - $2)
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [944])
	$6 = ($0 + [4])
	CALL memcpy(*($6), $2, $5)
	*($6) = (*($6) + $5)
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC strerror (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	CALL __lctrans($3, *([0] + [20]))
	$2 = [0]
	
.LOOP $label$5:
	if ( ((int_32)*(($2 + [13136])) == (int_32)$0) ){ goto $label$4 }
	$1 = [87]
	$2 = ($2 + [1])
	if ( ((int_32)$2 != (int_32)[87]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$1 = $2
	if ( ($2 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	$2 = [13232]
	
.LOOP $label$6:
	$0 = *($2)
	$3 = ($2 + [1])
	$2 = $3
	if ( $0 ){ goto $label$6 }
	$2 = $3
	$1 = ($1 + [-1])
	if ( $1 ){ goto $label$6 }
	goto $label$1 
	
.LABEL $label$2
	$3 = [13232]
	return .LABEL $label$1
}

int_32 .FUNC __signbitl (int_64 $0, int_64 $1)
{
	return (CASTING uint_32)(uint_64 (uint_64)$1 >> (uint_64)(int_64)63))
}

int_32 .FUNC __stpncpy (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ((((int_32)$1 ^ (int_32)$0) & [3]) == 0) ){ goto $label$4 }
	$4 = $2
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	$3 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$9 }
	if ( (($1 & [3]) == 0) ){ goto $label$8 }
	
.LOOP $label$10:
	$4 = *($1)
	*($0) = $4
	if ( ($4 == 0) ){ goto $label$6 }
	$3 = ((int_32)$2 != (int_32)[1])
	$0 = ($0 + [1])
	$4 = ($2 + [-1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$7 }
	$2 = $4
	if ( ($1 & [3]) ){ goto $label$10 }
	goto $label$7 
	
.LABEL $label$9
	$4 = $2
	if ( $3 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$8
	$4 = $2
	
.LABEL $label$7
	if ( $3 ){ goto $label$5 }
	goto $label$1 
	
.LABEL $label$6
	$4 = $2
	
.LABEL $label$5
	if ( (*($1) == 0) ){ goto $label$2 }
	if ( ($4 <= [4]) ){ goto $label$3 }
	
.LOOP $label$11:
	$2 = *($1)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$3 }
	*($0) = $2
	$0 = ($0 + [4])
	$1 = ($1 + [4])
	$4 = ($4 + [-4])
	if ( ((uint_32)$4 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$3
	$5 = [0]
	if ( ($4 == 0) ){ goto $label$1 }
	
.LOOP $label$12:
	$2 = *($1)
	*($0) = $2
	if ( ($2 == 0) ){ goto $label$2 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	$4 = ($4 + [-1])
	if ( $4 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$2
	$5 = $4
	
.LABEL $label$1
	CALL memset($0, [0], $5)
	return $0
}

int_32 .FUNC wctomb (int_32 $0, int_32 $1)
{
	if ( ($0 == 0) ){ goto $label$1 }
	return CALL wcrtomb($0, $1, [0])
	
.LABEL $label$1
	return [0]
}

int_32 .FUNC __lockfile (int_32 $0)
{
	int_32 $1
	return $1
}

int_32 .FUNC $116 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	$2 = ($0 + [24])
	$8 = *($2)
	$6 = *(($0 + [28]))
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$1 }
	$3 = ([0] - $8)
	$7 = ($6 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($7 + [16])) == (int_32)$1) ){ goto $label$1 }
	$6 = $7
	$9 = ($7 + [-24])
	$7 = $9
	if ( ((int_32)($9 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$6 == (int_32)$8) ){ goto $label$4 }
	$3 = *(($6 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$7 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($7 >> [31]) ^ (int_32)[1]), [1328])
	if ( ((uint_32)$7 <= (uint_32)[512]) ){ goto $label$6 }
	$9 = CALL malloc($7)
	CALL db_get_i64($1, $9, $7)
	CALL free($9)
	goto $label$5 
	
.LABEL $label$6
	$9 = ($11 - (($7 + [15]) & [-16]))
	*([0] + [4]) = $9
	CALL db_get_i64($1, $9, $7)
	
.LABEL $label$5
	*(($3 = CALL $138([48])) + [32]) = $0
	CALL eosio_assert(((uint_32)$7 > (uint_32)[7]), [1360])
	CALL memcpy($3, $9, [8])
	$7 = ($7 & [-8])
	CALL eosio_assert(((int_32)$7 != (int_32)[8]), [1360])
	CALL memcpy(($3 + [8]), ($9 + [8]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[16]), [1360])
	CALL memcpy(($3 + [16]), ($9 + [16]), [8])
	CALL eosio_assert(((int_32)$7 != (int_32)[24]), [1360])
	CALL memcpy(($3 + [24]), ($9 + [24]), [8])
	*($3 + [36]) = $1
	$4 = *($3)
	$11 = *(($0 + [32]))
	$9 = ($0 + [28])
	$7 = *($9)
	if ( ((uint_32)$7 >= (uint_32)$11) ){ goto $label$7 }
	*($7 + [8]) = $4
	*($7) = $3
	*($7 + [16]) = $1
	*($9) = ($7 + [24])
	goto $label$3 
	
.LABEL $label$7
	$8 = *($2)
	$9 = ((int_32)($7 - $8) / (int_32)[24])
	$5 = ($9 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$9 }
	$6 = [178956970]
	$2 = ((int_32)($11 - $8) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$11 }
	$6 = ($2 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$10 }
	
.LABEL $label$11
	$2 = CALL $138(((int_32)$6 * (int_32)[24]))
	$7 = *(($0 + [28]))
	$8 = *(($0 + [24]))
	goto $label$8 
	
.LABEL $label$10
	$6 = [0]
	$2 = [0]
	goto $label$8 
	
.LABEL $label$9
	CALL $159($2)
	
.LABEL $label$8
	*(($9 = ($2 + ((int_32)$9 * (int_32)[24]))) + [8]) = $4
	*($9) = $3
	*($9 + [16]) = $1
	$2 = ($2 + ((int_32)$6 * (int_32)[24]))
	$11 = ($9 + [24])
	if ( ((int_32)$7 == (int_32)$8) ){ goto $label$13 }
	
.LOOP $label$14:
	$6 = ($7 + [-24])
	$1 = *($6)
	*($6) = [0]
	*(($9 + [-24])) = $1
	*(($9 + [-8])) = *(($7 + [-8]))
	*(($9 + [-12])) = *(($7 + [-12]))
	*(($9 + [-16])) = *(($7 + [-16]))
	$9 = ($9 + [-24])
	$7 = $6
	if ( ((int_32)$8 != (int_32)$6) ){ goto $label$14 }
	$7 = *(($0 + [28]))
	$6 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$13
	$6 = $7
	
.LABEL $label$12
	*(($0 + [28])) = $11
	*(($0 + [24])) = $9
	*(($0 + [32])) = $2
	if ( ((int_32)$7 == (int_32)$6) ){ goto $label$15 }
	
.LOOP $label$16:
	$7 = ($7 + [-24])
	$9 = *($7)
	*($7) = [0]
	if ( ($9 == 0) ){ goto $label$17 }
	CALL $139($9)
	
.LABEL $label$17
	if ( ((int_32)$6 != (int_32)$7) ){ goto $label$16 }
	
.LABEL $label$15
	if ( ($6 == 0) ){ goto $label$3 }
	CALL $139($6)
	
.LABEL $label$3
	*([0] + [4]) = $10
	(unreachable)
	return $3
}

void .FUNC $117 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_64 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [16])
	*([0] + [4]) = $13
	$9 = [0]
	$10 = ((int_32)$3 != (int_32)[0])
	CALL eosio_assert($10, [3296])
	CALL eosio_assert($10, [3344])
	$10 = CALL db_next_i64(*($3 + [36]), ($13 + [8]))
	if ( ((int_32)$10 < (int_32)[0]) ){ goto $label$1 }
	$9 = CALL $116($2, $10)
	
.LABEL $label$1
	CALL eosio_assert(((int_32)*($3 + [32]) == (int_32)$1), [3376])
	CALL eosio_assert(((int_64)*($1) == (int_64)CALL $fimport$13()), [3424])
	$6 = ($1 + [24])
	$5 = *($6)
	$7 = ($1 + [28])
	$11 = *($7)
	if ( ((int_32)$11 == (int_32)$5) ){ goto $label$2 }
	$4 = *($3)
	$10 = ($11 + [-24])
	$8 = ([0] - $5)
	
.LOOP $label$3:
	if ( ((int_64)*(*($10)) == (int_64)$4) ){ goto $label$2 }
	$11 = $10
	$12 = ($10 + [-24])
	$10 = $12
	if ( ((int_32)($12 + $8) != (int_32)[-24]) ){ goto $label$3 }
	
.LABEL $label$2
	CALL eosio_assert(((int_32)$11 != (int_32)$5), [3488])
	$12 = *($7)
	$10 = *($6)
	$10 = ($10 + ((int_32)((int_32)(($11 + [-24]) - $10) / (int_32)[24]) * (int_32)[24]))
	$11 = ($10 + [24])
	if ( ((int_32)$11 == (int_32)$12) ){ goto $label$6 }
	$5 = ($12 + [-24])
	
.LOOP $label$7:
	$12 = ($10 + [24])
	$8 = *($12)
	*($12) = [0]
	$11 = *($10)
	*($10) = $8
	if ( ($11 == 0) ){ goto $label$8 }
	CALL $139($11)
	
.LABEL $label$8
	*(($10 + [16])) = *(($10 + [40]))
	*(($10 + [8])) = *(($10 + [32]))
	$10 = $12
	if ( ((int_32)$5 != (int_32)$12) ){ goto $label$7 }
	$11 = *(($1 + [28]))
	if ( ((int_32)$11 != (int_32)$12) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$6
	$12 = $10
	
.LABEL $label$5
	
.LOOP $label$9:
	$11 = ($11 + [-24])
	$10 = *($11)
	*($11) = [0]
	if ( ($10 == 0) ){ goto $label$10 }
	CALL $139($10)
	
.LABEL $label$10
	if ( ((int_32)$12 != (int_32)$11) ){ goto $label$9 }
	
.LABEL $label$4
	*(($1 + [28])) = $12
	CALL db_remove_i64(*(($3 + [36])))
	*($0 + [4]) = $9
	*($0) = $2
	*([0] + [4]) = ($13 + [16])
}

void .FUNC $114 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	int_32 $11
	$11 = *([0] + [4])
	$10 = $11
	CALL eosio_assert(((int_32)*($1 + [8]) == (int_32)$0), [1008])
	CALL eosio_assert(((int_64)*($0) == (int_64)CALL $fimport$13()), [1056])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$7 = (int_64)0
	
.LOOP $label$1:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$2 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$3 = ($3 + [165])
	goto $label$3 
	
.LABEL $label$4
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	*($1) = *(*($2))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [352]
	$9 = (int_64)0
	
.LOOP $label$5:
	$8 = (int_64)0
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$6 }
	$3 = *($4)
	if ( ((uint_32)(($3 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$3 = ($3 + [165])
	goto $label$7 
	
.LABEL $label$8
	$3 = ( ($3 + [208]) ? [0] : ((($3 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$8 = ((int_64)(CASTING uint_64)(uint_32 ($3 & [31])) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$6
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$9 = ((int_64)$8 | (int_64)$9)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$5 }
	CALL eosio_assert(((int_64)$7 == (int_64)$9), [1120])
	$4 = ($11 + [-16])
	*([0] + [4]) = $4
	CALL eosio_assert([1], [944])
	CALL memcpy($4, $1, [8])
	CALL db_update_i64(*($1 + [12]), (int_64)0, $4, [8])
	if ( (uint_64)($7 <= *($0 + [16])) ){ goto $label$9 }
	*(($0 + [16])) = ( (int_64)-2 ? ((int_64)$7 + (int_64)1) : ((uint_64)$7 > (uint_64)(int_64)-3) )
	
.LABEL $label$9
	*([0] + [4]) = $10
}

void .FUNC $115 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = (*([0] + [4]) - [16])
	$3 = $2
	*([0] + [4]) = $2
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($2 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	*($3 + [4]) = $2
	*($3) = $2
	*($3 + [8]) = ($2 + $1)
	CALL $108($3, $0)
	if ( ($1 <= [513]) ){ goto $label$3 }
	CALL free($2)
	
.LABEL $label$3
	*([0] + [4]) = ($3 + [16])
}

void .FUNC _ZN8eoscrash5checkEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_64 $11
	int_32 $12
	int_32 $13
	int_64 $14
	int_64 $15
	float_32 $16
	int_32 $17
	int_32 $18
	int_32 $19
	int_32 $20
	int_32 $21
	int_32 $22
	int_32 $23
	int_32 $24
	int_32 $25
	int_32 $26
	int_32 $27
	int_64 $28
	int_64 $29
	int_64 $30
	int_32 $31
	$31 = (*([0] + [4]) - [704])
	*([0] + [4]) = $31
	CALL require_auth(*($0 + [16]))
	$1 = ($0 + [16])
	$29 = (int_64)0
	$15 = (int_64)59
	$27 = [352]
	$30 = (int_64)0
	
.LOOP $label$1:
	$28 = (int_64)0
	if ( ((uint_64)$29 > (uint_64)(int_64)11) ){ goto $label$2 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$26 = ($26 + [165])
	goto $label$3 
	
.LABEL $label$4
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($26 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$2
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$28 | (int_64)$30)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$1 }
	$29 = (int_64)0
	$15 = (int_64)59
	$27 = [352]
	$14 = (int_64)0
	
.LOOP $label$5:
	$28 = (int_64)0
	if ( ((uint_64)$29 > (uint_64)(int_64)11) ){ goto $label$6 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$26 = ($26 + [165])
	goto $label$7 
	
.LABEL $label$8
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($26 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$6
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$14 = ((int_64)$28 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$5 }
	*(($13 = CALL $138([40])) + [8]) = $14
	*($13) = $30
	*($13 + [16]) = (int_64)-1
	*($13 + [24 align=4]) = (int_64)0
	*($13 + [32]) = [0]
	$29 = *($1)
	CALL $113(($31 + [176]), $13, $29)
	if ( (*($31 + [180]) == 0) ){ goto $label$10 }
	CALL $113(($31 + [176]), $13, $29)
	$27 = *($31 + [180])
	if ( $27 ){ goto $label$11 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$11
	if ( ((int_64)*($27) == (int_64)1) ){ goto $label$9 }
	
.LABEL $label$10
	CALL prints([176])
	CALL prints([3040])
	CALL prints([256])
	CALL eosio_assert([0], [3040])
	
.LABEL $label$9
	$17 = ($13 + [24])
	$29 = (int_64)0
	*($31 + [664]) = (int_64)0
	$15 = (int_64)59
	$27 = [352]
	$14 = (int_64)0
	
.LOOP $label$12:
	$28 = (int_64)0
	if ( ((uint_64)$29 > (uint_64)(int_64)11) ){ goto $label$13 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$26 = ($26 + [165])
	goto $label$14 
	
.LABEL $label$15
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($26 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$13
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$14 = ((int_64)$28 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$12 }
	CALL $113(($31 + [576]), $13, $14)
	$27 = *($31 + [580])
	if ( ($27 == 0) ){ goto $label$17 }
	*($31 + [176]) = ($31 + [664])
	CALL eosio_assert([1], [960])
	CALL $114($13, $27, ($31 + [176]))
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert(((int_64)*($13) == (int_64)CALL $fimport$13()), [880])
	*(($18 = CALL $138([24])) + [8]) = $13
	$29 = (int_64)0
	*($18) = (int_64)0
	CALL eosio_assert([1], [944])
	CALL memcpy(($31 + [176]), $18, [8])
	$15 = (int_64)59
	$27 = [352]
	$14 = (int_64)0
	
.LOOP $label$18:
	$28 = (int_64)0
	if ( ((uint_64)$29 > (uint_64)(int_64)11) ){ goto $label$19 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$26 = ($26 + [165])
	goto $label$20 
	
.LABEL $label$21
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($26 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$19
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$14 = ((int_64)$28 | (int_64)$14)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$18 }
	$12 = CALL db_store_i64(*(($13 + [8])), (int_64)7035938067002163200, $30, $14, ($31 + [176]), [8])
	*($18 + [12]) = $12
	$27 = ($13 + [16])
	if ( (uint_64)($14 <= *($27)) ){ goto $label$22 }
	*($27) = ( (int_64)-2 ? ((int_64)$14 + (int_64)1) : ((uint_64)$14 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$29 = (int_64)0
	$15 = (int_64)59
	$27 = [352]
	$30 = (int_64)0
	
.LOOP $label$23:
	$28 = (int_64)0
	if ( ((uint_64)$29 > (uint_64)(int_64)11) ){ goto $label$24 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$26 = ($26 + [165])
	goto $label$25 
	
.LABEL $label$26
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($26 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$24
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$28 | (int_64)$30)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$23 }
	$10 = *(($13 + [32]))
	$26 = ($13 + [28])
	$27 = *($26)
	if ( ((uint_32)$27 >= (uint_32)$10) ){ goto $label$27 }
	*($27 + [8]) = $30
	*($27) = $18
	*($27 + [16]) = $12
	*($26) = ($27 + [24])
	goto $label$16 
	
.LABEL $label$27
	$2 = *($17)
	$26 = ((int_32)($27 - $2) / (int_32)[24])
	$3 = ($26 + [1])
	if ( ((uint_32)$3 >= (uint_32)[178956971]) ){ goto $label$29 }
	$17 = [178956970]
	$10 = ((int_32)($10 - $2) / (int_32)[24])
	if ( ((uint_32)$10 > (uint_32)[89478484]) ){ goto $label$31 }
	$17 = ($10 << [1])
	$17 = ( $3 ? $17 : ($17 <= $3) )
	if ( ($17 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$10 = CALL $138(((int_32)$17 * (int_32)[24]))
	$27 = *(($13 + [28]))
	$2 = *(($13 + [24]))
	goto $label$28 
	
.LABEL $label$30
	$17 = [0]
	$10 = [0]
	goto $label$28 
	
.LABEL $label$29
	CALL $159($17)
	
.LABEL $label$28
	*(($26 = ($10 + ((int_32)$26 * (int_32)[24]))) + [8]) = $30
	*($26) = $18
	*($26 + [16]) = $12
	$12 = ($10 + ((int_32)$17 * (int_32)[24]))
	$10 = ($26 + [24])
	if ( ((int_32)$27 == (int_32)$2) ){ goto $label$33 }
	
.LOOP $label$34:
	$18 = ($27 + [-24])
	$17 = *($18)
	*($18) = [0]
	*(($26 + [-24])) = $17
	*(($26 + [-8])) = *(($27 + [-8]))
	*(($26 + [-12])) = *(($27 + [-12]))
	*(($26 + [-16])) = *(($27 + [-16]))
	$26 = ($26 + [-24])
	$27 = $18
	if ( ((int_32)$2 != (int_32)$18) ){ goto $label$34 }
	$27 = *(($13 + [28]))
	$18 = *(($13 + [24]))
	goto $label$32 
	
.LABEL $label$33
	$18 = $27
	
.LABEL $label$32
	*(($13 + [28])) = $10
	*(($13 + [24])) = $26
	*(($13 + [32])) = $12
	if ( ((int_32)$27 == (int_32)$18) ){ goto $label$35 }
	
.LOOP $label$36:
	$27 = ($27 + [-24])
	$26 = *($27)
	*($27) = [0]
	if ( ($26 == 0) ){ goto $label$37 }
	CALL $139($26)
	
.LABEL $label$37
	if ( ((int_32)$18 != (int_32)$27) ){ goto $label$36 }
	
.LABEL $label$35
	if ( ($18 == 0) ){ goto $label$16 }
	CALL $139($18)
	
.LABEL $label$16
	CALL $115(($31 + [688]))
	*($31 + [176]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$27 = CALL asctime(CALL $222(($31 + [176])))
	CALL prints([32])
	CALL prints($27)
	CALL prints(( *($31 + [696]) ? (($31 + [688]) | [1]) : (*($31 + [688]) & [1]) ))
	CALL prints([80])
	$11 = *($1)
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [160]
	$30 = (int_64)0
	
.LOOP $label$38:
	if ( ((uint_64)$29 > (uint_64)(int_64)10) ){ goto $label$43 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$42 }
	$26 = ($26 + [165])
	goto $label$41 
	
.LABEL $label$43
	$15 = (int_64)0
	if ( ((int_64)$29 == (int_64)11) ){ goto $label$40 }
	goto $label$39 
	
.LABEL $label$42
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$41
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $26) << (int_64)56) >> (int_64)56)
	
.LABEL $label$40
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$39
	$27 = ($27 + [1])
	$28 = ((int_64)$28 + (int_64)-5)
	$30 = ((int_64)$15 | (int_64)$30)
	$29 = ((int_64)$29 + (int_64)1)
	if ( ((int_64)$29 != (int_64)13) ){ goto $label$38 }
	*($31 + [672]) = (int_64)1398362884
	*($31 + [664]) = (int_64)0
	CALL eosio_assert([1], [1264])
	$29 = (int_64)5462355
	$27 = [0]
	
.LOOP $label$46:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $29) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$45 }
	$29 = (uint_64)$29 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$29) & (int_64)255) != (int_64)0) ){ goto $label$47 }
	
.LOOP $label$48:
	$29 = (uint_64)$29 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$29) & (int_64)255) != (int_64)0) ){ goto $label$45 }
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$48 }
	
.LABEL $label$47
	$26 = [1]
	$27 = ($27 + [1])
	if ( ((int_32)$27 < (int_32)[7]) ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	$26 = [0]
	
.LABEL $label$44
	CALL eosio_assert($26, [576])
	*((($31 + [664]) + [8])) = (int_64)1397703940
	*($31 + [664]) = (int_64)0
	*($31 + [680]) = $30
	*($31 + [648]) = (int_64)0
	*($31 + [656]) = [0]
	$26 = CALL $150(($31 + [688]), [59], [0])
	if ( ((int_32)$26 == (int_32)[-1]) ){ goto $label$50 }
	$18 = (($31 + [648]) + [8])
	$27 = [0]
	
.LOOP $label$51:
	CALL $167(($31 + [176]), ($31 + [688]), $27, ($26 - $27), ($31 + [688]))
	$27 = *($31 + [652])
	if ( ((uint_32)$27 >= (uint_32)*($18)) ){ goto $label$53 }
	*($27) = *($31 + [176])
	$27 = (($31 + [176]) + [8])
	*(($27 + [8])) = *($27)
	*($27) = [0]
	*($31 + [176]) = [0]
	*($31 + [180]) = [0]
	*($31 + [652]) = (*($31 + [652]) + [12])
	goto $label$52 
	
.LABEL $label$53
	CALL $8(($31 + [648]), ($31 + [176]))
	if ( ((*($31 + [176]) & [1]) == 0) ){ goto $label$52 }
	CALL $139(*((($31 + [176]) + [8])))
	
.LABEL $label$52
	$27 = ($26 + [1])
	$26 = CALL $150(($31 + [688]), [59], $27)
	if ( ((int_32)$26 != (int_32)[-1]) ){ goto $label$51 }
	$26 = ($31 + [688])
	goto $label$49 
	
.LABEL $label$50
	$27 = [0]
	$26 = ($31 + [688])
	
.LABEL $label$49
	CALL $167(($31 + [176]), ($31 + [688]), $27, [-1], $26)
	$27 = *($31 + [652])
	if ( ((uint_32)$27 >= (uint_32)*((($31 + [648]) + [8]))) ){ goto $label$55 }
	*($27) = *($31 + [176])
	$27 = (($31 + [176]) + [8])
	*(($27 + [8])) = *($27)
	*($27) = [0]
	*($31 + [176]) = [0]
	*($31 + [180]) = [0]
	*($31 + [652]) = (*($31 + [652]) + [12])
	goto $label$54 
	
.LABEL $label$55
	CALL $8(($31 + [648]), ($31 + [176]))
	if ( ((*($31 + [176]) & [1]) == 0) ){ goto $label$54 }
	CALL $139(*($31 + [184]))
	
.LABEL $label$54
	CALL prints([432])
	$27 = *($31 + [648])
	if ( ((int_32)*($31 + [652]) == (int_32)$27) ){ goto $label$56 }
	$29 = (int_64)0
	$18 = [0]
	$26 = [4]
	
.LOOP $label$57:
	CALL prints([480])
	CALL printi($29)
	CALL prints([496])
	$13 = *(($27 + [-4]))
	$17 = ($13 & [1])
	$27 = ($27 + $26)
	CALL prints_l(( *(($27 + [4])) ? ($27 + [-3]) : $17 ), ( *($27) ? uint_32($13 >> [1]) : $17 ))
	CALL prints([512])
	$26 = ($26 + [12])
	$29 = ((int_64)$29 + (int_64)1)
	$27 = *($31 + [648])
	$18 = ($18 + [1])
	if ( ($18 <= ((int_32)(*($31 + [652]) - $27) / (int_32)[12])) ){ goto $label$57 }
	
.LABEL $label$56
	CALL prints([80])
	$14 = *($0 + [16])
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [784]
	$30 = (int_64)0
	
.LOOP $label$58:
	if ( ((uint_64)$29 > (uint_64)(int_64)7) ){ goto $label$63 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$62 }
	$26 = ($26 + [165])
	goto $label$61 
	
.LABEL $label$63
	$15 = (int_64)0
	if ( ((uint_64)$29 <= (uint_64)(int_64)11) ){ goto $label$60 }
	goto $label$59 
	
.LABEL $label$62
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$61
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $26) << (int_64)56) >> (int_64)56)
	
.LABEL $label$60
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$59
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$15 | (int_64)$30)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$58 }
	*(($2 = CALL $138([40])) + [8]) = $30
	*($2) = $14
	*($2 + [16]) = (int_64)-1
	*($2 + [24 align=4]) = (int_64)0
	*($2 + [32]) = [0]
	$3 = *($31 + [652])
	$0 = *($31 + [648])
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$69 }
	$8 = (($31 + [424]) | [1])
	$7 = (($31 + [464]) | [1])
	$6 = (($31 + [536]) | [1])
	$5 = (($31 + [176]) | [1])
	$4 = (($31 + [600]) | [1])
	$9 = [100]
	$25 = (($31 + [632]) + [8])
	$10 = [0]
	
.LOOP $label$70:
	CALL $166(($31 + [632]), $0)
	$27 = *($31 + [632])
	$26 = CALL strlen([128])
	if ( ((int_32)$26 != (int_32)( *($31 + [636]) ? uint_32($27 >> [1]) : ($27 & [1]) )) ){ goto $label$72 }
	if ( (CALL $151(($31 + [632]), [0], [-1], [128], $26) == 0) ){ goto $label$71 }
	
.LABEL $label$72
	$27 = [0]
	*(($18 = (($31 + [616]) + [8]))) = [0]
	*($31 + [616]) = (int_64)0
	$26 = CALL $150(($31 + [632]), [44], [0])
	if ( ((int_32)$26 == (int_32)[-1]) ){ goto $label$73 }
	$27 = [0]
	
.LOOP $label$74:
	CALL $167(($31 + [176]), ($31 + [632]), $27, ($26 - $27), ($31 + [632]))
	$27 = *($31 + [620])
	if ( ((uint_32)$27 >= (uint_32)*($18)) ){ goto $label$76 }
	*($27) = *($31 + [176])
	$27 = (($31 + [176]) + [8])
	*(($27 + [8])) = *($27)
	*($27) = [0]
	*($31 + [176]) = [0]
	*($31 + [180]) = [0]
	*($31 + [620]) = (*($31 + [620]) + [12])
	goto $label$75 
	
.LABEL $label$76
	CALL $8(($31 + [616]), ($31 + [176]))
	if ( ((*($31 + [176]) & [1]) == 0) ){ goto $label$75 }
	CALL $139(*((($31 + [176]) + [8])))
	
.LABEL $label$75
	$27 = ($26 + [1])
	$26 = CALL $150(($31 + [632]), [44], $27)
	if ( ((int_32)$26 != (int_32)[-1]) ){ goto $label$74 }
	
.LABEL $label$73
	CALL $167(($31 + [176]), ($31 + [632]), $27, [-1], ($31 + [632]))
	$27 = *($31 + [620])
	if ( ((uint_32)$27 >= (uint_32)*($18)) ){ goto $label$78 }
	*($27) = *($31 + [176])
	$27 = (($31 + [176]) + [8])
	*(($27 + [8])) = *($27)
	*($27) = [0]
	*($31 + [176]) = [0]
	*($31 + [180]) = [0]
	*($31 + [620]) = (*($31 + [620]) + [12])
	goto $label$77 
	
.LABEL $label$78
	CALL $8(($31 + [616]), ($31 + [176]))
	if ( ((*($31 + [176]) & [1]) == 0) ){ goto $label$77 }
	CALL $139(*((($31 + [176]) + [8])))
	
.LABEL $label$77
	CALL prints([432])
	$27 = *($31 + [616])
	if ( ((int_32)*($31 + [620]) == (int_32)$27) ){ goto $label$79 }
	$29 = (int_64)0
	$26 = [4]
	$18 = [0]
	
.LOOP $label$80:
	CALL prints([480])
	CALL printi($29)
	CALL prints([496])
	$13 = *(($27 + [-4]))
	$17 = ($13 & [1])
	$27 = ($27 + $26)
	CALL prints_l(( *(($27 + [4])) ? ($27 + [-3]) : $17 ), ( *($27) ? uint_32($13 >> [1]) : $17 ))
	CALL prints([512])
	$26 = ($26 + [12])
	$29 = ((int_64)$29 + (int_64)1)
	$27 = *($31 + [616])
	$18 = ($18 + [1])
	if ( ($18 <= ((int_32)(*($31 + [620]) - $27) / (int_32)[12])) ){ goto $label$80 }
	
.LABEL $label$79
	CALL prints([80])
	$27 = *($31 + [616])
	if ( ((int_32)(*($31 + [620]) - $27) == (int_32)[24]) ){ goto $label$81 }
	CALL prints([176])
	CALL prints([3072])
	CALL prints([256])
	CALL eosio_assert(((int_32)(*($31 + [620]) - *($31 + [616])) == (int_32)[24]), [3072])
	$27 = *($31 + [616])
	
.LABEL $label$81
	CALL $166(($31 + [600]), $27)
	$17 = (*($31 + [600]) & [1])
	$12 = *((($31 + [600]) + [8]))
	$27 = ( $12 ? $4 : $17 )
	$26 = [-1]
	
.LOOP $label$82:
	$18 = ($27 + $26)
	$13 = ($26 + [1])
	$26 = $13
	if ( *(($18 + [1])) ){ goto $label$82 }
	$14 = (CASTING uint_64)(uint_32 $13)
	$29 = (int_64)0
	$28 = (int_64)59
	$15 = (int_64)0
	
.LOOP $label$83:
	$30 = (int_64)0
	if ( ((uint_64)$29 >= (uint_64)$14) ){ goto $label$84 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$86 }
	$26 = ($26 + [165])
	goto $label$85 
	
.LABEL $label$86
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$85
	$30 = (int_64)((int_64)(CASTING uint_64)(uint_32 $26) << (int_64)56) >> (int_64)56)
	
.LABEL $label$84
	if ( ((uint_64)$29 > (uint_64)(int_64)11) ){ goto $label$88 }
	$30 = ((int_64)((int_64)$30 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	goto $label$87 
	
.LABEL $label$88
	$30 = ((int_64)$30 & (int_64)15)
	
.LABEL $label$87
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$15 = ((int_64)$30 | (int_64)$15)
	$28 = ((int_64)$28 + (int_64)-5)
	if ( ((int_64)$28 != (int_64)-6) ){ goto $label$83 }
	if ( ($17 == 0) ){ goto $label$89 }
	CALL $139($12)
	
.LABEL $label$89
	$27 = *($31 + [616])
	if ( (*($27 + [12]) & [1]) ){ goto $label$91 }
	$27 = (($27 + [12]) + [1])
	goto $label$90 
	
.LABEL $label$91
	$27 = *(($27 + [20]))
	
.LABEL $label$90
	$13 = CALL atoi($27)
	if ( ((uint_32)$13 > (uint_32)[99]) ){ goto $label$94 }
	$27 = CALL db_lowerbound_i64(*($2), *(($2 + [8])), (int_64)4229596498108612608, (int_64)0)
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$93 }
	$27 = CALL $116($2, $27)
	$29 = *($27)
	
.LOOP $label$95:
	if ( ((int_64)$15 != (int_64)$29) ){ goto $label$95 }
	$29 = *($27 + [8])
	CALL $117(($31 + [176]), $2, $2, $27)
	$10 = (CASTING uint_32)(uint_64 ((int_64)$29 + (int_64)(CASTING uint_64)(uint_32 $10)))
	$18 = *($31 + [616])
	if ( $18 ){ goto $label$92 }
	goto $label$71 
	
.LABEL $label$94
	*($31 + [512]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$27 = CALL asctime(CALL $222(($31 + [512])))
	CALL prints([32])
	CALL prints($27)
	*($31 + [576]) = $15
	CALL $11(($31 + [176]), ($31 + [576]))
	$27 = (($31 + [176]) + [8])
	CALL prints(( *($27) ? $5 : (*($31 + [176]) & [1]) ))
	$29 = (CASTING int_64)(int_32 $13)
	CALL printui($29)
	if ( ((*($31 + [176]) & [1]) == 0) ){ goto $label$96 }
	CALL $139(*($27))
	
.LABEL $label$96
	CALL prints([80])
	$27 = CALL db_lowerbound_i64(*($2), *(($2 + [8])), (int_64)4229596498108612608, (int_64)0)
	if ( ((int_32)$27 < (int_32)[0]) ){ goto $label$93 }
	$16 = ((float_32)(CASTING float_32)(uint_64 $29) / (float_32)(float_32)100)
	$18 = CALL $116($2, $27)
	$29 = *($18)
	
.LOOP $label$97:
	if ( ((int_64)$15 != (int_64)$29) ){ goto $label$97 }
	*($31 + [176]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$27 = CALL asctime(CALL $222(($31 + [176])))
	CALL prints([32])
	CALL prints($27)
	CALL prints([3088])
	CALL printi(*($18 + [8]))
	CALL prints([80])
	$14 = (Rounds 0)(((float_32)$16 * (float_32)(CASTING float_32)(uint_64 (Rounds 0)((CASTING float_32)(int_64 *($18 + [8]))))))
	*($31 + [664]) = $14
	$19 = ((uint_32)$13 > (uint_32)$9)
	$11 = ( $15 ? $11 : $19 )
	$29 = (int_64)0
	$28 = (int_64)59
	$27 = [160]
	$30 = (int_64)0
	
.LOOP $label$98:
	if ( ((uint_64)$29 > (uint_64)(int_64)10) ){ goto $label$103 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$102 }
	$26 = ($26 + [165])
	goto $label$101 
	
.LABEL $label$103
	$15 = (int_64)0
	if ( ((int_64)$29 == (int_64)11) ){ goto $label$100 }
	goto $label$99 
	
.LABEL $label$102
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$101
	$15 = (int_64)((int_64)(CASTING uint_64)(uint_32 $26) << (int_64)56) >> (int_64)56)
	
.LABEL $label$100
	$15 = ((int_64)((int_64)$15 & (int_64)31) << (int_64)((int_64)$28 & (int_64)4294967295))
	
.LABEL $label$99
	$27 = ($27 + [1])
	$28 = ((int_64)$28 + (int_64)-5)
	$30 = ((int_64)$15 | (int_64)$30)
	$29 = ((int_64)$29 + (int_64)1)
	if ( ((int_64)$29 != (int_64)13) ){ goto $label$98 }
	CALL _ZN9msAccount10GetBalanceES_N5eosio11symbol_typeE(($31 + [176]), $1, $30, (int_64)1397703940)
	$29 = *($31 + [176])
	*($31 + [576]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$27 = CALL asctime(CALL $222(($31 + [576])))
	CALL prints([32])
	CALL prints($27)
	CALL prints([3264])
	CALL printi($29)
	CALL prints([1568])
	$29 = (Rounds 0)(((float_32)(CASTING float_32)(int_64 $29) * (float_32)(float_32)2e6))
	CALL printui($29)
	CALL prints([80])
	$29 = ( $29 ? $14 : ((uint_64)$14 > (uint_64)$29) )
	*($31 + [664]) = $29
	$12 = (($31 + [664]) + [16])
	*(($17 = (($31 + [576]) + [16]))) = *($12)
	$21 = (($31 + [664]) + [8])
	*(($20 = (($31 + [576]) + [8]))) = *($21)
	*($31 + [576]) = *($31 + [664])
	*($31 + [576]) = (Rounds 0)(((float_64)(CASTING float_64)(int_64 $29) * (float_64)(float_64)0.03))
	*($31 + [512]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$27 = CALL asctime(CALL $222(($31 + [512])))
	CALL prints([32])
	CALL prints($27)
	CALL prints([3280])
	CALL $9(($31 + [576]))
	CALL prints([624])
	CALL printn(*($17))
	CALL prints([80])
	$29 = (int_64)0
	$15 = (int_64)59
	$27 = [672]
	$30 = (int_64)0
	
.LOOP $label$104:
	$28 = (int_64)0
	if ( ((uint_64)$29 > (uint_64)(int_64)11) ){ goto $label$105 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$107 }
	$26 = ($26 + [165])
	goto $label$106 
	
.LABEL $label$107
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$106
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($26 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$105
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$28 | (int_64)$30)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$104 }
	*(($22 = (($31 + [552]) + [8]))) = *($20)
	*(($20 = (($31 + [552]) + [16]))) = *($17)
	*(($17 = (($31 + [536]) + [8]))) = [0]
	*($31 + [552]) = *($31 + [576])
	*($31 + [536]) = (int_64)0
	$27 = CALL strlen([3104])
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$68 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$110 }
	*($31 + [536]) = ($27 << [1])
	$26 = $6
	if ( $27 ){ goto $label$109 }
	goto $label$108 
	
.LABEL $label$110
	$23 = (($27 + [16]) & [-16])
	$26 = CALL $138($23)
	*($17) = $26
	*($31 + [536]) = ($23 | [1])
	*($31 + [540]) = $27
	
.LABEL $label$109
	CALL memcpy($26, [3104], $27)
	
.LABEL $label$108
	*(($26 + $27)) = [0]
	*((($31 + [112]) + [16])) = *($20)
	*((($31 + [112]) + [8])) = *($22)
	*($31 + [112]) = *($31 + [552])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $30, ($31 + [112]), ($31 + [536]))
	if ( ((*($31 + [536]) & [1]) == 0) ){ goto $label$111 }
	CALL $139(*($17))
	
.LABEL $label$111
	*($31 + [664]) = (int_64))(*($31 + [664]) - *($31 + [576]))
	*(($27 = (($31 + [512]) + [16]))) = *($12)
	*(($26 = (($31 + [512]) + [8]))) = *($21)
	*($31 + [512]) = *($31 + [664])
	$23 = ($18 + [8])
	*($31 + [512]) = (Rounds 0)(((float_64)(PROMOTE float_64)(float_32 (CASTING float_32)(int_64 *($23))) * (float_64)(float_64)0.005))
	*($31 + [504]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$17 = CALL asctime(CALL $222(($31 + [504])))
	CALL prints([32])
	CALL prints($17)
	CALL prints([3120])
	CALL $9(($31 + [512]))
	CALL prints([624])
	CALL printn(*($27))
	CALL prints([80])
	*((($31 + [480]) + [20])) = *((($31 + [512]) + [20]))
	*(($17 = (($31 + [480]) + [16]))) = *($27)
	*((($31 + [480]) + [12])) = *((($31 + [512]) + [12]))
	*(($20 = (($31 + [480]) + [8]))) = *($26)
	*($31 + [484]) = *($31 + [516])
	*($31 + [480]) = *($31 + [512])
	$29 = *($18 + [24])
	*(($22 = (($31 + [464]) + [8]))) = [0]
	*($31 + [464]) = (int_64)0
	$27 = CALL strlen([3136])
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$67 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$114 }
	*($31 + [464]) = ($27 << [1])
	$26 = $7
	if ( $27 ){ goto $label$113 }
	goto $label$112 
	
.LABEL $label$114
	$24 = (($27 + [16]) & [-16])
	$26 = CALL $138($24)
	*($22) = $26
	*($31 + [464]) = ($24 | [1])
	*($31 + [468]) = $27
	
.LABEL $label$113
	CALL memcpy($26, [3136], $27)
	
.LABEL $label$112
	*(($26 + $27)) = [0]
	*((($31 + [88]) + [16])) = *($17)
	*((($31 + [88]) + [8])) = *($20)
	*($31 + [88]) = *($31 + [480])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $29, ($31 + [88]), ($31 + [464]))
	if ( ((*($31 + [464]) & [1]) == 0) ){ goto $label$115 }
	CALL $139(*($22))
	
.LABEL $label$115
	$29 = (int_64)
	*($31 + [664]) = $29(*($31 + [664]) - *($31 + [512])))
	*($31 + [504]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$27 = CALL asctime(CALL $222(($31 + [504])))
	CALL prints([32])
	CALL prints($27)
	CALL prints([3168])
	CALL printi($29)
	CALL prints([80])
	$29 = *($18)
	*(($17 = (($31 + [440]) + [8]))) = *($21)
	*(($21 = (($31 + [440]) + [16]))) = *($12)
	*(($12 = (($31 + [424]) + [8]))) = [0]
	*($31 + [440]) = *($31 + [664])
	*($31 + [424]) = (int_64)0
	$27 = CALL strlen([3184])
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$66 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$118 }
	*($31 + [424]) = ($27 << [1])
	$26 = $8
	if ( $27 ){ goto $label$117 }
	goto $label$116 
	
.LABEL $label$118
	$20 = (($27 + [16]) & [-16])
	$26 = CALL $138($20)
	*($12) = $26
	*($31 + [424]) = ($20 | [1])
	*($31 + [428]) = $27
	
.LABEL $label$117
	CALL memcpy($26, [3184], $27)
	
.LABEL $label$116
	*(($26 + $27)) = [0]
	*((($31 + [64]) + [16])) = *($21)
	*((($31 + [64]) + [8])) = *($17)
	*($31 + [64]) = *($31 + [440])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $29, ($31 + [64]), ($31 + [424]))
	if ( ((*($31 + [424]) & [1]) == 0) ){ goto $label$119 }
	CALL $139(*($12))
	
.LABEL $label$119
	$9 = ( $13 ? $9 : $19 )
	$29 = *($23)
	CALL $117(($31 + [504]), $2, $2, $18)
	$10 = (CASTING uint_32)(uint_64 ((int_64)$29 + (int_64)(CASTING uint_64)(uint_32 $10)))
	
.LABEL $label$93
	$18 = *($31 + [616])
	if ( ($18 == 0) ){ goto $label$71 }
	
.LABEL $label$92
	$27 = *($31 + [620])
	if ( ((int_32)$27 == (int_32)$18) ){ goto $label$121 }
	$26 = ([0] - $18)
	$27 = ($27 + [-12])
	
.LOOP $label$122:
	if ( ((*($27) & [1]) == 0) ){ goto $label$123 }
	CALL $139(*(($27 + [8])))
	
.LABEL $label$123
	$27 = ($27 + [-12])
	if ( ((int_32)($27 + $26) != (int_32)[-12]) ){ goto $label$122 }
	$27 = *($31 + [616])
	goto $label$120 
	
.LABEL $label$121
	$27 = $18
	
.LABEL $label$120
	*($31 + [620]) = $18
	CALL $139($27)
	
.LABEL $label$71
	if ( ((*($31 + [632]) & [1]) == 0) ){ goto $label$124 }
	CALL $139(*($25))
	
.LABEL $label$124
	$0 = ($0 + [12])
	if ( ((int_32)$0 != (int_32)$3) ){ goto $label$70 }
	$27 = ((int_32)$10 / (int_32)[100])
	if ( ((int_32)$10 <= (int_32)[99]) ){ goto $label$125 }
	if ( ((int_64)$11 == (int_64)*($1)) ){ goto $label$125 }
	*((($31 + [400]) + [8])) = *((($31 + [664]) + [8]))
	*((($31 + [400]) + [16])) = *((($31 + [664]) + [16]))
	*((($31 + [384]) + [8])) = [0]
	$29 = (CASTING int_64)(int_32 $27)
	*($31 + [664]) = $29
	*($31 + [400]) = $29
	*($31 + [384]) = (int_64)0
	$27 = CALL strlen([3200])
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$65 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$128 }
	*($31 + [384]) = ($27 << [1])
	$26 = (($31 + [384]) | [1])
	if ( $27 ){ goto $label$127 }
	goto $label$126 
	
.LABEL $label$128
	$18 = (($27 + [16]) & [-16])
	$26 = CALL $138($18)
	*($31 + [384]) = ($18 | [1])
	*($31 + [392]) = $26
	*($31 + [388]) = $27
	
.LABEL $label$127
	CALL memcpy($26, [3200], $27)
	
.LABEL $label$126
	*(($26 + $27)) = [0]
	*((($31 + [40]) + [16])) = *((($31 + [400]) + [16]))
	*((($31 + [40]) + [8])) = *((($31 + [400]) + [8]))
	*($31 + [40]) = *($31 + [400])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $11, ($31 + [40]), ($31 + [384]))
	if ( ((*($31 + [384]) & [1]) == 0) ){ goto $label$129 }
	CALL $139(*($31 + [392]))
	
.LABEL $label$129
	CALL memset(($31 + [176]), [0], [200])
	*($31 + [512]) = $11
	CALL $11(($31 + [576]), ($31 + [512]))
	$27 = *($31 + [576])
	$26 = *($31 + [584])
	CALL _ZN7msAsset8ToStringEv(($31 + [512]), ($31 + [664]))
	$18 = *($31 + [512])
	*($31 + [32]) = ( $26 ? (($31 + [576]) | [1]) : ($27 & [1]) )
	*($31 + [36]) = ( *($31 + [520]) ? (($31 + [512]) | [1]) : ($18 & [1]) )
	CALL sprintf(($31 + [176]), [3232], ($31 + [32]))
	if ( ((*($31 + [512]) & [1]) == 0) ){ goto $label$130 }
	CALL $139(*(($31 + [520])))
	
.LABEL $label$130
	if ( ((*($31 + [576]) & [1]) == 0) ){ goto $label$131 }
	CALL $139(*(($31 + [584])))
	
.LABEL $label$131
	*($31 + [664]) = (int_64)1
	$29 = (int_64)0
	$15 = (int_64)59
	$27 = [3248]
	$30 = (int_64)0
	
.LOOP $label$132:
	$28 = (int_64)0
	if ( ((uint_64)$29 > (uint_64)(int_64)11) ){ goto $label$133 }
	$26 = *($27)
	if ( ((uint_32)(($26 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$135 }
	$26 = ($26 + [165])
	goto $label$134 
	
.LABEL $label$135
	$26 = ( ($26 + [208]) ? [0] : ((($26 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$134
	$28 = ((int_64)(CASTING uint_64)(uint_32 ($26 & [31])) << (int_64)((int_64)$15 & (int_64)4294967295))
	
.LABEL $label$133
	$27 = ($27 + [1])
	$29 = ((int_64)$29 + (int_64)1)
	$30 = ((int_64)$28 | (int_64)$30)
	$15 = ((int_64)$15 + (int_64)-5)
	if ( ((int_64)$15 != (int_64)-6) ){ goto $label$132 }
	*((($31 + [152]) + [8])) = *((($31 + [664]) + [8]))
	*((($31 + [152]) + [16])) = *((($31 + [664]) + [16]))
	*((($31 + [136]) + [8])) = [0]
	*($31 + [152]) = *($31 + [664])
	*($31 + [136]) = (int_64)0
	$27 = CALL strlen(($31 + [176]))
	if ( ((uint_32)$27 >= (uint_32)[-16]) ){ goto $label$64 }
	if ( ((uint_32)$27 >= (uint_32)[11]) ){ goto $label$138 }
	*($31 + [136]) = ($27 << [1])
	$26 = (($31 + [136]) | [1])
	if ( $27 ){ goto $label$137 }
	goto $label$136 
	
.LABEL $label$138
	$18 = (($27 + [16]) & [-16])
	$26 = CALL $138($18)
	*($31 + [136]) = ($18 | [1])
	*($31 + [144]) = $26
	*($31 + [140]) = $27
	
.LABEL $label$137
	CALL memcpy($26, ($31 + [176]), $27)
	
.LABEL $label$136
	*(($26 + $27)) = [0]
	*((($31 + [8]) + [16])) = *((($31 + [152]) + [16]))
	*((($31 + [8]) + [8])) = *((($31 + [152]) + [8]))
	*($31 + [8]) = *($31 + [152])
	CALL _ZN9msAccount8TransferES_7msAssetNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE($1, $30, ($31 + [8]), ($31 + [136]))
	if ( ((*($31 + [136]) & [1]) == 0) ){ goto $label$125 }
	CALL $139(*($31 + [144]))
	
.LABEL $label$125
	$0 = *($31 + [648])
	
.LABEL $label$69
	if ( ($0 == 0) ){ goto $label$139 }
	$27 = *($31 + [652])
	if ( ((int_32)$27 == (int_32)$0) ){ goto $label$141 }
	$26 = ([0] - $0)
	$27 = ($27 + [-12])
	
.LOOP $label$142:
	if ( ((*($27) & [1]) == 0) ){ goto $label$143 }
	CALL $139(*(($27 + [8])))
	
.LABEL $label$143
	$27 = ($27 + [-12])
	if ( ((int_32)($27 + $26) != (int_32)[-12]) ){ goto $label$142 }
	$27 = *($31 + [648])
	goto $label$140 
	
.LABEL $label$141
	$27 = $0
	
.LABEL $label$140
	*($31 + [652]) = $0
	CALL $139($27)
	
.LABEL $label$139
	if ( ((*($31 + [688]) & [1]) == 0) ){ goto $label$144 }
	CALL $139(*(($31 + [696])))
	
.LABEL $label$144
	*([0] + [4]) = ($31 + [704])
	return (unreachable)
	
.LABEL $label$68
	CALL $140(($31 + [536]))
	
.LABEL $label$67
	CALL $140(($31 + [464]))
	
.LABEL $label$66
	CALL $140(($31 + [424]))
	
.LABEL $label$65
	CALL $140(($31 + [384]))
	
.LABEL $label$64
	CALL $140(($31 + [136]))
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
	(unreachable)
}

void .FUNC $113 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$1), [816])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $118($1, $5)
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$1), [816])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC _ZN8eoscrash4openEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [32])
	*([0] + [4]) = $14
	CALL require_auth(*($0 + [16]))
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$1 = ($1 + [165])
	goto $label$3 
	
.LABEL $label$4
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$12 = (int_64)0
	
.LOOP $label$5:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$6 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$1 = ($1 + [165])
	goto $label$7 
	
.LABEL $label$8
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$6
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$5 }
	*(($2 = CALL $138([40])) + [8]) = $12
	*($2) = $10
	*($2 + [16]) = (int_64)-1
	$9 = (int_64)0
	*($2 + [24 align=4]) = (int_64)0
	*($2 + [32]) = [0]
	$8 = *(($0 + [16]))
	CALL $122(($14 + [16]), $2, $8)
	if ( (*($14 + [20]) == 0) ){ goto $label$9 }
	CALL $122(($14 + [16]), $2, $8)
	$7 = *($14 + [20])
	if ( $7 ){ goto $label$10 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$10
	if ( (int_64)(*($7) == 0) ){ goto $label$9 }
	CALL prints([176])
	CALL prints([3600])
	CALL prints([256])
	CALL eosio_assert([0], [3600])
	
.LABEL $label$9
	$6 = ($2 + [24])
	*($14 + [8]) = (int_64)2
	$8 = (int_64)59
	$7 = [352]
	$12 = (int_64)0
	
.LOOP $label$11:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$12 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$14 }
	$1 = ($1 + [165])
	goto $label$13 
	
.LABEL $label$14
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$13
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$12
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$11 }
	CALL $122($14, $2, $12)
	$7 = *($14 + [4])
	if ( ($7 == 0) ){ goto $label$16 }
	*($14 + [16]) = ($14 + [8])
	CALL eosio_assert([1], [960])
	CALL $123($2, $7, ($14 + [16]))
	goto $label$15 
	
.LABEL $label$16
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$13()), [880])
	*(($0 = CALL $138([24])) + [8]) = $2
	*($0) = (int_64)2
	CALL eosio_assert([1], [944])
	CALL memcpy(($14 + [16]), $0, [8])
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$12 = (int_64)0
	
.LOOP $label$17:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$18 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$20 }
	$1 = ($1 + [165])
	goto $label$19 
	
.LABEL $label$20
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$19
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$18
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$17 }
	$3 = CALL db_store_i64(*(($2 + [8])), (int_64)7035938067002163200, $10, $12, ($14 + [16]), [8])
	*($0 + [12]) = $3
	$7 = ($2 + [16])
	if ( (uint_64)($12 <= *($7)) ){ goto $label$21 }
	*($7) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$21
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$10 = (int_64)0
	
.LOOP $label$22:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$23 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$25 }
	$1 = ($1 + [165])
	goto $label$24 
	
.LABEL $label$25
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$24
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$23
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$22 }
	$4 = *(($2 + [32]))
	$1 = ($2 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)$4) ){ goto $label$26 }
	*($7 + [8]) = $10
	*($7) = $0
	*($7 + [16]) = $3
	*($1) = ($7 + [24])
	goto $label$15 
	
.LABEL $label$26
	$13 = *($6)
	$1 = ((int_32)($7 - $13) / (int_32)[24])
	$5 = ($1 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$28 }
	$6 = [178956970]
	$4 = ((int_32)($4 - $13) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$30 }
	$6 = ($4 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$29 }
	
.LABEL $label$30
	$4 = CALL $138(((int_32)$6 * (int_32)[24]))
	$7 = *(($2 + [28]))
	$13 = *(($2 + [24]))
	goto $label$27 
	
.LABEL $label$29
	$6 = [0]
	$4 = [0]
	goto $label$27 
	
.LABEL $label$28
	CALL $159($6)
	
.LABEL $label$27
	*(($1 = ($4 + ((int_32)$1 * (int_32)[24]))) + [8]) = $10
	*($1) = $0
	*($1 + [16]) = $3
	$3 = ($4 + ((int_32)$6 * (int_32)[24]))
	$4 = ($1 + [24])
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$32 }
	
.LOOP $label$33:
	$0 = ($7 + [-24])
	$6 = *($0)
	*($0) = [0]
	*(($1 + [-24])) = $6
	*(($1 + [-8])) = *(($7 + [-8]))
	*(($1 + [-12])) = *(($7 + [-12]))
	*(($1 + [-16])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $0
	if ( ((int_32)$13 != (int_32)$0) ){ goto $label$33 }
	$7 = *(($2 + [28]))
	$0 = *(($2 + [24]))
	goto $label$31 
	
.LABEL $label$32
	$0 = $7
	
.LABEL $label$31
	*(($2 + [28])) = $4
	*(($2 + [24])) = $1
	*(($2 + [32])) = $3
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$34 }
	
.LOOP $label$35:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$36 }
	CALL $139($1)
	
.LABEL $label$36
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$35 }
	
.LABEL $label$34
	if ( ($0 == 0) ){ goto $label$15 }
	CALL $139($0)
	
.LABEL $label$15
	*($14 + [16]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$7 = CALL asctime(CALL $222(($14 + [16])))
	CALL prints([32])
	CALL prints($7)
	CALL prints([3648])
	CALL prints([80])
	*([0] + [4]) = ($14 + [32])
	(unreachable)
}

void .FUNC _ZN8eoscrash5closeEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_64 $11
	int_64 $12
	int_32 $13
	int_32 $14
	$14 = (*([0] + [4]) - [32])
	*([0] + [4]) = $14
	CALL require_auth(*($0 + [16]))
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$10 = (int_64)0
	
.LOOP $label$1:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$2 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$4 }
	$1 = ($1 + [165])
	goto $label$3 
	
.LABEL $label$4
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$3
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$1 }
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$12 = (int_64)0
	
.LOOP $label$5:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$6 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$8 }
	$1 = ($1 + [165])
	goto $label$7 
	
.LABEL $label$8
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$7
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$6
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$5 }
	*(($2 = CALL $138([40])) + [8]) = $12
	*($2) = $10
	*($2 + [16]) = (int_64)-1
	*($2 + [24 align=4]) = (int_64)0
	*($2 + [32]) = [0]
	$9 = *(($0 + [16]))
	CALL $119(($14 + [16]), $2, $9)
	if ( (*($14 + [20]) == 0) ){ goto $label$10 }
	CALL $119(($14 + [16]), $2, $9)
	$7 = *($14 + [20])
	if ( $7 ){ goto $label$11 }
	CALL prints([176])
	CALL prints([368])
	CALL prints([256])
	CALL eosio_assert([0], [368])
	
.LABEL $label$11
	if ( ((int_64)*($7) == (int_64)2) ){ goto $label$9 }
	
.LABEL $label$10
	CALL prints([176])
	CALL prints([3552])
	CALL prints([256])
	CALL eosio_assert([0], [3552])
	
.LABEL $label$9
	$6 = ($2 + [24])
	*($14 + [8]) = (int_64)1
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$12 = (int_64)0
	
.LOOP $label$12:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$13 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$15 }
	$1 = ($1 + [165])
	goto $label$14 
	
.LABEL $label$15
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$14
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$13
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$12 }
	CALL $119($14, $2, $12)
	$7 = *($14 + [4])
	if ( ($7 == 0) ){ goto $label$17 }
	*($14 + [16]) = ($14 + [8])
	CALL eosio_assert([1], [960])
	CALL $120($2, $7, ($14 + [16]))
	goto $label$16 
	
.LABEL $label$17
	CALL eosio_assert(((int_64)*($2) == (int_64)CALL $fimport$13()), [880])
	*(($0 = CALL $138([24])) + [8]) = $2
	*($0) = (int_64)1
	CALL eosio_assert([1], [944])
	CALL memcpy(($14 + [16]), $0, [8])
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$12 = (int_64)0
	
.LOOP $label$18:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$19 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$21 }
	$1 = ($1 + [165])
	goto $label$20 
	
.LABEL $label$21
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$20
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$19
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$12 = ((int_64)$11 | (int_64)$12)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$18 }
	$3 = CALL db_store_i64(*(($2 + [8])), (int_64)7035938067002163200, $10, $12, ($14 + [16]), [8])
	*($0 + [12]) = $3
	$7 = ($2 + [16])
	if ( (uint_64)($12 <= *($7)) ){ goto $label$22 }
	*($7) = ( (int_64)-2 ? ((int_64)$12 + (int_64)1) : ((uint_64)$12 > (uint_64)(int_64)-3) )
	
.LABEL $label$22
	$9 = (int_64)0
	$8 = (int_64)59
	$7 = [352]
	$10 = (int_64)0
	
.LOOP $label$23:
	$11 = (int_64)0
	if ( ((uint_64)$9 > (uint_64)(int_64)11) ){ goto $label$24 }
	$1 = *($7)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$26 }
	$1 = ($1 + [165])
	goto $label$25 
	
.LABEL $label$26
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$25
	$11 = ((int_64)(CASTING uint_64)(uint_32 ($1 & [31])) << (int_64)((int_64)$8 & (int_64)4294967295))
	
.LABEL $label$24
	$7 = ($7 + [1])
	$9 = ((int_64)$9 + (int_64)1)
	$10 = ((int_64)$11 | (int_64)$10)
	$8 = ((int_64)$8 + (int_64)-5)
	if ( ((int_64)$8 != (int_64)-6) ){ goto $label$23 }
	$4 = *(($2 + [32]))
	$1 = ($2 + [28])
	$7 = *($1)
	if ( ((uint_32)$7 >= (uint_32)$4) ){ goto $label$27 }
	*($7 + [8]) = $10
	*($7) = $0
	*($7 + [16]) = $3
	*($1) = ($7 + [24])
	goto $label$16 
	
.LABEL $label$27
	$13 = *($6)
	$1 = ((int_32)($7 - $13) / (int_32)[24])
	$5 = ($1 + [1])
	if ( ((uint_32)$5 >= (uint_32)[178956971]) ){ goto $label$29 }
	$6 = [178956970]
	$4 = ((int_32)($4 - $13) / (int_32)[24])
	if ( ((uint_32)$4 > (uint_32)[89478484]) ){ goto $label$31 }
	$6 = ($4 << [1])
	$6 = ( $5 ? $6 : ($6 <= $5) )
	if ( ($6 == 0) ){ goto $label$30 }
	
.LABEL $label$31
	$4 = CALL $138(((int_32)$6 * (int_32)[24]))
	$7 = *(($2 + [28]))
	$13 = *(($2 + [24]))
	goto $label$28 
	
.LABEL $label$30
	$6 = [0]
	$4 = [0]
	goto $label$28 
	
.LABEL $label$29
	CALL $159($6)
	
.LABEL $label$28
	*(($1 = ($4 + ((int_32)$1 * (int_32)[24]))) + [8]) = $10
	*($1) = $0
	*($1 + [16]) = $3
	$3 = ($4 + ((int_32)$6 * (int_32)[24]))
	$4 = ($1 + [24])
	if ( ((int_32)$7 == (int_32)$13) ){ goto $label$33 }
	
.LOOP $label$34:
	$0 = ($7 + [-24])
	$6 = *($0)
	*($0) = [0]
	*(($1 + [-24])) = $6
	*(($1 + [-8])) = *(($7 + [-8]))
	*(($1 + [-12])) = *(($7 + [-12]))
	*(($1 + [-16])) = *(($7 + [-16]))
	$1 = ($1 + [-24])
	$7 = $0
	if ( ((int_32)$13 != (int_32)$0) ){ goto $label$34 }
	$7 = *(($2 + [28]))
	$0 = *(($2 + [24]))
	goto $label$32 
	
.LABEL $label$33
	$0 = $7
	
.LABEL $label$32
	*(($2 + [28])) = $4
	*(($2 + [24])) = $1
	*(($2 + [32])) = $3
	if ( ((int_32)$7 == (int_32)$0) ){ goto $label$35 }
	
.LOOP $label$36:
	$7 = ($7 + [-24])
	$1 = *($7)
	*($7) = [0]
	if ( ($1 == 0) ){ goto $label$37 }
	CALL $139($1)
	
.LABEL $label$37
	if ( ((int_32)$0 != (int_32)$7) ){ goto $label$36 }
	
.LABEL $label$35
	if ( ($0 == 0) ){ goto $label$16 }
	CALL $139($0)
	
.LABEL $label$16
	*($14 + [16]) = ((uint_64)CALL current_time() / (uint_64)(int_64)1000000)
	$7 = CALL asctime(CALL $222(($14 + [16])))
	CALL prints([32])
	CALL prints($7)
	CALL prints([3584])
	CALL prints([80])
	*([0] + [4]) = ($14 + [32])
	(unreachable)
}

int_32 .FUNC $118 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = *([0] + [4])
	$13 = $14
	$2 = ($0 + [24])
	$12 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$1 }
	$3 = ([0] - $12)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$11 = ($6 + [-24])
	$6 = $11
	if ( ((int_32)($11 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$4 }
	$12 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1328])
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$6 }
	$11 = CALL malloc($6)
	CALL db_get_i64($1, $11, $6)
	CALL free($11)
	goto $label$5 
	
.LABEL $label$6
	$11 = ($14 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $11
	CALL db_get_i64($1, $11, $6)
	
.LABEL $label$5
	*(($12 = CALL $138([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$6 > (uint_32)[7]), [1360])
	CALL memcpy($12, $11, [8])
	*($12 + [12]) = $1
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$7:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$8 }
	$11 = *($6)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$11 = ($11 + [165])
	goto $label$9 
	
.LABEL $label$10
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($11 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	$14 = *(($0 + [32]))
	$11 = ($0 + [28])
	$6 = *($11)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6) = $12
	*($6 + [16]) = $1
	*($11) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$11
	$3 = *($2)
	$11 = ((int_32)($6 - $3) / (int_32)[24])
	$4 = ($11 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$13 }
	$5 = [178956970]
	$2 = ((int_32)($14 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$15 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$2 = CALL $138(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$14
	$5 = [0]
	$2 = [0]
	goto $label$12 
	
.LABEL $label$13
	CALL $159($2)
	
.LABEL $label$12
	*(($11 = ($2 + ((int_32)$11 * (int_32)[24]))) + [8]) = $9
	*($11) = $12
	*($11 + [16]) = $1
	$2 = ($2 + ((int_32)$5 * (int_32)[24]))
	$14 = ($11 + [24])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$17 }
	
.LOOP $label$18:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($11 + [-24])) = $1
	*(($11 + [-8])) = *(($6 + [-8]))
	*(($11 + [-12])) = *(($6 + [-12]))
	*(($11 + [-16])) = *(($6 + [-16]))
	$11 = ($11 + [-24])
	$6 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$18 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$16 
	
.LABEL $label$17
	$5 = $6
	
.LABEL $label$16
	*(($0 + [28])) = $14
	*(($0 + [24])) = $11
	*(($0 + [32])) = $2
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = ($6 + [-24])
	$11 = *($6)
	*($6) = [0]
	if ( ($11 == 0) ){ goto $label$21 }
	CALL $139($11)
	
.LABEL $label$21
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $139($5)
	
.LABEL $label$3
	*([0] + [4]) = $13
	(unreachable)
	return $12
}

void .FUNC $119 (int_32 $0, int_32 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$3 = *(($1 + [24]))
	$10 = *(($1 + [28]))
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$1 }
	
.LOOP $label$2:
	$7 = (int_64)0
	$6 = (int_64)59
	$5 = [352]
	$8 = (int_64)0
	
.LOOP $label$3:
	$9 = (int_64)0
	if ( ((uint_64)$7 > (uint_64)(int_64)11) ){ goto $label$4 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$6 }
	$4 = ($4 + [165])
	goto $label$5 
	
.LABEL $label$6
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$5
	$9 = ((int_64)(CASTING uint_64)(uint_32 ($4 & [31])) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$7 = ((int_64)$7 + (int_64)1)
	$8 = ((int_64)$9 | (int_64)$8)
	$6 = ((int_64)$6 + (int_64)-5)
	if ( ((int_64)$6 != (int_64)-6) ){ goto $label$3 }
	if ( ((int_64)$8 == (int_64)$2) ){ goto $label$1 }
	$10 = ($10 + [-24])
	if ( ((int_32)$10 != (int_32)$3) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$10 == (int_32)$3) ){ goto $label$7 }
	$5 = *(($10 + [-24]))
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$1), [816])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$7
	$5 = CALL db_find_i64(*($1), *($1 + [8]), (int_64)7035938067002163200, $2)
	if ( ((int_32)$5 <= (int_32)[-1]) ){ goto $label$8 }
	$5 = CALL $121($1, $5)
	CALL eosio_assert(((int_32)*($5 + [8]) == (int_32)$1), [816])
	*($0 + [4]) = $5
	*($0) = $1
	return 
	
.LABEL $label$8
	*($0 + [4]) = [0]
	*($0) = $1
}

void .FUNC _ZN4json5ArrayEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [8]) = [0]
	*($2) = [0]
	CALL $30($2)
	*(($1 = CALL $138([24]))) = (int_64)0
	*($1 + [8 align=4]) = (int_64)0
	*($1 + [16 align=4]) = (int_64)0
	*($2) = $1
	*($0) = *($2)
	*($0 + [8]) = [2]
	*($2) = [0]
	*($2 + [8]) = [0]
	CALL $31($2)
	*([0] + [4]) = ($2 + [16])
}

int_64 .FUNC _ZN5eosio14string_to_nameENSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0)
{
	int_32 $1
	int_64 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	if ( (*($0) & [1]) ){ goto $label$2 }
	$0 = ($0 + [1])
	goto $label$1 
	
.LABEL $label$2
	$0 = *($0 + [8])
	
.LABEL $label$1
	$4 = [-1]
	
.LOOP $label$3:
	$3 = ($0 + $4)
	$1 = ($4 + [1])
	$4 = $1
	if ( *(($3 + [1])) ){ goto $label$3 }
	$2 = (CASTING uint_64)(uint_32 $1)
	$6 = (int_64)0
	$5 = (int_64)59
	$7 = (int_64)0
	
.LOOP $label$4:
	$8 = (int_64)0
	if ( ((uint_64)$6 >= (uint_64)$2) ){ goto $label$5 }
	$4 = *($0)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	if ( ((uint_64)$6 > (uint_64)(int_64)11) ){ goto $label$9 }
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	goto $label$8 
	
.LABEL $label$9
	$8 = ((int_64)$8 & (int_64)15)
	
.LABEL $label$8
	$0 = ($0 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$4 }
	return $7
}

void .FUNC $21 (int_32 $0, int_32 $1)
{
	int_64 $2
	int_32 $3
	$3 = (*([0] + [4]) - [16])
	*([0] + [4]) = $3
	if ( ($1 == 0) ){ goto $label$1 }
	CALL printui(*($0))
	CALL prints([1568])
	
.LABEL $label$1
	$2 = *($0)
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)8)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)16)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)24)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)32)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)40)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)48)
	*($3 + [15]) = $0)
	if ( (($0 & [255]) == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	$0 = (CASTING uint_32)(uint_64 (uint_64)$2 >> (uint_64)(int_64)56)
	*($3 + [15]) = $0)
	if ( ($0 == 0) ){ goto $label$2 }
	CALL prints_l(($3 + [15]), [1])
	
.LABEL $label$2
	*([0] + [4]) = ($3 + [16])
}

int_32 .FUNC $20 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_32 $8
	$8 = (*([0] + [4]) - [16])
	*([0] + [4]) = $8
	$5 = *($1)
	$7 = (CASTING uint_64)(uint_32 ( *($1 + [4]) ? uint_32($5 >> [1]) : ($5 & [1]) ))
	$6 = *($0 + [4])
	$4 = ($0 + [8])
	$5 = ($0 + [4])
	
.LOOP $label$1:
	$2 = (CASTING uint_32)(uint_64 $7)
	$7 = (uint_64)$7 >> (uint_64)(int_64)7
	$3 = ((int_64)$7) != (int_64)0
	*($8 + [15]) = (($3) << [7]) | ($2 & [127]))
	CALL eosio_assert(((int_32)(*($4) - $6) > (int_32)[0]), [944])
	CALL memcpy(*($5), ($8 + [15]), [1])
	$6 = (*($5) + [1])
	*($5) = $6
	if ( $3 ){ goto $label$1 }
	$2 = ($5 & [1])
	$5 = *($1)
	$5 = ( *(($1 + [4])) ? uint_32($5 >> [1]) : $2 )
	if ( ($5 == 0) ){ goto $label$2 }
	$3 = *($1 + [8])
	CALL eosio_assert(((int_32)(*(($0 + [8])) - $6) >= (int_32)$5), [944])
	$6 = ($0 + [4])
	CALL memcpy(*($6), ( $3 ? ($1 + [1]) : $2 ), $5)
	*($6) = (*($6) + $5)
	
.LABEL $label$2
	*([0] + [4]) = ($8 + [16])
	return $0
}

int_32 .FUNC _ZeqRK11checksum256S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

int_32 .FUNC $22 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_64 $10
	int_32 $11
	int_32 $12
	int_32 $13
	int_32 $14
	$14 = *([0] + [4])
	$13 = $14
	$2 = ($0 + [24])
	$12 = *($2)
	$5 = *(($0 + [28]))
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$1 }
	$3 = ([0] - $12)
	$6 = ($5 + [-24])
	
.LOOP $label$2:
	if ( ((int_32)*(($6 + [16])) == (int_32)$1) ){ goto $label$1 }
	$5 = $6
	$11 = ($6 + [-24])
	$6 = $11
	if ( ((int_32)($11 + $3) != (int_32)[-24]) ){ goto $label$2 }
	
.LABEL $label$1
	if ( ((int_32)$5 == (int_32)$12) ){ goto $label$4 }
	$12 = *(($5 + [-24]))
	goto $label$3 
	
.LABEL $label$4
	$6 = CALL db_get_i64($1, [0], [0])
	CALL eosio_assert(((int_32)uint_32($6 >> [31]) ^ (int_32)[1]), [1328])
	if ( ((uint_32)$6 <= (uint_32)[512]) ){ goto $label$6 }
	$11 = CALL malloc($6)
	CALL db_get_i64($1, $11, $6)
	CALL free($11)
	goto $label$5 
	
.LABEL $label$6
	$11 = ($14 - (($6 + [15]) & [-16]))
	*([0] + [4]) = $11
	CALL db_get_i64($1, $11, $6)
	
.LABEL $label$5
	*(($12 = CALL $138([24])) + [8]) = $0
	CALL eosio_assert(((uint_32)$6 > (uint_32)[7]), [1360])
	CALL memcpy($12, $11, [8])
	*($12 + [12]) = $1
	$8 = (int_64)0
	$7 = (int_64)59
	$6 = [352]
	$9 = (int_64)0
	
.LOOP $label$7:
	$10 = (int_64)0
	if ( ((uint_64)$8 > (uint_64)(int_64)11) ){ goto $label$8 }
	$11 = *($6)
	if ( ((uint_32)(($11 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$10 }
	$11 = ($11 + [165])
	goto $label$9 
	
.LABEL $label$10
	$11 = ( ($11 + [208]) ? [0] : ((($11 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$9
	$10 = ((int_64)(CASTING uint_64)(uint_32 ($11 & [31])) << (int_64)((int_64)$7 & (int_64)4294967295))
	
.LABEL $label$8
	$6 = ($6 + [1])
	$8 = ((int_64)$8 + (int_64)1)
	$9 = ((int_64)$10 | (int_64)$9)
	$7 = ((int_64)$7 + (int_64)-5)
	if ( ((int_64)$7 != (int_64)-6) ){ goto $label$7 }
	$14 = *(($0 + [32]))
	$11 = ($0 + [28])
	$6 = *($11)
	if ( ((uint_32)$6 >= (uint_32)$14) ){ goto $label$11 }
	*($6 + [8]) = $9
	*($6) = $12
	*($6 + [16]) = $1
	*($11) = ($6 + [24])
	goto $label$3 
	
.LABEL $label$11
	$3 = *($2)
	$11 = ((int_32)($6 - $3) / (int_32)[24])
	$4 = ($11 + [1])
	if ( ((uint_32)$4 >= (uint_32)[178956971]) ){ goto $label$13 }
	$5 = [178956970]
	$2 = ((int_32)($14 - $3) / (int_32)[24])
	if ( ((uint_32)$2 > (uint_32)[89478484]) ){ goto $label$15 }
	$5 = ($2 << [1])
	$5 = ( $4 ? $5 : ($5 <= $4) )
	if ( ($5 == 0) ){ goto $label$14 }
	
.LABEL $label$15
	$2 = CALL $138(((int_32)$5 * (int_32)[24]))
	$6 = *(($0 + [28]))
	$3 = *(($0 + [24]))
	goto $label$12 
	
.LABEL $label$14
	$5 = [0]
	$2 = [0]
	goto $label$12 
	
.LABEL $label$13
	CALL $159($2)
	
.LABEL $label$12
	*(($11 = ($2 + ((int_32)$11 * (int_32)[24]))) + [8]) = $9
	*($11) = $12
	*($11 + [16]) = $1
	$2 = ($2 + ((int_32)$5 * (int_32)[24]))
	$14 = ($11 + [24])
	if ( ((int_32)$6 == (int_32)$3) ){ goto $label$17 }
	
.LOOP $label$18:
	$5 = ($6 + [-24])
	$1 = *($5)
	*($5) = [0]
	*(($11 + [-24])) = $1
	*(($11 + [-8])) = *(($6 + [-8]))
	*(($11 + [-12])) = *(($6 + [-12]))
	*(($11 + [-16])) = *(($6 + [-16]))
	$11 = ($11 + [-24])
	$6 = $5
	if ( ((int_32)$3 != (int_32)$5) ){ goto $label$18 }
	$6 = *(($0 + [28]))
	$5 = *(($0 + [24]))
	goto $label$16 
	
.LABEL $label$17
	$5 = $6
	
.LABEL $label$16
	*(($0 + [28])) = $14
	*(($0 + [24])) = $11
	*(($0 + [32])) = $2
	if ( ((int_32)$6 == (int_32)$5) ){ goto $label$19 }
	
.LOOP $label$20:
	$6 = ($6 + [-24])
	$11 = *($6)
	*($6) = [0]
	if ( ($11 == 0) ){ goto $label$21 }
	CALL $139($11)
	
.LABEL $label$21
	if ( ((int_32)$5 != (int_32)$6) ){ goto $label$20 }
	
.LABEL $label$19
	if ( ($5 == 0) ){ goto $label$3 }
	CALL $139($5)
	
.LABEL $label$3
	*([0] + [4]) = $13
	(unreachable)
	return $12
}

int_32 .FUNC _ZneRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return ((int_32)CALL memcmp($0, $1, [32]) != (int_32)[0])
}

int_32 .FUNC _ZeqRK11checksum160S1_ (int_32 $0, int_32 $1)
{
	return (CALL memcmp($0, $1, [32]) == 0)
}

void .FUNC _ZN5eosio12require_authERKNS_16permission_levelE (int_32 $0)
{
	CALL require_auth2(*($0), *($0 + [8]))
}

int_32 .FUNC now ()
{
	return (CASTING uint_32)(uint_64 ((uint_64)CALL current_time() / (uint_64)(int_64)1000000))
}

void .FUNC _ZN10msContract9loadParamERNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	$8 = (*([0] + [4]) - [80])
	*([0] + [4]) = $8
	CALL prints([2752])
	CALL prints([2768])
	*($8 + [40]) = *($1 + [24])
	CALL $11(($8 + [64]), ($8 + [40]))
	$3 = *($8 + [72])
	$4 = *($8 + [64])
	*($8 + [24]) = *($1 + [32])
	CALL $11(($8 + [40]), ($8 + [24]))
	$5 = *($8 + [48])
	$6 = *($8 + [40])
	*($8 + [56]) = *($1 + [40])
	CALL $11(($8 + [24]), ($8 + [56]))
	$1 = *($8 + [32])
	$7 = *($8 + [24])
	CALL prints([2800])
	CALL prints(( $3 ? (($8 + [64]) | [1]) : ($4 & [1]) ))
	CALL prints([2816])
	CALL prints(( $5 ? (($8 + [40]) | [1]) : ($6 & [1]) ))
	CALL prints([2832])
	CALL prints(( $1 ? (($8 + [24]) | [1]) : ($7 & [1]) ))
	CALL prints([512])
	if ( ((*($8 + [24]) & [1]) == 0) ){ goto $label$1 }
	CALL $139(*(($8 + [32])))
	
.LABEL $label$1
	if ( ((*($8 + [40]) & [1]) == 0) ){ goto $label$2 }
	CALL $139(*(($8 + [48])))
	
.LABEL $label$2
	if ( ((*($8 + [64]) & [1]) == 0) ){ goto $label$3 }
	CALL $139(*(($8 + [72])))
	
.LABEL $label$3
	CALL prints([2848])
	CALL prints([2896])
	*($8 + [40]) = [0]
	CALL $42(($8 + [64]), $2, ($8 + [40]))
	*($0) = *($8 + [64])
	*($0 + [8]) = *($8 + [72])
	*($8 + [72]) = [0]
	*($8 + [64]) = [0]
	CALL $31(($8 + [64]))
	*(($8 + [16])) = [0]
	*($8 + [8]) = (int_64)0
	$1 = CALL strlen([480])
	if ( ((uint_32)$1 >= (uint_32)[-16]) ){ goto $label$4 }
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$7 }
	*($8 + [8]) = ($1 << [1])
	$2 = (($8 + [8]) | [1])
	if ( $1 ){ goto $label$6 }
	goto $label$5 
	
.LABEL $label$7
	$3 = (($1 + [16]) & [-16])
	$2 = CALL $138($3)
	*($8 + [8]) = ($3 | [1])
	*($8 + [16]) = $2
	*($8 + [12]) = $1
	
.LABEL $label$6
	CALL memcpy($2, [480], $1)
	
.LABEL $label$5
	*(($2 + $1)) = [0]
	CALL $36(($8 + [64]), $0, [1], ($8 + [8]))
	CALL prints(( *($8 + [72]) ? (($8 + [64]) | [1]) : (*($8 + [64]) & [1]) ))
	if ( ((*($8 + [64]) & [1]) == 0) ){ goto $label$8 }
	CALL $139(*(($8 + [72])))
	
.LABEL $label$8
	if ( ((*($8 + [8]) & [1]) == 0) ){ goto $label$9 }
	CALL $139(*($8 + [16]))
	
.LABEL $label$9
	CALL prints([2848])
	*([0] + [4]) = ($8 + [80])
	return (unreachable)
	
.LABEL $label$4
	CALL $140(($8 + [8]))
}

void .FUNC _ZN10msContract21getCurrentTransactionEv (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$3 = (*([0] + [4]) - [32])
	$6 = $3
	*([0] + [4]) = $3
	$4 = $3
	$5 = CALL transaction_size()
	$3 = ($3 - (($5 + [15]) & [-16]))
	*([0] + [4]) = $3
	$2 = CALL read_transaction($3, $5)
	if ( ((int_32)$5 == (int_32)$2) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([2720])
	CALL prints([256])
	CALL eosio_assert([0], [2720])
	
.LABEL $label$1
	CALL sha256($3, $2, $6)
	CALL printhex($6, [32])
	*(($0 + [8])) = [0]
	*($0) = (int_64)0
	$3 = CALL strlen([128])
	if ( ((uint_32)$3 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$3 >= (uint_32)[11]) ){ goto $label$5 }
	*($0) = ($3 << [1])
	$5 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$2 = (($3 + [16]) & [-16])
	$5 = CALL $138($2)
	*($0) = ($2 | [1])
	*($0 + [8]) = $5
	*($0 + [4]) = $3
	
.LABEL $label$4
	CALL memcpy($5, [128], $3)
	
.LABEL $label$3
	*(($5 + $3)) = [0]
	$4
	*([0] + [4]) = ($6 + [32])
	return (unreachable)
	
.LABEL $label$2
	CALL $140($0)
}

int_32 .FUNC $103 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = *([0] + [4])
	$4 = $5
	$2 = *($1 + [4])
	$1 = *($1)
	$3 = CALL action_data_size()
	if ( ($3 == 0) ){ goto $label$1 }
	if ( ((uint_32)$3 <= (uint_32)[512]) ){ goto $label$2 }
	$5 = CALL malloc($3)
	CALL read_action_data($5, $3)
	CALL free($5)
	goto $label$1 
	
.LABEL $label$2
	$5 = ($5 - (($3 + [15]) & [-16]))
	*([0] + [4]) = $5
	CALL read_action_data($5, $3)
	
.LABEL $label$1
	$3 = ($0 + int_32($2 >> [1]))
	if ( (($2 & [1]) == 0) ){ goto $label$3 }
	$1 = *((*($3) + $1))
	
.LABEL $label$3
	CALL void $3((int_32 $1))
	*([0] + [4]) = $4
	return [1]
}

void .FUNC _ZN10msContract6onCallEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	int_64 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_64 $9
	int_32 $10
	$10 = (*([0] + [4]) - [16])
	*([0] + [4]) = $10
	$9 = *($0 + [40])
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2912]
	$7 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$6 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$1 = ($1 + [165])
	goto $label$4 
	
.LABEL $label$6
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$2
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$1 }
	if ( ((int_64)$9 != (int_64)$7) ){ goto $label$7 }
	CALL prints([176])
	CALL prints([2928])
	CALL prints([256])
	$9 = *(($0 + [40]))
	$6 = (int_64)0
	$5 = (int_64)59
	$4 = [2912]
	$7 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$6 > (uint_64)(int_64)6) ){ goto $label$13 }
	$1 = *($4)
	if ( ((uint_32)(($1 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$1 = ($1 + [165])
	goto $label$11 
	
.LABEL $label$13
	$8 = (int_64)0
	if ( ((uint_64)$6 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$1 = ( ($1 + [208]) ? [0] : ((($1 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $1) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$5 & (int_64)4294967295))
	
.LABEL $label$9
	$4 = ($4 + [1])
	$6 = ((int_64)$6 + (int_64)1)
	$7 = ((int_64)$8 | (int_64)$7)
	$5 = ((int_64)$5 + (int_64)-5)
	if ( ((int_64)$5 != (int_64)-6) ){ goto $label$8 }
	CALL eosio_assert(((int_64)$9 != (int_64)$7), [2928])
	$9 = *(($0 + [40]))
	
.LABEL $label$7
	$2 = ($0 + [52])
	$4 = *($2)
	if ( ($4 == 0) ){ goto $label$14 }
	$1 = $2
	
.LOOP $label$16:
	if ( ((uint_64)*($4 + [16]) >= (uint_64)$9) ){ goto $label$17 }
	$4 = *($4 + [4])
	if ( $4 ){ goto $label$16 }
	goto $label$15 
	
.LABEL $label$17
	$1 = $4
	$3 = *($4)
	$4 = $3
	if ( $3 ){ goto $label$16 }
	
.LABEL $label$15
	if ( ((int_32)$1 == (int_32)$2) ){ goto $label$14 }
	if ( (uint_64)($9 <= *($1 + [16])) ){ goto $label$14 }
	*($10 + [8]) = *($1 + [24])
	*($10 + [12]) = *($1 + [28])
	*($10) = *($10 + [8])
	CALL $103($0, $10)
	
.LABEL $label$14
	*([0] + [4]) = ($10 + [16])
}

void .FUNC apply (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_64 $7
	int_64 $8
	int_32 $9
	$9 = (*([0] + [4]) - [112])
	*([0] + [4]) = $9
	$3 = CALL _ZN10msContract25createNewContractInstanceEyyy($0, $1, $2)
	if ( ((int_64)$1 == (int_64)$0) ){ goto $label$2 }
	$0 = (int_64)0
	$6 = (int_64)59
	$5 = [160]
	$7 = (int_64)0
	
.LOOP $label$3:
	if ( ((uint_64)$0 > (uint_64)(int_64)10) ){ goto $label$8 }
	$4 = *($5)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$7 }
	$4 = ($4 + [165])
	goto $label$6 
	
.LABEL $label$8
	$8 = (int_64)0
	if ( ((int_64)$0 == (int_64)11) ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$7
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$6
	$8 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$5
	$8 = ((int_64)((int_64)$8 & (int_64)31) << (int_64)((int_64)$6 & (int_64)4294967295))
	
.LABEL $label$4
	$5 = ($5 + [1])
	$6 = ((int_64)$6 + (int_64)-5)
	$7 = ((int_64)$8 | (int_64)$7)
	$0 = ((int_64)$0 + (int_64)1)
	if ( ((int_64)$0 != (int_64)13) ){ goto $label$3 }
	if ( ((int_64)$7 != (int_64)$1) ){ goto $label$1 }
	
.LABEL $label$2
	if ( ((int_64)$2 != (int_64)-3617168760277827584) ){ goto $label$11 }
	CALL $107(($9 + [64]))
	$8 = *($9 + [64])
	*($9 + [40]) = (int_64)0
	$6 = *($9 + [72])
	*($9 + [48]) = (int_64)1398362884
	$7 = *((($9 + [64]) + [24]))
	$2 = *($9 + [80])
	CALL eosio_assert([1], [1264])
	$0 = (int_64)5462355
	$5 = [0]
	
.LOOP $label$12:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $0) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$10 }
	$0 = (uint_64)$0 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$0) & (int_64)255) != (int_64)0) ){ goto $label$13 }
	
.LOOP $label$14:
	$0 = (uint_64)$0 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$0) & (int_64)255) != (int_64)0) ){ goto $label$10 }
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$14 }
	
.LABEL $label$13
	$4 = [1]
	$5 = ($5 + [1])
	if ( ((int_32)$5 < (int_32)[7]) ){ goto $label$12 }
	goto $label$9 
	
.LABEL $label$11
	CALL _ZN10msContract6onCallEv($3)
	goto $label$1 
	
.LABEL $label$10
	$4 = [0]
	
.LABEL $label$9
	CALL eosio_assert($4, [576])
	*(($5 = (($9 + [40]) + [8]))) = $7
	*($9 + [40]) = $2
	*($9 + [56]) = $1
	$4 = ($9 + [96])
	CALL $166(($9 + [24]), $4)
	*(($9 + [16])) = *($9 + [56])
	*(($9 + [8])) = *($5)
	*($9) = *($9 + [40])
	CALL _ZN10msContract10onTransferE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE($3, $8, $6, $9, ($9 + [24]))
	if ( ((*($9 + [24]) & [1]) == 0) ){ goto $label$15 }
	CALL $139(*($9 + [32]))
	
.LABEL $label$15
	if ( ((*($4) & [1]) == 0) ){ goto $label$1 }
	CALL $139(*(($9 + [104])))
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [112])
}

void .FUNC _ZN10msContract10onTransferE9msAccountS0_7msAssetNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE (int_32 $0, int_64 $1, int_64 $2, int_32 $3, int_32 $4)
{
	int_64 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [192])
	*([0] + [4]) = $9
	if ( ((int_64)$1 != (int_64)$2) ){ goto $label$1 }
	CALL prints([176])
	CALL prints([2960])
	CALL prints([256])
	CALL eosio_assert([0], [2960])
	
.LABEL $label$1
	$5 = *($0 + [16])
	if ( ((int_64)$5 != (int_64)$2) ){ goto $label$3 }
	$6 = *(*($0))
	*((($9 + [168]) + [20])) = *(($3 + [20]))
	*(($7 = (($9 + [168]) + [16]))) = *(($3 + [16]))
	*((($9 + [168]) + [12])) = *(($3 + [12]))
	*(($8 = (($9 + [168]) + [8]))) = *(($3 + [8]))
	*($9 + [172]) = *(($3 + [4]))
	*($9 + [168]) = *($3)
	CALL $166(($9 + [152]), $4)
	*(($9 + [16])) = *($7)
	*(($9 + [8])) = *($8)
	*($9) = *($9 + [168])
	CALL void $0((int_32 $1), (int_64 $2), (int_64 $9), (int_32 ($9 + [152])), (int_32 $6))
	if ( ((*($9 + [152]) & [1]) == 0) ){ goto $label$2 }
	CALL $139(*($9 + [160]))
	goto $label$2 
	
.LABEL $label$3
	$6 = *($0)
	if ( ((int_64)$5 != (int_64)$1) ){ goto $label$4 }
	$6 = *($6 + [4])
	*(($7 = (($9 + [128]) + [16]))) = *(($3 + [16]))
	*(($8 = (($9 + [128]) + [8]))) = *(($3 + [8]))
	*($9 + [128]) = *($3)
	CALL $166(($9 + [112]), $4)
	*((($9 + [24]) + [16])) = *($7)
	*((($9 + [24]) + [8])) = *($8)
	*($9 + [24]) = *($9 + [128])
	CALL void $0((int_32 $1), (int_64 $2), (int_64 ($9 + [24])), (int_32 ($9 + [112])), (int_32 $6))
	if ( ((*($9 + [112]) & [1]) == 0) ){ goto $label$2 }
	CALL $139(*($9 + [120]))
	goto $label$2 
	
.LABEL $label$4
	$6 = *($6 + [8])
	*(($7 = (($9 + [88]) + [16]))) = *(($3 + [16]))
	*(($8 = (($9 + [88]) + [8]))) = *(($3 + [8]))
	*($9 + [88]) = *($3)
	CALL $166(($9 + [72]), $4)
	*((($9 + [48]) + [16])) = *($7)
	*((($9 + [48]) + [8])) = *($8)
	*($9 + [48]) = *($9 + [88])
	CALL void $0((int_32 $1), (int_64 $2), (int_64 ($9 + [48])), (int_32 ($9 + [72])), (int_32 $6))
	if ( ((*($9 + [72]) & [1]) == 0) ){ goto $label$2 }
	CALL $139(*($9 + [80]))
	
.LABEL $label$2
	*([0] + [4]) = ($9 + [192])
}

void .FUNC $107 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_64 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = (*([0] + [4]) - [16])
	$6 = $4
	*([0] + [4]) = $4
	$1 = CALL action_data_size()
	if ( ($1 <= [513]) ){ goto $label$2 }
	$2 = CALL malloc($1)
	goto $label$1 
	
.LABEL $label$2
	$2 = ($4 - (($1 + [15]) & [-16]))
	*([0] + [4]) = $2
	
.LABEL $label$1
	CALL read_action_data($2, $1)
	*(($0 + [24])) = (int_64)1398362884
	*($0 + [16]) = (int_64)0
	CALL eosio_assert([1], [1264])
	$3 = (int_64)5462355
	$4 = [0]
	
.LOOP $label$5:
	if ( ((uint_32)(((CASTING uint_32)(uint_64 $3) << [24]) + [-1073741825]) > (uint_32)[452984830]) ){ goto $label$4 }
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$6 }
	
.LOOP $label$7:
	$3 = (uint_64)$3 >> (uint_64)(int_64)8
	if ( ((int_64)((int_64)$3) & (int_64)255) != (int_64)0) ){ goto $label$4 }
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$7 }
	
.LABEL $label$6
	$5 = [1]
	$4 = ($4 + [1])
	if ( ((int_32)$4 < (int_32)[7]) ){ goto $label$5 }
	goto $label$3 
	
.LABEL $label$4
	$5 = [0]
	
.LABEL $label$3
	CALL eosio_assert($5, [576])
	*(($0 + [40])) = [0]
	*($0 + [32 align=4]) = (int_64)0
	*($6) = $2
	$4 = ($2 + $1)
	*($6 + [8]) = $4
	CALL eosio_assert(((uint_32)$1 > (uint_32)[7]), [1360])
	CALL memcpy($0, $2, [8])
	$5 = ($2 + [8])
	CALL eosio_assert(((uint_32)($4 - $5) > (uint_32)[7]), [1360])
	CALL memcpy(($0 + [8]), $5, [8])
	$5 = ($2 + [16])
	CALL eosio_assert(((uint_32)($4 - $5) > (uint_32)[7]), [1360])
	CALL memcpy(($0 + [16]), $5, [8])
	$5 = ($2 + [24])
	CALL eosio_assert(((uint_32)($4 - $5) > (uint_32)[7]), [1360])
	CALL memcpy(($0 + [24]), $5, [8])
	*($6 + [4]) = ($2 + [32])
	CALL $108($6, ($0 + [32]))
	if ( ($1 <= [513]) ){ goto $label$8 }
	CALL free($2)
	
.LABEL $label$8
	*([0] + [4]) = ($6 + [16])
}

int_32 .FUNC _ZN10msContract25createNewContractInstanceEyyy (int_64 $0, int_64 $1, int_64 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_64 $8
	int_32 $9
	int_32 $10
	*(($3 = CALL $138([64])) + [16]) = $0
	*($3 + [8]) = $0
	*($3 + [24]) = $0
	*($3 + [32]) = $1
	*($3 + [40]) = $2
	$0 = (int_64)0
	*($3 + [52 align=4]) = (int_64)0
	$10 = ($3 + [52])
	*($3 + [48]) = $10
	*($3) = [20]
	$1 = (int_64)59
	$7 = [2992]
	$8 = (int_64)0
	
.LOOP $label$1:
	if ( ((uint_64)$0 > (uint_64)(int_64)3) ){ goto $label$6 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$5 }
	$4 = ($4 + [165])
	goto $label$4 
	
.LABEL $label$6
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$5
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$4
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$3
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$2
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$1 }
	*(($7 = CALL $138([32])) + [24]) = [0]
	*($7 + [16]) = $8
	*($7 + [28]) = [0]
	$0 = (int_64)0
	*($7) = (int_64)0
	*($7 + [8]) = $10
	*(($3 + [52])) = $7
	$4 = ($3 + [48])
	$9 = *(*($4))
	if ( ($9 == 0) ){ goto $label$7 }
	*($4) = $9
	
.LABEL $label$7
	CALL $46($7, $7)
	*($7 + [24]) = [1]
	*($7 + [28]) = [0]
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	$1 = (int_64)59
	$7 = [3008]
	$8 = (int_64)0
	
.LOOP $label$8:
	if ( ((uint_64)$0 > (uint_64)(int_64)4) ){ goto $label$13 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$12 }
	$4 = ($4 + [165])
	goto $label$11 
	
.LABEL $label$13
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$10 }
	goto $label$9 
	
.LABEL $label$12
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$11
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$10
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$9
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$8 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$18 }
	$4 = $10
	
.LOOP $label$19:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$21 }
	$9 = *($7)
	if ( $9 ){ goto $label$20 }
	goto $label$17 
	
.LABEL $label$21
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$16 }
	$4 = ($7 + [4])
	$9 = *($7 + [4])
	if ( ($9 == 0) ){ goto $label$16 }
	$7 = $4
	
.LABEL $label$20
	$4 = $7
	$7 = $9
	goto $label$19 
	
.LABEL $label$18
	$7 = $10
	$4 = $10
	$9 = *($4)
	if ( $9 ){ goto $label$14 }
	goto $label$15 
	
.LABEL $label$17
	$4 = $7
	
.LABEL $label$16
	$9 = *($4)
	if ( $9 ){ goto $label$14 }
	
.LABEL $label$15
	*(($9 = CALL $138([32])) + [24]) = [0]
	*($9 + [28]) = [0]
	*($9) = (int_64)0
	*($9 + [8]) = $7
	*($4) = $9
	*($9 + [16]) = $8
	$7 = $9
	$6 = ($3 + [48])
	$5 = *(*($6))
	if ( ($5 == 0) ){ goto $label$22 }
	*($6) = $5
	$7 = *($4)
	
.LABEL $label$22
	CALL $46(*(($3 + [52])), $7)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$14
	*(($9 + [28])) = [0]
	*(($9 + [24])) = [2]
	$0 = (int_64)0
	$1 = (int_64)59
	$7 = [3024]
	$8 = (int_64)0
	
.LOOP $label$23:
	if ( ((uint_64)$0 > (uint_64)(int_64)4) ){ goto $label$28 }
	$4 = *($7)
	if ( ((uint_32)(($4 + [-97]) & [255]) > (uint_32)[25]) ){ goto $label$27 }
	$4 = ($4 + [165])
	goto $label$26 
	
.LABEL $label$28
	$2 = (int_64)0
	if ( ((uint_64)$0 <= (uint_64)(int_64)11) ){ goto $label$25 }
	goto $label$24 
	
.LABEL $label$27
	$4 = ( ($4 + [208]) ? [0] : ((($4 + [-49]) & [255]) <= [5]) )
	
.LABEL $label$26
	$2 = (int_64)((int_64)(CASTING uint_64)(uint_32 $4) << (int_64)56) >> (int_64)56)
	
.LABEL $label$25
	$2 = ((int_64)((int_64)$2 & (int_64)31) << (int_64)((int_64)$1 & (int_64)4294967295))
	
.LABEL $label$24
	$7 = ($7 + [1])
	$0 = ((int_64)$0 + (int_64)1)
	$8 = ((int_64)$2 | (int_64)$8)
	$1 = ((int_64)$1 + (int_64)-5)
	if ( ((int_64)$1 != (int_64)-6) ){ goto $label$23 }
	$7 = *($10)
	if ( ($7 == 0) ){ goto $label$34 }
	$9 = $10
	
.LOOP $label$35:
	$0 = *($7 + [16])
	if ( ((uint_64)$8 >= (uint_64)$0) ){ goto $label$37 }
	$4 = *($7)
	if ( $4 ){ goto $label$36 }
	goto $label$33 
	
.LABEL $label$37
	if ( ((uint_64)$0 >= (uint_64)$8) ){ goto $label$32 }
	$9 = ($7 + [4])
	$4 = *($7 + [4])
	if ( ($4 == 0) ){ goto $label$31 }
	$7 = $9
	
.LABEL $label$36
	$9 = $7
	$7 = $4
	goto $label$35 
	
.LABEL $label$34
	$7 = $10
	$4 = *($7)
	if ( $4 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$33
	$10 = $7
	$4 = *($7)
	if ( $4 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$32
	$10 = $7
	$7 = $9
	$4 = *($7)
	if ( $4 ){ goto $label$29 }
	goto $label$30 
	
.LABEL $label$31
	$10 = $7
	$7 = $9
	$4 = *($7)
	if ( $4 ){ goto $label$29 }
	
.LABEL $label$30
	*(($4 = CALL $138([32])) + [24]) = [0]
	*($4 + [28]) = [0]
	*($4) = (int_64)0
	*($4 + [8]) = $10
	*($7) = $4
	*($4 + [16]) = $8
	$9 = $4
	$10 = ($3 + [48])
	$6 = *(*($10))
	if ( ($6 == 0) ){ goto $label$38 }
	*($10) = $6
	$9 = *($7)
	
.LABEL $label$38
	CALL $46(*(($3 + [52])), $9)
	*(($7 = ($3 + [56]))) = (*($7) + [1])
	
.LABEL $label$29
	*(($4 + [28])) = [0]
	*(($4 + [24])) = [3]
	return $3
}

int_32 .FUNC $109 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_64 $6
	int_32 $7
	$5 = *($0 + [4])
	$7 = [0]
	$6 = (int_64)0
	$2 = ($0 + [8])
	$3 = ($0 + [4])
	
.LOOP $label$1:
	CALL eosio_assert(($5 <= *($2)), [2976])
	$5 = *($3)
	$4 = *($5)
	$5 = ($5 + [1])
	*($3) = $5
	$7 = ($7 & [255])
	$6 = ((int_64)(CASTING uint_64)(uint_32 (($4 & [127]) << $7)) | (int_64)$6)
	$7 = ($7 + [7])
	if ( uint_32($4 >> [7]) ){ goto $label$1 }
	$4 = *($1)
	$7 = *($1 + [4])
	$2 = ($7 - $4)
	$3 = (CASTING uint_32)(uint_64 $6)
	if ( ((uint_32)$3 <= (uint_32)$2) ){ goto $label$3 }
	CALL $15($1, ($3 - $2))
	$5 = *(($0 + [4]))
	$7 = *(($1 + [4]))
	$4 = *($1)
	goto $label$2 
	
.LABEL $label$3
	if ( ((uint_32)$3 >= (uint_32)$2) ){ goto $label$2 }
	$7 = ($4 + $3)
	*(($1 + [4])) = $7
	
.LABEL $label$2
	$5 = ($7 - $4)
	CALL eosio_assert(((uint_32)(*(($0 + [8])) - $5) >= (uint_32)$5), [1360])
	$7 = ($0 + [4])
	CALL memcpy($4, *($7), $5)
	*($7) = (*($7) + $5)
	return $0
}

int_32 .FUNC $108 (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [32])
	*([0] + [4]) = $7
	*($7 + [24]) = [0]
	*($7 + [16]) = (int_64)0
	CALL $109($0, ($7 + [16]))
	$4 = *($7 + [16])
	$5 = *($7 + [20])
	if ( ((int_32)$5 != (int_32)$4) ){ goto $label$9 }
	if ( (*($1) & [1]) ){ goto $label$8 }
	*($1) = [0]
	$4 = ($1 + [8])
	goto $label$7 
	
.LABEL $label$9
	*(($7 + [8])) = [0]
	*($7) = (int_64)0
	$2 = ($5 - $4)
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$6 }
	*($7) = ($2 << [1])
	$6 = ($7 | [1])
	if ( $2 ){ goto $label$5 }
	goto $label$4 
	
.LABEL $label$8
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	$4 = ($1 + [8])
	
.LABEL $label$7
	CALL $141($1, [0])
	*($4) = [0]
	*($1) = (int_64)0
	$4 = *($7 + [16])
	if ( $4 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$6
	$5 = (($2 + [16]) & [-16])
	$6 = CALL $138($5)
	*($7) = ($5 | [1])
	*($7 + [8]) = $6
	*($7 + [4]) = $2
	
.LABEL $label$5
	$3 = $2
	$5 = $6
	
.LOOP $label$10:
	*($5) = *($4)
	$5 = ($5 + [1])
	$4 = ($4 + [1])
	$3 = ($3 + [-1])
	if ( $3 ){ goto $label$10 }
	$6 = ($6 + $2)
	
.LABEL $label$4
	*($6) = [0]
	if ( (*($1) & [1]) ){ goto $label$12 }
	*($1) = [0]
	goto $label$11 
	
.LABEL $label$12
	*(*($1 + [8])) = [0]
	*($1 + [4]) = [0]
	
.LABEL $label$11
	CALL $141($1, [0])
	*(($1 + [8])) = *(($7 + [8]))
	*($1) = *($7)
	$4 = *($7 + [16])
	if ( ($4 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	*($7 + [20]) = $4
	CALL $139($4)
	
.LABEL $label$2
	*([0] + [4]) = ($7 + [32])
	return $0
	
.LABEL $label$1
	CALL $140($7)
	return (unreachable)
}

int_32 .FUNC __strchrnul (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	($0 + CALL strlen($0))
	$2 = ($1 & [255])
	if ( ($2 == 0) ){ goto $label$1 }
	if ( (($0 & [3]) == 0) ){ goto $label$3 }
	
.LOOP $label$4:
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 == (int_32)($1 & [255])) ){ goto $label$2 }
	$0 = ($0 + [1])
	if ( ($0 & [3]) ){ goto $label$4 }
	
.LABEL $label$3
	$3 = *($0)
	if ( ((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) ){ goto $label$5 }
	$2 = ((int_32)$2 * (int_32)[16843009])
	
.LOOP $label$6:
	$3 = ((int_32)$3 ^ (int_32)$2)
	if ( ((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) ){ goto $label$5 }
	$0 = ($0 + [4])
	$3 = *($0)
	if ( (((((int_32)$3 ^ (int_32)[-1]) & ($3 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$6 }
	
.LABEL $label$5
	$0 = ($0 + [-1])
	
.LOOP $label$7:
	$0 = ($0 + [1])
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$2 }
	if ( ((int_32)$3 != (int_32)($1 & [255])) ){ goto $label$7 }
	
.LABEL $label$2
	return $0
	return .LABEL $label$1
}

int_32 .FUNC asctime (int_32 $0)
{
	return CALL __asctime($0, [15328])
}

int_32 .FUNC $38 (int_32 $0, int_32 $1, int_32 $2, int_32 $3, int_32 $4, int_32 $5)
{
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	$9 = (*([0] + [4]) - [16])
	*([0] + [4]) = $9
	if ( ($0 == 0) ){ goto $label$5 }
	$7 = *($4 + [12])
	$8 = [0]
	$6 = ($2 - $1)
	if ( ((int_32)$6 < (int_32)[1]) ){ goto $label$6 }
	if ( ((int_32)CALL int_32 $0((int_32 $1), (int_32 $6), (int_32 *(*($0) + [48]))) != (int_32)$6) ){ goto $label$1 }
	
.LABEL $label$6
	$8 = ($3 - $1)
	$1 = ( ($7 - $8) ? [0] : ((int_32)$7 > (int_32)$8) )
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$2 }
	*(($9 + [8])) = [0]
	*($9) = (int_64)0
	if ( ((uint_32)$1 >= (uint_32)[11]) ){ goto $label$4 }
	*($9) = ($1 << [1])
	$6 = ($9 | [1])
	$7 = $6
	goto $label$3 
	
.LABEL $label$5
	$8 = [0]
	goto $label$1 
	
.LABEL $label$4
	$8 = (($1 + [16]) & [-16])
	$7 = CALL $138($8)
	*($9) = ($8 | [1])
	*($9 + [8]) = $7
	*($9 + [4]) = $1
	$6 = ($9 | [1])
	
.LABEL $label$3
	CALL memset($7, ($5 & [255]), $1)
	$8 = [0]
	*(($7 + $1)) = [0]
	$5 = ($9 + [8])
	$7 = CALL int_32 $0((int_32 ( *($5) ? $6 : (*($9) & [1]) )), (int_32 $1), (int_32 *(*($0) + [48])))
	if ( ((*($9) & [1]) == 0) ){ goto $label$7 }
	CALL $139(*($5))
	
.LABEL $label$7
	if ( ((int_32)$7 != (int_32)$1) ){ goto $label$1 }
	
.LABEL $label$2
	$1 = ($3 - $2)
	if ( ((int_32)$1 < (int_32)[1]) ){ goto $label$8 }
	$8 = [0]
	if ( ((int_32)CALL int_32 $0((int_32 $2), (int_32 $1), (int_32 *(*($0) + [48]))) != (int_32)$1) ){ goto $label$1 }
	
.LABEL $label$8
	*(($4 + [12])) = [0]
	$8 = $0
	
.LABEL $label$1
	*([0] + [4]) = ($9 + [16])
	return $8
}

void .FUNC $39 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	*($0 + [8]) = [0]
	*($0) = (int_64)0
	$4 = CALL strlen($2)
	$3 = *($1)
	$3 = ( *($1 + [4]) ? uint_32($3 >> [1]) : ($3 & [1]) )
	$8 = ($3 + $4)
	if ( ((uint_32)$8 >= (uint_32)[-16]) ){ goto $label$1 }
	$5 = *($1)
	$6 = *($1 + [8])
	if ( ((uint_32)$8 > (uint_32)[10]) ){ goto $label$4 }
	*($0) = ($3 << [1])
	$8 = ($0 + [1])
	if ( $3 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$7 = (($8 + [16]) & [-16])
	$8 = CALL $138($7)
	*($0) = ($7 | [1])
	*(($0 + [8])) = $8
	*(($0 + [4])) = $3
	if ( ($3 == 0) ){ goto $label$2 }
	
.LABEL $label$3
	CALL memcpy($8, ( $6 ? ($1 + [1]) : ($5 & [1]) ), $3)
	
.LABEL $label$2
	*(($8 + $3)) = [0]
	CALL $142($0, $2, $4)
	return (unreachable)
	
.LABEL $label$1
	CALL $140($0)
}

void .FUNC $36 (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$13 = (*([0] + [4]) - [128])
	*([0] + [4]) = $13
	*(($13 + [120])) = [0]
	*($13 + [112]) = (int_64)0
	$12 = CALL strlen([128])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$2 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$5 }
	*($13 + [112]) = ($12 << [1])
	$11 = (($13 + [112]) | [1])
	if ( $12 ){ goto $label$4 }
	goto $label$3 
	
.LABEL $label$5
	$8 = (($12 + [16]) & [-16])
	$11 = CALL $138($8)
	*($13 + [112]) = ($8 | [1])
	*($13 + [120]) = $11
	*($13 + [116]) = $12
	
.LABEL $label$4
	CALL memcpy($11, [128], $12)
	
.LABEL $label$3
	*(($11 + $12)) = [0]
	if ( ((int_32)$2 < (int_32)[1]) ){ goto $label$6 }
	$4 = ($3 + [1])
	$9 = ($3 + [4])
	$10 = ($3 + [8])
	$12 = $2
	
.LOOP $label$7:
	$11 = *($3)
	$8 = ($11 & [1])
	CALL $142(($13 + [112]), ( *($10) ? $4 : $8 ), ( *($9) ? uint_32($11 >> [1]) : $8 ))
	$12 = ($12 + [-1])
	if ( $12 ){ goto $label$7 }
	
.LABEL $label$6
	$12 = *($1 + [8])
	if ( ((uint_32)$12 > (uint_32)[6]) ){ goto $label$32 }
	goto $label$33 
	
.LABEL $label$33
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$12 = CALL strlen([1584])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$19 }
	*($0) = ($12 << [1])
	$11 = ($0 + [1])
	if ( $12 ){ goto $label$18 }
	goto $label$17 
	
.LABEL $label$32
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$12 = CALL strlen([128])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$25 }
	*($0) = ($12 << [1])
	$11 = ($0 + [1])
	if ( $12 ){ goto $label$24 }
	goto $label$23 
	
.LABEL $label$31
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$12 = CALL strlen([1600])
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$16 }
	*($0) = ($12 << [1])
	$11 = ($0 + [1])
	if ( $12 ){ goto $label$15 }
	goto $label$14 
	
.LABEL $label$30
	*($0) = (int_64)0
	*(($0 + [8])) = [0]
	$11 = CALL strlen([1680])
	if ( ((uint_32)$11 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$11 >= (uint_32)[11]) ){ goto $label$22 }
	*($0) = ($11 << [1])
	$8 = ($0 + [1])
	if ( $11 ){ goto $label$21 }
	goto $label$20 
	
.LABEL $label$29
	CALL $40(($13 + [80]), *($1))
	$12 = CALL $147(($13 + [80]), [0], [1648])
	$11 = ($12 + [8])
	*((($13 + [96]) + [8])) = *($11)
	*($13 + [96]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($11) = [0]
	$12 = CALL $144(($13 + [96]), [1648])
	*($0) = *($12)
	$11 = ($12 + [8])
	*(($0 + [8])) = *($11)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($11) = [0]
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$34 }
	CALL $139(*($13 + [104]))
	
.LABEL $label$34
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$8 }
	CALL $139(*($13 + [88]))
	goto $label$8 
	
.LABEL $label$28
	CALL _ZNSt3__19to_stringEd($0, *($1))
	goto $label$8 
	
.LABEL $label$27
	CALL _ZNSt3__19to_stringEl($0, *($1))
	goto $label$8 
	
.LABEL $label$26
	*($0) = [0]
	*(($0 + [4])) = (int_64)0
	$8 = ( [1728] ? [1744] : *($1) )
	$12 = CALL strlen($8)
	if ( ((uint_32)$12 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$12 >= (uint_32)[11]) ){ goto $label$13 }
	*($0) = ($12 << [1])
	$11 = ($0 + [1])
	if ( $12 ){ goto $label$12 }
	goto $label$11 
	
.LABEL $label$25
	$8 = (($12 + [16]) & [-16])
	$11 = CALL $138($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $11
	*($0 + [4]) = $12
	
.LABEL $label$24
	CALL memcpy($11, [128], $12)
	
.LABEL $label$23
	*(($11 + $12)) = [0]
	goto $label$8 
	
.LABEL $label$22
	$12 = (($11 + [16]) & [-16])
	$8 = CALL $138($12)
	*($0) = ($12 | [1])
	*($0 + [8]) = $8
	*($0 + [4]) = $11
	
.LABEL $label$21
	CALL memcpy($8, [1680], $11)
	
.LABEL $label$20
	$12 = [0]
	*(($8 + $11)) = [0]
	$4 = *($11 + [16])
	$11 = *($1)
	$8 = *($11 + [4])
	$9 = ($8 + (uint_32($4 >> [6]) & [67108860]))
	if ( ((int_32)*($11 + [8]) == (int_32)$8) ){ goto $label$10 }
	$12 = ($4 + *($11 + [20]))
	$10 = (*(($8 + (uint_32($12 >> [6]) & [67108860]))) + (($12 & [255]) << [4]))
	$12 = (*($9) + (($4 & [255]) << [4]))
	goto $label$9 
	
.LABEL $label$19
	$8 = (($12 + [16]) & [-16])
	$11 = CALL $138($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $11
	*($0 + [4]) = $12
	
.LABEL $label$18
	CALL memcpy($11, [1584], $12)
	
.LABEL $label$17
	*(($11 + $12)) = [0]
	goto $label$8 
	
.LABEL $label$16
	$8 = (($12 + [16]) & [-16])
	$11 = CALL $138($8)
	*($0) = ($8 | [1])
	*($0 + [8]) = $11
	*($0 + [4]) = $12
	
.LABEL $label$15
	CALL memcpy($11, [1600], $12)
	
.LABEL $label$14
	*(($11 + $12)) = [0]
	$1 = ($12 + [4])
	$12 = *($1)
	$11 = *($12)
	if ( ((int_32)$11 == (int_32)$1) ){ goto $label$35 }
	$5 = ($2 + [1])
	$7 = (($13 + [96]) | [1])
	$6 = (($13 + [32]) | [1])
	$4 = [1]
	
.LOOP $label$36:
	$8 = $11
	$12 = ($8 + [16])
	if ( ($4 & [1]) ){ goto $label$37 }
	CALL $144($0, [1632])
	
.LABEL $label$37
	CALL $39(($13 + [48]), ($13 + [112]), [1648])
	$12 = *($12)
	$11 = ($12 & [1])
	$12 = CALL $142(($13 + [48]), ( *($8 + [24]) ? ($12 + [1]) : $11 ), ( *($8 + [20]) ? uint_32($12 >> [1]) : $11 ))
	$11 = ($12 + [8])
	*(($9 = (($13 + [64]) + [8]))) = *($11)
	*($13 + [64]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($11) = [0]
	$12 = CALL $144(($13 + [64]), [1664])
	$11 = ($12 + [8])
	*(($10 = (($13 + [80]) + [8]))) = *($11)
	*($13 + [80]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($11) = [0]
	CALL $166(($13 + [16]), $3)
	CALL $36(($13 + [32]), ($8 + [32]), $5, ($13 + [16]))
	$12 = *($13 + [32])
	$4 = ($12 & [1])
	$2 = (($13 + [32]) + [8])
	$12 = CALL $142(($13 + [80]), ( *($2) ? $6 : $4 ), ( *($13 + [36]) ? uint_32($12 >> [1]) : $4 ))
	$4 = ($12 + [8])
	*(($11 = (($13 + [96]) + [8]))) = *($4)
	*($13 + [96]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($4) = [0]
	$12 = *($13 + [96])
	$4 = ($12 & [1])
	CALL $142($0, ( *($11) ? $7 : $4 ), ( *($13 + [100]) ? uint_32($12 >> [1]) : $4 ))
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$38 }
	CALL $139(*($11))
	
.LABEL $label$38
	if ( ((*($13 + [32]) & [1]) == 0) ){ goto $label$39 }
	CALL $139(*($2))
	
.LABEL $label$39
	if ( ((*($13 + [16]) & [1]) == 0) ){ goto $label$40 }
	CALL $139(*((($13 + [16]) + [8])))
	
.LABEL $label$40
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$41 }
	CALL $139(*($10))
	
.LABEL $label$41
	if ( ((*($13 + [64]) & [1]) == 0) ){ goto $label$42 }
	CALL $139(*($9))
	
.LABEL $label$42
	if ( ((*($13 + [48]) & [1]) == 0) ){ goto $label$43 }
	CALL $139(*((($13 + [48]) + [8])))
	
.LABEL $label$43
	$12 = *($8 + [4])
	if ( ($12 == 0) ){ goto $label$45 }
	
.LOOP $label$46:
	$11 = $12
	$12 = *($11)
	if ( $12 ){ goto $label$46 }
	goto $label$44 
	
.LABEL $label$45
	$11 = *($8 + [8])
	if ( ((int_32)*($11) == (int_32)$8) ){ goto $label$44 }
	$8 = ($8 + [8])
	
.LOOP $label$47:
	$12 = *($8)
	$8 = ($12 + [8])
	$11 = *($12 + [8])
	if ( ((int_32)$12 != (int_32)*($11)) ){ goto $label$47 }
	
.LABEL $label$44
	$4 = [0]
	if ( ((int_32)$11 != (int_32)$1) ){ goto $label$36 }
	
.LABEL $label$35
	CALL $152(($13 + [80]), [512], CALL $149(($13 + [112]), [0], [2]))
	$12 = CALL $144(($13 + [80]), [1616])
	$8 = ($12 + [8])
	*(($11 = (($13 + [96]) + [8]))) = *($8)
	*($13 + [96]) = *($12)
	*($12) = [0]
	*(($12 + [4])) = [0]
	*($8) = [0]
	$12 = *($13 + [96])
	$8 = ($12 & [1])
	CALL $142($0, ( *($11) ? (($13 + [96]) | [1]) : $8 ), ( *($13 + [100]) ? uint_32($12 >> [1]) : $8 ))
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$48 }
	CALL $139(*($11))
	
.LABEL $label$48
	if ( ((*($13 + [80]) & [1]) == 0) ){ goto $label$8 }
	CALL $139(*($13 + [88]))
	goto $label$8 
	
.LABEL $label$13
	$3 = (($12 + [16]) & [-16])
	$11 = CALL $138($3)
	*($0) = ($3 | [1])
	*($0 + [8]) = $11
	*($0 + [4]) = $12
	
.LABEL $label$12
	CALL memcpy($11, $8, $12)
	
.LABEL $label$11
	*(($11 + $12)) = [0]
	goto $label$8 
	
.LABEL $label$10
	$10 = [0]
	
.LABEL $label$9
	$2 = ($2 + [1])
	$1 = (($13 + [96]) | [1])
	$4 = (($13 + [96]) + [8])
	$11 = [1]
	if ( ((int_32)$12 == (int_32)$10) ){ goto $label$49 }
	
.LOOP $label$50:
	if ( ($11 & [1]) ){ goto $label$51 }
	CALL $144($0, [1712])
	
.LABEL $label$51
	CALL $166($13, $3)
	CALL $36(($13 + [96]), $12, $2, $13)
	$11 = *($13 + [96])
	$8 = ($11 & [1])
	CALL $142($0, ( *($4) ? $1 : $8 ), ( *($13 + [100]) ? uint_32($11 >> [1]) : $8 ))
	if ( ((*($13 + [96]) & [1]) == 0) ){ goto $label$52 }
	CALL $139(*($4))
	
.LABEL $label$52
	if ( ((*($13) & [1]) == 0) ){ goto $label$53 }
	CALL $139(*(($13 + [8])))
	
.LABEL $label$53
	$11 = [0]
	$12 = ($12 + [16])
	if ( ((int_32)($12 - *($9)) != (int_32)[4096]) ){ goto $label$54 }
	$12 = *($9 + [4])
	$11 = [0]
	$9 = ($9 + [4])
	
.LABEL $label$54
	if ( ((int_32)$12 != (int_32)$10) ){ goto $label$50 }
	
.LABEL $label$49
	CALL $144($0, [1696])
	
.LABEL $label$8
	if ( ((*($13 + [112]) & [1]) == 0) ){ goto $label$55 }
	CALL $139(*($13 + [120]))
	
.LABEL $label$55
	*([0] + [4]) = ($13 + [128])
	return (unreachable)
	
.LABEL $label$2
	CALL $140(($13 + [112]))
	
.LABEL $label$1
	CALL $140($0)
	$12
	(unreachable)
}

int_32 .FUNC $37 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	$7 = (*([0] + [4]) - [16])
	*([0] + [4]) = $7
	CALL $160($7, $0)
	if ( (*($7) == 0) ){ goto $label$1 }
	$2 = ($0 + *((*($0) + [-12])))
	$4 = ($1 + $2)
	$5 = ( $4 ? $1 : ((int_32)(*($2 + [4]) & [176]) == (int_32)[32]) )
	$3 = *($2 + [24])
	$6 = *($2 + [76])
	if ( ((int_32)$6 != (int_32)[-1]) ){ goto $label$2 }
	CALL _ZNKSt3__18ios_base6getlocEv(($7 + [8]), $2)
	$6 = CALL _ZNKSt3__16locale9use_facetERNS0_2idE(($7 + [8]), [12156])
	$6 = CALL int_32 $6((int_32 [32]), (int_32 *(*($6) + [28])))
	CALL _ZNSt3__16localeD2Ev(($7 + [8]))
	*(($2 + [76])) = $6
	
.LABEL $label$2
	if ( CALL $38($3, $1, $5, $4, $2, int_32(($6 << [24]) >> [24])) ){ goto $label$1 }
	$2 = ($0 + *((*($0) + [-12])))
	CALL _ZNSt3__18ios_base5clearEj($2, (*($2 + [16]) | [5]))
	
.LABEL $label$1
	CALL $164($7)
	*([0] + [4]) = ($7 + [16])
	return $0
}

void .FUNC _ZN4json6ObjectEv (int_32 $0)
{
	int_32 $1
	int_32 $2
	$2 = (*([0] + [4]) - [16])
	*([0] + [4]) = $2
	*($2 + [8]) = [0]
	*($2) = [0]
	CALL $30($2)
	*(($1 = CALL $138([12])) + [8]) = [0]
	*($1 + [4]) = [0]
	*($1) = ($1 + [4])
	*($0 + [8]) = [1]
	*($2) = $1
	*($0) = *($2)
	*($2) = [0]
	*($2 + [8]) = [0]
	CALL $31($2)
	*([0] + [4]) = ($2 + [16])
}

int_32 .FUNC _ZN4jsonlsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_4JSONE (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = (*([0] + [4]) - [32])
	*([0] + [4]) = $5
	*(($5 + [8])) = [0]
	*($5) = (int_64)0
	$2 = CALL strlen([480])
	if ( ((uint_32)$2 >= (uint_32)[-16]) ){ goto $label$1 }
	if ( ((uint_32)$2 >= (uint_32)[11]) ){ goto $label$4 }
	*($5) = ($2 << [1])
	$4 = ($5 | [1])
	if ( $2 ){ goto $label$3 }
	goto $label$2 
	
.LABEL $label$4
	$3 = (($2 + [16]) & [-16])
	$4 = CALL $138($3)
	*($5) = ($3 | [1])
	*($5 + [8]) = $4
	*($5 + [4]) = $2
	
.LABEL $label$3
	CALL memcpy($4, [480], $2)
	
.LABEL $label$2
	*(($4 + $2)) = [0]
	CALL $36(($5 + [16]), $1, [1], $5)
	$2 = *($5 + [16])
	$4 = ($2 & [1])
	CALL $37($0, ( *($5 + [24]) ? (($5 + [16]) | [1]) : $4 ), ( *($5 + [20]) ? uint_32($2 >> [1]) : $4 ))
	if ( ((*($5 + [16]) & [1]) == 0) ){ goto $label$5 }
	CALL $139(*(($5 + [24])))
	
.LABEL $label$5
	if ( ((*($5) & [1]) == 0) ){ goto $label$6 }
	CALL $139(*($5 + [8]))
	
.LABEL $label$6
	*([0] + [4]) = ($5 + [32])
	return $0
	
.LABEL $label$1
	CALL $140($5)
	return (unreachable)
}

void .FUNC $32 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$1 = *($0 + [16])
	$4 = *($0 + [4])
	$3 = ($4 + (uint_32($1 >> [6]) & [67108860]))
	if ( ((int_32)*($0 + [8]) == (int_32)$4) ){ goto $label$2 }
	$2 = ($1 + *($0 + [20]))
	$2 = (*(($4 + (uint_32($2 >> [6]) & [67108860]))) + (($2 & [255]) << [4]))
	$4 = (*($3) + (($1 & [255]) << [4]))
	goto $label$1 
	
.LABEL $label$2
	$4 = [0]
	$2 = [0]
	
.LABEL $label$1
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$3 }
	
.LOOP $label$4:
	$4 = (CALL $31($4) + [16])
	if ( ((int_32)($4 - *($3)) != (int_32)[4096]) ){ goto $label$5 }
	$4 = *($3 + [4])
	$3 = ($3 + [4])
	
.LABEL $label$5
	if ( ((int_32)$4 != (int_32)$2) ){ goto $label$4 }
	
.LABEL $label$3
	*(($0 + [20])) = [0]
	$3 = ($0 + [4])
	$4 = *($3)
	$1 = ($0 + [8])
	$2 = int_32((*($1) - $4) >> [2])
	if ( ($2 <= [3]) ){ goto $label$6 }
	
.LOOP $label$7:
	CALL $139(*($4))
	$4 = (*($3) + [4])
	*($3) = $4
	$2 = int_32((*($1) - $4) >> [2])
	if ( ((uint_32)$2 > (uint_32)[2]) ){ goto $label$7 }
	
.LABEL $label$6
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$10 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$8 }
	$4 = [128]
	goto $label$9 
	
.LABEL $label$10
	$4 = [256]
	
.LABEL $label$9
	*(($0 + [16])) = $4
	
.LABEL $label$8
}

void .FUNC $33 (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $33($0, *($1))
	CALL $33($0, *($1 + [4]))
	CALL $31(($1 + [32]))
	if ( ((*($1 + [16]) & [1]) == 0) ){ goto $label$2 }
	CALL $139(*(($1 + [24])))
	
.LABEL $label$2
	CALL $139($1)
	
.LABEL $label$1
}

void .FUNC $30 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	$2 = *($0 + [8])
	if ( ((int_32)$2 == (int_32)[3]) ){ goto $label$3 }
	if ( ((int_32)$2 == (int_32)[2]) ){ goto $label$2 }
	if ( ((int_32)$2 != (int_32)[1]) ){ goto $label$1 }
	$0 = *($0)
	if ( ($0 == 0) ){ goto $label$1 }
	CALL $33($0, *($0 + [4]))
	CALL $139($0)
	return 
	
.LABEL $label$3
	$0 = *($0)
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((*($0) & [1]) == 0) ){ goto $label$4 }
	CALL $139(*($0 + [8]))
	
.LABEL $label$4
	CALL $139($0)
	return 
	
.LABEL $label$2
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $32($1)
	$2 = *($1 + [8])
	$0 = *($1 + [4])
	if ( ((int_32)$0 == (int_32)$2) ){ goto $label$5 }
	
.LOOP $label$6:
	CALL $139(*($0))
	$0 = ($0 + [4])
	if ( ((int_32)$2 != (int_32)$0) ){ goto $label$6 }
	$3 = *(($1 + [4]))
	$2 = ($1 + [8])
	$0 = *($2)
	if ( ((int_32)$0 == (int_32)$3) ){ goto $label$5 }
	*($2) = ($0 + (((int_32)(($0 + [-4]) - $3) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$5
	$0 = *($1)
	if ( ($0 == 0) ){ goto $label$7 }
	CALL $139($0)
	
.LABEL $label$7
	CALL $139($1)
	return 
	
.LABEL $label$1
}

int_32 .FUNC $31 (int_32 $0)
{
	int_32 $1
	int_32 $2
	int_32 $3
	int_32 $4
	$4 = *($0 + [8])
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$3 }
	if ( ((int_32)$4 == (int_32)[3]) ){ goto $label$2 }
	if ( ((int_32)$4 != (int_32)[2]) ){ goto $label$1 }
	$1 = *($0)
	if ( ($1 == 0) ){ goto $label$1 }
	CALL $32($1)
	$2 = *($1 + [8])
	$4 = *($1 + [4])
	if ( ((int_32)$4 == (int_32)$2) ){ goto $label$4 }
	
.LOOP $label$5:
	CALL $139(*($4))
	$4 = ($4 + [4])
	if ( ((int_32)$2 != (int_32)$4) ){ goto $label$5 }
	$3 = *(($1 + [4]))
	$2 = ($1 + [8])
	$4 = *($2)
	if ( ((int_32)$4 == (int_32)$3) ){ goto $label$4 }
	*($2) = ($4 + (((int_32)(($4 + [-4]) - $3) ^ (int_32)[-1]) & [-4]))
	
.LABEL $label$4
	$4 = *($1)
	if ( ($4 == 0) ){ goto $label$6 }
	CALL $139($4)
	
.LABEL $label$6
	CALL $139($1)
	return $0
	
.LABEL $label$3
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$1 }
	CALL $33($4, *($4 + [4]))
	CALL $139($4)
	return $0
	
.LABEL $label$2
	$4 = *($0)
	if ( ($4 == 0) ){ goto $label$1 }
	if ( ((*($4) & [1]) == 0) ){ goto $label$7 }
	CALL $139(*($4 + [8]))
	
.LABEL $label$7
	CALL $139($4)
	
.LABEL $label$1
	return $0
}

int_32 .FUNC __stpcpy (int_32 $0, int_32 $1)
{
	int_32 $2
	if ( (((int_32)$1 ^ (int_32)$0) & [3]) ){ goto $label$2 }
	if ( (($1 & [3]) == 0) ){ goto $label$3 }
	
.LOOP $label$4:
	$2 = *($1)
	*($0) = $2
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ($1 & [3]) ){ goto $label$4 }
	
.LABEL $label$3
	$2 = *($1)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$2 }
	
.LOOP $label$5:
	*($0) = $2
	$0 = ($0 + [4])
	$1 = ($1 + [4])
	$2 = *($1)
	if ( (((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) == 0) ){ goto $label$5 }
	
.LABEL $label$2
	$2 = *($1)
	*($0) = $2
	if ( ($2 == 0) ){ goto $label$1 }
	$1 = ($1 + [1])
	
.LOOP $label$6:
	$2 = *($1)
	*(($0 = ($0 + [1]))) = $2
	$1 = ($1 + [1])
	if ( $2 ){ goto $label$6 }
	
.LABEL $label$1
	return $0
}

int_32 .FUNC strcpy (int_32 $0, int_32 $1)
{
	CALL __stpcpy($0, $1)
	return $0
}

int_32 .FUNC strncpy (int_32 $0, int_32 $1, int_32 $2)
{
	CALL __stpncpy($0, $1, $2)
	return $0
}

int_32 .FUNC strncmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	if ( ($2 == 0) ){ goto $label$3 }
	$5 = [0]
	$3 = *($0)
	if ( ($3 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$2 = ([1] - $2)
	
.LOOP $label$4:
	$4 = *($1)
	if ( ((int_32)($3 & [255]) != (int_32)$4) ){ goto $label$2 }
	if ( ($2 == 0) ){ goto $label$2 }
	if ( ($4 == 0) ){ goto $label$2 }
	$2 = ($2 + [1])
	$1 = ($1 + [1])
	$3 = *($0)
	$0 = ($0 + [1])
	if ( $3 ){ goto $label$4 }
	goto $label$1 
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	$5 = $3
	
.LABEL $label$1
	return (($5 & [255]) - *($1))
}

int_32 .FUNC strchr (int_32 $0, int_32 $1)
{
	$0 = CALL __strchrnul($0, $1)
	return ( $0 ? [0] : ((int_32)*($0) == (int_32)($1 & [255])) )
}

int_32 .FUNC memcmp (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	$5 = [0]
	if ( ($2 == 0) ){ goto $label$1 }
	
.LOOP $label$3:
	$4 = *($1)
	$3 = *($0)
	if ( ((int_32)$3 != (int_32)$4) ){ goto $label$2 }
	$1 = ($1 + [1])
	$0 = ($0 + [1])
	$2 = ($2 + [-1])
	if ( $2 ){ goto $label$3 }
	goto $label$1 
	
.LABEL $label$2
	$5 = ($3 - $4)
	
.LABEL $label$1
	return $5
}

int_32 .FUNC vsnprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	int_32 $5
	$4 = (*([0] + [4]) - [160])
	*([0] + [4]) = $4
	$5 = [-1]
	*($4 + [148]) = ( ($1 + [-1]) ? [0] : $1 )
	$0 = ( $0 ? ($4 + [158]) : $1 )
	*($4 + [144]) = $0
	*(($4 = CALL memset($4, [0], [144])) + [36]) = [6]
	*($4 + [75]) = [255]
	*($4 + [76]) = [-1]
	*($4 + [44]) = ($4 + [159])
	*($4 + [84]) = ($4 + [144])
	if ( ((int_32)$1 <= (int_32)[-1]) ){ goto $label$2 }
	*($0) = [0]
	$5 = CALL vfprintf($4, $2, $3)
	goto $label$1 
	
.LABEL $label$2
	*(CALL __errno_location()) = [75]
	
.LABEL $label$1
	*([0] + [4]) = ($4 + [160])
	return $5
}

int_32 .FUNC $199 (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$4 = *($0 + [28])
	$6 = (*($0 + [20]) - $4)
	$3 = *($0 + [84])
	$5 = *($3 + [4])
	$6 = ( $5 ? $6 : ($5 <= $6) )
	if ( ($6 == 0) ){ goto $label$1 }
	CALL memcpy(*($3), $4, $6)
	*($3) = (*($3) + $6)
	$5 = (*($5) - $6)
	*(($5 = ($3 + [4]))) = $5
	
.LABEL $label$1
	$6 = *($3)
	$5 = ( $5 ? $2 : ($5 <= $2) )
	if ( ($5 == 0) ){ goto $label$2 }
	CALL memcpy($6, $1, $5)
	$6 = (*($3) + $5)
	*($3) = $6
	*(($3 = ($3 + [4]))) = (*($3) - $5)
	
.LABEL $label$2
	*($6) = [0]
	$3 = *($0 + [44])
	*(($0 + [28])) = $3
	*(($0 + [20])) = $3
	return $2
}

int_32 .FUNC __towrite (int_32 $0)
{
	int_32 $1
	$1 = *($0 + [74])
	*($0 + [74]) = (($1 + [255]) | $1)
	$1 = *($0)
	if ( ($1 & [8]) ){ goto $label$1 }
	*($0 + [4 align=4]) = (int_64)0
	$1 = *($0 + [44])
	*($0 + [28]) = $1
	*($0 + [20]) = $1
	*($0 + [16]) = ($1 + *($0 + [48]))
	return [0]
	
.LABEL $label$1
	*($0) = ($1 | [32])
	return [-1]
}

int_32 .FUNC snprintf (int_32 $0, int_32 $1, int_32 $2, int_32 $3)
{
	int_32 $4
	$4 = (*([0] + [4]) - [16])
	*([0] + [4]) = $4
	*($4 + [12]) = $3
	$3 = CALL vsnprintf($0, $1, $2, $3)
	*([0] + [4]) = ($4 + [16])
	return $3
}

int_32 .FUNC __mo_lookup (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	int_32 $7
	int_32 $8
	int_32 $9
	int_32 $10
	int_32 $11
	int_32 $12
	int_32 $13
	$3 = *($0)
	$10 = ((int_32)$3 == (int_32)[-1794895138])
	$9 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	$4 = *($0 + [8])
	$5 = ( $4 ? $9 : $10 )
	if ( ((uint_32)$5 >= (uint_32)uint_32($1 >> [2])) ){ goto $label$4 }
	$12 = ($1 - ($5 << [2]))
	$11 = *($0 + [12])
	$6 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$6 >= (uint_32)$12) ){ goto $label$3 }
	$11 = *($0 + [16])
	$10 = ( $11 ? ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24]))) : $10 )
	if ( ((uint_32)$10 >= (uint_32)$12) ){ goto $label$2 }
	if ( ((($10 | $6) & [3]) == 0) ){ goto $label$1 }
	return [0]
	
.LABEL $label$4
	return [0]
	
.LABEL $label$3
	return [0]
	
.LABEL $label$2
	return [0]
	
.LABEL $label$1
	$12 = uint_32($6 >> [2])
	if ( ((int_32)$3 != (int_32)[-1794895138]) ){ goto $label$16 }
	$5 = uint_32($5 >> [1])
	$6 = ($5 << [1])
	$9 = ($0 + (($6 + $12) << [2]))
	$11 = *(($9 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$15 }
	$8 = *($9)
	if ( ((uint_32)$8 >= (uint_32)($1 - $11)) ){ goto $label$14 }
	$9 = $5
	$7 = [0]
	
.LOOP $label$17:
	if ( *(($0 + ($11 + $8))) ){ goto $label$9 }
	$11 = CALL strcmp($2, ($0 + $11))
	if ( ($11 == 0) ){ goto $label$11 }
	if ( ((int_32)$4 == (int_32)[1]) ){ goto $label$7 }
	$13 = [0]
	$4 = ( $9 ? ($4 - $9) : $11 )
	$9 = uint_32($4 >> [1])
	$11 = ((int_32)$11 < (int_32)[0])
	$7 = ( $7 ? $5 : $11 )
	$5 = ($7 + $9)
	$6 = ($5 << [1])
	$8 = ($0 + (($6 + $12) << [2]))
	$11 = *(($8 + [4]))
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$10 }
	$8 = *($8)
	if ( ($8 <= ($1 - $11)) ){ goto $label$17 }
	goto $label$10 
	
.LABEL $label$16
	$8 = uint_32($9 >> [1])
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$13 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ((uint_32)$11 >= (uint_32)($1 - $4)) ){ goto $label$12 }
	$5 = $8
	$7 = [0]
	
.LOOP $label$18:
	if ( *(($0 + ($4 + $11))) ){ goto $label$8 }
	$4 = CALL strcmp($2, ($0 + $4))
	if ( ($4 == 0) ){ goto $label$11 }
	if ( ((int_32)$9 == (int_32)[1]) ){ goto $label$6 }
	$13 = [0]
	$9 = ( $5 ? ($9 - $5) : $4 )
	$5 = uint_32($9 >> [1])
	$4 = ((int_32)$4 < (int_32)[0])
	$7 = ( $7 ? $8 : $4 )
	$8 = ($7 + $5)
	$6 = ($8 << [1])
	$11 = ($0 + (($6 + $12) << [2]))
	$4 = *(($11 + [4]))
	$4 = ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24])))
	if ( ((uint_32)$4 >= (uint_32)$1) ){ goto $label$10 }
	$11 = *($11)
	$11 = ((($11 << [24]) | (($11 << [8]) & [16711680])) | ((uint_32($11 >> [8]) & [65280]) | uint_32($11 >> [24])))
	if ( ($11 <= ($1 - $4)) ){ goto $label$18 }
	goto $label$10 
	
.LABEL $label$15
	return [0]
	
.LABEL $label$14
	return [0]
	
.LABEL $label$13
	return [0]
	
.LABEL $label$12
	return [0]
	
.LABEL $label$11
	$9 = ((int_32)$3 == (int_32)[-1794895138])
	$10 = ($0 + (($6 + uint_32($10 >> [2])) << [2]))
	$4 = *(($10 + [4]))
	$11 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$11 >= (uint_32)$1) ){ goto $label$5 }
	$13 = [0]
	$4 = *($10)
	$4 = ( $4 ? ((($4 << [24]) | (($4 << [8]) & [16711680])) | ((uint_32($4 >> [8]) & [65280]) | uint_32($4 >> [24]))) : $9 )
	if ( ((uint_32)$4 >= (uint_32)($1 - $11)) ){ goto $label$10 }
	return ( [0] ? ($0 + $11) : *(($0 + ($11 + $4))) )
	
.LABEL $label$10
	return $13
	
.LABEL $label$9
	return [0]
	
.LABEL $label$8
	return [0]
	
.LABEL $label$7
	return [0]
	
.LABEL $label$6
	return [0]
	
.LABEL $label$5
	return [0]
}

int_32 .FUNC strcmp (int_32 $0, int_32 $1)
{
	int_32 $2
	int_32 $3
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	if ( ((int_32)$2 != (int_32)($3 & [255])) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	
.LOOP $label$2:
	$3 = *($1)
	$2 = *($0)
	if ( ($2 == 0) ){ goto $label$1 }
	$0 = ($0 + [1])
	$1 = ($1 + [1])
	if ( ((int_32)$2 == (int_32)($3 & [255])) ){ goto $label$2 }
	
.LABEL $label$1
	return ($2 - ($3 & [255]))
}

int_32 .FUNC __lctrans (int_32 $0, int_32 $1)
{
	return CALL __lctrans_impl($0, $1)
}

int_32 .FUNC __lctrans_impl (int_32 $0, int_32 $1)
{
	if ( ($1 == 0) ){ goto $label$1 }
	$1 = CALL __mo_lookup(*($1), *($1 + [4]), $0)
	return ( $1 ? $0 : $1 )
	
.LABEL $label$1
	return ( [0] ? $0 : [0] )
}

int_32 .FUNC wcrtomb (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	$3 = [1]
	if ( ($0 == 0) ){ goto $label$1 }
	if ( ((uint_32)$1 > (uint_32)[127]) ){ goto $label$2 }
	*($0) = $1
	return [1]
	
.LABEL $label$2
	if ( (*([0]) == 0) ){ goto $label$8 }
	if ( ((uint_32)$1 > (uint_32)[2047]) ){ goto $label$7 }
	*($0 + [1]) = (($1 & [63]) | [128])
	*($0) = (uint_32($1 >> [6]) | [192])
	return [2]
	
.LABEL $label$8
	if ( ((int_32)($1 & [-128]) != (int_32)[57216]) ){ goto $label$6 }
	*($0) = $1
	return [1]
	
.LABEL $label$7
	if ( ($1 <= [55296]) ){ goto $label$5 }
	if ( ((int_32)($1 & [-8192]) == (int_32)[57344]) ){ goto $label$5 }
	if ( ((uint_32)($1 + [-65536]) > (uint_32)[1048575]) ){ goto $label$4 }
	*($0) = (uint_32($1 >> [18]) | [240])
	*($0 + [3]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [12]) & [63]) | [128])
	*($0 + [2]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [4]
	
.LABEL $label$6
	*(CALL __errno_location()) = [84]
	goto $label$3 
	
.LABEL $label$5
	*($0) = (uint_32($1 >> [12]) | [224])
	*($0 + [2]) = (($1 & [63]) | [128])
	*($0 + [1]) = ((uint_32($1 >> [6]) & [63]) | [128])
	return [3]
	
.LABEL $label$4
	*(CALL __errno_location()) = [84]
	
.LABEL $label$3
	$3 = [-1]
	
.LABEL $label$1
	return $3
}

int_32 .FUNC memchr (int_32 $0, int_32 $1, int_32 $2)
{
	int_32 $3
	int_32 $4
	int_32 $5
	int_32 $6
	$6 = [0]
	$4 = ((int_32)$2 != (int_32)[0])
	if ( ($2 == 0) ){ goto $label$6 }
	if ( (($0 & [3]) == 0) ){ goto $label$5 }
	$3 = ($1 & [255])
	
.LOOP $label$7:
	if ( ((int_32)*($0) == (int_32)$3) ){ goto $label$3 }
	$4 = ((int_32)$2 != (int_32)[1])
	$5 = ($2 + [-1])
	$0 = ($0 + [1])
	if ( ((int_32)$2 == (int_32)[1]) ){ goto $label$4 }
	$2 = $5
	if ( ($0 & [3]) ){ goto $label$7 }
	goto $label$4 
	
.LABEL $label$6
	$5 = $2
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$5
	$5 = $2
	
.LABEL $label$4
	if ( $4 ){ goto $label$2 }
	goto $label$1 
	
.LABEL $label$3
	$5 = $2
	
.LABEL $label$2
	if ( ((int_32)*($0) == (int_32)($1 & [255])) ){ goto $label$8 }
	if ( ($5 <= [4]) ){ goto $label$10 }
	$4 = ((int_32)($1 & [255]) * (int_32)[16843009])
	
.LOOP $label$11:
	$2 = ((int_32)*($0) ^ (int_32)$4)
	if ( ((((int_32)$2 ^ (int_32)[-1]) & ($2 + [-16843009])) & [-2139062144]) ){ goto $label$9 }
	$0 = ($0 + [4])
	$5 = ($5 + [-4])
	if ( ((uint_32)$5 > (uint_32)[3]) ){ goto $label$11 }
	
.LABEL $label$10
	if ( ($5 == 0) ){ goto $label$1 }
	
.LABEL $label$9
	$2 = ($1 & [255])
	
.LOOP $label$12:
	if ( ((int_32)*($0) == (int_32)$2) ){ goto $label$8 }
	$0 = ($0 + [1])
	$5 = ($5 + [-1])
	if ( $5 ){ goto $label$12 }
	goto $label$1 
	
.LABEL $label$8
	$6 = $5
	
.LABEL $label$1
	return ( $0 ? [0] : $6 )
}